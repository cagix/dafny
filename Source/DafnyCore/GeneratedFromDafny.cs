// Dafny program the_program compiled into C#
// To recompile, you will need the libraries
//     System.Runtime.Numerics.dll System.Collections.Immutable.dll
// but the 'dotnet' tool in net6.0 should pick those up automatically.
// Optionally, you may want to include compiler switches like
//     /debug /nowarn:162,164,168,183,219,436,1717,1718

using System;
using System.Numerics;
using System.Collections;
namespace Formatting {

  public partial class __default {
    public static System.String ReindentProgramFromFirstToken(Microsoft.Dafny.IToken firstToken, Formatting.IIndentationFormatter reindent)
    {
      System.String s = default(System.String);
      Microsoft.Dafny.IToken token;
      token = firstToken;
      System.Text.StringBuilder sb;
      System.Text.StringBuilder _nw0 = new System.Text.StringBuilder();
      sb = _nw0;
      while ((token) != (object) ((Microsoft.Dafny.IToken)null)) {
        System.String newLeadingTrivia;
        newLeadingTrivia = (reindent).GetNewLeadingTrivia(token);
        System.String newTrailingTrivia;
        newTrailingTrivia = (reindent).GetNewTrailingTrivia(token);
        (sb).Append(newLeadingTrivia);
        (sb).Append(token.val);
        (sb).Append(newTrailingTrivia);
        token = token.Next;
      }
      System.String _out0;
      _out0 = (sb).ToString().ToString();
      s = _out0;
      return s;
    }
  }

  public interface IIndentationFormatter {
    System.String GetNewLeadingTrivia(Microsoft.Dafny.IToken token);
    System.String GetNewTrailingTrivia(Microsoft.Dafny.IToken token);
  }
  public class _Companion_IIndentationFormatter {
  }
} // end of namespace Formatting


namespace Std.Wrappers {

  public partial class __default {
    public static Std.Wrappers._IOutcomeResult<__E> Need<__E>(bool condition, __E error)
    {
      if (condition) {
        return Std.Wrappers.OutcomeResult<__E>.create_Pass_k();
      } else {
        return Std.Wrappers.OutcomeResult<__E>.create_Fail_k(error);
      }
    }
  }

  public interface _IOption<out T> {
    bool is_None { get; }
    bool is_Some { get; }
    T dtor_value { get; }
    _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0);
    bool IsFailure();
    Std.Wrappers._IOption<__U> PropagateFailure<__U>();
    T Extract();
    Std.Wrappers._IResult<T, __E> ToResult<__E>(__E error);
    Std.Wrappers._IOutcome<__E> ToOutcome<__E>(__E error);
  }
  public abstract class Option<T> : _IOption<T> {
    public Option() {
    }
    public static Std.Wrappers._IOption<T> Default() {
      return create_None();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOption<T>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOption<T>>(Std.Wrappers.Option<T>.Default());
    }
    public static _IOption<T> create_None() {
      return new Option_None<T>();
    }
    public static _IOption<T> create_Some(T @value) {
      return new Option_Some<T>(@value);
    }
    public bool is_None { get { return this is Option_None<T>; } }
    public bool is_Some { get { return this is Option_Some<T>; } }
    public T dtor_value {
      get {
        var d = this;
        return ((Option_Some<T>)d)._value;
      }
    }
    public abstract _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0);
    public bool IsFailure() {
      return (this).is_None;
    }
    public Std.Wrappers._IOption<__U> PropagateFailure<__U>() {
      return Std.Wrappers.Option<__U>.create_None();
    }
    public T Extract() {
      return (this).dtor_value;
    }
    public static T GetOr(Std.Wrappers._IOption<T> _this, T @default) {
      Std.Wrappers._IOption<T> _source0 = _this;
      if (_source0.is_None) {
        return @default;
      } else {
        T __mcc_h0 = _source0.dtor_value;
        T v = __mcc_h0;
        return v;
      }
    }
    public Std.Wrappers._IResult<T, __E> ToResult<__E>(__E error) {
      Std.Wrappers._IOption<T> _source1 = this;
      if (_source1.is_None) {
        return Std.Wrappers.Result<T, __E>.create_Failure(error);
      } else {
        T __mcc_h0 = _source1.dtor_value;
        T v = __mcc_h0;
        return Std.Wrappers.Result<T, __E>.create_Success(v);
      }
    }
    public Std.Wrappers._IOutcome<__E> ToOutcome<__E>(__E error) {
      Std.Wrappers._IOption<T> _source2 = this;
      if (_source2.is_None) {
        return Std.Wrappers.Outcome<__E>.create_Fail(error);
      } else {
        T __mcc_h0 = _source2.dtor_value;
        T v = __mcc_h0;
        return Std.Wrappers.Outcome<__E>.create_Pass();
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IOption<T> _this, Func<Std.Wrappers._IOption<T>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IOption<T>, __FC>>(rewrap)(_this);
    }
  }
  public class Option_None<T> : Option<T> {
    public Option_None() : base() {
    }
    public override _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0) {
      if (this is _IOption<__T> dt) { return dt; }
      return new Option_None<__T>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Option_None<T>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Option.None";
      return s;
    }
  }
  public class Option_Some<T> : Option<T> {
    public readonly T _value;
    public Option_Some(T @value) : base() {
      this._value = @value;
    }
    public override _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0) {
      if (this is _IOption<__T> dt) { return dt; }
      return new Option_Some<__T>(converter0(_value));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Option_Some<T>;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Option.Some";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }

  public interface _IResult<out R, out E> {
    bool is_Success { get; }
    bool is_Failure { get; }
    R dtor_value { get; }
    E dtor_error { get; }
    _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1);
    bool IsFailure();
    Std.Wrappers._IResult<__U, E> PropagateFailure<__U>();
    R Extract();
    Std.Wrappers._IOption<R> ToOption();
    Std.Wrappers._IOutcome<E> ToOutcome();
  }
  public abstract class Result<R, E> : _IResult<R, E> {
    public Result() {
    }
    public static Std.Wrappers._IResult<R, E> Default(R _default_R) {
      return create_Success(_default_R);
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IResult<R, E>> _TypeDescriptor(Dafny.TypeDescriptor<R> _td_R) {
      return new Dafny.TypeDescriptor<Std.Wrappers._IResult<R, E>>(Std.Wrappers.Result<R, E>.Default(_td_R.Default()));
    }
    public static _IResult<R, E> create_Success(R @value) {
      return new Result_Success<R, E>(@value);
    }
    public static _IResult<R, E> create_Failure(E error) {
      return new Result_Failure<R, E>(error);
    }
    public bool is_Success { get { return this is Result_Success<R, E>; } }
    public bool is_Failure { get { return this is Result_Failure<R, E>; } }
    public R dtor_value {
      get {
        var d = this;
        return ((Result_Success<R, E>)d)._value;
      }
    }
    public E dtor_error {
      get {
        var d = this;
        return ((Result_Failure<R, E>)d)._error;
      }
    }
    public abstract _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1);
    public bool IsFailure() {
      return (this).is_Failure;
    }
    public Std.Wrappers._IResult<__U, E> PropagateFailure<__U>() {
      return Std.Wrappers.Result<__U, E>.create_Failure((this).dtor_error);
    }
    public R Extract() {
      return (this).dtor_value;
    }
    public static R GetOr(Std.Wrappers._IResult<R, E> _this, R @default) {
      Std.Wrappers._IResult<R, E> _source3 = _this;
      if (_source3.is_Success) {
        R _10___mcc_h0 = _source3.dtor_value;
        R _11_s = _10___mcc_h0;
        return _11_s;
      } else {
        E _12___mcc_h1 = _source3.dtor_error;
        E _13_e = _12___mcc_h1;
        return @default;
      }
    }
    public Std.Wrappers._IOption<R> ToOption() {
      Std.Wrappers._IResult<R, E> _source4 = this;
      if (_source4.is_Success) {
        R _14___mcc_h0 = _source4.dtor_value;
        R _15_s = _14___mcc_h0;
        return Std.Wrappers.Option<R>.create_Some(_15_s);
      } else {
        E _16___mcc_h1 = _source4.dtor_error;
        E _17_e = _16___mcc_h1;
        return Std.Wrappers.Option<R>.create_None();
      }
    }
    public Std.Wrappers._IOutcome<E> ToOutcome() {
      Std.Wrappers._IResult<R, E> _source5 = this;
      if (_source5.is_Success) {
        R _18___mcc_h0 = _source5.dtor_value;
        R _19_s = _18___mcc_h0;
        return Std.Wrappers.Outcome<E>.create_Pass();
      } else {
        E _20___mcc_h1 = _source5.dtor_error;
        E _21_e = _20___mcc_h1;
        return Std.Wrappers.Outcome<E>.create_Fail(_21_e);
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IResult<R, E> _this, Func<Std.Wrappers._IResult<R, E>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IResult<R, E>, __FC>>(rewrap)(_this);
    }
    public static Std.Wrappers._IResult<R, __NewE> MapFailure<__NewE>(Std.Wrappers._IResult<R, E> _this, Func<E, __NewE> reWrap) {
      Std.Wrappers._IResult<R, E> _source6 = _this;
      if (_source6.is_Success) {
        R _22___mcc_h0 = _source6.dtor_value;
        R _23_s = _22___mcc_h0;
        return Std.Wrappers.Result<R, __NewE>.create_Success(_23_s);
      } else {
        E _24___mcc_h1 = _source6.dtor_error;
        E _25_e = _24___mcc_h1;
        return Std.Wrappers.Result<R, __NewE>.create_Failure(Dafny.Helpers.Id<Func<E, __NewE>>(reWrap)(_25_e));
      }
    }
  }
  public class Result_Success<R, E> : Result<R, E> {
    public readonly R _value;
    public Result_Success(R @value) : base() {
      this._value = @value;
    }
    public override _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1) {
      if (this is _IResult<__R, __E> dt) { return dt; }
      return new Result_Success<__R, __E>(converter0(_value));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Result_Success<R, E>;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Result.Success";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Result_Failure<R, E> : Result<R, E> {
    public readonly E _error;
    public Result_Failure(E error) : base() {
      this._error = error;
    }
    public override _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1) {
      if (this is _IResult<__R, __E> dt) { return dt; }
      return new Result_Failure<__R, __E>(converter1(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Result_Failure<R, E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Result.Failure";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }

  public interface _IOutcome<out E> {
    bool is_Pass { get; }
    bool is_Fail { get; }
    E dtor_error { get; }
    _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0);
    bool IsFailure();
    Std.Wrappers._IOutcome<E> PropagateFailure();
    Std.Wrappers._IOption<__R> ToOption<__R>(__R r);
    Std.Wrappers._IResult<__R, E> ToResult<__R>(__R r);
  }
  public abstract class Outcome<E> : _IOutcome<E> {
    public Outcome() {
    }
    public static Std.Wrappers._IOutcome<E> Default() {
      return create_Pass();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOutcome<E>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOutcome<E>>(Std.Wrappers.Outcome<E>.Default());
    }
    public static _IOutcome<E> create_Pass() {
      return new Outcome_Pass<E>();
    }
    public static _IOutcome<E> create_Fail(E error) {
      return new Outcome_Fail<E>(error);
    }
    public bool is_Pass { get { return this is Outcome_Pass<E>; } }
    public bool is_Fail { get { return this is Outcome_Fail<E>; } }
    public E dtor_error {
      get {
        var d = this;
        return ((Outcome_Fail<E>)d)._error;
      }
    }
    public abstract _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0);
    public bool IsFailure() {
      return (this).is_Fail;
    }
    public Std.Wrappers._IOutcome<E> PropagateFailure() {
      return this;
    }
    public Std.Wrappers._IOption<__R> ToOption<__R>(__R r) {
      Std.Wrappers._IOutcome<E> _source7 = this;
      if (_source7.is_Pass) {
        return Std.Wrappers.Option<__R>.create_Some(r);
      } else {
        E _26___mcc_h0 = _source7.dtor_error;
        E _27_e = _26___mcc_h0;
        return Std.Wrappers.Option<__R>.create_None();
      }
    }
    public Std.Wrappers._IResult<__R, E> ToResult<__R>(__R r) {
      Std.Wrappers._IOutcome<E> _source8 = this;
      if (_source8.is_Pass) {
        return Std.Wrappers.Result<__R, E>.create_Success(r);
      } else {
        E _28___mcc_h0 = _source8.dtor_error;
        E _29_e = _28___mcc_h0;
        return Std.Wrappers.Result<__R, E>.create_Failure(_29_e);
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IOutcome<E> _this, Func<Std.Wrappers._IOutcome<E>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IOutcome<E>, __FC>>(rewrap)(_this);
    }
    public static Std.Wrappers._IResult<__T, __NewE> MapFailure<__T, __NewE>(Std.Wrappers._IOutcome<E> _this, Func<E, __NewE> rewrap, __T @default)
    {
      Std.Wrappers._IOutcome<E> _source9 = _this;
      if (_source9.is_Pass) {
        return Std.Wrappers.Result<__T, __NewE>.create_Success(@default);
      } else {
        E _30___mcc_h0 = _source9.dtor_error;
        E _31_e = _30___mcc_h0;
        return Std.Wrappers.Result<__T, __NewE>.create_Failure(Dafny.Helpers.Id<Func<E, __NewE>>(rewrap)(_31_e));
      }
    }
    public static Std.Wrappers._IOutcome<E> Need(bool condition, E error)
    {
      if (condition) {
        return Std.Wrappers.Outcome<E>.create_Pass();
      } else {
        return Std.Wrappers.Outcome<E>.create_Fail(error);
      }
    }
  }
  public class Outcome_Pass<E> : Outcome<E> {
    public Outcome_Pass() : base() {
    }
    public override _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcome<__E> dt) { return dt; }
      return new Outcome_Pass<__E>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Outcome_Pass<E>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Outcome.Pass";
      return s;
    }
  }
  public class Outcome_Fail<E> : Outcome<E> {
    public readonly E _error;
    public Outcome_Fail(E error) : base() {
      this._error = error;
    }
    public override _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcome<__E> dt) { return dt; }
      return new Outcome_Fail<__E>(converter0(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Outcome_Fail<E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Outcome.Fail";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }

  public interface _IOutcomeResult<out E> {
    bool is_Pass_k { get; }
    bool is_Fail_k { get; }
    E dtor_error { get; }
    _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0);
    bool IsFailure();
    Std.Wrappers._IResult<__U, E> PropagateFailure<__U>();
  }
  public abstract class OutcomeResult<E> : _IOutcomeResult<E> {
    public OutcomeResult() {
    }
    public static Std.Wrappers._IOutcomeResult<E> Default() {
      return create_Pass_k();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOutcomeResult<E>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOutcomeResult<E>>(Std.Wrappers.OutcomeResult<E>.Default());
    }
    public static _IOutcomeResult<E> create_Pass_k() {
      return new OutcomeResult_Pass_k<E>();
    }
    public static _IOutcomeResult<E> create_Fail_k(E error) {
      return new OutcomeResult_Fail_k<E>(error);
    }
    public bool is_Pass_k { get { return this is OutcomeResult_Pass_k<E>; } }
    public bool is_Fail_k { get { return this is OutcomeResult_Fail_k<E>; } }
    public E dtor_error {
      get {
        var d = this;
        return ((OutcomeResult_Fail_k<E>)d)._error;
      }
    }
    public abstract _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0);
    public bool IsFailure() {
      return (this).is_Fail_k;
    }
    public Std.Wrappers._IResult<__U, E> PropagateFailure<__U>() {
      return Std.Wrappers.Result<__U, E>.create_Failure((this).dtor_error);
    }
  }
  public class OutcomeResult_Pass_k<E> : OutcomeResult<E> {
    public OutcomeResult_Pass_k() : base() {
    }
    public override _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcomeResult<__E> dt) { return dt; }
      return new OutcomeResult_Pass_k<__E>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.OutcomeResult_Pass_k<E>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.OutcomeResult.Pass'";
      return s;
    }
  }
  public class OutcomeResult_Fail_k<E> : OutcomeResult<E> {
    public readonly E _error;
    public OutcomeResult_Fail_k(E error) : base() {
      this._error = error;
    }
    public override _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcomeResult<__E> dt) { return dt; }
      return new OutcomeResult_Fail_k<__E>(converter0(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.OutcomeResult_Fail_k<E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.OutcomeResult.Fail'";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }
} // end of namespace Std.Wrappers
namespace Std.Math {

  public partial class __default {
    public static BigInteger Min(BigInteger a, BigInteger b)
    {
      if ((a) < (b)) {
        return a;
      } else {
        return b;
      }
    }
    public static BigInteger Min3(BigInteger a, BigInteger b, BigInteger c)
    {
      return Std.Math.__default.Min(a, Std.Math.__default.Min(b, c));
    }
    public static BigInteger Max(BigInteger a, BigInteger b)
    {
      if ((a) < (b)) {
        return b;
      } else {
        return a;
      }
    }
    public static BigInteger Max3(BigInteger a, BigInteger b, BigInteger c)
    {
      return Std.Math.__default.Max(a, Std.Math.__default.Max(b, c));
    }
    public static BigInteger Abs(BigInteger a) {
      if ((a).Sign == -1) {
        return (BigInteger.Zero) - (a);
      } else {
        return a;
      }
    }
  }
} // end of namespace Std.Math
namespace Std.Collections.Seq {

  public partial class __default {
    public static __T First<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Select(BigInteger.Zero);
    }
    public static Dafny.ISequence<__T> DropFirst<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Drop(BigInteger.One);
    }
    public static __T Last<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Select((new BigInteger((xs).Count)) - (BigInteger.One));
    }
    public static Dafny.ISequence<__T> DropLast<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
    }
    public static __T[] ToArray<__T>(Dafny.ISequence<__T> xs)
    {
      __T[] a = new __T[0];
      Func<BigInteger, __T> _init2 = Dafny.Helpers.Id<Func<Dafny.ISequence<__T>, Func<BigInteger, __T>>>((_83_xs) => ((System.Func<BigInteger, __T>)((_84_i) => {
        return (_83_xs).Select(_84_i);
      })))(xs);
      __T[] _nw3 = new __T[Dafny.Helpers.ToIntChecked(new BigInteger((xs).Count), "array size exceeds memory limit")];
      for (var _i0_2 = 0; _i0_2 < new BigInteger(_nw3.Length); _i0_2++) {
        _nw3[(int)(_i0_2)] = _init2(_i0_2);
      }
      a = _nw3;
      return a;
    }
    public static Dafny.ISet<__T> ToSet<__T>(Dafny.ISequence<__T> xs) {
      return Dafny.Helpers.Id<Func<Dafny.ISequence<__T>, Dafny.ISet<__T>>>((_85_xs) => ((System.Func<Dafny.ISet<__T>>)(() => {
        var _coll0 = new System.Collections.Generic.List<__T>();
        foreach (__T _compr_0 in (_85_xs).CloneAsArray()) {
          __T _86_x = (__T)_compr_0;
          if ((_85_xs).Contains(_86_x)) {
            _coll0.Add(_86_x);
          }
        }
        return Dafny.Set<__T>.FromCollection(_coll0);
      }))())(xs);
    }
    public static BigInteger IndexOf<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      BigInteger _87___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if (object.Equals((xs).Select(BigInteger.Zero), v)) {
        return (BigInteger.Zero) + (_87___accumulator);
      } else {
        _87___accumulator = (_87___accumulator) + (BigInteger.One);
        Dafny.ISequence<__T> _in0 = (xs).Drop(BigInteger.One);
        __T _in1 = v;
        xs = _in0;
        v = _in1;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<BigInteger> IndexOfOption<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      return Std.Collections.Seq.__default.IndexByOption<__T>(xs, Dafny.Helpers.Id<Func<__T, Func<__T, bool>>>((_88_v) => ((System.Func<__T, bool>)((_89_x) => {
        return object.Equals(_89_x, _88_v);
      })))(v));
    }
    public static Std.Wrappers._IOption<BigInteger> IndexByOption<__T>(Dafny.ISequence<__T> xs, Func<__T, bool> p)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Option<BigInteger>.create_None();
      } else if (Dafny.Helpers.Id<Func<__T, bool>>(p)((xs).Select(BigInteger.Zero))) {
        return Std.Wrappers.Option<BigInteger>.create_Some(BigInteger.Zero);
      } else {
        Std.Wrappers._IOption<BigInteger> _90_o_k = Std.Collections.Seq.__default.IndexByOption<__T>((xs).Drop(BigInteger.One), p);
        if ((_90_o_k).is_Some) {
          return Std.Wrappers.Option<BigInteger>.create_Some(((_90_o_k).dtor_value) + (BigInteger.One));
        } else {
          return Std.Wrappers.Option<BigInteger>.create_None();
        }
      }
    }
    public static BigInteger LastIndexOf<__T>(Dafny.ISequence<__T> xs, __T v)
    {
    TAIL_CALL_START: ;
      if (object.Equals((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One)), v)) {
        return (new BigInteger((xs).Count)) - (BigInteger.One);
      } else {
        Dafny.ISequence<__T> _in2 = (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
        __T _in3 = v;
        xs = _in2;
        v = _in3;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<BigInteger> LastIndexOfOption<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      return Std.Collections.Seq.__default.LastIndexByOption<__T>(xs, Dafny.Helpers.Id<Func<__T, Func<__T, bool>>>((_91_v) => ((System.Func<__T, bool>)((_92_x) => {
        return object.Equals(_92_x, _91_v);
      })))(v));
    }
    public static Std.Wrappers._IOption<BigInteger> LastIndexByOption<__T>(Dafny.ISequence<__T> xs, Func<__T, bool> p)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Option<BigInteger>.create_None();
      } else if (Dafny.Helpers.Id<Func<__T, bool>>(p)((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One)))) {
        return Std.Wrappers.Option<BigInteger>.create_Some((new BigInteger((xs).Count)) - (BigInteger.One));
      } else {
        Dafny.ISequence<__T> _in4 = (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
        Func<__T, bool> _in5 = p;
        xs = _in4;
        p = _in5;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Remove<__T>(Dafny.ISequence<__T> xs, BigInteger pos)
    {
      return Dafny.Sequence<__T>.Concat((xs).Take(pos), (xs).Drop((pos) + (BigInteger.One)));
    }
    public static Dafny.ISequence<__T> RemoveValue<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      if (!(xs).Contains(v)) {
        return xs;
      } else {
        BigInteger _93_i = Std.Collections.Seq.__default.IndexOf<__T>(xs, v);
        return Dafny.Sequence<__T>.Concat((xs).Take(_93_i), (xs).Drop((_93_i) + (BigInteger.One)));
      }
    }
    public static Dafny.ISequence<__T> Insert<__T>(Dafny.ISequence<__T> xs, __T a, BigInteger pos)
    {
      return Dafny.Sequence<__T>.Concat(Dafny.Sequence<__T>.Concat((xs).Take(pos), Dafny.Sequence<__T>.FromElements(a)), (xs).Drop(pos));
    }
    public static Dafny.ISequence<__T> Reverse<__T>(Dafny.ISequence<__T> xs) {
      Dafny.ISequence<__T> _94___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((xs).Equals(Dafny.Sequence<__T>.FromElements())) {
        return Dafny.Sequence<__T>.Concat(_94___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _94___accumulator = Dafny.Sequence<__T>.Concat(_94___accumulator, Dafny.Sequence<__T>.FromElements((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One))));
        Dafny.ISequence<__T> _in6 = (xs).Subsequence(BigInteger.Zero, (new BigInteger((xs).Count)) - (BigInteger.One));
        xs = _in6;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Repeat<__T>(__T v, BigInteger length)
    {
      Dafny.ISequence<__T> _95___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((length).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_95___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _95___accumulator = Dafny.Sequence<__T>.Concat(_95___accumulator, Dafny.Sequence<__T>.FromElements(v));
        __T _in7 = v;
        BigInteger _in8 = (length) - (BigInteger.One);
        v = _in7;
        length = _in8;
        goto TAIL_CALL_START;
      }
    }
    public static _System._ITuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>> Unzip<__A, __B>(Dafny.ISequence<_System._ITuple2<__A, __B>> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>>.create(Dafny.Sequence<__A>.FromElements(), Dafny.Sequence<__B>.FromElements());
      } else {
        _System._ITuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>> _let_tmp_rhs0 = Std.Collections.Seq.__default.Unzip<__A, __B>(Std.Collections.Seq.__default.DropLast<_System._ITuple2<__A, __B>>(xs));
        Dafny.ISequence<__A> _96_a = _let_tmp_rhs0.dtor__0;
        Dafny.ISequence<__B> _97_b = _let_tmp_rhs0.dtor__1;
        return _System.Tuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>>.create(Dafny.Sequence<__A>.Concat(_96_a, Dafny.Sequence<__A>.FromElements((Std.Collections.Seq.__default.Last<_System._ITuple2<__A, __B>>(xs)).dtor__0)), Dafny.Sequence<__B>.Concat(_97_b, Dafny.Sequence<__B>.FromElements((Std.Collections.Seq.__default.Last<_System._ITuple2<__A, __B>>(xs)).dtor__1)));
      }
    }
    public static Dafny.ISequence<_System._ITuple2<__A, __B>> Zip<__A, __B>(Dafny.ISequence<__A> xs, Dafny.ISequence<__B> ys)
    {
      Dafny.ISequence<_System._ITuple2<__A, __B>> _98___accumulator = Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<_System._ITuple2<__A, __B>>.Concat(Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements(), _98___accumulator);
      } else {
        _98___accumulator = Dafny.Sequence<_System._ITuple2<__A, __B>>.Concat(Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements(_System.Tuple2<__A, __B>.create(Std.Collections.Seq.__default.Last<__A>(xs), Std.Collections.Seq.__default.Last<__B>(ys))), _98___accumulator);
        Dafny.ISequence<__A> _in9 = Std.Collections.Seq.__default.DropLast<__A>(xs);
        Dafny.ISequence<__B> _in10 = Std.Collections.Seq.__default.DropLast<__B>(ys);
        xs = _in9;
        ys = _in10;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger Max(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)) == (BigInteger.One)) {
        return (xs).Select(BigInteger.Zero);
      } else {
        return Std.Math.__default.Max((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.Max((xs).Drop(BigInteger.One)));
      }
    }
    public static BigInteger Min(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)) == (BigInteger.One)) {
        return (xs).Select(BigInteger.Zero);
      } else {
        return Std.Math.__default.Min((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.Min((xs).Drop(BigInteger.One)));
      }
    }
    public static Dafny.ISequence<__T> Flatten<__T>(Dafny.ISequence<Dafny.ISequence<__T>> xs) {
      Dafny.ISequence<__T> _99___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_99___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _99___accumulator = Dafny.Sequence<__T>.Concat(_99___accumulator, (xs).Select(BigInteger.Zero));
        Dafny.ISequence<Dafny.ISequence<__T>> _in11 = (xs).Drop(BigInteger.One);
        xs = _in11;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> FlattenReverse<__T>(Dafny.ISequence<Dafny.ISequence<__T>> xs) {
      Dafny.ISequence<__T> _100___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(Dafny.Sequence<__T>.FromElements(), _100___accumulator);
      } else {
        _100___accumulator = Dafny.Sequence<__T>.Concat(Std.Collections.Seq.__default.Last<Dafny.ISequence<__T>>(xs), _100___accumulator);
        Dafny.ISequence<Dafny.ISequence<__T>> _in12 = Std.Collections.Seq.__default.DropLast<Dafny.ISequence<__T>>(xs);
        xs = _in12;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Join<__T>(Dafny.ISequence<Dafny.ISequence<__T>> seqs, Dafny.ISequence<__T> separator)
    {
      Dafny.ISequence<__T> _101___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((seqs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_101___accumulator, Dafny.Sequence<__T>.FromElements());
      } else if ((new BigInteger((seqs).Count)) == (BigInteger.One)) {
        return Dafny.Sequence<__T>.Concat(_101___accumulator, (seqs).Select(BigInteger.Zero));
      } else {
        _101___accumulator = Dafny.Sequence<__T>.Concat(_101___accumulator, Dafny.Sequence<__T>.Concat((seqs).Select(BigInteger.Zero), separator));
        Dafny.ISequence<Dafny.ISequence<__T>> _in13 = (seqs).Drop(BigInteger.One);
        Dafny.ISequence<__T> _in14 = separator;
        seqs = _in13;
        separator = _in14;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.ISequence<__T>> Split<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Dafny.ISequence<Dafny.ISequence<__T>> _102___accumulator = Dafny.Sequence<Dafny.ISequence<__T>>.FromElements();
    TAIL_CALL_START: ;
      Std.Wrappers._IOption<BigInteger> _103_i = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      if ((_103_i).is_Some) {
        _102___accumulator = Dafny.Sequence<Dafny.ISequence<__T>>.Concat(_102___accumulator, Dafny.Sequence<Dafny.ISequence<__T>>.FromElements((s).Take((_103_i).dtor_value)));
        Dafny.ISequence<__T> _in15 = (s).Drop(((_103_i).dtor_value) + (BigInteger.One));
        __T _in16 = delim;
        s = _in15;
        delim = _in16;
        goto TAIL_CALL_START;
      } else {
        return Dafny.Sequence<Dafny.ISequence<__T>>.Concat(_102___accumulator, Dafny.Sequence<Dafny.ISequence<__T>>.FromElements(s));
      }
    }
    public static _System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>> SplitOnce<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Std.Wrappers._IOption<BigInteger> _104_i = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      return _System.Tuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>.create((s).Take((_104_i).dtor_value), (s).Drop(((_104_i).dtor_value) + (BigInteger.One)));
    }
    public static Std.Wrappers._IOption<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>> SplitOnceOption<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Std.Wrappers._IOption<BigInteger> _105_valueOrError0 = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      if ((_105_valueOrError0).IsFailure()) {
        return (_105_valueOrError0).PropagateFailure<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>>();
      } else {
        BigInteger _106_i = (_105_valueOrError0).Extract();
        return Std.Wrappers.Option<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>>.create_Some(_System.Tuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>.create((s).Take(_106_i), (s).Drop((_106_i) + (BigInteger.One))));
      }
    }
    public static Dafny.ISequence<__R> Map<__T, __R>(Func<__T, __R> f, Dafny.ISequence<__T> xs)
    {
      Dafny.ISequence<__R> _107___accumulator = Dafny.Sequence<__R>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__R>.Concat(_107___accumulator, Dafny.Sequence<__R>.FromElements());
      } else {
        _107___accumulator = Dafny.Sequence<__R>.Concat(_107___accumulator, Dafny.Sequence<__R>.FromElements(Dafny.Helpers.Id<Func<__T, __R>>(f)((xs).Select(BigInteger.Zero))));
        Func<__T, __R> _in17 = f;
        Dafny.ISequence<__T> _in18 = (xs).Drop(BigInteger.One);
        f = _in17;
        xs = _in18;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IResult<Dafny.ISequence<__R>, __E> MapWithResult<__T, __R, __E>(Func<__T, Std.Wrappers._IResult<__R, __E>> f, Dafny.ISequence<__T> xs)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Result<Dafny.ISequence<__R>, __E>.create_Success(Dafny.Sequence<__R>.FromElements());
      } else {
        Std.Wrappers._IResult<__R, __E> _108_valueOrError0 = Dafny.Helpers.Id<Func<__T, Std.Wrappers._IResult<__R, __E>>>(f)((xs).Select(BigInteger.Zero));
        if ((_108_valueOrError0).IsFailure()) {
          return (_108_valueOrError0).PropagateFailure<Dafny.ISequence<__R>>();
        } else {
          __R _109_head = (_108_valueOrError0).Extract();
          Std.Wrappers._IResult<Dafny.ISequence<__R>, __E> _110_valueOrError1 = Std.Collections.Seq.__default.MapWithResult<__T, __R, __E>(f, (xs).Drop(BigInteger.One));
          if ((_110_valueOrError1).IsFailure()) {
            return (_110_valueOrError1).PropagateFailure<Dafny.ISequence<__R>>();
          } else {
            Dafny.ISequence<__R> _111_tail = (_110_valueOrError1).Extract();
            return Std.Wrappers.Result<Dafny.ISequence<__R>, __E>.create_Success(Dafny.Sequence<__R>.Concat(Dafny.Sequence<__R>.FromElements(_109_head), _111_tail));
          }
        }
      }
    }
    public static Dafny.ISequence<__T> Filter<__T>(Func<__T, bool> f, Dafny.ISequence<__T> xs)
    {
      Dafny.ISequence<__T> _112___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_112___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _112___accumulator = Dafny.Sequence<__T>.Concat(_112___accumulator, ((Dafny.Helpers.Id<Func<__T, bool>>(f)((xs).Select(BigInteger.Zero))) ? (Dafny.Sequence<__T>.FromElements((xs).Select(BigInteger.Zero))) : (Dafny.Sequence<__T>.FromElements())));
        Func<__T, bool> _in19 = f;
        Dafny.ISequence<__T> _in20 = (xs).Drop(BigInteger.One);
        f = _in19;
        xs = _in20;
        goto TAIL_CALL_START;
      }
    }
    public static __A FoldLeft<__A, __T>(Func<__A, __T, __A> f, __A init, Dafny.ISequence<__T> xs)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return init;
      } else {
        Func<__A, __T, __A> _in21 = f;
        __A _in22 = Dafny.Helpers.Id<Func<__A, __T, __A>>(f)(init, (xs).Select(BigInteger.Zero));
        Dafny.ISequence<__T> _in23 = (xs).Drop(BigInteger.One);
        f = _in21;
        init = _in22;
        xs = _in23;
        goto TAIL_CALL_START;
      }
    }
    public static __A FoldRight<__A, __T>(Func<__T, __A, __A> f, Dafny.ISequence<__T> xs, __A init)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return init;
      } else {
        return Dafny.Helpers.Id<Func<__T, __A, __A>>(f)((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.FoldRight<__A, __T>(f, (xs).Drop(BigInteger.One), init));
      }
    }
    public static Dafny.ISequence<__T> SetToSeq<__T>(Dafny.ISet<__T> s)
    {
      Dafny.ISequence<__T> xs = Dafny.Sequence<__T>.Empty;
      xs = Dafny.Sequence<__T>.FromElements();
      Dafny.ISet<__T> _113_left;
      _113_left = s;
      while (!(_113_left).Equals(Dafny.Set<__T>.FromElements())) {
        __T _114_x;
        foreach (__T _assign_such_that_0 in (_113_left).Elements) {
          _114_x = (__T)_assign_such_that_0;
          if ((_113_left).Contains(_114_x)) {
            goto after__ASSIGN_SUCH_THAT_0;
          }
        }
        throw new System.Exception("assign-such-that search produced no value (line 7247)");
      after__ASSIGN_SUCH_THAT_0: ;
        _113_left = Dafny.Set<__T>.Difference(_113_left, Dafny.Set<__T>.FromElements(_114_x));
        xs = Dafny.Sequence<__T>.Concat(xs, Dafny.Sequence<__T>.FromElements(_114_x));
      }
      return xs;
    }
    public static Dafny.ISequence<__T> SetToSortedSeq<__T>(Dafny.ISet<__T> s, Func<__T, __T, bool> R)
    {
      Dafny.ISequence<__T> xs = Dafny.Sequence<__T>.Empty;
      Dafny.ISequence<__T> _out6;
      _out6 = Std.Collections.Seq.__default.SetToSeq<__T>(s);
      xs = _out6;
      xs = Std.Collections.Seq.__default.MergeSortBy<__T>(R, xs);
      return xs;
    }
    public static Dafny.ISequence<__T> MergeSortBy<__T>(Func<__T, __T, bool> lessThanOrEq, Dafny.ISequence<__T> a)
    {
      if ((new BigInteger((a).Count)) <= (BigInteger.One)) {
        return a;
      } else {
        BigInteger _115_splitIndex = Dafny.Helpers.EuclideanDivision(new BigInteger((a).Count), new BigInteger(2));
        Dafny.ISequence<__T> _116_left = (a).Take(_115_splitIndex);
        Dafny.ISequence<__T> _117_right = (a).Drop(_115_splitIndex);
        Dafny.ISequence<__T> _118_leftSorted = Std.Collections.Seq.__default.MergeSortBy<__T>(lessThanOrEq, _116_left);
        Dafny.ISequence<__T> _119_rightSorted = Std.Collections.Seq.__default.MergeSortBy<__T>(lessThanOrEq, _117_right);
        return Std.Collections.Seq.__default.MergeSortedWith<__T>(_118_leftSorted, _119_rightSorted, lessThanOrEq);
      }
    }
    public static Dafny.ISequence<__T> MergeSortedWith<__T>(Dafny.ISequence<__T> left, Dafny.ISequence<__T> right, Func<__T, __T, bool> lessThanOrEq)
    {
      Dafny.ISequence<__T> _120___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((left).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_120___accumulator, right);
      } else if ((new BigInteger((right).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_120___accumulator, left);
      } else if (Dafny.Helpers.Id<Func<__T, __T, bool>>(lessThanOrEq)((left).Select(BigInteger.Zero), (right).Select(BigInteger.Zero))) {
        _120___accumulator = Dafny.Sequence<__T>.Concat(_120___accumulator, Dafny.Sequence<__T>.FromElements((left).Select(BigInteger.Zero)));
        Dafny.ISequence<__T> _in24 = (left).Drop(BigInteger.One);
        Dafny.ISequence<__T> _in25 = right;
        Func<__T, __T, bool> _in26 = lessThanOrEq;
        left = _in24;
        right = _in25;
        lessThanOrEq = _in26;
        goto TAIL_CALL_START;
      } else {
        _120___accumulator = Dafny.Sequence<__T>.Concat(_120___accumulator, Dafny.Sequence<__T>.FromElements((right).Select(BigInteger.Zero)));
        Dafny.ISequence<__T> _in27 = left;
        Dafny.ISequence<__T> _in28 = (right).Drop(BigInteger.One);
        Func<__T, __T, bool> _in29 = lessThanOrEq;
        left = _in27;
        right = _in28;
        lessThanOrEq = _in29;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Collections.Seq
namespace Std.Arithmetic.GeneralInternals {

} // end of namespace Std.Arithmetic.GeneralInternals
namespace Std.Arithmetic.MulInternalsNonlinear {

} // end of namespace Std.Arithmetic.MulInternalsNonlinear
namespace Std.Arithmetic.MulInternals {

  public partial class __default {
    public static BigInteger MulPos(BigInteger x, BigInteger y)
    {
      BigInteger _149___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((x).Sign == 0) {
        return (BigInteger.Zero) + (_149___accumulator);
      } else {
        _149___accumulator = (_149___accumulator) + (y);
        BigInteger _in32 = (x) - (BigInteger.One);
        BigInteger _in33 = y;
        x = _in32;
        y = _in33;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger MulRecursive(BigInteger x, BigInteger y)
    {
      if ((x).Sign != -1) {
        return Std.Arithmetic.MulInternals.__default.MulPos(x, y);
      } else {
        return (new BigInteger(-1)) * (Std.Arithmetic.MulInternals.__default.MulPos((new BigInteger(-1)) * (x), y));
      }
    }
  }
} // end of namespace Std.Arithmetic.MulInternals
namespace Std.Arithmetic.Mul {

} // end of namespace Std.Arithmetic.Mul
namespace Std.Arithmetic.ModInternalsNonlinear {

} // end of namespace Std.Arithmetic.ModInternalsNonlinear
namespace Std.Arithmetic.DivInternalsNonlinear {

} // end of namespace Std.Arithmetic.DivInternalsNonlinear
namespace Std.Arithmetic.ModInternals {

  public partial class __default {
    public static BigInteger ModRecursive(BigInteger x, BigInteger d)
    {
    TAIL_CALL_START: ;
      if ((x).Sign == -1) {
        BigInteger _in34 = (d) + (x);
        BigInteger _in35 = d;
        x = _in34;
        d = _in35;
        goto TAIL_CALL_START;
      } else if ((x) < (d)) {
        return x;
      } else {
        BigInteger _in36 = (x) - (d);
        BigInteger _in37 = d;
        x = _in36;
        d = _in37;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.ModInternals
namespace Std.Arithmetic.DivInternals {

  public partial class __default {
    public static BigInteger DivPos(BigInteger x, BigInteger d)
    {
      BigInteger _150___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((x).Sign == -1) {
        _150___accumulator = (_150___accumulator) + (new BigInteger(-1));
        BigInteger _in38 = (x) + (d);
        BigInteger _in39 = d;
        x = _in38;
        d = _in39;
        goto TAIL_CALL_START;
      } else if ((x) < (d)) {
        return (BigInteger.Zero) + (_150___accumulator);
      } else {
        _150___accumulator = (_150___accumulator) + (BigInteger.One);
        BigInteger _in40 = (x) - (d);
        BigInteger _in41 = d;
        x = _in40;
        d = _in41;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger DivRecursive(BigInteger x, BigInteger d)
    {
      if ((d).Sign == 1) {
        return Std.Arithmetic.DivInternals.__default.DivPos(x, d);
      } else {
        return (new BigInteger(-1)) * (Std.Arithmetic.DivInternals.__default.DivPos(x, (new BigInteger(-1)) * (d)));
      }
    }
  }
} // end of namespace Std.Arithmetic.DivInternals
namespace Std.Arithmetic.DivMod {

  public partial class __default {
    public static bool MultiplesVanish(BigInteger a, BigInteger b, BigInteger m)
    {
      return (Dafny.Helpers.EuclideanModulus(((m) * (a)) + (b), m)) == (Dafny.Helpers.EuclideanModulus(b, m));
    }
  }
} // end of namespace Std.Arithmetic.DivMod
namespace Std.Arithmetic.Power {

  public partial class __default {
    public static BigInteger Pow(BigInteger b, BigInteger e)
    {
      BigInteger _151___accumulator = BigInteger.One;
    TAIL_CALL_START: ;
      if ((e).Sign == 0) {
        return (BigInteger.One) * (_151___accumulator);
      } else {
        _151___accumulator = (_151___accumulator) * (b);
        BigInteger _in42 = b;
        BigInteger _in43 = (e) - (BigInteger.One);
        b = _in42;
        e = _in43;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.Power
namespace Std.Arithmetic.Logarithm {

  public partial class __default {
    public static BigInteger Log(BigInteger @base, BigInteger pow)
    {
      BigInteger _152___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((pow) < (@base)) {
        return (BigInteger.Zero) + (_152___accumulator);
      } else {
        _152___accumulator = (_152___accumulator) + (BigInteger.One);
        BigInteger _in44 = @base;
        BigInteger _in45 = Dafny.Helpers.EuclideanDivision(pow, @base);
        @base = _in44;
        pow = _in45;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.Logarithm
namespace Std.Arithmetic.Power2 {

  public partial class __default {
    public static BigInteger Pow2(BigInteger e) {
      return Std.Arithmetic.Power.__default.Pow(new BigInteger(2), e);
    }
  }
} // end of namespace Std.Arithmetic.Power2
namespace Std.Arithmetic {

} // end of namespace Std.Arithmetic
namespace Std.Strings.HexConversion {

  public partial class __default {
    public static BigInteger BASE() {
      return Std.Strings.HexConversion.__default.@base;
    }
    public static bool IsDigitChar(Dafny.Rune c) {
      return (Std.Strings.HexConversion.__default.charToDigit).Contains(c);
    }
    public static Dafny.ISequence<Dafny.Rune> OfDigits(Dafny.ISequence<BigInteger> digits) {
      Dafny.ISequence<Dafny.Rune> _153___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((digits).Equals(Dafny.Sequence<BigInteger>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(), _153___accumulator);
      } else {
        _153___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.HexConversion.__default.chars).Select((digits).Select(BigInteger.Zero))), _153___accumulator);
        Dafny.ISequence<BigInteger> _in46 = (digits).Drop(BigInteger.One);
        digits = _in46;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      if ((n).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.HexConversion.__default.chars).Select(BigInteger.Zero));
      } else {
        return Std.Strings.HexConversion.__default.OfDigits(Std.Strings.HexConversion.__default.FromNat(n));
      }
    }
    public static bool IsNumberStr(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      return !(!(str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) || (((((str).Select(BigInteger.Zero)) == (minus)) || ((Std.Strings.HexConversion.__default.charToDigit).Contains((str).Select(BigInteger.Zero)))) && (Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, bool>>((_154_str) => Dafny.Helpers.Quantifier<Dafny.Rune>(((_154_str).Drop(BigInteger.One)).UniqueElements, true, (((_forall_var_1) => {
        Dafny.Rune _155_c = (Dafny.Rune)_forall_var_1;
        return !(((_154_str).Drop(BigInteger.One)).Contains(_155_c)) || (Std.Strings.HexConversion.__default.IsDigitChar(_155_c));
      }))))(str)));
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n, Dafny.Rune minus)
    {
      if ((n).Sign != -1) {
        return Std.Strings.HexConversion.__default.OfNat(n);
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(minus), Std.Strings.HexConversion.__default.OfNat((BigInteger.Zero) - (n)));
      }
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return BigInteger.Zero;
      } else {
        Dafny.Rune _156_c = (str).Select((new BigInteger((str).Count)) - (BigInteger.One));
        return ((Std.Strings.HexConversion.__default.ToNat((str).Take((new BigInteger((str).Count)) - (BigInteger.One)))) * (Std.Strings.HexConversion.__default.@base)) + (Dafny.Map<Dafny.Rune, BigInteger>.Select(Std.Strings.HexConversion.__default.charToDigit,_156_c));
      }
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      if (Dafny.Sequence<Dafny.Rune>.IsPrefixOf(Dafny.Sequence<Dafny.Rune>.FromElements(minus), str)) {
        return (BigInteger.Zero) - (Std.Strings.HexConversion.__default.ToNat((str).Drop(BigInteger.One)));
      } else {
        return Std.Strings.HexConversion.__default.ToNat(str);
      }
    }
    public static BigInteger ToNatRight(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        return ((Std.Strings.HexConversion.__default.ToNatRight(Std.Collections.Seq.__default.DropFirst<BigInteger>(xs))) * (Std.Strings.HexConversion.__default.BASE())) + (Std.Collections.Seq.__default.First<BigInteger>(xs));
      }
    }
    public static BigInteger ToNatLeft(Dafny.ISequence<BigInteger> xs) {
      BigInteger _157___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return (BigInteger.Zero) + (_157___accumulator);
      } else {
        _157___accumulator = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) * (Std.Arithmetic.Power.__default.Pow(Std.Strings.HexConversion.__default.BASE(), (new BigInteger((xs).Count)) - (BigInteger.One)))) + (_157___accumulator);
        Dafny.ISequence<BigInteger> _in47 = Std.Collections.Seq.__default.DropLast<BigInteger>(xs);
        xs = _in47;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> FromNat(BigInteger n) {
      Dafny.ISequence<BigInteger> _158___accumulator = Dafny.Sequence<BigInteger>.FromElements();
    TAIL_CALL_START: ;
      if ((n).Sign == 0) {
        return Dafny.Sequence<BigInteger>.Concat(_158___accumulator, Dafny.Sequence<BigInteger>.FromElements());
      } else {
        _158___accumulator = Dafny.Sequence<BigInteger>.Concat(_158___accumulator, Dafny.Sequence<BigInteger>.FromElements(Dafny.Helpers.EuclideanModulus(n, Std.Strings.HexConversion.__default.BASE())));
        BigInteger _in48 = Dafny.Helpers.EuclideanDivision(n, Std.Strings.HexConversion.__default.BASE());
        n = _in48;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtend(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)) >= (n)) {
        return xs;
      } else {
        Dafny.ISequence<BigInteger> _in49 = Dafny.Sequence<BigInteger>.Concat(xs, Dafny.Sequence<BigInteger>.FromElements(BigInteger.Zero));
        BigInteger _in50 = n;
        xs = _in49;
        n = _in50;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtendMultiple(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
      BigInteger _159_newLen = ((new BigInteger((xs).Count)) + (n)) - (Dafny.Helpers.EuclideanModulus(new BigInteger((xs).Count), n));
      return Std.Strings.HexConversion.__default.SeqExtend(xs, _159_newLen);
    }
    public static Dafny.ISequence<BigInteger> FromNatWithLen(BigInteger n, BigInteger len)
    {
      return Std.Strings.HexConversion.__default.SeqExtend(Std.Strings.HexConversion.__default.FromNat(n), len);
    }
    public static Dafny.ISequence<BigInteger> SeqZero(BigInteger len) {
      Dafny.ISequence<BigInteger> _160_xs = Std.Strings.HexConversion.__default.FromNatWithLen(BigInteger.Zero, len);
      return _160_xs;
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqAdd(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs1 = Std.Strings.HexConversion.__default.SeqAdd(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _161_zs_k = _let_tmp_rhs1.dtor__0;
        BigInteger _162_cin = _let_tmp_rhs1.dtor__1;
        BigInteger _163_sum = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) + (Std.Collections.Seq.__default.Last<BigInteger>(ys))) + (_162_cin);
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs2 = (((_163_sum) < (Std.Strings.HexConversion.__default.BASE())) ? (_System.Tuple2<BigInteger, BigInteger>.create(_163_sum, BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((_163_sum) - (Std.Strings.HexConversion.__default.BASE()), BigInteger.One)));
        BigInteger _164_sum__out = _let_tmp_rhs2.dtor__0;
        BigInteger _165_cout = _let_tmp_rhs2.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_161_zs_k, Dafny.Sequence<BigInteger>.FromElements(_164_sum__out)), _165_cout);
      }
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqSub(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs3 = Std.Strings.HexConversion.__default.SeqSub(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _166_zs = _let_tmp_rhs3.dtor__0;
        BigInteger _167_cin = _let_tmp_rhs3.dtor__1;
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs4 = (((Std.Collections.Seq.__default.Last<BigInteger>(xs)) >= ((Std.Collections.Seq.__default.Last<BigInteger>(ys)) + (_167_cin))) ? (_System.Tuple2<BigInteger, BigInteger>.create(((Std.Collections.Seq.__default.Last<BigInteger>(xs)) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_167_cin), BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((((Std.Strings.HexConversion.__default.BASE()) + (Std.Collections.Seq.__default.Last<BigInteger>(xs))) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_167_cin), BigInteger.One)));
        BigInteger _168_diff__out = _let_tmp_rhs4.dtor__0;
        BigInteger _169_cout = _let_tmp_rhs4.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_166_zs, Dafny.Sequence<BigInteger>.FromElements(_168_diff__out)), _169_cout);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> HEX__DIGITS { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789ABCDEF");
    } }
    public static Dafny.ISequence<Dafny.Rune> chars { get {
      return Std.Strings.HexConversion.__default.HEX__DIGITS;
    } }
    public static BigInteger @base { get {
      return new BigInteger((Std.Strings.HexConversion.__default.chars).Count);
    } }
    public static Dafny.IMap<Dafny.Rune,BigInteger> charToDigit { get {
      return Dafny.Map<Dafny.Rune, BigInteger>.FromElements(new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('0'), BigInteger.Zero), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('1'), BigInteger.One), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('2'), new BigInteger(2)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('3'), new BigInteger(3)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('4'), new BigInteger(4)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('5'), new BigInteger(5)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('6'), new BigInteger(6)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('7'), new BigInteger(7)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('8'), new BigInteger(8)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('9'), new BigInteger(9)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('a'), new BigInteger(10)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('b'), new BigInteger(11)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('c'), new BigInteger(12)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('d'), new BigInteger(13)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('e'), new BigInteger(14)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('f'), new BigInteger(15)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('A'), new BigInteger(10)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('B'), new BigInteger(11)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('C'), new BigInteger(12)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('D'), new BigInteger(13)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('E'), new BigInteger(14)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('F'), new BigInteger(15)));
    } }
  }

  public partial class CharSeq {
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(Dafny.ISequence<Dafny.Rune> __source) {
      Dafny.ISequence<Dafny.Rune> _170_chars = __source;
      return (new BigInteger((_170_chars).Count)) > (BigInteger.One);
    }
  }

  public partial class digit {
    private static readonly Dafny.TypeDescriptor<BigInteger> _TYPE = new Dafny.TypeDescriptor<BigInteger>(BigInteger.Zero);
    public static Dafny.TypeDescriptor<BigInteger> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(BigInteger __source) {
      BigInteger _171_i = __source;
      if (_System.nat._Is(_171_i)) {
        return ((_171_i).Sign != -1) && ((_171_i) < (Std.Strings.HexConversion.__default.BASE()));
      }
      return false;
    }
  }
} // end of namespace Std.Strings.HexConversion
namespace Std.Strings.DecimalConversion {

  public partial class __default {
    public static BigInteger BASE() {
      return Std.Strings.DecimalConversion.__default.@base;
    }
    public static bool IsDigitChar(Dafny.Rune c) {
      return (Std.Strings.DecimalConversion.__default.charToDigit).Contains(c);
    }
    public static Dafny.ISequence<Dafny.Rune> OfDigits(Dafny.ISequence<BigInteger> digits) {
      Dafny.ISequence<Dafny.Rune> _172___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((digits).Equals(Dafny.Sequence<BigInteger>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(), _172___accumulator);
      } else {
        _172___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.DecimalConversion.__default.chars).Select((digits).Select(BigInteger.Zero))), _172___accumulator);
        Dafny.ISequence<BigInteger> _in51 = (digits).Drop(BigInteger.One);
        digits = _in51;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      if ((n).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.DecimalConversion.__default.chars).Select(BigInteger.Zero));
      } else {
        return Std.Strings.DecimalConversion.__default.OfDigits(Std.Strings.DecimalConversion.__default.FromNat(n));
      }
    }
    public static bool IsNumberStr(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      return !(!(str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) || (((((str).Select(BigInteger.Zero)) == (minus)) || ((Std.Strings.DecimalConversion.__default.charToDigit).Contains((str).Select(BigInteger.Zero)))) && (Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, bool>>((_173_str) => Dafny.Helpers.Quantifier<Dafny.Rune>(((_173_str).Drop(BigInteger.One)).UniqueElements, true, (((_forall_var_2) => {
        Dafny.Rune _174_c = (Dafny.Rune)_forall_var_2;
        return !(((_173_str).Drop(BigInteger.One)).Contains(_174_c)) || (Std.Strings.DecimalConversion.__default.IsDigitChar(_174_c));
      }))))(str)));
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n, Dafny.Rune minus)
    {
      if ((n).Sign != -1) {
        return Std.Strings.DecimalConversion.__default.OfNat(n);
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(minus), Std.Strings.DecimalConversion.__default.OfNat((BigInteger.Zero) - (n)));
      }
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return BigInteger.Zero;
      } else {
        Dafny.Rune _175_c = (str).Select((new BigInteger((str).Count)) - (BigInteger.One));
        return ((Std.Strings.DecimalConversion.__default.ToNat((str).Take((new BigInteger((str).Count)) - (BigInteger.One)))) * (Std.Strings.DecimalConversion.__default.@base)) + (Dafny.Map<Dafny.Rune, BigInteger>.Select(Std.Strings.DecimalConversion.__default.charToDigit,_175_c));
      }
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      if (Dafny.Sequence<Dafny.Rune>.IsPrefixOf(Dafny.Sequence<Dafny.Rune>.FromElements(minus), str)) {
        return (BigInteger.Zero) - (Std.Strings.DecimalConversion.__default.ToNat((str).Drop(BigInteger.One)));
      } else {
        return Std.Strings.DecimalConversion.__default.ToNat(str);
      }
    }
    public static BigInteger ToNatRight(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        return ((Std.Strings.DecimalConversion.__default.ToNatRight(Std.Collections.Seq.__default.DropFirst<BigInteger>(xs))) * (Std.Strings.DecimalConversion.__default.BASE())) + (Std.Collections.Seq.__default.First<BigInteger>(xs));
      }
    }
    public static BigInteger ToNatLeft(Dafny.ISequence<BigInteger> xs) {
      BigInteger _176___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return (BigInteger.Zero) + (_176___accumulator);
      } else {
        _176___accumulator = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) * (Std.Arithmetic.Power.__default.Pow(Std.Strings.DecimalConversion.__default.BASE(), (new BigInteger((xs).Count)) - (BigInteger.One)))) + (_176___accumulator);
        Dafny.ISequence<BigInteger> _in52 = Std.Collections.Seq.__default.DropLast<BigInteger>(xs);
        xs = _in52;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> FromNat(BigInteger n) {
      Dafny.ISequence<BigInteger> _177___accumulator = Dafny.Sequence<BigInteger>.FromElements();
    TAIL_CALL_START: ;
      if ((n).Sign == 0) {
        return Dafny.Sequence<BigInteger>.Concat(_177___accumulator, Dafny.Sequence<BigInteger>.FromElements());
      } else {
        _177___accumulator = Dafny.Sequence<BigInteger>.Concat(_177___accumulator, Dafny.Sequence<BigInteger>.FromElements(Dafny.Helpers.EuclideanModulus(n, Std.Strings.DecimalConversion.__default.BASE())));
        BigInteger _in53 = Dafny.Helpers.EuclideanDivision(n, Std.Strings.DecimalConversion.__default.BASE());
        n = _in53;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtend(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)) >= (n)) {
        return xs;
      } else {
        Dafny.ISequence<BigInteger> _in54 = Dafny.Sequence<BigInteger>.Concat(xs, Dafny.Sequence<BigInteger>.FromElements(BigInteger.Zero));
        BigInteger _in55 = n;
        xs = _in54;
        n = _in55;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtendMultiple(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
      BigInteger _178_newLen = ((new BigInteger((xs).Count)) + (n)) - (Dafny.Helpers.EuclideanModulus(new BigInteger((xs).Count), n));
      return Std.Strings.DecimalConversion.__default.SeqExtend(xs, _178_newLen);
    }
    public static Dafny.ISequence<BigInteger> FromNatWithLen(BigInteger n, BigInteger len)
    {
      return Std.Strings.DecimalConversion.__default.SeqExtend(Std.Strings.DecimalConversion.__default.FromNat(n), len);
    }
    public static Dafny.ISequence<BigInteger> SeqZero(BigInteger len) {
      Dafny.ISequence<BigInteger> _179_xs = Std.Strings.DecimalConversion.__default.FromNatWithLen(BigInteger.Zero, len);
      return _179_xs;
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqAdd(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs5 = Std.Strings.DecimalConversion.__default.SeqAdd(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _180_zs_k = _let_tmp_rhs5.dtor__0;
        BigInteger _181_cin = _let_tmp_rhs5.dtor__1;
        BigInteger _182_sum = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) + (Std.Collections.Seq.__default.Last<BigInteger>(ys))) + (_181_cin);
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs6 = (((_182_sum) < (Std.Strings.DecimalConversion.__default.BASE())) ? (_System.Tuple2<BigInteger, BigInteger>.create(_182_sum, BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((_182_sum) - (Std.Strings.DecimalConversion.__default.BASE()), BigInteger.One)));
        BigInteger _183_sum__out = _let_tmp_rhs6.dtor__0;
        BigInteger _184_cout = _let_tmp_rhs6.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_180_zs_k, Dafny.Sequence<BigInteger>.FromElements(_183_sum__out)), _184_cout);
      }
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqSub(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs7 = Std.Strings.DecimalConversion.__default.SeqSub(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _185_zs = _let_tmp_rhs7.dtor__0;
        BigInteger _186_cin = _let_tmp_rhs7.dtor__1;
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs8 = (((Std.Collections.Seq.__default.Last<BigInteger>(xs)) >= ((Std.Collections.Seq.__default.Last<BigInteger>(ys)) + (_186_cin))) ? (_System.Tuple2<BigInteger, BigInteger>.create(((Std.Collections.Seq.__default.Last<BigInteger>(xs)) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_186_cin), BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((((Std.Strings.DecimalConversion.__default.BASE()) + (Std.Collections.Seq.__default.Last<BigInteger>(xs))) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_186_cin), BigInteger.One)));
        BigInteger _187_diff__out = _let_tmp_rhs8.dtor__0;
        BigInteger _188_cout = _let_tmp_rhs8.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_185_zs, Dafny.Sequence<BigInteger>.FromElements(_187_diff__out)), _188_cout);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> DIGITS { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789");
    } }
    public static Dafny.ISequence<Dafny.Rune> chars { get {
      return Std.Strings.DecimalConversion.__default.DIGITS;
    } }
    public static BigInteger @base { get {
      return new BigInteger((Std.Strings.DecimalConversion.__default.chars).Count);
    } }
    public static Dafny.IMap<Dafny.Rune,BigInteger> charToDigit { get {
      return Dafny.Map<Dafny.Rune, BigInteger>.FromElements(new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('0'), BigInteger.Zero), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('1'), BigInteger.One), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('2'), new BigInteger(2)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('3'), new BigInteger(3)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('4'), new BigInteger(4)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('5'), new BigInteger(5)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('6'), new BigInteger(6)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('7'), new BigInteger(7)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('8'), new BigInteger(8)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('9'), new BigInteger(9)));
    } }
  }

  public partial class CharSeq {
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(Dafny.ISequence<Dafny.Rune> __source) {
      Dafny.ISequence<Dafny.Rune> _189_chars = __source;
      return (new BigInteger((_189_chars).Count)) > (BigInteger.One);
    }
  }

  public partial class digit {
    private static readonly Dafny.TypeDescriptor<BigInteger> _TYPE = new Dafny.TypeDescriptor<BigInteger>(BigInteger.Zero);
    public static Dafny.TypeDescriptor<BigInteger> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(BigInteger __source) {
      BigInteger _190_i = __source;
      if (_System.nat._Is(_190_i)) {
        return ((_190_i).Sign != -1) && ((_190_i) < (Std.Strings.DecimalConversion.__default.BASE()));
      }
      return false;
    }
  }
} // end of namespace Std.Strings.DecimalConversion
namespace Std.Strings.CharStrEscaping {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> Escape(Dafny.ISequence<Dafny.Rune> str, Dafny.ISet<Dafny.Rune> mustEscape, Dafny.Rune escape)
    {
      Dafny.ISequence<Dafny.Rune> _191___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, str);
      } else if ((mustEscape).Contains((str).Select(BigInteger.Zero))) {
        _191___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements(escape, (str).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in56 = (str).Drop(BigInteger.One);
        Dafny.ISet<Dafny.Rune> _in57 = mustEscape;
        Dafny.Rune _in58 = escape;
        str = _in56;
        mustEscape = _in57;
        escape = _in58;
        goto TAIL_CALL_START;
      } else {
        _191___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in59 = (str).Drop(BigInteger.One);
        Dafny.ISet<Dafny.Rune> _in60 = mustEscape;
        Dafny.Rune _in61 = escape;
        str = _in59;
        mustEscape = _in60;
        escape = _in61;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> Unescape(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune escape)
    {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(str);
      } else if (((str).Select(BigInteger.Zero)) == (escape)) {
        if ((new BigInteger((str).Count)) > (BigInteger.One)) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _192_valueOrError0 = Std.Strings.CharStrEscaping.__default.Unescape((str).Drop(new BigInteger(2)), escape);
          if ((_192_valueOrError0).IsFailure()) {
            return (_192_valueOrError0).PropagateFailure<Dafny.ISequence<Dafny.Rune>>();
          } else {
            Dafny.ISequence<Dafny.Rune> _193_tl = (_192_valueOrError0).Extract();
            return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.One)), _193_tl));
          }
        } else {
          return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
        }
      } else {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _194_valueOrError1 = Std.Strings.CharStrEscaping.__default.Unescape((str).Drop(BigInteger.One), escape);
        if ((_194_valueOrError1).IsFailure()) {
          return (_194_valueOrError1).PropagateFailure<Dafny.ISequence<Dafny.Rune>>();
        } else {
          Dafny.ISequence<Dafny.Rune> _195_tl = (_194_valueOrError1).Extract();
          return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.Zero)), _195_tl));
        }
      }
    }
  }
} // end of namespace Std.Strings.CharStrEscaping
namespace Std.Strings {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      return Std.Strings.DecimalConversion.__default.OfNat(n);
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n) {
      return Std.Strings.DecimalConversion.__default.OfInt(n, new Dafny.Rune('-'));
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.DecimalConversion.__default.ToNat(str);
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.DecimalConversion.__default.ToInt(str, new Dafny.Rune('-'));
    }
    public static Dafny.ISequence<Dafny.Rune> EscapeQuotes(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.CharStrEscaping.__default.Escape(str, Dafny.Set<Dafny.Rune>.FromElements(new Dafny.Rune('\"'), new Dafny.Rune('\'')), new Dafny.Rune('\\'));
    }
    public static Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> UnescapeQuotes(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.CharStrEscaping.__default.Unescape(str, new Dafny.Rune('\\'));
    }
    public static Dafny.ISequence<Dafny.Rune> OfBool(bool b) {
      if (b) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false");
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfChar(Dafny.Rune c) {
      return Dafny.Sequence<Dafny.Rune>.FromElements(c);
    }
  }
} // end of namespace Std.Strings

namespace DAST.Format {

  public partial class __default {
    public static BigInteger SeqToHeight<__T>(Dafny.ISequence<__T> s, Func<__T, BigInteger> f)
    {
      if ((new BigInteger((s).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        BigInteger _828_i = Dafny.Helpers.Id<Func<__T, BigInteger>>(f)((s).Select(BigInteger.Zero));
        BigInteger _829_j = DAST.Format.__default.SeqToHeight<__T>((s).Drop(BigInteger.One), f);
        if ((_828_i) < (_829_j)) {
          return _829_j;
        } else {
          return _828_i;
        }
      }
    }
  }

  public interface _IUnOpFormat {
    bool is_NoFormat { get; }
    bool is_CombineNotInner { get; }
    _IUnOpFormat DowncastClone();
  }
  public abstract class UnOpFormat : _IUnOpFormat {
    public UnOpFormat() {
    }
    private static readonly DAST.Format._IUnOpFormat theDefault = create_NoFormat();
    public static DAST.Format._IUnOpFormat Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST.Format._IUnOpFormat> _TYPE = new Dafny.TypeDescriptor<DAST.Format._IUnOpFormat>(DAST.Format.UnOpFormat.Default());
    public static Dafny.TypeDescriptor<DAST.Format._IUnOpFormat> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnOpFormat create_NoFormat() {
      return new UnOpFormat_NoFormat();
    }
    public static _IUnOpFormat create_CombineNotInner() {
      return new UnOpFormat_CombineNotInner();
    }
    public bool is_NoFormat { get { return this is UnOpFormat_NoFormat; } }
    public bool is_CombineNotInner { get { return this is UnOpFormat_CombineNotInner; } }
    public static System.Collections.Generic.IEnumerable<_IUnOpFormat> AllSingletonConstructors {
      get {
        yield return UnOpFormat.create_NoFormat();
        yield return UnOpFormat.create_CombineNotInner();
      }
    }
    public abstract _IUnOpFormat DowncastClone();
  }
  public class UnOpFormat_NoFormat : UnOpFormat {
    public UnOpFormat_NoFormat() : base() {
    }
    public override _IUnOpFormat DowncastClone() {
      if (this is _IUnOpFormat dt) { return dt; }
      return new UnOpFormat_NoFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.UnOpFormat_NoFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.UnOpFormat.NoFormat";
      return s;
    }
  }
  public class UnOpFormat_CombineNotInner : UnOpFormat {
    public UnOpFormat_CombineNotInner() : base() {
    }
    public override _IUnOpFormat DowncastClone() {
      if (this is _IUnOpFormat dt) { return dt; }
      return new UnOpFormat_CombineNotInner();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.UnOpFormat_CombineNotInner;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.UnOpFormat.CombineNotInner";
      return s;
    }
  }

  public interface _IBinOpFormat {
    bool is_NoFormat { get; }
    bool is_ImpliesFormat { get; }
    bool is_Equivalence { get; }
    bool is_ReverseOperands { get; }
    _IBinOpFormat DowncastClone();
  }
  public abstract class BinOpFormat : _IBinOpFormat {
    public BinOpFormat() {
    }
    private static readonly DAST.Format._IBinOpFormat theDefault = create_NoFormat();
    public static DAST.Format._IBinOpFormat Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST.Format._IBinOpFormat> _TYPE = new Dafny.TypeDescriptor<DAST.Format._IBinOpFormat>(DAST.Format.BinOpFormat.Default());
    public static Dafny.TypeDescriptor<DAST.Format._IBinOpFormat> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IBinOpFormat create_NoFormat() {
      return new BinOpFormat_NoFormat();
    }
    public static _IBinOpFormat create_ImpliesFormat() {
      return new BinOpFormat_ImpliesFormat();
    }
    public static _IBinOpFormat create_Equivalence() {
      return new BinOpFormat_Equivalence();
    }
    public static _IBinOpFormat create_ReverseOperands() {
      return new BinOpFormat_ReverseOperands();
    }
    public bool is_NoFormat { get { return this is BinOpFormat_NoFormat; } }
    public bool is_ImpliesFormat { get { return this is BinOpFormat_ImpliesFormat; } }
    public bool is_Equivalence { get { return this is BinOpFormat_Equivalence; } }
    public bool is_ReverseOperands { get { return this is BinOpFormat_ReverseOperands; } }
    public static System.Collections.Generic.IEnumerable<_IBinOpFormat> AllSingletonConstructors {
      get {
        yield return BinOpFormat.create_NoFormat();
        yield return BinOpFormat.create_ImpliesFormat();
        yield return BinOpFormat.create_Equivalence();
        yield return BinOpFormat.create_ReverseOperands();
      }
    }
    public abstract _IBinOpFormat DowncastClone();
  }
  public class BinOpFormat_NoFormat : BinOpFormat {
    public BinOpFormat_NoFormat() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_NoFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_NoFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.NoFormat";
      return s;
    }
  }
  public class BinOpFormat_ImpliesFormat : BinOpFormat {
    public BinOpFormat_ImpliesFormat() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_ImpliesFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_ImpliesFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.ImpliesFormat";
      return s;
    }
  }
  public class BinOpFormat_Equivalence : BinOpFormat {
    public BinOpFormat_Equivalence() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_Equivalence();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_Equivalence;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.Equivalence";
      return s;
    }
  }
  public class BinOpFormat_ReverseOperands : BinOpFormat {
    public BinOpFormat_ReverseOperands() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_ReverseOperands();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_ReverseOperands;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.ReverseOperands";
      return s;
    }
  }
} // end of namespace DAST.Format
namespace DAST {


  public interface _IModule {
    bool is_Module { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    bool dtor_isExtern { get; }
    Dafny.ISequence<DAST._IModuleItem> dtor_body { get; }
    _IModule DowncastClone();
  }
  public class Module : _IModule {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly bool _isExtern;
    public readonly Dafny.ISequence<DAST._IModuleItem> _body;
    public Module(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      this._name = name;
      this._isExtern = isExtern;
      this._body = body;
    }
    public _IModule DowncastClone() {
      if (this is _IModule dt) { return dt; }
      return new Module(_name, _isExtern, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Module;
      return oth != null && object.Equals(this._name, oth._name) && this._isExtern == oth._isExtern && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isExtern));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Module.Module";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isExtern);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly DAST._IModule theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, false, Dafny.Sequence<DAST._IModuleItem>.Empty);
    public static DAST._IModule Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IModule> _TYPE = new Dafny.TypeDescriptor<DAST._IModule>(DAST.Module.Default());
    public static Dafny.TypeDescriptor<DAST._IModule> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModule create(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      return new Module(name, isExtern, body);
    }
    public static _IModule create_Module(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      return create(name, isExtern, body);
    }
    public bool is_Module { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public bool dtor_isExtern {
      get {
        return this._isExtern;
      }
    }
    public Dafny.ISequence<DAST._IModuleItem> dtor_body {
      get {
        return this._body;
      }
    }
  }

  public interface _IModuleItem {
    bool is_Module { get; }
    bool is_Class { get; }
    bool is_Trait { get; }
    bool is_Newtype { get; }
    bool is_Datatype { get; }
    DAST._IModule dtor_Module_a0 { get; }
    DAST._IClass dtor_Class_a0 { get; }
    DAST._ITrait dtor_Trait_a0 { get; }
    DAST._INewtype dtor_Newtype_a0 { get; }
    DAST._IDatatype dtor_Datatype_a0 { get; }
    _IModuleItem DowncastClone();
  }
  public abstract class ModuleItem : _IModuleItem {
    public ModuleItem() {
    }
    private static readonly DAST._IModuleItem theDefault = create_Module(DAST.Module.Default());
    public static DAST._IModuleItem Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IModuleItem> _TYPE = new Dafny.TypeDescriptor<DAST._IModuleItem>(DAST.ModuleItem.Default());
    public static Dafny.TypeDescriptor<DAST._IModuleItem> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModuleItem create_Module(DAST._IModule _a0) {
      return new ModuleItem_Module(_a0);
    }
    public static _IModuleItem create_Class(DAST._IClass _a0) {
      return new ModuleItem_Class(_a0);
    }
    public static _IModuleItem create_Trait(DAST._ITrait _a0) {
      return new ModuleItem_Trait(_a0);
    }
    public static _IModuleItem create_Newtype(DAST._INewtype _a0) {
      return new ModuleItem_Newtype(_a0);
    }
    public static _IModuleItem create_Datatype(DAST._IDatatype _a0) {
      return new ModuleItem_Datatype(_a0);
    }
    public bool is_Module { get { return this is ModuleItem_Module; } }
    public bool is_Class { get { return this is ModuleItem_Class; } }
    public bool is_Trait { get { return this is ModuleItem_Trait; } }
    public bool is_Newtype { get { return this is ModuleItem_Newtype; } }
    public bool is_Datatype { get { return this is ModuleItem_Datatype; } }
    public DAST._IModule dtor_Module_a0 {
      get {
        var d = this;
        return ((ModuleItem_Module)d)._a0;
      }
    }
    public DAST._IClass dtor_Class_a0 {
      get {
        var d = this;
        return ((ModuleItem_Class)d)._a0;
      }
    }
    public DAST._ITrait dtor_Trait_a0 {
      get {
        var d = this;
        return ((ModuleItem_Trait)d)._a0;
      }
    }
    public DAST._INewtype dtor_Newtype_a0 {
      get {
        var d = this;
        return ((ModuleItem_Newtype)d)._a0;
      }
    }
    public DAST._IDatatype dtor_Datatype_a0 {
      get {
        var d = this;
        return ((ModuleItem_Datatype)d)._a0;
      }
    }
    public abstract _IModuleItem DowncastClone();
  }
  public class ModuleItem_Module : ModuleItem {
    public readonly DAST._IModule _a0;
    public ModuleItem_Module(DAST._IModule _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Module(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Module;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Module";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Class : ModuleItem {
    public readonly DAST._IClass _a0;
    public ModuleItem_Class(DAST._IClass _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Class(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Class;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Class";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Trait : ModuleItem {
    public readonly DAST._ITrait _a0;
    public ModuleItem_Trait(DAST._ITrait _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Trait(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Trait;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Newtype : ModuleItem {
    public readonly DAST._INewtype _a0;
    public ModuleItem_Newtype(DAST._INewtype _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Newtype(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Newtype;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Newtype";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Datatype : ModuleItem {
    public readonly DAST._IDatatype _a0;
    public ModuleItem_Datatype(DAST._IDatatype _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Datatype(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Datatype;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Datatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IType {
    bool is_Path { get; }
    bool is_Nullable { get; }
    bool is_Tuple { get; }
    bool is_Array { get; }
    bool is_Seq { get; }
    bool is_Set { get; }
    bool is_Multiset { get; }
    bool is_Map { get; }
    bool is_SetBuilder { get; }
    bool is_MapBuilder { get; }
    bool is_Arrow { get; }
    bool is_Primitive { get; }
    bool is_Passthrough { get; }
    bool is_TypeArg { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Path_a0 { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    DAST._IResolvedType dtor_resolved { get; }
    DAST._IType dtor_Nullable_a0 { get; }
    Dafny.ISequence<DAST._IType> dtor_Tuple_a0 { get; }
    DAST._IType dtor_element { get; }
    BigInteger dtor_dims { get; }
    DAST._IType dtor_key { get; }
    DAST._IType dtor_value { get; }
    Dafny.ISequence<DAST._IType> dtor_args { get; }
    DAST._IType dtor_result { get; }
    DAST._IPrimitive dtor_Primitive_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_TypeArg_a0 { get; }
    _IType DowncastClone();
  }
  public abstract class Type : _IType {
    public Type() {
    }
    private static readonly DAST._IType theDefault = create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<DAST._IType>.Empty, DAST.ResolvedType.Default());
    public static DAST._IType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IType> _TYPE = new Dafny.TypeDescriptor<DAST._IType>(DAST.Type.Default());
    public static Dafny.TypeDescriptor<DAST._IType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IType create_Path(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0, Dafny.ISequence<DAST._IType> typeArgs, DAST._IResolvedType resolved) {
      return new Type_Path(_a0, typeArgs, resolved);
    }
    public static _IType create_Nullable(DAST._IType _a0) {
      return new Type_Nullable(_a0);
    }
    public static _IType create_Tuple(Dafny.ISequence<DAST._IType> _a0) {
      return new Type_Tuple(_a0);
    }
    public static _IType create_Array(DAST._IType element, BigInteger dims) {
      return new Type_Array(element, dims);
    }
    public static _IType create_Seq(DAST._IType element) {
      return new Type_Seq(element);
    }
    public static _IType create_Set(DAST._IType element) {
      return new Type_Set(element);
    }
    public static _IType create_Multiset(DAST._IType element) {
      return new Type_Multiset(element);
    }
    public static _IType create_Map(DAST._IType key, DAST._IType @value) {
      return new Type_Map(key, @value);
    }
    public static _IType create_SetBuilder(DAST._IType element) {
      return new Type_SetBuilder(element);
    }
    public static _IType create_MapBuilder(DAST._IType key, DAST._IType @value) {
      return new Type_MapBuilder(key, @value);
    }
    public static _IType create_Arrow(Dafny.ISequence<DAST._IType> args, DAST._IType result) {
      return new Type_Arrow(args, result);
    }
    public static _IType create_Primitive(DAST._IPrimitive _a0) {
      return new Type_Primitive(_a0);
    }
    public static _IType create_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Type_Passthrough(_a0);
    }
    public static _IType create_TypeArg(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Type_TypeArg(_a0);
    }
    public bool is_Path { get { return this is Type_Path; } }
    public bool is_Nullable { get { return this is Type_Nullable; } }
    public bool is_Tuple { get { return this is Type_Tuple; } }
    public bool is_Array { get { return this is Type_Array; } }
    public bool is_Seq { get { return this is Type_Seq; } }
    public bool is_Set { get { return this is Type_Set; } }
    public bool is_Multiset { get { return this is Type_Multiset; } }
    public bool is_Map { get { return this is Type_Map; } }
    public bool is_SetBuilder { get { return this is Type_SetBuilder; } }
    public bool is_MapBuilder { get { return this is Type_MapBuilder; } }
    public bool is_Arrow { get { return this is Type_Arrow; } }
    public bool is_Primitive { get { return this is Type_Primitive; } }
    public bool is_Passthrough { get { return this is Type_Passthrough; } }
    public bool is_TypeArg { get { return this is Type_TypeArg; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Path_a0 {
      get {
        var d = this;
        return ((Type_Path)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        return ((Type_Path)d)._typeArgs;
      }
    }
    public DAST._IResolvedType dtor_resolved {
      get {
        var d = this;
        return ((Type_Path)d)._resolved;
      }
    }
    public DAST._IType dtor_Nullable_a0 {
      get {
        var d = this;
        return ((Type_Nullable)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_Tuple_a0 {
      get {
        var d = this;
        return ((Type_Tuple)d)._a0;
      }
    }
    public DAST._IType dtor_element {
      get {
        var d = this;
        if (d is Type_Array) { return ((Type_Array)d)._element; }
        if (d is Type_Seq) { return ((Type_Seq)d)._element; }
        if (d is Type_Set) { return ((Type_Set)d)._element; }
        if (d is Type_Multiset) { return ((Type_Multiset)d)._element; }
        return ((Type_SetBuilder)d)._element;
      }
    }
    public BigInteger dtor_dims {
      get {
        var d = this;
        return ((Type_Array)d)._dims;
      }
    }
    public DAST._IType dtor_key {
      get {
        var d = this;
        if (d is Type_Map) { return ((Type_Map)d)._key; }
        return ((Type_MapBuilder)d)._key;
      }
    }
    public DAST._IType dtor_value {
      get {
        var d = this;
        if (d is Type_Map) { return ((Type_Map)d)._value; }
        return ((Type_MapBuilder)d)._value;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_args {
      get {
        var d = this;
        return ((Type_Arrow)d)._args;
      }
    }
    public DAST._IType dtor_result {
      get {
        var d = this;
        return ((Type_Arrow)d)._result;
      }
    }
    public DAST._IPrimitive dtor_Primitive_a0 {
      get {
        var d = this;
        return ((Type_Primitive)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 {
      get {
        var d = this;
        return ((Type_Passthrough)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_TypeArg_a0 {
      get {
        var d = this;
        return ((Type_TypeArg)d)._a0;
      }
    }
    public abstract _IType DowncastClone();
  }
  public class Type_Path : Type {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly DAST._IResolvedType _resolved;
    public Type_Path(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0, Dafny.ISequence<DAST._IType> typeArgs, DAST._IResolvedType resolved) : base() {
      this._a0 = _a0;
      this._typeArgs = typeArgs;
      this._resolved = resolved;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Path(_a0, _typeArgs, _resolved);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Path;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._resolved, oth._resolved);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._resolved));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Path";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._resolved);
      s += ")";
      return s;
    }
  }
  public class Type_Nullable : Type {
    public readonly DAST._IType _a0;
    public Type_Nullable(DAST._IType _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Nullable(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Nullable;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Nullable";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Tuple : Type {
    public readonly Dafny.ISequence<DAST._IType> _a0;
    public Type_Tuple(Dafny.ISequence<DAST._IType> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Tuple(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Tuple;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Array : Type {
    public readonly DAST._IType _element;
    public readonly BigInteger _dims;
    public Type_Array(DAST._IType element, BigInteger dims) : base() {
      this._element = element;
      this._dims = dims;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Array(_element, _dims);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Array;
      return oth != null && object.Equals(this._element, oth._element) && this._dims == oth._dims;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dims));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Array";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dims);
      s += ")";
      return s;
    }
  }
  public class Type_Seq : Type {
    public readonly DAST._IType _element;
    public Type_Seq(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Seq(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Seq;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Seq";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Set : Type {
    public readonly DAST._IType _element;
    public Type_Set(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Set(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Set;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Set";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Multiset : Type {
    public readonly DAST._IType _element;
    public Type_Multiset(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Multiset(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Multiset;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Multiset";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Map : Type {
    public readonly DAST._IType _key;
    public readonly DAST._IType _value;
    public Type_Map(DAST._IType key, DAST._IType @value) : base() {
      this._key = key;
      this._value = @value;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Map(_key, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Map;
      return oth != null && object.Equals(this._key, oth._key) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._key));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Map";
      s += "(";
      s += Dafny.Helpers.ToString(this._key);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Type_SetBuilder : Type {
    public readonly DAST._IType _element;
    public Type_SetBuilder(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_SetBuilder(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_SetBuilder;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.SetBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_MapBuilder : Type {
    public readonly DAST._IType _key;
    public readonly DAST._IType _value;
    public Type_MapBuilder(DAST._IType key, DAST._IType @value) : base() {
      this._key = key;
      this._value = @value;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_MapBuilder(_key, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_MapBuilder;
      return oth != null && object.Equals(this._key, oth._key) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._key));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.MapBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._key);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Type_Arrow : Type {
    public readonly Dafny.ISequence<DAST._IType> _args;
    public readonly DAST._IType _result;
    public Type_Arrow(Dafny.ISequence<DAST._IType> args, DAST._IType result) : base() {
      this._args = args;
      this._result = result;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Arrow(_args, _result);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Arrow;
      return oth != null && object.Equals(this._args, oth._args) && object.Equals(this._result, oth._result);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._result));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Arrow";
      s += "(";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._result);
      s += ")";
      return s;
    }
  }
  public class Type_Primitive : Type {
    public readonly DAST._IPrimitive _a0;
    public Type_Primitive(DAST._IPrimitive _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Primitive(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Primitive;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Primitive";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Passthrough : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Type_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Passthrough(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Passthrough;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Passthrough";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TypeArg : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Type_TypeArg(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TypeArg(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_TypeArg;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.TypeArg";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IPrimitive {
    bool is_Int { get; }
    bool is_Real { get; }
    bool is_String { get; }
    bool is_Bool { get; }
    bool is_Char { get; }
    _IPrimitive DowncastClone();
  }
  public abstract class Primitive : _IPrimitive {
    public Primitive() {
    }
    private static readonly DAST._IPrimitive theDefault = create_Int();
    public static DAST._IPrimitive Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IPrimitive> _TYPE = new Dafny.TypeDescriptor<DAST._IPrimitive>(DAST.Primitive.Default());
    public static Dafny.TypeDescriptor<DAST._IPrimitive> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPrimitive create_Int() {
      return new Primitive_Int();
    }
    public static _IPrimitive create_Real() {
      return new Primitive_Real();
    }
    public static _IPrimitive create_String() {
      return new Primitive_String();
    }
    public static _IPrimitive create_Bool() {
      return new Primitive_Bool();
    }
    public static _IPrimitive create_Char() {
      return new Primitive_Char();
    }
    public bool is_Int { get { return this is Primitive_Int; } }
    public bool is_Real { get { return this is Primitive_Real; } }
    public bool is_String { get { return this is Primitive_String; } }
    public bool is_Bool { get { return this is Primitive_Bool; } }
    public bool is_Char { get { return this is Primitive_Char; } }
    public static System.Collections.Generic.IEnumerable<_IPrimitive> AllSingletonConstructors {
      get {
        yield return Primitive.create_Int();
        yield return Primitive.create_Real();
        yield return Primitive.create_String();
        yield return Primitive.create_Bool();
        yield return Primitive.create_Char();
      }
    }
    public abstract _IPrimitive DowncastClone();
  }
  public class Primitive_Int : Primitive {
    public Primitive_Int() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Int();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Int;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Int";
      return s;
    }
  }
  public class Primitive_Real : Primitive {
    public Primitive_Real() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Real();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Real;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Real";
      return s;
    }
  }
  public class Primitive_String : Primitive {
    public Primitive_String() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_String();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_String;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.String";
      return s;
    }
  }
  public class Primitive_Bool : Primitive {
    public Primitive_Bool() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Bool();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Bool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Bool";
      return s;
    }
  }
  public class Primitive_Char : Primitive {
    public Primitive_Char() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Char();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Char;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Char";
      return s;
    }
  }

  public interface _INewtypeRange {
    bool is_U8 { get; }
    bool is_I8 { get; }
    bool is_U16 { get; }
    bool is_I16 { get; }
    bool is_U32 { get; }
    bool is_I32 { get; }
    bool is_U64 { get; }
    bool is_I64 { get; }
    bool is_U128 { get; }
    bool is_I128 { get; }
    bool is_BigInt { get; }
    bool is_NoRange { get; }
    _INewtypeRange DowncastClone();
  }
  public abstract class NewtypeRange : _INewtypeRange {
    public NewtypeRange() {
    }
    private static readonly DAST._INewtypeRange theDefault = create_U8();
    public static DAST._INewtypeRange Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._INewtypeRange> _TYPE = new Dafny.TypeDescriptor<DAST._INewtypeRange>(DAST.NewtypeRange.Default());
    public static Dafny.TypeDescriptor<DAST._INewtypeRange> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INewtypeRange create_U8() {
      return new NewtypeRange_U8();
    }
    public static _INewtypeRange create_I8() {
      return new NewtypeRange_I8();
    }
    public static _INewtypeRange create_U16() {
      return new NewtypeRange_U16();
    }
    public static _INewtypeRange create_I16() {
      return new NewtypeRange_I16();
    }
    public static _INewtypeRange create_U32() {
      return new NewtypeRange_U32();
    }
    public static _INewtypeRange create_I32() {
      return new NewtypeRange_I32();
    }
    public static _INewtypeRange create_U64() {
      return new NewtypeRange_U64();
    }
    public static _INewtypeRange create_I64() {
      return new NewtypeRange_I64();
    }
    public static _INewtypeRange create_U128() {
      return new NewtypeRange_U128();
    }
    public static _INewtypeRange create_I128() {
      return new NewtypeRange_I128();
    }
    public static _INewtypeRange create_BigInt() {
      return new NewtypeRange_BigInt();
    }
    public static _INewtypeRange create_NoRange() {
      return new NewtypeRange_NoRange();
    }
    public bool is_U8 { get { return this is NewtypeRange_U8; } }
    public bool is_I8 { get { return this is NewtypeRange_I8; } }
    public bool is_U16 { get { return this is NewtypeRange_U16; } }
    public bool is_I16 { get { return this is NewtypeRange_I16; } }
    public bool is_U32 { get { return this is NewtypeRange_U32; } }
    public bool is_I32 { get { return this is NewtypeRange_I32; } }
    public bool is_U64 { get { return this is NewtypeRange_U64; } }
    public bool is_I64 { get { return this is NewtypeRange_I64; } }
    public bool is_U128 { get { return this is NewtypeRange_U128; } }
    public bool is_I128 { get { return this is NewtypeRange_I128; } }
    public bool is_BigInt { get { return this is NewtypeRange_BigInt; } }
    public bool is_NoRange { get { return this is NewtypeRange_NoRange; } }
    public static System.Collections.Generic.IEnumerable<_INewtypeRange> AllSingletonConstructors {
      get {
        yield return NewtypeRange.create_U8();
        yield return NewtypeRange.create_I8();
        yield return NewtypeRange.create_U16();
        yield return NewtypeRange.create_I16();
        yield return NewtypeRange.create_U32();
        yield return NewtypeRange.create_I32();
        yield return NewtypeRange.create_U64();
        yield return NewtypeRange.create_I64();
        yield return NewtypeRange.create_U128();
        yield return NewtypeRange.create_I128();
        yield return NewtypeRange.create_BigInt();
        yield return NewtypeRange.create_NoRange();
      }
    }
    public abstract _INewtypeRange DowncastClone();
  }
  public class NewtypeRange_U8 : NewtypeRange {
    public NewtypeRange_U8() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U8();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U8";
      return s;
    }
  }
  public class NewtypeRange_I8 : NewtypeRange {
    public NewtypeRange_I8() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I8();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I8";
      return s;
    }
  }
  public class NewtypeRange_U16 : NewtypeRange {
    public NewtypeRange_U16() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U16();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U16";
      return s;
    }
  }
  public class NewtypeRange_I16 : NewtypeRange {
    public NewtypeRange_I16() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I16();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I16";
      return s;
    }
  }
  public class NewtypeRange_U32 : NewtypeRange {
    public NewtypeRange_U32() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U32();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U32";
      return s;
    }
  }
  public class NewtypeRange_I32 : NewtypeRange {
    public NewtypeRange_I32() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I32();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I32";
      return s;
    }
  }
  public class NewtypeRange_U64 : NewtypeRange {
    public NewtypeRange_U64() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U64();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U64";
      return s;
    }
  }
  public class NewtypeRange_I64 : NewtypeRange {
    public NewtypeRange_I64() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I64();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I64";
      return s;
    }
  }
  public class NewtypeRange_U128 : NewtypeRange {
    public NewtypeRange_U128() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U128();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U128";
      return s;
    }
  }
  public class NewtypeRange_I128 : NewtypeRange {
    public NewtypeRange_I128() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I128();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I128";
      return s;
    }
  }
  public class NewtypeRange_BigInt : NewtypeRange {
    public NewtypeRange_BigInt() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_BigInt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_BigInt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.BigInt";
      return s;
    }
  }
  public class NewtypeRange_NoRange : NewtypeRange {
    public NewtypeRange_NoRange() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_NoRange();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_NoRange;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.NoRange";
      return s;
    }
  }

  public interface _IAttribute {
    bool is_Attribute { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_args { get; }
    _IAttribute DowncastClone();
  }
  public class Attribute : _IAttribute {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _args;
    public Attribute(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      this._name = name;
      this._args = args;
    }
    public _IAttribute DowncastClone() {
      if (this is _IAttribute dt) { return dt; }
      return new Attribute(_name, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Attribute;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Attribute.Attribute";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
    private static readonly DAST._IAttribute theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty);
    public static DAST._IAttribute Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IAttribute> _TYPE = new Dafny.TypeDescriptor<DAST._IAttribute>(DAST.Attribute.Default());
    public static Dafny.TypeDescriptor<DAST._IAttribute> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAttribute create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      return new Attribute(name, args);
    }
    public static _IAttribute create_Attribute(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      return create(name, args);
    }
    public bool is_Attribute { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_args {
      get {
        return this._args;
      }
    }
  }

  public interface _IDatatypeType {
    bool is_DatatypeType { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IDatatypeType DowncastClone();
  }
  public class DatatypeType : _IDatatypeType {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public DatatypeType(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._path = path;
      this._attributes = attributes;
    }
    public _IDatatypeType DowncastClone() {
      if (this is _IDatatypeType dt) { return dt; }
      return new DatatypeType(_path, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.DatatypeType;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.DatatypeType.DatatypeType";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatypeType theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IDatatypeType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatypeType> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatypeType>(DAST.DatatypeType.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatypeType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatypeType create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new DatatypeType(path, attributes);
    }
    public static _IDatatypeType create_DatatypeType(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(path, attributes);
    }
    public bool is_DatatypeType { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        return this._path;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IResolvedType {
    bool is_AllocatedDatatype { get; }
    bool is_Datatype { get; }
    bool is_Trait { get; }
    bool is_Newtype { get; }
    DAST._IDatatypeType dtor_datatypeType { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    DAST._IType dtor_baseType { get; }
    DAST._INewtypeRange dtor_range { get; }
    bool dtor_erase { get; }
    _IResolvedType DowncastClone();
  }
  public abstract class ResolvedType : _IResolvedType {
    public ResolvedType() {
    }
    private static readonly DAST._IResolvedType theDefault = create_AllocatedDatatype(DAST.DatatypeType.Default());
    public static DAST._IResolvedType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IResolvedType> _TYPE = new Dafny.TypeDescriptor<DAST._IResolvedType>(DAST.ResolvedType.Default());
    public static Dafny.TypeDescriptor<DAST._IResolvedType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IResolvedType create_AllocatedDatatype(DAST._IDatatypeType datatypeType) {
      return new ResolvedType_AllocatedDatatype(datatypeType);
    }
    public static _IResolvedType create_Datatype(DAST._IDatatypeType datatypeType) {
      return new ResolvedType_Datatype(datatypeType);
    }
    public static _IResolvedType create_Trait(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new ResolvedType_Trait(path, attributes);
    }
    public static _IResolvedType create_Newtype(DAST._IType baseType, DAST._INewtypeRange range, bool erase, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new ResolvedType_Newtype(baseType, range, erase, attributes);
    }
    public bool is_AllocatedDatatype { get { return this is ResolvedType_AllocatedDatatype; } }
    public bool is_Datatype { get { return this is ResolvedType_Datatype; } }
    public bool is_Trait { get { return this is ResolvedType_Trait; } }
    public bool is_Newtype { get { return this is ResolvedType_Newtype; } }
    public DAST._IDatatypeType dtor_datatypeType {
      get {
        var d = this;
        if (d is ResolvedType_AllocatedDatatype) { return ((ResolvedType_AllocatedDatatype)d)._datatypeType; }
        return ((ResolvedType_Datatype)d)._datatypeType;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        var d = this;
        return ((ResolvedType_Trait)d)._path;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        var d = this;
        if (d is ResolvedType_Trait) { return ((ResolvedType_Trait)d)._attributes; }
        return ((ResolvedType_Newtype)d)._attributes;
      }
    }
    public DAST._IType dtor_baseType {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._baseType;
      }
    }
    public DAST._INewtypeRange dtor_range {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._range;
      }
    }
    public bool dtor_erase {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._erase;
      }
    }
    public abstract _IResolvedType DowncastClone();
  }
  public class ResolvedType_AllocatedDatatype : ResolvedType {
    public readonly DAST._IDatatypeType _datatypeType;
    public ResolvedType_AllocatedDatatype(DAST._IDatatypeType datatypeType) : base() {
      this._datatypeType = datatypeType;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_AllocatedDatatype(_datatypeType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_AllocatedDatatype;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.AllocatedDatatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Datatype : ResolvedType {
    public readonly DAST._IDatatypeType _datatypeType;
    public ResolvedType_Datatype(DAST._IDatatypeType datatypeType) : base() {
      this._datatypeType = datatypeType;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Datatype(_datatypeType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Datatype;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Datatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Trait : ResolvedType {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public ResolvedType_Trait(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) : base() {
      this._path = path;
      this._attributes = attributes;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Trait(_path, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Trait;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Newtype : ResolvedType {
    public readonly DAST._IType _baseType;
    public readonly DAST._INewtypeRange _range;
    public readonly bool _erase;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public ResolvedType_Newtype(DAST._IType baseType, DAST._INewtypeRange range, bool erase, Dafny.ISequence<DAST._IAttribute> attributes) : base() {
      this._baseType = baseType;
      this._range = range;
      this._erase = erase;
      this._attributes = attributes;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Newtype(_baseType, _range, _erase, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Newtype;
      return oth != null && object.Equals(this._baseType, oth._baseType) && object.Equals(this._range, oth._range) && this._erase == oth._erase && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._baseType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._erase));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Newtype";
      s += "(";
      s += Dafny.Helpers.ToString(this._baseType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._erase);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
  }

  public interface _IIdent {
    bool is_Ident { get; }
    Dafny.ISequence<Dafny.Rune> dtor_id { get; }
  }
  public class Ident : _IIdent {
    public readonly Dafny.ISequence<Dafny.Rune> _id;
    public Ident(Dafny.ISequence<Dafny.Rune> id) {
      this._id = id;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Ident;
      return oth != null && object.Equals(this._id, oth._id);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._id));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Ident.Ident";
      s += "(";
      s += this._id.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IIdent create(Dafny.ISequence<Dafny.Rune> id) {
      return new Ident(id);
    }
    public static _IIdent create_Ident(Dafny.ISequence<Dafny.Rune> id) {
      return create(id);
    }
    public bool is_Ident { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_id {
      get {
        return this._id;
      }
    }
  }

  public interface _IClass {
    bool is_Class { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.Rune> dtor_enclosingModule { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IType> dtor_superClasses { get; }
    Dafny.ISequence<DAST._IField> dtor_fields { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IClass DowncastClone();
  }
  public class Class : _IClass {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.Rune> _enclosingModule;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IType> _superClasses;
    public readonly Dafny.ISequence<DAST._IField> _fields;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Class(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._enclosingModule = enclosingModule;
      this._typeParams = typeParams;
      this._superClasses = superClasses;
      this._fields = fields;
      this._body = body;
      this._attributes = attributes;
    }
    public _IClass DowncastClone() {
      if (this is _IClass dt) { return dt; }
      return new Class(_name, _enclosingModule, _typeParams, _superClasses, _fields, _body, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Class;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._enclosingModule, oth._enclosingModule) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._superClasses, oth._superClasses) && object.Equals(this._fields, oth._fields) && object.Equals(this._body, oth._body) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enclosingModule));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._superClasses));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Class.Class";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._enclosingModule);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._superClasses);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IClass theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IField>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IClass Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IClass> _TYPE = new Dafny.TypeDescriptor<DAST._IClass>(DAST.Class.Default());
    public static Dafny.TypeDescriptor<DAST._IClass> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IClass create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Class(name, enclosingModule, typeParams, superClasses, fields, body, attributes);
    }
    public static _IClass create_Class(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, enclosingModule, typeParams, superClasses, fields, body, attributes);
    }
    public bool is_Class { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_enclosingModule {
      get {
        return this._enclosingModule;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_superClasses {
      get {
        return this._superClasses;
      }
    }
    public Dafny.ISequence<DAST._IField> dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _ITrait {
    bool is_Trait { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _ITrait DowncastClone();
  }
  public class Trait : _ITrait {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Trait(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._typeParams = typeParams;
      this._body = body;
      this._attributes = attributes;
    }
    public _ITrait DowncastClone() {
      if (this is _ITrait dt) { return dt; }
      return new Trait(_name, _typeParams, _body, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Trait;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._body, oth._body) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Trait.Trait";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._ITrait theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._ITrait Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ITrait> _TYPE = new Dafny.TypeDescriptor<DAST._ITrait>(DAST.Trait.Default());
    public static Dafny.TypeDescriptor<DAST._ITrait> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITrait create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Trait(name, typeParams, body, attributes);
    }
    public static _ITrait create_Trait(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, typeParams, body, attributes);
    }
    public bool is_Trait { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IDatatype {
    bool is_Datatype { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.Rune> dtor_enclosingModule { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IDatatypeCtor> dtor_ctors { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    bool dtor_isCo { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IDatatype DowncastClone();
  }
  public class Datatype : _IDatatype {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.Rune> _enclosingModule;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IDatatypeCtor> _ctors;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly bool _isCo;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Datatype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._enclosingModule = enclosingModule;
      this._typeParams = typeParams;
      this._ctors = ctors;
      this._body = body;
      this._isCo = isCo;
      this._attributes = attributes;
    }
    public _IDatatype DowncastClone() {
      if (this is _IDatatype dt) { return dt; }
      return new Datatype(_name, _enclosingModule, _typeParams, _ctors, _body, _isCo, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Datatype;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._enclosingModule, oth._enclosingModule) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._ctors, oth._ctors) && object.Equals(this._body, oth._body) && this._isCo == oth._isCo && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enclosingModule));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._ctors));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isCo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Datatype.Datatype";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._enclosingModule);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._ctors);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isCo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatype theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IDatatypeCtor>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, false, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IDatatype Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatype> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatype>(DAST.Datatype.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatype> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatype create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Datatype(name, enclosingModule, typeParams, ctors, body, isCo, attributes);
    }
    public static _IDatatype create_Datatype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, enclosingModule, typeParams, ctors, body, isCo, attributes);
    }
    public bool is_Datatype { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_enclosingModule {
      get {
        return this._enclosingModule;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IDatatypeCtor> dtor_ctors {
      get {
        return this._ctors;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public bool dtor_isCo {
      get {
        return this._isCo;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IDatatypeCtor {
    bool is_DatatypeCtor { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IFormal> dtor_args { get; }
    bool dtor_hasAnyArgs { get; }
    _IDatatypeCtor DowncastClone();
  }
  public class DatatypeCtor : _IDatatypeCtor {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IFormal> _args;
    public readonly bool _hasAnyArgs;
    public DatatypeCtor(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      this._name = name;
      this._args = args;
      this._hasAnyArgs = hasAnyArgs;
    }
    public _IDatatypeCtor DowncastClone() {
      if (this is _IDatatypeCtor dt) { return dt; }
      return new DatatypeCtor(_name, _args, _hasAnyArgs);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.DatatypeCtor;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._args, oth._args) && this._hasAnyArgs == oth._hasAnyArgs;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hasAnyArgs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.DatatypeCtor.DatatypeCtor";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hasAnyArgs);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatypeCtor theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IFormal>.Empty, false);
    public static DAST._IDatatypeCtor Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatypeCtor> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatypeCtor>(DAST.DatatypeCtor.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatypeCtor> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatypeCtor create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      return new DatatypeCtor(name, args, hasAnyArgs);
    }
    public static _IDatatypeCtor create_DatatypeCtor(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      return create(name, args, hasAnyArgs);
    }
    public bool is_DatatypeCtor { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_args {
      get {
        return this._args;
      }
    }
    public bool dtor_hasAnyArgs {
      get {
        return this._hasAnyArgs;
      }
    }
  }

  public interface _INewtype {
    bool is_Newtype { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    DAST._IType dtor_base { get; }
    DAST._INewtypeRange dtor_range { get; }
    Dafny.ISequence<DAST._IStatement> dtor_witnessStmts { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_witnessExpr { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _INewtype DowncastClone();
  }
  public class Newtype : _INewtype {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly DAST._IType _base;
    public readonly DAST._INewtypeRange _range;
    public readonly Dafny.ISequence<DAST._IStatement> _witnessStmts;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _witnessExpr;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Newtype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._typeParams = typeParams;
      this._base = @base;
      this._range = range;
      this._witnessStmts = witnessStmts;
      this._witnessExpr = witnessExpr;
      this._attributes = attributes;
    }
    public _INewtype DowncastClone() {
      if (this is _INewtype dt) { return dt; }
      return new Newtype(_name, _typeParams, _base, _range, _witnessStmts, _witnessExpr, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Newtype;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._base, oth._base) && object.Equals(this._range, oth._range) && object.Equals(this._witnessStmts, oth._witnessStmts) && object.Equals(this._witnessExpr, oth._witnessExpr) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._base));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._witnessStmts));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._witnessExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Newtype.Newtype";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._base);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._witnessStmts);
      s += ", ";
      s += Dafny.Helpers.ToString(this._witnessExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._INewtype theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, DAST.Type.Default(), DAST.NewtypeRange.Default(), Dafny.Sequence<DAST._IStatement>.Empty, Std.Wrappers.Option<DAST._IExpression>.Default(), Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._INewtype Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._INewtype> _TYPE = new Dafny.TypeDescriptor<DAST._INewtype>(DAST.Newtype.Default());
    public static Dafny.TypeDescriptor<DAST._INewtype> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INewtype create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Newtype(name, typeParams, @base, range, witnessStmts, witnessExpr, attributes);
    }
    public static _INewtype create_Newtype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, typeParams, @base, range, witnessStmts, witnessExpr, attributes);
    }
    public bool is_Newtype { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public DAST._IType dtor_base {
      get {
        return this._base;
      }
    }
    public DAST._INewtypeRange dtor_range {
      get {
        return this._range;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_witnessStmts {
      get {
        return this._witnessStmts;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_witnessExpr {
      get {
        return this._witnessExpr;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IClassItem {
    bool is_Method { get; }
    DAST._IMethod dtor_Method_a0 { get; }
  }
  public class ClassItem : _IClassItem {
    public readonly DAST._IMethod _a0;
    public ClassItem(DAST._IMethod _a0) {
      this._a0 = _a0;
    }
    public static DAST._IMethod DowncastClone(DAST._IMethod _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ClassItem;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ClassItem.Method";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
    private static readonly DAST._IMethod theDefault = DAST.Method.Default();
    public static DAST._IMethod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IMethod> _TYPE = new Dafny.TypeDescriptor<DAST._IMethod>(DAST.Method.Default());
    public static Dafny.TypeDescriptor<DAST._IMethod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IClassItem create(DAST._IMethod _a0) {
      return new ClassItem(_a0);
    }
    public static _IClassItem create_Method(DAST._IMethod _a0) {
      return create(_a0);
    }
    public bool is_Method { get { return true; } }
    public DAST._IMethod dtor_Method_a0 {
      get {
        return this._a0;
      }
    }
  }

  public interface _IField {
    bool is_Field { get; }
    DAST._IFormal dtor_formal { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_defaultValue { get; }
    _IField DowncastClone();
  }
  public class Field : _IField {
    public readonly DAST._IFormal _formal;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _defaultValue;
    public Field(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      this._formal = formal;
      this._defaultValue = defaultValue;
    }
    public _IField DowncastClone() {
      if (this is _IField dt) { return dt; }
      return new Field(_formal, _defaultValue);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Field;
      return oth != null && object.Equals(this._formal, oth._formal) && object.Equals(this._defaultValue, oth._defaultValue);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formal));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._defaultValue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Field.Field";
      s += "(";
      s += Dafny.Helpers.ToString(this._formal);
      s += ", ";
      s += Dafny.Helpers.ToString(this._defaultValue);
      s += ")";
      return s;
    }
    private static readonly DAST._IField theDefault = create(DAST.Formal.Default(), Std.Wrappers.Option<DAST._IExpression>.Default());
    public static DAST._IField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IField> _TYPE = new Dafny.TypeDescriptor<DAST._IField>(DAST.Field.Default());
    public static Dafny.TypeDescriptor<DAST._IField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IField create(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      return new Field(formal, defaultValue);
    }
    public static _IField create_Field(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      return create(formal, defaultValue);
    }
    public bool is_Field { get { return true; } }
    public DAST._IFormal dtor_formal {
      get {
        return this._formal;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_defaultValue {
      get {
        return this._defaultValue;
      }
    }
  }

  public interface _IFormal {
    bool is_Formal { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IType dtor_typ { get; }
    _IFormal DowncastClone();
  }
  public class Formal : _IFormal {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public Formal(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      this._name = name;
      this._typ = typ;
    }
    public _IFormal DowncastClone() {
      if (this is _IFormal dt) { return dt; }
      return new Formal(_name, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Formal;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Formal.Formal";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
    private static readonly DAST._IFormal theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, DAST.Type.Default());
    public static DAST._IFormal Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IFormal> _TYPE = new Dafny.TypeDescriptor<DAST._IFormal>(DAST.Formal.Default());
    public static Dafny.TypeDescriptor<DAST._IFormal> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFormal create(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      return new Formal(name, typ);
    }
    public static _IFormal create_Formal(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      return create(name, typ);
    }
    public bool is_Formal { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public DAST._IType dtor_typ {
      get {
        return this._typ;
      }
    }
  }

  public interface _IMethod {
    bool is_Method { get; }
    bool dtor_isStatic { get; }
    bool dtor_hasBody { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_overridingPath { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IFormal> dtor_params { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<DAST._IType> dtor_outTypes { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outVars { get; }
    _IMethod DowncastClone();
  }
  public class Method : _IMethod {
    public readonly bool _isStatic;
    public readonly bool _hasBody;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _overridingPath;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IFormal> _params;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public readonly Dafny.ISequence<DAST._IType> _outTypes;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _outVars;
    public Method(bool isStatic, bool hasBody, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      this._isStatic = isStatic;
      this._hasBody = hasBody;
      this._overridingPath = overridingPath;
      this._name = name;
      this._typeParams = typeParams;
      this._params = @params;
      this._body = body;
      this._outTypes = outTypes;
      this._outVars = outVars;
    }
    public _IMethod DowncastClone() {
      if (this is _IMethod dt) { return dt; }
      return new Method(_isStatic, _hasBody, _overridingPath, _name, _typeParams, _params, _body, _outTypes, _outVars);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Method;
      return oth != null && this._isStatic == oth._isStatic && this._hasBody == oth._hasBody && object.Equals(this._overridingPath, oth._overridingPath) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._params, oth._params) && object.Equals(this._body, oth._body) && object.Equals(this._outTypes, oth._outTypes) && object.Equals(this._outVars, oth._outVars);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isStatic));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hasBody));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._overridingPath));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._params));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outTypes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outVars));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Method.Method";
      s += "(";
      s += Dafny.Helpers.ToString(this._isStatic);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hasBody);
      s += ", ";
      s += Dafny.Helpers.ToString(this._overridingPath);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._params);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outTypes);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outVars);
      s += ")";
      return s;
    }
    private static readonly DAST._IMethod theDefault = create(false, false, Std.Wrappers.Option<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>>.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IFormal>.Empty, Dafny.Sequence<DAST._IStatement>.Empty, Dafny.Sequence<DAST._IType>.Empty, Std.Wrappers.Option<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>>.Default());
    public static DAST._IMethod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IMethod> _TYPE = new Dafny.TypeDescriptor<DAST._IMethod>(DAST.Method.Default());
    public static Dafny.TypeDescriptor<DAST._IMethod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMethod create(bool isStatic, bool hasBody, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      return new Method(isStatic, hasBody, overridingPath, name, typeParams, @params, body, outTypes, outVars);
    }
    public static _IMethod create_Method(bool isStatic, bool hasBody, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      return create(isStatic, hasBody, overridingPath, name, typeParams, @params, body, outTypes, outVars);
    }
    public bool is_Method { get { return true; } }
    public bool dtor_isStatic {
      get {
        return this._isStatic;
      }
    }
    public bool dtor_hasBody {
      get {
        return this._hasBody;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_overridingPath {
      get {
        return this._overridingPath;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_params {
      get {
        return this._params;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_outTypes {
      get {
        return this._outTypes;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outVars {
      get {
        return this._outVars;
      }
    }
  }

  public interface _ICallSignature {
    bool is_CallSignature { get; }
    Dafny.ISequence<DAST._IFormal> dtor_parameters { get; }
  }
  public class CallSignature : _ICallSignature {
    public readonly Dafny.ISequence<DAST._IFormal> _parameters;
    public CallSignature(Dafny.ISequence<DAST._IFormal> parameters) {
      this._parameters = parameters;
    }
    public static Dafny.ISequence<DAST._IFormal> DowncastClone(Dafny.ISequence<DAST._IFormal> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallSignature;
      return oth != null && object.Equals(this._parameters, oth._parameters);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._parameters));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallSignature.CallSignature";
      s += "(";
      s += Dafny.Helpers.ToString(this._parameters);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<DAST._IFormal> theDefault = Dafny.Sequence<DAST._IFormal>.Empty;
    public static Dafny.ISequence<DAST._IFormal> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>>(Dafny.Sequence<DAST._IFormal>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICallSignature create(Dafny.ISequence<DAST._IFormal> parameters) {
      return new CallSignature(parameters);
    }
    public static _ICallSignature create_CallSignature(Dafny.ISequence<DAST._IFormal> parameters) {
      return create(parameters);
    }
    public bool is_CallSignature { get { return true; } }
    public Dafny.ISequence<DAST._IFormal> dtor_parameters {
      get {
        return this._parameters;
      }
    }
  }

  public interface _ICallName {
    bool is_Name { get; }
    bool is_MapBuilderAdd { get; }
    bool is_MapBuilderBuild { get; }
    bool is_SetBuilderAdd { get; }
    bool is_SetBuilderBuild { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Std.Wrappers._IOption<DAST._IType> dtor_onType { get; }
    Dafny.ISequence<DAST._IFormal> dtor_signature { get; }
    _ICallName DowncastClone();
  }
  public abstract class CallName : _ICallName {
    public CallName() {
    }
    private static readonly DAST._ICallName theDefault = create_Name(Dafny.Sequence<Dafny.Rune>.Empty, Std.Wrappers.Option<DAST._IType>.Default(), Dafny.Sequence<DAST._IFormal>.Empty);
    public static DAST._ICallName Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ICallName> _TYPE = new Dafny.TypeDescriptor<DAST._ICallName>(DAST.CallName.Default());
    public static Dafny.TypeDescriptor<DAST._ICallName> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICallName create_Name(Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<DAST._IType> onType, Dafny.ISequence<DAST._IFormal> signature) {
      return new CallName_Name(name, onType, signature);
    }
    public static _ICallName create_MapBuilderAdd() {
      return new CallName_MapBuilderAdd();
    }
    public static _ICallName create_MapBuilderBuild() {
      return new CallName_MapBuilderBuild();
    }
    public static _ICallName create_SetBuilderAdd() {
      return new CallName_SetBuilderAdd();
    }
    public static _ICallName create_SetBuilderBuild() {
      return new CallName_SetBuilderBuild();
    }
    public bool is_Name { get { return this is CallName_Name; } }
    public bool is_MapBuilderAdd { get { return this is CallName_MapBuilderAdd; } }
    public bool is_MapBuilderBuild { get { return this is CallName_MapBuilderBuild; } }
    public bool is_SetBuilderAdd { get { return this is CallName_SetBuilderAdd; } }
    public bool is_SetBuilderBuild { get { return this is CallName_SetBuilderBuild; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((CallName_Name)d)._name;
      }
    }
    public Std.Wrappers._IOption<DAST._IType> dtor_onType {
      get {
        var d = this;
        return ((CallName_Name)d)._onType;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_signature {
      get {
        var d = this;
        return ((CallName_Name)d)._signature;
      }
    }
    public abstract _ICallName DowncastClone();
  }
  public class CallName_Name : CallName {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Std.Wrappers._IOption<DAST._IType> _onType;
    public readonly Dafny.ISequence<DAST._IFormal> _signature;
    public CallName_Name(Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<DAST._IType> onType, Dafny.ISequence<DAST._IFormal> signature) : base() {
      this._name = name;
      this._onType = onType;
      this._signature = signature;
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_Name(_name, _onType, _signature);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_Name;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._onType, oth._onType) && object.Equals(this._signature, oth._signature);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._signature));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.Name";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._signature);
      s += ")";
      return s;
    }
  }
  public class CallName_MapBuilderAdd : CallName {
    public CallName_MapBuilderAdd() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_MapBuilderAdd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_MapBuilderAdd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.MapBuilderAdd";
      return s;
    }
  }
  public class CallName_MapBuilderBuild : CallName {
    public CallName_MapBuilderBuild() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_MapBuilderBuild();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_MapBuilderBuild;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.MapBuilderBuild";
      return s;
    }
  }
  public class CallName_SetBuilderAdd : CallName {
    public CallName_SetBuilderAdd() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_SetBuilderAdd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_SetBuilderAdd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.SetBuilderAdd";
      return s;
    }
  }
  public class CallName_SetBuilderBuild : CallName {
    public CallName_SetBuilderBuild() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_SetBuilderBuild();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_SetBuilderBuild;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.SetBuilderBuild";
      return s;
    }
  }

  public interface _IStatement {
    bool is_DeclareVar { get; }
    bool is_Assign { get; }
    bool is_If { get; }
    bool is_Labeled { get; }
    bool is_While { get; }
    bool is_Foreach { get; }
    bool is_Call { get; }
    bool is_Return { get; }
    bool is_EarlyReturn { get; }
    bool is_Break { get; }
    bool is_TailRecursive { get; }
    bool is_JumpTailCallStart { get; }
    bool is_Halt { get; }
    bool is_Print { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IType dtor_typ { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_maybeValue { get; }
    DAST._IAssignLhs dtor_lhs { get; }
    DAST._IExpression dtor_value { get; }
    DAST._IExpression dtor_cond { get; }
    Dafny.ISequence<DAST._IStatement> dtor_thn { get; }
    Dafny.ISequence<DAST._IStatement> dtor_els { get; }
    Dafny.ISequence<Dafny.Rune> dtor_lbl { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<Dafny.Rune> dtor_boundName { get; }
    DAST._IType dtor_boundType { get; }
    DAST._IExpression dtor_over { get; }
    DAST._IExpression dtor_on { get; }
    DAST._ICallName dtor_callName { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    Dafny.ISequence<DAST._IExpression> dtor_args { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outs { get; }
    DAST._IExpression dtor_expr { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_toLabel { get; }
    DAST._IExpression dtor_Print_a0 { get; }
    _IStatement DowncastClone();
  }
  public abstract class Statement : _IStatement {
    public Statement() {
    }
    private static readonly DAST._IStatement theDefault = create_DeclareVar(Dafny.Sequence<Dafny.Rune>.Empty, DAST.Type.Default(), Std.Wrappers.Option<DAST._IExpression>.Default());
    public static DAST._IStatement Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IStatement> _TYPE = new Dafny.TypeDescriptor<DAST._IStatement>(DAST.Statement.Default());
    public static Dafny.TypeDescriptor<DAST._IStatement> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IStatement create_DeclareVar(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, Std.Wrappers._IOption<DAST._IExpression> maybeValue) {
      return new Statement_DeclareVar(name, typ, maybeValue);
    }
    public static _IStatement create_Assign(DAST._IAssignLhs lhs, DAST._IExpression @value) {
      return new Statement_Assign(lhs, @value);
    }
    public static _IStatement create_If(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> thn, Dafny.ISequence<DAST._IStatement> els) {
      return new Statement_If(cond, thn, els);
    }
    public static _IStatement create_Labeled(Dafny.ISequence<Dafny.Rune> lbl, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_Labeled(lbl, body);
    }
    public static _IStatement create_While(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_While(cond, body);
    }
    public static _IStatement create_Foreach(Dafny.ISequence<Dafny.Rune> boundName, DAST._IType boundType, DAST._IExpression over, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_Foreach(boundName, boundType, over, body);
    }
    public static _IStatement create_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outs) {
      return new Statement_Call(@on, callName, typeArgs, args, outs);
    }
    public static _IStatement create_Return(DAST._IExpression expr) {
      return new Statement_Return(expr);
    }
    public static _IStatement create_EarlyReturn() {
      return new Statement_EarlyReturn();
    }
    public static _IStatement create_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> toLabel) {
      return new Statement_Break(toLabel);
    }
    public static _IStatement create_TailRecursive(Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_TailRecursive(body);
    }
    public static _IStatement create_JumpTailCallStart() {
      return new Statement_JumpTailCallStart();
    }
    public static _IStatement create_Halt() {
      return new Statement_Halt();
    }
    public static _IStatement create_Print(DAST._IExpression _a0) {
      return new Statement_Print(_a0);
    }
    public bool is_DeclareVar { get { return this is Statement_DeclareVar; } }
    public bool is_Assign { get { return this is Statement_Assign; } }
    public bool is_If { get { return this is Statement_If; } }
    public bool is_Labeled { get { return this is Statement_Labeled; } }
    public bool is_While { get { return this is Statement_While; } }
    public bool is_Foreach { get { return this is Statement_Foreach; } }
    public bool is_Call { get { return this is Statement_Call; } }
    public bool is_Return { get { return this is Statement_Return; } }
    public bool is_EarlyReturn { get { return this is Statement_EarlyReturn; } }
    public bool is_Break { get { return this is Statement_Break; } }
    public bool is_TailRecursive { get { return this is Statement_TailRecursive; } }
    public bool is_JumpTailCallStart { get { return this is Statement_JumpTailCallStart; } }
    public bool is_Halt { get { return this is Statement_Halt; } }
    public bool is_Print { get { return this is Statement_Print; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._name;
      }
    }
    public DAST._IType dtor_typ {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._typ;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_maybeValue {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._maybeValue;
      }
    }
    public DAST._IAssignLhs dtor_lhs {
      get {
        var d = this;
        return ((Statement_Assign)d)._lhs;
      }
    }
    public DAST._IExpression dtor_value {
      get {
        var d = this;
        return ((Statement_Assign)d)._value;
      }
    }
    public DAST._IExpression dtor_cond {
      get {
        var d = this;
        if (d is Statement_If) { return ((Statement_If)d)._cond; }
        return ((Statement_While)d)._cond;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_thn {
      get {
        var d = this;
        return ((Statement_If)d)._thn;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_els {
      get {
        var d = this;
        return ((Statement_If)d)._els;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_lbl {
      get {
        var d = this;
        return ((Statement_Labeled)d)._lbl;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        var d = this;
        if (d is Statement_Labeled) { return ((Statement_Labeled)d)._body; }
        if (d is Statement_While) { return ((Statement_While)d)._body; }
        if (d is Statement_Foreach) { return ((Statement_Foreach)d)._body; }
        return ((Statement_TailRecursive)d)._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_boundName {
      get {
        var d = this;
        return ((Statement_Foreach)d)._boundName;
      }
    }
    public DAST._IType dtor_boundType {
      get {
        var d = this;
        return ((Statement_Foreach)d)._boundType;
      }
    }
    public DAST._IExpression dtor_over {
      get {
        var d = this;
        return ((Statement_Foreach)d)._over;
      }
    }
    public DAST._IExpression dtor_on {
      get {
        var d = this;
        return ((Statement_Call)d)._on;
      }
    }
    public DAST._ICallName dtor_callName {
      get {
        var d = this;
        return ((Statement_Call)d)._callName;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        return ((Statement_Call)d)._typeArgs;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_args {
      get {
        var d = this;
        return ((Statement_Call)d)._args;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outs {
      get {
        var d = this;
        return ((Statement_Call)d)._outs;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        return ((Statement_Return)d)._expr;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_toLabel {
      get {
        var d = this;
        return ((Statement_Break)d)._toLabel;
      }
    }
    public DAST._IExpression dtor_Print_a0 {
      get {
        var d = this;
        return ((Statement_Print)d)._a0;
      }
    }
    public abstract _IStatement DowncastClone();
  }
  public class Statement_DeclareVar : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _maybeValue;
    public Statement_DeclareVar(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, Std.Wrappers._IOption<DAST._IExpression> maybeValue) : base() {
      this._name = name;
      this._typ = typ;
      this._maybeValue = maybeValue;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_DeclareVar(_name, _typ, _maybeValue);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_DeclareVar;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ) && object.Equals(this._maybeValue, oth._maybeValue);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._maybeValue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.DeclareVar";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ", ";
      s += Dafny.Helpers.ToString(this._maybeValue);
      s += ")";
      return s;
    }
  }
  public class Statement_Assign : Statement {
    public readonly DAST._IAssignLhs _lhs;
    public readonly DAST._IExpression _value;
    public Statement_Assign(DAST._IAssignLhs lhs, DAST._IExpression @value) : base() {
      this._lhs = lhs;
      this._value = @value;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Assign(_lhs, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Assign;
      return oth != null && object.Equals(this._lhs, oth._lhs) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lhs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Assign";
      s += "(";
      s += Dafny.Helpers.ToString(this._lhs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Statement_If : Statement {
    public readonly DAST._IExpression _cond;
    public readonly Dafny.ISequence<DAST._IStatement> _thn;
    public readonly Dafny.ISequence<DAST._IStatement> _els;
    public Statement_If(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> thn, Dafny.ISequence<DAST._IStatement> els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_If(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_If;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.If";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Statement_Labeled : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _lbl;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_Labeled(Dafny.ISequence<Dafny.Rune> lbl, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._lbl = lbl;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Labeled(_lbl, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Labeled;
      return oth != null && object.Equals(this._lbl, oth._lbl) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lbl));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Labeled";
      s += "(";
      s += this._lbl.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_While : Statement {
    public readonly DAST._IExpression _cond;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_While(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._cond = cond;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_While(_cond, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_While;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.While";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_Foreach : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _boundName;
    public readonly DAST._IType _boundType;
    public readonly DAST._IExpression _over;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_Foreach(Dafny.ISequence<Dafny.Rune> boundName, DAST._IType boundType, DAST._IExpression over, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._boundName = boundName;
      this._boundType = boundType;
      this._over = over;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Foreach(_boundName, _boundType, _over, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Foreach;
      return oth != null && object.Equals(this._boundName, oth._boundName) && object.Equals(this._boundType, oth._boundType) && object.Equals(this._over, oth._over) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._boundName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._boundType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._over));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Foreach";
      s += "(";
      s += this._boundName.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._boundType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._over);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_Call : Statement {
    public readonly DAST._IExpression _on;
    public readonly DAST._ICallName _callName;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _outs;
    public Statement_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outs) : base() {
      this._on = @on;
      this._callName = callName;
      this._typeArgs = typeArgs;
      this._args = args;
      this._outs = outs;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Call(_on, _callName, _typeArgs, _args, _outs);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Call;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._callName, oth._callName) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args) && object.Equals(this._outs, oth._outs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._callName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._callName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outs);
      s += ")";
      return s;
    }
  }
  public class Statement_Return : Statement {
    public readonly DAST._IExpression _expr;
    public Statement_Return(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Return(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Return;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Return";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Statement_EarlyReturn : Statement {
    public Statement_EarlyReturn() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_EarlyReturn();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_EarlyReturn;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.EarlyReturn";
      return s;
    }
  }
  public class Statement_Break : Statement {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _toLabel;
    public Statement_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> toLabel) : base() {
      this._toLabel = toLabel;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Break(_toLabel);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Break;
      return oth != null && object.Equals(this._toLabel, oth._toLabel);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._toLabel));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Break";
      s += "(";
      s += Dafny.Helpers.ToString(this._toLabel);
      s += ")";
      return s;
    }
  }
  public class Statement_TailRecursive : Statement {
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_TailRecursive(Dafny.ISequence<DAST._IStatement> body) : base() {
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_TailRecursive(_body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_TailRecursive;
      return oth != null && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.TailRecursive";
      s += "(";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_JumpTailCallStart : Statement {
    public Statement_JumpTailCallStart() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_JumpTailCallStart();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_JumpTailCallStart;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.JumpTailCallStart";
      return s;
    }
  }
  public class Statement_Halt : Statement {
    public Statement_Halt() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Halt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Halt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Halt";
      return s;
    }
  }
  public class Statement_Print : Statement {
    public readonly DAST._IExpression _a0;
    public Statement_Print(DAST._IExpression _a0) : base() {
      this._a0 = _a0;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Print(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Print;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Print";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IAssignLhs {
    bool is_Ident { get; }
    bool is_Select { get; }
    bool is_Index { get; }
    Dafny.ISequence<Dafny.Rune> dtor_ident { get; }
    DAST._IExpression dtor_expr { get; }
    Dafny.ISequence<Dafny.Rune> dtor_field { get; }
    Dafny.ISequence<DAST._IExpression> dtor_indices { get; }
    _IAssignLhs DowncastClone();
  }
  public abstract class AssignLhs : _IAssignLhs {
    public AssignLhs() {
    }
    private static readonly DAST._IAssignLhs theDefault = create_Ident(Dafny.Sequence<Dafny.Rune>.Empty);
    public static DAST._IAssignLhs Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IAssignLhs> _TYPE = new Dafny.TypeDescriptor<DAST._IAssignLhs>(DAST.AssignLhs.Default());
    public static Dafny.TypeDescriptor<DAST._IAssignLhs> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssignLhs create_Ident(Dafny.ISequence<Dafny.Rune> ident) {
      return new AssignLhs_Ident(ident);
    }
    public static _IAssignLhs create_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field) {
      return new AssignLhs_Select(expr, field);
    }
    public static _IAssignLhs create_Index(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> indices) {
      return new AssignLhs_Index(expr, indices);
    }
    public bool is_Ident { get { return this is AssignLhs_Ident; } }
    public bool is_Select { get { return this is AssignLhs_Select; } }
    public bool is_Index { get { return this is AssignLhs_Index; } }
    public Dafny.ISequence<Dafny.Rune> dtor_ident {
      get {
        var d = this;
        return ((AssignLhs_Ident)d)._ident;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        if (d is AssignLhs_Select) { return ((AssignLhs_Select)d)._expr; }
        return ((AssignLhs_Index)d)._expr;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_field {
      get {
        var d = this;
        return ((AssignLhs_Select)d)._field;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_indices {
      get {
        var d = this;
        return ((AssignLhs_Index)d)._indices;
      }
    }
    public abstract _IAssignLhs DowncastClone();
  }
  public class AssignLhs_Ident : AssignLhs {
    public readonly Dafny.ISequence<Dafny.Rune> _ident;
    public AssignLhs_Ident(Dafny.ISequence<Dafny.Rune> ident) : base() {
      this._ident = ident;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Ident(_ident);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Ident;
      return oth != null && object.Equals(this._ident, oth._ident);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._ident));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Ident";
      s += "(";
      s += Dafny.Helpers.ToString(this._ident);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_Select : AssignLhs {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public AssignLhs_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field) : base() {
      this._expr = expr;
      this._field = field;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Select(_expr, _field);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Select;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_Index : AssignLhs {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<DAST._IExpression> _indices;
    public AssignLhs_Index(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> indices) : base() {
      this._expr = expr;
      this._indices = indices;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Index(_expr, _indices);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Index;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indices, oth._indices);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indices));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Index";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indices);
      s += ")";
      return s;
    }
  }

  public interface _ICollKind {
    bool is_Seq { get; }
    bool is_Array { get; }
    bool is_Map { get; }
    _ICollKind DowncastClone();
  }
  public abstract class CollKind : _ICollKind {
    public CollKind() {
    }
    private static readonly DAST._ICollKind theDefault = create_Seq();
    public static DAST._ICollKind Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ICollKind> _TYPE = new Dafny.TypeDescriptor<DAST._ICollKind>(DAST.CollKind.Default());
    public static Dafny.TypeDescriptor<DAST._ICollKind> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICollKind create_Seq() {
      return new CollKind_Seq();
    }
    public static _ICollKind create_Array() {
      return new CollKind_Array();
    }
    public static _ICollKind create_Map() {
      return new CollKind_Map();
    }
    public bool is_Seq { get { return this is CollKind_Seq; } }
    public bool is_Array { get { return this is CollKind_Array; } }
    public bool is_Map { get { return this is CollKind_Map; } }
    public static System.Collections.Generic.IEnumerable<_ICollKind> AllSingletonConstructors {
      get {
        yield return CollKind.create_Seq();
        yield return CollKind.create_Array();
        yield return CollKind.create_Map();
      }
    }
    public abstract _ICollKind DowncastClone();
  }
  public class CollKind_Seq : CollKind {
    public CollKind_Seq() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Seq();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Seq;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Seq";
      return s;
    }
  }
  public class CollKind_Array : CollKind {
    public CollKind_Array() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Array();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Array;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Array";
      return s;
    }
  }
  public class CollKind_Map : CollKind {
    public CollKind_Map() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Map();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Map;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Map";
      return s;
    }
  }

  public interface _IBinOp {
    bool is_Eq { get; }
    bool is_Div { get; }
    bool is_EuclidianDiv { get; }
    bool is_Mod { get; }
    bool is_EuclidianMod { get; }
    bool is_Lt { get; }
    bool is_LtChar { get; }
    bool is_Plus { get; }
    bool is_Minus { get; }
    bool is_Times { get; }
    bool is_BitwiseAnd { get; }
    bool is_BitwiseOr { get; }
    bool is_BitwiseXor { get; }
    bool is_BitwiseShiftRight { get; }
    bool is_BitwiseShiftLeft { get; }
    bool is_And { get; }
    bool is_Or { get; }
    bool is_In { get; }
    bool is_SeqProperPrefix { get; }
    bool is_SeqPrefix { get; }
    bool is_SetMerge { get; }
    bool is_SetSubtraction { get; }
    bool is_SetIntersection { get; }
    bool is_Subset { get; }
    bool is_ProperSubset { get; }
    bool is_SetDisjoint { get; }
    bool is_MapMerge { get; }
    bool is_MapSubtraction { get; }
    bool is_MultisetMerge { get; }
    bool is_MultisetSubtraction { get; }
    bool is_MultisetIntersection { get; }
    bool is_Submultiset { get; }
    bool is_ProperSubmultiset { get; }
    bool is_MultisetDisjoint { get; }
    bool is_Concat { get; }
    bool is_Passthrough { get; }
    bool dtor_referential { get; }
    bool dtor_nullable { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 { get; }
    _IBinOp DowncastClone();
  }
  public abstract class BinOp : _IBinOp {
    public BinOp() {
    }
    private static readonly DAST._IBinOp theDefault = create_Eq(false, false);
    public static DAST._IBinOp Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IBinOp> _TYPE = new Dafny.TypeDescriptor<DAST._IBinOp>(DAST.BinOp.Default());
    public static Dafny.TypeDescriptor<DAST._IBinOp> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IBinOp create_Eq(bool referential, bool nullable) {
      return new BinOp_Eq(referential, nullable);
    }
    public static _IBinOp create_Div() {
      return new BinOp_Div();
    }
    public static _IBinOp create_EuclidianDiv() {
      return new BinOp_EuclidianDiv();
    }
    public static _IBinOp create_Mod() {
      return new BinOp_Mod();
    }
    public static _IBinOp create_EuclidianMod() {
      return new BinOp_EuclidianMod();
    }
    public static _IBinOp create_Lt() {
      return new BinOp_Lt();
    }
    public static _IBinOp create_LtChar() {
      return new BinOp_LtChar();
    }
    public static _IBinOp create_Plus() {
      return new BinOp_Plus();
    }
    public static _IBinOp create_Minus() {
      return new BinOp_Minus();
    }
    public static _IBinOp create_Times() {
      return new BinOp_Times();
    }
    public static _IBinOp create_BitwiseAnd() {
      return new BinOp_BitwiseAnd();
    }
    public static _IBinOp create_BitwiseOr() {
      return new BinOp_BitwiseOr();
    }
    public static _IBinOp create_BitwiseXor() {
      return new BinOp_BitwiseXor();
    }
    public static _IBinOp create_BitwiseShiftRight() {
      return new BinOp_BitwiseShiftRight();
    }
    public static _IBinOp create_BitwiseShiftLeft() {
      return new BinOp_BitwiseShiftLeft();
    }
    public static _IBinOp create_And() {
      return new BinOp_And();
    }
    public static _IBinOp create_Or() {
      return new BinOp_Or();
    }
    public static _IBinOp create_In() {
      return new BinOp_In();
    }
    public static _IBinOp create_SeqProperPrefix() {
      return new BinOp_SeqProperPrefix();
    }
    public static _IBinOp create_SeqPrefix() {
      return new BinOp_SeqPrefix();
    }
    public static _IBinOp create_SetMerge() {
      return new BinOp_SetMerge();
    }
    public static _IBinOp create_SetSubtraction() {
      return new BinOp_SetSubtraction();
    }
    public static _IBinOp create_SetIntersection() {
      return new BinOp_SetIntersection();
    }
    public static _IBinOp create_Subset() {
      return new BinOp_Subset();
    }
    public static _IBinOp create_ProperSubset() {
      return new BinOp_ProperSubset();
    }
    public static _IBinOp create_SetDisjoint() {
      return new BinOp_SetDisjoint();
    }
    public static _IBinOp create_MapMerge() {
      return new BinOp_MapMerge();
    }
    public static _IBinOp create_MapSubtraction() {
      return new BinOp_MapSubtraction();
    }
    public static _IBinOp create_MultisetMerge() {
      return new BinOp_MultisetMerge();
    }
    public static _IBinOp create_MultisetSubtraction() {
      return new BinOp_MultisetSubtraction();
    }
    public static _IBinOp create_MultisetIntersection() {
      return new BinOp_MultisetIntersection();
    }
    public static _IBinOp create_Submultiset() {
      return new BinOp_Submultiset();
    }
    public static _IBinOp create_ProperSubmultiset() {
      return new BinOp_ProperSubmultiset();
    }
    public static _IBinOp create_MultisetDisjoint() {
      return new BinOp_MultisetDisjoint();
    }
    public static _IBinOp create_Concat() {
      return new BinOp_Concat();
    }
    public static _IBinOp create_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) {
      return new BinOp_Passthrough(_a0);
    }
    public bool is_Eq { get { return this is BinOp_Eq; } }
    public bool is_Div { get { return this is BinOp_Div; } }
    public bool is_EuclidianDiv { get { return this is BinOp_EuclidianDiv; } }
    public bool is_Mod { get { return this is BinOp_Mod; } }
    public bool is_EuclidianMod { get { return this is BinOp_EuclidianMod; } }
    public bool is_Lt { get { return this is BinOp_Lt; } }
    public bool is_LtChar { get { return this is BinOp_LtChar; } }
    public bool is_Plus { get { return this is BinOp_Plus; } }
    public bool is_Minus { get { return this is BinOp_Minus; } }
    public bool is_Times { get { return this is BinOp_Times; } }
    public bool is_BitwiseAnd { get { return this is BinOp_BitwiseAnd; } }
    public bool is_BitwiseOr { get { return this is BinOp_BitwiseOr; } }
    public bool is_BitwiseXor { get { return this is BinOp_BitwiseXor; } }
    public bool is_BitwiseShiftRight { get { return this is BinOp_BitwiseShiftRight; } }
    public bool is_BitwiseShiftLeft { get { return this is BinOp_BitwiseShiftLeft; } }
    public bool is_And { get { return this is BinOp_And; } }
    public bool is_Or { get { return this is BinOp_Or; } }
    public bool is_In { get { return this is BinOp_In; } }
    public bool is_SeqProperPrefix { get { return this is BinOp_SeqProperPrefix; } }
    public bool is_SeqPrefix { get { return this is BinOp_SeqPrefix; } }
    public bool is_SetMerge { get { return this is BinOp_SetMerge; } }
    public bool is_SetSubtraction { get { return this is BinOp_SetSubtraction; } }
    public bool is_SetIntersection { get { return this is BinOp_SetIntersection; } }
    public bool is_Subset { get { return this is BinOp_Subset; } }
    public bool is_ProperSubset { get { return this is BinOp_ProperSubset; } }
    public bool is_SetDisjoint { get { return this is BinOp_SetDisjoint; } }
    public bool is_MapMerge { get { return this is BinOp_MapMerge; } }
    public bool is_MapSubtraction { get { return this is BinOp_MapSubtraction; } }
    public bool is_MultisetMerge { get { return this is BinOp_MultisetMerge; } }
    public bool is_MultisetSubtraction { get { return this is BinOp_MultisetSubtraction; } }
    public bool is_MultisetIntersection { get { return this is BinOp_MultisetIntersection; } }
    public bool is_Submultiset { get { return this is BinOp_Submultiset; } }
    public bool is_ProperSubmultiset { get { return this is BinOp_ProperSubmultiset; } }
    public bool is_MultisetDisjoint { get { return this is BinOp_MultisetDisjoint; } }
    public bool is_Concat { get { return this is BinOp_Concat; } }
    public bool is_Passthrough { get { return this is BinOp_Passthrough; } }
    public bool dtor_referential {
      get {
        var d = this;
        return ((BinOp_Eq)d)._referential;
      }
    }
    public bool dtor_nullable {
      get {
        var d = this;
        return ((BinOp_Eq)d)._nullable;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 {
      get {
        var d = this;
        return ((BinOp_Passthrough)d)._a0;
      }
    }
    public abstract _IBinOp DowncastClone();
  }
  public class BinOp_Eq : BinOp {
    public readonly bool _referential;
    public readonly bool _nullable;
    public BinOp_Eq(bool referential, bool nullable) : base() {
      this._referential = referential;
      this._nullable = nullable;
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Eq(_referential, _nullable);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Eq;
      return oth != null && this._referential == oth._referential && this._nullable == oth._nullable;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._referential));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._nullable));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Eq";
      s += "(";
      s += Dafny.Helpers.ToString(this._referential);
      s += ", ";
      s += Dafny.Helpers.ToString(this._nullable);
      s += ")";
      return s;
    }
  }
  public class BinOp_Div : BinOp {
    public BinOp_Div() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Div();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Div;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Div";
      return s;
    }
  }
  public class BinOp_EuclidianDiv : BinOp {
    public BinOp_EuclidianDiv() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_EuclidianDiv();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_EuclidianDiv;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.EuclidianDiv";
      return s;
    }
  }
  public class BinOp_Mod : BinOp {
    public BinOp_Mod() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Mod();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Mod;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Mod";
      return s;
    }
  }
  public class BinOp_EuclidianMod : BinOp {
    public BinOp_EuclidianMod() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_EuclidianMod();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_EuclidianMod;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.EuclidianMod";
      return s;
    }
  }
  public class BinOp_Lt : BinOp {
    public BinOp_Lt() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Lt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Lt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Lt";
      return s;
    }
  }
  public class BinOp_LtChar : BinOp {
    public BinOp_LtChar() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_LtChar();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_LtChar;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.LtChar";
      return s;
    }
  }
  public class BinOp_Plus : BinOp {
    public BinOp_Plus() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Plus();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Plus;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Plus";
      return s;
    }
  }
  public class BinOp_Minus : BinOp {
    public BinOp_Minus() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Minus();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Minus;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Minus";
      return s;
    }
  }
  public class BinOp_Times : BinOp {
    public BinOp_Times() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Times();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Times;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Times";
      return s;
    }
  }
  public class BinOp_BitwiseAnd : BinOp {
    public BinOp_BitwiseAnd() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseAnd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseAnd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseAnd";
      return s;
    }
  }
  public class BinOp_BitwiseOr : BinOp {
    public BinOp_BitwiseOr() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseOr();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseOr;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseOr";
      return s;
    }
  }
  public class BinOp_BitwiseXor : BinOp {
    public BinOp_BitwiseXor() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseXor();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseXor;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseXor";
      return s;
    }
  }
  public class BinOp_BitwiseShiftRight : BinOp {
    public BinOp_BitwiseShiftRight() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseShiftRight();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseShiftRight;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseShiftRight";
      return s;
    }
  }
  public class BinOp_BitwiseShiftLeft : BinOp {
    public BinOp_BitwiseShiftLeft() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseShiftLeft();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseShiftLeft;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseShiftLeft";
      return s;
    }
  }
  public class BinOp_And : BinOp {
    public BinOp_And() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_And();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_And;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.And";
      return s;
    }
  }
  public class BinOp_Or : BinOp {
    public BinOp_Or() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Or();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Or;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Or";
      return s;
    }
  }
  public class BinOp_In : BinOp {
    public BinOp_In() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_In();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_In;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.In";
      return s;
    }
  }
  public class BinOp_SeqProperPrefix : BinOp {
    public BinOp_SeqProperPrefix() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SeqProperPrefix();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SeqProperPrefix;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SeqProperPrefix";
      return s;
    }
  }
  public class BinOp_SeqPrefix : BinOp {
    public BinOp_SeqPrefix() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SeqPrefix();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SeqPrefix;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SeqPrefix";
      return s;
    }
  }
  public class BinOp_SetMerge : BinOp {
    public BinOp_SetMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetMerge";
      return s;
    }
  }
  public class BinOp_SetSubtraction : BinOp {
    public BinOp_SetSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetSubtraction";
      return s;
    }
  }
  public class BinOp_SetIntersection : BinOp {
    public BinOp_SetIntersection() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetIntersection();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetIntersection;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetIntersection";
      return s;
    }
  }
  public class BinOp_Subset : BinOp {
    public BinOp_Subset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Subset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Subset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Subset";
      return s;
    }
  }
  public class BinOp_ProperSubset : BinOp {
    public BinOp_ProperSubset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_ProperSubset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_ProperSubset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.ProperSubset";
      return s;
    }
  }
  public class BinOp_SetDisjoint : BinOp {
    public BinOp_SetDisjoint() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetDisjoint();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetDisjoint;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetDisjoint";
      return s;
    }
  }
  public class BinOp_MapMerge : BinOp {
    public BinOp_MapMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MapMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MapMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MapMerge";
      return s;
    }
  }
  public class BinOp_MapSubtraction : BinOp {
    public BinOp_MapSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MapSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MapSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 27;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MapSubtraction";
      return s;
    }
  }
  public class BinOp_MultisetMerge : BinOp {
    public BinOp_MultisetMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 28;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetMerge";
      return s;
    }
  }
  public class BinOp_MultisetSubtraction : BinOp {
    public BinOp_MultisetSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 29;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetSubtraction";
      return s;
    }
  }
  public class BinOp_MultisetIntersection : BinOp {
    public BinOp_MultisetIntersection() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetIntersection();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetIntersection;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 30;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetIntersection";
      return s;
    }
  }
  public class BinOp_Submultiset : BinOp {
    public BinOp_Submultiset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Submultiset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Submultiset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 31;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Submultiset";
      return s;
    }
  }
  public class BinOp_ProperSubmultiset : BinOp {
    public BinOp_ProperSubmultiset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_ProperSubmultiset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_ProperSubmultiset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 32;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.ProperSubmultiset";
      return s;
    }
  }
  public class BinOp_MultisetDisjoint : BinOp {
    public BinOp_MultisetDisjoint() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetDisjoint();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetDisjoint;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 33;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetDisjoint";
      return s;
    }
  }
  public class BinOp_Concat : BinOp {
    public BinOp_Concat() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Concat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Concat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 34;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Concat";
      return s;
    }
  }
  public class BinOp_Passthrough : BinOp {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public BinOp_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Passthrough(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Passthrough;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 35;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Passthrough";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IExpression {
    bool is_Literal { get; }
    bool is_Ident { get; }
    bool is_Companion { get; }
    bool is_Tuple { get; }
    bool is_New { get; }
    bool is_NewArray { get; }
    bool is_DatatypeValue { get; }
    bool is_Convert { get; }
    bool is_SeqConstruct { get; }
    bool is_SeqValue { get; }
    bool is_SetValue { get; }
    bool is_MultisetValue { get; }
    bool is_MapValue { get; }
    bool is_MapBuilder { get; }
    bool is_SeqUpdate { get; }
    bool is_MapUpdate { get; }
    bool is_SetBuilder { get; }
    bool is_ToMultiset { get; }
    bool is_This { get; }
    bool is_Ite { get; }
    bool is_UnOp { get; }
    bool is_BinOp { get; }
    bool is_ArrayLen { get; }
    bool is_MapKeys { get; }
    bool is_MapValues { get; }
    bool is_Select { get; }
    bool is_SelectFn { get; }
    bool is_Index { get; }
    bool is_IndexRange { get; }
    bool is_TupleSelect { get; }
    bool is_Call { get; }
    bool is_Lambda { get; }
    bool is_BetaRedex { get; }
    bool is_IIFE { get; }
    bool is_Apply { get; }
    bool is_TypeTest { get; }
    bool is_InitializationValue { get; }
    bool is_BoolBoundedPool { get; }
    bool is_SetBoundedPool { get; }
    bool is_SeqBoundedPool { get; }
    bool is_IntRange { get; }
    DAST._ILiteral dtor_Literal_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Ident_a0 { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Companion_a0 { get; }
    Dafny.ISequence<DAST._IExpression> dtor_Tuple_a0 { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    Dafny.ISequence<DAST._IExpression> dtor_args { get; }
    Dafny.ISequence<DAST._IExpression> dtor_dims { get; }
    DAST._IType dtor_typ { get; }
    DAST._IDatatypeType dtor_datatypeType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_variant { get; }
    bool dtor_isCo { get; }
    Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> dtor_contents { get; }
    DAST._IExpression dtor_value { get; }
    DAST._IType dtor_from { get; }
    DAST._IExpression dtor_length { get; }
    DAST._IExpression dtor_elem { get; }
    Dafny.ISequence<DAST._IExpression> dtor_elements { get; }
    Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> dtor_mapElems { get; }
    DAST._IType dtor_keyType { get; }
    DAST._IType dtor_valueType { get; }
    DAST._IExpression dtor_expr { get; }
    DAST._IExpression dtor_indexExpr { get; }
    DAST._IType dtor_elemType { get; }
    DAST._IExpression dtor_ToMultiset_a0 { get; }
    DAST._IExpression dtor_cond { get; }
    DAST._IExpression dtor_thn { get; }
    DAST._IExpression dtor_els { get; }
    DAST._IUnaryOp dtor_unOp { get; }
    DAST.Format._IUnOpFormat dtor_format1 { get; }
    DAST._IBinOp dtor_op { get; }
    DAST._IExpression dtor_left { get; }
    DAST._IExpression dtor_right { get; }
    DAST.Format._IBinOpFormat dtor_format2 { get; }
    BigInteger dtor_dim { get; }
    Dafny.ISequence<Dafny.Rune> dtor_field { get; }
    bool dtor_isConstant { get; }
    bool dtor_onDatatype { get; }
    bool dtor_isStatic { get; }
    BigInteger dtor_arity { get; }
    DAST._ICollKind dtor_collKind { get; }
    Dafny.ISequence<DAST._IExpression> dtor_indices { get; }
    bool dtor_isArray { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_low { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_high { get; }
    BigInteger dtor_index { get; }
    DAST._IExpression dtor_on { get; }
    DAST._ICallName dtor_callName { get; }
    Dafny.ISequence<DAST._IFormal> dtor_params { get; }
    DAST._IType dtor_retType { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> dtor_values { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IExpression dtor_iifeBody { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_dType { get; }
    DAST._IExpression dtor_of { get; }
    bool dtor_includeDuplicates { get; }
    DAST._IExpression dtor_lo { get; }
    DAST._IExpression dtor_hi { get; }
    _IExpression DowncastClone();
  }
  public abstract class Expression : _IExpression {
    public Expression() {
    }
    private static readonly DAST._IExpression theDefault = create_Literal(DAST.Literal.Default());
    public static DAST._IExpression Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IExpression> _TYPE = new Dafny.TypeDescriptor<DAST._IExpression>(DAST.Expression.Default());
    public static Dafny.TypeDescriptor<DAST._IExpression> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IExpression create_Literal(DAST._ILiteral _a0) {
      return new Expression_Literal(_a0);
    }
    public static _IExpression create_Ident(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Expression_Ident(_a0);
    }
    public static _IExpression create_Companion(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0) {
      return new Expression_Companion(_a0);
    }
    public static _IExpression create_Tuple(Dafny.ISequence<DAST._IExpression> _a0) {
      return new Expression_Tuple(_a0);
    }
    public static _IExpression create_New(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_New(path, typeArgs, args);
    }
    public static _IExpression create_NewArray(Dafny.ISequence<DAST._IExpression> dims, DAST._IType typ) {
      return new Expression_NewArray(dims, typ);
    }
    public static _IExpression create_DatatypeValue(DAST._IDatatypeType datatypeType, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<Dafny.Rune> variant, bool isCo, Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> contents) {
      return new Expression_DatatypeValue(datatypeType, typeArgs, variant, isCo, contents);
    }
    public static _IExpression create_Convert(DAST._IExpression @value, DAST._IType @from, DAST._IType typ) {
      return new Expression_Convert(@value, @from, typ);
    }
    public static _IExpression create_SeqConstruct(DAST._IExpression length, DAST._IExpression elem) {
      return new Expression_SeqConstruct(length, elem);
    }
    public static _IExpression create_SeqValue(Dafny.ISequence<DAST._IExpression> elements, DAST._IType typ) {
      return new Expression_SeqValue(elements, typ);
    }
    public static _IExpression create_SetValue(Dafny.ISequence<DAST._IExpression> elements) {
      return new Expression_SetValue(elements);
    }
    public static _IExpression create_MultisetValue(Dafny.ISequence<DAST._IExpression> elements) {
      return new Expression_MultisetValue(elements);
    }
    public static _IExpression create_MapValue(Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> mapElems) {
      return new Expression_MapValue(mapElems);
    }
    public static _IExpression create_MapBuilder(DAST._IType keyType, DAST._IType valueType) {
      return new Expression_MapBuilder(keyType, valueType);
    }
    public static _IExpression create_SeqUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) {
      return new Expression_SeqUpdate(expr, indexExpr, @value);
    }
    public static _IExpression create_MapUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) {
      return new Expression_MapUpdate(expr, indexExpr, @value);
    }
    public static _IExpression create_SetBuilder(DAST._IType elemType) {
      return new Expression_SetBuilder(elemType);
    }
    public static _IExpression create_ToMultiset(DAST._IExpression _a0) {
      return new Expression_ToMultiset(_a0);
    }
    public static _IExpression create_This() {
      return new Expression_This();
    }
    public static _IExpression create_Ite(DAST._IExpression cond, DAST._IExpression thn, DAST._IExpression els) {
      return new Expression_Ite(cond, thn, els);
    }
    public static _IExpression create_UnOp(DAST._IUnaryOp unOp, DAST._IExpression expr, DAST.Format._IUnOpFormat format1) {
      return new Expression_UnOp(unOp, expr, format1);
    }
    public static _IExpression create_BinOp(DAST._IBinOp op, DAST._IExpression left, DAST._IExpression right, DAST.Format._IBinOpFormat format2) {
      return new Expression_BinOp(op, left, right, format2);
    }
    public static _IExpression create_ArrayLen(DAST._IExpression expr, BigInteger dim) {
      return new Expression_ArrayLen(expr, dim);
    }
    public static _IExpression create_MapKeys(DAST._IExpression expr) {
      return new Expression_MapKeys(expr);
    }
    public static _IExpression create_MapValues(DAST._IExpression expr) {
      return new Expression_MapValues(expr);
    }
    public static _IExpression create_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool isConstant, bool onDatatype) {
      return new Expression_Select(expr, field, isConstant, onDatatype);
    }
    public static _IExpression create_SelectFn(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool onDatatype, bool isStatic, BigInteger arity) {
      return new Expression_SelectFn(expr, field, onDatatype, isStatic, arity);
    }
    public static _IExpression create_Index(DAST._IExpression expr, DAST._ICollKind collKind, Dafny.ISequence<DAST._IExpression> indices) {
      return new Expression_Index(expr, collKind, indices);
    }
    public static _IExpression create_IndexRange(DAST._IExpression expr, bool isArray, Std.Wrappers._IOption<DAST._IExpression> low, Std.Wrappers._IOption<DAST._IExpression> high) {
      return new Expression_IndexRange(expr, isArray, low, high);
    }
    public static _IExpression create_TupleSelect(DAST._IExpression expr, BigInteger index) {
      return new Expression_TupleSelect(expr, index);
    }
    public static _IExpression create_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_Call(@on, callName, typeArgs, args);
    }
    public static _IExpression create_Lambda(Dafny.ISequence<DAST._IFormal> @params, DAST._IType retType, Dafny.ISequence<DAST._IStatement> body) {
      return new Expression_Lambda(@params, retType, body);
    }
    public static _IExpression create_BetaRedex(Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> values, DAST._IType retType, DAST._IExpression expr) {
      return new Expression_BetaRedex(values, retType, expr);
    }
    public static _IExpression create_IIFE(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, DAST._IExpression @value, DAST._IExpression iifeBody) {
      return new Expression_IIFE(name, typ, @value, iifeBody);
    }
    public static _IExpression create_Apply(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_Apply(expr, args);
    }
    public static _IExpression create_TypeTest(DAST._IExpression @on, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dType, Dafny.ISequence<Dafny.Rune> variant) {
      return new Expression_TypeTest(@on, dType, variant);
    }
    public static _IExpression create_InitializationValue(DAST._IType typ) {
      return new Expression_InitializationValue(typ);
    }
    public static _IExpression create_BoolBoundedPool() {
      return new Expression_BoolBoundedPool();
    }
    public static _IExpression create_SetBoundedPool(DAST._IExpression of) {
      return new Expression_SetBoundedPool(of);
    }
    public static _IExpression create_SeqBoundedPool(DAST._IExpression of, bool includeDuplicates) {
      return new Expression_SeqBoundedPool(of, includeDuplicates);
    }
    public static _IExpression create_IntRange(DAST._IExpression lo, DAST._IExpression hi) {
      return new Expression_IntRange(lo, hi);
    }
    public bool is_Literal { get { return this is Expression_Literal; } }
    public bool is_Ident { get { return this is Expression_Ident; } }
    public bool is_Companion { get { return this is Expression_Companion; } }
    public bool is_Tuple { get { return this is Expression_Tuple; } }
    public bool is_New { get { return this is Expression_New; } }
    public bool is_NewArray { get { return this is Expression_NewArray; } }
    public bool is_DatatypeValue { get { return this is Expression_DatatypeValue; } }
    public bool is_Convert { get { return this is Expression_Convert; } }
    public bool is_SeqConstruct { get { return this is Expression_SeqConstruct; } }
    public bool is_SeqValue { get { return this is Expression_SeqValue; } }
    public bool is_SetValue { get { return this is Expression_SetValue; } }
    public bool is_MultisetValue { get { return this is Expression_MultisetValue; } }
    public bool is_MapValue { get { return this is Expression_MapValue; } }
    public bool is_MapBuilder { get { return this is Expression_MapBuilder; } }
    public bool is_SeqUpdate { get { return this is Expression_SeqUpdate; } }
    public bool is_MapUpdate { get { return this is Expression_MapUpdate; } }
    public bool is_SetBuilder { get { return this is Expression_SetBuilder; } }
    public bool is_ToMultiset { get { return this is Expression_ToMultiset; } }
    public bool is_This { get { return this is Expression_This; } }
    public bool is_Ite { get { return this is Expression_Ite; } }
    public bool is_UnOp { get { return this is Expression_UnOp; } }
    public bool is_BinOp { get { return this is Expression_BinOp; } }
    public bool is_ArrayLen { get { return this is Expression_ArrayLen; } }
    public bool is_MapKeys { get { return this is Expression_MapKeys; } }
    public bool is_MapValues { get { return this is Expression_MapValues; } }
    public bool is_Select { get { return this is Expression_Select; } }
    public bool is_SelectFn { get { return this is Expression_SelectFn; } }
    public bool is_Index { get { return this is Expression_Index; } }
    public bool is_IndexRange { get { return this is Expression_IndexRange; } }
    public bool is_TupleSelect { get { return this is Expression_TupleSelect; } }
    public bool is_Call { get { return this is Expression_Call; } }
    public bool is_Lambda { get { return this is Expression_Lambda; } }
    public bool is_BetaRedex { get { return this is Expression_BetaRedex; } }
    public bool is_IIFE { get { return this is Expression_IIFE; } }
    public bool is_Apply { get { return this is Expression_Apply; } }
    public bool is_TypeTest { get { return this is Expression_TypeTest; } }
    public bool is_InitializationValue { get { return this is Expression_InitializationValue; } }
    public bool is_BoolBoundedPool { get { return this is Expression_BoolBoundedPool; } }
    public bool is_SetBoundedPool { get { return this is Expression_SetBoundedPool; } }
    public bool is_SeqBoundedPool { get { return this is Expression_SeqBoundedPool; } }
    public bool is_IntRange { get { return this is Expression_IntRange; } }
    public DAST._ILiteral dtor_Literal_a0 {
      get {
        var d = this;
        return ((Expression_Literal)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Ident_a0 {
      get {
        var d = this;
        return ((Expression_Ident)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Companion_a0 {
      get {
        var d = this;
        return ((Expression_Companion)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_Tuple_a0 {
      get {
        var d = this;
        return ((Expression_Tuple)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        var d = this;
        return ((Expression_New)d)._path;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        if (d is Expression_New) { return ((Expression_New)d)._typeArgs; }
        if (d is Expression_DatatypeValue) { return ((Expression_DatatypeValue)d)._typeArgs; }
        return ((Expression_Call)d)._typeArgs;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_args {
      get {
        var d = this;
        if (d is Expression_New) { return ((Expression_New)d)._args; }
        if (d is Expression_Call) { return ((Expression_Call)d)._args; }
        return ((Expression_Apply)d)._args;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_dims {
      get {
        var d = this;
        return ((Expression_NewArray)d)._dims;
      }
    }
    public DAST._IType dtor_typ {
      get {
        var d = this;
        if (d is Expression_NewArray) { return ((Expression_NewArray)d)._typ; }
        if (d is Expression_Convert) { return ((Expression_Convert)d)._typ; }
        if (d is Expression_SeqValue) { return ((Expression_SeqValue)d)._typ; }
        if (d is Expression_IIFE) { return ((Expression_IIFE)d)._typ; }
        return ((Expression_InitializationValue)d)._typ;
      }
    }
    public DAST._IDatatypeType dtor_datatypeType {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._datatypeType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_variant {
      get {
        var d = this;
        if (d is Expression_DatatypeValue) { return ((Expression_DatatypeValue)d)._variant; }
        return ((Expression_TypeTest)d)._variant;
      }
    }
    public bool dtor_isCo {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._isCo;
      }
    }
    public Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> dtor_contents {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._contents;
      }
    }
    public DAST._IExpression dtor_value {
      get {
        var d = this;
        if (d is Expression_Convert) { return ((Expression_Convert)d)._value; }
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._value; }
        if (d is Expression_MapUpdate) { return ((Expression_MapUpdate)d)._value; }
        return ((Expression_IIFE)d)._value;
      }
    }
    public DAST._IType dtor_from {
      get {
        var d = this;
        return ((Expression_Convert)d)._from;
      }
    }
    public DAST._IExpression dtor_length {
      get {
        var d = this;
        return ((Expression_SeqConstruct)d)._length;
      }
    }
    public DAST._IExpression dtor_elem {
      get {
        var d = this;
        return ((Expression_SeqConstruct)d)._elem;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_elements {
      get {
        var d = this;
        if (d is Expression_SeqValue) { return ((Expression_SeqValue)d)._elements; }
        if (d is Expression_SetValue) { return ((Expression_SetValue)d)._elements; }
        return ((Expression_MultisetValue)d)._elements;
      }
    }
    public Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> dtor_mapElems {
      get {
        var d = this;
        return ((Expression_MapValue)d)._mapElems;
      }
    }
    public DAST._IType dtor_keyType {
      get {
        var d = this;
        return ((Expression_MapBuilder)d)._keyType;
      }
    }
    public DAST._IType dtor_valueType {
      get {
        var d = this;
        return ((Expression_MapBuilder)d)._valueType;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._expr; }
        if (d is Expression_MapUpdate) { return ((Expression_MapUpdate)d)._expr; }
        if (d is Expression_UnOp) { return ((Expression_UnOp)d)._expr; }
        if (d is Expression_ArrayLen) { return ((Expression_ArrayLen)d)._expr; }
        if (d is Expression_MapKeys) { return ((Expression_MapKeys)d)._expr; }
        if (d is Expression_MapValues) { return ((Expression_MapValues)d)._expr; }
        if (d is Expression_Select) { return ((Expression_Select)d)._expr; }
        if (d is Expression_SelectFn) { return ((Expression_SelectFn)d)._expr; }
        if (d is Expression_Index) { return ((Expression_Index)d)._expr; }
        if (d is Expression_IndexRange) { return ((Expression_IndexRange)d)._expr; }
        if (d is Expression_TupleSelect) { return ((Expression_TupleSelect)d)._expr; }
        if (d is Expression_BetaRedex) { return ((Expression_BetaRedex)d)._expr; }
        return ((Expression_Apply)d)._expr;
      }
    }
    public DAST._IExpression dtor_indexExpr {
      get {
        var d = this;
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._indexExpr; }
        return ((Expression_MapUpdate)d)._indexExpr;
      }
    }
    public DAST._IType dtor_elemType {
      get {
        var d = this;
        return ((Expression_SetBuilder)d)._elemType;
      }
    }
    public DAST._IExpression dtor_ToMultiset_a0 {
      get {
        var d = this;
        return ((Expression_ToMultiset)d)._a0;
      }
    }
    public DAST._IExpression dtor_cond {
      get {
        var d = this;
        return ((Expression_Ite)d)._cond;
      }
    }
    public DAST._IExpression dtor_thn {
      get {
        var d = this;
        return ((Expression_Ite)d)._thn;
      }
    }
    public DAST._IExpression dtor_els {
      get {
        var d = this;
        return ((Expression_Ite)d)._els;
      }
    }
    public DAST._IUnaryOp dtor_unOp {
      get {
        var d = this;
        return ((Expression_UnOp)d)._unOp;
      }
    }
    public DAST.Format._IUnOpFormat dtor_format1 {
      get {
        var d = this;
        return ((Expression_UnOp)d)._format1;
      }
    }
    public DAST._IBinOp dtor_op {
      get {
        var d = this;
        return ((Expression_BinOp)d)._op;
      }
    }
    public DAST._IExpression dtor_left {
      get {
        var d = this;
        return ((Expression_BinOp)d)._left;
      }
    }
    public DAST._IExpression dtor_right {
      get {
        var d = this;
        return ((Expression_BinOp)d)._right;
      }
    }
    public DAST.Format._IBinOpFormat dtor_format2 {
      get {
        var d = this;
        return ((Expression_BinOp)d)._format2;
      }
    }
    public BigInteger dtor_dim {
      get {
        var d = this;
        return ((Expression_ArrayLen)d)._dim;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_field {
      get {
        var d = this;
        if (d is Expression_Select) { return ((Expression_Select)d)._field; }
        return ((Expression_SelectFn)d)._field;
      }
    }
    public bool dtor_isConstant {
      get {
        var d = this;
        return ((Expression_Select)d)._isConstant;
      }
    }
    public bool dtor_onDatatype {
      get {
        var d = this;
        if (d is Expression_Select) { return ((Expression_Select)d)._onDatatype; }
        return ((Expression_SelectFn)d)._onDatatype;
      }
    }
    public bool dtor_isStatic {
      get {
        var d = this;
        return ((Expression_SelectFn)d)._isStatic;
      }
    }
    public BigInteger dtor_arity {
      get {
        var d = this;
        return ((Expression_SelectFn)d)._arity;
      }
    }
    public DAST._ICollKind dtor_collKind {
      get {
        var d = this;
        return ((Expression_Index)d)._collKind;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_indices {
      get {
        var d = this;
        return ((Expression_Index)d)._indices;
      }
    }
    public bool dtor_isArray {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._isArray;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_low {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._low;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_high {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._high;
      }
    }
    public BigInteger dtor_index {
      get {
        var d = this;
        return ((Expression_TupleSelect)d)._index;
      }
    }
    public DAST._IExpression dtor_on {
      get {
        var d = this;
        if (d is Expression_Call) { return ((Expression_Call)d)._on; }
        return ((Expression_TypeTest)d)._on;
      }
    }
    public DAST._ICallName dtor_callName {
      get {
        var d = this;
        return ((Expression_Call)d)._callName;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_params {
      get {
        var d = this;
        return ((Expression_Lambda)d)._params;
      }
    }
    public DAST._IType dtor_retType {
      get {
        var d = this;
        if (d is Expression_Lambda) { return ((Expression_Lambda)d)._retType; }
        return ((Expression_BetaRedex)d)._retType;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        var d = this;
        return ((Expression_Lambda)d)._body;
      }
    }
    public Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> dtor_values {
      get {
        var d = this;
        return ((Expression_BetaRedex)d)._values;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((Expression_IIFE)d)._name;
      }
    }
    public DAST._IExpression dtor_iifeBody {
      get {
        var d = this;
        return ((Expression_IIFE)d)._iifeBody;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_dType {
      get {
        var d = this;
        return ((Expression_TypeTest)d)._dType;
      }
    }
    public DAST._IExpression dtor_of {
      get {
        var d = this;
        if (d is Expression_SetBoundedPool) { return ((Expression_SetBoundedPool)d)._of; }
        return ((Expression_SeqBoundedPool)d)._of;
      }
    }
    public bool dtor_includeDuplicates {
      get {
        var d = this;
        return ((Expression_SeqBoundedPool)d)._includeDuplicates;
      }
    }
    public DAST._IExpression dtor_lo {
      get {
        var d = this;
        return ((Expression_IntRange)d)._lo;
      }
    }
    public DAST._IExpression dtor_hi {
      get {
        var d = this;
        return ((Expression_IntRange)d)._hi;
      }
    }
    public abstract _IExpression DowncastClone();
  }
  public class Expression_Literal : Expression {
    public readonly DAST._ILiteral _a0;
    public Expression_Literal(DAST._ILiteral _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Literal(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Literal;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Literal";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_Ident : Expression {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Expression_Ident(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Ident(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Ident;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Ident";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expression_Companion : Expression {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0;
    public Expression_Companion(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Companion(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Companion;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Companion";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_Tuple : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _a0;
    public Expression_Tuple(Dafny.ISequence<DAST._IExpression> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Tuple(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Tuple;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_New : Expression {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_New(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._path = path;
      this._typeArgs = typeArgs;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_New(_path, _typeArgs, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_New;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.New";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_NewArray : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _dims;
    public readonly DAST._IType _typ;
    public Expression_NewArray(Dafny.ISequence<DAST._IExpression> dims, DAST._IType typ) : base() {
      this._dims = dims;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_NewArray(_dims, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_NewArray;
      return oth != null && object.Equals(this._dims, oth._dims) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dims));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.NewArray";
      s += "(";
      s += Dafny.Helpers.ToString(this._dims);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_DatatypeValue : Expression {
    public readonly DAST._IDatatypeType _datatypeType;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<Dafny.Rune> _variant;
    public readonly bool _isCo;
    public readonly Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _contents;
    public Expression_DatatypeValue(DAST._IDatatypeType datatypeType, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<Dafny.Rune> variant, bool isCo, Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> contents) : base() {
      this._datatypeType = datatypeType;
      this._typeArgs = typeArgs;
      this._variant = variant;
      this._isCo = isCo;
      this._contents = contents;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_DatatypeValue(_datatypeType, _typeArgs, _variant, _isCo, _contents);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_DatatypeValue;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._variant, oth._variant) && this._isCo == oth._isCo && object.Equals(this._contents, oth._contents);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variant));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isCo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._contents));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.DatatypeValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += this._variant.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isCo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._contents);
      s += ")";
      return s;
    }
  }
  public class Expression_Convert : Expression {
    public readonly DAST._IExpression _value;
    public readonly DAST._IType _from;
    public readonly DAST._IType _typ;
    public Expression_Convert(DAST._IExpression @value, DAST._IType @from, DAST._IType typ) : base() {
      this._value = @value;
      this._from = @from;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Convert(_value, _from, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Convert;
      return oth != null && object.Equals(this._value, oth._value) && object.Equals(this._from, oth._from) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._from));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Convert";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ", ";
      s += Dafny.Helpers.ToString(this._from);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqConstruct : Expression {
    public readonly DAST._IExpression _length;
    public readonly DAST._IExpression _elem;
    public Expression_SeqConstruct(DAST._IExpression length, DAST._IExpression elem) : base() {
      this._length = length;
      this._elem = elem;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqConstruct(_length, _elem);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqConstruct;
      return oth != null && object.Equals(this._length, oth._length) && object.Equals(this._elem, oth._elem);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._length));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elem));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqConstruct";
      s += "(";
      s += Dafny.Helpers.ToString(this._length);
      s += ", ";
      s += Dafny.Helpers.ToString(this._elem);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public readonly DAST._IType _typ;
    public Expression_SeqValue(Dafny.ISequence<DAST._IExpression> elements, DAST._IType typ) : base() {
      this._elements = elements;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqValue(_elements, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqValue;
      return oth != null && object.Equals(this._elements, oth._elements) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_SetValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public Expression_SetValue(Dafny.ISequence<DAST._IExpression> elements) : base() {
      this._elements = elements;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetValue(_elements);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetValue;
      return oth != null && object.Equals(this._elements, oth._elements);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ")";
      return s;
    }
  }
  public class Expression_MultisetValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public Expression_MultisetValue(Dafny.ISequence<DAST._IExpression> elements) : base() {
      this._elements = elements;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MultisetValue(_elements);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MultisetValue;
      return oth != null && object.Equals(this._elements, oth._elements);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MultisetValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ")";
      return s;
    }
  }
  public class Expression_MapValue : Expression {
    public readonly Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _mapElems;
    public Expression_MapValue(Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> mapElems) : base() {
      this._mapElems = mapElems;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapValue(_mapElems);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapValue;
      return oth != null && object.Equals(this._mapElems, oth._mapElems);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._mapElems));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._mapElems);
      s += ")";
      return s;
    }
  }
  public class Expression_MapBuilder : Expression {
    public readonly DAST._IType _keyType;
    public readonly DAST._IType _valueType;
    public Expression_MapBuilder(DAST._IType keyType, DAST._IType valueType) : base() {
      this._keyType = keyType;
      this._valueType = valueType;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapBuilder(_keyType, _valueType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapBuilder;
      return oth != null && object.Equals(this._keyType, oth._keyType) && object.Equals(this._valueType, oth._valueType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._keyType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._valueType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._keyType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._valueType);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqUpdate : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._IExpression _indexExpr;
    public readonly DAST._IExpression _value;
    public Expression_SeqUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) : base() {
      this._expr = expr;
      this._indexExpr = indexExpr;
      this._value = @value;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqUpdate(_expr, _indexExpr, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqUpdate;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indexExpr, oth._indexExpr) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indexExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqUpdate";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indexExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Expression_MapUpdate : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._IExpression _indexExpr;
    public readonly DAST._IExpression _value;
    public Expression_MapUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) : base() {
      this._expr = expr;
      this._indexExpr = indexExpr;
      this._value = @value;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapUpdate(_expr, _indexExpr, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapUpdate;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indexExpr, oth._indexExpr) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indexExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapUpdate";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indexExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Expression_SetBuilder : Expression {
    public readonly DAST._IType _elemType;
    public Expression_SetBuilder(DAST._IType elemType) : base() {
      this._elemType = elemType;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetBuilder(_elemType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetBuilder;
      return oth != null && object.Equals(this._elemType, oth._elemType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elemType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._elemType);
      s += ")";
      return s;
    }
  }
  public class Expression_ToMultiset : Expression {
    public readonly DAST._IExpression _a0;
    public Expression_ToMultiset(DAST._IExpression _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_ToMultiset(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_ToMultiset;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.ToMultiset";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_This : Expression {
    public Expression_This() : base() {
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_This();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_This;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.This";
      return s;
    }
  }
  public class Expression_Ite : Expression {
    public readonly DAST._IExpression _cond;
    public readonly DAST._IExpression _thn;
    public readonly DAST._IExpression _els;
    public Expression_Ite(DAST._IExpression cond, DAST._IExpression thn, DAST._IExpression els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Ite(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Ite;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Ite";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Expression_UnOp : Expression {
    public readonly DAST._IUnaryOp _unOp;
    public readonly DAST._IExpression _expr;
    public readonly DAST.Format._IUnOpFormat _format1;
    public Expression_UnOp(DAST._IUnaryOp unOp, DAST._IExpression expr, DAST.Format._IUnOpFormat format1) : base() {
      this._unOp = unOp;
      this._expr = expr;
      this._format1 = format1;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_UnOp(_unOp, _expr, _format1);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_UnOp;
      return oth != null && object.Equals(this._unOp, oth._unOp) && object.Equals(this._expr, oth._expr) && object.Equals(this._format1, oth._format1);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._unOp));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format1));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.UnOp";
      s += "(";
      s += Dafny.Helpers.ToString(this._unOp);
      s += ", ";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format1);
      s += ")";
      return s;
    }
  }
  public class Expression_BinOp : Expression {
    public readonly DAST._IBinOp _op;
    public readonly DAST._IExpression _left;
    public readonly DAST._IExpression _right;
    public readonly DAST.Format._IBinOpFormat _format2;
    public Expression_BinOp(DAST._IBinOp op, DAST._IExpression left, DAST._IExpression right, DAST.Format._IBinOpFormat format2) : base() {
      this._op = op;
      this._left = left;
      this._right = right;
      this._format2 = format2;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BinOp(_op, _left, _right, _format2);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BinOp;
      return oth != null && object.Equals(this._op, oth._op) && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right) && object.Equals(this._format2, oth._format2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BinOp";
      s += "(";
      s += Dafny.Helpers.ToString(this._op);
      s += ", ";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format2);
      s += ")";
      return s;
    }
  }
  public class Expression_ArrayLen : Expression {
    public readonly DAST._IExpression _expr;
    public readonly BigInteger _dim;
    public Expression_ArrayLen(DAST._IExpression expr, BigInteger dim) : base() {
      this._expr = expr;
      this._dim = dim;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_ArrayLen(_expr, _dim);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_ArrayLen;
      return oth != null && object.Equals(this._expr, oth._expr) && this._dim == oth._dim;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dim));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.ArrayLen";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dim);
      s += ")";
      return s;
    }
  }
  public class Expression_MapKeys : Expression {
    public readonly DAST._IExpression _expr;
    public Expression_MapKeys(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapKeys(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapKeys;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapKeys";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_MapValues : Expression {
    public readonly DAST._IExpression _expr;
    public Expression_MapValues(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapValues(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapValues;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapValues";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_Select : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public readonly bool _isConstant;
    public readonly bool _onDatatype;
    public Expression_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool isConstant, bool onDatatype) : base() {
      this._expr = expr;
      this._field = field;
      this._isConstant = isConstant;
      this._onDatatype = onDatatype;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Select(_expr, _field, _isConstant, _onDatatype);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Select;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field) && this._isConstant == oth._isConstant && this._onDatatype == oth._onDatatype;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isConstant));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onDatatype));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isConstant);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onDatatype);
      s += ")";
      return s;
    }
  }
  public class Expression_SelectFn : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public readonly bool _onDatatype;
    public readonly bool _isStatic;
    public readonly BigInteger _arity;
    public Expression_SelectFn(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool onDatatype, bool isStatic, BigInteger arity) : base() {
      this._expr = expr;
      this._field = field;
      this._onDatatype = onDatatype;
      this._isStatic = isStatic;
      this._arity = arity;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SelectFn(_expr, _field, _onDatatype, _isStatic, _arity);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SelectFn;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field) && this._onDatatype == oth._onDatatype && this._isStatic == oth._isStatic && this._arity == oth._arity;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onDatatype));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isStatic));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arity));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SelectFn";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onDatatype);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isStatic);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arity);
      s += ")";
      return s;
    }
  }
  public class Expression_Index : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._ICollKind _collKind;
    public readonly Dafny.ISequence<DAST._IExpression> _indices;
    public Expression_Index(DAST._IExpression expr, DAST._ICollKind collKind, Dafny.ISequence<DAST._IExpression> indices) : base() {
      this._expr = expr;
      this._collKind = collKind;
      this._indices = indices;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Index(_expr, _collKind, _indices);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Index;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._collKind, oth._collKind) && object.Equals(this._indices, oth._indices);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 27;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._collKind));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indices));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Index";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._collKind);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indices);
      s += ")";
      return s;
    }
  }
  public class Expression_IndexRange : Expression {
    public readonly DAST._IExpression _expr;
    public readonly bool _isArray;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _low;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _high;
    public Expression_IndexRange(DAST._IExpression expr, bool isArray, Std.Wrappers._IOption<DAST._IExpression> low, Std.Wrappers._IOption<DAST._IExpression> high) : base() {
      this._expr = expr;
      this._isArray = isArray;
      this._low = low;
      this._high = high;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IndexRange(_expr, _isArray, _low, _high);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IndexRange;
      return oth != null && object.Equals(this._expr, oth._expr) && this._isArray == oth._isArray && object.Equals(this._low, oth._low) && object.Equals(this._high, oth._high);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 28;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isArray));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._low));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._high));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IndexRange";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isArray);
      s += ", ";
      s += Dafny.Helpers.ToString(this._low);
      s += ", ";
      s += Dafny.Helpers.ToString(this._high);
      s += ")";
      return s;
    }
  }
  public class Expression_TupleSelect : Expression {
    public readonly DAST._IExpression _expr;
    public readonly BigInteger _index;
    public Expression_TupleSelect(DAST._IExpression expr, BigInteger index) : base() {
      this._expr = expr;
      this._index = index;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_TupleSelect(_expr, _index);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_TupleSelect;
      return oth != null && object.Equals(this._expr, oth._expr) && this._index == oth._index;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 29;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._index));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.TupleSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._index);
      s += ")";
      return s;
    }
  }
  public class Expression_Call : Expression {
    public readonly DAST._IExpression _on;
    public readonly DAST._ICallName _callName;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._on = @on;
      this._callName = callName;
      this._typeArgs = typeArgs;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Call(_on, _callName, _typeArgs, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Call;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._callName, oth._callName) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 30;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._callName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._callName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_Lambda : Expression {
    public readonly Dafny.ISequence<DAST._IFormal> _params;
    public readonly DAST._IType _retType;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Expression_Lambda(Dafny.ISequence<DAST._IFormal> @params, DAST._IType retType, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._params = @params;
      this._retType = retType;
      this._body = body;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Lambda(_params, _retType, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Lambda;
      return oth != null && object.Equals(this._params, oth._params) && object.Equals(this._retType, oth._retType) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 31;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._params));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._retType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Lambda";
      s += "(";
      s += Dafny.Helpers.ToString(this._params);
      s += ", ";
      s += Dafny.Helpers.ToString(this._retType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Expression_BetaRedex : Expression {
    public readonly Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _values;
    public readonly DAST._IType _retType;
    public readonly DAST._IExpression _expr;
    public Expression_BetaRedex(Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> values, DAST._IType retType, DAST._IExpression expr) : base() {
      this._values = values;
      this._retType = retType;
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BetaRedex(_values, _retType, _expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BetaRedex;
      return oth != null && object.Equals(this._values, oth._values) && object.Equals(this._retType, oth._retType) && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 32;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._values));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._retType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BetaRedex";
      s += "(";
      s += Dafny.Helpers.ToString(this._values);
      s += ", ";
      s += Dafny.Helpers.ToString(this._retType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_IIFE : Expression {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public readonly DAST._IExpression _value;
    public readonly DAST._IExpression _iifeBody;
    public Expression_IIFE(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, DAST._IExpression @value, DAST._IExpression iifeBody) : base() {
      this._name = name;
      this._typ = typ;
      this._value = @value;
      this._iifeBody = iifeBody;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IIFE(_name, _typ, _value, _iifeBody);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IIFE;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ) && object.Equals(this._value, oth._value) && object.Equals(this._iifeBody, oth._iifeBody);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 33;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._iifeBody));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IIFE";
      s += "(";
      s += Dafny.Helpers.ToString(this._name);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ", ";
      s += Dafny.Helpers.ToString(this._iifeBody);
      s += ")";
      return s;
    }
  }
  public class Expression_Apply : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_Apply(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._expr = expr;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Apply(_expr, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Apply;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 34;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Apply";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_TypeTest : Expression {
    public readonly DAST._IExpression _on;
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _dType;
    public readonly Dafny.ISequence<Dafny.Rune> _variant;
    public Expression_TypeTest(DAST._IExpression @on, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dType, Dafny.ISequence<Dafny.Rune> variant) : base() {
      this._on = @on;
      this._dType = dType;
      this._variant = variant;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_TypeTest(_on, _dType, _variant);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_TypeTest;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._dType, oth._dType) && object.Equals(this._variant, oth._variant);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 35;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variant));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.TypeTest";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dType);
      s += ", ";
      s += this._variant.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expression_InitializationValue : Expression {
    public readonly DAST._IType _typ;
    public Expression_InitializationValue(DAST._IType typ) : base() {
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_InitializationValue(_typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_InitializationValue;
      return oth != null && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 36;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.InitializationValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_BoolBoundedPool : Expression {
    public Expression_BoolBoundedPool() : base() {
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BoolBoundedPool();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BoolBoundedPool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 37;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BoolBoundedPool";
      return s;
    }
  }
  public class Expression_SetBoundedPool : Expression {
    public readonly DAST._IExpression _of;
    public Expression_SetBoundedPool(DAST._IExpression of) : base() {
      this._of = of;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetBoundedPool(_of);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetBoundedPool;
      return oth != null && object.Equals(this._of, oth._of);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 38;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._of));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetBoundedPool";
      s += "(";
      s += Dafny.Helpers.ToString(this._of);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqBoundedPool : Expression {
    public readonly DAST._IExpression _of;
    public readonly bool _includeDuplicates;
    public Expression_SeqBoundedPool(DAST._IExpression of, bool includeDuplicates) : base() {
      this._of = of;
      this._includeDuplicates = includeDuplicates;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqBoundedPool(_of, _includeDuplicates);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqBoundedPool;
      return oth != null && object.Equals(this._of, oth._of) && this._includeDuplicates == oth._includeDuplicates;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 39;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._of));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._includeDuplicates));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqBoundedPool";
      s += "(";
      s += Dafny.Helpers.ToString(this._of);
      s += ", ";
      s += Dafny.Helpers.ToString(this._includeDuplicates);
      s += ")";
      return s;
    }
  }
  public class Expression_IntRange : Expression {
    public readonly DAST._IExpression _lo;
    public readonly DAST._IExpression _hi;
    public Expression_IntRange(DAST._IExpression lo, DAST._IExpression hi) : base() {
      this._lo = lo;
      this._hi = hi;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IntRange(_lo, _hi);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IntRange;
      return oth != null && object.Equals(this._lo, oth._lo) && object.Equals(this._hi, oth._hi);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 40;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hi));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IntRange";
      s += "(";
      s += Dafny.Helpers.ToString(this._lo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hi);
      s += ")";
      return s;
    }
  }

  public interface _IUnaryOp {
    bool is_Not { get; }
    bool is_BitwiseNot { get; }
    bool is_Cardinality { get; }
    _IUnaryOp DowncastClone();
  }
  public abstract class UnaryOp : _IUnaryOp {
    public UnaryOp() {
    }
    private static readonly DAST._IUnaryOp theDefault = create_Not();
    public static DAST._IUnaryOp Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IUnaryOp> _TYPE = new Dafny.TypeDescriptor<DAST._IUnaryOp>(DAST.UnaryOp.Default());
    public static Dafny.TypeDescriptor<DAST._IUnaryOp> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnaryOp create_Not() {
      return new UnaryOp_Not();
    }
    public static _IUnaryOp create_BitwiseNot() {
      return new UnaryOp_BitwiseNot();
    }
    public static _IUnaryOp create_Cardinality() {
      return new UnaryOp_Cardinality();
    }
    public bool is_Not { get { return this is UnaryOp_Not; } }
    public bool is_BitwiseNot { get { return this is UnaryOp_BitwiseNot; } }
    public bool is_Cardinality { get { return this is UnaryOp_Cardinality; } }
    public static System.Collections.Generic.IEnumerable<_IUnaryOp> AllSingletonConstructors {
      get {
        yield return UnaryOp.create_Not();
        yield return UnaryOp.create_BitwiseNot();
        yield return UnaryOp.create_Cardinality();
      }
    }
    public abstract _IUnaryOp DowncastClone();
  }
  public class UnaryOp_Not : UnaryOp {
    public UnaryOp_Not() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_Not();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_Not;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.Not";
      return s;
    }
  }
  public class UnaryOp_BitwiseNot : UnaryOp {
    public UnaryOp_BitwiseNot() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_BitwiseNot();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_BitwiseNot;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.BitwiseNot";
      return s;
    }
  }
  public class UnaryOp_Cardinality : UnaryOp {
    public UnaryOp_Cardinality() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_Cardinality();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_Cardinality;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.Cardinality";
      return s;
    }
  }

  public interface _ILiteral {
    bool is_BoolLiteral { get; }
    bool is_IntLiteral { get; }
    bool is_DecLiteral { get; }
    bool is_StringLiteral { get; }
    bool is_CharLiteral { get; }
    bool is_Null { get; }
    bool dtor_BoolLiteral_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_IntLiteral_a0 { get; }
    DAST._IType dtor_IntLiteral_a1 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a1 { get; }
    DAST._IType dtor_DecLiteral_a2 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_StringLiteral_a0 { get; }
    Dafny.Rune dtor_CharLiteral_a0 { get; }
    DAST._IType dtor_Null_a0 { get; }
    _ILiteral DowncastClone();
  }
  public abstract class Literal : _ILiteral {
    public Literal() {
    }
    private static readonly DAST._ILiteral theDefault = create_BoolLiteral(false);
    public static DAST._ILiteral Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ILiteral> _TYPE = new Dafny.TypeDescriptor<DAST._ILiteral>(DAST.Literal.Default());
    public static Dafny.TypeDescriptor<DAST._ILiteral> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ILiteral create_BoolLiteral(bool _a0) {
      return new Literal_BoolLiteral(_a0);
    }
    public static _ILiteral create_IntLiteral(Dafny.ISequence<Dafny.Rune> _a0, DAST._IType _a1) {
      return new Literal_IntLiteral(_a0, _a1);
    }
    public static _ILiteral create_DecLiteral(Dafny.ISequence<Dafny.Rune> _a0, Dafny.ISequence<Dafny.Rune> _a1, DAST._IType _a2) {
      return new Literal_DecLiteral(_a0, _a1, _a2);
    }
    public static _ILiteral create_StringLiteral(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Literal_StringLiteral(_a0);
    }
    public static _ILiteral create_CharLiteral(Dafny.Rune _a0) {
      return new Literal_CharLiteral(_a0);
    }
    public static _ILiteral create_Null(DAST._IType _a0) {
      return new Literal_Null(_a0);
    }
    public bool is_BoolLiteral { get { return this is Literal_BoolLiteral; } }
    public bool is_IntLiteral { get { return this is Literal_IntLiteral; } }
    public bool is_DecLiteral { get { return this is Literal_DecLiteral; } }
    public bool is_StringLiteral { get { return this is Literal_StringLiteral; } }
    public bool is_CharLiteral { get { return this is Literal_CharLiteral; } }
    public bool is_Null { get { return this is Literal_Null; } }
    public bool dtor_BoolLiteral_a0 {
      get {
        var d = this;
        return ((Literal_BoolLiteral)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_IntLiteral_a0 {
      get {
        var d = this;
        return ((Literal_IntLiteral)d)._a0;
      }
    }
    public DAST._IType dtor_IntLiteral_a1 {
      get {
        var d = this;
        return ((Literal_IntLiteral)d)._a1;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a0 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a1 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a1;
      }
    }
    public DAST._IType dtor_DecLiteral_a2 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a2;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_StringLiteral_a0 {
      get {
        var d = this;
        return ((Literal_StringLiteral)d)._a0;
      }
    }
    public Dafny.Rune dtor_CharLiteral_a0 {
      get {
        var d = this;
        return ((Literal_CharLiteral)d)._a0;
      }
    }
    public DAST._IType dtor_Null_a0 {
      get {
        var d = this;
        return ((Literal_Null)d)._a0;
      }
    }
    public abstract _ILiteral DowncastClone();
  }
  public class Literal_BoolLiteral : Literal {
    public readonly bool _a0;
    public Literal_BoolLiteral(bool _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_BoolLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_BoolLiteral;
      return oth != null && this._a0 == oth._a0;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.BoolLiteral";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Literal_IntLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public readonly DAST._IType _a1;
    public Literal_IntLiteral(Dafny.ISequence<Dafny.Rune> _a0, DAST._IType _a1) : base() {
      this._a0 = _a0;
      this._a1 = _a1;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_IntLiteral(_a0, _a1);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_IntLiteral;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._a1, oth._a1);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a1));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.IntLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._a1);
      s += ")";
      return s;
    }
  }
  public class Literal_DecLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public readonly Dafny.ISequence<Dafny.Rune> _a1;
    public readonly DAST._IType _a2;
    public Literal_DecLiteral(Dafny.ISequence<Dafny.Rune> _a0, Dafny.ISequence<Dafny.Rune> _a1, DAST._IType _a2) : base() {
      this._a0 = _a0;
      this._a1 = _a1;
      this._a2 = _a2;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_DecLiteral(_a0, _a1, _a2);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_DecLiteral;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._a1, oth._a1) && object.Equals(this._a2, oth._a2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a1));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.DecLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ", ";
      s += this._a1.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._a2);
      s += ")";
      return s;
    }
  }
  public class Literal_StringLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Literal_StringLiteral(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_StringLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_StringLiteral;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.StringLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Literal_CharLiteral : Literal {
    public readonly Dafny.Rune _a0;
    public Literal_CharLiteral(Dafny.Rune _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_CharLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_CharLiteral;
      return oth != null && this._a0 == oth._a0;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.CharLiteral";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Literal_Null : Literal {
    public readonly DAST._IType _a0;
    public Literal_Null(DAST._IType _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_Null(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_Null;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.Null";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
} // end of namespace DAST

namespace D2DPrettyPrinter {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> PrettyPrint(Dafny.ISequence<DAST._IModule> d)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Microsoft.Dafny.Compilers.WrapException.Throw();
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Not Implemented Yet");
      return s;
    }
  }
} // end of namespace D2DPrettyPrinter
namespace ResolvedDesugaredExecutableDafnyPlugin {


  public partial class COMP {
    public COMP() {
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISequence<Dafny.Rune> _out14;
      _out14 = D2DPrettyPrinter.__default.PrettyPrint(p);
      s = _out14;
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      return s;
    }
  }
} // end of namespace ResolvedDesugaredExecutableDafnyPlugin
namespace RAST {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> SeqToString<__T>(Dafny.ISequence<__T> s, Func<__T, Dafny.ISequence<Dafny.Rune>> f, Dafny.ISequence<Dafny.Rune> separator)
    {
      if ((new BigInteger((s).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Helpers.Id<Func<__T, Dafny.ISequence<Dafny.Rune>>>(f)((s).Select(BigInteger.Zero)), (((new BigInteger((s).Count)) > (BigInteger.One)) ? (Dafny.Sequence<Dafny.Rune>.Concat(separator, RAST.__default.SeqToString<__T>((s).Drop(BigInteger.One), f, separator))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
      }
    }
    public static RAST._IType Rc(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rc"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Rc")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IType RefCell(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IType Vec(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("vec"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Vec")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IExpr NewVec(Dafny.ISequence<RAST._IExpr> elements) {
      return (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("vec!"))).Apply(elements);
    }
    public static RAST._IExpr Clone(RAST._IExpr underlying) {
      return (RAST.Expr.create_Select(underlying, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
    }
    public static RAST._IExpr Borrow(RAST._IExpr underlying) {
      return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), underlying, DAST.Format.UnOpFormat.create_NoFormat());
    }
    public static RAST._IExpr BorrowMut(RAST._IExpr underlying) {
      return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"), underlying, DAST.Format.UnOpFormat.create_NoFormat());
    }
    public static RAST._IType RawType(Dafny.ISequence<Dafny.Rune> content) {
      return RAST.Type.create_TIdentifier(content);
    }
    public static RAST._IType MaybePlaceboType(RAST._IType underlying) {
      return ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).Apply1(underlying);
    }
    public static Dafny.ISequence<Dafny.Rune> AddIndent(Dafny.ISequence<Dafny.Rune> raw, Dafny.ISequence<Dafny.Rune> ind)
    {
      Dafny.ISequence<Dafny.Rune> _830___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((raw).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, raw);
      } else if ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[({")).Contains((raw).Select(BigInteger.Zero))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in103 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in104 = Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND);
        raw = _in103;
        ind = _in104;
        goto TAIL_CALL_START;
      } else if (((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("})]")).Contains((raw).Select(BigInteger.Zero))) && ((new BigInteger((ind).Count)) > (new BigInteger(2)))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in105 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in106 = (ind).Take((new BigInteger((ind).Count)) - (new BigInteger(2)));
        raw = _in105;
        ind = _in106;
        goto TAIL_CALL_START;
      } else if (((raw).Select(BigInteger.Zero)) == (new Dafny.Rune('\n'))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)), ind));
        Dafny.ISequence<Dafny.Rune> _in107 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in108 = ind;
        raw = _in107;
        ind = _in108;
        goto TAIL_CALL_START;
      } else {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in109 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in110 = ind;
        raw = _in109;
        ind = _in110;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger max(BigInteger i, BigInteger j)
    {
      if ((i) < (j)) {
        return j;
      } else {
        return i;
      }
    }
    public static RAST._IExpr AssignVar(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr rhs)
    {
      return RAST.Expr.create_Assign(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name), rhs);
    }
    public static RAST._IExpr MaybePlacebo(RAST._IExpr underlying) {
      return (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from"))).Apply1(underlying);
    }
    public static RAST._IExpr RcNew(RAST._IExpr underlying) {
      return RAST.Expr.create_Call(RAST.__default.std__rc__Rc__new, Dafny.Sequence<RAST._IExpr>.FromElements(underlying));
    }
    public static RAST._IType SelfBorrowed { get {
      return RAST.Type.create_Borrowed(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfBorrowedMut { get {
      return RAST.Type.create_BorrowedMut(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfPointer { get {
      return RAST.Type.create_Pointer(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfPointerMut { get {
      return RAST.Type.create_PointerMut(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType global__type { get {
      return RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    } }
    public static RAST._IType std__type { get {
      return (RAST.__default.global__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"));
    } }
    public static RAST._IType CloneTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Clone"));
    } }
    public static RAST._IType DafnyPrintTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint"));
    } }
    public static RAST._IType DefaultTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default"));
    } }
    public static RAST._IType StaticTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("'static"));
    } }
    public static RAST._IType cell__type { get {
      return (RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"));
    } }
    public static RAST._IType refcell__type { get {
      return (RAST.__default.cell__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell"));
    } }
    public static RAST._IType dafny__runtime__type { get {
      return (RAST.__default.global__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dafny_runtime"));
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("  ");
    } }
    public static RAST._IExpr self { get {
      return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"));
    } }
    public static RAST._IExpr @global { get {
      return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    } }
    public static RAST._IExpr dafny__runtime { get {
      return (RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dafny_runtime"));
    } }
    public static RAST._IExpr dafny__runtime__Set { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set"));
    } }
    public static RAST._IExpr dafny__runtime__Set__from__array { get {
      return (RAST.__default.dafny__runtime__Set).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr dafny__runtime__Sequence { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"));
    } }
    public static RAST._IExpr Sequence__from__array__owned { get {
      return (RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array_owned"));
    } }
    public static RAST._IExpr Sequence__from__array { get {
      return (RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr dafny__runtime__Multiset { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset"));
    } }
    public static RAST._IExpr dafny__runtime__Multiset__from__array { get {
      return (RAST.__default.dafny__runtime__Multiset).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr std { get {
      return (RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"));
    } }
    public static RAST._IExpr std__rc { get {
      return (RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rc"));
    } }
    public static RAST._IExpr std__rc__Rc { get {
      return (RAST.__default.std__rc).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Rc"));
    } }
    public static RAST._IExpr std__rc__Rc__new { get {
      return (RAST.__default.std__rc__Rc).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
    } }
    public static RAST._IExpr std__Default__default { get {
      return ((((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
    } }
  }

  public interface _IMod {
    bool is_Mod { get; }
    bool is_ExternMod { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._IModDecl> dtor_body { get; }
    _IMod DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class Mod : _IMod {
    public Mod() {
    }
    private static readonly RAST._IMod theDefault = create_Mod(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IModDecl>.Empty);
    public static RAST._IMod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IMod> _TYPE = new Dafny.TypeDescriptor<RAST._IMod>(RAST.Mod.Default());
    public static Dafny.TypeDescriptor<RAST._IMod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMod create_Mod(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._IModDecl> body) {
      return new Mod_Mod(name, body);
    }
    public static _IMod create_ExternMod(Dafny.ISequence<Dafny.Rune> name) {
      return new Mod_ExternMod(name);
    }
    public bool is_Mod { get { return this is Mod_Mod; } }
    public bool is_ExternMod { get { return this is Mod_ExternMod; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Mod_Mod) { return ((Mod_Mod)d)._name; }
        return ((Mod_ExternMod)d)._name;
      }
    }
    public Dafny.ISequence<RAST._IModDecl> dtor_body {
      get {
        var d = this;
        return ((Mod_Mod)d)._body;
      }
    }
    public abstract _IMod DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      RAST._IMod _source25 = this;
      if (_source25.is_Mod) {
        Dafny.ISequence<Dafny.Rune> _831___mcc_h0 = _source25.dtor_name;
        Dafny.ISequence<RAST._IModDecl> _832___mcc_h1 = _source25.dtor_body;
        Dafny.ISequence<RAST._IModDecl> _833_body = _832___mcc_h1;
        Dafny.ISequence<Dafny.Rune> _834_name = _831___mcc_h0;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod "), _834_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), RAST.__default.IND), RAST.__default.SeqToString<RAST._IModDecl>(_833_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IModDecl, Dafny.ISequence<Dafny.Rune>>>>((_835_ind) => ((System.Func<RAST._IModDecl, Dafny.ISequence<Dafny.Rune>>)((_836_modDecl) => {
          return (_836_modDecl)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_835_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else {
        Dafny.ISequence<Dafny.Rune> _837___mcc_h2 = _source25.dtor_name;
        Dafny.ISequence<Dafny.Rune> _838_name = _837___mcc_h2;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod "), _838_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      }
    }
  }
  public class Mod_Mod : Mod {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._IModDecl> _body;
    public Mod_Mod(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._IModDecl> body) : base() {
      this._name = name;
      this._body = body;
    }
    public override _IMod DowncastClone() {
      if (this is _IMod dt) { return dt; }
      return new Mod_Mod(_name, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Mod_Mod;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Mod.Mod";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Mod_ExternMod : Mod {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Mod_ExternMod(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IMod DowncastClone() {
      if (this is _IMod dt) { return dt; }
      return new Mod_ExternMod(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Mod_ExternMod;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Mod.ExternMod";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IModDecl {
    bool is_RawDecl { get; }
    bool is_ModDecl { get; }
    bool is_StructDecl { get; }
    bool is_EnumDecl { get; }
    bool is_ImplDecl { get; }
    bool is_TraitDecl { get; }
    Dafny.ISequence<Dafny.Rune> dtor_body { get; }
    RAST._IMod dtor_mod { get; }
    RAST._IStruct dtor_struct { get; }
    RAST._IEnum dtor_enum { get; }
    RAST._IImpl dtor_impl { get; }
    RAST._ITrait dtor_tr { get; }
    _IModDecl DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class ModDecl : _IModDecl {
    public ModDecl() {
    }
    private static readonly RAST._IModDecl theDefault = create_RawDecl(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IModDecl Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IModDecl> _TYPE = new Dafny.TypeDescriptor<RAST._IModDecl>(RAST.ModDecl.Default());
    public static Dafny.TypeDescriptor<RAST._IModDecl> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModDecl create_RawDecl(Dafny.ISequence<Dafny.Rune> body) {
      return new ModDecl_RawDecl(body);
    }
    public static _IModDecl create_ModDecl(RAST._IMod mod) {
      return new ModDecl_ModDecl(mod);
    }
    public static _IModDecl create_StructDecl(RAST._IStruct @struct) {
      return new ModDecl_StructDecl(@struct);
    }
    public static _IModDecl create_EnumDecl(RAST._IEnum @enum) {
      return new ModDecl_EnumDecl(@enum);
    }
    public static _IModDecl create_ImplDecl(RAST._IImpl impl) {
      return new ModDecl_ImplDecl(impl);
    }
    public static _IModDecl create_TraitDecl(RAST._ITrait tr) {
      return new ModDecl_TraitDecl(tr);
    }
    public bool is_RawDecl { get { return this is ModDecl_RawDecl; } }
    public bool is_ModDecl { get { return this is ModDecl_ModDecl; } }
    public bool is_StructDecl { get { return this is ModDecl_StructDecl; } }
    public bool is_EnumDecl { get { return this is ModDecl_EnumDecl; } }
    public bool is_ImplDecl { get { return this is ModDecl_ImplDecl; } }
    public bool is_TraitDecl { get { return this is ModDecl_TraitDecl; } }
    public Dafny.ISequence<Dafny.Rune> dtor_body {
      get {
        var d = this;
        return ((ModDecl_RawDecl)d)._body;
      }
    }
    public RAST._IMod dtor_mod {
      get {
        var d = this;
        return ((ModDecl_ModDecl)d)._mod;
      }
    }
    public RAST._IStruct dtor_struct {
      get {
        var d = this;
        return ((ModDecl_StructDecl)d)._struct;
      }
    }
    public RAST._IEnum dtor_enum {
      get {
        var d = this;
        return ((ModDecl_EnumDecl)d)._enum;
      }
    }
    public RAST._IImpl dtor_impl {
      get {
        var d = this;
        return ((ModDecl_ImplDecl)d)._impl;
      }
    }
    public RAST._ITrait dtor_tr {
      get {
        var d = this;
        return ((ModDecl_TraitDecl)d)._tr;
      }
    }
    public abstract _IModDecl DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((this).is_ModDecl) {
        return ((this).dtor_mod)._ToString(ind);
      } else if ((this).is_StructDecl) {
        return ((this).dtor_struct)._ToString(ind);
      } else if ((this).is_ImplDecl) {
        return ((this).dtor_impl)._ToString(ind);
      } else if ((this).is_EnumDecl) {
        return ((this).dtor_enum)._ToString(ind);
      } else if ((this).is_TraitDecl) {
        return ((this).dtor_tr)._ToString(ind);
      } else {
        return (this).dtor_body;
      }
    }
  }
  public class ModDecl_RawDecl : ModDecl {
    public readonly Dafny.ISequence<Dafny.Rune> _body;
    public ModDecl_RawDecl(Dafny.ISequence<Dafny.Rune> body) : base() {
      this._body = body;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_RawDecl(_body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_RawDecl;
      return oth != null && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.RawDecl";
      s += "(";
      s += this._body.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class ModDecl_ModDecl : ModDecl {
    public readonly RAST._IMod _mod;
    public ModDecl_ModDecl(RAST._IMod mod) : base() {
      this._mod = mod;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_ModDecl(_mod);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_ModDecl;
      return oth != null && object.Equals(this._mod, oth._mod);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._mod));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.ModDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._mod);
      s += ")";
      return s;
    }
  }
  public class ModDecl_StructDecl : ModDecl {
    public readonly RAST._IStruct _struct;
    public ModDecl_StructDecl(RAST._IStruct @struct) : base() {
      this._struct = @struct;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_StructDecl(_struct);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_StructDecl;
      return oth != null && object.Equals(this._struct, oth._struct);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._struct));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.StructDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._struct);
      s += ")";
      return s;
    }
  }
  public class ModDecl_EnumDecl : ModDecl {
    public readonly RAST._IEnum _enum;
    public ModDecl_EnumDecl(RAST._IEnum @enum) : base() {
      this._enum = @enum;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_EnumDecl(_enum);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_EnumDecl;
      return oth != null && object.Equals(this._enum, oth._enum);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enum));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.EnumDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._enum);
      s += ")";
      return s;
    }
  }
  public class ModDecl_ImplDecl : ModDecl {
    public readonly RAST._IImpl _impl;
    public ModDecl_ImplDecl(RAST._IImpl impl) : base() {
      this._impl = impl;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_ImplDecl(_impl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_ImplDecl;
      return oth != null && object.Equals(this._impl, oth._impl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._impl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.ImplDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._impl);
      s += ")";
      return s;
    }
  }
  public class ModDecl_TraitDecl : ModDecl {
    public readonly RAST._ITrait _tr;
    public ModDecl_TraitDecl(RAST._ITrait tr) : base() {
      this._tr = tr;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_TraitDecl(_tr);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_TraitDecl;
      return oth != null && object.Equals(this._tr, oth._tr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.TraitDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._tr);
      s += ")";
      return s;
    }
  }

  public interface _IAttribute {
    bool is_RawAttribute { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
  }
  public class Attribute : _IAttribute {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Attribute(Dafny.ISequence<Dafny.Rune> content) {
      this._content = content;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Attribute;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Attribute.RawAttribute";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAttribute create(Dafny.ISequence<Dafny.Rune> content) {
      return new Attribute(content);
    }
    public static _IAttribute create_RawAttribute(Dafny.ISequence<Dafny.Rune> content) {
      return create(content);
    }
    public bool is_RawAttribute { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> ToStringMultiple(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> ind)
    {
      return RAST.__default.SeqToString<Dafny.ISequence<Dafny.Rune>>(attributes, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>>>((_839_ind) => ((System.Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>)((_840_attribute) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_840_attribute), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), _839_ind);
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    }
  }

  public interface _IStruct {
    bool is_Struct { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IFields dtor_fields { get; }
    _IStruct DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Struct : _IStruct {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _attributes;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IFields _fields;
    public Struct(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFields fields) {
      this._attributes = attributes;
      this._name = name;
      this._typeParams = typeParams;
      this._fields = fields;
    }
    public _IStruct DowncastClone() {
      if (this is _IStruct dt) { return dt; }
      return new Struct(_attributes, _name, _typeParams, _fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Struct;
      return oth != null && object.Equals(this._attributes, oth._attributes) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Struct.Struct";
      s += "(";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
    private static readonly RAST._IStruct theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Fields.Default());
    public static RAST._IStruct Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IStruct> _TYPE = new Dafny.TypeDescriptor<RAST._IStruct>(RAST.Struct.Default());
    public static Dafny.TypeDescriptor<RAST._IStruct> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IStruct create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFields fields) {
      return new Struct(attributes, name, typeParams, fields);
    }
    public static _IStruct create_Struct(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFields fields) {
      return create(attributes, name, typeParams, fields);
    }
    public bool is_Struct { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes {
      get {
        return this._attributes;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public RAST._IFields dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Attribute.ToStringMultiple((this).dtor_attributes, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub struct ")), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_fields)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND), ((this).dtor_fields).is_NamedFields)), ((((this).dtor_fields).is_NamelessFields) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
    }
  }

  public interface _INamelessField {
    bool is_NamelessField { get; }
    RAST._IVisibility dtor_visibility { get; }
    RAST._IType dtor_tpe { get; }
    _INamelessField DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class NamelessField : _INamelessField {
    public readonly RAST._IVisibility _visibility;
    public readonly RAST._IType _tpe;
    public NamelessField(RAST._IVisibility visibility, RAST._IType tpe) {
      this._visibility = visibility;
      this._tpe = tpe;
    }
    public _INamelessField DowncastClone() {
      if (this is _INamelessField dt) { return dt; }
      return new NamelessField(_visibility, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.NamelessField;
      return oth != null && object.Equals(this._visibility, oth._visibility) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._visibility));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.NamelessField.NamelessField";
      s += "(";
      s += Dafny.Helpers.ToString(this._visibility);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
    private static readonly RAST._INamelessField theDefault = create(RAST.Visibility.Default(), RAST.Type.Default());
    public static RAST._INamelessField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._INamelessField> _TYPE = new Dafny.TypeDescriptor<RAST._INamelessField>(RAST.NamelessField.Default());
    public static Dafny.TypeDescriptor<RAST._INamelessField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INamelessField create(RAST._IVisibility visibility, RAST._IType tpe) {
      return new NamelessField(visibility, tpe);
    }
    public static _INamelessField create_NamelessField(RAST._IVisibility visibility, RAST._IType tpe) {
      return create(visibility, tpe);
    }
    public bool is_NamelessField { get { return true; } }
    public RAST._IVisibility dtor_visibility {
      get {
        return this._visibility;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_visibility, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_tpe)._ToString(ind));
    }
  }

  public interface _IField {
    bool is_Field { get; }
    RAST._IVisibility dtor_visibility { get; }
    RAST._IFormal dtor_formal { get; }
    _IField DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Field : _IField {
    public readonly RAST._IVisibility _visibility;
    public readonly RAST._IFormal _formal;
    public Field(RAST._IVisibility visibility, RAST._IFormal formal) {
      this._visibility = visibility;
      this._formal = formal;
    }
    public _IField DowncastClone() {
      if (this is _IField dt) { return dt; }
      return new Field(_visibility, _formal);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Field;
      return oth != null && object.Equals(this._visibility, oth._visibility) && object.Equals(this._formal, oth._formal);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._visibility));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formal));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Field.Field";
      s += "(";
      s += Dafny.Helpers.ToString(this._visibility);
      s += ", ";
      s += Dafny.Helpers.ToString(this._formal);
      s += ")";
      return s;
    }
    private static readonly RAST._IField theDefault = create(RAST.Visibility.Default(), RAST.Formal.Default());
    public static RAST._IField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IField> _TYPE = new Dafny.TypeDescriptor<RAST._IField>(RAST.Field.Default());
    public static Dafny.TypeDescriptor<RAST._IField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IField create(RAST._IVisibility visibility, RAST._IFormal formal) {
      return new Field(visibility, formal);
    }
    public static _IField create_Field(RAST._IVisibility visibility, RAST._IFormal formal) {
      return create(visibility, formal);
    }
    public bool is_Field { get { return true; } }
    public RAST._IVisibility dtor_visibility {
      get {
        return this._visibility;
      }
    }
    public RAST._IFormal dtor_formal {
      get {
        return this._formal;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_visibility, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_formal)._ToString(ind));
    }
  }

  public interface _IFields {
    bool is_NamedFields { get; }
    bool is_NamelessFields { get; }
    Dafny.ISequence<RAST._IField> dtor_fields { get; }
    Dafny.ISequence<RAST._INamelessField> dtor_types { get; }
    _IFields DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine);
  }
  public abstract class Fields : _IFields {
    public Fields() {
    }
    private static readonly RAST._IFields theDefault = create_NamedFields(Dafny.Sequence<RAST._IField>.Empty);
    public static RAST._IFields Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFields> _TYPE = new Dafny.TypeDescriptor<RAST._IFields>(RAST.Fields.Default());
    public static Dafny.TypeDescriptor<RAST._IFields> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFields create_NamedFields(Dafny.ISequence<RAST._IField> fields) {
      return new Fields_NamedFields(fields);
    }
    public static _IFields create_NamelessFields(Dafny.ISequence<RAST._INamelessField> types) {
      return new Fields_NamelessFields(types);
    }
    public bool is_NamedFields { get { return this is Fields_NamedFields; } }
    public bool is_NamelessFields { get { return this is Fields_NamelessFields; } }
    public Dafny.ISequence<RAST._IField> dtor_fields {
      get {
        var d = this;
        return ((Fields_NamedFields)d)._fields;
      }
    }
    public Dafny.ISequence<RAST._INamelessField> dtor_types {
      get {
        var d = this;
        return ((Fields_NamelessFields)d)._types;
      }
    }
    public abstract _IFields DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine)
    {
      if ((this).is_NamedFields) {
        Dafny.ISequence<Dafny.Rune> _841_separator = ((newLine) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(",\n"), ind), RAST.__default.IND)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")));
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs40 = (((newLine) && ((new BigInteger(((this).dtor_fields).Count)).Sign == 1)) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind))) : ((((new BigInteger(((this).dtor_fields).Count)).Sign == 1) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "))) : (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))))));
        Dafny.ISequence<Dafny.Rune> _842_beginSpace = _let_tmp_rhs40.dtor__0;
        Dafny.ISequence<Dafny.Rune> _843_endSpace = _let_tmp_rhs40.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {"), _842_beginSpace), RAST.__default.SeqToString<RAST._IField>((this).dtor_fields, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IField, Dafny.ISequence<Dafny.Rune>>>>((_844_ind) => ((System.Func<RAST._IField, Dafny.ISequence<Dafny.Rune>>)((_845_field) => {
          return (_845_field)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_844_ind, RAST.__default.IND));
        })))(ind), _841_separator)), _843_endSpace), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else {
        Dafny.ISequence<Dafny.Rune> _846_separator = ((newLine) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(",\n"), ind), RAST.__default.IND)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._INamelessField>((this).dtor_types, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._INamelessField, Dafny.ISequence<Dafny.Rune>>>>((_847_ind) => ((System.Func<RAST._INamelessField, Dafny.ISequence<Dafny.Rune>>)((_848_t) => {
          return (_848_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_847_ind, RAST.__default.IND));
        })))(ind), _846_separator)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      }
    }
  }
  public class Fields_NamedFields : Fields {
    public readonly Dafny.ISequence<RAST._IField> _fields;
    public Fields_NamedFields(Dafny.ISequence<RAST._IField> fields) : base() {
      this._fields = fields;
    }
    public override _IFields DowncastClone() {
      if (this is _IFields dt) { return dt; }
      return new Fields_NamedFields(_fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fields_NamedFields;
      return oth != null && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fields.NamedFields";
      s += "(";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
  }
  public class Fields_NamelessFields : Fields {
    public readonly Dafny.ISequence<RAST._INamelessField> _types;
    public Fields_NamelessFields(Dafny.ISequence<RAST._INamelessField> types) : base() {
      this._types = types;
    }
    public override _IFields DowncastClone() {
      if (this is _IFields dt) { return dt; }
      return new Fields_NamelessFields(_types);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fields_NamelessFields;
      return oth != null && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fields.NamelessFields";
      s += "(";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
  }

  public interface _IEnumCase {
    bool is_EnumCase { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IFields dtor_fields { get; }
    _IEnumCase DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine);
  }
  public class EnumCase : _IEnumCase {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IFields _fields;
    public EnumCase(Dafny.ISequence<Dafny.Rune> name, RAST._IFields fields) {
      this._name = name;
      this._fields = fields;
    }
    public _IEnumCase DowncastClone() {
      if (this is _IEnumCase dt) { return dt; }
      return new EnumCase(_name, _fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.EnumCase;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.EnumCase.EnumCase";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
    private static readonly RAST._IEnumCase theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Fields.Default());
    public static RAST._IEnumCase Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IEnumCase> _TYPE = new Dafny.TypeDescriptor<RAST._IEnumCase>(RAST.EnumCase.Default());
    public static Dafny.TypeDescriptor<RAST._IEnumCase> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnumCase create(Dafny.ISequence<Dafny.Rune> name, RAST._IFields fields) {
      return new EnumCase(name, fields);
    }
    public static _IEnumCase create_EnumCase(Dafny.ISequence<Dafny.Rune> name, RAST._IFields fields) {
      return create(name, fields);
    }
    public bool is_EnumCase { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public RAST._IFields dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine)
    {
      return Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_name, ((this).dtor_fields)._ToString(ind, newLine));
    }
  }

  public interface _IEnum {
    bool is_Enum { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    Dafny.ISequence<RAST._IEnumCase> dtor_variants { get; }
    _IEnum DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Enum : _IEnum {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _attributes;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly Dafny.ISequence<RAST._IEnumCase> _variants;
    public Enum(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      this._attributes = attributes;
      this._name = name;
      this._typeParams = typeParams;
      this._variants = variants;
    }
    public _IEnum DowncastClone() {
      if (this is _IEnum dt) { return dt; }
      return new Enum(_attributes, _name, _typeParams, _variants);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Enum;
      return oth != null && object.Equals(this._attributes, oth._attributes) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._variants, oth._variants);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variants));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Enum.Enum";
      s += "(";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._variants);
      s += ")";
      return s;
    }
    private static readonly RAST._IEnum theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, Dafny.Sequence<RAST._IEnumCase>.Empty);
    public static RAST._IEnum Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IEnum> _TYPE = new Dafny.TypeDescriptor<RAST._IEnum>(RAST.Enum.Default());
    public static Dafny.TypeDescriptor<RAST._IEnum> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnum create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      return new Enum(attributes, name, typeParams, variants);
    }
    public static _IEnum create_Enum(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      return create(attributes, name, typeParams, variants);
    }
    public bool is_Enum { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes {
      get {
        return this._attributes;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<RAST._IEnumCase> dtor_variants {
      get {
        return this._variants;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Attribute.ToStringMultiple((this).dtor_attributes, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub enum ")), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IEnumCase>((this).dtor_variants, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IEnumCase, Dafny.ISequence<Dafny.Rune>>>>((_849_ind) => ((System.Func<RAST._IEnumCase, Dafny.ISequence<Dafny.Rune>>)((_850_variant) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _849_ind), RAST.__default.IND), (_850_variant)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_849_ind, RAST.__default.IND), false));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }

  public interface _ITypeParam {
    bool is_RawTypeParam { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    Dafny.ISequence<RAST._IType> dtor_constraints { get; }
    _ITypeParam DowncastClone();
    RAST._ITypeParam AddConstraints(Dafny.ISequence<RAST._IType> constraints);
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class TypeParam : _ITypeParam {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public readonly Dafny.ISequence<RAST._IType> _constraints;
    public TypeParam(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      this._content = content;
      this._constraints = constraints;
    }
    public _ITypeParam DowncastClone() {
      if (this is _ITypeParam dt) { return dt; }
      return new TypeParam(_content, _constraints);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.TypeParam;
      return oth != null && object.Equals(this._content, oth._content) && object.Equals(this._constraints, oth._constraints);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._constraints));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.TypeParam.RawTypeParam";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._constraints);
      s += ")";
      return s;
    }
    private static readonly RAST._ITypeParam theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IType>.Empty);
    public static RAST._ITypeParam Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._ITypeParam> _TYPE = new Dafny.TypeDescriptor<RAST._ITypeParam>(RAST.TypeParam.Default());
    public static Dafny.TypeDescriptor<RAST._ITypeParam> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITypeParam create(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      return new TypeParam(content, constraints);
    }
    public static _ITypeParam create_RawTypeParam(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      return create(content, constraints);
    }
    public bool is_RawTypeParam { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_constraints {
      get {
        return this._constraints;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> ToStringMultiple(Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<Dafny.Rune> ind)
    {
      if ((new BigInteger((typeParams).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), RAST.__default.SeqToString<RAST._ITypeParam>(typeParams, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._ITypeParam, Dafny.ISequence<Dafny.Rune>>>>((_851_ind) => ((System.Func<RAST._ITypeParam, Dafny.ISequence<Dafny.Rune>>)((_852_t) => {
          return (_852_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_851_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
      }
    }
    public static Dafny.ISequence<RAST._ITypeParam> AddConstraintsMultiple(Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IType> constraints)
    {
      Dafny.ISequence<RAST._ITypeParam> _853___accumulator = Dafny.Sequence<RAST._ITypeParam>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((typeParams).Count)).Sign == 0) {
        return Dafny.Sequence<RAST._ITypeParam>.Concat(_853___accumulator, Dafny.Sequence<RAST._ITypeParam>.FromElements());
      } else {
        _853___accumulator = Dafny.Sequence<RAST._ITypeParam>.Concat(_853___accumulator, Dafny.Sequence<RAST._ITypeParam>.FromElements(((typeParams).Select(BigInteger.Zero)).AddConstraints(constraints)));
        Dafny.ISequence<RAST._ITypeParam> _in111 = (typeParams).Drop(BigInteger.One);
        Dafny.ISequence<RAST._IType> _in112 = constraints;
        typeParams = _in111;
        constraints = _in112;
        goto TAIL_CALL_START;
      }
    }
    public RAST._ITypeParam AddConstraints(Dafny.ISequence<RAST._IType> constraints) {
      RAST._ITypeParam _854_dt__update__tmp_h0 = this;
      Dafny.ISequence<RAST._IType> _855_dt__update_hconstraints_h0 = Dafny.Sequence<RAST._IType>.Concat((this).dtor_constraints, constraints);
      return RAST.TypeParam.create((_854_dt__update__tmp_h0).dtor_content, _855_dt__update_hconstraints_h0);
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_content, (((new BigInteger(((this).dtor_constraints).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": "), RAST.__default.SeqToString<RAST._IType>((this).dtor_constraints, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_856_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_857_t) => {
        return (_857_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_856_ind, RAST.__default.IND));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" + "))))));
    }
  }

  public interface _IType {
    bool is_SelfOwned { get; }
    bool is_U8 { get; }
    bool is_U16 { get; }
    bool is_U32 { get; }
    bool is_U64 { get; }
    bool is_U128 { get; }
    bool is_I8 { get; }
    bool is_I16 { get; }
    bool is_I32 { get; }
    bool is_I64 { get; }
    bool is_I128 { get; }
    bool is_Bool { get; }
    bool is_TIdentifier { get; }
    bool is_TMemberSelect { get; }
    bool is_TypeApp { get; }
    bool is_Borrowed { get; }
    bool is_BorrowedMut { get; }
    bool is_Pointer { get; }
    bool is_PointerMut { get; }
    bool is_ImplType { get; }
    bool is_DynType { get; }
    bool is_TupleType { get; }
    bool is_FnType { get; }
    bool is_IntersectionType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IType dtor_base { get; }
    RAST._IType dtor_baseName { get; }
    Dafny.ISequence<RAST._IType> dtor_arguments { get; }
    RAST._IType dtor_underlying { get; }
    RAST._IType dtor_returnType { get; }
    RAST._IType dtor_left { get; }
    RAST._IType dtor_right { get; }
    _IType DowncastClone();
    bool HasCopySemantics();
    Std.Wrappers._IOption<RAST._IType> ExtractMaybePlacebo();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
    RAST._IType MSel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IType Apply1(RAST._IType arg);
    RAST._IType Apply(Dafny.ISequence<RAST._IType> args);
  }
  public abstract class Type : _IType {
    public Type() {
    }
    private static readonly RAST._IType theDefault = create_SelfOwned();
    public static RAST._IType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IType> _TYPE = new Dafny.TypeDescriptor<RAST._IType>(RAST.Type.Default());
    public static Dafny.TypeDescriptor<RAST._IType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IType create_SelfOwned() {
      return new Type_SelfOwned();
    }
    public static _IType create_U8() {
      return new Type_U8();
    }
    public static _IType create_U16() {
      return new Type_U16();
    }
    public static _IType create_U32() {
      return new Type_U32();
    }
    public static _IType create_U64() {
      return new Type_U64();
    }
    public static _IType create_U128() {
      return new Type_U128();
    }
    public static _IType create_I8() {
      return new Type_I8();
    }
    public static _IType create_I16() {
      return new Type_I16();
    }
    public static _IType create_I32() {
      return new Type_I32();
    }
    public static _IType create_I64() {
      return new Type_I64();
    }
    public static _IType create_I128() {
      return new Type_I128();
    }
    public static _IType create_Bool() {
      return new Type_Bool();
    }
    public static _IType create_TIdentifier(Dafny.ISequence<Dafny.Rune> name) {
      return new Type_TIdentifier(name);
    }
    public static _IType create_TMemberSelect(RAST._IType @base, Dafny.ISequence<Dafny.Rune> name) {
      return new Type_TMemberSelect(@base, name);
    }
    public static _IType create_TypeApp(RAST._IType baseName, Dafny.ISequence<RAST._IType> arguments) {
      return new Type_TypeApp(baseName, arguments);
    }
    public static _IType create_Borrowed(RAST._IType underlying) {
      return new Type_Borrowed(underlying);
    }
    public static _IType create_BorrowedMut(RAST._IType underlying) {
      return new Type_BorrowedMut(underlying);
    }
    public static _IType create_Pointer(RAST._IType underlying) {
      return new Type_Pointer(underlying);
    }
    public static _IType create_PointerMut(RAST._IType underlying) {
      return new Type_PointerMut(underlying);
    }
    public static _IType create_ImplType(RAST._IType underlying) {
      return new Type_ImplType(underlying);
    }
    public static _IType create_DynType(RAST._IType underlying) {
      return new Type_DynType(underlying);
    }
    public static _IType create_TupleType(Dafny.ISequence<RAST._IType> arguments) {
      return new Type_TupleType(arguments);
    }
    public static _IType create_FnType(Dafny.ISequence<RAST._IType> arguments, RAST._IType returnType) {
      return new Type_FnType(arguments, returnType);
    }
    public static _IType create_IntersectionType(RAST._IType left, RAST._IType right) {
      return new Type_IntersectionType(left, right);
    }
    public bool is_SelfOwned { get { return this is Type_SelfOwned; } }
    public bool is_U8 { get { return this is Type_U8; } }
    public bool is_U16 { get { return this is Type_U16; } }
    public bool is_U32 { get { return this is Type_U32; } }
    public bool is_U64 { get { return this is Type_U64; } }
    public bool is_U128 { get { return this is Type_U128; } }
    public bool is_I8 { get { return this is Type_I8; } }
    public bool is_I16 { get { return this is Type_I16; } }
    public bool is_I32 { get { return this is Type_I32; } }
    public bool is_I64 { get { return this is Type_I64; } }
    public bool is_I128 { get { return this is Type_I128; } }
    public bool is_Bool { get { return this is Type_Bool; } }
    public bool is_TIdentifier { get { return this is Type_TIdentifier; } }
    public bool is_TMemberSelect { get { return this is Type_TMemberSelect; } }
    public bool is_TypeApp { get { return this is Type_TypeApp; } }
    public bool is_Borrowed { get { return this is Type_Borrowed; } }
    public bool is_BorrowedMut { get { return this is Type_BorrowedMut; } }
    public bool is_Pointer { get { return this is Type_Pointer; } }
    public bool is_PointerMut { get { return this is Type_PointerMut; } }
    public bool is_ImplType { get { return this is Type_ImplType; } }
    public bool is_DynType { get { return this is Type_DynType; } }
    public bool is_TupleType { get { return this is Type_TupleType; } }
    public bool is_FnType { get { return this is Type_FnType; } }
    public bool is_IntersectionType { get { return this is Type_IntersectionType; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Type_TIdentifier) { return ((Type_TIdentifier)d)._name; }
        return ((Type_TMemberSelect)d)._name;
      }
    }
    public RAST._IType dtor_base {
      get {
        var d = this;
        return ((Type_TMemberSelect)d)._base;
      }
    }
    public RAST._IType dtor_baseName {
      get {
        var d = this;
        return ((Type_TypeApp)d)._baseName;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_arguments {
      get {
        var d = this;
        if (d is Type_TypeApp) { return ((Type_TypeApp)d)._arguments; }
        if (d is Type_TupleType) { return ((Type_TupleType)d)._arguments; }
        return ((Type_FnType)d)._arguments;
      }
    }
    public RAST._IType dtor_underlying {
      get {
        var d = this;
        if (d is Type_Borrowed) { return ((Type_Borrowed)d)._underlying; }
        if (d is Type_BorrowedMut) { return ((Type_BorrowedMut)d)._underlying; }
        if (d is Type_Pointer) { return ((Type_Pointer)d)._underlying; }
        if (d is Type_PointerMut) { return ((Type_PointerMut)d)._underlying; }
        if (d is Type_ImplType) { return ((Type_ImplType)d)._underlying; }
        return ((Type_DynType)d)._underlying;
      }
    }
    public RAST._IType dtor_returnType {
      get {
        var d = this;
        return ((Type_FnType)d)._returnType;
      }
    }
    public RAST._IType dtor_left {
      get {
        var d = this;
        return ((Type_IntersectionType)d)._left;
      }
    }
    public RAST._IType dtor_right {
      get {
        var d = this;
        return ((Type_IntersectionType)d)._right;
      }
    }
    public abstract _IType DowncastClone();
    public bool HasCopySemantics() {
      return (((((((((((((this).is_U8) || ((this).is_U16)) || ((this).is_U32)) || ((this).is_U64)) || ((this).is_U128)) || ((this).is_I8)) || ((this).is_I16)) || ((this).is_I32)) || ((this).is_I64)) || ((this).is_I128)) || ((this).is_Bool)) || ((this).is_Pointer)) || ((this).is_PointerMut);
    }
    public Std.Wrappers._IOption<RAST._IType> ExtractMaybePlacebo() {
      RAST._IType _source26 = this;
      if (_source26.is_SelfOwned) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_Bool) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TIdentifier) {
        Dafny.ISequence<Dafny.Rune> _858___mcc_h0 = _source26.dtor_name;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TMemberSelect) {
        RAST._IType _859___mcc_h2 = _source26.dtor_base;
        Dafny.ISequence<Dafny.Rune> _860___mcc_h3 = _source26.dtor_name;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TypeApp) {
        RAST._IType _861___mcc_h6 = _source26.dtor_baseName;
        Dafny.ISequence<RAST._IType> _862___mcc_h7 = _source26.dtor_arguments;
        Dafny.ISequence<RAST._IType> _863_arguments = _862___mcc_h7;
        RAST._IType _864_wrapper = _861___mcc_h6;
        if (((object.Equals(_864_wrapper, RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo")))) || (object.Equals(_864_wrapper, (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))))) && ((new BigInteger((_863_arguments).Count)) == (BigInteger.One))) {
          return Std.Wrappers.Option<RAST._IType>.create_Some((_863_arguments).Select(BigInteger.Zero));
        } else {
          return Std.Wrappers.Option<RAST._IType>.create_None();
        }
      } else if (_source26.is_Borrowed) {
        RAST._IType _865___mcc_h10 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_BorrowedMut) {
        RAST._IType _866___mcc_h12 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_Pointer) {
        RAST._IType _867___mcc_h14 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_PointerMut) {
        RAST._IType _868___mcc_h16 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_ImplType) {
        RAST._IType _869___mcc_h18 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_DynType) {
        RAST._IType _870___mcc_h20 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TupleType) {
        Dafny.ISequence<RAST._IType> _871___mcc_h22 = _source26.dtor_arguments;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_FnType) {
        Dafny.ISequence<RAST._IType> _872___mcc_h24 = _source26.dtor_arguments;
        RAST._IType _873___mcc_h25 = _source26.dtor_returnType;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        RAST._IType _874___mcc_h28 = _source26.dtor_left;
        RAST._IType _875___mcc_h29 = _source26.dtor_right;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      RAST._IType _source27 = this;
      if (_source27.is_SelfOwned) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self");
      } else if (_source27.is_U8) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8");
      } else if (_source27.is_U16) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16");
      } else if (_source27.is_U32) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32");
      } else if (_source27.is_U64) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64");
      } else if (_source27.is_U128) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128");
      } else if (_source27.is_I8) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8");
      } else if (_source27.is_I16) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16");
      } else if (_source27.is_I32) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32");
      } else if (_source27.is_I64) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64");
      } else if (_source27.is_I128) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128");
      } else if (_source27.is_Bool) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("bool");
      } else if (_source27.is_TIdentifier) {
        Dafny.ISequence<Dafny.Rune> _876___mcc_h0 = _source27.dtor_name;
        Dafny.ISequence<Dafny.Rune> _877_underlying = _876___mcc_h0;
        return _877_underlying;
      } else if (_source27.is_TMemberSelect) {
        RAST._IType _878___mcc_h1 = _source27.dtor_base;
        Dafny.ISequence<Dafny.Rune> _879___mcc_h2 = _source27.dtor_name;
        Dafny.ISequence<Dafny.Rune> _880_name = _879___mcc_h2;
        RAST._IType _881_underlying = _878___mcc_h1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_881_underlying)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _880_name);
      } else if (_source27.is_TypeApp) {
        RAST._IType _882___mcc_h3 = _source27.dtor_baseName;
        Dafny.ISequence<RAST._IType> _883___mcc_h4 = _source27.dtor_arguments;
        Dafny.ISequence<RAST._IType> _884_args = _883___mcc_h4;
        RAST._IType _885_base = _882___mcc_h3;
        return Dafny.Sequence<Dafny.Rune>.Concat((_885_base)._ToString(ind), (((_884_args).Equals(Dafny.Sequence<RAST._IType>.FromElements())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), RAST.__default.SeqToString<RAST._IType>(_884_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_886_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_887_arg) => {
          return (_887_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_886_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">")))));
      } else if (_source27.is_Borrowed) {
        RAST._IType _888___mcc_h5 = _source27.dtor_underlying;
        RAST._IType _889_underlying = _888___mcc_h5;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), (_889_underlying)._ToString(ind));
      } else if (_source27.is_BorrowedMut) {
        RAST._IType _890___mcc_h6 = _source27.dtor_underlying;
        RAST._IType _891_underlying = _890___mcc_h6;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut "), (_891_underlying)._ToString(ind));
      } else if (_source27.is_Pointer) {
        RAST._IType _892___mcc_h7 = _source27.dtor_underlying;
        RAST._IType _893_underlying = _892___mcc_h7;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*const "), (_893_underlying)._ToString(ind));
      } else if (_source27.is_PointerMut) {
        RAST._IType _894___mcc_h8 = _source27.dtor_underlying;
        RAST._IType _895_underlying = _894___mcc_h8;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*mut "), (_895_underlying)._ToString(ind));
      } else if (_source27.is_ImplType) {
        RAST._IType _896___mcc_h9 = _source27.dtor_underlying;
        RAST._IType _897_underlying = _896___mcc_h9;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl "), (_897_underlying)._ToString(ind));
      } else if (_source27.is_DynType) {
        RAST._IType _898___mcc_h10 = _source27.dtor_underlying;
        RAST._IType _899_underlying = _898___mcc_h10;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn "), (_899_underlying)._ToString(ind));
      } else if (_source27.is_TupleType) {
        Dafny.ISequence<RAST._IType> _900___mcc_h11 = _source27.dtor_arguments;
        Dafny.ISequence<RAST._IType> _901_args = _900___mcc_h11;
        if ((_901_args).Equals(Dafny.Sequence<RAST._IType>.FromElements())) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("()");
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._IType>(_901_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_902_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_903_arg) => {
            return (_903_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_902_ind, RAST.__default.IND));
          })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
        }
      } else if (_source27.is_FnType) {
        Dafny.ISequence<RAST._IType> _904___mcc_h12 = _source27.dtor_arguments;
        RAST._IType _905___mcc_h13 = _source27.dtor_returnType;
        RAST._IType _906_returnType = _905___mcc_h13;
        Dafny.ISequence<RAST._IType> _907_arguments = _904___mcc_h12;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Fn("), RAST.__default.SeqToString<RAST._IType>(_907_arguments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_908_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_909_arg) => {
          return (_909_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_908_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_906_returnType)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
      } else {
        RAST._IType _910___mcc_h14 = _source27.dtor_left;
        RAST._IType _911___mcc_h15 = _source27.dtor_right;
        RAST._IType _912_right = _911___mcc_h15;
        RAST._IType _913_left = _910___mcc_h14;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_913_left)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" + ")), (_912_right)._ToString(ind));
      }
    }
    public RAST._IType MSel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Type.create_TMemberSelect(this, name);
    }
    public RAST._IType Apply1(RAST._IType arg) {
      return RAST.Type.create_TypeApp(this, Dafny.Sequence<RAST._IType>.FromElements(arg));
    }
    public RAST._IType Apply(Dafny.ISequence<RAST._IType> args) {
      return RAST.Type.create_TypeApp(this, args);
    }
  }
  public class Type_SelfOwned : Type {
    public Type_SelfOwned() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_SelfOwned();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_SelfOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.SelfOwned";
      return s;
    }
  }
  public class Type_U8 : Type {
    public Type_U8() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U8();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U8";
      return s;
    }
  }
  public class Type_U16 : Type {
    public Type_U16() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U16();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U16";
      return s;
    }
  }
  public class Type_U32 : Type {
    public Type_U32() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U32();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U32";
      return s;
    }
  }
  public class Type_U64 : Type {
    public Type_U64() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U64();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U64";
      return s;
    }
  }
  public class Type_U128 : Type {
    public Type_U128() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U128();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U128";
      return s;
    }
  }
  public class Type_I8 : Type {
    public Type_I8() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I8();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I8";
      return s;
    }
  }
  public class Type_I16 : Type {
    public Type_I16() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I16();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I16";
      return s;
    }
  }
  public class Type_I32 : Type {
    public Type_I32() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I32();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I32";
      return s;
    }
  }
  public class Type_I64 : Type {
    public Type_I64() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I64();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I64";
      return s;
    }
  }
  public class Type_I128 : Type {
    public Type_I128() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I128();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I128";
      return s;
    }
  }
  public class Type_Bool : Type {
    public Type_Bool() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Bool();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Bool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Bool";
      return s;
    }
  }
  public class Type_TIdentifier : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Type_TIdentifier(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TIdentifier(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TIdentifier;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TIdentifier";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TMemberSelect : Type {
    public readonly RAST._IType _base;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Type_TMemberSelect(RAST._IType @base, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._base = @base;
      this._name = name;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TMemberSelect(_base, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TMemberSelect;
      return oth != null && object.Equals(this._base, oth._base) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._base));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TMemberSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._base);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TypeApp : Type {
    public readonly RAST._IType _baseName;
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public Type_TypeApp(RAST._IType baseName, Dafny.ISequence<RAST._IType> arguments) : base() {
      this._baseName = baseName;
      this._arguments = arguments;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TypeApp(_baseName, _arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TypeApp;
      return oth != null && object.Equals(this._baseName, oth._baseName) && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._baseName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TypeApp";
      s += "(";
      s += Dafny.Helpers.ToString(this._baseName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Type_Borrowed : Type {
    public readonly RAST._IType _underlying;
    public Type_Borrowed(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Borrowed(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Borrowed;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Borrowed";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_BorrowedMut : Type {
    public readonly RAST._IType _underlying;
    public Type_BorrowedMut(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_BorrowedMut(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_BorrowedMut;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.BorrowedMut";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_Pointer : Type {
    public readonly RAST._IType _underlying;
    public Type_Pointer(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Pointer(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Pointer;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Pointer";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_PointerMut : Type {
    public readonly RAST._IType _underlying;
    public Type_PointerMut(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_PointerMut(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_PointerMut;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.PointerMut";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_ImplType : Type {
    public readonly RAST._IType _underlying;
    public Type_ImplType(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_ImplType(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_ImplType;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.ImplType";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_DynType : Type {
    public readonly RAST._IType _underlying;
    public Type_DynType(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_DynType(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_DynType;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.DynType";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_TupleType : Type {
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public Type_TupleType(Dafny.ISequence<RAST._IType> arguments) : base() {
      this._arguments = arguments;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TupleType(_arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TupleType;
      return oth != null && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TupleType";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Type_FnType : Type {
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public readonly RAST._IType _returnType;
    public Type_FnType(Dafny.ISequence<RAST._IType> arguments, RAST._IType returnType) : base() {
      this._arguments = arguments;
      this._returnType = returnType;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_FnType(_arguments, _returnType);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_FnType;
      return oth != null && object.Equals(this._arguments, oth._arguments) && object.Equals(this._returnType, oth._returnType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._returnType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.FnType";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ", ";
      s += Dafny.Helpers.ToString(this._returnType);
      s += ")";
      return s;
    }
  }
  public class Type_IntersectionType : Type {
    public readonly RAST._IType _left;
    public readonly RAST._IType _right;
    public Type_IntersectionType(RAST._IType left, RAST._IType right) : base() {
      this._left = left;
      this._right = right;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_IntersectionType(_left, _right);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_IntersectionType;
      return oth != null && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.IntersectionType";
      s += "(";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ")";
      return s;
    }
  }

  public interface _ITrait {
    bool is_Trait { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IType dtor_tpe { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Dafny.ISequence<RAST._IImplMember> dtor_body { get; }
    _ITrait DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Trait : _ITrait {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Trait(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._where = @where;
      this._body = body;
    }
    public _ITrait DowncastClone() {
      if (this is _ITrait dt) { return dt; }
      return new Trait(_typeParams, _tpe, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Trait;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Trait.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly RAST._ITrait theDefault = create(Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Type.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IImplMember>.Empty);
    public static RAST._ITrait Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._ITrait> _TYPE = new Dafny.TypeDescriptor<RAST._ITrait>(RAST.Trait.Default());
    public static Dafny.TypeDescriptor<RAST._ITrait> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITrait create(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Trait(typeParams, tpe, @where, body);
    }
    public static _ITrait create_Trait(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return create(typeParams, tpe, @where, body);
    }
    public bool is_Trait { get { return true; } }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        return this._where;
      }
    }
    public Dafny.ISequence<RAST._IImplMember> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub trait "), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_tpe)._ToString(ind)), ((!((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IImplMember>((this).dtor_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>>>((_914_ind) => ((System.Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>)((_915_member) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _914_ind), RAST.__default.IND), (_915_member)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_914_ind, RAST.__default.IND)));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), (((new BigInteger(((this).dtor_body).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }

  public interface _IImpl {
    bool is_ImplFor { get; }
    bool is_Impl { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IType dtor_tpe { get; }
    RAST._IType dtor_forType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Dafny.ISequence<RAST._IImplMember> dtor_body { get; }
    _IImpl DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class Impl : _IImpl {
    public Impl() {
    }
    private static readonly RAST._IImpl theDefault = create_ImplFor(Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Type.Default(), RAST.Type.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IImplMember>.Empty);
    public static RAST._IImpl Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IImpl> _TYPE = new Dafny.TypeDescriptor<RAST._IImpl>(RAST.Impl.Default());
    public static Dafny.TypeDescriptor<RAST._IImpl> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IImpl create_ImplFor(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, RAST._IType forType, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Impl_ImplFor(typeParams, tpe, forType, @where, body);
    }
    public static _IImpl create_Impl(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Impl_Impl(typeParams, tpe, @where, body);
    }
    public bool is_ImplFor { get { return this is Impl_ImplFor; } }
    public bool is_Impl { get { return this is Impl_Impl; } }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._typeParams; }
        return ((Impl_Impl)d)._typeParams;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._tpe; }
        return ((Impl_Impl)d)._tpe;
      }
    }
    public RAST._IType dtor_forType {
      get {
        var d = this;
        return ((Impl_ImplFor)d)._forType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._where; }
        return ((Impl_Impl)d)._where;
      }
    }
    public Dafny.ISequence<RAST._IImplMember> dtor_body {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._body; }
        return ((Impl_Impl)d)._body;
      }
    }
    public abstract _IImpl DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl "), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_tpe)._ToString(ind)), (((this).is_ImplFor) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" for "), ((this).dtor_forType)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), ((!((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IImplMember>((this).dtor_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>>>((_916_ind) => ((System.Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>)((_917_member) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _916_ind), RAST.__default.IND), (_917_member)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_916_ind, RAST.__default.IND)));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), (((new BigInteger(((this).dtor_body).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }
  public class Impl_ImplFor : Impl {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly RAST._IType _forType;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Impl_ImplFor(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, RAST._IType forType, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) : base() {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._forType = forType;
      this._where = @where;
      this._body = body;
    }
    public override _IImpl DowncastClone() {
      if (this is _IImpl dt) { return dt; }
      return new Impl_ImplFor(_typeParams, _tpe, _forType, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Impl_ImplFor;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._forType, oth._forType) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._forType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Impl.ImplFor";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += Dafny.Helpers.ToString(this._forType);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Impl_Impl : Impl {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Impl_Impl(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) : base() {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._where = @where;
      this._body = body;
    }
    public override _IImpl DowncastClone() {
      if (this is _IImpl dt) { return dt; }
      return new Impl_Impl(_typeParams, _tpe, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Impl_Impl;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Impl.Impl";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }

  public interface _IImplMember {
    bool is_RawImplMember { get; }
    bool is_FnDecl { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    RAST._IVisibility dtor_pub { get; }
    RAST._IFn dtor_fun { get; }
    _IImplMember DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class ImplMember : _IImplMember {
    public ImplMember() {
    }
    private static readonly RAST._IImplMember theDefault = create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IImplMember Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IImplMember> _TYPE = new Dafny.TypeDescriptor<RAST._IImplMember>(RAST.ImplMember.Default());
    public static Dafny.TypeDescriptor<RAST._IImplMember> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IImplMember create_RawImplMember(Dafny.ISequence<Dafny.Rune> content) {
      return new ImplMember_RawImplMember(content);
    }
    public static _IImplMember create_FnDecl(RAST._IVisibility pub, RAST._IFn fun) {
      return new ImplMember_FnDecl(pub, fun);
    }
    public bool is_RawImplMember { get { return this is ImplMember_RawImplMember; } }
    public bool is_FnDecl { get { return this is ImplMember_FnDecl; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        var d = this;
        return ((ImplMember_RawImplMember)d)._content;
      }
    }
    public RAST._IVisibility dtor_pub {
      get {
        var d = this;
        return ((ImplMember_FnDecl)d)._pub;
      }
    }
    public RAST._IFn dtor_fun {
      get {
        var d = this;
        return ((ImplMember_FnDecl)d)._fun;
      }
    }
    public abstract _IImplMember DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((this).is_FnDecl) {
        return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_pub, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_fun)._ToString(ind));
      } else {
        return (this).dtor_content;
      }
    }
  }
  public class ImplMember_RawImplMember : ImplMember {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public ImplMember_RawImplMember(Dafny.ISequence<Dafny.Rune> content) : base() {
      this._content = content;
    }
    public override _IImplMember DowncastClone() {
      if (this is _IImplMember dt) { return dt; }
      return new ImplMember_RawImplMember(_content);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ImplMember_RawImplMember;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ImplMember.RawImplMember";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class ImplMember_FnDecl : ImplMember {
    public readonly RAST._IVisibility _pub;
    public readonly RAST._IFn _fun;
    public ImplMember_FnDecl(RAST._IVisibility pub, RAST._IFn fun) : base() {
      this._pub = pub;
      this._fun = fun;
    }
    public override _IImplMember DowncastClone() {
      if (this is _IImplMember dt) { return dt; }
      return new ImplMember_FnDecl(_pub, _fun);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ImplMember_FnDecl;
      return oth != null && object.Equals(this._pub, oth._pub) && object.Equals(this._fun, oth._fun);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._pub));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fun));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ImplMember.FnDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._pub);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fun);
      s += ")";
      return s;
    }
  }

  public interface _IVisibility {
    bool is_PUB { get; }
    bool is_PRIV { get; }
    _IVisibility DowncastClone();
  }
  public abstract class Visibility : _IVisibility {
    public Visibility() {
    }
    private static readonly RAST._IVisibility theDefault = create_PUB();
    public static RAST._IVisibility Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IVisibility> _TYPE = new Dafny.TypeDescriptor<RAST._IVisibility>(RAST.Visibility.Default());
    public static Dafny.TypeDescriptor<RAST._IVisibility> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IVisibility create_PUB() {
      return new Visibility_PUB();
    }
    public static _IVisibility create_PRIV() {
      return new Visibility_PRIV();
    }
    public bool is_PUB { get { return this is Visibility_PUB; } }
    public bool is_PRIV { get { return this is Visibility_PRIV; } }
    public static System.Collections.Generic.IEnumerable<_IVisibility> AllSingletonConstructors {
      get {
        yield return Visibility.create_PUB();
        yield return Visibility.create_PRIV();
      }
    }
    public abstract _IVisibility DowncastClone();
  }
  public class Visibility_PUB : Visibility {
    public Visibility_PUB() : base() {
    }
    public override _IVisibility DowncastClone() {
      if (this is _IVisibility dt) { return dt; }
      return new Visibility_PUB();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Visibility_PUB;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Visibility.PUB";
      return s;
    }
  }
  public class Visibility_PRIV : Visibility {
    public Visibility_PRIV() : base() {
    }
    public override _IVisibility DowncastClone() {
      if (this is _IVisibility dt) { return dt; }
      return new Visibility_PRIV();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Visibility_PRIV;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Visibility.PRIV";
      return s;
    }
  }

  public interface _IFormal {
    bool is_Formal { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IType dtor_tpe { get; }
    _IFormal DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Formal : _IFormal {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IType _tpe;
    public Formal(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      this._name = name;
      this._tpe = tpe;
    }
    public _IFormal DowncastClone() {
      if (this is _IFormal dt) { return dt; }
      return new Formal(_name, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Formal;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Formal.Formal";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
    private static readonly RAST._IFormal theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Type.Default());
    public static RAST._IFormal Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFormal> _TYPE = new Dafny.TypeDescriptor<RAST._IFormal>(RAST.Formal.Default());
    public static Dafny.TypeDescriptor<RAST._IFormal> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFormal create(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      return new Formal(name, tpe);
    }
    public static _IFormal create_Formal(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      return create(name, tpe);
    }
    public bool is_Formal { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) && (((this).dtor_tpe).is_SelfOwned)) {
        return (this).dtor_name;
      } else if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self"))) && (object.Equals((this).dtor_tpe, RAST.Type.create_Borrowed(RAST.Type.create_SelfOwned())))) {
        return (this).dtor_name;
      } else if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut self"))) && (object.Equals((this).dtor_tpe, RAST.Type.create_Borrowed(RAST.__default.SelfBorrowedMut)))) {
        return (this).dtor_name;
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_name, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), ((this).dtor_tpe)._ToString(ind));
      }
    }
    public static RAST._IFormal selfBorrowed { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self"), RAST.__default.SelfBorrowed);
    } }
    public static RAST._IFormal selfOwned { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_SelfOwned());
    } }
    public static RAST._IFormal selfMut { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut self"), RAST.__default.SelfBorrowedMut);
    } }
  }

  public interface _IPattern {
    bool is_RawPattern { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
  }
  public class Pattern : _IPattern {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Pattern(Dafny.ISequence<Dafny.Rune> content) {
      this._content = content;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Pattern;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Pattern.RawPattern";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPattern create(Dafny.ISequence<Dafny.Rune> content) {
      return new Pattern(content);
    }
    public static _IPattern create_RawPattern(Dafny.ISequence<Dafny.Rune> content) {
      return create(content);
    }
    public bool is_RawPattern { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> _this, Dafny.ISequence<Dafny.Rune> ind) {
      return (_this);
    }
  }

  public interface _IMatchCase {
    bool is_MatchCase { get; }
    Dafny.ISequence<Dafny.Rune> dtor_pattern { get; }
    RAST._IExpr dtor_rhs { get; }
    _IMatchCase DowncastClone();
    BigInteger Height();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class MatchCase : _IMatchCase {
    public readonly Dafny.ISequence<Dafny.Rune> _pattern;
    public readonly RAST._IExpr _rhs;
    public MatchCase(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      this._pattern = pattern;
      this._rhs = rhs;
    }
    public _IMatchCase DowncastClone() {
      if (this is _IMatchCase dt) { return dt; }
      return new MatchCase(_pattern, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.MatchCase;
      return oth != null && object.Equals(this._pattern, oth._pattern) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._pattern));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.MatchCase.MatchCase";
      s += "(";
      s += Dafny.Helpers.ToString(this._pattern);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
    private static readonly RAST._IMatchCase theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Expr.Default());
    public static RAST._IMatchCase Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IMatchCase> _TYPE = new Dafny.TypeDescriptor<RAST._IMatchCase>(RAST.MatchCase.Default());
    public static Dafny.TypeDescriptor<RAST._IMatchCase> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMatchCase create(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      return new MatchCase(pattern, rhs);
    }
    public static _IMatchCase create_MatchCase(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      return create(pattern, rhs);
    }
    public bool is_MatchCase { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_pattern {
      get {
        return this._pattern;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        return this._rhs;
      }
    }
    public BigInteger Height() {
      return (BigInteger.One) + (((this).dtor_rhs).Height());
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      Dafny.ISequence<Dafny.Rune> _918_newIndent = ((((this).dtor_rhs).is_Block) ? (ind) : (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
      Dafny.ISequence<Dafny.Rune> _919_rhsString = ((this).dtor_rhs)._ToString(_918_newIndent);
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Pattern._ToString((this).dtor_pattern, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" =>")), ((((_919_rhsString).Contains(new Dafny.Rune('\n'))) && (((_919_rhsString).Select(BigInteger.Zero)) != (new Dafny.Rune('{')))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), _919_rhsString)) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), _919_rhsString))));
    }
  }

  public interface _IAssignIdentifier {
    bool is_AssignIdentifier { get; }
    Dafny.ISequence<Dafny.Rune> dtor_identifier { get; }
    RAST._IExpr dtor_rhs { get; }
    _IAssignIdentifier DowncastClone();
    BigInteger Height();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class AssignIdentifier : _IAssignIdentifier {
    public readonly Dafny.ISequence<Dafny.Rune> _identifier;
    public readonly RAST._IExpr _rhs;
    public AssignIdentifier(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      this._identifier = identifier;
      this._rhs = rhs;
    }
    public _IAssignIdentifier DowncastClone() {
      if (this is _IAssignIdentifier dt) { return dt; }
      return new AssignIdentifier(_identifier, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.AssignIdentifier;
      return oth != null && object.Equals(this._identifier, oth._identifier) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._identifier));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.AssignIdentifier.AssignIdentifier";
      s += "(";
      s += this._identifier.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
    private static readonly RAST._IAssignIdentifier theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Expr.Default());
    public static RAST._IAssignIdentifier Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IAssignIdentifier> _TYPE = new Dafny.TypeDescriptor<RAST._IAssignIdentifier>(RAST.AssignIdentifier.Default());
    public static Dafny.TypeDescriptor<RAST._IAssignIdentifier> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssignIdentifier create(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      return new AssignIdentifier(identifier, rhs);
    }
    public static _IAssignIdentifier create_AssignIdentifier(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      return create(identifier, rhs);
    }
    public bool is_AssignIdentifier { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_identifier {
      get {
        return this._identifier;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        return this._rhs;
      }
    }
    public BigInteger Height() {
      return (BigInteger.One) + (((this).dtor_rhs).Height());
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_identifier, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), ((this).dtor_rhs)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
    }
  }

  public interface _IDeclareType {
    bool is_MUT { get; }
    bool is_CONST { get; }
    _IDeclareType DowncastClone();
  }
  public abstract class DeclareType : _IDeclareType {
    public DeclareType() {
    }
    private static readonly RAST._IDeclareType theDefault = create_MUT();
    public static RAST._IDeclareType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IDeclareType> _TYPE = new Dafny.TypeDescriptor<RAST._IDeclareType>(RAST.DeclareType.Default());
    public static Dafny.TypeDescriptor<RAST._IDeclareType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDeclareType create_MUT() {
      return new DeclareType_MUT();
    }
    public static _IDeclareType create_CONST() {
      return new DeclareType_CONST();
    }
    public bool is_MUT { get { return this is DeclareType_MUT; } }
    public bool is_CONST { get { return this is DeclareType_CONST; } }
    public static System.Collections.Generic.IEnumerable<_IDeclareType> AllSingletonConstructors {
      get {
        yield return DeclareType.create_MUT();
        yield return DeclareType.create_CONST();
      }
    }
    public abstract _IDeclareType DowncastClone();
  }
  public class DeclareType_MUT : DeclareType {
    public DeclareType_MUT() : base() {
    }
    public override _IDeclareType DowncastClone() {
      if (this is _IDeclareType dt) { return dt; }
      return new DeclareType_MUT();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.DeclareType_MUT;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.DeclareType.MUT";
      return s;
    }
  }
  public class DeclareType_CONST : DeclareType {
    public DeclareType_CONST() : base() {
    }
    public override _IDeclareType DowncastClone() {
      if (this is _IDeclareType dt) { return dt; }
      return new DeclareType_CONST();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.DeclareType_CONST;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.DeclareType.CONST";
      return s;
    }
  }

  public interface _IAssociativity {
    bool is_LeftToRight { get; }
    bool is_RightToLeft { get; }
    bool is_RequiresParentheses { get; }
    _IAssociativity DowncastClone();
  }
  public abstract class Associativity : _IAssociativity {
    public Associativity() {
    }
    private static readonly RAST._IAssociativity theDefault = create_LeftToRight();
    public static RAST._IAssociativity Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IAssociativity> _TYPE = new Dafny.TypeDescriptor<RAST._IAssociativity>(RAST.Associativity.Default());
    public static Dafny.TypeDescriptor<RAST._IAssociativity> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssociativity create_LeftToRight() {
      return new Associativity_LeftToRight();
    }
    public static _IAssociativity create_RightToLeft() {
      return new Associativity_RightToLeft();
    }
    public static _IAssociativity create_RequiresParentheses() {
      return new Associativity_RequiresParentheses();
    }
    public bool is_LeftToRight { get { return this is Associativity_LeftToRight; } }
    public bool is_RightToLeft { get { return this is Associativity_RightToLeft; } }
    public bool is_RequiresParentheses { get { return this is Associativity_RequiresParentheses; } }
    public static System.Collections.Generic.IEnumerable<_IAssociativity> AllSingletonConstructors {
      get {
        yield return Associativity.create_LeftToRight();
        yield return Associativity.create_RightToLeft();
        yield return Associativity.create_RequiresParentheses();
      }
    }
    public abstract _IAssociativity DowncastClone();
  }
  public class Associativity_LeftToRight : Associativity {
    public Associativity_LeftToRight() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_LeftToRight();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_LeftToRight;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.LeftToRight";
      return s;
    }
  }
  public class Associativity_RightToLeft : Associativity {
    public Associativity_RightToLeft() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_RightToLeft();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_RightToLeft;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.RightToLeft";
      return s;
    }
  }
  public class Associativity_RequiresParentheses : Associativity {
    public Associativity_RequiresParentheses() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_RequiresParentheses();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_RequiresParentheses;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.RequiresParentheses";
      return s;
    }
  }

  public interface _IPrintingInfo {
    bool is_UnknownPrecedence { get; }
    bool is_Precedence { get; }
    bool is_SuffixPrecedence { get; }
    bool is_PrecedenceAssociativity { get; }
    BigInteger dtor_precedence { get; }
    RAST._IAssociativity dtor_associativity { get; }
    _IPrintingInfo DowncastClone();
    bool NeedParenthesesFor(RAST._IPrintingInfo underlying);
    bool NeedParenthesesForLeft(RAST._IPrintingInfo underlying);
    bool NeedParenthesesForRight(RAST._IPrintingInfo underlying);
  }
  public abstract class PrintingInfo : _IPrintingInfo {
    public PrintingInfo() {
    }
    private static readonly RAST._IPrintingInfo theDefault = create_UnknownPrecedence();
    public static RAST._IPrintingInfo Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IPrintingInfo> _TYPE = new Dafny.TypeDescriptor<RAST._IPrintingInfo>(RAST.PrintingInfo.Default());
    public static Dafny.TypeDescriptor<RAST._IPrintingInfo> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPrintingInfo create_UnknownPrecedence() {
      return new PrintingInfo_UnknownPrecedence();
    }
    public static _IPrintingInfo create_Precedence(BigInteger precedence) {
      return new PrintingInfo_Precedence(precedence);
    }
    public static _IPrintingInfo create_SuffixPrecedence(BigInteger precedence) {
      return new PrintingInfo_SuffixPrecedence(precedence);
    }
    public static _IPrintingInfo create_PrecedenceAssociativity(BigInteger precedence, RAST._IAssociativity associativity) {
      return new PrintingInfo_PrecedenceAssociativity(precedence, associativity);
    }
    public bool is_UnknownPrecedence { get { return this is PrintingInfo_UnknownPrecedence; } }
    public bool is_Precedence { get { return this is PrintingInfo_Precedence; } }
    public bool is_SuffixPrecedence { get { return this is PrintingInfo_SuffixPrecedence; } }
    public bool is_PrecedenceAssociativity { get { return this is PrintingInfo_PrecedenceAssociativity; } }
    public BigInteger dtor_precedence {
      get {
        var d = this;
        if (d is PrintingInfo_Precedence) { return ((PrintingInfo_Precedence)d)._precedence; }
        if (d is PrintingInfo_SuffixPrecedence) { return ((PrintingInfo_SuffixPrecedence)d)._precedence; }
        return ((PrintingInfo_PrecedenceAssociativity)d)._precedence;
      }
    }
    public RAST._IAssociativity dtor_associativity {
      get {
        var d = this;
        return ((PrintingInfo_PrecedenceAssociativity)d)._associativity;
      }
    }
    public abstract _IPrintingInfo DowncastClone();
    public bool NeedParenthesesFor(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return true;
      } else {
        return false;
      }
    }
    public bool NeedParenthesesForLeft(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return ((((this).dtor_precedence) < ((underlying).dtor_precedence)) || (!((this).is_PrecedenceAssociativity))) || (!(((this).dtor_associativity).is_LeftToRight));
      } else {
        return false;
      }
    }
    public bool NeedParenthesesForRight(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return ((((this).dtor_precedence) < ((underlying).dtor_precedence)) || (!((this).is_PrecedenceAssociativity))) || (!(((this).dtor_associativity).is_RightToLeft));
      } else {
        return false;
      }
    }
  }
  public class PrintingInfo_UnknownPrecedence : PrintingInfo {
    public PrintingInfo_UnknownPrecedence() : base() {
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_UnknownPrecedence();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_UnknownPrecedence;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.UnknownPrecedence";
      return s;
    }
  }
  public class PrintingInfo_Precedence : PrintingInfo {
    public readonly BigInteger _precedence;
    public PrintingInfo_Precedence(BigInteger precedence) : base() {
      this._precedence = precedence;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_Precedence(_precedence);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_Precedence;
      return oth != null && this._precedence == oth._precedence;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.Precedence";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ")";
      return s;
    }
  }
  public class PrintingInfo_SuffixPrecedence : PrintingInfo {
    public readonly BigInteger _precedence;
    public PrintingInfo_SuffixPrecedence(BigInteger precedence) : base() {
      this._precedence = precedence;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_SuffixPrecedence(_precedence);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_SuffixPrecedence;
      return oth != null && this._precedence == oth._precedence;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.SuffixPrecedence";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ")";
      return s;
    }
  }
  public class PrintingInfo_PrecedenceAssociativity : PrintingInfo {
    public readonly BigInteger _precedence;
    public readonly RAST._IAssociativity _associativity;
    public PrintingInfo_PrecedenceAssociativity(BigInteger precedence, RAST._IAssociativity associativity) : base() {
      this._precedence = precedence;
      this._associativity = associativity;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_PrecedenceAssociativity(_precedence, _associativity);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_PrecedenceAssociativity;
      return oth != null && this._precedence == oth._precedence && object.Equals(this._associativity, oth._associativity);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._associativity));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.PrecedenceAssociativity";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ", ";
      s += Dafny.Helpers.ToString(this._associativity);
      s += ")";
      return s;
    }
  }

  public interface _IExpr {
    bool is_RawExpr { get; }
    bool is_ExprFromType { get; }
    bool is_Identifier { get; }
    bool is_Match { get; }
    bool is_StmtExpr { get; }
    bool is_Block { get; }
    bool is_StructBuild { get; }
    bool is_Tuple { get; }
    bool is_UnaryOp { get; }
    bool is_BinaryOp { get; }
    bool is_TypeAscription { get; }
    bool is_LiteralInt { get; }
    bool is_LiteralBool { get; }
    bool is_LiteralString { get; }
    bool is_DeclareVar { get; }
    bool is_Assign { get; }
    bool is_IfExpr { get; }
    bool is_Loop { get; }
    bool is_For { get; }
    bool is_Labelled { get; }
    bool is_Break { get; }
    bool is_Continue { get; }
    bool is_Return { get; }
    bool is_CallType { get; }
    bool is_Call { get; }
    bool is_Select { get; }
    bool is_MemberSelect { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    RAST._IType dtor_tpe { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IExpr dtor_matchee { get; }
    Dafny.ISequence<RAST._IMatchCase> dtor_cases { get; }
    RAST._IExpr dtor_stmt { get; }
    RAST._IExpr dtor_rhs { get; }
    RAST._IExpr dtor_underlying { get; }
    Dafny.ISequence<RAST._IAssignIdentifier> dtor_assignments { get; }
    Dafny.ISequence<RAST._IExpr> dtor_arguments { get; }
    Dafny.ISequence<Dafny.Rune> dtor_op1 { get; }
    DAST.Format._IUnOpFormat dtor_format { get; }
    Dafny.ISequence<Dafny.Rune> dtor_op2 { get; }
    RAST._IExpr dtor_left { get; }
    RAST._IExpr dtor_right { get; }
    DAST.Format._IBinOpFormat dtor_format2 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_value { get; }
    bool dtor_bvalue { get; }
    bool dtor_binary { get; }
    RAST._IDeclareType dtor_declareType { get; }
    Std.Wrappers._IOption<RAST._IType> dtor_optType { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optRhs { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    RAST._IExpr dtor_cond { get; }
    RAST._IExpr dtor_thn { get; }
    RAST._IExpr dtor_els { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optCond { get; }
    RAST._IExpr dtor_range { get; }
    RAST._IExpr dtor_body { get; }
    Dafny.ISequence<Dafny.Rune> dtor_lbl { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_optLbl { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optExpr { get; }
    RAST._IExpr dtor_obj { get; }
    Dafny.ISequence<RAST._IType> dtor_typeParameters { get; }
    _IExpr DowncastClone();
    bool NoExtraSemicolonAfter();
    RAST._IPrintingInfo printingInfo { get; }
    BigInteger Height();
    RAST._IExpr Optimize();
    bool LeftRequiresParentheses(RAST._IExpr left);
    _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> LeftParentheses(RAST._IExpr left);
    bool RightRequiresParentheses(RAST._IExpr right);
    _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> RightParentheses(RAST._IExpr right);
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> RightMostIdentifier();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
    RAST._IExpr Then(RAST._IExpr rhs2);
    RAST._IExpr Sel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IExpr MSel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IExpr ApplyType(Dafny.ISequence<RAST._IType> typeParameters);
    RAST._IExpr ApplyType1(RAST._IType typeParameter);
    RAST._IExpr Apply(Dafny.ISequence<RAST._IExpr> arguments);
    RAST._IExpr Apply1(RAST._IExpr argument);
  }
  public abstract class Expr : _IExpr {
    public Expr() {
    }
    private static readonly RAST._IExpr theDefault = create_RawExpr(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IExpr Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IExpr> _TYPE = new Dafny.TypeDescriptor<RAST._IExpr>(RAST.Expr.Default());
    public static Dafny.TypeDescriptor<RAST._IExpr> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IExpr create_RawExpr(Dafny.ISequence<Dafny.Rune> content) {
      return new Expr_RawExpr(content);
    }
    public static _IExpr create_ExprFromType(RAST._IType tpe) {
      return new Expr_ExprFromType(tpe);
    }
    public static _IExpr create_Identifier(Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_Identifier(name);
    }
    public static _IExpr create_Match(RAST._IExpr matchee, Dafny.ISequence<RAST._IMatchCase> cases) {
      return new Expr_Match(matchee, cases);
    }
    public static _IExpr create_StmtExpr(RAST._IExpr stmt, RAST._IExpr rhs) {
      return new Expr_StmtExpr(stmt, rhs);
    }
    public static _IExpr create_Block(RAST._IExpr underlying) {
      return new Expr_Block(underlying);
    }
    public static _IExpr create_StructBuild(RAST._IExpr underlying, Dafny.ISequence<RAST._IAssignIdentifier> assignments) {
      return new Expr_StructBuild(underlying, assignments);
    }
    public static _IExpr create_Tuple(Dafny.ISequence<RAST._IExpr> arguments) {
      return new Expr_Tuple(arguments);
    }
    public static _IExpr create_UnaryOp(Dafny.ISequence<Dafny.Rune> op1, RAST._IExpr underlying, DAST.Format._IUnOpFormat format) {
      return new Expr_UnaryOp(op1, underlying, format);
    }
    public static _IExpr create_BinaryOp(Dafny.ISequence<Dafny.Rune> op2, RAST._IExpr left, RAST._IExpr right, DAST.Format._IBinOpFormat format2) {
      return new Expr_BinaryOp(op2, left, right, format2);
    }
    public static _IExpr create_TypeAscription(RAST._IExpr left, RAST._IType tpe) {
      return new Expr_TypeAscription(left, tpe);
    }
    public static _IExpr create_LiteralInt(Dafny.ISequence<Dafny.Rune> @value) {
      return new Expr_LiteralInt(@value);
    }
    public static _IExpr create_LiteralBool(bool bvalue) {
      return new Expr_LiteralBool(bvalue);
    }
    public static _IExpr create_LiteralString(Dafny.ISequence<Dafny.Rune> @value, bool binary) {
      return new Expr_LiteralString(@value, binary);
    }
    public static _IExpr create_DeclareVar(RAST._IDeclareType declareType, Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<RAST._IType> optType, Std.Wrappers._IOption<RAST._IExpr> optRhs) {
      return new Expr_DeclareVar(declareType, name, optType, optRhs);
    }
    public static _IExpr create_Assign(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, RAST._IExpr rhs) {
      return new Expr_Assign(names, rhs);
    }
    public static _IExpr create_IfExpr(RAST._IExpr cond, RAST._IExpr thn, RAST._IExpr els) {
      return new Expr_IfExpr(cond, thn, els);
    }
    public static _IExpr create_Loop(Std.Wrappers._IOption<RAST._IExpr> optCond, RAST._IExpr underlying) {
      return new Expr_Loop(optCond, underlying);
    }
    public static _IExpr create_For(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr range, RAST._IExpr body) {
      return new Expr_For(name, range, body);
    }
    public static _IExpr create_Labelled(Dafny.ISequence<Dafny.Rune> lbl, RAST._IExpr underlying) {
      return new Expr_Labelled(lbl, underlying);
    }
    public static _IExpr create_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) {
      return new Expr_Break(optLbl);
    }
    public static _IExpr create_Continue(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) {
      return new Expr_Continue(optLbl);
    }
    public static _IExpr create_Return(Std.Wrappers._IOption<RAST._IExpr> optExpr) {
      return new Expr_Return(optExpr);
    }
    public static _IExpr create_CallType(RAST._IExpr obj, Dafny.ISequence<RAST._IType> typeParameters) {
      return new Expr_CallType(obj, typeParameters);
    }
    public static _IExpr create_Call(RAST._IExpr obj, Dafny.ISequence<RAST._IExpr> arguments) {
      return new Expr_Call(obj, arguments);
    }
    public static _IExpr create_Select(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_Select(obj, name);
    }
    public static _IExpr create_MemberSelect(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_MemberSelect(obj, name);
    }
    public bool is_RawExpr { get { return this is Expr_RawExpr; } }
    public bool is_ExprFromType { get { return this is Expr_ExprFromType; } }
    public bool is_Identifier { get { return this is Expr_Identifier; } }
    public bool is_Match { get { return this is Expr_Match; } }
    public bool is_StmtExpr { get { return this is Expr_StmtExpr; } }
    public bool is_Block { get { return this is Expr_Block; } }
    public bool is_StructBuild { get { return this is Expr_StructBuild; } }
    public bool is_Tuple { get { return this is Expr_Tuple; } }
    public bool is_UnaryOp { get { return this is Expr_UnaryOp; } }
    public bool is_BinaryOp { get { return this is Expr_BinaryOp; } }
    public bool is_TypeAscription { get { return this is Expr_TypeAscription; } }
    public bool is_LiteralInt { get { return this is Expr_LiteralInt; } }
    public bool is_LiteralBool { get { return this is Expr_LiteralBool; } }
    public bool is_LiteralString { get { return this is Expr_LiteralString; } }
    public bool is_DeclareVar { get { return this is Expr_DeclareVar; } }
    public bool is_Assign { get { return this is Expr_Assign; } }
    public bool is_IfExpr { get { return this is Expr_IfExpr; } }
    public bool is_Loop { get { return this is Expr_Loop; } }
    public bool is_For { get { return this is Expr_For; } }
    public bool is_Labelled { get { return this is Expr_Labelled; } }
    public bool is_Break { get { return this is Expr_Break; } }
    public bool is_Continue { get { return this is Expr_Continue; } }
    public bool is_Return { get { return this is Expr_Return; } }
    public bool is_CallType { get { return this is Expr_CallType; } }
    public bool is_Call { get { return this is Expr_Call; } }
    public bool is_Select { get { return this is Expr_Select; } }
    public bool is_MemberSelect { get { return this is Expr_MemberSelect; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        var d = this;
        return ((Expr_RawExpr)d)._content;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        var d = this;
        if (d is Expr_ExprFromType) { return ((Expr_ExprFromType)d)._tpe; }
        return ((Expr_TypeAscription)d)._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Expr_Identifier) { return ((Expr_Identifier)d)._name; }
        if (d is Expr_DeclareVar) { return ((Expr_DeclareVar)d)._name; }
        if (d is Expr_For) { return ((Expr_For)d)._name; }
        if (d is Expr_Select) { return ((Expr_Select)d)._name; }
        return ((Expr_MemberSelect)d)._name;
      }
    }
    public RAST._IExpr dtor_matchee {
      get {
        var d = this;
        return ((Expr_Match)d)._matchee;
      }
    }
    public Dafny.ISequence<RAST._IMatchCase> dtor_cases {
      get {
        var d = this;
        return ((Expr_Match)d)._cases;
      }
    }
    public RAST._IExpr dtor_stmt {
      get {
        var d = this;
        return ((Expr_StmtExpr)d)._stmt;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        var d = this;
        if (d is Expr_StmtExpr) { return ((Expr_StmtExpr)d)._rhs; }
        return ((Expr_Assign)d)._rhs;
      }
    }
    public RAST._IExpr dtor_underlying {
      get {
        var d = this;
        if (d is Expr_Block) { return ((Expr_Block)d)._underlying; }
        if (d is Expr_StructBuild) { return ((Expr_StructBuild)d)._underlying; }
        if (d is Expr_UnaryOp) { return ((Expr_UnaryOp)d)._underlying; }
        if (d is Expr_Loop) { return ((Expr_Loop)d)._underlying; }
        return ((Expr_Labelled)d)._underlying;
      }
    }
    public Dafny.ISequence<RAST._IAssignIdentifier> dtor_assignments {
      get {
        var d = this;
        return ((Expr_StructBuild)d)._assignments;
      }
    }
    public Dafny.ISequence<RAST._IExpr> dtor_arguments {
      get {
        var d = this;
        if (d is Expr_Tuple) { return ((Expr_Tuple)d)._arguments; }
        return ((Expr_Call)d)._arguments;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_op1 {
      get {
        var d = this;
        return ((Expr_UnaryOp)d)._op1;
      }
    }
    public DAST.Format._IUnOpFormat dtor_format {
      get {
        var d = this;
        return ((Expr_UnaryOp)d)._format;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_op2 {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._op2;
      }
    }
    public RAST._IExpr dtor_left {
      get {
        var d = this;
        if (d is Expr_BinaryOp) { return ((Expr_BinaryOp)d)._left; }
        return ((Expr_TypeAscription)d)._left;
      }
    }
    public RAST._IExpr dtor_right {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._right;
      }
    }
    public DAST.Format._IBinOpFormat dtor_format2 {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._format2;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_value {
      get {
        var d = this;
        if (d is Expr_LiteralInt) { return ((Expr_LiteralInt)d)._value; }
        return ((Expr_LiteralString)d)._value;
      }
    }
    public bool dtor_bvalue {
      get {
        var d = this;
        return ((Expr_LiteralBool)d)._bvalue;
      }
    }
    public bool dtor_binary {
      get {
        var d = this;
        return ((Expr_LiteralString)d)._binary;
      }
    }
    public RAST._IDeclareType dtor_declareType {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._declareType;
      }
    }
    public Std.Wrappers._IOption<RAST._IType> dtor_optType {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._optType;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optRhs {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._optRhs;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        var d = this;
        return ((Expr_Assign)d)._names;
      }
    }
    public RAST._IExpr dtor_cond {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._cond;
      }
    }
    public RAST._IExpr dtor_thn {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._thn;
      }
    }
    public RAST._IExpr dtor_els {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._els;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optCond {
      get {
        var d = this;
        return ((Expr_Loop)d)._optCond;
      }
    }
    public RAST._IExpr dtor_range {
      get {
        var d = this;
        return ((Expr_For)d)._range;
      }
    }
    public RAST._IExpr dtor_body {
      get {
        var d = this;
        return ((Expr_For)d)._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_lbl {
      get {
        var d = this;
        return ((Expr_Labelled)d)._lbl;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_optLbl {
      get {
        var d = this;
        if (d is Expr_Break) { return ((Expr_Break)d)._optLbl; }
        return ((Expr_Continue)d)._optLbl;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optExpr {
      get {
        var d = this;
        return ((Expr_Return)d)._optExpr;
      }
    }
    public RAST._IExpr dtor_obj {
      get {
        var d = this;
        if (d is Expr_CallType) { return ((Expr_CallType)d)._obj; }
        if (d is Expr_Call) { return ((Expr_Call)d)._obj; }
        if (d is Expr_Select) { return ((Expr_Select)d)._obj; }
        return ((Expr_MemberSelect)d)._obj;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_typeParameters {
      get {
        var d = this;
        return ((Expr_CallType)d)._typeParameters;
      }
    }
    public abstract _IExpr DowncastClone();
    public bool NoExtraSemicolonAfter() {
      return ((((((this).is_DeclareVar) || ((this).is_Assign)) || ((this).is_Break)) || ((this).is_Continue)) || ((this).is_Return)) || ((((this).is_RawExpr) && ((new BigInteger(((this).dtor_content).Count)).Sign == 1)) && ((((this).dtor_content).Select((new BigInteger(((this).dtor_content).Count)) - (BigInteger.One))) == (new Dafny.Rune(';'))));
    }
    public BigInteger Height() {
      RAST._IExpr _source28 = this;
      if (_source28.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _920___mcc_h0 = _source28.dtor_content;
        return BigInteger.One;
      } else if (_source28.is_ExprFromType) {
        RAST._IType _921___mcc_h2 = _source28.dtor_tpe;
        return BigInteger.One;
      } else if (_source28.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _922___mcc_h4 = _source28.dtor_name;
        return BigInteger.One;
      } else if (_source28.is_Match) {
        RAST._IExpr _923___mcc_h6 = _source28.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _924___mcc_h7 = _source28.dtor_cases;
        Dafny.ISequence<RAST._IMatchCase> _925_cases = _924___mcc_h7;
        RAST._IExpr _926_matchee = _923___mcc_h6;
        return (BigInteger.One) + (RAST.__default.max((_926_matchee).Height(), DAST.Format.__default.SeqToHeight<RAST._IMatchCase>(_925_cases, ((System.Func<RAST._IMatchCase, BigInteger>)((_927_oneCase) => {
          return (_927_oneCase).Height();
        })))));
      } else if (_source28.is_StmtExpr) {
        RAST._IExpr _928___mcc_h10 = _source28.dtor_stmt;
        RAST._IExpr _929___mcc_h11 = _source28.dtor_rhs;
        RAST._IExpr _930_rhs = _929___mcc_h11;
        RAST._IExpr _931_stmt = _928___mcc_h10;
        BigInteger _932_default = (BigInteger.One) + (RAST.__default.max((_931_stmt).Height(), (_930_rhs).Height()));
        RAST._IExpr _source29 = this;
        if (_source29.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _933___mcc_h102 = _source29.dtor_content;
          return _932_default;
        } else if (_source29.is_ExprFromType) {
          RAST._IType _934___mcc_h104 = _source29.dtor_tpe;
          return _932_default;
        } else if (_source29.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _935___mcc_h106 = _source29.dtor_name;
          return _932_default;
        } else if (_source29.is_Match) {
          RAST._IExpr _936___mcc_h108 = _source29.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _937___mcc_h109 = _source29.dtor_cases;
          return _932_default;
        } else if (_source29.is_StmtExpr) {
          RAST._IExpr _938___mcc_h112 = _source29.dtor_stmt;
          RAST._IExpr _939___mcc_h113 = _source29.dtor_rhs;
          RAST._IExpr _source30 = _938___mcc_h112;
          if (_source30.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _940___mcc_h116 = _source30.dtor_content;
            return _932_default;
          } else if (_source30.is_ExprFromType) {
            RAST._IType _941___mcc_h118 = _source30.dtor_tpe;
            return _932_default;
          } else if (_source30.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _942___mcc_h120 = _source30.dtor_name;
            return _932_default;
          } else if (_source30.is_Match) {
            RAST._IExpr _943___mcc_h122 = _source30.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _944___mcc_h123 = _source30.dtor_cases;
            return _932_default;
          } else if (_source30.is_StmtExpr) {
            RAST._IExpr _945___mcc_h126 = _source30.dtor_stmt;
            RAST._IExpr _946___mcc_h127 = _source30.dtor_rhs;
            return _932_default;
          } else if (_source30.is_Block) {
            RAST._IExpr _947___mcc_h130 = _source30.dtor_underlying;
            return _932_default;
          } else if (_source30.is_StructBuild) {
            RAST._IExpr _948___mcc_h132 = _source30.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _949___mcc_h133 = _source30.dtor_assignments;
            return _932_default;
          } else if (_source30.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _950___mcc_h136 = _source30.dtor_arguments;
            return _932_default;
          } else if (_source30.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _951___mcc_h138 = _source30.dtor_op1;
            RAST._IExpr _952___mcc_h139 = _source30.dtor_underlying;
            DAST.Format._IUnOpFormat _953___mcc_h140 = _source30.dtor_format;
            return _932_default;
          } else if (_source30.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _954___mcc_h144 = _source30.dtor_op2;
            RAST._IExpr _955___mcc_h145 = _source30.dtor_left;
            RAST._IExpr _956___mcc_h146 = _source30.dtor_right;
            DAST.Format._IBinOpFormat _957___mcc_h147 = _source30.dtor_format2;
            return _932_default;
          } else if (_source30.is_TypeAscription) {
            RAST._IExpr _958___mcc_h152 = _source30.dtor_left;
            RAST._IType _959___mcc_h153 = _source30.dtor_tpe;
            return _932_default;
          } else if (_source30.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _960___mcc_h156 = _source30.dtor_value;
            return _932_default;
          } else if (_source30.is_LiteralBool) {
            bool _961___mcc_h158 = _source30.dtor_bvalue;
            return _932_default;
          } else if (_source30.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _962___mcc_h160 = _source30.dtor_value;
            bool _963___mcc_h161 = _source30.dtor_binary;
            return _932_default;
          } else if (_source30.is_DeclareVar) {
            RAST._IDeclareType _964___mcc_h164 = _source30.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _965___mcc_h165 = _source30.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _966___mcc_h166 = _source30.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _967___mcc_h167 = _source30.dtor_optRhs;
            Std.Wrappers._IOption<RAST._IType> _source31 = _966___mcc_h166;
            if (_source31.is_None) {
              return _932_default;
            } else {
              RAST._IType _968___mcc_h172 = _source31.dtor_value;
              Std.Wrappers._IOption<RAST._IExpr> _source32 = _967___mcc_h167;
              if (_source32.is_None) {
                RAST._IExpr _source33 = _939___mcc_h113;
                if (_source33.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _969___mcc_h174 = _source33.dtor_content;
                  return _932_default;
                } else if (_source33.is_ExprFromType) {
                  RAST._IType _970___mcc_h176 = _source33.dtor_tpe;
                  return _932_default;
                } else if (_source33.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _971___mcc_h178 = _source33.dtor_name;
                  return _932_default;
                } else if (_source33.is_Match) {
                  RAST._IExpr _972___mcc_h180 = _source33.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _973___mcc_h181 = _source33.dtor_cases;
                  return _932_default;
                } else if (_source33.is_StmtExpr) {
                  RAST._IExpr _974___mcc_h184 = _source33.dtor_stmt;
                  RAST._IExpr _975___mcc_h185 = _source33.dtor_rhs;
                  RAST._IExpr _source34 = _974___mcc_h184;
                  if (_source34.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _976___mcc_h188 = _source34.dtor_content;
                    return _932_default;
                  } else if (_source34.is_ExprFromType) {
                    RAST._IType _977___mcc_h190 = _source34.dtor_tpe;
                    return _932_default;
                  } else if (_source34.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _978___mcc_h192 = _source34.dtor_name;
                    return _932_default;
                  } else if (_source34.is_Match) {
                    RAST._IExpr _979___mcc_h194 = _source34.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _980___mcc_h195 = _source34.dtor_cases;
                    return _932_default;
                  } else if (_source34.is_StmtExpr) {
                    RAST._IExpr _981___mcc_h198 = _source34.dtor_stmt;
                    RAST._IExpr _982___mcc_h199 = _source34.dtor_rhs;
                    return _932_default;
                  } else if (_source34.is_Block) {
                    RAST._IExpr _983___mcc_h202 = _source34.dtor_underlying;
                    return _932_default;
                  } else if (_source34.is_StructBuild) {
                    RAST._IExpr _984___mcc_h204 = _source34.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _985___mcc_h205 = _source34.dtor_assignments;
                    return _932_default;
                  } else if (_source34.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _986___mcc_h208 = _source34.dtor_arguments;
                    return _932_default;
                  } else if (_source34.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _987___mcc_h210 = _source34.dtor_op1;
                    RAST._IExpr _988___mcc_h211 = _source34.dtor_underlying;
                    DAST.Format._IUnOpFormat _989___mcc_h212 = _source34.dtor_format;
                    return _932_default;
                  } else if (_source34.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _990___mcc_h216 = _source34.dtor_op2;
                    RAST._IExpr _991___mcc_h217 = _source34.dtor_left;
                    RAST._IExpr _992___mcc_h218 = _source34.dtor_right;
                    DAST.Format._IBinOpFormat _993___mcc_h219 = _source34.dtor_format2;
                    return _932_default;
                  } else if (_source34.is_TypeAscription) {
                    RAST._IExpr _994___mcc_h224 = _source34.dtor_left;
                    RAST._IType _995___mcc_h225 = _source34.dtor_tpe;
                    return _932_default;
                  } else if (_source34.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _996___mcc_h228 = _source34.dtor_value;
                    return _932_default;
                  } else if (_source34.is_LiteralBool) {
                    bool _997___mcc_h230 = _source34.dtor_bvalue;
                    return _932_default;
                  } else if (_source34.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _998___mcc_h232 = _source34.dtor_value;
                    bool _999___mcc_h233 = _source34.dtor_binary;
                    return _932_default;
                  } else if (_source34.is_DeclareVar) {
                    RAST._IDeclareType _1000___mcc_h236 = _source34.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _1001___mcc_h237 = _source34.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _1002___mcc_h238 = _source34.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _1003___mcc_h239 = _source34.dtor_optRhs;
                    return _932_default;
                  } else if (_source34.is_Assign) {
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1004___mcc_h244 = _source34.dtor_names;
                    RAST._IExpr _1005___mcc_h245 = _source34.dtor_rhs;
                    RAST._IExpr _1006_last = _975___mcc_h185;
                    RAST._IExpr _1007_rhs = _1005___mcc_h245;
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1008_name2 = _1004___mcc_h244;
                    RAST._IType _1009_tpe = _968___mcc_h172;
                    Dafny.ISequence<Dafny.Rune> _1010_name = _965___mcc_h165;
                    RAST._IDeclareType _1011_mod = _964___mcc_h164;
                    if ((Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_1010_name)).Equals(_1008_name2)) {
                      return (BigInteger.One) + (_932_default);
                    } else {
                      return _932_default;
                    }
                  } else if (_source34.is_IfExpr) {
                    RAST._IExpr _1012___mcc_h248 = _source34.dtor_cond;
                    RAST._IExpr _1013___mcc_h249 = _source34.dtor_thn;
                    RAST._IExpr _1014___mcc_h250 = _source34.dtor_els;
                    return _932_default;
                  } else if (_source34.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _1015___mcc_h254 = _source34.dtor_optCond;
                    RAST._IExpr _1016___mcc_h255 = _source34.dtor_underlying;
                    return _932_default;
                  } else if (_source34.is_For) {
                    Dafny.ISequence<Dafny.Rune> _1017___mcc_h258 = _source34.dtor_name;
                    RAST._IExpr _1018___mcc_h259 = _source34.dtor_range;
                    RAST._IExpr _1019___mcc_h260 = _source34.dtor_body;
                    return _932_default;
                  } else if (_source34.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _1020___mcc_h264 = _source34.dtor_lbl;
                    RAST._IExpr _1021___mcc_h265 = _source34.dtor_underlying;
                    return _932_default;
                  } else if (_source34.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1022___mcc_h268 = _source34.dtor_optLbl;
                    return _932_default;
                  } else if (_source34.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1023___mcc_h270 = _source34.dtor_optLbl;
                    return _932_default;
                  } else if (_source34.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _1024___mcc_h272 = _source34.dtor_optExpr;
                    return _932_default;
                  } else if (_source34.is_CallType) {
                    RAST._IExpr _1025___mcc_h274 = _source34.dtor_obj;
                    Dafny.ISequence<RAST._IType> _1026___mcc_h275 = _source34.dtor_typeParameters;
                    return _932_default;
                  } else if (_source34.is_Call) {
                    RAST._IExpr _1027___mcc_h278 = _source34.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _1028___mcc_h279 = _source34.dtor_arguments;
                    return _932_default;
                  } else if (_source34.is_Select) {
                    RAST._IExpr _1029___mcc_h282 = _source34.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1030___mcc_h283 = _source34.dtor_name;
                    return _932_default;
                  } else {
                    RAST._IExpr _1031___mcc_h286 = _source34.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1032___mcc_h287 = _source34.dtor_name;
                    return _932_default;
                  }
                } else if (_source33.is_Block) {
                  RAST._IExpr _1033___mcc_h290 = _source33.dtor_underlying;
                  return _932_default;
                } else if (_source33.is_StructBuild) {
                  RAST._IExpr _1034___mcc_h292 = _source33.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1035___mcc_h293 = _source33.dtor_assignments;
                  return _932_default;
                } else if (_source33.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1036___mcc_h296 = _source33.dtor_arguments;
                  return _932_default;
                } else if (_source33.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1037___mcc_h298 = _source33.dtor_op1;
                  RAST._IExpr _1038___mcc_h299 = _source33.dtor_underlying;
                  DAST.Format._IUnOpFormat _1039___mcc_h300 = _source33.dtor_format;
                  return _932_default;
                } else if (_source33.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1040___mcc_h304 = _source33.dtor_op2;
                  RAST._IExpr _1041___mcc_h305 = _source33.dtor_left;
                  RAST._IExpr _1042___mcc_h306 = _source33.dtor_right;
                  DAST.Format._IBinOpFormat _1043___mcc_h307 = _source33.dtor_format2;
                  return _932_default;
                } else if (_source33.is_TypeAscription) {
                  RAST._IExpr _1044___mcc_h312 = _source33.dtor_left;
                  RAST._IType _1045___mcc_h313 = _source33.dtor_tpe;
                  return _932_default;
                } else if (_source33.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1046___mcc_h316 = _source33.dtor_value;
                  return _932_default;
                } else if (_source33.is_LiteralBool) {
                  bool _1047___mcc_h318 = _source33.dtor_bvalue;
                  return _932_default;
                } else if (_source33.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1048___mcc_h320 = _source33.dtor_value;
                  bool _1049___mcc_h321 = _source33.dtor_binary;
                  return _932_default;
                } else if (_source33.is_DeclareVar) {
                  RAST._IDeclareType _1050___mcc_h324 = _source33.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1051___mcc_h325 = _source33.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1052___mcc_h326 = _source33.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1053___mcc_h327 = _source33.dtor_optRhs;
                  return _932_default;
                } else if (_source33.is_Assign) {
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1054___mcc_h332 = _source33.dtor_names;
                  RAST._IExpr _1055___mcc_h333 = _source33.dtor_rhs;
                  return _932_default;
                } else if (_source33.is_IfExpr) {
                  RAST._IExpr _1056___mcc_h336 = _source33.dtor_cond;
                  RAST._IExpr _1057___mcc_h337 = _source33.dtor_thn;
                  RAST._IExpr _1058___mcc_h338 = _source33.dtor_els;
                  return _932_default;
                } else if (_source33.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1059___mcc_h342 = _source33.dtor_optCond;
                  RAST._IExpr _1060___mcc_h343 = _source33.dtor_underlying;
                  return _932_default;
                } else if (_source33.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1061___mcc_h346 = _source33.dtor_name;
                  RAST._IExpr _1062___mcc_h347 = _source33.dtor_range;
                  RAST._IExpr _1063___mcc_h348 = _source33.dtor_body;
                  return _932_default;
                } else if (_source33.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1064___mcc_h352 = _source33.dtor_lbl;
                  RAST._IExpr _1065___mcc_h353 = _source33.dtor_underlying;
                  return _932_default;
                } else if (_source33.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1066___mcc_h356 = _source33.dtor_optLbl;
                  return _932_default;
                } else if (_source33.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1067___mcc_h358 = _source33.dtor_optLbl;
                  return _932_default;
                } else if (_source33.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1068___mcc_h360 = _source33.dtor_optExpr;
                  return _932_default;
                } else if (_source33.is_CallType) {
                  RAST._IExpr _1069___mcc_h362 = _source33.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1070___mcc_h363 = _source33.dtor_typeParameters;
                  return _932_default;
                } else if (_source33.is_Call) {
                  RAST._IExpr _1071___mcc_h366 = _source33.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1072___mcc_h367 = _source33.dtor_arguments;
                  return _932_default;
                } else if (_source33.is_Select) {
                  RAST._IExpr _1073___mcc_h370 = _source33.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1074___mcc_h371 = _source33.dtor_name;
                  return _932_default;
                } else {
                  RAST._IExpr _1075___mcc_h374 = _source33.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1076___mcc_h375 = _source33.dtor_name;
                  return _932_default;
                }
              } else {
                RAST._IExpr _1077___mcc_h378 = _source32.dtor_value;
                return _932_default;
              }
            }
          } else if (_source30.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1078___mcc_h380 = _source30.dtor_names;
            RAST._IExpr _1079___mcc_h381 = _source30.dtor_rhs;
            return _932_default;
          } else if (_source30.is_IfExpr) {
            RAST._IExpr _1080___mcc_h384 = _source30.dtor_cond;
            RAST._IExpr _1081___mcc_h385 = _source30.dtor_thn;
            RAST._IExpr _1082___mcc_h386 = _source30.dtor_els;
            RAST._IExpr _source35 = _1080___mcc_h384;
            if (_source35.is_RawExpr) {
              Dafny.ISequence<Dafny.Rune> _1083___mcc_h390 = _source35.dtor_content;
              return _932_default;
            } else if (_source35.is_ExprFromType) {
              RAST._IType _1084___mcc_h392 = _source35.dtor_tpe;
              return _932_default;
            } else if (_source35.is_Identifier) {
              Dafny.ISequence<Dafny.Rune> _1085___mcc_h394 = _source35.dtor_name;
              return _932_default;
            } else if (_source35.is_Match) {
              RAST._IExpr _1086___mcc_h396 = _source35.dtor_matchee;
              Dafny.ISequence<RAST._IMatchCase> _1087___mcc_h397 = _source35.dtor_cases;
              return _932_default;
            } else if (_source35.is_StmtExpr) {
              RAST._IExpr _1088___mcc_h400 = _source35.dtor_stmt;
              RAST._IExpr _1089___mcc_h401 = _source35.dtor_rhs;
              return _932_default;
            } else if (_source35.is_Block) {
              RAST._IExpr _1090___mcc_h404 = _source35.dtor_underlying;
              return _932_default;
            } else if (_source35.is_StructBuild) {
              RAST._IExpr _1091___mcc_h406 = _source35.dtor_underlying;
              Dafny.ISequence<RAST._IAssignIdentifier> _1092___mcc_h407 = _source35.dtor_assignments;
              return _932_default;
            } else if (_source35.is_Tuple) {
              Dafny.ISequence<RAST._IExpr> _1093___mcc_h410 = _source35.dtor_arguments;
              return _932_default;
            } else if (_source35.is_UnaryOp) {
              Dafny.ISequence<Dafny.Rune> _1094___mcc_h412 = _source35.dtor_op1;
              RAST._IExpr _1095___mcc_h413 = _source35.dtor_underlying;
              DAST.Format._IUnOpFormat _1096___mcc_h414 = _source35.dtor_format;
              if (object.Equals(_1094___mcc_h412, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
                RAST._IExpr _source36 = _1095___mcc_h413;
                if (_source36.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _1097___mcc_h418 = _source36.dtor_content;
                  return _932_default;
                } else if (_source36.is_ExprFromType) {
                  RAST._IType _1098___mcc_h420 = _source36.dtor_tpe;
                  return _932_default;
                } else if (_source36.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _1099___mcc_h422 = _source36.dtor_name;
                  return _932_default;
                } else if (_source36.is_Match) {
                  RAST._IExpr _1100___mcc_h424 = _source36.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _1101___mcc_h425 = _source36.dtor_cases;
                  return _932_default;
                } else if (_source36.is_StmtExpr) {
                  RAST._IExpr _1102___mcc_h428 = _source36.dtor_stmt;
                  RAST._IExpr _1103___mcc_h429 = _source36.dtor_rhs;
                  return _932_default;
                } else if (_source36.is_Block) {
                  RAST._IExpr _1104___mcc_h432 = _source36.dtor_underlying;
                  return _932_default;
                } else if (_source36.is_StructBuild) {
                  RAST._IExpr _1105___mcc_h434 = _source36.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1106___mcc_h435 = _source36.dtor_assignments;
                  return _932_default;
                } else if (_source36.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1107___mcc_h438 = _source36.dtor_arguments;
                  return _932_default;
                } else if (_source36.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1108___mcc_h440 = _source36.dtor_op1;
                  RAST._IExpr _1109___mcc_h441 = _source36.dtor_underlying;
                  DAST.Format._IUnOpFormat _1110___mcc_h442 = _source36.dtor_format;
                  return _932_default;
                } else if (_source36.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1111___mcc_h446 = _source36.dtor_op2;
                  RAST._IExpr _1112___mcc_h447 = _source36.dtor_left;
                  RAST._IExpr _1113___mcc_h448 = _source36.dtor_right;
                  DAST.Format._IBinOpFormat _1114___mcc_h449 = _source36.dtor_format2;
                  if (object.Equals(_1111___mcc_h446, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
                    RAST._IExpr _source37 = _1081___mcc_h385;
                    if (_source37.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _1115___mcc_h454 = _source37.dtor_content;
                      if (object.Equals(_1115___mcc_h454, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"Halt\");"))) {
                        RAST._IExpr _source38 = _1082___mcc_h386;
                        if (_source38.is_RawExpr) {
                          Dafny.ISequence<Dafny.Rune> _1116___mcc_h456 = _source38.dtor_content;
                          if (object.Equals(_1116___mcc_h456, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
                            RAST._IExpr _1117_last = _939___mcc_h113;
                            DAST.Format._IUnOpFormat _1118_of = _1096___mcc_h414;
                            DAST.Format._IBinOpFormat _1119_f = _1114___mcc_h449;
                            RAST._IExpr _1120_b = _1113___mcc_h448;
                            RAST._IExpr _1121_a = _1112___mcc_h447;
                            return (BigInteger.One) + (_932_default);
                          } else {
                            return _932_default;
                          }
                        } else if (_source38.is_ExprFromType) {
                          RAST._IType _1122___mcc_h458 = _source38.dtor_tpe;
                          return _932_default;
                        } else if (_source38.is_Identifier) {
                          Dafny.ISequence<Dafny.Rune> _1123___mcc_h460 = _source38.dtor_name;
                          return _932_default;
                        } else if (_source38.is_Match) {
                          RAST._IExpr _1124___mcc_h462 = _source38.dtor_matchee;
                          Dafny.ISequence<RAST._IMatchCase> _1125___mcc_h463 = _source38.dtor_cases;
                          return _932_default;
                        } else if (_source38.is_StmtExpr) {
                          RAST._IExpr _1126___mcc_h466 = _source38.dtor_stmt;
                          RAST._IExpr _1127___mcc_h467 = _source38.dtor_rhs;
                          return _932_default;
                        } else if (_source38.is_Block) {
                          RAST._IExpr _1128___mcc_h470 = _source38.dtor_underlying;
                          return _932_default;
                        } else if (_source38.is_StructBuild) {
                          RAST._IExpr _1129___mcc_h472 = _source38.dtor_underlying;
                          Dafny.ISequence<RAST._IAssignIdentifier> _1130___mcc_h473 = _source38.dtor_assignments;
                          return _932_default;
                        } else if (_source38.is_Tuple) {
                          Dafny.ISequence<RAST._IExpr> _1131___mcc_h476 = _source38.dtor_arguments;
                          return _932_default;
                        } else if (_source38.is_UnaryOp) {
                          Dafny.ISequence<Dafny.Rune> _1132___mcc_h478 = _source38.dtor_op1;
                          RAST._IExpr _1133___mcc_h479 = _source38.dtor_underlying;
                          DAST.Format._IUnOpFormat _1134___mcc_h480 = _source38.dtor_format;
                          return _932_default;
                        } else if (_source38.is_BinaryOp) {
                          Dafny.ISequence<Dafny.Rune> _1135___mcc_h484 = _source38.dtor_op2;
                          RAST._IExpr _1136___mcc_h485 = _source38.dtor_left;
                          RAST._IExpr _1137___mcc_h486 = _source38.dtor_right;
                          DAST.Format._IBinOpFormat _1138___mcc_h487 = _source38.dtor_format2;
                          return _932_default;
                        } else if (_source38.is_TypeAscription) {
                          RAST._IExpr _1139___mcc_h492 = _source38.dtor_left;
                          RAST._IType _1140___mcc_h493 = _source38.dtor_tpe;
                          return _932_default;
                        } else if (_source38.is_LiteralInt) {
                          Dafny.ISequence<Dafny.Rune> _1141___mcc_h496 = _source38.dtor_value;
                          return _932_default;
                        } else if (_source38.is_LiteralBool) {
                          bool _1142___mcc_h498 = _source38.dtor_bvalue;
                          return _932_default;
                        } else if (_source38.is_LiteralString) {
                          Dafny.ISequence<Dafny.Rune> _1143___mcc_h500 = _source38.dtor_value;
                          bool _1144___mcc_h501 = _source38.dtor_binary;
                          return _932_default;
                        } else if (_source38.is_DeclareVar) {
                          RAST._IDeclareType _1145___mcc_h504 = _source38.dtor_declareType;
                          Dafny.ISequence<Dafny.Rune> _1146___mcc_h505 = _source38.dtor_name;
                          Std.Wrappers._IOption<RAST._IType> _1147___mcc_h506 = _source38.dtor_optType;
                          Std.Wrappers._IOption<RAST._IExpr> _1148___mcc_h507 = _source38.dtor_optRhs;
                          return _932_default;
                        } else if (_source38.is_Assign) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1149___mcc_h512 = _source38.dtor_names;
                          RAST._IExpr _1150___mcc_h513 = _source38.dtor_rhs;
                          return _932_default;
                        } else if (_source38.is_IfExpr) {
                          RAST._IExpr _1151___mcc_h516 = _source38.dtor_cond;
                          RAST._IExpr _1152___mcc_h517 = _source38.dtor_thn;
                          RAST._IExpr _1153___mcc_h518 = _source38.dtor_els;
                          return _932_default;
                        } else if (_source38.is_Loop) {
                          Std.Wrappers._IOption<RAST._IExpr> _1154___mcc_h522 = _source38.dtor_optCond;
                          RAST._IExpr _1155___mcc_h523 = _source38.dtor_underlying;
                          return _932_default;
                        } else if (_source38.is_For) {
                          Dafny.ISequence<Dafny.Rune> _1156___mcc_h526 = _source38.dtor_name;
                          RAST._IExpr _1157___mcc_h527 = _source38.dtor_range;
                          RAST._IExpr _1158___mcc_h528 = _source38.dtor_body;
                          return _932_default;
                        } else if (_source38.is_Labelled) {
                          Dafny.ISequence<Dafny.Rune> _1159___mcc_h532 = _source38.dtor_lbl;
                          RAST._IExpr _1160___mcc_h533 = _source38.dtor_underlying;
                          return _932_default;
                        } else if (_source38.is_Break) {
                          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1161___mcc_h536 = _source38.dtor_optLbl;
                          return _932_default;
                        } else if (_source38.is_Continue) {
                          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1162___mcc_h538 = _source38.dtor_optLbl;
                          return _932_default;
                        } else if (_source38.is_Return) {
                          Std.Wrappers._IOption<RAST._IExpr> _1163___mcc_h540 = _source38.dtor_optExpr;
                          return _932_default;
                        } else if (_source38.is_CallType) {
                          RAST._IExpr _1164___mcc_h542 = _source38.dtor_obj;
                          Dafny.ISequence<RAST._IType> _1165___mcc_h543 = _source38.dtor_typeParameters;
                          return _932_default;
                        } else if (_source38.is_Call) {
                          RAST._IExpr _1166___mcc_h546 = _source38.dtor_obj;
                          Dafny.ISequence<RAST._IExpr> _1167___mcc_h547 = _source38.dtor_arguments;
                          return _932_default;
                        } else if (_source38.is_Select) {
                          RAST._IExpr _1168___mcc_h550 = _source38.dtor_obj;
                          Dafny.ISequence<Dafny.Rune> _1169___mcc_h551 = _source38.dtor_name;
                          return _932_default;
                        } else {
                          RAST._IExpr _1170___mcc_h554 = _source38.dtor_obj;
                          Dafny.ISequence<Dafny.Rune> _1171___mcc_h555 = _source38.dtor_name;
                          return _932_default;
                        }
                      } else {
                        return _932_default;
                      }
                    } else if (_source37.is_ExprFromType) {
                      RAST._IType _1172___mcc_h558 = _source37.dtor_tpe;
                      return _932_default;
                    } else if (_source37.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _1173___mcc_h560 = _source37.dtor_name;
                      return _932_default;
                    } else if (_source37.is_Match) {
                      RAST._IExpr _1174___mcc_h562 = _source37.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _1175___mcc_h563 = _source37.dtor_cases;
                      return _932_default;
                    } else if (_source37.is_StmtExpr) {
                      RAST._IExpr _1176___mcc_h566 = _source37.dtor_stmt;
                      RAST._IExpr _1177___mcc_h567 = _source37.dtor_rhs;
                      return _932_default;
                    } else if (_source37.is_Block) {
                      RAST._IExpr _1178___mcc_h570 = _source37.dtor_underlying;
                      return _932_default;
                    } else if (_source37.is_StructBuild) {
                      RAST._IExpr _1179___mcc_h572 = _source37.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _1180___mcc_h573 = _source37.dtor_assignments;
                      return _932_default;
                    } else if (_source37.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _1181___mcc_h576 = _source37.dtor_arguments;
                      return _932_default;
                    } else if (_source37.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _1182___mcc_h578 = _source37.dtor_op1;
                      RAST._IExpr _1183___mcc_h579 = _source37.dtor_underlying;
                      DAST.Format._IUnOpFormat _1184___mcc_h580 = _source37.dtor_format;
                      return _932_default;
                    } else if (_source37.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _1185___mcc_h584 = _source37.dtor_op2;
                      RAST._IExpr _1186___mcc_h585 = _source37.dtor_left;
                      RAST._IExpr _1187___mcc_h586 = _source37.dtor_right;
                      DAST.Format._IBinOpFormat _1188___mcc_h587 = _source37.dtor_format2;
                      return _932_default;
                    } else if (_source37.is_TypeAscription) {
                      RAST._IExpr _1189___mcc_h592 = _source37.dtor_left;
                      RAST._IType _1190___mcc_h593 = _source37.dtor_tpe;
                      return _932_default;
                    } else if (_source37.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _1191___mcc_h596 = _source37.dtor_value;
                      return _932_default;
                    } else if (_source37.is_LiteralBool) {
                      bool _1192___mcc_h598 = _source37.dtor_bvalue;
                      return _932_default;
                    } else if (_source37.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _1193___mcc_h600 = _source37.dtor_value;
                      bool _1194___mcc_h601 = _source37.dtor_binary;
                      return _932_default;
                    } else if (_source37.is_DeclareVar) {
                      RAST._IDeclareType _1195___mcc_h604 = _source37.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _1196___mcc_h605 = _source37.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _1197___mcc_h606 = _source37.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _1198___mcc_h607 = _source37.dtor_optRhs;
                      return _932_default;
                    } else if (_source37.is_Assign) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1199___mcc_h612 = _source37.dtor_names;
                      RAST._IExpr _1200___mcc_h613 = _source37.dtor_rhs;
                      return _932_default;
                    } else if (_source37.is_IfExpr) {
                      RAST._IExpr _1201___mcc_h616 = _source37.dtor_cond;
                      RAST._IExpr _1202___mcc_h617 = _source37.dtor_thn;
                      RAST._IExpr _1203___mcc_h618 = _source37.dtor_els;
                      return _932_default;
                    } else if (_source37.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _1204___mcc_h622 = _source37.dtor_optCond;
                      RAST._IExpr _1205___mcc_h623 = _source37.dtor_underlying;
                      return _932_default;
                    } else if (_source37.is_For) {
                      Dafny.ISequence<Dafny.Rune> _1206___mcc_h626 = _source37.dtor_name;
                      RAST._IExpr _1207___mcc_h627 = _source37.dtor_range;
                      RAST._IExpr _1208___mcc_h628 = _source37.dtor_body;
                      return _932_default;
                    } else if (_source37.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _1209___mcc_h632 = _source37.dtor_lbl;
                      RAST._IExpr _1210___mcc_h633 = _source37.dtor_underlying;
                      return _932_default;
                    } else if (_source37.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1211___mcc_h636 = _source37.dtor_optLbl;
                      return _932_default;
                    } else if (_source37.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1212___mcc_h638 = _source37.dtor_optLbl;
                      return _932_default;
                    } else if (_source37.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _1213___mcc_h640 = _source37.dtor_optExpr;
                      return _932_default;
                    } else if (_source37.is_CallType) {
                      RAST._IExpr _1214___mcc_h642 = _source37.dtor_obj;
                      Dafny.ISequence<RAST._IType> _1215___mcc_h643 = _source37.dtor_typeParameters;
                      return _932_default;
                    } else if (_source37.is_Call) {
                      RAST._IExpr _1216___mcc_h646 = _source37.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _1217___mcc_h647 = _source37.dtor_arguments;
                      return _932_default;
                    } else if (_source37.is_Select) {
                      RAST._IExpr _1218___mcc_h650 = _source37.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _1219___mcc_h651 = _source37.dtor_name;
                      return _932_default;
                    } else {
                      RAST._IExpr _1220___mcc_h654 = _source37.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _1221___mcc_h655 = _source37.dtor_name;
                      return _932_default;
                    }
                  } else {
                    return _932_default;
                  }
                } else if (_source36.is_TypeAscription) {
                  RAST._IExpr _1222___mcc_h658 = _source36.dtor_left;
                  RAST._IType _1223___mcc_h659 = _source36.dtor_tpe;
                  return _932_default;
                } else if (_source36.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1224___mcc_h662 = _source36.dtor_value;
                  return _932_default;
                } else if (_source36.is_LiteralBool) {
                  bool _1225___mcc_h664 = _source36.dtor_bvalue;
                  return _932_default;
                } else if (_source36.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1226___mcc_h666 = _source36.dtor_value;
                  bool _1227___mcc_h667 = _source36.dtor_binary;
                  return _932_default;
                } else if (_source36.is_DeclareVar) {
                  RAST._IDeclareType _1228___mcc_h670 = _source36.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1229___mcc_h671 = _source36.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1230___mcc_h672 = _source36.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1231___mcc_h673 = _source36.dtor_optRhs;
                  return _932_default;
                } else if (_source36.is_Assign) {
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1232___mcc_h678 = _source36.dtor_names;
                  RAST._IExpr _1233___mcc_h679 = _source36.dtor_rhs;
                  return _932_default;
                } else if (_source36.is_IfExpr) {
                  RAST._IExpr _1234___mcc_h682 = _source36.dtor_cond;
                  RAST._IExpr _1235___mcc_h683 = _source36.dtor_thn;
                  RAST._IExpr _1236___mcc_h684 = _source36.dtor_els;
                  return _932_default;
                } else if (_source36.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1237___mcc_h688 = _source36.dtor_optCond;
                  RAST._IExpr _1238___mcc_h689 = _source36.dtor_underlying;
                  return _932_default;
                } else if (_source36.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1239___mcc_h692 = _source36.dtor_name;
                  RAST._IExpr _1240___mcc_h693 = _source36.dtor_range;
                  RAST._IExpr _1241___mcc_h694 = _source36.dtor_body;
                  return _932_default;
                } else if (_source36.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1242___mcc_h698 = _source36.dtor_lbl;
                  RAST._IExpr _1243___mcc_h699 = _source36.dtor_underlying;
                  return _932_default;
                } else if (_source36.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1244___mcc_h702 = _source36.dtor_optLbl;
                  return _932_default;
                } else if (_source36.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1245___mcc_h704 = _source36.dtor_optLbl;
                  return _932_default;
                } else if (_source36.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1246___mcc_h706 = _source36.dtor_optExpr;
                  return _932_default;
                } else if (_source36.is_CallType) {
                  RAST._IExpr _1247___mcc_h708 = _source36.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1248___mcc_h709 = _source36.dtor_typeParameters;
                  return _932_default;
                } else if (_source36.is_Call) {
                  RAST._IExpr _1249___mcc_h712 = _source36.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1250___mcc_h713 = _source36.dtor_arguments;
                  return _932_default;
                } else if (_source36.is_Select) {
                  RAST._IExpr _1251___mcc_h716 = _source36.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1252___mcc_h717 = _source36.dtor_name;
                  return _932_default;
                } else {
                  RAST._IExpr _1253___mcc_h720 = _source36.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1254___mcc_h721 = _source36.dtor_name;
                  return _932_default;
                }
              } else {
                return _932_default;
              }
            } else if (_source35.is_BinaryOp) {
              Dafny.ISequence<Dafny.Rune> _1255___mcc_h724 = _source35.dtor_op2;
              RAST._IExpr _1256___mcc_h725 = _source35.dtor_left;
              RAST._IExpr _1257___mcc_h726 = _source35.dtor_right;
              DAST.Format._IBinOpFormat _1258___mcc_h727 = _source35.dtor_format2;
              return _932_default;
            } else if (_source35.is_TypeAscription) {
              RAST._IExpr _1259___mcc_h732 = _source35.dtor_left;
              RAST._IType _1260___mcc_h733 = _source35.dtor_tpe;
              return _932_default;
            } else if (_source35.is_LiteralInt) {
              Dafny.ISequence<Dafny.Rune> _1261___mcc_h736 = _source35.dtor_value;
              return _932_default;
            } else if (_source35.is_LiteralBool) {
              bool _1262___mcc_h738 = _source35.dtor_bvalue;
              return _932_default;
            } else if (_source35.is_LiteralString) {
              Dafny.ISequence<Dafny.Rune> _1263___mcc_h740 = _source35.dtor_value;
              bool _1264___mcc_h741 = _source35.dtor_binary;
              return _932_default;
            } else if (_source35.is_DeclareVar) {
              RAST._IDeclareType _1265___mcc_h744 = _source35.dtor_declareType;
              Dafny.ISequence<Dafny.Rune> _1266___mcc_h745 = _source35.dtor_name;
              Std.Wrappers._IOption<RAST._IType> _1267___mcc_h746 = _source35.dtor_optType;
              Std.Wrappers._IOption<RAST._IExpr> _1268___mcc_h747 = _source35.dtor_optRhs;
              return _932_default;
            } else if (_source35.is_Assign) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1269___mcc_h752 = _source35.dtor_names;
              RAST._IExpr _1270___mcc_h753 = _source35.dtor_rhs;
              return _932_default;
            } else if (_source35.is_IfExpr) {
              RAST._IExpr _1271___mcc_h756 = _source35.dtor_cond;
              RAST._IExpr _1272___mcc_h757 = _source35.dtor_thn;
              RAST._IExpr _1273___mcc_h758 = _source35.dtor_els;
              return _932_default;
            } else if (_source35.is_Loop) {
              Std.Wrappers._IOption<RAST._IExpr> _1274___mcc_h762 = _source35.dtor_optCond;
              RAST._IExpr _1275___mcc_h763 = _source35.dtor_underlying;
              return _932_default;
            } else if (_source35.is_For) {
              Dafny.ISequence<Dafny.Rune> _1276___mcc_h766 = _source35.dtor_name;
              RAST._IExpr _1277___mcc_h767 = _source35.dtor_range;
              RAST._IExpr _1278___mcc_h768 = _source35.dtor_body;
              return _932_default;
            } else if (_source35.is_Labelled) {
              Dafny.ISequence<Dafny.Rune> _1279___mcc_h772 = _source35.dtor_lbl;
              RAST._IExpr _1280___mcc_h773 = _source35.dtor_underlying;
              return _932_default;
            } else if (_source35.is_Break) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1281___mcc_h776 = _source35.dtor_optLbl;
              return _932_default;
            } else if (_source35.is_Continue) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1282___mcc_h778 = _source35.dtor_optLbl;
              return _932_default;
            } else if (_source35.is_Return) {
              Std.Wrappers._IOption<RAST._IExpr> _1283___mcc_h780 = _source35.dtor_optExpr;
              return _932_default;
            } else if (_source35.is_CallType) {
              RAST._IExpr _1284___mcc_h782 = _source35.dtor_obj;
              Dafny.ISequence<RAST._IType> _1285___mcc_h783 = _source35.dtor_typeParameters;
              return _932_default;
            } else if (_source35.is_Call) {
              RAST._IExpr _1286___mcc_h786 = _source35.dtor_obj;
              Dafny.ISequence<RAST._IExpr> _1287___mcc_h787 = _source35.dtor_arguments;
              return _932_default;
            } else if (_source35.is_Select) {
              RAST._IExpr _1288___mcc_h790 = _source35.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1289___mcc_h791 = _source35.dtor_name;
              return _932_default;
            } else {
              RAST._IExpr _1290___mcc_h794 = _source35.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1291___mcc_h795 = _source35.dtor_name;
              return _932_default;
            }
          } else if (_source30.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1292___mcc_h798 = _source30.dtor_optCond;
            RAST._IExpr _1293___mcc_h799 = _source30.dtor_underlying;
            return _932_default;
          } else if (_source30.is_For) {
            Dafny.ISequence<Dafny.Rune> _1294___mcc_h802 = _source30.dtor_name;
            RAST._IExpr _1295___mcc_h803 = _source30.dtor_range;
            RAST._IExpr _1296___mcc_h804 = _source30.dtor_body;
            return _932_default;
          } else if (_source30.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1297___mcc_h808 = _source30.dtor_lbl;
            RAST._IExpr _1298___mcc_h809 = _source30.dtor_underlying;
            return _932_default;
          } else if (_source30.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1299___mcc_h812 = _source30.dtor_optLbl;
            return _932_default;
          } else if (_source30.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1300___mcc_h814 = _source30.dtor_optLbl;
            return _932_default;
          } else if (_source30.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1301___mcc_h816 = _source30.dtor_optExpr;
            return _932_default;
          } else if (_source30.is_CallType) {
            RAST._IExpr _1302___mcc_h818 = _source30.dtor_obj;
            Dafny.ISequence<RAST._IType> _1303___mcc_h819 = _source30.dtor_typeParameters;
            return _932_default;
          } else if (_source30.is_Call) {
            RAST._IExpr _1304___mcc_h822 = _source30.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1305___mcc_h823 = _source30.dtor_arguments;
            return _932_default;
          } else if (_source30.is_Select) {
            RAST._IExpr _1306___mcc_h826 = _source30.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1307___mcc_h827 = _source30.dtor_name;
            return _932_default;
          } else {
            RAST._IExpr _1308___mcc_h830 = _source30.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1309___mcc_h831 = _source30.dtor_name;
            return _932_default;
          }
        } else if (_source29.is_Block) {
          RAST._IExpr _1310___mcc_h834 = _source29.dtor_underlying;
          return _932_default;
        } else if (_source29.is_StructBuild) {
          RAST._IExpr _1311___mcc_h836 = _source29.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _1312___mcc_h837 = _source29.dtor_assignments;
          return _932_default;
        } else if (_source29.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _1313___mcc_h840 = _source29.dtor_arguments;
          return _932_default;
        } else if (_source29.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _1314___mcc_h842 = _source29.dtor_op1;
          RAST._IExpr _1315___mcc_h843 = _source29.dtor_underlying;
          DAST.Format._IUnOpFormat _1316___mcc_h844 = _source29.dtor_format;
          return _932_default;
        } else if (_source29.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _1317___mcc_h848 = _source29.dtor_op2;
          RAST._IExpr _1318___mcc_h849 = _source29.dtor_left;
          RAST._IExpr _1319___mcc_h850 = _source29.dtor_right;
          DAST.Format._IBinOpFormat _1320___mcc_h851 = _source29.dtor_format2;
          return _932_default;
        } else if (_source29.is_TypeAscription) {
          RAST._IExpr _1321___mcc_h856 = _source29.dtor_left;
          RAST._IType _1322___mcc_h857 = _source29.dtor_tpe;
          return _932_default;
        } else if (_source29.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _1323___mcc_h860 = _source29.dtor_value;
          return _932_default;
        } else if (_source29.is_LiteralBool) {
          bool _1324___mcc_h862 = _source29.dtor_bvalue;
          return _932_default;
        } else if (_source29.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _1325___mcc_h864 = _source29.dtor_value;
          bool _1326___mcc_h865 = _source29.dtor_binary;
          return _932_default;
        } else if (_source29.is_DeclareVar) {
          RAST._IDeclareType _1327___mcc_h868 = _source29.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _1328___mcc_h869 = _source29.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _1329___mcc_h870 = _source29.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _1330___mcc_h871 = _source29.dtor_optRhs;
          return _932_default;
        } else if (_source29.is_Assign) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1331___mcc_h876 = _source29.dtor_names;
          RAST._IExpr _1332___mcc_h877 = _source29.dtor_rhs;
          return _932_default;
        } else if (_source29.is_IfExpr) {
          RAST._IExpr _1333___mcc_h880 = _source29.dtor_cond;
          RAST._IExpr _1334___mcc_h881 = _source29.dtor_thn;
          RAST._IExpr _1335___mcc_h882 = _source29.dtor_els;
          return _932_default;
        } else if (_source29.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _1336___mcc_h886 = _source29.dtor_optCond;
          RAST._IExpr _1337___mcc_h887 = _source29.dtor_underlying;
          return _932_default;
        } else if (_source29.is_For) {
          Dafny.ISequence<Dafny.Rune> _1338___mcc_h890 = _source29.dtor_name;
          RAST._IExpr _1339___mcc_h891 = _source29.dtor_range;
          RAST._IExpr _1340___mcc_h892 = _source29.dtor_body;
          return _932_default;
        } else if (_source29.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _1341___mcc_h896 = _source29.dtor_lbl;
          RAST._IExpr _1342___mcc_h897 = _source29.dtor_underlying;
          return _932_default;
        } else if (_source29.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1343___mcc_h900 = _source29.dtor_optLbl;
          return _932_default;
        } else if (_source29.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1344___mcc_h902 = _source29.dtor_optLbl;
          return _932_default;
        } else if (_source29.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _1345___mcc_h904 = _source29.dtor_optExpr;
          return _932_default;
        } else if (_source29.is_CallType) {
          RAST._IExpr _1346___mcc_h906 = _source29.dtor_obj;
          Dafny.ISequence<RAST._IType> _1347___mcc_h907 = _source29.dtor_typeParameters;
          return _932_default;
        } else if (_source29.is_Call) {
          RAST._IExpr _1348___mcc_h910 = _source29.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _1349___mcc_h911 = _source29.dtor_arguments;
          return _932_default;
        } else if (_source29.is_Select) {
          RAST._IExpr _1350___mcc_h914 = _source29.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1351___mcc_h915 = _source29.dtor_name;
          return _932_default;
        } else {
          RAST._IExpr _1352___mcc_h918 = _source29.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1353___mcc_h919 = _source29.dtor_name;
          return _932_default;
        }
      } else if (_source28.is_Block) {
        RAST._IExpr _1354___mcc_h14 = _source28.dtor_underlying;
        RAST._IExpr _1355_underlying = _1354___mcc_h14;
        return (BigInteger.One) + ((_1355_underlying).Height());
      } else if (_source28.is_StructBuild) {
        RAST._IExpr _1356___mcc_h16 = _source28.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _1357___mcc_h17 = _source28.dtor_assignments;
        Dafny.ISequence<RAST._IAssignIdentifier> _1358_assignments = _1357___mcc_h17;
        RAST._IExpr _1359_name = _1356___mcc_h16;
        return (BigInteger.One) + (RAST.__default.max((_1359_name).Height(), DAST.Format.__default.SeqToHeight<RAST._IAssignIdentifier>(_1358_assignments, ((System.Func<RAST._IAssignIdentifier, BigInteger>)((_1360_assignment) => {
          return (_1360_assignment).Height();
        })))));
      } else if (_source28.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _1361___mcc_h20 = _source28.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _1362_arguments = _1361___mcc_h20;
        return (BigInteger.One) + (DAST.Format.__default.SeqToHeight<RAST._IExpr>(_1362_arguments, ((System.Func<RAST._IExpr, BigInteger>)((_1363_argument) => {
          return (_1363_argument).Height();
        }))));
      } else if (_source28.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _1364___mcc_h22 = _source28.dtor_op1;
        RAST._IExpr _1365___mcc_h23 = _source28.dtor_underlying;
        DAST.Format._IUnOpFormat _1366___mcc_h24 = _source28.dtor_format;
        RAST._IExpr _1367_underlying = _1365___mcc_h23;
        return (BigInteger.One) + ((_1367_underlying).Height());
      } else if (_source28.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _1368___mcc_h28 = _source28.dtor_op2;
        RAST._IExpr _1369___mcc_h29 = _source28.dtor_left;
        RAST._IExpr _1370___mcc_h30 = _source28.dtor_right;
        DAST.Format._IBinOpFormat _1371___mcc_h31 = _source28.dtor_format2;
        DAST.Format._IBinOpFormat _1372_format = _1371___mcc_h31;
        RAST._IExpr _1373_right = _1370___mcc_h30;
        RAST._IExpr _1374_left = _1369___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _1375_op = _1368___mcc_h28;
        return (BigInteger.One) + (RAST.__default.max((_1374_left).Height(), (_1373_right).Height()));
      } else if (_source28.is_TypeAscription) {
        RAST._IExpr _1376___mcc_h36 = _source28.dtor_left;
        RAST._IType _1377___mcc_h37 = _source28.dtor_tpe;
        RAST._IType _1378_tpe = _1377___mcc_h37;
        RAST._IExpr _1379_left = _1376___mcc_h36;
        return (BigInteger.One) + ((_1379_left).Height());
      } else if (_source28.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _1380___mcc_h40 = _source28.dtor_value;
        return BigInteger.One;
      } else if (_source28.is_LiteralBool) {
        bool _1381___mcc_h42 = _source28.dtor_bvalue;
        return BigInteger.One;
      } else if (_source28.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _1382___mcc_h44 = _source28.dtor_value;
        bool _1383___mcc_h45 = _source28.dtor_binary;
        return BigInteger.One;
      } else if (_source28.is_DeclareVar) {
        RAST._IDeclareType _1384___mcc_h48 = _source28.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _1385___mcc_h49 = _source28.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _1386___mcc_h50 = _source28.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _1387___mcc_h51 = _source28.dtor_optRhs;
        Std.Wrappers._IOption<RAST._IExpr> _1388_expr = _1387___mcc_h51;
        Std.Wrappers._IOption<RAST._IType> _1389_tpe = _1386___mcc_h50;
        Dafny.ISequence<Dafny.Rune> _1390_name = _1385___mcc_h49;
        RAST._IDeclareType _1391_declareType = _1384___mcc_h48;
        return (BigInteger.One) + (((System.Func<Std.Wrappers._IOption<RAST._IExpr>, BigInteger>)((_source39) => {
          if (_source39.is_None) {
            return BigInteger.Zero;
          } else {
            RAST._IExpr _1392___mcc_h922 = _source39.dtor_value;
            RAST._IExpr _1393_e = _1392___mcc_h922;
            return (_1393_e).Height();
          }
        }))(_1388_expr));
      } else if (_source28.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1394___mcc_h56 = _source28.dtor_names;
        RAST._IExpr _1395___mcc_h57 = _source28.dtor_rhs;
        RAST._IExpr _1396_expr = _1395___mcc_h57;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1397_names = _1394___mcc_h56;
        return (BigInteger.One) + ((_1396_expr).Height());
      } else if (_source28.is_IfExpr) {
        RAST._IExpr _1398___mcc_h60 = _source28.dtor_cond;
        RAST._IExpr _1399___mcc_h61 = _source28.dtor_thn;
        RAST._IExpr _1400___mcc_h62 = _source28.dtor_els;
        RAST._IExpr _1401_els = _1400___mcc_h62;
        RAST._IExpr _1402_thn = _1399___mcc_h61;
        RAST._IExpr _1403_cond = _1398___mcc_h60;
        return (BigInteger.One) + (RAST.__default.max((_1403_cond).Height(), RAST.__default.max((_1402_thn).Height(), (_1401_els).Height())));
      } else if (_source28.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _1404___mcc_h66 = _source28.dtor_optCond;
        RAST._IExpr _1405___mcc_h67 = _source28.dtor_underlying;
        RAST._IExpr _1406_underlying = _1405___mcc_h67;
        Std.Wrappers._IOption<RAST._IExpr> _1407_optCond = _1404___mcc_h66;
        return (BigInteger.One) + ((((_1407_optCond).is_Some) ? (RAST.__default.max(((_1407_optCond).dtor_value).Height(), (_1406_underlying).Height())) : ((_1406_underlying).Height())));
      } else if (_source28.is_For) {
        Dafny.ISequence<Dafny.Rune> _1408___mcc_h70 = _source28.dtor_name;
        RAST._IExpr _1409___mcc_h71 = _source28.dtor_range;
        RAST._IExpr _1410___mcc_h72 = _source28.dtor_body;
        RAST._IExpr _1411_body = _1410___mcc_h72;
        RAST._IExpr _1412_range = _1409___mcc_h71;
        Dafny.ISequence<Dafny.Rune> _1413_name = _1408___mcc_h70;
        return (BigInteger.One) + (RAST.__default.max((_1412_range).Height(), (_1411_body).Height()));
      } else if (_source28.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _1414___mcc_h76 = _source28.dtor_lbl;
        RAST._IExpr _1415___mcc_h77 = _source28.dtor_underlying;
        RAST._IExpr _1416_underlying = _1415___mcc_h77;
        Dafny.ISequence<Dafny.Rune> _1417_lbl = _1414___mcc_h76;
        return (BigInteger.One) + ((_1416_underlying).Height());
      } else if (_source28.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1418___mcc_h80 = _source28.dtor_optLbl;
        return BigInteger.One;
      } else if (_source28.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1419___mcc_h82 = _source28.dtor_optLbl;
        return BigInteger.One;
      } else if (_source28.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _1420___mcc_h84 = _source28.dtor_optExpr;
        Std.Wrappers._IOption<RAST._IExpr> _1421_optExpr = _1420___mcc_h84;
        if ((_1421_optExpr).is_Some) {
          return (BigInteger.One) + (((_1421_optExpr).dtor_value).Height());
        } else {
          return BigInteger.One;
        }
      } else if (_source28.is_CallType) {
        RAST._IExpr _1422___mcc_h86 = _source28.dtor_obj;
        Dafny.ISequence<RAST._IType> _1423___mcc_h87 = _source28.dtor_typeParameters;
        Dafny.ISequence<RAST._IType> _1424_tpes = _1423___mcc_h87;
        RAST._IExpr _1425_obj = _1422___mcc_h86;
        return (BigInteger.One) + (RAST.__default.max((_1425_obj).Height(), DAST.Format.__default.SeqToHeight<RAST._IType>(_1424_tpes, ((System.Func<RAST._IType, BigInteger>)((_1426_tpe) => {
          return BigInteger.One;
        })))));
      } else if (_source28.is_Call) {
        RAST._IExpr _1427___mcc_h90 = _source28.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _1428___mcc_h91 = _source28.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _1429_args = _1428___mcc_h91;
        RAST._IExpr _1430_obj = _1427___mcc_h90;
        return (BigInteger.One) + (RAST.__default.max((_1430_obj).Height(), DAST.Format.__default.SeqToHeight<RAST._IExpr>(_1429_args, ((System.Func<RAST._IExpr, BigInteger>)((_1431_arg) => {
          return (_1431_arg).Height();
        })))));
      } else if (_source28.is_Select) {
        RAST._IExpr _1432___mcc_h94 = _source28.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _1433___mcc_h95 = _source28.dtor_name;
        Dafny.ISequence<Dafny.Rune> _1434_name = _1433___mcc_h95;
        RAST._IExpr _1435_expression = _1432___mcc_h94;
        return (BigInteger.One) + ((_1435_expression).Height());
      } else {
        RAST._IExpr _1436___mcc_h98 = _source28.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _1437___mcc_h99 = _source28.dtor_name;
        Dafny.ISequence<Dafny.Rune> _1438_name = _1437___mcc_h99;
        RAST._IExpr _1439_expression = _1436___mcc_h98;
        return (BigInteger.One) + ((_1439_expression).Height());
      }
    }
    public RAST._IExpr Optimize() {
      RAST._IExpr _source40 = this;
      if (_source40.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _1440___mcc_h0 = _source40.dtor_content;
        return this;
      } else if (_source40.is_ExprFromType) {
        RAST._IType _1441___mcc_h2 = _source40.dtor_tpe;
        return this;
      } else if (_source40.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _1442___mcc_h4 = _source40.dtor_name;
        return this;
      } else if (_source40.is_Match) {
        RAST._IExpr _1443___mcc_h6 = _source40.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _1444___mcc_h7 = _source40.dtor_cases;
        return this;
      } else if (_source40.is_StmtExpr) {
        RAST._IExpr _1445___mcc_h10 = _source40.dtor_stmt;
        RAST._IExpr _1446___mcc_h11 = _source40.dtor_rhs;
        RAST._IExpr _source41 = _1445___mcc_h10;
        if (_source41.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _1447___mcc_h14 = _source41.dtor_content;
          return this;
        } else if (_source41.is_ExprFromType) {
          RAST._IType _1448___mcc_h16 = _source41.dtor_tpe;
          return this;
        } else if (_source41.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _1449___mcc_h18 = _source41.dtor_name;
          return this;
        } else if (_source41.is_Match) {
          RAST._IExpr _1450___mcc_h20 = _source41.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _1451___mcc_h21 = _source41.dtor_cases;
          return this;
        } else if (_source41.is_StmtExpr) {
          RAST._IExpr _1452___mcc_h24 = _source41.dtor_stmt;
          RAST._IExpr _1453___mcc_h25 = _source41.dtor_rhs;
          return this;
        } else if (_source41.is_Block) {
          RAST._IExpr _1454___mcc_h28 = _source41.dtor_underlying;
          return this;
        } else if (_source41.is_StructBuild) {
          RAST._IExpr _1455___mcc_h30 = _source41.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _1456___mcc_h31 = _source41.dtor_assignments;
          return this;
        } else if (_source41.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _1457___mcc_h34 = _source41.dtor_arguments;
          return this;
        } else if (_source41.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _1458___mcc_h36 = _source41.dtor_op1;
          RAST._IExpr _1459___mcc_h37 = _source41.dtor_underlying;
          DAST.Format._IUnOpFormat _1460___mcc_h38 = _source41.dtor_format;
          return this;
        } else if (_source41.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _1461___mcc_h42 = _source41.dtor_op2;
          RAST._IExpr _1462___mcc_h43 = _source41.dtor_left;
          RAST._IExpr _1463___mcc_h44 = _source41.dtor_right;
          DAST.Format._IBinOpFormat _1464___mcc_h45 = _source41.dtor_format2;
          return this;
        } else if (_source41.is_TypeAscription) {
          RAST._IExpr _1465___mcc_h50 = _source41.dtor_left;
          RAST._IType _1466___mcc_h51 = _source41.dtor_tpe;
          return this;
        } else if (_source41.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _1467___mcc_h54 = _source41.dtor_value;
          return this;
        } else if (_source41.is_LiteralBool) {
          bool _1468___mcc_h56 = _source41.dtor_bvalue;
          return this;
        } else if (_source41.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _1469___mcc_h58 = _source41.dtor_value;
          bool _1470___mcc_h59 = _source41.dtor_binary;
          return this;
        } else if (_source41.is_DeclareVar) {
          RAST._IDeclareType _1471___mcc_h62 = _source41.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _1472___mcc_h63 = _source41.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _1473___mcc_h64 = _source41.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _1474___mcc_h65 = _source41.dtor_optRhs;
          Std.Wrappers._IOption<RAST._IType> _source42 = _1473___mcc_h64;
          if (_source42.is_None) {
            return this;
          } else {
            RAST._IType _1475___mcc_h70 = _source42.dtor_value;
            Std.Wrappers._IOption<RAST._IExpr> _source43 = _1474___mcc_h65;
            if (_source43.is_None) {
              RAST._IExpr _source44 = _1446___mcc_h11;
              if (_source44.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _1476___mcc_h72 = _source44.dtor_content;
                return this;
              } else if (_source44.is_ExprFromType) {
                RAST._IType _1477___mcc_h74 = _source44.dtor_tpe;
                return this;
              } else if (_source44.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _1478___mcc_h76 = _source44.dtor_name;
                return this;
              } else if (_source44.is_Match) {
                RAST._IExpr _1479___mcc_h78 = _source44.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _1480___mcc_h79 = _source44.dtor_cases;
                return this;
              } else if (_source44.is_StmtExpr) {
                RAST._IExpr _1481___mcc_h82 = _source44.dtor_stmt;
                RAST._IExpr _1482___mcc_h83 = _source44.dtor_rhs;
                RAST._IExpr _source45 = _1481___mcc_h82;
                if (_source45.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _1483___mcc_h86 = _source45.dtor_content;
                  return this;
                } else if (_source45.is_ExprFromType) {
                  RAST._IType _1484___mcc_h88 = _source45.dtor_tpe;
                  return this;
                } else if (_source45.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _1485___mcc_h90 = _source45.dtor_name;
                  return this;
                } else if (_source45.is_Match) {
                  RAST._IExpr _1486___mcc_h92 = _source45.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _1487___mcc_h93 = _source45.dtor_cases;
                  return this;
                } else if (_source45.is_StmtExpr) {
                  RAST._IExpr _1488___mcc_h96 = _source45.dtor_stmt;
                  RAST._IExpr _1489___mcc_h97 = _source45.dtor_rhs;
                  return this;
                } else if (_source45.is_Block) {
                  RAST._IExpr _1490___mcc_h100 = _source45.dtor_underlying;
                  return this;
                } else if (_source45.is_StructBuild) {
                  RAST._IExpr _1491___mcc_h102 = _source45.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1492___mcc_h103 = _source45.dtor_assignments;
                  return this;
                } else if (_source45.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1493___mcc_h106 = _source45.dtor_arguments;
                  return this;
                } else if (_source45.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1494___mcc_h108 = _source45.dtor_op1;
                  RAST._IExpr _1495___mcc_h109 = _source45.dtor_underlying;
                  DAST.Format._IUnOpFormat _1496___mcc_h110 = _source45.dtor_format;
                  return this;
                } else if (_source45.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1497___mcc_h114 = _source45.dtor_op2;
                  RAST._IExpr _1498___mcc_h115 = _source45.dtor_left;
                  RAST._IExpr _1499___mcc_h116 = _source45.dtor_right;
                  DAST.Format._IBinOpFormat _1500___mcc_h117 = _source45.dtor_format2;
                  return this;
                } else if (_source45.is_TypeAscription) {
                  RAST._IExpr _1501___mcc_h122 = _source45.dtor_left;
                  RAST._IType _1502___mcc_h123 = _source45.dtor_tpe;
                  return this;
                } else if (_source45.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1503___mcc_h126 = _source45.dtor_value;
                  return this;
                } else if (_source45.is_LiteralBool) {
                  bool _1504___mcc_h128 = _source45.dtor_bvalue;
                  return this;
                } else if (_source45.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1505___mcc_h130 = _source45.dtor_value;
                  bool _1506___mcc_h131 = _source45.dtor_binary;
                  return this;
                } else if (_source45.is_DeclareVar) {
                  RAST._IDeclareType _1507___mcc_h134 = _source45.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1508___mcc_h135 = _source45.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1509___mcc_h136 = _source45.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1510___mcc_h137 = _source45.dtor_optRhs;
                  return this;
                } else if (_source45.is_Assign) {
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1511___mcc_h142 = _source45.dtor_names;
                  RAST._IExpr _1512___mcc_h143 = _source45.dtor_rhs;
                  RAST._IExpr _1513_last = _1482___mcc_h83;
                  RAST._IExpr _1514_rhs = _1512___mcc_h143;
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1515_name2 = _1511___mcc_h142;
                  RAST._IType _1516_tpe = _1475___mcc_h70;
                  Dafny.ISequence<Dafny.Rune> _1517_name = _1472___mcc_h63;
                  RAST._IDeclareType _1518_mod = _1471___mcc_h62;
                  if ((Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_1517_name)).Equals(_1515_name2)) {
                    RAST._IExpr _1519_rewriting = RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(_1518_mod, _1517_name, Std.Wrappers.Option<RAST._IType>.create_Some(_1516_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_1514_rhs)), _1513_last);
                    return _1519_rewriting;
                  } else {
                    return this;
                  }
                } else if (_source45.is_IfExpr) {
                  RAST._IExpr _1520___mcc_h146 = _source45.dtor_cond;
                  RAST._IExpr _1521___mcc_h147 = _source45.dtor_thn;
                  RAST._IExpr _1522___mcc_h148 = _source45.dtor_els;
                  return this;
                } else if (_source45.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1523___mcc_h152 = _source45.dtor_optCond;
                  RAST._IExpr _1524___mcc_h153 = _source45.dtor_underlying;
                  return this;
                } else if (_source45.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1525___mcc_h156 = _source45.dtor_name;
                  RAST._IExpr _1526___mcc_h157 = _source45.dtor_range;
                  RAST._IExpr _1527___mcc_h158 = _source45.dtor_body;
                  return this;
                } else if (_source45.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1528___mcc_h162 = _source45.dtor_lbl;
                  RAST._IExpr _1529___mcc_h163 = _source45.dtor_underlying;
                  return this;
                } else if (_source45.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1530___mcc_h166 = _source45.dtor_optLbl;
                  return this;
                } else if (_source45.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1531___mcc_h168 = _source45.dtor_optLbl;
                  return this;
                } else if (_source45.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1532___mcc_h170 = _source45.dtor_optExpr;
                  return this;
                } else if (_source45.is_CallType) {
                  RAST._IExpr _1533___mcc_h172 = _source45.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1534___mcc_h173 = _source45.dtor_typeParameters;
                  return this;
                } else if (_source45.is_Call) {
                  RAST._IExpr _1535___mcc_h176 = _source45.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1536___mcc_h177 = _source45.dtor_arguments;
                  return this;
                } else if (_source45.is_Select) {
                  RAST._IExpr _1537___mcc_h180 = _source45.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1538___mcc_h181 = _source45.dtor_name;
                  return this;
                } else {
                  RAST._IExpr _1539___mcc_h184 = _source45.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1540___mcc_h185 = _source45.dtor_name;
                  return this;
                }
              } else if (_source44.is_Block) {
                RAST._IExpr _1541___mcc_h188 = _source44.dtor_underlying;
                return this;
              } else if (_source44.is_StructBuild) {
                RAST._IExpr _1542___mcc_h190 = _source44.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _1543___mcc_h191 = _source44.dtor_assignments;
                return this;
              } else if (_source44.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _1544___mcc_h194 = _source44.dtor_arguments;
                return this;
              } else if (_source44.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _1545___mcc_h196 = _source44.dtor_op1;
                RAST._IExpr _1546___mcc_h197 = _source44.dtor_underlying;
                DAST.Format._IUnOpFormat _1547___mcc_h198 = _source44.dtor_format;
                return this;
              } else if (_source44.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _1548___mcc_h202 = _source44.dtor_op2;
                RAST._IExpr _1549___mcc_h203 = _source44.dtor_left;
                RAST._IExpr _1550___mcc_h204 = _source44.dtor_right;
                DAST.Format._IBinOpFormat _1551___mcc_h205 = _source44.dtor_format2;
                return this;
              } else if (_source44.is_TypeAscription) {
                RAST._IExpr _1552___mcc_h210 = _source44.dtor_left;
                RAST._IType _1553___mcc_h211 = _source44.dtor_tpe;
                return this;
              } else if (_source44.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _1554___mcc_h214 = _source44.dtor_value;
                return this;
              } else if (_source44.is_LiteralBool) {
                bool _1555___mcc_h216 = _source44.dtor_bvalue;
                return this;
              } else if (_source44.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _1556___mcc_h218 = _source44.dtor_value;
                bool _1557___mcc_h219 = _source44.dtor_binary;
                return this;
              } else if (_source44.is_DeclareVar) {
                RAST._IDeclareType _1558___mcc_h222 = _source44.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _1559___mcc_h223 = _source44.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _1560___mcc_h224 = _source44.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _1561___mcc_h225 = _source44.dtor_optRhs;
                return this;
              } else if (_source44.is_Assign) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1562___mcc_h230 = _source44.dtor_names;
                RAST._IExpr _1563___mcc_h231 = _source44.dtor_rhs;
                return this;
              } else if (_source44.is_IfExpr) {
                RAST._IExpr _1564___mcc_h234 = _source44.dtor_cond;
                RAST._IExpr _1565___mcc_h235 = _source44.dtor_thn;
                RAST._IExpr _1566___mcc_h236 = _source44.dtor_els;
                return this;
              } else if (_source44.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _1567___mcc_h240 = _source44.dtor_optCond;
                RAST._IExpr _1568___mcc_h241 = _source44.dtor_underlying;
                return this;
              } else if (_source44.is_For) {
                Dafny.ISequence<Dafny.Rune> _1569___mcc_h244 = _source44.dtor_name;
                RAST._IExpr _1570___mcc_h245 = _source44.dtor_range;
                RAST._IExpr _1571___mcc_h246 = _source44.dtor_body;
                return this;
              } else if (_source44.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _1572___mcc_h250 = _source44.dtor_lbl;
                RAST._IExpr _1573___mcc_h251 = _source44.dtor_underlying;
                return this;
              } else if (_source44.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1574___mcc_h254 = _source44.dtor_optLbl;
                return this;
              } else if (_source44.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1575___mcc_h256 = _source44.dtor_optLbl;
                return this;
              } else if (_source44.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _1576___mcc_h258 = _source44.dtor_optExpr;
                return this;
              } else if (_source44.is_CallType) {
                RAST._IExpr _1577___mcc_h260 = _source44.dtor_obj;
                Dafny.ISequence<RAST._IType> _1578___mcc_h261 = _source44.dtor_typeParameters;
                return this;
              } else if (_source44.is_Call) {
                RAST._IExpr _1579___mcc_h264 = _source44.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _1580___mcc_h265 = _source44.dtor_arguments;
                return this;
              } else if (_source44.is_Select) {
                RAST._IExpr _1581___mcc_h268 = _source44.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1582___mcc_h269 = _source44.dtor_name;
                return this;
              } else {
                RAST._IExpr _1583___mcc_h272 = _source44.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1584___mcc_h273 = _source44.dtor_name;
                return this;
              }
            } else {
              RAST._IExpr _1585___mcc_h276 = _source43.dtor_value;
              return this;
            }
          }
        } else if (_source41.is_Assign) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1586___mcc_h278 = _source41.dtor_names;
          RAST._IExpr _1587___mcc_h279 = _source41.dtor_rhs;
          return this;
        } else if (_source41.is_IfExpr) {
          RAST._IExpr _1588___mcc_h282 = _source41.dtor_cond;
          RAST._IExpr _1589___mcc_h283 = _source41.dtor_thn;
          RAST._IExpr _1590___mcc_h284 = _source41.dtor_els;
          RAST._IExpr _source46 = _1588___mcc_h282;
          if (_source46.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1591___mcc_h288 = _source46.dtor_content;
            return this;
          } else if (_source46.is_ExprFromType) {
            RAST._IType _1592___mcc_h290 = _source46.dtor_tpe;
            return this;
          } else if (_source46.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1593___mcc_h292 = _source46.dtor_name;
            return this;
          } else if (_source46.is_Match) {
            RAST._IExpr _1594___mcc_h294 = _source46.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1595___mcc_h295 = _source46.dtor_cases;
            return this;
          } else if (_source46.is_StmtExpr) {
            RAST._IExpr _1596___mcc_h298 = _source46.dtor_stmt;
            RAST._IExpr _1597___mcc_h299 = _source46.dtor_rhs;
            return this;
          } else if (_source46.is_Block) {
            RAST._IExpr _1598___mcc_h302 = _source46.dtor_underlying;
            return this;
          } else if (_source46.is_StructBuild) {
            RAST._IExpr _1599___mcc_h304 = _source46.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1600___mcc_h305 = _source46.dtor_assignments;
            return this;
          } else if (_source46.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1601___mcc_h308 = _source46.dtor_arguments;
            return this;
          } else if (_source46.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1602___mcc_h310 = _source46.dtor_op1;
            RAST._IExpr _1603___mcc_h311 = _source46.dtor_underlying;
            DAST.Format._IUnOpFormat _1604___mcc_h312 = _source46.dtor_format;
            if (object.Equals(_1602___mcc_h310, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
              RAST._IExpr _source47 = _1603___mcc_h311;
              if (_source47.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _1605___mcc_h316 = _source47.dtor_content;
                return this;
              } else if (_source47.is_ExprFromType) {
                RAST._IType _1606___mcc_h318 = _source47.dtor_tpe;
                return this;
              } else if (_source47.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _1607___mcc_h320 = _source47.dtor_name;
                return this;
              } else if (_source47.is_Match) {
                RAST._IExpr _1608___mcc_h322 = _source47.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _1609___mcc_h323 = _source47.dtor_cases;
                return this;
              } else if (_source47.is_StmtExpr) {
                RAST._IExpr _1610___mcc_h326 = _source47.dtor_stmt;
                RAST._IExpr _1611___mcc_h327 = _source47.dtor_rhs;
                return this;
              } else if (_source47.is_Block) {
                RAST._IExpr _1612___mcc_h330 = _source47.dtor_underlying;
                return this;
              } else if (_source47.is_StructBuild) {
                RAST._IExpr _1613___mcc_h332 = _source47.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _1614___mcc_h333 = _source47.dtor_assignments;
                return this;
              } else if (_source47.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _1615___mcc_h336 = _source47.dtor_arguments;
                return this;
              } else if (_source47.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _1616___mcc_h338 = _source47.dtor_op1;
                RAST._IExpr _1617___mcc_h339 = _source47.dtor_underlying;
                DAST.Format._IUnOpFormat _1618___mcc_h340 = _source47.dtor_format;
                return this;
              } else if (_source47.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _1619___mcc_h344 = _source47.dtor_op2;
                RAST._IExpr _1620___mcc_h345 = _source47.dtor_left;
                RAST._IExpr _1621___mcc_h346 = _source47.dtor_right;
                DAST.Format._IBinOpFormat _1622___mcc_h347 = _source47.dtor_format2;
                if (object.Equals(_1619___mcc_h344, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
                  RAST._IExpr _source48 = _1589___mcc_h283;
                  if (_source48.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _1623___mcc_h352 = _source48.dtor_content;
                    if (object.Equals(_1623___mcc_h352, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"Halt\");"))) {
                      RAST._IExpr _source49 = _1590___mcc_h284;
                      if (_source49.is_RawExpr) {
                        Dafny.ISequence<Dafny.Rune> _1624___mcc_h354 = _source49.dtor_content;
                        if (object.Equals(_1624___mcc_h354, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
                          RAST._IExpr _1625_last = _1446___mcc_h11;
                          DAST.Format._IUnOpFormat _1626_of = _1604___mcc_h312;
                          DAST.Format._IBinOpFormat _1627_f = _1622___mcc_h347;
                          RAST._IExpr _1628_b = _1621___mcc_h346;
                          RAST._IExpr _1629_a = _1620___mcc_h345;
                          RAST._IExpr _1630_rewriting = RAST.Expr.create_StmtExpr((RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("assert_eq!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_1629_a, _1628_b)), _1625_last);
                          return _1630_rewriting;
                        } else {
                          return this;
                        }
                      } else if (_source49.is_ExprFromType) {
                        RAST._IType _1631___mcc_h356 = _source49.dtor_tpe;
                        return this;
                      } else if (_source49.is_Identifier) {
                        Dafny.ISequence<Dafny.Rune> _1632___mcc_h358 = _source49.dtor_name;
                        return this;
                      } else if (_source49.is_Match) {
                        RAST._IExpr _1633___mcc_h360 = _source49.dtor_matchee;
                        Dafny.ISequence<RAST._IMatchCase> _1634___mcc_h361 = _source49.dtor_cases;
                        return this;
                      } else if (_source49.is_StmtExpr) {
                        RAST._IExpr _1635___mcc_h364 = _source49.dtor_stmt;
                        RAST._IExpr _1636___mcc_h365 = _source49.dtor_rhs;
                        return this;
                      } else if (_source49.is_Block) {
                        RAST._IExpr _1637___mcc_h368 = _source49.dtor_underlying;
                        return this;
                      } else if (_source49.is_StructBuild) {
                        RAST._IExpr _1638___mcc_h370 = _source49.dtor_underlying;
                        Dafny.ISequence<RAST._IAssignIdentifier> _1639___mcc_h371 = _source49.dtor_assignments;
                        return this;
                      } else if (_source49.is_Tuple) {
                        Dafny.ISequence<RAST._IExpr> _1640___mcc_h374 = _source49.dtor_arguments;
                        return this;
                      } else if (_source49.is_UnaryOp) {
                        Dafny.ISequence<Dafny.Rune> _1641___mcc_h376 = _source49.dtor_op1;
                        RAST._IExpr _1642___mcc_h377 = _source49.dtor_underlying;
                        DAST.Format._IUnOpFormat _1643___mcc_h378 = _source49.dtor_format;
                        return this;
                      } else if (_source49.is_BinaryOp) {
                        Dafny.ISequence<Dafny.Rune> _1644___mcc_h382 = _source49.dtor_op2;
                        RAST._IExpr _1645___mcc_h383 = _source49.dtor_left;
                        RAST._IExpr _1646___mcc_h384 = _source49.dtor_right;
                        DAST.Format._IBinOpFormat _1647___mcc_h385 = _source49.dtor_format2;
                        return this;
                      } else if (_source49.is_TypeAscription) {
                        RAST._IExpr _1648___mcc_h390 = _source49.dtor_left;
                        RAST._IType _1649___mcc_h391 = _source49.dtor_tpe;
                        return this;
                      } else if (_source49.is_LiteralInt) {
                        Dafny.ISequence<Dafny.Rune> _1650___mcc_h394 = _source49.dtor_value;
                        return this;
                      } else if (_source49.is_LiteralBool) {
                        bool _1651___mcc_h396 = _source49.dtor_bvalue;
                        return this;
                      } else if (_source49.is_LiteralString) {
                        Dafny.ISequence<Dafny.Rune> _1652___mcc_h398 = _source49.dtor_value;
                        bool _1653___mcc_h399 = _source49.dtor_binary;
                        return this;
                      } else if (_source49.is_DeclareVar) {
                        RAST._IDeclareType _1654___mcc_h402 = _source49.dtor_declareType;
                        Dafny.ISequence<Dafny.Rune> _1655___mcc_h403 = _source49.dtor_name;
                        Std.Wrappers._IOption<RAST._IType> _1656___mcc_h404 = _source49.dtor_optType;
                        Std.Wrappers._IOption<RAST._IExpr> _1657___mcc_h405 = _source49.dtor_optRhs;
                        return this;
                      } else if (_source49.is_Assign) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1658___mcc_h410 = _source49.dtor_names;
                        RAST._IExpr _1659___mcc_h411 = _source49.dtor_rhs;
                        return this;
                      } else if (_source49.is_IfExpr) {
                        RAST._IExpr _1660___mcc_h414 = _source49.dtor_cond;
                        RAST._IExpr _1661___mcc_h415 = _source49.dtor_thn;
                        RAST._IExpr _1662___mcc_h416 = _source49.dtor_els;
                        return this;
                      } else if (_source49.is_Loop) {
                        Std.Wrappers._IOption<RAST._IExpr> _1663___mcc_h420 = _source49.dtor_optCond;
                        RAST._IExpr _1664___mcc_h421 = _source49.dtor_underlying;
                        return this;
                      } else if (_source49.is_For) {
                        Dafny.ISequence<Dafny.Rune> _1665___mcc_h424 = _source49.dtor_name;
                        RAST._IExpr _1666___mcc_h425 = _source49.dtor_range;
                        RAST._IExpr _1667___mcc_h426 = _source49.dtor_body;
                        return this;
                      } else if (_source49.is_Labelled) {
                        Dafny.ISequence<Dafny.Rune> _1668___mcc_h430 = _source49.dtor_lbl;
                        RAST._IExpr _1669___mcc_h431 = _source49.dtor_underlying;
                        return this;
                      } else if (_source49.is_Break) {
                        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1670___mcc_h434 = _source49.dtor_optLbl;
                        return this;
                      } else if (_source49.is_Continue) {
                        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1671___mcc_h436 = _source49.dtor_optLbl;
                        return this;
                      } else if (_source49.is_Return) {
                        Std.Wrappers._IOption<RAST._IExpr> _1672___mcc_h438 = _source49.dtor_optExpr;
                        return this;
                      } else if (_source49.is_CallType) {
                        RAST._IExpr _1673___mcc_h440 = _source49.dtor_obj;
                        Dafny.ISequence<RAST._IType> _1674___mcc_h441 = _source49.dtor_typeParameters;
                        return this;
                      } else if (_source49.is_Call) {
                        RAST._IExpr _1675___mcc_h444 = _source49.dtor_obj;
                        Dafny.ISequence<RAST._IExpr> _1676___mcc_h445 = _source49.dtor_arguments;
                        return this;
                      } else if (_source49.is_Select) {
                        RAST._IExpr _1677___mcc_h448 = _source49.dtor_obj;
                        Dafny.ISequence<Dafny.Rune> _1678___mcc_h449 = _source49.dtor_name;
                        return this;
                      } else {
                        RAST._IExpr _1679___mcc_h452 = _source49.dtor_obj;
                        Dafny.ISequence<Dafny.Rune> _1680___mcc_h453 = _source49.dtor_name;
                        return this;
                      }
                    } else {
                      return this;
                    }
                  } else if (_source48.is_ExprFromType) {
                    RAST._IType _1681___mcc_h456 = _source48.dtor_tpe;
                    return this;
                  } else if (_source48.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _1682___mcc_h458 = _source48.dtor_name;
                    return this;
                  } else if (_source48.is_Match) {
                    RAST._IExpr _1683___mcc_h460 = _source48.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _1684___mcc_h461 = _source48.dtor_cases;
                    return this;
                  } else if (_source48.is_StmtExpr) {
                    RAST._IExpr _1685___mcc_h464 = _source48.dtor_stmt;
                    RAST._IExpr _1686___mcc_h465 = _source48.dtor_rhs;
                    return this;
                  } else if (_source48.is_Block) {
                    RAST._IExpr _1687___mcc_h468 = _source48.dtor_underlying;
                    return this;
                  } else if (_source48.is_StructBuild) {
                    RAST._IExpr _1688___mcc_h470 = _source48.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _1689___mcc_h471 = _source48.dtor_assignments;
                    return this;
                  } else if (_source48.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _1690___mcc_h474 = _source48.dtor_arguments;
                    return this;
                  } else if (_source48.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _1691___mcc_h476 = _source48.dtor_op1;
                    RAST._IExpr _1692___mcc_h477 = _source48.dtor_underlying;
                    DAST.Format._IUnOpFormat _1693___mcc_h478 = _source48.dtor_format;
                    return this;
                  } else if (_source48.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _1694___mcc_h482 = _source48.dtor_op2;
                    RAST._IExpr _1695___mcc_h483 = _source48.dtor_left;
                    RAST._IExpr _1696___mcc_h484 = _source48.dtor_right;
                    DAST.Format._IBinOpFormat _1697___mcc_h485 = _source48.dtor_format2;
                    return this;
                  } else if (_source48.is_TypeAscription) {
                    RAST._IExpr _1698___mcc_h490 = _source48.dtor_left;
                    RAST._IType _1699___mcc_h491 = _source48.dtor_tpe;
                    return this;
                  } else if (_source48.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _1700___mcc_h494 = _source48.dtor_value;
                    return this;
                  } else if (_source48.is_LiteralBool) {
                    bool _1701___mcc_h496 = _source48.dtor_bvalue;
                    return this;
                  } else if (_source48.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _1702___mcc_h498 = _source48.dtor_value;
                    bool _1703___mcc_h499 = _source48.dtor_binary;
                    return this;
                  } else if (_source48.is_DeclareVar) {
                    RAST._IDeclareType _1704___mcc_h502 = _source48.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _1705___mcc_h503 = _source48.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _1706___mcc_h504 = _source48.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _1707___mcc_h505 = _source48.dtor_optRhs;
                    return this;
                  } else if (_source48.is_Assign) {
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1708___mcc_h510 = _source48.dtor_names;
                    RAST._IExpr _1709___mcc_h511 = _source48.dtor_rhs;
                    return this;
                  } else if (_source48.is_IfExpr) {
                    RAST._IExpr _1710___mcc_h514 = _source48.dtor_cond;
                    RAST._IExpr _1711___mcc_h515 = _source48.dtor_thn;
                    RAST._IExpr _1712___mcc_h516 = _source48.dtor_els;
                    return this;
                  } else if (_source48.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _1713___mcc_h520 = _source48.dtor_optCond;
                    RAST._IExpr _1714___mcc_h521 = _source48.dtor_underlying;
                    return this;
                  } else if (_source48.is_For) {
                    Dafny.ISequence<Dafny.Rune> _1715___mcc_h524 = _source48.dtor_name;
                    RAST._IExpr _1716___mcc_h525 = _source48.dtor_range;
                    RAST._IExpr _1717___mcc_h526 = _source48.dtor_body;
                    return this;
                  } else if (_source48.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _1718___mcc_h530 = _source48.dtor_lbl;
                    RAST._IExpr _1719___mcc_h531 = _source48.dtor_underlying;
                    return this;
                  } else if (_source48.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1720___mcc_h534 = _source48.dtor_optLbl;
                    return this;
                  } else if (_source48.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1721___mcc_h536 = _source48.dtor_optLbl;
                    return this;
                  } else if (_source48.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _1722___mcc_h538 = _source48.dtor_optExpr;
                    return this;
                  } else if (_source48.is_CallType) {
                    RAST._IExpr _1723___mcc_h540 = _source48.dtor_obj;
                    Dafny.ISequence<RAST._IType> _1724___mcc_h541 = _source48.dtor_typeParameters;
                    return this;
                  } else if (_source48.is_Call) {
                    RAST._IExpr _1725___mcc_h544 = _source48.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _1726___mcc_h545 = _source48.dtor_arguments;
                    return this;
                  } else if (_source48.is_Select) {
                    RAST._IExpr _1727___mcc_h548 = _source48.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1728___mcc_h549 = _source48.dtor_name;
                    return this;
                  } else {
                    RAST._IExpr _1729___mcc_h552 = _source48.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1730___mcc_h553 = _source48.dtor_name;
                    return this;
                  }
                } else {
                  return this;
                }
              } else if (_source47.is_TypeAscription) {
                RAST._IExpr _1731___mcc_h556 = _source47.dtor_left;
                RAST._IType _1732___mcc_h557 = _source47.dtor_tpe;
                return this;
              } else if (_source47.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _1733___mcc_h560 = _source47.dtor_value;
                return this;
              } else if (_source47.is_LiteralBool) {
                bool _1734___mcc_h562 = _source47.dtor_bvalue;
                return this;
              } else if (_source47.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _1735___mcc_h564 = _source47.dtor_value;
                bool _1736___mcc_h565 = _source47.dtor_binary;
                return this;
              } else if (_source47.is_DeclareVar) {
                RAST._IDeclareType _1737___mcc_h568 = _source47.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _1738___mcc_h569 = _source47.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _1739___mcc_h570 = _source47.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _1740___mcc_h571 = _source47.dtor_optRhs;
                return this;
              } else if (_source47.is_Assign) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1741___mcc_h576 = _source47.dtor_names;
                RAST._IExpr _1742___mcc_h577 = _source47.dtor_rhs;
                return this;
              } else if (_source47.is_IfExpr) {
                RAST._IExpr _1743___mcc_h580 = _source47.dtor_cond;
                RAST._IExpr _1744___mcc_h581 = _source47.dtor_thn;
                RAST._IExpr _1745___mcc_h582 = _source47.dtor_els;
                return this;
              } else if (_source47.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _1746___mcc_h586 = _source47.dtor_optCond;
                RAST._IExpr _1747___mcc_h587 = _source47.dtor_underlying;
                return this;
              } else if (_source47.is_For) {
                Dafny.ISequence<Dafny.Rune> _1748___mcc_h590 = _source47.dtor_name;
                RAST._IExpr _1749___mcc_h591 = _source47.dtor_range;
                RAST._IExpr _1750___mcc_h592 = _source47.dtor_body;
                return this;
              } else if (_source47.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _1751___mcc_h596 = _source47.dtor_lbl;
                RAST._IExpr _1752___mcc_h597 = _source47.dtor_underlying;
                return this;
              } else if (_source47.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1753___mcc_h600 = _source47.dtor_optLbl;
                return this;
              } else if (_source47.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1754___mcc_h602 = _source47.dtor_optLbl;
                return this;
              } else if (_source47.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _1755___mcc_h604 = _source47.dtor_optExpr;
                return this;
              } else if (_source47.is_CallType) {
                RAST._IExpr _1756___mcc_h606 = _source47.dtor_obj;
                Dafny.ISequence<RAST._IType> _1757___mcc_h607 = _source47.dtor_typeParameters;
                return this;
              } else if (_source47.is_Call) {
                RAST._IExpr _1758___mcc_h610 = _source47.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _1759___mcc_h611 = _source47.dtor_arguments;
                return this;
              } else if (_source47.is_Select) {
                RAST._IExpr _1760___mcc_h614 = _source47.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1761___mcc_h615 = _source47.dtor_name;
                return this;
              } else {
                RAST._IExpr _1762___mcc_h618 = _source47.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1763___mcc_h619 = _source47.dtor_name;
                return this;
              }
            } else {
              return this;
            }
          } else if (_source46.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1764___mcc_h622 = _source46.dtor_op2;
            RAST._IExpr _1765___mcc_h623 = _source46.dtor_left;
            RAST._IExpr _1766___mcc_h624 = _source46.dtor_right;
            DAST.Format._IBinOpFormat _1767___mcc_h625 = _source46.dtor_format2;
            return this;
          } else if (_source46.is_TypeAscription) {
            RAST._IExpr _1768___mcc_h630 = _source46.dtor_left;
            RAST._IType _1769___mcc_h631 = _source46.dtor_tpe;
            return this;
          } else if (_source46.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1770___mcc_h634 = _source46.dtor_value;
            return this;
          } else if (_source46.is_LiteralBool) {
            bool _1771___mcc_h636 = _source46.dtor_bvalue;
            return this;
          } else if (_source46.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1772___mcc_h638 = _source46.dtor_value;
            bool _1773___mcc_h639 = _source46.dtor_binary;
            return this;
          } else if (_source46.is_DeclareVar) {
            RAST._IDeclareType _1774___mcc_h642 = _source46.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1775___mcc_h643 = _source46.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1776___mcc_h644 = _source46.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1777___mcc_h645 = _source46.dtor_optRhs;
            return this;
          } else if (_source46.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1778___mcc_h650 = _source46.dtor_names;
            RAST._IExpr _1779___mcc_h651 = _source46.dtor_rhs;
            return this;
          } else if (_source46.is_IfExpr) {
            RAST._IExpr _1780___mcc_h654 = _source46.dtor_cond;
            RAST._IExpr _1781___mcc_h655 = _source46.dtor_thn;
            RAST._IExpr _1782___mcc_h656 = _source46.dtor_els;
            return this;
          } else if (_source46.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1783___mcc_h660 = _source46.dtor_optCond;
            RAST._IExpr _1784___mcc_h661 = _source46.dtor_underlying;
            return this;
          } else if (_source46.is_For) {
            Dafny.ISequence<Dafny.Rune> _1785___mcc_h664 = _source46.dtor_name;
            RAST._IExpr _1786___mcc_h665 = _source46.dtor_range;
            RAST._IExpr _1787___mcc_h666 = _source46.dtor_body;
            return this;
          } else if (_source46.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1788___mcc_h670 = _source46.dtor_lbl;
            RAST._IExpr _1789___mcc_h671 = _source46.dtor_underlying;
            return this;
          } else if (_source46.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1790___mcc_h674 = _source46.dtor_optLbl;
            return this;
          } else if (_source46.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1791___mcc_h676 = _source46.dtor_optLbl;
            return this;
          } else if (_source46.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1792___mcc_h678 = _source46.dtor_optExpr;
            return this;
          } else if (_source46.is_CallType) {
            RAST._IExpr _1793___mcc_h680 = _source46.dtor_obj;
            Dafny.ISequence<RAST._IType> _1794___mcc_h681 = _source46.dtor_typeParameters;
            return this;
          } else if (_source46.is_Call) {
            RAST._IExpr _1795___mcc_h684 = _source46.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1796___mcc_h685 = _source46.dtor_arguments;
            return this;
          } else if (_source46.is_Select) {
            RAST._IExpr _1797___mcc_h688 = _source46.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1798___mcc_h689 = _source46.dtor_name;
            return this;
          } else {
            RAST._IExpr _1799___mcc_h692 = _source46.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1800___mcc_h693 = _source46.dtor_name;
            return this;
          }
        } else if (_source41.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _1801___mcc_h696 = _source41.dtor_optCond;
          RAST._IExpr _1802___mcc_h697 = _source41.dtor_underlying;
          return this;
        } else if (_source41.is_For) {
          Dafny.ISequence<Dafny.Rune> _1803___mcc_h700 = _source41.dtor_name;
          RAST._IExpr _1804___mcc_h701 = _source41.dtor_range;
          RAST._IExpr _1805___mcc_h702 = _source41.dtor_body;
          return this;
        } else if (_source41.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _1806___mcc_h706 = _source41.dtor_lbl;
          RAST._IExpr _1807___mcc_h707 = _source41.dtor_underlying;
          return this;
        } else if (_source41.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1808___mcc_h710 = _source41.dtor_optLbl;
          return this;
        } else if (_source41.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1809___mcc_h712 = _source41.dtor_optLbl;
          return this;
        } else if (_source41.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _1810___mcc_h714 = _source41.dtor_optExpr;
          return this;
        } else if (_source41.is_CallType) {
          RAST._IExpr _1811___mcc_h716 = _source41.dtor_obj;
          Dafny.ISequence<RAST._IType> _1812___mcc_h717 = _source41.dtor_typeParameters;
          return this;
        } else if (_source41.is_Call) {
          RAST._IExpr _1813___mcc_h720 = _source41.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _1814___mcc_h721 = _source41.dtor_arguments;
          return this;
        } else if (_source41.is_Select) {
          RAST._IExpr _1815___mcc_h724 = _source41.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1816___mcc_h725 = _source41.dtor_name;
          return this;
        } else {
          RAST._IExpr _1817___mcc_h728 = _source41.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1818___mcc_h729 = _source41.dtor_name;
          return this;
        }
      } else if (_source40.is_Block) {
        RAST._IExpr _1819___mcc_h732 = _source40.dtor_underlying;
        return this;
      } else if (_source40.is_StructBuild) {
        RAST._IExpr _1820___mcc_h734 = _source40.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _1821___mcc_h735 = _source40.dtor_assignments;
        return this;
      } else if (_source40.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _1822___mcc_h738 = _source40.dtor_arguments;
        return this;
      } else if (_source40.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _1823___mcc_h740 = _source40.dtor_op1;
        RAST._IExpr _1824___mcc_h741 = _source40.dtor_underlying;
        DAST.Format._IUnOpFormat _1825___mcc_h742 = _source40.dtor_format;
        if (object.Equals(_1823___mcc_h740, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          RAST._IExpr _source50 = _1824___mcc_h741;
          if (_source50.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1826___mcc_h746 = _source50.dtor_content;
            return this;
          } else if (_source50.is_ExprFromType) {
            RAST._IType _1827___mcc_h748 = _source50.dtor_tpe;
            return this;
          } else if (_source50.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1828___mcc_h750 = _source50.dtor_name;
            return this;
          } else if (_source50.is_Match) {
            RAST._IExpr _1829___mcc_h752 = _source50.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1830___mcc_h753 = _source50.dtor_cases;
            return this;
          } else if (_source50.is_StmtExpr) {
            RAST._IExpr _1831___mcc_h756 = _source50.dtor_stmt;
            RAST._IExpr _1832___mcc_h757 = _source50.dtor_rhs;
            return this;
          } else if (_source50.is_Block) {
            RAST._IExpr _1833___mcc_h760 = _source50.dtor_underlying;
            return this;
          } else if (_source50.is_StructBuild) {
            RAST._IExpr _1834___mcc_h762 = _source50.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1835___mcc_h763 = _source50.dtor_assignments;
            return this;
          } else if (_source50.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1836___mcc_h766 = _source50.dtor_arguments;
            return this;
          } else if (_source50.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1837___mcc_h768 = _source50.dtor_op1;
            RAST._IExpr _1838___mcc_h769 = _source50.dtor_underlying;
            DAST.Format._IUnOpFormat _1839___mcc_h770 = _source50.dtor_format;
            return this;
          } else if (_source50.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1840___mcc_h774 = _source50.dtor_op2;
            RAST._IExpr _1841___mcc_h775 = _source50.dtor_left;
            RAST._IExpr _1842___mcc_h776 = _source50.dtor_right;
            DAST.Format._IBinOpFormat _1843___mcc_h777 = _source50.dtor_format2;
            return this;
          } else if (_source50.is_TypeAscription) {
            RAST._IExpr _1844___mcc_h782 = _source50.dtor_left;
            RAST._IType _1845___mcc_h783 = _source50.dtor_tpe;
            return this;
          } else if (_source50.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1846___mcc_h786 = _source50.dtor_value;
            return this;
          } else if (_source50.is_LiteralBool) {
            bool _1847___mcc_h788 = _source50.dtor_bvalue;
            return this;
          } else if (_source50.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1848___mcc_h790 = _source50.dtor_value;
            bool _1849___mcc_h791 = _source50.dtor_binary;
            return this;
          } else if (_source50.is_DeclareVar) {
            RAST._IDeclareType _1850___mcc_h794 = _source50.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1851___mcc_h795 = _source50.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1852___mcc_h796 = _source50.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1853___mcc_h797 = _source50.dtor_optRhs;
            return this;
          } else if (_source50.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1854___mcc_h802 = _source50.dtor_names;
            RAST._IExpr _1855___mcc_h803 = _source50.dtor_rhs;
            return this;
          } else if (_source50.is_IfExpr) {
            RAST._IExpr _1856___mcc_h806 = _source50.dtor_cond;
            RAST._IExpr _1857___mcc_h807 = _source50.dtor_thn;
            RAST._IExpr _1858___mcc_h808 = _source50.dtor_els;
            return this;
          } else if (_source50.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1859___mcc_h812 = _source50.dtor_optCond;
            RAST._IExpr _1860___mcc_h813 = _source50.dtor_underlying;
            return this;
          } else if (_source50.is_For) {
            Dafny.ISequence<Dafny.Rune> _1861___mcc_h816 = _source50.dtor_name;
            RAST._IExpr _1862___mcc_h817 = _source50.dtor_range;
            RAST._IExpr _1863___mcc_h818 = _source50.dtor_body;
            return this;
          } else if (_source50.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1864___mcc_h822 = _source50.dtor_lbl;
            RAST._IExpr _1865___mcc_h823 = _source50.dtor_underlying;
            return this;
          } else if (_source50.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1866___mcc_h826 = _source50.dtor_optLbl;
            return this;
          } else if (_source50.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1867___mcc_h828 = _source50.dtor_optLbl;
            return this;
          } else if (_source50.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1868___mcc_h830 = _source50.dtor_optExpr;
            return this;
          } else if (_source50.is_CallType) {
            RAST._IExpr _1869___mcc_h832 = _source50.dtor_obj;
            Dafny.ISequence<RAST._IType> _1870___mcc_h833 = _source50.dtor_typeParameters;
            return this;
          } else if (_source50.is_Call) {
            RAST._IExpr _1871___mcc_h836 = _source50.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1872___mcc_h837 = _source50.dtor_arguments;
            RAST._IExpr _source51 = _1871___mcc_h836;
            if (_source51.is_RawExpr) {
              Dafny.ISequence<Dafny.Rune> _1873___mcc_h840 = _source51.dtor_content;
              return this;
            } else if (_source51.is_ExprFromType) {
              RAST._IType _1874___mcc_h842 = _source51.dtor_tpe;
              return this;
            } else if (_source51.is_Identifier) {
              Dafny.ISequence<Dafny.Rune> _1875___mcc_h844 = _source51.dtor_name;
              return this;
            } else if (_source51.is_Match) {
              RAST._IExpr _1876___mcc_h846 = _source51.dtor_matchee;
              Dafny.ISequence<RAST._IMatchCase> _1877___mcc_h847 = _source51.dtor_cases;
              return this;
            } else if (_source51.is_StmtExpr) {
              RAST._IExpr _1878___mcc_h850 = _source51.dtor_stmt;
              RAST._IExpr _1879___mcc_h851 = _source51.dtor_rhs;
              return this;
            } else if (_source51.is_Block) {
              RAST._IExpr _1880___mcc_h854 = _source51.dtor_underlying;
              return this;
            } else if (_source51.is_StructBuild) {
              RAST._IExpr _1881___mcc_h856 = _source51.dtor_underlying;
              Dafny.ISequence<RAST._IAssignIdentifier> _1882___mcc_h857 = _source51.dtor_assignments;
              return this;
            } else if (_source51.is_Tuple) {
              Dafny.ISequence<RAST._IExpr> _1883___mcc_h860 = _source51.dtor_arguments;
              return this;
            } else if (_source51.is_UnaryOp) {
              Dafny.ISequence<Dafny.Rune> _1884___mcc_h862 = _source51.dtor_op1;
              RAST._IExpr _1885___mcc_h863 = _source51.dtor_underlying;
              DAST.Format._IUnOpFormat _1886___mcc_h864 = _source51.dtor_format;
              return this;
            } else if (_source51.is_BinaryOp) {
              Dafny.ISequence<Dafny.Rune> _1887___mcc_h868 = _source51.dtor_op2;
              RAST._IExpr _1888___mcc_h869 = _source51.dtor_left;
              RAST._IExpr _1889___mcc_h870 = _source51.dtor_right;
              DAST.Format._IBinOpFormat _1890___mcc_h871 = _source51.dtor_format2;
              return this;
            } else if (_source51.is_TypeAscription) {
              RAST._IExpr _1891___mcc_h876 = _source51.dtor_left;
              RAST._IType _1892___mcc_h877 = _source51.dtor_tpe;
              return this;
            } else if (_source51.is_LiteralInt) {
              Dafny.ISequence<Dafny.Rune> _1893___mcc_h880 = _source51.dtor_value;
              return this;
            } else if (_source51.is_LiteralBool) {
              bool _1894___mcc_h882 = _source51.dtor_bvalue;
              return this;
            } else if (_source51.is_LiteralString) {
              Dafny.ISequence<Dafny.Rune> _1895___mcc_h884 = _source51.dtor_value;
              bool _1896___mcc_h885 = _source51.dtor_binary;
              return this;
            } else if (_source51.is_DeclareVar) {
              RAST._IDeclareType _1897___mcc_h888 = _source51.dtor_declareType;
              Dafny.ISequence<Dafny.Rune> _1898___mcc_h889 = _source51.dtor_name;
              Std.Wrappers._IOption<RAST._IType> _1899___mcc_h890 = _source51.dtor_optType;
              Std.Wrappers._IOption<RAST._IExpr> _1900___mcc_h891 = _source51.dtor_optRhs;
              return this;
            } else if (_source51.is_Assign) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1901___mcc_h896 = _source51.dtor_names;
              RAST._IExpr _1902___mcc_h897 = _source51.dtor_rhs;
              return this;
            } else if (_source51.is_IfExpr) {
              RAST._IExpr _1903___mcc_h900 = _source51.dtor_cond;
              RAST._IExpr _1904___mcc_h901 = _source51.dtor_thn;
              RAST._IExpr _1905___mcc_h902 = _source51.dtor_els;
              return this;
            } else if (_source51.is_Loop) {
              Std.Wrappers._IOption<RAST._IExpr> _1906___mcc_h906 = _source51.dtor_optCond;
              RAST._IExpr _1907___mcc_h907 = _source51.dtor_underlying;
              return this;
            } else if (_source51.is_For) {
              Dafny.ISequence<Dafny.Rune> _1908___mcc_h910 = _source51.dtor_name;
              RAST._IExpr _1909___mcc_h911 = _source51.dtor_range;
              RAST._IExpr _1910___mcc_h912 = _source51.dtor_body;
              return this;
            } else if (_source51.is_Labelled) {
              Dafny.ISequence<Dafny.Rune> _1911___mcc_h916 = _source51.dtor_lbl;
              RAST._IExpr _1912___mcc_h917 = _source51.dtor_underlying;
              return this;
            } else if (_source51.is_Break) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1913___mcc_h920 = _source51.dtor_optLbl;
              return this;
            } else if (_source51.is_Continue) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1914___mcc_h922 = _source51.dtor_optLbl;
              return this;
            } else if (_source51.is_Return) {
              Std.Wrappers._IOption<RAST._IExpr> _1915___mcc_h924 = _source51.dtor_optExpr;
              return this;
            } else if (_source51.is_CallType) {
              RAST._IExpr _1916___mcc_h926 = _source51.dtor_obj;
              Dafny.ISequence<RAST._IType> _1917___mcc_h927 = _source51.dtor_typeParameters;
              return this;
            } else if (_source51.is_Call) {
              RAST._IExpr _1918___mcc_h930 = _source51.dtor_obj;
              Dafny.ISequence<RAST._IExpr> _1919___mcc_h931 = _source51.dtor_arguments;
              return this;
            } else if (_source51.is_Select) {
              RAST._IExpr _1920___mcc_h934 = _source51.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1921___mcc_h935 = _source51.dtor_name;
              if (object.Equals(_1921___mcc_h935, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))) {
                DAST.Format._IUnOpFormat _1922_format = _1825___mcc_h742;
                Dafny.ISequence<RAST._IExpr> _1923_args = _1872___mcc_h837;
                RAST._IExpr _1924_underlying = _1920___mcc_h934;
                if ((_1923_args).Equals(Dafny.Sequence<RAST._IExpr>.FromElements())) {
                  return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _1924_underlying, _1922_format);
                } else {
                  return this;
                }
              } else {
                return this;
              }
            } else {
              RAST._IExpr _1925___mcc_h938 = _source51.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1926___mcc_h939 = _source51.dtor_name;
              return this;
            }
          } else if (_source50.is_Select) {
            RAST._IExpr _1927___mcc_h942 = _source50.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1928___mcc_h943 = _source50.dtor_name;
            return this;
          } else {
            RAST._IExpr _1929___mcc_h946 = _source50.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1930___mcc_h947 = _source50.dtor_name;
            return this;
          }
        } else if (object.Equals(_1823___mcc_h740, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
          RAST._IExpr _source52 = _1824___mcc_h741;
          if (_source52.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1931___mcc_h950 = _source52.dtor_content;
            return this;
          } else if (_source52.is_ExprFromType) {
            RAST._IType _1932___mcc_h952 = _source52.dtor_tpe;
            return this;
          } else if (_source52.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1933___mcc_h954 = _source52.dtor_name;
            return this;
          } else if (_source52.is_Match) {
            RAST._IExpr _1934___mcc_h956 = _source52.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1935___mcc_h957 = _source52.dtor_cases;
            return this;
          } else if (_source52.is_StmtExpr) {
            RAST._IExpr _1936___mcc_h960 = _source52.dtor_stmt;
            RAST._IExpr _1937___mcc_h961 = _source52.dtor_rhs;
            return this;
          } else if (_source52.is_Block) {
            RAST._IExpr _1938___mcc_h964 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_StructBuild) {
            RAST._IExpr _1939___mcc_h966 = _source52.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1940___mcc_h967 = _source52.dtor_assignments;
            return this;
          } else if (_source52.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1941___mcc_h970 = _source52.dtor_arguments;
            return this;
          } else if (_source52.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1942___mcc_h972 = _source52.dtor_op1;
            RAST._IExpr _1943___mcc_h973 = _source52.dtor_underlying;
            DAST.Format._IUnOpFormat _1944___mcc_h974 = _source52.dtor_format;
            return this;
          } else if (_source52.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1945___mcc_h978 = _source52.dtor_op2;
            RAST._IExpr _1946___mcc_h979 = _source52.dtor_left;
            RAST._IExpr _1947___mcc_h980 = _source52.dtor_right;
            DAST.Format._IBinOpFormat _1948___mcc_h981 = _source52.dtor_format2;
            if (object.Equals(_1945___mcc_h978, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
              DAST.Format._IUnOpFormat _source53 = _1825___mcc_h742;
              if (_source53.is_NoFormat) {
                return this;
              } else {
                DAST.Format._IBinOpFormat _1949_format = _1948___mcc_h981;
                RAST._IExpr _1950_right = _1947___mcc_h980;
                RAST._IExpr _1951_left = _1946___mcc_h979;
                return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!="), _1951_left, _1950_right, DAST.Format.BinOpFormat.create_NoFormat());
              }
            } else if (object.Equals(_1945___mcc_h978, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"))) {
              DAST.Format._IBinOpFormat _source54 = _1948___mcc_h981;
              if (_source54.is_NoFormat) {
                DAST.Format._IUnOpFormat _source55 = _1825___mcc_h742;
                if (_source55.is_NoFormat) {
                  return this;
                } else {
                  RAST._IExpr _1952_right = _1947___mcc_h980;
                  RAST._IExpr _1953_left = _1946___mcc_h979;
                  return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">="), _1953_left, _1952_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              } else if (_source54.is_ImpliesFormat) {
                return this;
              } else if (_source54.is_Equivalence) {
                return this;
              } else {
                DAST.Format._IUnOpFormat _source56 = _1825___mcc_h742;
                if (_source56.is_NoFormat) {
                  return this;
                } else {
                  RAST._IExpr _1954_right = _1947___mcc_h980;
                  RAST._IExpr _1955_left = _1946___mcc_h979;
                  return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _1954_right, _1955_left, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else {
              return this;
            }
          } else if (_source52.is_TypeAscription) {
            RAST._IExpr _1956___mcc_h986 = _source52.dtor_left;
            RAST._IType _1957___mcc_h987 = _source52.dtor_tpe;
            return this;
          } else if (_source52.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1958___mcc_h990 = _source52.dtor_value;
            return this;
          } else if (_source52.is_LiteralBool) {
            bool _1959___mcc_h992 = _source52.dtor_bvalue;
            return this;
          } else if (_source52.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1960___mcc_h994 = _source52.dtor_value;
            bool _1961___mcc_h995 = _source52.dtor_binary;
            return this;
          } else if (_source52.is_DeclareVar) {
            RAST._IDeclareType _1962___mcc_h998 = _source52.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1963___mcc_h999 = _source52.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1964___mcc_h1000 = _source52.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1965___mcc_h1001 = _source52.dtor_optRhs;
            return this;
          } else if (_source52.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1966___mcc_h1006 = _source52.dtor_names;
            RAST._IExpr _1967___mcc_h1007 = _source52.dtor_rhs;
            return this;
          } else if (_source52.is_IfExpr) {
            RAST._IExpr _1968___mcc_h1010 = _source52.dtor_cond;
            RAST._IExpr _1969___mcc_h1011 = _source52.dtor_thn;
            RAST._IExpr _1970___mcc_h1012 = _source52.dtor_els;
            return this;
          } else if (_source52.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1971___mcc_h1016 = _source52.dtor_optCond;
            RAST._IExpr _1972___mcc_h1017 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_For) {
            Dafny.ISequence<Dafny.Rune> _1973___mcc_h1020 = _source52.dtor_name;
            RAST._IExpr _1974___mcc_h1021 = _source52.dtor_range;
            RAST._IExpr _1975___mcc_h1022 = _source52.dtor_body;
            return this;
          } else if (_source52.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1976___mcc_h1026 = _source52.dtor_lbl;
            RAST._IExpr _1977___mcc_h1027 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1978___mcc_h1030 = _source52.dtor_optLbl;
            return this;
          } else if (_source52.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1979___mcc_h1032 = _source52.dtor_optLbl;
            return this;
          } else if (_source52.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1980___mcc_h1034 = _source52.dtor_optExpr;
            return this;
          } else if (_source52.is_CallType) {
            RAST._IExpr _1981___mcc_h1036 = _source52.dtor_obj;
            Dafny.ISequence<RAST._IType> _1982___mcc_h1037 = _source52.dtor_typeParameters;
            return this;
          } else if (_source52.is_Call) {
            RAST._IExpr _1983___mcc_h1040 = _source52.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1984___mcc_h1041 = _source52.dtor_arguments;
            return this;
          } else if (_source52.is_Select) {
            RAST._IExpr _1985___mcc_h1044 = _source52.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1986___mcc_h1045 = _source52.dtor_name;
            return this;
          } else {
            RAST._IExpr _1987___mcc_h1048 = _source52.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1988___mcc_h1049 = _source52.dtor_name;
            return this;
          }
        } else {
          return this;
        }
      } else if (_source40.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _1989___mcc_h1052 = _source40.dtor_op2;
        RAST._IExpr _1990___mcc_h1053 = _source40.dtor_left;
        RAST._IExpr _1991___mcc_h1054 = _source40.dtor_right;
        DAST.Format._IBinOpFormat _1992___mcc_h1055 = _source40.dtor_format2;
        return this;
      } else if (_source40.is_TypeAscription) {
        RAST._IExpr _1993___mcc_h1060 = _source40.dtor_left;
        RAST._IType _1994___mcc_h1061 = _source40.dtor_tpe;
        return this;
      } else if (_source40.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _1995___mcc_h1064 = _source40.dtor_value;
        return this;
      } else if (_source40.is_LiteralBool) {
        bool _1996___mcc_h1066 = _source40.dtor_bvalue;
        return this;
      } else if (_source40.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _1997___mcc_h1068 = _source40.dtor_value;
        bool _1998___mcc_h1069 = _source40.dtor_binary;
        return this;
      } else if (_source40.is_DeclareVar) {
        RAST._IDeclareType _1999___mcc_h1072 = _source40.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2000___mcc_h1073 = _source40.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2001___mcc_h1074 = _source40.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2002___mcc_h1075 = _source40.dtor_optRhs;
        return this;
      } else if (_source40.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2003___mcc_h1080 = _source40.dtor_names;
        RAST._IExpr _2004___mcc_h1081 = _source40.dtor_rhs;
        return this;
      } else if (_source40.is_IfExpr) {
        RAST._IExpr _2005___mcc_h1084 = _source40.dtor_cond;
        RAST._IExpr _2006___mcc_h1085 = _source40.dtor_thn;
        RAST._IExpr _2007___mcc_h1086 = _source40.dtor_els;
        return this;
      } else if (_source40.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2008___mcc_h1090 = _source40.dtor_optCond;
        RAST._IExpr _2009___mcc_h1091 = _source40.dtor_underlying;
        return this;
      } else if (_source40.is_For) {
        Dafny.ISequence<Dafny.Rune> _2010___mcc_h1094 = _source40.dtor_name;
        RAST._IExpr _2011___mcc_h1095 = _source40.dtor_range;
        RAST._IExpr _2012___mcc_h1096 = _source40.dtor_body;
        return this;
      } else if (_source40.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2013___mcc_h1100 = _source40.dtor_lbl;
        RAST._IExpr _2014___mcc_h1101 = _source40.dtor_underlying;
        return this;
      } else if (_source40.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2015___mcc_h1104 = _source40.dtor_optLbl;
        return this;
      } else if (_source40.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2016___mcc_h1106 = _source40.dtor_optLbl;
        return this;
      } else if (_source40.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2017___mcc_h1108 = _source40.dtor_optExpr;
        return this;
      } else if (_source40.is_CallType) {
        RAST._IExpr _2018___mcc_h1110 = _source40.dtor_obj;
        Dafny.ISequence<RAST._IType> _2019___mcc_h1111 = _source40.dtor_typeParameters;
        return this;
      } else if (_source40.is_Call) {
        RAST._IExpr _2020___mcc_h1114 = _source40.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2021___mcc_h1115 = _source40.dtor_arguments;
        RAST._IExpr _source57 = _2020___mcc_h1114;
        if (_source57.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _2022___mcc_h1118 = _source57.dtor_content;
          return this;
        } else if (_source57.is_ExprFromType) {
          RAST._IType _2023___mcc_h1120 = _source57.dtor_tpe;
          return this;
        } else if (_source57.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _2024___mcc_h1122 = _source57.dtor_name;
          return this;
        } else if (_source57.is_Match) {
          RAST._IExpr _2025___mcc_h1124 = _source57.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _2026___mcc_h1125 = _source57.dtor_cases;
          return this;
        } else if (_source57.is_StmtExpr) {
          RAST._IExpr _2027___mcc_h1128 = _source57.dtor_stmt;
          RAST._IExpr _2028___mcc_h1129 = _source57.dtor_rhs;
          return this;
        } else if (_source57.is_Block) {
          RAST._IExpr _2029___mcc_h1132 = _source57.dtor_underlying;
          return this;
        } else if (_source57.is_StructBuild) {
          RAST._IExpr _2030___mcc_h1134 = _source57.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _2031___mcc_h1135 = _source57.dtor_assignments;
          return this;
        } else if (_source57.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _2032___mcc_h1138 = _source57.dtor_arguments;
          return this;
        } else if (_source57.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _2033___mcc_h1140 = _source57.dtor_op1;
          RAST._IExpr _2034___mcc_h1141 = _source57.dtor_underlying;
          DAST.Format._IUnOpFormat _2035___mcc_h1142 = _source57.dtor_format;
          return this;
        } else if (_source57.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _2036___mcc_h1146 = _source57.dtor_op2;
          RAST._IExpr _2037___mcc_h1147 = _source57.dtor_left;
          RAST._IExpr _2038___mcc_h1148 = _source57.dtor_right;
          DAST.Format._IBinOpFormat _2039___mcc_h1149 = _source57.dtor_format2;
          return this;
        } else if (_source57.is_TypeAscription) {
          RAST._IExpr _2040___mcc_h1154 = _source57.dtor_left;
          RAST._IType _2041___mcc_h1155 = _source57.dtor_tpe;
          return this;
        } else if (_source57.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _2042___mcc_h1158 = _source57.dtor_value;
          return this;
        } else if (_source57.is_LiteralBool) {
          bool _2043___mcc_h1160 = _source57.dtor_bvalue;
          return this;
        } else if (_source57.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _2044___mcc_h1162 = _source57.dtor_value;
          bool _2045___mcc_h1163 = _source57.dtor_binary;
          return this;
        } else if (_source57.is_DeclareVar) {
          RAST._IDeclareType _2046___mcc_h1166 = _source57.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _2047___mcc_h1167 = _source57.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _2048___mcc_h1168 = _source57.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _2049___mcc_h1169 = _source57.dtor_optRhs;
          return this;
        } else if (_source57.is_Assign) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2050___mcc_h1174 = _source57.dtor_names;
          RAST._IExpr _2051___mcc_h1175 = _source57.dtor_rhs;
          return this;
        } else if (_source57.is_IfExpr) {
          RAST._IExpr _2052___mcc_h1178 = _source57.dtor_cond;
          RAST._IExpr _2053___mcc_h1179 = _source57.dtor_thn;
          RAST._IExpr _2054___mcc_h1180 = _source57.dtor_els;
          return this;
        } else if (_source57.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _2055___mcc_h1184 = _source57.dtor_optCond;
          RAST._IExpr _2056___mcc_h1185 = _source57.dtor_underlying;
          return this;
        } else if (_source57.is_For) {
          Dafny.ISequence<Dafny.Rune> _2057___mcc_h1188 = _source57.dtor_name;
          RAST._IExpr _2058___mcc_h1189 = _source57.dtor_range;
          RAST._IExpr _2059___mcc_h1190 = _source57.dtor_body;
          return this;
        } else if (_source57.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _2060___mcc_h1194 = _source57.dtor_lbl;
          RAST._IExpr _2061___mcc_h1195 = _source57.dtor_underlying;
          return this;
        } else if (_source57.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2062___mcc_h1198 = _source57.dtor_optLbl;
          return this;
        } else if (_source57.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2063___mcc_h1200 = _source57.dtor_optLbl;
          return this;
        } else if (_source57.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _2064___mcc_h1202 = _source57.dtor_optExpr;
          return this;
        } else if (_source57.is_CallType) {
          RAST._IExpr _2065___mcc_h1204 = _source57.dtor_obj;
          Dafny.ISequence<RAST._IType> _2066___mcc_h1205 = _source57.dtor_typeParameters;
          return this;
        } else if (_source57.is_Call) {
          RAST._IExpr _2067___mcc_h1208 = _source57.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _2068___mcc_h1209 = _source57.dtor_arguments;
          return this;
        } else if (_source57.is_Select) {
          RAST._IExpr _2069___mcc_h1212 = _source57.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _2070___mcc_h1213 = _source57.dtor_name;
          return this;
        } else {
          RAST._IExpr _2071___mcc_h1216 = _source57.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _2072___mcc_h1217 = _source57.dtor_name;
          if (object.Equals(_2072___mcc_h1217, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))) {
            Dafny.ISequence<RAST._IExpr> _2073_args = _2021___mcc_h1115;
            RAST._IExpr _2074_r = _2071___mcc_h1216;
            if (((!object.Equals(_2074_r, RAST.__default.dafny__runtime)) && (!object.Equals(_2074_r, RAST.__default.@global))) || ((new BigInteger((_2073_args).Count)) != (new BigInteger(2)))) {
              return this;
            } else {
              RAST._IExpr _2075_expr = (_2073_args).Select(BigInteger.Zero);
              RAST._IExpr _2076_tpeExpr = (_2073_args).Select(BigInteger.One);
              if (!((_2076_tpeExpr).is_ExprFromType)) {
                return this;
              } else {
                RAST._IType _2077_tpe = (_2076_tpeExpr).dtor_tpe;
                if (((((((((((_2077_tpe).is_U8) || ((_2077_tpe).is_U16)) || ((_2077_tpe).is_U32)) || ((_2077_tpe).is_U64)) || ((_2077_tpe).is_U128)) || ((_2077_tpe).is_I8)) || ((_2077_tpe).is_I16)) || ((_2077_tpe).is_I32)) || ((_2077_tpe).is_I64)) || ((_2077_tpe).is_I128)) {
                  RAST._IExpr _source58 = _2075_expr;
                  if (_source58.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _2078___mcc_h1228 = _source58.dtor_content;
                    return this;
                  } else if (_source58.is_ExprFromType) {
                    RAST._IType _2079___mcc_h1230 = _source58.dtor_tpe;
                    return this;
                  } else if (_source58.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _2080___mcc_h1232 = _source58.dtor_name;
                    return this;
                  } else if (_source58.is_Match) {
                    RAST._IExpr _2081___mcc_h1234 = _source58.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _2082___mcc_h1235 = _source58.dtor_cases;
                    return this;
                  } else if (_source58.is_StmtExpr) {
                    RAST._IExpr _2083___mcc_h1238 = _source58.dtor_stmt;
                    RAST._IExpr _2084___mcc_h1239 = _source58.dtor_rhs;
                    return this;
                  } else if (_source58.is_Block) {
                    RAST._IExpr _2085___mcc_h1242 = _source58.dtor_underlying;
                    return this;
                  } else if (_source58.is_StructBuild) {
                    RAST._IExpr _2086___mcc_h1244 = _source58.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _2087___mcc_h1245 = _source58.dtor_assignments;
                    return this;
                  } else if (_source58.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _2088___mcc_h1248 = _source58.dtor_arguments;
                    return this;
                  } else if (_source58.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _2089___mcc_h1250 = _source58.dtor_op1;
                    RAST._IExpr _2090___mcc_h1251 = _source58.dtor_underlying;
                    DAST.Format._IUnOpFormat _2091___mcc_h1252 = _source58.dtor_format;
                    return this;
                  } else if (_source58.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _2092___mcc_h1256 = _source58.dtor_op2;
                    RAST._IExpr _2093___mcc_h1257 = _source58.dtor_left;
                    RAST._IExpr _2094___mcc_h1258 = _source58.dtor_right;
                    DAST.Format._IBinOpFormat _2095___mcc_h1259 = _source58.dtor_format2;
                    return this;
                  } else if (_source58.is_TypeAscription) {
                    RAST._IExpr _2096___mcc_h1264 = _source58.dtor_left;
                    RAST._IType _2097___mcc_h1265 = _source58.dtor_tpe;
                    return this;
                  } else if (_source58.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _2098___mcc_h1268 = _source58.dtor_value;
                    return this;
                  } else if (_source58.is_LiteralBool) {
                    bool _2099___mcc_h1270 = _source58.dtor_bvalue;
                    return this;
                  } else if (_source58.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _2100___mcc_h1272 = _source58.dtor_value;
                    bool _2101___mcc_h1273 = _source58.dtor_binary;
                    return this;
                  } else if (_source58.is_DeclareVar) {
                    RAST._IDeclareType _2102___mcc_h1276 = _source58.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _2103___mcc_h1277 = _source58.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _2104___mcc_h1278 = _source58.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _2105___mcc_h1279 = _source58.dtor_optRhs;
                    return this;
                  } else if (_source58.is_Assign) {
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2106___mcc_h1284 = _source58.dtor_names;
                    RAST._IExpr _2107___mcc_h1285 = _source58.dtor_rhs;
                    return this;
                  } else if (_source58.is_IfExpr) {
                    RAST._IExpr _2108___mcc_h1288 = _source58.dtor_cond;
                    RAST._IExpr _2109___mcc_h1289 = _source58.dtor_thn;
                    RAST._IExpr _2110___mcc_h1290 = _source58.dtor_els;
                    return this;
                  } else if (_source58.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _2111___mcc_h1294 = _source58.dtor_optCond;
                    RAST._IExpr _2112___mcc_h1295 = _source58.dtor_underlying;
                    return this;
                  } else if (_source58.is_For) {
                    Dafny.ISequence<Dafny.Rune> _2113___mcc_h1298 = _source58.dtor_name;
                    RAST._IExpr _2114___mcc_h1299 = _source58.dtor_range;
                    RAST._IExpr _2115___mcc_h1300 = _source58.dtor_body;
                    return this;
                  } else if (_source58.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _2116___mcc_h1304 = _source58.dtor_lbl;
                    RAST._IExpr _2117___mcc_h1305 = _source58.dtor_underlying;
                    return this;
                  } else if (_source58.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2118___mcc_h1308 = _source58.dtor_optLbl;
                    return this;
                  } else if (_source58.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2119___mcc_h1310 = _source58.dtor_optLbl;
                    return this;
                  } else if (_source58.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _2120___mcc_h1312 = _source58.dtor_optExpr;
                    return this;
                  } else if (_source58.is_CallType) {
                    RAST._IExpr _2121___mcc_h1314 = _source58.dtor_obj;
                    Dafny.ISequence<RAST._IType> _2122___mcc_h1315 = _source58.dtor_typeParameters;
                    return this;
                  } else if (_source58.is_Call) {
                    RAST._IExpr _2123___mcc_h1318 = _source58.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _2124___mcc_h1319 = _source58.dtor_arguments;
                    RAST._IExpr _source59 = _2123___mcc_h1318;
                    if (_source59.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _2125___mcc_h1322 = _source59.dtor_content;
                      return this;
                    } else if (_source59.is_ExprFromType) {
                      RAST._IType _2126___mcc_h1324 = _source59.dtor_tpe;
                      return this;
                    } else if (_source59.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _2127___mcc_h1326 = _source59.dtor_name;
                      return this;
                    } else if (_source59.is_Match) {
                      RAST._IExpr _2128___mcc_h1328 = _source59.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _2129___mcc_h1329 = _source59.dtor_cases;
                      return this;
                    } else if (_source59.is_StmtExpr) {
                      RAST._IExpr _2130___mcc_h1332 = _source59.dtor_stmt;
                      RAST._IExpr _2131___mcc_h1333 = _source59.dtor_rhs;
                      return this;
                    } else if (_source59.is_Block) {
                      RAST._IExpr _2132___mcc_h1336 = _source59.dtor_underlying;
                      return this;
                    } else if (_source59.is_StructBuild) {
                      RAST._IExpr _2133___mcc_h1338 = _source59.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _2134___mcc_h1339 = _source59.dtor_assignments;
                      return this;
                    } else if (_source59.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _2135___mcc_h1342 = _source59.dtor_arguments;
                      return this;
                    } else if (_source59.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _2136___mcc_h1344 = _source59.dtor_op1;
                      RAST._IExpr _2137___mcc_h1345 = _source59.dtor_underlying;
                      DAST.Format._IUnOpFormat _2138___mcc_h1346 = _source59.dtor_format;
                      return this;
                    } else if (_source59.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _2139___mcc_h1350 = _source59.dtor_op2;
                      RAST._IExpr _2140___mcc_h1351 = _source59.dtor_left;
                      RAST._IExpr _2141___mcc_h1352 = _source59.dtor_right;
                      DAST.Format._IBinOpFormat _2142___mcc_h1353 = _source59.dtor_format2;
                      return this;
                    } else if (_source59.is_TypeAscription) {
                      RAST._IExpr _2143___mcc_h1358 = _source59.dtor_left;
                      RAST._IType _2144___mcc_h1359 = _source59.dtor_tpe;
                      return this;
                    } else if (_source59.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _2145___mcc_h1362 = _source59.dtor_value;
                      return this;
                    } else if (_source59.is_LiteralBool) {
                      bool _2146___mcc_h1364 = _source59.dtor_bvalue;
                      return this;
                    } else if (_source59.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _2147___mcc_h1366 = _source59.dtor_value;
                      bool _2148___mcc_h1367 = _source59.dtor_binary;
                      return this;
                    } else if (_source59.is_DeclareVar) {
                      RAST._IDeclareType _2149___mcc_h1370 = _source59.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _2150___mcc_h1371 = _source59.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _2151___mcc_h1372 = _source59.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _2152___mcc_h1373 = _source59.dtor_optRhs;
                      return this;
                    } else if (_source59.is_Assign) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2153___mcc_h1378 = _source59.dtor_names;
                      RAST._IExpr _2154___mcc_h1379 = _source59.dtor_rhs;
                      return this;
                    } else if (_source59.is_IfExpr) {
                      RAST._IExpr _2155___mcc_h1382 = _source59.dtor_cond;
                      RAST._IExpr _2156___mcc_h1383 = _source59.dtor_thn;
                      RAST._IExpr _2157___mcc_h1384 = _source59.dtor_els;
                      return this;
                    } else if (_source59.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _2158___mcc_h1388 = _source59.dtor_optCond;
                      RAST._IExpr _2159___mcc_h1389 = _source59.dtor_underlying;
                      return this;
                    } else if (_source59.is_For) {
                      Dafny.ISequence<Dafny.Rune> _2160___mcc_h1392 = _source59.dtor_name;
                      RAST._IExpr _2161___mcc_h1393 = _source59.dtor_range;
                      RAST._IExpr _2162___mcc_h1394 = _source59.dtor_body;
                      return this;
                    } else if (_source59.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _2163___mcc_h1398 = _source59.dtor_lbl;
                      RAST._IExpr _2164___mcc_h1399 = _source59.dtor_underlying;
                      return this;
                    } else if (_source59.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2165___mcc_h1402 = _source59.dtor_optLbl;
                      return this;
                    } else if (_source59.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2166___mcc_h1404 = _source59.dtor_optLbl;
                      return this;
                    } else if (_source59.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _2167___mcc_h1406 = _source59.dtor_optExpr;
                      return this;
                    } else if (_source59.is_CallType) {
                      RAST._IExpr _2168___mcc_h1408 = _source59.dtor_obj;
                      Dafny.ISequence<RAST._IType> _2169___mcc_h1409 = _source59.dtor_typeParameters;
                      return this;
                    } else if (_source59.is_Call) {
                      RAST._IExpr _2170___mcc_h1412 = _source59.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _2171___mcc_h1413 = _source59.dtor_arguments;
                      return this;
                    } else if (_source59.is_Select) {
                      RAST._IExpr _2172___mcc_h1416 = _source59.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _2173___mcc_h1417 = _source59.dtor_name;
                      return this;
                    } else {
                      RAST._IExpr _2174___mcc_h1420 = _source59.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _2175___mcc_h1421 = _source59.dtor_name;
                      if (object.Equals(_2175___mcc_h1421, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))) {
                        Dafny.ISequence<RAST._IExpr> _2176_args = _2124___mcc_h1319;
                        RAST._IExpr _2177_base = _2174___mcc_h1420;
                        if (((new BigInteger((_2176_args).Count)) == (BigInteger.One)) && ((object.Equals(_2177_base, RAST.__default.dafny__runtime)) || (object.Equals(_2177_base, RAST.__default.@global)))) {
                          RAST._IExpr _source60 = (_2176_args).Select(BigInteger.Zero);
                          if (_source60.is_RawExpr) {
                            Dafny.ISequence<Dafny.Rune> _2178___mcc_h1432 = _source60.dtor_content;
                            return this;
                          } else if (_source60.is_ExprFromType) {
                            RAST._IType _2179___mcc_h1434 = _source60.dtor_tpe;
                            return this;
                          } else if (_source60.is_Identifier) {
                            Dafny.ISequence<Dafny.Rune> _2180___mcc_h1436 = _source60.dtor_name;
                            return this;
                          } else if (_source60.is_Match) {
                            RAST._IExpr _2181___mcc_h1438 = _source60.dtor_matchee;
                            Dafny.ISequence<RAST._IMatchCase> _2182___mcc_h1439 = _source60.dtor_cases;
                            return this;
                          } else if (_source60.is_StmtExpr) {
                            RAST._IExpr _2183___mcc_h1442 = _source60.dtor_stmt;
                            RAST._IExpr _2184___mcc_h1443 = _source60.dtor_rhs;
                            return this;
                          } else if (_source60.is_Block) {
                            RAST._IExpr _2185___mcc_h1446 = _source60.dtor_underlying;
                            return this;
                          } else if (_source60.is_StructBuild) {
                            RAST._IExpr _2186___mcc_h1448 = _source60.dtor_underlying;
                            Dafny.ISequence<RAST._IAssignIdentifier> _2187___mcc_h1449 = _source60.dtor_assignments;
                            return this;
                          } else if (_source60.is_Tuple) {
                            Dafny.ISequence<RAST._IExpr> _2188___mcc_h1452 = _source60.dtor_arguments;
                            return this;
                          } else if (_source60.is_UnaryOp) {
                            Dafny.ISequence<Dafny.Rune> _2189___mcc_h1454 = _source60.dtor_op1;
                            RAST._IExpr _2190___mcc_h1455 = _source60.dtor_underlying;
                            DAST.Format._IUnOpFormat _2191___mcc_h1456 = _source60.dtor_format;
                            return this;
                          } else if (_source60.is_BinaryOp) {
                            Dafny.ISequence<Dafny.Rune> _2192___mcc_h1460 = _source60.dtor_op2;
                            RAST._IExpr _2193___mcc_h1461 = _source60.dtor_left;
                            RAST._IExpr _2194___mcc_h1462 = _source60.dtor_right;
                            DAST.Format._IBinOpFormat _2195___mcc_h1463 = _source60.dtor_format2;
                            return this;
                          } else if (_source60.is_TypeAscription) {
                            RAST._IExpr _2196___mcc_h1468 = _source60.dtor_left;
                            RAST._IType _2197___mcc_h1469 = _source60.dtor_tpe;
                            return this;
                          } else if (_source60.is_LiteralInt) {
                            Dafny.ISequence<Dafny.Rune> _2198___mcc_h1472 = _source60.dtor_value;
                            Dafny.ISequence<Dafny.Rune> _2199_number = _2198___mcc_h1472;
                            return RAST.Expr.create_LiteralInt(_2199_number);
                          } else if (_source60.is_LiteralBool) {
                            bool _2200___mcc_h1474 = _source60.dtor_bvalue;
                            return this;
                          } else if (_source60.is_LiteralString) {
                            Dafny.ISequence<Dafny.Rune> _2201___mcc_h1476 = _source60.dtor_value;
                            bool _2202___mcc_h1477 = _source60.dtor_binary;
                            Dafny.ISequence<Dafny.Rune> _2203_number = _2201___mcc_h1476;
                            return RAST.Expr.create_LiteralInt(_2203_number);
                          } else if (_source60.is_DeclareVar) {
                            RAST._IDeclareType _2204___mcc_h1480 = _source60.dtor_declareType;
                            Dafny.ISequence<Dafny.Rune> _2205___mcc_h1481 = _source60.dtor_name;
                            Std.Wrappers._IOption<RAST._IType> _2206___mcc_h1482 = _source60.dtor_optType;
                            Std.Wrappers._IOption<RAST._IExpr> _2207___mcc_h1483 = _source60.dtor_optRhs;
                            return this;
                          } else if (_source60.is_Assign) {
                            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2208___mcc_h1488 = _source60.dtor_names;
                            RAST._IExpr _2209___mcc_h1489 = _source60.dtor_rhs;
                            return this;
                          } else if (_source60.is_IfExpr) {
                            RAST._IExpr _2210___mcc_h1492 = _source60.dtor_cond;
                            RAST._IExpr _2211___mcc_h1493 = _source60.dtor_thn;
                            RAST._IExpr _2212___mcc_h1494 = _source60.dtor_els;
                            return this;
                          } else if (_source60.is_Loop) {
                            Std.Wrappers._IOption<RAST._IExpr> _2213___mcc_h1498 = _source60.dtor_optCond;
                            RAST._IExpr _2214___mcc_h1499 = _source60.dtor_underlying;
                            return this;
                          } else if (_source60.is_For) {
                            Dafny.ISequence<Dafny.Rune> _2215___mcc_h1502 = _source60.dtor_name;
                            RAST._IExpr _2216___mcc_h1503 = _source60.dtor_range;
                            RAST._IExpr _2217___mcc_h1504 = _source60.dtor_body;
                            return this;
                          } else if (_source60.is_Labelled) {
                            Dafny.ISequence<Dafny.Rune> _2218___mcc_h1508 = _source60.dtor_lbl;
                            RAST._IExpr _2219___mcc_h1509 = _source60.dtor_underlying;
                            return this;
                          } else if (_source60.is_Break) {
                            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2220___mcc_h1512 = _source60.dtor_optLbl;
                            return this;
                          } else if (_source60.is_Continue) {
                            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2221___mcc_h1514 = _source60.dtor_optLbl;
                            return this;
                          } else if (_source60.is_Return) {
                            Std.Wrappers._IOption<RAST._IExpr> _2222___mcc_h1516 = _source60.dtor_optExpr;
                            return this;
                          } else if (_source60.is_CallType) {
                            RAST._IExpr _2223___mcc_h1518 = _source60.dtor_obj;
                            Dafny.ISequence<RAST._IType> _2224___mcc_h1519 = _source60.dtor_typeParameters;
                            return this;
                          } else if (_source60.is_Call) {
                            RAST._IExpr _2225___mcc_h1522 = _source60.dtor_obj;
                            Dafny.ISequence<RAST._IExpr> _2226___mcc_h1523 = _source60.dtor_arguments;
                            return this;
                          } else if (_source60.is_Select) {
                            RAST._IExpr _2227___mcc_h1526 = _source60.dtor_obj;
                            Dafny.ISequence<Dafny.Rune> _2228___mcc_h1527 = _source60.dtor_name;
                            return this;
                          } else {
                            RAST._IExpr _2229___mcc_h1530 = _source60.dtor_obj;
                            Dafny.ISequence<Dafny.Rune> _2230___mcc_h1531 = _source60.dtor_name;
                            return this;
                          }
                        } else {
                          return this;
                        }
                      } else {
                        return this;
                      }
                    }
                  } else if (_source58.is_Select) {
                    RAST._IExpr _2231___mcc_h1424 = _source58.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _2232___mcc_h1425 = _source58.dtor_name;
                    return this;
                  } else {
                    RAST._IExpr _2233___mcc_h1428 = _source58.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _2234___mcc_h1429 = _source58.dtor_name;
                    return this;
                  }
                } else {
                  return this;
                }
              }
            }
          } else {
            return this;
          }
        }
      } else if (_source40.is_Select) {
        RAST._IExpr _2235___mcc_h1220 = _source40.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2236___mcc_h1221 = _source40.dtor_name;
        return this;
      } else {
        RAST._IExpr _2237___mcc_h1224 = _source40.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2238___mcc_h1225 = _source40.dtor_name;
        return this;
      }
    }
    public bool LeftRequiresParentheses(RAST._IExpr left) {
      return ((this).printingInfo).NeedParenthesesForLeft((left).printingInfo);
    }
    public _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> LeftParentheses(RAST._IExpr left) {
      if ((this).LeftRequiresParentheses(left)) {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      }
    }
    public bool RightRequiresParentheses(RAST._IExpr right) {
      return ((this).printingInfo).NeedParenthesesForRight((right).printingInfo);
    }
    public _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> RightParentheses(RAST._IExpr right) {
      if ((this).RightRequiresParentheses(right)) {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> RightMostIdentifier() {
      RAST._IExpr _source61 = this;
      if (_source61.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2239___mcc_h0 = _source61.dtor_content;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_ExprFromType) {
        RAST._IType _2240___mcc_h2 = _source61.dtor_tpe;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2241___mcc_h4 = _source61.dtor_name;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Match) {
        RAST._IExpr _2242___mcc_h6 = _source61.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2243___mcc_h7 = _source61.dtor_cases;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_StmtExpr) {
        RAST._IExpr _2244___mcc_h10 = _source61.dtor_stmt;
        RAST._IExpr _2245___mcc_h11 = _source61.dtor_rhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Block) {
        RAST._IExpr _2246___mcc_h14 = _source61.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_StructBuild) {
        RAST._IExpr _2247___mcc_h16 = _source61.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2248___mcc_h17 = _source61.dtor_assignments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2249___mcc_h20 = _source61.dtor_arguments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2250___mcc_h22 = _source61.dtor_op1;
        RAST._IExpr _2251___mcc_h23 = _source61.dtor_underlying;
        DAST.Format._IUnOpFormat _2252___mcc_h24 = _source61.dtor_format;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2253___mcc_h28 = _source61.dtor_op2;
        RAST._IExpr _2254___mcc_h29 = _source61.dtor_left;
        RAST._IExpr _2255___mcc_h30 = _source61.dtor_right;
        DAST.Format._IBinOpFormat _2256___mcc_h31 = _source61.dtor_format2;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_TypeAscription) {
        RAST._IExpr _2257___mcc_h36 = _source61.dtor_left;
        RAST._IType _2258___mcc_h37 = _source61.dtor_tpe;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2259___mcc_h40 = _source61.dtor_value;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_LiteralBool) {
        bool _2260___mcc_h42 = _source61.dtor_bvalue;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2261___mcc_h44 = _source61.dtor_value;
        bool _2262___mcc_h45 = _source61.dtor_binary;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_DeclareVar) {
        RAST._IDeclareType _2263___mcc_h48 = _source61.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2264___mcc_h49 = _source61.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2265___mcc_h50 = _source61.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2266___mcc_h51 = _source61.dtor_optRhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2267___mcc_h56 = _source61.dtor_names;
        RAST._IExpr _2268___mcc_h57 = _source61.dtor_rhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_IfExpr) {
        RAST._IExpr _2269___mcc_h60 = _source61.dtor_cond;
        RAST._IExpr _2270___mcc_h61 = _source61.dtor_thn;
        RAST._IExpr _2271___mcc_h62 = _source61.dtor_els;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2272___mcc_h66 = _source61.dtor_optCond;
        RAST._IExpr _2273___mcc_h67 = _source61.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_For) {
        Dafny.ISequence<Dafny.Rune> _2274___mcc_h70 = _source61.dtor_name;
        RAST._IExpr _2275___mcc_h71 = _source61.dtor_range;
        RAST._IExpr _2276___mcc_h72 = _source61.dtor_body;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2277___mcc_h76 = _source61.dtor_lbl;
        RAST._IExpr _2278___mcc_h77 = _source61.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2279___mcc_h80 = _source61.dtor_optLbl;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2280___mcc_h82 = _source61.dtor_optLbl;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2281___mcc_h84 = _source61.dtor_optExpr;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_CallType) {
        RAST._IExpr _2282___mcc_h86 = _source61.dtor_obj;
        Dafny.ISequence<RAST._IType> _2283___mcc_h87 = _source61.dtor_typeParameters;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Call) {
        RAST._IExpr _2284___mcc_h90 = _source61.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2285___mcc_h91 = _source61.dtor_arguments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Select) {
        RAST._IExpr _2286___mcc_h94 = _source61.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2287___mcc_h95 = _source61.dtor_name;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else {
        RAST._IExpr _2288___mcc_h98 = _source61.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2289___mcc_h99 = _source61.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2290_id = _2289___mcc_h99;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_2290_id);
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      var _pat_let_tv4 = ind;
      RAST._IExpr _source62 = (this).Optimize();
      if (_source62.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2291___mcc_h0 = _source62.dtor_content;
        RAST._IExpr _2292_r = (this).Optimize();
        return RAST.__default.AddIndent((_2292_r).dtor_content, ind);
      } else if (_source62.is_ExprFromType) {
        RAST._IType _2293___mcc_h2 = _source62.dtor_tpe;
        RAST._IType _2294_t = _2293___mcc_h2;
        return (_2294_t)._ToString(ind);
      } else if (_source62.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2295___mcc_h4 = _source62.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2296_name = _2295___mcc_h4;
        return _2296_name;
      } else if (_source62.is_Match) {
        RAST._IExpr _2297___mcc_h6 = _source62.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2298___mcc_h7 = _source62.dtor_cases;
        Dafny.ISequence<RAST._IMatchCase> _2299_cases = _2298___mcc_h7;
        RAST._IExpr _2300_matchee = _2297___mcc_h6;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match "), (_2300_matchee)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IMatchCase>(_2299_cases, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IMatchCase, Dafny.ISequence<Dafny.Rune>>>>((_2301_ind) => ((System.Func<RAST._IMatchCase, Dafny.ISequence<Dafny.Rune>>)((_2302_c) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2301_ind), RAST.__default.IND), (_2302_c)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2301_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_StmtExpr) {
        RAST._IExpr _2303___mcc_h10 = _source62.dtor_stmt;
        RAST._IExpr _2304___mcc_h11 = _source62.dtor_rhs;
        RAST._IExpr _2305_rhs = _2304___mcc_h11;
        RAST._IExpr _2306_stmt = _2303___mcc_h10;
        if (((_2306_stmt).is_RawExpr) && (((_2306_stmt).dtor_content).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) {
          return (_2305_rhs)._ToString(ind);
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_2306_stmt)._ToString(ind), (((_2306_stmt).NoExtraSemicolonAfter()) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), (_2305_rhs)._ToString(ind));
        }
      } else if (_source62.is_Block) {
        RAST._IExpr _2307___mcc_h14 = _source62.dtor_underlying;
        RAST._IExpr _2308_underlying = _2307___mcc_h14;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n"), ind), RAST.__default.IND), (_2308_underlying)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_StructBuild) {
        RAST._IExpr _2309___mcc_h16 = _source62.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2310___mcc_h17 = _source62.dtor_assignments;
        Dafny.ISequence<RAST._IAssignIdentifier> _2311_assignments = _2310___mcc_h17;
        RAST._IExpr _2312_name = _2309___mcc_h16;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_2312_name)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IAssignIdentifier>(_2311_assignments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IAssignIdentifier, Dafny.ISequence<Dafny.Rune>>>>((_2313_ind) => ((System.Func<RAST._IAssignIdentifier, Dafny.ISequence<Dafny.Rune>>)((_2314_assignment) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2313_ind), RAST.__default.IND), (_2314_assignment)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2313_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), (((new BigInteger((_2311_assignments).Count)).Sign == 1) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2315___mcc_h20 = _source62.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _2316_arguments = _2315___mcc_h20;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._IExpr>(_2316_arguments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>>>((_2317_ind) => ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_2318_arg) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2317_ind), RAST.__default.IND), (_2318_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2317_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), (((new BigInteger((_2316_arguments).Count)).Sign == 1) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else if (_source62.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2319___mcc_h22 = _source62.dtor_op1;
        RAST._IExpr _2320___mcc_h23 = _source62.dtor_underlying;
        DAST.Format._IUnOpFormat _2321___mcc_h24 = _source62.dtor_format;
        DAST.Format._IUnOpFormat _2322_format = _2321___mcc_h24;
        RAST._IExpr _2323_underlying = _2320___mcc_h23;
        Dafny.ISequence<Dafny.Rune> _2324_op = _2319___mcc_h22;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs41 = ((((this).printingInfo).NeedParenthesesFor((_2323_underlying).printingInfo)) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))) : (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
        Dafny.ISequence<Dafny.Rune> _2325_leftP = _let_tmp_rhs41.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2326_rightP = _let_tmp_rhs41.dtor__1;
        Dafny.ISequence<Dafny.Rune> _2327_leftOp = ((((_2324_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"))) && (!(_2325_leftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")))) ? (Dafny.Sequence<Dafny.Rune>.Concat(_2324_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "))) : ((((_2324_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (_2324_op))));
        Dafny.ISequence<Dafny.Rune> _2328_rightOp = (((_2324_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) ? (_2324_op) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2327_leftOp, _2325_leftP), (_2323_underlying)._ToString(ind)), _2326_rightP), _2328_rightOp);
      } else if (_source62.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2329___mcc_h28 = _source62.dtor_op2;
        RAST._IExpr _2330___mcc_h29 = _source62.dtor_left;
        RAST._IExpr _2331___mcc_h30 = _source62.dtor_right;
        DAST.Format._IBinOpFormat _2332___mcc_h31 = _source62.dtor_format2;
        DAST.Format._IBinOpFormat _2333_format = _2332___mcc_h31;
        RAST._IExpr _2334_right = _2331___mcc_h30;
        RAST._IExpr _2335_left = _2330___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _2336_op2 = _2329___mcc_h28;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs42 = (this).LeftParentheses(_2335_left);
        Dafny.ISequence<Dafny.Rune> _2337_leftLeftP = _let_tmp_rhs42.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2338_leftRighP = _let_tmp_rhs42.dtor__1;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs43 = (this).RightParentheses(_2334_right);
        Dafny.ISequence<Dafny.Rune> _2339_rightLeftP = _let_tmp_rhs43.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2340_rightRightP = _let_tmp_rhs43.dtor__1;
        Dafny.ISequence<Dafny.Rune> _2341_opRendered = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), _2336_op2), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
        Dafny.ISequence<Dafny.Rune> _2342_indLeft = (((_2337_leftLeftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("))) ? (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)) : (ind));
        Dafny.ISequence<Dafny.Rune> _2343_indRight = (((_2339_rightLeftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("))) ? (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)) : (ind));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2337_leftLeftP, (_2335_left)._ToString(_2342_indLeft)), _2338_leftRighP), _2341_opRendered), _2339_rightLeftP), (_2334_right)._ToString(_2343_indRight)), _2340_rightRightP);
      } else if (_source62.is_TypeAscription) {
        RAST._IExpr _2344___mcc_h36 = _source62.dtor_left;
        RAST._IType _2345___mcc_h37 = _source62.dtor_tpe;
        RAST._IType _2346_tpe = _2345___mcc_h37;
        RAST._IExpr _2347_left = _2344___mcc_h36;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs44 = (this).LeftParentheses(_2347_left);
        Dafny.ISequence<Dafny.Rune> _2348_leftLeftP = _let_tmp_rhs44.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2349_leftRightP = _let_tmp_rhs44.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2348_leftLeftP, (_2347_left)._ToString(RAST.__default.IND)), _2349_leftRightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ")), (_2346_tpe)._ToString(RAST.__default.IND));
      } else if (_source62.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2350___mcc_h40 = _source62.dtor_value;
        Dafny.ISequence<Dafny.Rune> _2351_number = _2350___mcc_h40;
        return _2351_number;
      } else if (_source62.is_LiteralBool) {
        bool _2352___mcc_h42 = _source62.dtor_bvalue;
        bool _2353_b = _2352___mcc_h42;
        if (_2353_b) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true");
        } else {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false");
        }
      } else if (_source62.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2354___mcc_h44 = _source62.dtor_value;
        bool _2355___mcc_h45 = _source62.dtor_binary;
        bool _2356_binary = _2355___mcc_h45;
        Dafny.ISequence<Dafny.Rune> _2357_characters = _2354___mcc_h44;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(((_2356_binary) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("b")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\"")), _2357_characters), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\""));
      } else if (_source62.is_DeclareVar) {
        RAST._IDeclareType _2358___mcc_h48 = _source62.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2359___mcc_h49 = _source62.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2360___mcc_h50 = _source62.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2361___mcc_h51 = _source62.dtor_optRhs;
        Std.Wrappers._IOption<RAST._IExpr> _2362_optExpr = _2361___mcc_h51;
        Std.Wrappers._IOption<RAST._IType> _2363_optType = _2360___mcc_h50;
        Dafny.ISequence<Dafny.Rune> _2364_name = _2359___mcc_h49;
        RAST._IDeclareType _2365_declareType = _2358___mcc_h48;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let "), ((object.Equals(_2365_declareType, RAST.DeclareType.create_MUT())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), _2364_name), (((_2363_optType).is_Some) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": "), ((_2363_optType).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), (((_2362_optExpr).is_Some) ? (Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>(((_2362_optExpr).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)), _pat_let6_0 => Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>(_pat_let6_0, _2366_optExprString => (((_2366_optExprString).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("= /*issue with empty RHS*/"), ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_source63) => {
          if (_source63.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _2367___mcc_h102 = _source63.dtor_content;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty Raw expr");
          } else if (_source63.is_ExprFromType) {
            RAST._IType _2368___mcc_h104 = _source63.dtor_tpe;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _2369___mcc_h106 = _source63.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Match) {
            RAST._IExpr _2370___mcc_h108 = _source63.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _2371___mcc_h109 = _source63.dtor_cases;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_StmtExpr) {
            RAST._IExpr _2372___mcc_h112 = _source63.dtor_stmt;
            RAST._IExpr _2373___mcc_h113 = _source63.dtor_rhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Block) {
            RAST._IExpr _2374___mcc_h116 = _source63.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_StructBuild) {
            RAST._IExpr _2375___mcc_h118 = _source63.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _2376___mcc_h119 = _source63.dtor_assignments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _2377___mcc_h122 = _source63.dtor_arguments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _2378___mcc_h124 = _source63.dtor_op1;
            RAST._IExpr _2379___mcc_h125 = _source63.dtor_underlying;
            DAST.Format._IUnOpFormat _2380___mcc_h126 = _source63.dtor_format;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _2381___mcc_h130 = _source63.dtor_op2;
            RAST._IExpr _2382___mcc_h131 = _source63.dtor_left;
            RAST._IExpr _2383___mcc_h132 = _source63.dtor_right;
            DAST.Format._IBinOpFormat _2384___mcc_h133 = _source63.dtor_format2;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_TypeAscription) {
            RAST._IExpr _2385___mcc_h138 = _source63.dtor_left;
            RAST._IType _2386___mcc_h139 = _source63.dtor_tpe;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _2387___mcc_h142 = _source63.dtor_value;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty int literal");
          } else if (_source63.is_LiteralBool) {
            bool _2388___mcc_h144 = _source63.dtor_bvalue;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _2389___mcc_h146 = _source63.dtor_value;
            bool _2390___mcc_h147 = _source63.dtor_binary;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty string literal");
          } else if (_source63.is_DeclareVar) {
            RAST._IDeclareType _2391___mcc_h150 = _source63.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _2392___mcc_h151 = _source63.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _2393___mcc_h152 = _source63.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _2394___mcc_h153 = _source63.dtor_optRhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2395___mcc_h158 = _source63.dtor_names;
            RAST._IExpr _2396___mcc_h159 = _source63.dtor_rhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_IfExpr) {
            RAST._IExpr _2397___mcc_h162 = _source63.dtor_cond;
            RAST._IExpr _2398___mcc_h163 = _source63.dtor_thn;
            RAST._IExpr _2399___mcc_h164 = _source63.dtor_els;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _2400___mcc_h168 = _source63.dtor_optCond;
            RAST._IExpr _2401___mcc_h169 = _source63.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_For) {
            Dafny.ISequence<Dafny.Rune> _2402___mcc_h172 = _source63.dtor_name;
            RAST._IExpr _2403___mcc_h173 = _source63.dtor_range;
            RAST._IExpr _2404___mcc_h174 = _source63.dtor_body;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _2405___mcc_h178 = _source63.dtor_lbl;
            RAST._IExpr _2406___mcc_h179 = _source63.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2407___mcc_h182 = _source63.dtor_optLbl;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2408___mcc_h184 = _source63.dtor_optLbl;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _2409___mcc_h186 = _source63.dtor_optExpr;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_CallType) {
            RAST._IExpr _2410___mcc_h188 = _source63.dtor_obj;
            Dafny.ISequence<RAST._IType> _2411___mcc_h189 = _source63.dtor_typeParameters;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Call) {
            RAST._IExpr _2412___mcc_h192 = _source63.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _2413___mcc_h193 = _source63.dtor_arguments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Select) {
            RAST._IExpr _2414___mcc_h196 = _source63.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2415___mcc_h197 = _source63.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else {
            RAST._IExpr _2416___mcc_h200 = _source63.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2417___mcc_h201 = _source63.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          }
        }))((_2362_optExpr).dtor_value))) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "), _2366_optExprString)))))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source62.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2418___mcc_h56 = _source62.dtor_names;
        RAST._IExpr _2419___mcc_h57 = _source62.dtor_rhs;
        RAST._IExpr _2420_expr = _2419___mcc_h57;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2421_names = _2418___mcc_h56;
        Dafny.ISequence<Dafny.Rune> _2422_lhs = (((new BigInteger((_2421_names).Count)) == (BigInteger.One)) ? (Dafny.Sequence<Dafny.Rune>.Concat((_2421_names).Select(BigInteger.Zero), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "))) : ((((new BigInteger((_2421_names).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_ = ")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<Dafny.ISequence<Dafny.Rune>>(_2421_names, ((System.Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>)((_2423_name) => {
          return _2423_name;
        })), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") = "))))));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2422_lhs, (_2420_expr)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source62.is_IfExpr) {
        RAST._IExpr _2424___mcc_h60 = _source62.dtor_cond;
        RAST._IExpr _2425___mcc_h61 = _source62.dtor_thn;
        RAST._IExpr _2426___mcc_h62 = _source62.dtor_els;
        RAST._IExpr _2427_els = _2426___mcc_h62;
        RAST._IExpr _2428_thn = _2425___mcc_h61;
        RAST._IExpr _2429_cond = _2424___mcc_h60;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if "), (_2429_cond)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2428_thn)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}")), ((object.Equals(_2427_els, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" else {\n"), ind), RAST.__default.IND), (_2427_els)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}")))));
      } else if (_source62.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2430___mcc_h66 = _source62.dtor_optCond;
        RAST._IExpr _2431___mcc_h67 = _source62.dtor_underlying;
        RAST._IExpr _2432_underlying = _2431___mcc_h67;
        Std.Wrappers._IOption<RAST._IExpr> _2433_optCond = _2430___mcc_h66;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(((System.Func<Std.Wrappers._IOption<RAST._IExpr>, Dafny.ISequence<Dafny.Rune>>)((_source64) => {
          if (_source64.is_None) {
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop");
          } else {
            RAST._IExpr _2434___mcc_h204 = _source64.dtor_value;
            RAST._IExpr _2435_c = _2434___mcc_h204;
            return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while "), (_2435_c)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_pat_let_tv4, RAST.__default.IND)));
          }
        }))(_2433_optCond), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2432_underlying)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_For) {
        Dafny.ISequence<Dafny.Rune> _2436___mcc_h70 = _source62.dtor_name;
        RAST._IExpr _2437___mcc_h71 = _source62.dtor_range;
        RAST._IExpr _2438___mcc_h72 = _source62.dtor_body;
        RAST._IExpr _2439_body = _2438___mcc_h72;
        RAST._IExpr _2440_range = _2437___mcc_h71;
        Dafny.ISequence<Dafny.Rune> _2441_name = _2436___mcc_h70;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for "), _2441_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" in ")), (_2440_range)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2439_body)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2442___mcc_h76 = _source62.dtor_lbl;
        RAST._IExpr _2443___mcc_h77 = _source62.dtor_underlying;
        RAST._IExpr _2444_underlying = _2443___mcc_h77;
        Dafny.ISequence<Dafny.Rune> _2445_name = _2442___mcc_h76;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("'"), _2445_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_2444_underlying)._ToString(ind));
      } else if (_source62.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2446___mcc_h80 = _source62.dtor_optLbl;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2447_optLbl = _2446___mcc_h80;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source65 = _2447_optLbl;
        if (_source65.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break;");
        } else {
          Dafny.ISequence<Dafny.Rune> _2448___mcc_h205 = _source65.dtor_value;
          Dafny.ISequence<Dafny.Rune> _2449_lbl = _2448___mcc_h205;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break '"), _2449_lbl), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
        }
      } else if (_source62.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2450___mcc_h82 = _source62.dtor_optLbl;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2451_optLbl = _2450___mcc_h82;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source66 = _2451_optLbl;
        if (_source66.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue;");
        } else {
          Dafny.ISequence<Dafny.Rune> _2452___mcc_h206 = _source66.dtor_value;
          Dafny.ISequence<Dafny.Rune> _2453_lbl = _2452___mcc_h206;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue '"), _2453_lbl), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
        }
      } else if (_source62.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2454___mcc_h84 = _source62.dtor_optExpr;
        Std.Wrappers._IOption<RAST._IExpr> _2455_optExpr = _2454___mcc_h84;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), (((_2455_optExpr).is_Some) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), ((_2455_optExpr).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source62.is_CallType) {
        RAST._IExpr _2456___mcc_h86 = _source62.dtor_obj;
        Dafny.ISequence<RAST._IType> _2457___mcc_h87 = _source62.dtor_typeParameters;
        Dafny.ISequence<RAST._IType> _2458_tpes = _2457___mcc_h87;
        RAST._IExpr _2459_expr = _2456___mcc_h86;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs45 = (this).LeftParentheses(_2459_expr);
        Dafny.ISequence<Dafny.Rune> _2460_leftP = _let_tmp_rhs45.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2461_rightP = _let_tmp_rhs45.dtor__1;
        if ((_2458_tpes).Equals(Dafny.Sequence<RAST._IType>.FromElements())) {
          return (_2459_expr)._ToString(ind);
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2460_leftP, (_2459_expr)._ToString(ind)), _2461_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::<")), RAST.__default.SeqToString<RAST._IType>(_2458_tpes, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_2462_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_2463_tpe) => {
            return (_2463_tpe)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2462_ind, RAST.__default.IND));
          })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
        }
      } else if (_source62.is_Call) {
        RAST._IExpr _2464___mcc_h90 = _source62.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2465___mcc_h91 = _source62.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _2466_args = _2465___mcc_h91;
        RAST._IExpr _2467_expr = _2464___mcc_h90;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs46 = (this).LeftParentheses(_2467_expr);
        Dafny.ISequence<Dafny.Rune> _2468_leftP = _let_tmp_rhs46.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2469_rightP = _let_tmp_rhs46.dtor__1;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs47 = ((System.Func<Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>>, _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>>)((_source67) => {
          if (_source67.is_None) {
            return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          } else {
            Dafny.ISequence<Dafny.Rune> _2470___mcc_h207 = _source67.dtor_value;
            if (object.Equals(_2470___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("["), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            } else if (object.Equals(_2470___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("["), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            } else if (object.Equals(_2470___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
            } else if (object.Equals(_2470___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
            } else {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
            }
          }
        }))((_2467_expr).RightMostIdentifier());
        Dafny.ISequence<Dafny.Rune> _2471_leftCallP = _let_tmp_rhs47.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2472_rightCallP = _let_tmp_rhs47.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2468_leftP, (_2467_expr)._ToString(ind)), _2469_rightP), _2471_leftCallP), RAST.__default.SeqToString<RAST._IExpr>(_2466_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>>>((_2473_ind) => ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_2474_arg) => {
          return (_2474_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2473_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), _2472_rightCallP);
      } else if (_source62.is_Select) {
        RAST._IExpr _2475___mcc_h94 = _source62.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2476___mcc_h95 = _source62.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2477_name = _2476___mcc_h95;
        RAST._IExpr _2478_expression = _2475___mcc_h94;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs48 = (this).LeftParentheses(_2478_expression);
        Dafny.ISequence<Dafny.Rune> _2479_leftP = _let_tmp_rhs48.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2480_rightP = _let_tmp_rhs48.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2479_leftP, (_2478_expression)._ToString(ind)), _2480_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _2477_name);
      } else {
        RAST._IExpr _2481___mcc_h98 = _source62.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2482___mcc_h99 = _source62.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2483_name = _2482___mcc_h99;
        RAST._IExpr _2484_expression = _2481___mcc_h98;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs49 = (this).LeftParentheses(_2484_expression);
        Dafny.ISequence<Dafny.Rune> _2485_leftP = _let_tmp_rhs49.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2486_rightP = _let_tmp_rhs49.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2485_leftP, (_2484_expression)._ToString(ind)), _2486_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2483_name);
      }
    }
    public RAST._IExpr Then(RAST._IExpr rhs2) {
      if ((this).is_StmtExpr) {
        return RAST.Expr.create_StmtExpr((this).dtor_stmt, ((this).dtor_rhs).Then(rhs2));
      } else if (object.Equals(this, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) {
        return rhs2;
      } else {
        return RAST.Expr.create_StmtExpr(this, rhs2);
      }
    }
    public RAST._IExpr Sel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Expr.create_Select(this, name);
    }
    public RAST._IExpr MSel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Expr.create_MemberSelect(this, name);
    }
    public RAST._IExpr ApplyType(Dafny.ISequence<RAST._IType> typeParameters) {
      return RAST.Expr.create_CallType(this, typeParameters);
    }
    public RAST._IExpr ApplyType1(RAST._IType typeParameter) {
      return RAST.Expr.create_CallType(this, Dafny.Sequence<RAST._IType>.FromElements(typeParameter));
    }
    public RAST._IExpr Apply(Dafny.ISequence<RAST._IExpr> arguments) {
      return RAST.Expr.create_Call(this, arguments);
    }
    public RAST._IExpr Apply1(RAST._IExpr argument) {
      return RAST.Expr.create_Call(this, Dafny.Sequence<RAST._IExpr>.FromElements(argument));
    }
    public RAST._IPrintingInfo printingInfo { get {
      RAST._IExpr _source68 = this;
      if (_source68.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2487___mcc_h0 = _source68.dtor_content;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_ExprFromType) {
        RAST._IType _2488___mcc_h2 = _source68.dtor_tpe;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2489___mcc_h4 = _source68.dtor_name;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_Match) {
        RAST._IExpr _2490___mcc_h6 = _source68.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2491___mcc_h7 = _source68.dtor_cases;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_StmtExpr) {
        RAST._IExpr _2492___mcc_h10 = _source68.dtor_stmt;
        RAST._IExpr _2493___mcc_h11 = _source68.dtor_rhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Block) {
        RAST._IExpr _2494___mcc_h14 = _source68.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_StructBuild) {
        RAST._IExpr _2495___mcc_h16 = _source68.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2496___mcc_h17 = _source68.dtor_assignments;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2497___mcc_h20 = _source68.dtor_arguments;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2498___mcc_h22 = _source68.dtor_op1;
        RAST._IExpr _2499___mcc_h23 = _source68.dtor_underlying;
        DAST.Format._IUnOpFormat _2500___mcc_h24 = _source68.dtor_format;
        DAST.Format._IUnOpFormat _2501_format = _2500___mcc_h24;
        RAST._IExpr _2502_underlying = _2499___mcc_h23;
        Dafny.ISequence<Dafny.Rune> _2503_op = _2498___mcc_h22;
        if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) {
          return RAST.PrintingInfo.create_SuffixPrecedence(new BigInteger(5));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else {
          return RAST.PrintingInfo.create_UnknownPrecedence();
        }
      } else if (_source68.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2504___mcc_h28 = _source68.dtor_op2;
        RAST._IExpr _2505___mcc_h29 = _source68.dtor_left;
        RAST._IExpr _2506___mcc_h30 = _source68.dtor_right;
        DAST.Format._IBinOpFormat _2507___mcc_h31 = _source68.dtor_format2;
        DAST.Format._IBinOpFormat _2508_format = _2507___mcc_h31;
        RAST._IExpr _2509_right = _2506___mcc_h30;
        RAST._IExpr _2510_left = _2505___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _2511_op2 = _2504___mcc_h28;
        if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(30), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(30), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(40), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(40), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(50), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(60), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(70), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(90), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(100), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".."))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("..="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(BigInteger.Zero, RAST.Associativity.create_RequiresParentheses());
        }
      } else if (_source68.is_TypeAscription) {
        RAST._IExpr _2512___mcc_h36 = _source68.dtor_left;
        RAST._IType _2513___mcc_h37 = _source68.dtor_tpe;
        RAST._IType _2514_tpe = _2513___mcc_h37;
        RAST._IExpr _2515_left = _2512___mcc_h36;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(10), RAST.Associativity.create_LeftToRight());
      } else if (_source68.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2516___mcc_h40 = _source68.dtor_value;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_LiteralBool) {
        bool _2517___mcc_h42 = _source68.dtor_bvalue;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2518___mcc_h44 = _source68.dtor_value;
        bool _2519___mcc_h45 = _source68.dtor_binary;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_DeclareVar) {
        RAST._IDeclareType _2520___mcc_h48 = _source68.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2521___mcc_h49 = _source68.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2522___mcc_h50 = _source68.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2523___mcc_h51 = _source68.dtor_optRhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2524___mcc_h56 = _source68.dtor_names;
        RAST._IExpr _2525___mcc_h57 = _source68.dtor_rhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_IfExpr) {
        RAST._IExpr _2526___mcc_h60 = _source68.dtor_cond;
        RAST._IExpr _2527___mcc_h61 = _source68.dtor_thn;
        RAST._IExpr _2528___mcc_h62 = _source68.dtor_els;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2529___mcc_h66 = _source68.dtor_optCond;
        RAST._IExpr _2530___mcc_h67 = _source68.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_For) {
        Dafny.ISequence<Dafny.Rune> _2531___mcc_h70 = _source68.dtor_name;
        RAST._IExpr _2532___mcc_h71 = _source68.dtor_range;
        RAST._IExpr _2533___mcc_h72 = _source68.dtor_body;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2534___mcc_h76 = _source68.dtor_lbl;
        RAST._IExpr _2535___mcc_h77 = _source68.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2536___mcc_h80 = _source68.dtor_optLbl;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2537___mcc_h82 = _source68.dtor_optLbl;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2538___mcc_h84 = _source68.dtor_optExpr;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_CallType) {
        RAST._IExpr _2539___mcc_h86 = _source68.dtor_obj;
        Dafny.ISequence<RAST._IType> _2540___mcc_h87 = _source68.dtor_typeParameters;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else if (_source68.is_Call) {
        RAST._IExpr _2541___mcc_h90 = _source68.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2542___mcc_h91 = _source68.dtor_arguments;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else if (_source68.is_Select) {
        RAST._IExpr _2543___mcc_h94 = _source68.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2544___mcc_h95 = _source68.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2545_name = _2544___mcc_h95;
        RAST._IExpr _2546_underlying = _2543___mcc_h94;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else {
        RAST._IExpr _2547___mcc_h98 = _source68.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2548___mcc_h99 = _source68.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2549_name = _2548___mcc_h99;
        RAST._IExpr _2550_underlying = _2547___mcc_h98;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      }
    } }
  }
  public class Expr_RawExpr : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Expr_RawExpr(Dafny.ISequence<Dafny.Rune> content) : base() {
      this._content = content;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_RawExpr(_content);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_RawExpr;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.RawExpr";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_ExprFromType : Expr {
    public readonly RAST._IType _tpe;
    public Expr_ExprFromType(RAST._IType tpe) : base() {
      this._tpe = tpe;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_ExprFromType(_tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_ExprFromType;
      return oth != null && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.ExprFromType";
      s += "(";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
  }
  public class Expr_Identifier : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_Identifier(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Identifier(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Identifier;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Identifier";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_Match : Expr {
    public readonly RAST._IExpr _matchee;
    public readonly Dafny.ISequence<RAST._IMatchCase> _cases;
    public Expr_Match(RAST._IExpr matchee, Dafny.ISequence<RAST._IMatchCase> cases) : base() {
      this._matchee = matchee;
      this._cases = cases;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Match(_matchee, _cases);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Match;
      return oth != null && object.Equals(this._matchee, oth._matchee) && object.Equals(this._cases, oth._cases);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._matchee));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cases));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Match";
      s += "(";
      s += Dafny.Helpers.ToString(this._matchee);
      s += ", ";
      s += Dafny.Helpers.ToString(this._cases);
      s += ")";
      return s;
    }
  }
  public class Expr_StmtExpr : Expr {
    public readonly RAST._IExpr _stmt;
    public readonly RAST._IExpr _rhs;
    public Expr_StmtExpr(RAST._IExpr stmt, RAST._IExpr rhs) : base() {
      this._stmt = stmt;
      this._rhs = rhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_StmtExpr(_stmt, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_StmtExpr;
      return oth != null && object.Equals(this._stmt, oth._stmt) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._stmt));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.StmtExpr";
      s += "(";
      s += Dafny.Helpers.ToString(this._stmt);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
  }
  public class Expr_Block : Expr {
    public readonly RAST._IExpr _underlying;
    public Expr_Block(RAST._IExpr underlying) : base() {
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Block(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Block;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Block";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_StructBuild : Expr {
    public readonly RAST._IExpr _underlying;
    public readonly Dafny.ISequence<RAST._IAssignIdentifier> _assignments;
    public Expr_StructBuild(RAST._IExpr underlying, Dafny.ISequence<RAST._IAssignIdentifier> assignments) : base() {
      this._underlying = underlying;
      this._assignments = assignments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_StructBuild(_underlying, _assignments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_StructBuild;
      return oth != null && object.Equals(this._underlying, oth._underlying) && object.Equals(this._assignments, oth._assignments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._assignments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.StructBuild";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ", ";
      s += Dafny.Helpers.ToString(this._assignments);
      s += ")";
      return s;
    }
  }
  public class Expr_Tuple : Expr {
    public readonly Dafny.ISequence<RAST._IExpr> _arguments;
    public Expr_Tuple(Dafny.ISequence<RAST._IExpr> arguments) : base() {
      this._arguments = arguments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Tuple(_arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Tuple;
      return oth != null && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Expr_UnaryOp : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _op1;
    public readonly RAST._IExpr _underlying;
    public readonly DAST.Format._IUnOpFormat _format;
    public Expr_UnaryOp(Dafny.ISequence<Dafny.Rune> op1, RAST._IExpr underlying, DAST.Format._IUnOpFormat format) : base() {
      this._op1 = op1;
      this._underlying = underlying;
      this._format = format;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_UnaryOp(_op1, _underlying, _format);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_UnaryOp;
      return oth != null && object.Equals(this._op1, oth._op1) && object.Equals(this._underlying, oth._underlying) && object.Equals(this._format, oth._format);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op1));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.UnaryOp";
      s += "(";
      s += this._op1.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format);
      s += ")";
      return s;
    }
  }
  public class Expr_BinaryOp : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _op2;
    public readonly RAST._IExpr _left;
    public readonly RAST._IExpr _right;
    public readonly DAST.Format._IBinOpFormat _format2;
    public Expr_BinaryOp(Dafny.ISequence<Dafny.Rune> op2, RAST._IExpr left, RAST._IExpr right, DAST.Format._IBinOpFormat format2) : base() {
      this._op2 = op2;
      this._left = left;
      this._right = right;
      this._format2 = format2;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_BinaryOp(_op2, _left, _right, _format2);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_BinaryOp;
      return oth != null && object.Equals(this._op2, oth._op2) && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right) && object.Equals(this._format2, oth._format2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op2));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.BinaryOp";
      s += "(";
      s += this._op2.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format2);
      s += ")";
      return s;
    }
  }
  public class Expr_TypeAscription : Expr {
    public readonly RAST._IExpr _left;
    public readonly RAST._IType _tpe;
    public Expr_TypeAscription(RAST._IExpr left, RAST._IType tpe) : base() {
      this._left = left;
      this._tpe = tpe;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_TypeAscription(_left, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_TypeAscription;
      return oth != null && object.Equals(this._left, oth._left) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.TypeAscription";
      s += "(";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralInt : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _value;
    public Expr_LiteralInt(Dafny.ISequence<Dafny.Rune> @value) : base() {
      this._value = @value;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralInt(_value);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralInt;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralInt";
      s += "(";
      s += this._value.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralBool : Expr {
    public readonly bool _bvalue;
    public Expr_LiteralBool(bool bvalue) : base() {
      this._bvalue = bvalue;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralBool(_bvalue);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralBool;
      return oth != null && this._bvalue == oth._bvalue;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._bvalue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralBool";
      s += "(";
      s += Dafny.Helpers.ToString(this._bvalue);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralString : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _value;
    public readonly bool _binary;
    public Expr_LiteralString(Dafny.ISequence<Dafny.Rune> @value, bool binary) : base() {
      this._value = @value;
      this._binary = binary;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralString(_value, _binary);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralString;
      return oth != null && object.Equals(this._value, oth._value) && this._binary == oth._binary;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._binary));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralString";
      s += "(";
      s += this._value.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._binary);
      s += ")";
      return s;
    }
  }
  public class Expr_DeclareVar : Expr {
    public readonly RAST._IDeclareType _declareType;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Std.Wrappers._IOption<RAST._IType> _optType;
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optRhs;
    public Expr_DeclareVar(RAST._IDeclareType declareType, Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<RAST._IType> optType, Std.Wrappers._IOption<RAST._IExpr> optRhs) : base() {
      this._declareType = declareType;
      this._name = name;
      this._optType = optType;
      this._optRhs = optRhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_DeclareVar(_declareType, _name, _optType, _optRhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_DeclareVar;
      return oth != null && object.Equals(this._declareType, oth._declareType) && object.Equals(this._name, oth._name) && object.Equals(this._optType, oth._optType) && object.Equals(this._optRhs, oth._optRhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._declareType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optRhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.DeclareVar";
      s += "(";
      s += Dafny.Helpers.ToString(this._declareType);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._optType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._optRhs);
      s += ")";
      return s;
    }
  }
  public class Expr_Assign : Expr {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly RAST._IExpr _rhs;
    public Expr_Assign(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, RAST._IExpr rhs) : base() {
      this._names = names;
      this._rhs = rhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Assign(_names, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Assign;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Assign";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
  }
  public class Expr_IfExpr : Expr {
    public readonly RAST._IExpr _cond;
    public readonly RAST._IExpr _thn;
    public readonly RAST._IExpr _els;
    public Expr_IfExpr(RAST._IExpr cond, RAST._IExpr thn, RAST._IExpr els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_IfExpr(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_IfExpr;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.IfExpr";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Expr_Loop : Expr {
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optCond;
    public readonly RAST._IExpr _underlying;
    public Expr_Loop(Std.Wrappers._IOption<RAST._IExpr> optCond, RAST._IExpr underlying) : base() {
      this._optCond = optCond;
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Loop(_optCond, _underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Loop;
      return oth != null && object.Equals(this._optCond, oth._optCond) && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optCond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Loop";
      s += "(";
      s += Dafny.Helpers.ToString(this._optCond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_For : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IExpr _range;
    public readonly RAST._IExpr _body;
    public Expr_For(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr range, RAST._IExpr body) : base() {
      this._name = name;
      this._range = range;
      this._body = body;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_For(_name, _range, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_For;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._range, oth._range) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.For";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Expr_Labelled : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _lbl;
    public readonly RAST._IExpr _underlying;
    public Expr_Labelled(Dafny.ISequence<Dafny.Rune> lbl, RAST._IExpr underlying) : base() {
      this._lbl = lbl;
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Labelled(_lbl, _underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Labelled;
      return oth != null && object.Equals(this._lbl, oth._lbl) && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lbl));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Labelled";
      s += "(";
      s += this._lbl.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_Break : Expr {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _optLbl;
    public Expr_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) : base() {
      this._optLbl = optLbl;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Break(_optLbl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Break;
      return oth != null && object.Equals(this._optLbl, oth._optLbl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optLbl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Break";
      s += "(";
      s += Dafny.Helpers.ToString(this._optLbl);
      s += ")";
      return s;
    }
  }
  public class Expr_Continue : Expr {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _optLbl;
    public Expr_Continue(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) : base() {
      this._optLbl = optLbl;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Continue(_optLbl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Continue;
      return oth != null && object.Equals(this._optLbl, oth._optLbl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optLbl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Continue";
      s += "(";
      s += Dafny.Helpers.ToString(this._optLbl);
      s += ")";
      return s;
    }
  }
  public class Expr_Return : Expr {
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optExpr;
    public Expr_Return(Std.Wrappers._IOption<RAST._IExpr> optExpr) : base() {
      this._optExpr = optExpr;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Return(_optExpr);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Return;
      return oth != null && object.Equals(this._optExpr, oth._optExpr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optExpr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Return";
      s += "(";
      s += Dafny.Helpers.ToString(this._optExpr);
      s += ")";
      return s;
    }
  }
  public class Expr_CallType : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<RAST._IType> _typeParameters;
    public Expr_CallType(RAST._IExpr obj, Dafny.ISequence<RAST._IType> typeParameters) : base() {
      this._obj = obj;
      this._typeParameters = typeParameters;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_CallType(_obj, _typeParameters);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_CallType;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._typeParameters, oth._typeParameters);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParameters));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.CallType";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParameters);
      s += ")";
      return s;
    }
  }
  public class Expr_Call : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<RAST._IExpr> _arguments;
    public Expr_Call(RAST._IExpr obj, Dafny.ISequence<RAST._IExpr> arguments) : base() {
      this._obj = obj;
      this._arguments = arguments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Call(_obj, _arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Call;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Expr_Select : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_Select(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._obj = obj;
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Select(_obj, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Select;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_MemberSelect : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_MemberSelect(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._obj = obj;
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_MemberSelect(_obj, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_MemberSelect;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.MemberSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IFn {
    bool is_Fn { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    Dafny.ISequence<RAST._IFormal> dtor_formals { get; }
    Std.Wrappers._IOption<RAST._IType> dtor_returnType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_body { get; }
    _IFn DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Fn : _IFn {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly Dafny.ISequence<RAST._IFormal> _formals;
    public readonly Std.Wrappers._IOption<RAST._IType> _returnType;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Std.Wrappers._IOption<RAST._IExpr> _body;
    public Fn(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      this._name = name;
      this._typeParams = typeParams;
      this._formals = formals;
      this._returnType = returnType;
      this._where = @where;
      this._body = body;
    }
    public _IFn DowncastClone() {
      if (this is _IFn dt) { return dt; }
      return new Fn(_name, _typeParams, _formals, _returnType, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fn;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._formals, oth._formals) && object.Equals(this._returnType, oth._returnType) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formals));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._returnType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fn.Fn";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._formals);
      s += ", ";
      s += Dafny.Helpers.ToString(this._returnType);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly RAST._IFn theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, Dafny.Sequence<RAST._IFormal>.Empty, Std.Wrappers.Option<RAST._IType>.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Std.Wrappers.Option<RAST._IExpr>.Default());
    public static RAST._IFn Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFn> _TYPE = new Dafny.TypeDescriptor<RAST._IFn>(RAST.Fn.Default());
    public static Dafny.TypeDescriptor<RAST._IFn> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFn create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      return new Fn(name, typeParams, formals, returnType, @where, body);
    }
    public static _IFn create_Fn(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      return create(name, typeParams, formals, returnType, @where, body);
    }
    public bool is_Fn { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<RAST._IFormal> dtor_formals {
      get {
        return this._formals;
      }
    }
    public Std.Wrappers._IOption<RAST._IType> dtor_returnType {
      get {
        return this._returnType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        return this._where;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      var _pat_let_tv5 = ind;
      var _pat_let_tv6 = ind;
      var _pat_let_tv7 = ind;
      var _pat_let_tv8 = ind;
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn "), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), RAST.__default.SeqToString<RAST._IFormal>((this).dtor_formals, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>>>((_2551_ind) => ((System.Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>)((_2552_formal) => {
        return (_2552_formal)._ToString(_2551_ind);
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), ((System.Func<Std.Wrappers._IOption<RAST._IType>, Dafny.ISequence<Dafny.Rune>>)((_source69) => {
        if (_source69.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
        } else {
          RAST._IType _2553___mcc_h0 = _source69.dtor_value;
          RAST._IType _2554_t = _2553___mcc_h0;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" -> "), (_2554_t)._ToString(_pat_let_tv5));
        }
      }))((this).dtor_returnType)), ((((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)))), ((System.Func<Std.Wrappers._IOption<RAST._IExpr>, Dafny.ISequence<Dafny.Rune>>)((_source70) => {
        if (_source70.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";");
        } else {
          RAST._IExpr _2555___mcc_h2 = _source70.dtor_value;
          RAST._IExpr _2556_body = _2555___mcc_h2;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n"), _pat_let_tv6), RAST.__default.IND), (_2556_body)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_pat_let_tv7, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), _pat_let_tv8), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        }
      }))((this).dtor_body));
    }
  }
} // end of namespace RAST
namespace DCOMP {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in113 = (i).Drop(new BigInteger(2));
            i = _in113;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in114 = (i).Drop(BigInteger.One);
        i = _in114;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2557___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2557___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _2557___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2557___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in115 = (i).Drop(new BigInteger(2));
        i = _in115;
        goto TAIL_CALL_START;
      } else {
        _2557___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2557___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in116 = (i).Drop(BigInteger.One);
        i = _in116;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2558___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2558___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _2558___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2558___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in117 = (i).Drop(BigInteger.One);
        i = _in117;
        goto TAIL_CALL_START;
      } else {
        _2558___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2558___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in118 = (i).Drop(BigInteger.One);
        i = _in118;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMP.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMP.__default.has__special(i)))) && (!(DCOMP.__default.reserved__rust).Contains(i))) && (!(DCOMP.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMP.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMP.__default.is__tuple__builder(i)) {
        return DCOMP.__default.better__tuple__builder__name(i);
      } else if ((DCOMP.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMP.__default.is__idiomatic__rust__id(i)) {
        return DCOMP.__default.idiomatic__rust(i);
      } else if (DCOMP.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _2559_r = DCOMP.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _2559_r);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static bool UnicodeChars { get {
      return true;
    } }
    public static Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if (DCOMP.__default.UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public static RAST._IType DafnyCharUnderlying { get {
      if (DCOMP.__default.UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMP._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMP._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMP._IOwnership>(DCOMP.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMP._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IUnassignedStatus {
    bool is_Unassigned { get; }
    bool is_WithTracker { get; }
    Dafny.ISequence<Dafny.Rune> dtor_tracker__name { get; }
    _IUnassignedStatus DowncastClone();
  }
  public abstract class UnassignedStatus : _IUnassignedStatus {
    public UnassignedStatus() {
    }
    private static readonly DCOMP._IUnassignedStatus theDefault = create_Unassigned();
    public static DCOMP._IUnassignedStatus Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IUnassignedStatus> _TYPE = new Dafny.TypeDescriptor<DCOMP._IUnassignedStatus>(DCOMP.UnassignedStatus.Default());
    public static Dafny.TypeDescriptor<DCOMP._IUnassignedStatus> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnassignedStatus create_Unassigned() {
      return new UnassignedStatus_Unassigned();
    }
    public static _IUnassignedStatus create_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) {
      return new UnassignedStatus_WithTracker(tracker__name);
    }
    public bool is_Unassigned { get { return this is UnassignedStatus_Unassigned; } }
    public bool is_WithTracker { get { return this is UnassignedStatus_WithTracker; } }
    public Dafny.ISequence<Dafny.Rune> dtor_tracker__name {
      get {
        var d = this;
        return ((UnassignedStatus_WithTracker)d)._tracker__name;
      }
    }
    public abstract _IUnassignedStatus DowncastClone();
  }
  public class UnassignedStatus_Unassigned : UnassignedStatus {
    public UnassignedStatus_Unassigned() : base() {
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_Unassigned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.UnassignedStatus_Unassigned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.UnassignedStatus.Unassigned";
      return s;
    }
  }
  public class UnassignedStatus_WithTracker : UnassignedStatus {
    public readonly Dafny.ISequence<Dafny.Rune> _tracker__name;
    public UnassignedStatus_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) : base() {
      this._tracker__name = tracker__name;
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_WithTracker(_tracker__name);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.UnassignedStatus_WithTracker;
      return oth != null && object.Equals(this._tracker__name, oth._tracker__name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tracker__name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.UnassignedStatus.WithTracker";
      s += "(";
      s += this._tracker__name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._names = names;
      this._types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_names, _types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Environment;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
    private static readonly DCOMP._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMP._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMP._IEnvironment>(DCOMP.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMP._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._types;
      }
    }
    public static DCOMP._IEnvironment Empty() {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).HasCopySemantics());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).HasCopySemantics(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
  }

  public partial class COMP {
    public COMP() {
    }
    public static RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<RAST._IModDecl> _2560_body;
      Dafny.ISequence<RAST._IModDecl> _out15;
      _out15 = DCOMP.COMP.GenModuleBody((mod).dtor_body, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
      _2560_body = _out15;
      s = (((mod).dtor_isExtern) ? (RAST.Mod.create_ExternMod(DCOMP.__default.escapeIdent((mod).dtor_name))) : (RAST.Mod.create_Mod(DCOMP.__default.escapeIdent((mod).dtor_name), _2560_body)));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((containingPath).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System")))) {
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements()))));
      }
      BigInteger _hi4 = new BigInteger((body).Count);
      for (BigInteger _2561_i = BigInteger.Zero; _2561_i < _hi4; _2561_i++) {
        Dafny.ISequence<RAST._IModDecl> _2562_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source71 = (body).Select(_2561_i);
        if (_source71.is_Module) {
          DAST._IModule _2563___mcc_h0 = _source71.dtor_Module_a0;
          DAST._IModule _2564_m = _2563___mcc_h0;
          RAST._IMod _2565_mm;
          RAST._IMod _out16;
          _out16 = DCOMP.COMP.GenModule(_2564_m, containingPath);
          _2565_mm = _out16;
          _2562_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_2565_mm));
        } else if (_source71.is_Class) {
          DAST._IClass _2566___mcc_h1 = _source71.dtor_Class_a0;
          DAST._IClass _2567_c = _2566___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out17;
          _out17 = DCOMP.COMP.GenClass(_2567_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_2567_c).dtor_name)));
          _2562_generated = _out17;
        } else if (_source71.is_Trait) {
          DAST._ITrait _2568___mcc_h2 = _source71.dtor_Trait_a0;
          DAST._ITrait _2569_t = _2568___mcc_h2;
          Dafny.ISequence<Dafny.Rune> _2570_tt;
          Dafny.ISequence<Dafny.Rune> _out18;
          _out18 = DCOMP.COMP.GenTrait(_2569_t, containingPath);
          _2570_tt = _out18;
          _2562_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_RawDecl(_2570_tt));
        } else if (_source71.is_Newtype) {
          DAST._INewtype _2571___mcc_h3 = _source71.dtor_Newtype_a0;
          DAST._INewtype _2572_n = _2571___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out19;
          _out19 = DCOMP.COMP.GenNewtype(_2572_n);
          _2562_generated = _out19;
        } else {
          DAST._IDatatype _2573___mcc_h4 = _source71.dtor_Datatype_a0;
          DAST._IDatatype _2574_d = _2573___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out20;
          _out20 = DCOMP.COMP.GenDatatype(_2574_d);
          _2562_generated = _out20;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _2562_generated);
      }
      return s;
    }
    public static void GenTypeParameters(Dafny.ISequence<DAST._IType> @params, out Dafny.ISet<DAST._IType> typeParamsSet, out Dafny.ISequence<RAST._ITypeParam> typeParams, out Dafny.ISequence<RAST._ITypeParam> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSet = Dafny.Set<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      BigInteger _2575_tpI;
      _2575_tpI = BigInteger.Zero;
      if ((new BigInteger((@params).Count)).Sign == 1) {
        while ((_2575_tpI) < (new BigInteger((@params).Count))) {
          DAST._IType _2576_tp;
          _2576_tp = (@params).Select(_2575_tpI);
          typeParamsSet = Dafny.Set<DAST._IType>.Union(typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2576_tp));
          RAST._IType _2577_genTp;
          RAST._IType _out21;
          _out21 = DCOMP.COMP.GenType(_2576_tp, false, false);
          _2577_genTp = _out21;
          typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_2577_genTp)._ToString(DCOMP.__default.IND), Dafny.Sequence<RAST._IType>.FromElements())));
          _2575_tpI = (_2575_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<RAST._IType> _2578_baseConstraints;
      _2578_baseConstraints = Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.StaticTrait);
      constrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(typeParams, _2578_baseConstraints);
    }
    public static Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2579_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2580_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2581_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2582_whereConstraints;
      Dafny.ISet<DAST._IType> _out22;
      Dafny.ISequence<RAST._ITypeParam> _out23;
      Dafny.ISequence<RAST._ITypeParam> _out24;
      Dafny.ISequence<Dafny.Rune> _out25;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out22, out _out23, out _out24, out _out25);
      _2579_typeParamsSet = _out22;
      _2580_sTypeParams = _out23;
      _2581_sConstrainedTypeParams = _out24;
      _2582_whereConstraints = _out25;
      Dafny.ISequence<Dafny.Rune> _2583_constrainedTypeParams;
      _2583_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2581_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IField> _2584_fields;
      _2584_fields = Dafny.Sequence<RAST._IField>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _2585_fieldInits;
      _2585_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _2586_fieldI;
      _2586_fieldI = BigInteger.Zero;
      while ((_2586_fieldI) < (new BigInteger(((c).dtor_fields).Count))) {
        DAST._IField _2587_field;
        _2587_field = ((c).dtor_fields).Select(_2586_fieldI);
        RAST._IType _2588_fieldType;
        RAST._IType _out26;
        _out26 = DCOMP.COMP.GenType(((_2587_field).dtor_formal).dtor_typ, false, false);
        _2588_fieldType = _out26;
        Dafny.ISequence<Dafny.Rune> _2589_fieldRustName;
        _2589_fieldRustName = DCOMP.__default.escapeIdent(((_2587_field).dtor_formal).dtor_name);
        _2584_fields = Dafny.Sequence<RAST._IField>.Concat(_2584_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PUB(), RAST.Formal.create(_2589_fieldRustName, _2588_fieldType))));
        Std.Wrappers._IOption<DAST._IExpression> _source72 = (_2587_field).dtor_defaultValue;
        if (_source72.is_None) {
          {
            RAST._IExpr _2590_default;
            _2590_default = RAST.__default.std__Default__default;
            _2585_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2585_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2589_fieldRustName, _2590_default)));
          }
        } else {
          DAST._IExpression _2591___mcc_h0 = _source72.dtor_value;
          DAST._IExpression _2592_e = _2591___mcc_h0;
          {
            RAST._IExpr _2593_expr;
            DCOMP._IOwnership _2594___v40;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2595___v41;
            RAST._IExpr _out27;
            DCOMP._IOwnership _out28;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out29;
            DCOMP.COMP.GenExpr(_2592_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out27, out _out28, out _out29);
            _2593_expr = _out27;
            _2594___v40 = _out28;
            _2595___v41 = _out29;
            _2585_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2585_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2589_fieldRustName, _2593_expr)));
          }
        }
        _2586_fieldI = (_2586_fieldI) + (BigInteger.One);
      }
      BigInteger _hi5 = new BigInteger(((c).dtor_typeParams).Count);
      for (BigInteger _2596_typeParamI = BigInteger.Zero; _2596_typeParamI < _hi5; _2596_typeParamI++) {
        RAST._IType _2597_tpeGen;
        RAST._IType _out30;
        _out30 = DCOMP.COMP.GenType(((c).dtor_typeParams).Select(_2596_typeParamI), false, false);
        _2597_tpeGen = _out30;
        _2584_fields = Dafny.Sequence<RAST._IField>.Concat(_2584_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2596_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_2597_tpeGen))))));
        _2585_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2585_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2596_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
      }
      Dafny.ISequence<Dafny.Rune> _2598_datatypeName;
      _2598_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      RAST._IStruct _2599_struct;
      _2599_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _2598_datatypeName, _2580_sTypeParams, RAST.Fields.create_NamedFields(_2584_fields));
      Dafny.ISequence<RAST._IType> _2600_typeParamsAsTypes;
      _2600_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2601_typeParam) => {
        return RAST.__default.RawType((_2601_typeParam).dtor_content);
      })), _2580_sTypeParams);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_2599_struct));
      DAST._IType _2602_underlyingDatatype;
      _2602_underlyingDatatype = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(path, (c).dtor_attributes)));
      Dafny.ISequence<RAST._IImplMember> _2603_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2604_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out31;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out32;
      DCOMP.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_AllocatedDatatype(DAST.DatatypeType.create(path, (c).dtor_attributes))), _2579_typeParamsSet, out _out31, out _out32);
      _2603_implBodyRaw = _out31;
      _2604_traitBodies = _out32;
      Dafny.ISequence<RAST._IImplMember> _2605_implBody;
      _2605_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(RAST.Expr.create_Identifier(_2598_datatypeName), _2585_fieldInits))))), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.SelfPointerMut), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate"))).ApplyType1(RAST.Type.create_SelfOwned())).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())))))), _2603_implBodyRaw);
      RAST._IImpl _2606_i;
      _2606_i = RAST.Impl.create_Impl(_2581_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2598_datatypeName), _2600_typeParamsAsTypes), _2582_whereConstraints, _2605_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2606_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _2607_i;
        _2607_i = BigInteger.Zero;
        while ((_2607_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _2608_superClass;
          _2608_superClass = ((c).dtor_superClasses).Select(_2607_i);
          DAST._IType _source73 = _2608_superClass;
          if (_source73.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2609___mcc_h1 = _source73.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _2610___mcc_h2 = _source73.dtor_typeArgs;
            DAST._IResolvedType _2611___mcc_h3 = _source73.dtor_resolved;
            DAST._IResolvedType _source74 = _2611___mcc_h3;
            if (_source74.is_AllocatedDatatype) {
              DAST._IDatatypeType _2612___mcc_h7 = _source74.dtor_datatypeType;
            } else if (_source74.is_Datatype) {
              DAST._IDatatypeType _2613___mcc_h9 = _source74.dtor_datatypeType;
            } else if (_source74.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2614___mcc_h11 = _source74.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _2615___mcc_h12 = _source74.dtor_attributes;
              Dafny.ISequence<DAST._IType> _2616_typeArgs = _2610___mcc_h2;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2617_traitPath = _2609___mcc_h1;
              {
                RAST._IType _2618_pathStr;
                RAST._IType _out33;
                _out33 = DCOMP.COMP.GenPath(_2617_traitPath);
                _2618_pathStr = _out33;
                Dafny.ISequence<RAST._IType> _2619_typeArgs;
                Dafny.ISequence<RAST._IType> _out34;
                _out34 = DCOMP.COMP.GenTypeArgs(_2616_typeArgs, false, false);
                _2619_typeArgs = _out34;
                Dafny.ISequence<RAST._IImplMember> _2620_body;
                _2620_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_2604_traitBodies).Contains(_2617_traitPath)) {
                  _2620_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_2604_traitBodies,_2617_traitPath);
                }
                RAST._IType _2621_genSelfPath;
                RAST._IType _out35;
                _out35 = DCOMP.COMP.GenPath(path);
                _2621_genSelfPath = _out35;
                RAST._IModDecl _2622_x;
                _2622_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2581_sConstrainedTypeParams, RAST.Type.create_TypeApp(_2618_pathStr, _2619_typeArgs), RAST.__default.Rc(RAST.Type.create_TypeApp(_2621_genSelfPath, _2600_typeParamsAsTypes)), _2582_whereConstraints, _2620_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_2622_x));
              }
            } else {
              DAST._IType _2623___mcc_h15 = _source74.dtor_baseType;
              DAST._INewtypeRange _2624___mcc_h16 = _source74.dtor_range;
              bool _2625___mcc_h17 = _source74.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _2626___mcc_h18 = _source74.dtor_attributes;
            }
          } else if (_source73.is_Nullable) {
            DAST._IType _2627___mcc_h23 = _source73.dtor_Nullable_a0;
          } else if (_source73.is_Tuple) {
            Dafny.ISequence<DAST._IType> _2628___mcc_h25 = _source73.dtor_Tuple_a0;
          } else if (_source73.is_Array) {
            DAST._IType _2629___mcc_h27 = _source73.dtor_element;
            BigInteger _2630___mcc_h28 = _source73.dtor_dims;
          } else if (_source73.is_Seq) {
            DAST._IType _2631___mcc_h31 = _source73.dtor_element;
          } else if (_source73.is_Set) {
            DAST._IType _2632___mcc_h33 = _source73.dtor_element;
          } else if (_source73.is_Multiset) {
            DAST._IType _2633___mcc_h35 = _source73.dtor_element;
          } else if (_source73.is_Map) {
            DAST._IType _2634___mcc_h37 = _source73.dtor_key;
            DAST._IType _2635___mcc_h38 = _source73.dtor_value;
          } else if (_source73.is_SetBuilder) {
            DAST._IType _2636___mcc_h41 = _source73.dtor_element;
          } else if (_source73.is_MapBuilder) {
            DAST._IType _2637___mcc_h43 = _source73.dtor_key;
            DAST._IType _2638___mcc_h44 = _source73.dtor_value;
          } else if (_source73.is_Arrow) {
            Dafny.ISequence<DAST._IType> _2639___mcc_h47 = _source73.dtor_args;
            DAST._IType _2640___mcc_h48 = _source73.dtor_result;
          } else if (_source73.is_Primitive) {
            DAST._IPrimitive _2641___mcc_h51 = _source73.dtor_Primitive_a0;
          } else if (_source73.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _2642___mcc_h53 = _source73.dtor_Passthrough_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _2643___mcc_h55 = _source73.dtor_TypeArg_a0;
          }
          _2607_i = (_2607_i) + (BigInteger.One);
        }
      }
      RAST._IImpl _2644_d;
      _2644_d = RAST.Impl.create_ImplFor(_2581_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2598_datatypeName), _2600_typeParamsAsTypes), _2582_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(_2598_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::new()"))))))));
      Dafny.ISequence<RAST._IModDecl> _2645_defaultImpl;
      _2645_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2644_d));
      RAST._IImpl _2646_p;
      _2646_p = RAST.Impl.create_ImplFor(_2581_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2598_datatypeName), _2600_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), ((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")"))))))));
      Dafny.ISequence<RAST._IModDecl> _2647_printImpl;
      _2647_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2646_p));
      RAST._IImpl _2648_pp;
      _2648_pp = RAST.Impl.create_ImplFor(_2580_sTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::cmp::PartialEq")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2598_datatypeName), _2600_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("eq"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("other"), RAST.__default.SelfBorrowed)), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ptr::eq(self, other)")))))));
      Dafny.ISequence<RAST._IModDecl> _2649_ptrPartialEqImpl;
      _2649_ptrPartialEqImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2648_pp));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(s, _2645_defaultImpl), _2647_printImpl), _2649_ptrPartialEqImpl);
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISet<DAST._IType> _2650_typeParamsSet;
      _2650_typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._IType> _2651_typeParams;
      _2651_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2652_tpI;
      _2652_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_2652_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._IType _2653_tp;
          _2653_tp = ((t).dtor_typeParams).Select(_2652_tpI);
          _2650_typeParamsSet = Dafny.Set<DAST._IType>.Union(_2650_typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2653_tp));
          RAST._IType _2654_genTp;
          RAST._IType _out36;
          _out36 = DCOMP.COMP.GenType(_2653_tp, false, false);
          _2654_genTp = _out36;
          _2651_typeParams = Dafny.Sequence<RAST._IType>.Concat(_2651_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_2654_genTp));
          _2652_tpI = (_2652_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2655_fullPath;
      _2655_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _2656_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2657___v45;
      Dafny.ISequence<RAST._IImplMember> _out37;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out38;
      DCOMP.COMP.GenClassImplBody((t).dtor_body, true, DAST.Type.create_Path(_2655_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Trait(_2655_fullPath, (t).dtor_attributes)), _2650_typeParamsSet, out _out37, out _out38);
      _2656_implBody = _out37;
      _2657___v45 = _out38;
      s = (RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMP.__default.escapeIdent((t).dtor_name)), _2651_typeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _2656_implBody)))._ToString(DCOMP.__default.IND);
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2658_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2659_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2660_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2661_whereConstraints;
      Dafny.ISet<DAST._IType> _out39;
      Dafny.ISequence<RAST._ITypeParam> _out40;
      Dafny.ISequence<RAST._ITypeParam> _out41;
      Dafny.ISequence<Dafny.Rune> _out42;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out39, out _out40, out _out41, out _out42);
      _2658_typeParamsSet = _out39;
      _2659_sTypeParams = _out40;
      _2660_sConstrainedTypeParams = _out41;
      _2661_whereConstraints = _out42;
      Dafny.ISequence<RAST._IType> _2662_typeParamsAsTypes;
      _2662_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2663_t) => {
        return RAST.__default.RawType((_2663_t).dtor_content);
      })), _2659_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _2664_constrainedTypeParams;
      _2664_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2660_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _2665_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source75 = DCOMP.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source75.is_None) {
        RAST._IType _out43;
        _out43 = DCOMP.COMP.GenType((c).dtor_base, false, false);
        _2665_underlyingType = _out43;
      } else {
        RAST._IType _2666___mcc_h0 = _source75.dtor_value;
        RAST._IType _2667_v = _2666___mcc_h0;
        _2665_underlyingType = _2667_v;
      }
      DAST._IType _2668_resultingType;
      _2668_resultingType = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Newtype((c).dtor_base, (c).dtor_range, false, (c).dtor_attributes));
      Dafny.ISequence<Dafny.Rune> _2669_datatypeName;
      _2669_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _2669_datatypeName, _2659_sTypeParams, RAST.Fields.create_NamelessFields(Dafny.Sequence<RAST._INamelessField>.FromElements(RAST.NamelessField.create(RAST.Visibility.create_PUB(), _2665_underlyingType))))));
      RAST._IExpr _2670_fnBody;
      _2670_fnBody = RAST.Expr.create_Identifier(_2669_datatypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source76 = (c).dtor_witnessExpr;
      if (_source76.is_None) {
        {
          _2670_fnBody = (_2670_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _2671___mcc_h1 = _source76.dtor_value;
        DAST._IExpression _2672_e = _2671___mcc_h1;
        {
          DAST._IExpression _2673_e;
          _2673_e = ((object.Equals((c).dtor_base, _2668_resultingType)) ? (_2672_e) : (DAST.Expression.create_Convert(_2672_e, (c).dtor_base, _2668_resultingType)));
          RAST._IExpr _2674_eStr;
          DCOMP._IOwnership _2675___v46;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2676___v47;
          RAST._IExpr _out44;
          DCOMP._IOwnership _out45;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out46;
          DCOMP.COMP.GenExpr(_2673_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out44, out _out45, out _out46);
          _2674_eStr = _out44;
          _2675___v46 = _out45;
          _2676___v47 = _out46;
          _2670_fnBody = (_2670_fnBody).Apply1(_2674_eStr);
        }
      }
      RAST._IImplMember _2677_body;
      _2677_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2670_fnBody)));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2660_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2669_datatypeName), _2662_typeParamsAsTypes), _2661_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_2677_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2660_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2669_datatypeName), _2662_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2660_sConstrainedTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2669_datatypeName), _2662_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_2665_underlyingType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2678_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2679_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2680_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2681_whereConstraints;
      Dafny.ISet<DAST._IType> _out47;
      Dafny.ISequence<RAST._ITypeParam> _out48;
      Dafny.ISequence<RAST._ITypeParam> _out49;
      Dafny.ISequence<Dafny.Rune> _out50;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out47, out _out48, out _out49, out _out50);
      _2678_typeParamsSet = _out47;
      _2679_sTypeParams = _out48;
      _2680_sConstrainedTypeParams = _out49;
      _2681_whereConstraints = _out50;
      Dafny.ISequence<RAST._IType> _2682_typeParamsAsTypes;
      _2682_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2683_t) => {
        return RAST.__default.RawType((_2683_t).dtor_content);
      })), _2679_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _2684_constrainedTypeParams;
      _2684_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2680_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.IND, DCOMP.__default.IND));
      Dafny.ISequence<Dafny.Rune> _2685_datatypeName;
      _2685_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _2686_ctors;
      _2686_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _2687_i;
      _2687_i = BigInteger.Zero;
      while ((_2687_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2688_ctor;
        _2688_ctor = ((c).dtor_ctors).Select(_2687_i);
        Dafny.ISequence<RAST._IField> _2689_ctorArgs;
        _2689_ctorArgs = Dafny.Sequence<RAST._IField>.FromElements();
        BigInteger _2690_j;
        _2690_j = BigInteger.Zero;
        while ((_2690_j) < (new BigInteger(((_2688_ctor).dtor_args).Count))) {
          DAST._IFormal _2691_formal;
          _2691_formal = ((_2688_ctor).dtor_args).Select(_2690_j);
          RAST._IType _2692_formalType;
          RAST._IType _out51;
          _out51 = DCOMP.COMP.GenType((_2691_formal).dtor_typ, false, false);
          _2692_formalType = _out51;
          if ((c).dtor_isCo) {
            _2689_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2689_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeIdent((_2691_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_2692_formalType))))));
          } else {
            _2689_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2689_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeIdent((_2691_formal).dtor_name), _2692_formalType))));
          }
          _2690_j = (_2690_j) + (BigInteger.One);
        }
        _2686_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2686_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMP.__default.escapeIdent((_2688_ctor).dtor_name), RAST.Fields.create_NamedFields(_2689_ctorArgs))));
        _2687_i = (_2687_i) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2693_selfPath;
      _2693_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _2694_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2695_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out52;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out53;
      DCOMP.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(_2693_selfPath, (c).dtor_attributes))), _2678_typeParamsSet, out _out52, out _out53);
      _2694_implBodyRaw = _out52;
      _2695_traitBodies = _out53;
      Dafny.ISequence<RAST._IImplMember> _2696_implBody;
      _2696_implBody = _2694_implBodyRaw;
      _2687_i = BigInteger.Zero;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2697_emittedFields;
      _2697_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      while ((_2687_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2698_ctor;
        _2698_ctor = ((c).dtor_ctors).Select(_2687_i);
        BigInteger _2699_j;
        _2699_j = BigInteger.Zero;
        while ((_2699_j) < (new BigInteger(((_2698_ctor).dtor_args).Count))) {
          DAST._IFormal _2700_formal;
          _2700_formal = ((_2698_ctor).dtor_args).Select(_2699_j);
          if (!((_2697_emittedFields).Contains((_2700_formal).dtor_name))) {
            _2697_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2697_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_2700_formal).dtor_name));
            RAST._IType _2701_formalType;
            RAST._IType _out54;
            _out54 = DCOMP.COMP.GenType((_2700_formal).dtor_typ, false, false);
            _2701_formalType = _out54;
            Dafny.ISequence<RAST._IMatchCase> _2702_cases;
            _2702_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _2703_k;
            _2703_k = BigInteger.Zero;
            while ((_2703_k) < (new BigInteger(((c).dtor_ctors).Count))) {
              DAST._IDatatypeCtor _2704_ctor2;
              _2704_ctor2 = ((c).dtor_ctors).Select(_2703_k);
              Dafny.ISequence<Dafny.Rune> _2705_pattern;
              _2705_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2685_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent((_2704_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _2706_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              BigInteger _2707_l;
              _2707_l = BigInteger.Zero;
              bool _2708_hasMatchingField;
              _2708_hasMatchingField = false;
              while ((_2707_l) < (new BigInteger(((_2704_ctor2).dtor_args).Count))) {
                DAST._IFormal _2709_formal2;
                _2709_formal2 = ((_2704_ctor2).dtor_args).Select(_2707_l);
                if (((_2700_formal).dtor_name).Equals((_2709_formal2).dtor_name)) {
                  _2708_hasMatchingField = true;
                }
                _2705_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2705_pattern, DCOMP.__default.escapeIdent((_2709_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
                _2707_l = (_2707_l) + (BigInteger.One);
              }
              _2705_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_2705_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_2708_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _2706_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMP.__default.escapeIdent((_2700_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _2706_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeIdent((_2700_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _2706_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _2710_ctorMatch;
              _2710_ctorMatch = RAST.MatchCase.create(_2705_pattern, RAST.Expr.create_RawExpr(_2706_rhs));
              _2702_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2702_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_2710_ctorMatch));
              _2703_k = (_2703_k) + (BigInteger.One);
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _2702_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2702_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2685_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _2711_methodBody;
            _2711_methodBody = RAST.Expr.create_Match(RAST.__default.self, _2702_cases);
            _2696_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_2696_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMP.__default.escapeIdent((_2700_formal).dtor_name), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_2701_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2711_methodBody)))));
          }
          _2699_j = (_2699_j) + (BigInteger.One);
        }
        _2687_i = (_2687_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        BigInteger _2712_typeI;
        _2712_typeI = BigInteger.Zero;
        Dafny.ISequence<RAST._IType> _2713_types;
        _2713_types = Dafny.Sequence<RAST._IType>.FromElements();
        while ((_2712_typeI) < (new BigInteger(((c).dtor_typeParams).Count))) {
          RAST._IType _2714_genTp;
          RAST._IType _out55;
          _out55 = DCOMP.COMP.GenType(((c).dtor_typeParams).Select(_2712_typeI), false, false);
          _2714_genTp = _out55;
          _2713_types = Dafny.Sequence<RAST._IType>.Concat(_2713_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData::")), Dafny.Sequence<RAST._IType>.FromElements(_2714_genTp))));
          _2712_typeI = (_2712_typeI) + (BigInteger.One);
        }
        _2686_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2686_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Fields.create_NamelessFields(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessField>(((System.Func<RAST._IType, RAST._INamelessField>)((_2715_tpe) => {
  return RAST.NamelessField.create(RAST.Visibility.create_PRIV(), _2715_tpe);
})), _2713_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _2716_enumBody;
      _2716_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _2685_datatypeName, _2679_sTypeParams, _2686_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_2680_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2685_datatypeName), _2682_typeParamsAsTypes), _2681_whereConstraints, _2696_implBody)));
      _2687_i = BigInteger.Zero;
      Dafny.ISequence<RAST._IMatchCase> _2717_printImplBodyCases;
      _2717_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      while ((_2687_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2718_ctor;
        _2718_ctor = ((c).dtor_ctors).Select(_2687_i);
        Dafny.ISequence<Dafny.Rune> _2719_ctorMatch;
        _2719_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeIdent((_2718_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _2720_modulePrefix;
        _2720_modulePrefix = (((((c).dtor_enclosingModule)).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(((c).dtor_enclosingModule), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _2721_printRhs;
        _2721_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _2720_modulePrefix), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent((_2718_ctor).dtor_name)), (((_2718_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        BigInteger _2722_j;
        _2722_j = BigInteger.Zero;
        while ((_2722_j) < (new BigInteger(((_2718_ctor).dtor_args).Count))) {
          DAST._IFormal _2723_formal;
          _2723_formal = ((_2718_ctor).dtor_args).Select(_2722_j);
          _2719_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2719_ctorMatch, DCOMP.__default.escapeIdent((_2723_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          if ((_2722_j).Sign == 1) {
            _2721_printRhs = (_2721_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _2721_printRhs = (_2721_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMP.__default.escapeIdent((_2723_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
          _2722_j = (_2722_j) + (BigInteger.One);
        }
        _2719_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_2719_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_2718_ctor).dtor_hasAnyArgs) {
          _2721_printRhs = (_2721_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _2721_printRhs = (_2721_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _2717_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2717_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2685_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2719_ctorMatch), RAST.Expr.create_Block(_2721_printRhs))));
        _2687_i = (_2687_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _2717_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2717_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2685_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      RAST._IExpr _2724_printImplBody;
      _2724_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _2717_printImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _2725_printImpl;
      _2725_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2680_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2685_datatypeName), _2682_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2724_printImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _2726_defaultImpl;
      _2726_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _2727_asRefImpl;
      _2727_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        _2687_i = BigInteger.Zero;
        RAST._IExpr _2728_structName;
        _2728_structName = (RAST.Expr.create_Identifier(_2685_datatypeName)).MSel(DCOMP.__default.escapeIdent((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _2729_structAssignments;
        _2729_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        while ((_2687_i) < (new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count))) {
          DAST._IFormal _2730_formal;
          _2730_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_2687_i);
          _2729_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2729_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent((_2730_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
          _2687_i = (_2687_i) + (BigInteger.One);
        }
        Dafny.ISequence<RAST._ITypeParam> _2731_defaultConstrainedTypeParams;
        _2731_defaultConstrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(_2679_sTypeParams, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _2732_fullType;
        _2732_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2685_datatypeName), _2682_typeParamsAsTypes);
        _2726_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2731_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _2732_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_2732_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_2728_structName, _2729_structAssignments))))))));
        _2727_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2731_defaultConstrainedTypeParams, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_2732_fullType), RAST.Type.create_Borrowed(_2732_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_2716_enumBody, _2725_printImpl), _2726_defaultImpl), _2727_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi6 = new BigInteger((p).Count);
        for (BigInteger _2733_i = BigInteger.Zero; _2733_i < _hi6; _2733_i++) {
          r = (r).MSel(DCOMP.__default.escapeIdent(((p).Select(_2733_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi7 = new BigInteger((p).Count);
        for (BigInteger _2734_i = BigInteger.Zero; _2734_i < _hi7; _2734_i++) {
          r = (r).MSel(DCOMP.__default.escapeIdent(((p).Select(_2734_i))));
        }
      }
      return r;
    }
    public static Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, bool inBinding, bool inFn)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _2735_i;
        _2735_i = BigInteger.Zero;
        while ((_2735_i) < (new BigInteger((args).Count))) {
          RAST._IType _2736_genTp;
          RAST._IType _out56;
          _out56 = DCOMP.COMP.GenType((args).Select(_2735_i), inBinding, inFn);
          _2736_genTp = _out56;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_2736_genTp));
          _2735_i = (_2735_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public static bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public static RAST._IType GenType(DAST._IType c, bool inBinding, bool inFn)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source77 = c;
      if (_source77.is_Path) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2737___mcc_h0 = _source77.dtor_Path_a0;
        Dafny.ISequence<DAST._IType> _2738___mcc_h1 = _source77.dtor_typeArgs;
        DAST._IResolvedType _2739___mcc_h2 = _source77.dtor_resolved;
        DAST._IResolvedType _2740_resolved = _2739___mcc_h2;
        Dafny.ISequence<DAST._IType> _2741_args = _2738___mcc_h1;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2742_p = _2737___mcc_h0;
        {
          RAST._IType _2743_t;
          RAST._IType _out57;
          _out57 = DCOMP.COMP.GenPath(_2742_p);
          _2743_t = _out57;
          Dafny.ISequence<RAST._IType> _2744_typeArgs;
          Dafny.ISequence<RAST._IType> _out58;
          _out58 = DCOMP.COMP.GenTypeArgs(_2741_args, inBinding, inFn);
          _2744_typeArgs = _out58;
          s = RAST.Type.create_TypeApp(_2743_t, _2744_typeArgs);
          DAST._IResolvedType _source78 = _2740_resolved;
          if (_source78.is_AllocatedDatatype) {
            DAST._IDatatypeType _2745___mcc_h21 = _source78.dtor_datatypeType;
            DAST._IDatatypeType _source79 = _2745___mcc_h21;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2746___mcc_h22 = _source79.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2747___mcc_h23 = _source79.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2748_attributes = _2747___mcc_h23;
            {
              s = RAST.Type.create_PointerMut(s);
            }
          } else if (_source78.is_Datatype) {
            DAST._IDatatypeType _2749___mcc_h24 = _source78.dtor_datatypeType;
            DAST._IDatatypeType _source80 = _2749___mcc_h24;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2750___mcc_h25 = _source80.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2751___mcc_h26 = _source80.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2752_attributes = _2751___mcc_h26;
            {
              if (DCOMP.COMP.IsRcWrapped(_2752_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source78.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2753___mcc_h27 = _source78.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2754___mcc_h28 = _source78.dtor_attributes;
            {
              if ((_2742_p).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = RAST.__default.Rc(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::any::Any")));
              } else {
                if (inBinding) {
                  s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
                } else {
                  s = RAST.Type.create_ImplType(s);
                }
              }
            }
          } else {
            DAST._IType _2755___mcc_h29 = _source78.dtor_baseType;
            DAST._INewtypeRange _2756___mcc_h30 = _source78.dtor_range;
            bool _2757___mcc_h31 = _source78.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _2758___mcc_h32 = _source78.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2759_attributes = _2758___mcc_h32;
            bool _2760_erased = _2757___mcc_h31;
            DAST._INewtypeRange _2761_range = _2756___mcc_h30;
            DAST._IType _2762_t = _2755___mcc_h29;
            {
              if (_2760_erased) {
                Std.Wrappers._IOption<RAST._IType> _source81 = DCOMP.COMP.NewtypeToRustType(_2762_t, _2761_range);
                if (_source81.is_None) {
                } else {
                  RAST._IType _2763___mcc_h33 = _source81.dtor_value;
                  RAST._IType _2764_v = _2763___mcc_h33;
                  s = _2764_v;
                }
              }
            }
          }
        }
      } else if (_source77.is_Nullable) {
        DAST._IType _2765___mcc_h3 = _source77.dtor_Nullable_a0;
        DAST._IType _2766_inner = _2765___mcc_h3;
        {
          RAST._IType _2767_innerExpr;
          RAST._IType _out59;
          _out59 = DCOMP.COMP.GenType(_2766_inner, inBinding, inFn);
          _2767_innerExpr = _out59;
          s = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::option::Option")), Dafny.Sequence<RAST._IType>.FromElements(_2767_innerExpr));
        }
      } else if (_source77.is_Tuple) {
        Dafny.ISequence<DAST._IType> _2768___mcc_h4 = _source77.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IType> _2769_types = _2768___mcc_h4;
        {
          Dafny.ISequence<RAST._IType> _2770_args;
          _2770_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2771_i;
          _2771_i = BigInteger.Zero;
          while ((_2771_i) < (new BigInteger((_2769_types).Count))) {
            RAST._IType _2772_generated;
            RAST._IType _out60;
            _out60 = DCOMP.COMP.GenType((_2769_types).Select(_2771_i), inBinding, inFn);
            _2772_generated = _out60;
            _2770_args = Dafny.Sequence<RAST._IType>.Concat(_2770_args, Dafny.Sequence<RAST._IType>.FromElements(_2772_generated));
            _2771_i = (_2771_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_2770_args);
        }
      } else if (_source77.is_Array) {
        DAST._IType _2773___mcc_h5 = _source77.dtor_element;
        BigInteger _2774___mcc_h6 = _source77.dtor_dims;
        BigInteger _2775_dims = _2774___mcc_h6;
        DAST._IType _2776_element = _2773___mcc_h5;
        {
          RAST._IType _2777_elem;
          RAST._IType _out61;
          _out61 = DCOMP.COMP.GenType(_2776_element, inBinding, inFn);
          _2777_elem = _out61;
          s = _2777_elem;
          BigInteger _2778_i;
          _2778_i = BigInteger.Zero;
          while ((_2778_i) < (_2775_dims)) {
            s = RAST.__default.Rc(RAST.__default.RefCell(RAST.__default.Vec(s)));
            _2778_i = (_2778_i) + (BigInteger.One);
          }
        }
      } else if (_source77.is_Seq) {
        DAST._IType _2779___mcc_h7 = _source77.dtor_element;
        DAST._IType _2780_element = _2779___mcc_h7;
        {
          RAST._IType _2781_elem;
          RAST._IType _out62;
          _out62 = DCOMP.COMP.GenType(_2780_element, inBinding, inFn);
          _2781_elem = _out62;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_2781_elem));
        }
      } else if (_source77.is_Set) {
        DAST._IType _2782___mcc_h8 = _source77.dtor_element;
        DAST._IType _2783_element = _2782___mcc_h8;
        {
          RAST._IType _2784_elem;
          RAST._IType _out63;
          _out63 = DCOMP.COMP.GenType(_2783_element, inBinding, inFn);
          _2784_elem = _out63;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_2784_elem));
        }
      } else if (_source77.is_Multiset) {
        DAST._IType _2785___mcc_h9 = _source77.dtor_element;
        DAST._IType _2786_element = _2785___mcc_h9;
        {
          RAST._IType _2787_elem;
          RAST._IType _out64;
          _out64 = DCOMP.COMP.GenType(_2786_element, inBinding, inFn);
          _2787_elem = _out64;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_2787_elem));
        }
      } else if (_source77.is_Map) {
        DAST._IType _2788___mcc_h10 = _source77.dtor_key;
        DAST._IType _2789___mcc_h11 = _source77.dtor_value;
        DAST._IType _2790_value = _2789___mcc_h11;
        DAST._IType _2791_key = _2788___mcc_h10;
        {
          RAST._IType _2792_keyType;
          RAST._IType _out65;
          _out65 = DCOMP.COMP.GenType(_2791_key, inBinding, inFn);
          _2792_keyType = _out65;
          RAST._IType _2793_valueType;
          RAST._IType _out66;
          _out66 = DCOMP.COMP.GenType(_2790_value, inBinding, inFn);
          _2793_valueType = _out66;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_2792_keyType, _2793_valueType));
        }
      } else if (_source77.is_SetBuilder) {
        DAST._IType _2794___mcc_h12 = _source77.dtor_element;
        DAST._IType _2795_elem = _2794___mcc_h12;
        {
          RAST._IType _2796_elemType;
          RAST._IType _out67;
          _out67 = DCOMP.COMP.GenType(_2795_elem, inBinding, inFn);
          _2796_elemType = _out67;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2796_elemType));
        }
      } else if (_source77.is_MapBuilder) {
        DAST._IType _2797___mcc_h13 = _source77.dtor_key;
        DAST._IType _2798___mcc_h14 = _source77.dtor_value;
        DAST._IType _2799_value = _2798___mcc_h14;
        DAST._IType _2800_key = _2797___mcc_h13;
        {
          RAST._IType _2801_keyType;
          RAST._IType _out68;
          _out68 = DCOMP.COMP.GenType(_2800_key, inBinding, inFn);
          _2801_keyType = _out68;
          RAST._IType _2802_valueType;
          RAST._IType _out69;
          _out69 = DCOMP.COMP.GenType(_2799_value, inBinding, inFn);
          _2802_valueType = _out69;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2801_keyType, _2802_valueType));
        }
      } else if (_source77.is_Arrow) {
        Dafny.ISequence<DAST._IType> _2803___mcc_h15 = _source77.dtor_args;
        DAST._IType _2804___mcc_h16 = _source77.dtor_result;
        DAST._IType _2805_result = _2804___mcc_h16;
        Dafny.ISequence<DAST._IType> _2806_args = _2803___mcc_h15;
        {
          Dafny.ISequence<RAST._IType> _2807_argTypes;
          _2807_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2808_i;
          _2808_i = BigInteger.Zero;
          while ((_2808_i) < (new BigInteger((_2806_args).Count))) {
            RAST._IType _2809_generated;
            RAST._IType _out70;
            _out70 = DCOMP.COMP.GenType((_2806_args).Select(_2808_i), inBinding, true);
            _2809_generated = _out70;
            _2807_argTypes = Dafny.Sequence<RAST._IType>.Concat(_2807_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_2809_generated)));
            _2808_i = (_2808_i) + (BigInteger.One);
          }
          RAST._IType _2810_resultType;
          RAST._IType _out71;
          _out71 = DCOMP.COMP.GenType(_2805_result, inBinding, (inFn) || (inBinding));
          _2810_resultType = _out71;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("FunctionWrapper")), Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_FnType(_2807_argTypes, RAST.Type.create_IntersectionType(_2810_resultType, RAST.__default.StaticTrait))));
        }
      } else if (_source77.is_Primitive) {
        DAST._IPrimitive _2811___mcc_h17 = _source77.dtor_Primitive_a0;
        DAST._IPrimitive _2812_p = _2811___mcc_h17;
        {
          DAST._IPrimitive _source82 = _2812_p;
          if (_source82.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source82.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source82.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel(DCOMP.__default.DafnyChar)));
          } else if (_source82.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel(DCOMP.__default.DafnyChar);
          }
        }
      } else if (_source77.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _2813___mcc_h18 = _source77.dtor_Passthrough_a0;
        Dafny.ISequence<Dafny.Rune> _2814_v = _2813___mcc_h18;
        s = RAST.__default.RawType(_2814_v);
      } else {
        Dafny.ISequence<Dafny.Rune> _2815___mcc_h19 = _source77.dtor_TypeArg_a0;
        Dafny.ISequence<Dafny.Rune> _source83 = _2815___mcc_h19;
        Dafny.ISequence<Dafny.Rune> _2816___mcc_h20 = _source83;
        Dafny.ISequence<Dafny.Rune> _2817_name = _2816___mcc_h20;
        s = RAST.__default.RawType(DCOMP.__default.escapeIdent(_2817_name));
      }
      return s;
    }
    public static void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _2818_i;
      _2818_i = BigInteger.Zero;
      while ((_2818_i) < (new BigInteger((body).Count))) {
        DAST._IMethod _source84 = (body).Select(_2818_i);
        DAST._IMethod _2819___mcc_h0 = _source84;
        DAST._IMethod _2820_m = _2819___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source85 = (_2820_m).dtor_overridingPath;
          if (_source85.is_None) {
            {
              RAST._IImplMember _2821_generated;
              RAST._IImplMember _out72;
              _out72 = DCOMP.COMP.GenMethod(_2820_m, forTrait, enclosingType, enclosingTypeParams);
              _2821_generated = _out72;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_2821_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2822___mcc_h1 = _source85.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2823_p = _2822___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _2824_existing;
              _2824_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_2823_p)) {
                _2824_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_2823_p);
              }
              RAST._IImplMember _2825_genMethod;
              RAST._IImplMember _out73;
              _out73 = DCOMP.COMP.GenMethod(_2820_m, true, enclosingType, enclosingTypeParams);
              _2825_genMethod = _out73;
              _2824_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_2824_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_2825_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_2823_p, _2824_existing)));
            }
          }
        }
        _2818_i = (_2818_i) + (BigInteger.One);
      }
    }
    public static Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _2826_i;
      _2826_i = BigInteger.Zero;
      while ((_2826_i) < (new BigInteger((@params).Count))) {
        DAST._IFormal _2827_param;
        _2827_param = (@params).Select(_2826_i);
        RAST._IType _2828_paramType;
        RAST._IType _out74;
        _out74 = DCOMP.COMP.GenType((_2827_param).dtor_typ, false, false);
        _2828_paramType = _out74;
        if (!((_2828_paramType).HasCopySemantics())) {
          _2828_paramType = RAST.Type.create_Borrowed(_2828_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMP.__default.escapeIdent((_2827_param).dtor_name), _2828_paramType)));
        _2826_i = (_2826_i) + (BigInteger.One);
      }
      return s;
    }
    public static RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _2829_params;
      Dafny.ISequence<RAST._IFormal> _out75;
      _out75 = DCOMP.COMP.GenParams((m).dtor_params);
      _2829_params = _out75;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2830_paramNames;
      _2830_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _2831_paramTypes;
      _2831_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi8 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _2832_paramI = BigInteger.Zero; _2832_paramI < _hi8; _2832_paramI++) {
        DAST._IFormal _2833_dafny__formal;
        _2833_dafny__formal = ((m).dtor_params).Select(_2832_paramI);
        RAST._IFormal _2834_formal;
        _2834_formal = (_2829_params).Select(_2832_paramI);
        Dafny.ISequence<Dafny.Rune> _2835_name;
        _2835_name = (_2834_formal).dtor_name;
        _2830_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2830_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2835_name));
        _2831_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2831_paramTypes, _2835_name, (_2834_formal).dtor_tpe);
      }
      if (!((m).dtor_isStatic)) {
        if (forTrait) {
          _2829_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), _2829_params);
        } else {
          RAST._IType _2836_tpe;
          RAST._IType _out76;
          _out76 = DCOMP.COMP.GenType(enclosingType, false, false);
          _2836_tpe = _out76;
          _2829_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_Borrowed(_2836_tpe))), _2829_params);
        }
      }
      Dafny.ISequence<RAST._IType> _2837_retTypeArgs;
      _2837_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2838_typeI;
      _2838_typeI = BigInteger.Zero;
      while ((_2838_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _2839_typeExpr;
        RAST._IType _out77;
        _out77 = DCOMP.COMP.GenType(((m).dtor_outTypes).Select(_2838_typeI), false, false);
        _2839_typeExpr = _out77;
        _2837_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_2837_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_2839_typeExpr));
        _2838_typeI = (_2838_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _2840_visibility;
      _2840_visibility = RAST.Visibility.create_PUB();
      Dafny.ISequence<Dafny.Rune> _2841_fnName;
      _2841_fnName = DCOMP.__default.escapeIdent((m).dtor_name);
      Dafny.ISequence<DAST._IType> _2842_typeParamsFiltered;
      _2842_typeParamsFiltered = Dafny.Sequence<DAST._IType>.FromElements();
      BigInteger _2843_typeParamI;
      _2843_typeParamI = BigInteger.Zero;
      while ((_2843_typeParamI) < (new BigInteger(((m).dtor_typeParams).Count))) {
        DAST._IType _2844_typeParam;
        _2844_typeParam = ((m).dtor_typeParams).Select(_2843_typeParamI);
        if (!((enclosingTypeParams).Contains(_2844_typeParam))) {
          _2842_typeParamsFiltered = Dafny.Sequence<DAST._IType>.Concat(_2842_typeParamsFiltered, Dafny.Sequence<DAST._IType>.FromElements(_2844_typeParam));
        }
        _2843_typeParamI = (_2843_typeParamI) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.Rune> _2845_whereClauses;
      _2845_whereClauses = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      Dafny.ISequence<RAST._ITypeParam> _2846_typeParams;
      _2846_typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      if ((new BigInteger((_2842_typeParamsFiltered).Count)).Sign == 1) {
        _2845_whereClauses = Dafny.Sequence<Dafny.Rune>.Concat(_2845_whereClauses, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" where "));
        BigInteger _2847_i;
        _2847_i = BigInteger.Zero;
        while ((_2847_i) < (new BigInteger((_2842_typeParamsFiltered).Count))) {
          RAST._IType _2848_typeExpr;
          RAST._IType _out78;
          _out78 = DCOMP.COMP.GenType((_2842_typeParamsFiltered).Select(_2847_i), false, false);
          _2848_typeExpr = _out78;
          _2846_typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(_2846_typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_2848_typeExpr)._ToString(DCOMP.__default.IND), Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.DefaultTrait, RAST.__default.StaticTrait))));
          _2847_i = (_2847_i) + (BigInteger.One);
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _2849_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMP._IEnvironment _2850_env = DCOMP.Environment.Default();
      if ((m).dtor_hasBody) {
        RAST._IExpr _2851_earlyReturn;
        _2851_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source86 = (m).dtor_outVars;
        if (_source86.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2852___mcc_h0 = _source86.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2853_outVars = _2852___mcc_h0;
          {
            Dafny.ISequence<RAST._IExpr> _2854_tupleArgs;
            _2854_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
            BigInteger _hi9 = new BigInteger((_2853_outVars).Count);
            for (BigInteger _2855_outI = BigInteger.Zero; _2855_outI < _hi9; _2855_outI++) {
              Dafny.ISequence<Dafny.Rune> _2856_outVar;
              _2856_outVar = (_2853_outVars).Select(_2855_outI);
              RAST._IType _2857_outType;
              RAST._IType _out79;
              _out79 = DCOMP.COMP.GenType(((m).dtor_outTypes).Select(_2855_outI), false, false);
              _2857_outType = _out79;
              Dafny.ISequence<Dafny.Rune> _2858_outName;
              _2858_outName = DCOMP.__default.escapeIdent((_2856_outVar));
              _2830_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2830_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2858_outName));
              RAST._IType _2859_outMaybeType;
              _2859_outMaybeType = (((_2857_outType).HasCopySemantics()) ? (_2857_outType) : (RAST.__default.MaybePlaceboType(_2857_outType)));
              _2831_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2831_paramTypes, _2858_outName, _2859_outMaybeType);
              RAST._IExpr _2860_outVarReturn;
              DCOMP._IOwnership _2861___v52;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2862___v53;
              RAST._IExpr _out80;
              DCOMP._IOwnership _out81;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out82;
              DCOMP.COMP.GenExpr(DAST.Expression.create_Ident((_2856_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2858_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_2858_outName, _2859_outMaybeType))), DCOMP.Ownership.create_OwnershipOwned(), out _out80, out _out81, out _out82);
              _2860_outVarReturn = _out80;
              _2861___v52 = _out81;
              _2862___v53 = _out82;
              _2854_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_2854_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_2860_outVarReturn));
            }
            if ((new BigInteger((_2854_tupleArgs).Count)) == (BigInteger.One)) {
              _2851_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_2854_tupleArgs).Select(BigInteger.Zero)));
            } else {
              _2851_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_2854_tupleArgs)));
            }
          }
        }
        _2850_env = DCOMP.Environment.create(_2830_paramNames, _2831_paramTypes);
        RAST._IExpr _2863_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2864___v54;
        DCOMP._IEnvironment _2865___v55;
        RAST._IExpr _out83;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out84;
        DCOMP._IEnvironment _out85;
        DCOMP.COMP.GenStmts((m).dtor_body, (((m).dtor_isStatic) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))), _2850_env, true, _2851_earlyReturn, out _out83, out _out84, out _out85);
        _2863_body = _out83;
        _2864___v54 = _out84;
        _2865___v55 = _out85;
        _2849_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some(_2863_body);
      } else {
        _2850_env = DCOMP.Environment.create(_2830_paramNames, _2831_paramTypes);
        _2849_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_2840_visibility, RAST.Fn.create(_2841_fnName, _2846_typeParams, _2829_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_2837_retTypeArgs).Count)) == (BigInteger.One)) ? ((_2837_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_2837_retTypeArgs)))), _2845_whereClauses, _2849_fBody));
      return s;
    }
    public static void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2866_declarations;
      _2866_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _2867_i;
      _2867_i = BigInteger.Zero;
      newEnv = env;
      Dafny.ISequence<DAST._IStatement> _2868_stmts;
      _2868_stmts = stmts;
      while ((_2867_i) < (new BigInteger((_2868_stmts).Count))) {
        DAST._IStatement _2869_stmt;
        _2869_stmt = (_2868_stmts).Select(_2867_i);
        DAST._IStatement _source87 = _2869_stmt;
        if (_source87.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2870___mcc_h0 = _source87.dtor_name;
          DAST._IType _2871___mcc_h1 = _source87.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2872___mcc_h2 = _source87.dtor_maybeValue;
          Std.Wrappers._IOption<DAST._IExpression> _source88 = _2872___mcc_h2;
          if (_source88.is_None) {
            DAST._IType _2873_optType = _2871___mcc_h1;
            Dafny.ISequence<Dafny.Rune> _2874_name = _2870___mcc_h0;
            if (((_2867_i) + (BigInteger.One)) < (new BigInteger((_2868_stmts).Count))) {
              DAST._IStatement _source89 = (_2868_stmts).Select((_2867_i) + (BigInteger.One));
              if (_source89.is_DeclareVar) {
                Dafny.ISequence<Dafny.Rune> _2875___mcc_h52 = _source89.dtor_name;
                DAST._IType _2876___mcc_h53 = _source89.dtor_typ;
                Std.Wrappers._IOption<DAST._IExpression> _2877___mcc_h54 = _source89.dtor_maybeValue;
              } else if (_source89.is_Assign) {
                DAST._IAssignLhs _2878___mcc_h58 = _source89.dtor_lhs;
                DAST._IExpression _2879___mcc_h59 = _source89.dtor_value;
                DAST._IAssignLhs _source90 = _2878___mcc_h58;
                if (_source90.is_Ident) {
                  Dafny.ISequence<Dafny.Rune> _2880___mcc_h62 = _source90.dtor_ident;
                  Dafny.ISequence<Dafny.Rune> _source91 = _2880___mcc_h62;
                  Dafny.ISequence<Dafny.Rune> _2881___mcc_h64 = _source91;
                  DAST._IExpression _2882_rhs = _2879___mcc_h59;
                  Dafny.ISequence<Dafny.Rune> _2883_name2 = _2881___mcc_h64;
                  if ((_2883_name2).Equals(_2874_name)) {
                    _2868_stmts = Dafny.Sequence<DAST._IStatement>.Concat(Dafny.Sequence<DAST._IStatement>.Concat((_2868_stmts).Subsequence(BigInteger.Zero, _2867_i), Dafny.Sequence<DAST._IStatement>.FromElements(DAST.Statement.create_DeclareVar(_2874_name, _2873_optType, Std.Wrappers.Option<DAST._IExpression>.create_Some(_2882_rhs)))), (_2868_stmts).Drop((_2867_i) + (BigInteger.One)));
                    _2869_stmt = (_2868_stmts).Select(_2867_i);
                  }
                } else if (_source90.is_Select) {
                  DAST._IExpression _2884___mcc_h66 = _source90.dtor_expr;
                  Dafny.ISequence<Dafny.Rune> _2885___mcc_h67 = _source90.dtor_field;
                } else {
                  DAST._IExpression _2886___mcc_h70 = _source90.dtor_expr;
                  Dafny.ISequence<DAST._IExpression> _2887___mcc_h71 = _source90.dtor_indices;
                }
              } else if (_source89.is_If) {
                DAST._IExpression _2888___mcc_h74 = _source89.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2889___mcc_h75 = _source89.dtor_thn;
                Dafny.ISequence<DAST._IStatement> _2890___mcc_h76 = _source89.dtor_els;
              } else if (_source89.is_Labeled) {
                Dafny.ISequence<Dafny.Rune> _2891___mcc_h80 = _source89.dtor_lbl;
                Dafny.ISequence<DAST._IStatement> _2892___mcc_h81 = _source89.dtor_body;
              } else if (_source89.is_While) {
                DAST._IExpression _2893___mcc_h84 = _source89.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2894___mcc_h85 = _source89.dtor_body;
              } else if (_source89.is_Foreach) {
                Dafny.ISequence<Dafny.Rune> _2895___mcc_h88 = _source89.dtor_boundName;
                DAST._IType _2896___mcc_h89 = _source89.dtor_boundType;
                DAST._IExpression _2897___mcc_h90 = _source89.dtor_over;
                Dafny.ISequence<DAST._IStatement> _2898___mcc_h91 = _source89.dtor_body;
              } else if (_source89.is_Call) {
                DAST._IExpression _2899___mcc_h96 = _source89.dtor_on;
                DAST._ICallName _2900___mcc_h97 = _source89.dtor_callName;
                Dafny.ISequence<DAST._IType> _2901___mcc_h98 = _source89.dtor_typeArgs;
                Dafny.ISequence<DAST._IExpression> _2902___mcc_h99 = _source89.dtor_args;
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2903___mcc_h100 = _source89.dtor_outs;
              } else if (_source89.is_Return) {
                DAST._IExpression _2904___mcc_h106 = _source89.dtor_expr;
              } else if (_source89.is_EarlyReturn) {
              } else if (_source89.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2905___mcc_h108 = _source89.dtor_toLabel;
              } else if (_source89.is_TailRecursive) {
                Dafny.ISequence<DAST._IStatement> _2906___mcc_h110 = _source89.dtor_body;
              } else if (_source89.is_JumpTailCallStart) {
              } else if (_source89.is_Halt) {
              } else {
                DAST._IExpression _2907___mcc_h112 = _source89.dtor_Print_a0;
              }
            }
          } else {
            DAST._IExpression _2908___mcc_h6 = _source88.dtor_value;
          }
        } else if (_source87.is_Assign) {
          DAST._IAssignLhs _2909___mcc_h8 = _source87.dtor_lhs;
          DAST._IExpression _2910___mcc_h9 = _source87.dtor_value;
        } else if (_source87.is_If) {
          DAST._IExpression _2911___mcc_h12 = _source87.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2912___mcc_h13 = _source87.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2913___mcc_h14 = _source87.dtor_els;
        } else if (_source87.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2914___mcc_h18 = _source87.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2915___mcc_h19 = _source87.dtor_body;
        } else if (_source87.is_While) {
          DAST._IExpression _2916___mcc_h22 = _source87.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2917___mcc_h23 = _source87.dtor_body;
        } else if (_source87.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2918___mcc_h26 = _source87.dtor_boundName;
          DAST._IType _2919___mcc_h27 = _source87.dtor_boundType;
          DAST._IExpression _2920___mcc_h28 = _source87.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2921___mcc_h29 = _source87.dtor_body;
        } else if (_source87.is_Call) {
          DAST._IExpression _2922___mcc_h34 = _source87.dtor_on;
          DAST._ICallName _2923___mcc_h35 = _source87.dtor_callName;
          Dafny.ISequence<DAST._IType> _2924___mcc_h36 = _source87.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2925___mcc_h37 = _source87.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2926___mcc_h38 = _source87.dtor_outs;
        } else if (_source87.is_Return) {
          DAST._IExpression _2927___mcc_h44 = _source87.dtor_expr;
        } else if (_source87.is_EarlyReturn) {
        } else if (_source87.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2928___mcc_h46 = _source87.dtor_toLabel;
        } else if (_source87.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2929___mcc_h48 = _source87.dtor_body;
        } else if (_source87.is_JumpTailCallStart) {
        } else if (_source87.is_Halt) {
        } else {
          DAST._IExpression _2930___mcc_h50 = _source87.dtor_Print_a0;
        }
        RAST._IExpr _2931_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2932_recIdents;
        DCOMP._IEnvironment _2933_newEnv2;
        RAST._IExpr _out86;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out87;
        DCOMP._IEnvironment _out88;
        DCOMP.COMP.GenStmt(_2869_stmt, selfIdent, newEnv, (isLast) && ((_2867_i) == ((new BigInteger((_2868_stmts).Count)) - (BigInteger.One))), earlyReturn, out _out86, out _out87, out _out88);
        _2931_stmtExpr = _out86;
        _2932_recIdents = _out87;
        _2933_newEnv2 = _out88;
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_2932_recIdents, _2866_declarations));
        newEnv = _2933_newEnv2;
        DAST._IStatement _source92 = _2869_stmt;
        if (_source92.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2934___mcc_h114 = _source92.dtor_name;
          DAST._IType _2935___mcc_h115 = _source92.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2936___mcc_h116 = _source92.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _2937_name = _2934___mcc_h114;
          {
            _2866_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2866_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2937_name));
          }
        } else if (_source92.is_Assign) {
          DAST._IAssignLhs _2938___mcc_h120 = _source92.dtor_lhs;
          DAST._IExpression _2939___mcc_h121 = _source92.dtor_value;
        } else if (_source92.is_If) {
          DAST._IExpression _2940___mcc_h124 = _source92.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2941___mcc_h125 = _source92.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2942___mcc_h126 = _source92.dtor_els;
        } else if (_source92.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2943___mcc_h130 = _source92.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2944___mcc_h131 = _source92.dtor_body;
        } else if (_source92.is_While) {
          DAST._IExpression _2945___mcc_h134 = _source92.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2946___mcc_h135 = _source92.dtor_body;
        } else if (_source92.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2947___mcc_h138 = _source92.dtor_boundName;
          DAST._IType _2948___mcc_h139 = _source92.dtor_boundType;
          DAST._IExpression _2949___mcc_h140 = _source92.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2950___mcc_h141 = _source92.dtor_body;
        } else if (_source92.is_Call) {
          DAST._IExpression _2951___mcc_h146 = _source92.dtor_on;
          DAST._ICallName _2952___mcc_h147 = _source92.dtor_callName;
          Dafny.ISequence<DAST._IType> _2953___mcc_h148 = _source92.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2954___mcc_h149 = _source92.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2955___mcc_h150 = _source92.dtor_outs;
        } else if (_source92.is_Return) {
          DAST._IExpression _2956___mcc_h156 = _source92.dtor_expr;
        } else if (_source92.is_EarlyReturn) {
        } else if (_source92.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2957___mcc_h158 = _source92.dtor_toLabel;
        } else if (_source92.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2958___mcc_h160 = _source92.dtor_body;
        } else if (_source92.is_JumpTailCallStart) {
        } else if (_source92.is_Halt) {
        } else {
          DAST._IExpression _2959___mcc_h162 = _source92.dtor_Print_a0;
        }
        generated = (generated).Then(_2931_stmtExpr);
        _2867_i = (_2867_i) + (BigInteger.One);
      }
    }
    public static void GenAssignLhs(DAST._IAssignLhs lhs, Dafny.ISequence<Dafny.Rune> rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, out Dafny.ISequence<Dafny.Rune> generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      generated = Dafny.Sequence<Dafny.Rune>.Empty;
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IAssignLhs _source93 = lhs;
      if (_source93.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _2960___mcc_h0 = _source93.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source94 = _2960___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _2961___mcc_h1 = _source94;
        Dafny.ISequence<Dafny.Rune> _2962_id = _2961___mcc_h1;
        {
          if (((env).IsBorrowed(_2962_id)) || ((env).IsBorrowedMut(_2962_id))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), DCOMP.__default.escapeIdent(_2962_id));
          } else {
            generated = DCOMP.__default.escapeIdent(_2962_id);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2962_id);
          needsIIFE = false;
        }
      } else if (_source93.is_Select) {
        DAST._IExpression _2963___mcc_h2 = _source93.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _2964___mcc_h3 = _source93.dtor_field;
        Dafny.ISequence<Dafny.Rune> _2965_field = _2964___mcc_h3;
        DAST._IExpression _2966_on = _2963___mcc_h2;
        {
          RAST._IExpr _2967_onExpr;
          DCOMP._IOwnership _2968_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2969_recIdents;
          RAST._IExpr _out89;
          DCOMP._IOwnership _out90;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out91;
          DCOMP.COMP.GenExpr(_2966_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out89, out _out90, out _out91);
          _2967_onExpr = _out89;
          _2968_onOwned = _out90;
          _2969_recIdents = _out91;
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*("), (_2967_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _2965_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()) = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
          readIdents = _2969_recIdents;
          needsIIFE = true;
        }
      } else {
        DAST._IExpression _2970___mcc_h4 = _source93.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _2971___mcc_h5 = _source93.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _2972_indices = _2971___mcc_h5;
        DAST._IExpression _2973_on = _2970___mcc_h4;
        {
          RAST._IExpr _2974_onExpr;
          DCOMP._IOwnership _2975_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2976_recIdents;
          RAST._IExpr _out92;
          DCOMP._IOwnership _out93;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out94;
          DCOMP.COMP.GenExpr(_2973_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out92, out _out93, out _out94);
          _2974_onExpr = _out92;
          _2975_onOwned = _out93;
          _2976_recIdents = _out94;
          readIdents = _2976_recIdents;
          generated = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          BigInteger _2977_i;
          _2977_i = BigInteger.Zero;
          while ((_2977_i) < (new BigInteger((_2972_indices).Count))) {
            RAST._IExpr _2978_idx;
            DCOMP._IOwnership _2979___v61;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2980_recIdentsIdx;
            RAST._IExpr _out95;
            DCOMP._IOwnership _out96;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out97;
            DCOMP.COMP.GenExpr((_2972_indices).Select(_2977_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out95, out _out96, out _out97);
            _2978_idx = _out95;
            _2979___v61 = _out96;
            _2980_recIdentsIdx = _out97;
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let __idx")), Std.Strings.__default.OfNat(_2977_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = <usize as ::dafny_runtime::NumCast>::from(")), (_2978_idx)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap();\n"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2980_recIdentsIdx);
            _2977_i = (_2977_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, (_2974_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()"));
          _2977_i = BigInteger.Zero;
          while ((_2977_i) < (new BigInteger((_2972_indices).Count))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[__idx")), Std.Strings.__default.OfNat(_2977_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            _2977_i = (_2977_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n}"));
          needsIIFE = true;
        }
      }
    }
    public static void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      DAST._IStatement _source95 = stmt;
      if (_source95.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _2981___mcc_h0 = _source95.dtor_name;
        DAST._IType _2982___mcc_h1 = _source95.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _2983___mcc_h2 = _source95.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source96 = _2983___mcc_h2;
        if (_source96.is_None) {
          DAST._IType _2984_typ = _2982___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _2985_name = _2981___mcc_h0;
          {
            DAST._IStatement _2986_newStmt;
            _2986_newStmt = DAST.Statement.create_DeclareVar(_2985_name, _2984_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_2984_typ)));
            RAST._IExpr _out98;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out99;
            DCOMP._IEnvironment _out100;
            DCOMP.COMP.GenStmt(_2986_newStmt, selfIdent, env, isLast, earlyReturn, out _out98, out _out99, out _out100);
            generated = _out98;
            readIdents = _out99;
            newEnv = _out100;
          }
        } else {
          DAST._IExpression _2987___mcc_h3 = _source96.dtor_value;
          DAST._IExpression _2988_expression = _2987___mcc_h3;
          DAST._IType _2989_typ = _2982___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _2990_name = _2981___mcc_h0;
          {
            RAST._IType _2991_tpe;
            RAST._IType _out101;
            _out101 = DCOMP.COMP.GenType(_2989_typ, true, false);
            _2991_tpe = _out101;
            Dafny.ISequence<Dafny.Rune> _2992_varName;
            _2992_varName = DCOMP.__default.escapeIdent(_2990_name);
            bool _2993_hasCopySemantics;
            _2993_hasCopySemantics = (_2991_tpe).HasCopySemantics();
            if (((_2988_expression).is_InitializationValue) && (!(_2993_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _2992_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_2991_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_2992_varName, RAST.__default.MaybePlaceboType(_2991_tpe));
            } else {
              RAST._IExpr _2994_expr = RAST.Expr.Default();
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2995_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
              if (((_2988_expression).is_InitializationValue) && (((_2991_tpe).is_Pointer) || ((_2991_tpe).is_PointerMut))) {
                _2994_expr = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ptr"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("null_mut"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                _2995_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              } else {
                DCOMP._IOwnership _2996_exprOwnership = DCOMP.Ownership.Default();
                RAST._IExpr _out102;
                DCOMP._IOwnership _out103;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out104;
                DCOMP.COMP.GenExpr(_2988_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out102, out _out103, out _out104);
                _2994_expr = _out102;
                _2996_exprOwnership = _out103;
                _2995_recIdents = _out104;
              }
              readIdents = _2995_recIdents;
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeIdent(_2990_name), Std.Wrappers.Option<RAST._IType>.create_Some(_2991_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2994_expr));
              newEnv = (env).AddAssigned(DCOMP.__default.escapeIdent(_2990_name), _2991_tpe);
            }
          }
        }
      } else if (_source95.is_Assign) {
        DAST._IAssignLhs _2997___mcc_h4 = _source95.dtor_lhs;
        DAST._IExpression _2998___mcc_h5 = _source95.dtor_value;
        DAST._IExpression _2999_expression = _2998___mcc_h5;
        DAST._IAssignLhs _3000_lhs = _2997___mcc_h4;
        {
          Dafny.ISequence<Dafny.Rune> _3001_lhsGen;
          bool _3002_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3003_recIdents;
          Dafny.ISequence<Dafny.Rune> _out105;
          bool _out106;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out107;
          DCOMP.COMP.GenAssignLhs(_3000_lhs, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), selfIdent, env, out _out105, out _out106, out _out107);
          _3001_lhsGen = _out105;
          _3002_needsIIFE = _out106;
          _3003_recIdents = _out107;
          RAST._IExpr _3004_exprGen;
          DCOMP._IOwnership _3005___v62;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3006_exprIdents;
          RAST._IExpr _out108;
          DCOMP._IOwnership _out109;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out110;
          DCOMP.COMP.GenExpr(_2999_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out108, out _out109, out _out110);
          _3004_exprGen = _out108;
          _3005___v62 = _out109;
          _3006_exprIdents = _out110;
          if (_3002_needsIIFE) {
            newEnv = env;
            generated = RAST.Expr.create_Block(RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3004_exprGen)), RAST.Expr.create_RawExpr(_3001_lhsGen)));
          } else {
            if ((_3000_lhs).is_Ident) {
              Dafny.ISequence<Dafny.Rune> _3007_rustId;
              _3007_rustId = DCOMP.__default.escapeIdent(((_3000_lhs).dtor_ident));
              Std.Wrappers._IOption<RAST._IType> _3008_tpe;
              _3008_tpe = (env).GetType(_3007_rustId);
              if (((_3008_tpe).is_Some) && ((((_3008_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
                _3004_exprGen = RAST.__default.MaybePlacebo(_3004_exprGen);
              }
            }
            generated = RAST.__default.AssignVar(_3001_lhsGen, _3004_exprGen);
            newEnv = env;
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3003_recIdents, _3006_exprIdents);
        }
      } else if (_source95.is_If) {
        DAST._IExpression _3009___mcc_h6 = _source95.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _3010___mcc_h7 = _source95.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _3011___mcc_h8 = _source95.dtor_els;
        Dafny.ISequence<DAST._IStatement> _3012_elsDafny = _3011___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _3013_thnDafny = _3010___mcc_h7;
        DAST._IExpression _3014_cond = _3009___mcc_h6;
        {
          RAST._IExpr _3015_cond;
          DCOMP._IOwnership _3016___v63;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3017_recIdents;
          RAST._IExpr _out111;
          DCOMP._IOwnership _out112;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out113;
          DCOMP.COMP.GenExpr(_3014_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out111, out _out112, out _out113);
          _3015_cond = _out111;
          _3016___v63 = _out112;
          _3017_recIdents = _out113;
          Dafny.ISequence<Dafny.Rune> _3018_condString;
          _3018_condString = (_3015_cond)._ToString(DCOMP.__default.IND);
          readIdents = _3017_recIdents;
          RAST._IExpr _3019_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3020_thnIdents;
          DCOMP._IEnvironment _3021_thnEnv;
          RAST._IExpr _out114;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out115;
          DCOMP._IEnvironment _out116;
          DCOMP.COMP.GenStmts(_3013_thnDafny, selfIdent, env, isLast, earlyReturn, out _out114, out _out115, out _out116);
          _3019_thn = _out114;
          _3020_thnIdents = _out115;
          _3021_thnEnv = _out116;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3020_thnIdents);
          RAST._IExpr _3022_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3023_elsIdents;
          DCOMP._IEnvironment _3024_elsEnv;
          RAST._IExpr _out117;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out118;
          DCOMP._IEnvironment _out119;
          DCOMP.COMP.GenStmts(_3012_elsDafny, selfIdent, env, isLast, earlyReturn, out _out117, out _out118, out _out119);
          _3022_els = _out117;
          _3023_elsIdents = _out118;
          _3024_elsEnv = _out119;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3023_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_3015_cond, _3019_thn, _3022_els);
        }
      } else if (_source95.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _3025___mcc_h9 = _source95.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _3026___mcc_h10 = _source95.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3027_body = _3026___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _3028_lbl = _3025___mcc_h9;
        {
          RAST._IExpr _3029_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3030_bodyIdents;
          DCOMP._IEnvironment _3031_env2;
          RAST._IExpr _out120;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out121;
          DCOMP._IEnvironment _out122;
          DCOMP.COMP.GenStmts(_3027_body, selfIdent, env, isLast, earlyReturn, out _out120, out _out121, out _out122);
          _3029_body = _out120;
          _3030_bodyIdents = _out121;
          _3031_env2 = _out122;
          readIdents = _3030_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3028_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_3029_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source95.is_While) {
        DAST._IExpression _3032___mcc_h11 = _source95.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _3033___mcc_h12 = _source95.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3034_body = _3033___mcc_h12;
        DAST._IExpression _3035_cond = _3032___mcc_h11;
        {
          RAST._IExpr _3036_cond;
          DCOMP._IOwnership _3037___v64;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3038_recIdents;
          RAST._IExpr _out123;
          DCOMP._IOwnership _out124;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out125;
          DCOMP.COMP.GenExpr(_3035_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out123, out _out124, out _out125);
          _3036_cond = _out123;
          _3037___v64 = _out124;
          _3038_recIdents = _out125;
          readIdents = _3038_recIdents;
          RAST._IExpr _3039_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3040_bodyIdents;
          DCOMP._IEnvironment _3041_bodyEnv;
          RAST._IExpr _out126;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out127;
          DCOMP._IEnvironment _out128;
          DCOMP.COMP.GenStmts(_3034_body, selfIdent, env, false, earlyReturn, out _out126, out _out127, out _out128);
          _3039_bodyExpr = _out126;
          _3040_bodyIdents = _out127;
          _3041_bodyEnv = _out128;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3040_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3036_cond), _3039_bodyExpr);
        }
      } else if (_source95.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _3042___mcc_h13 = _source95.dtor_boundName;
        DAST._IType _3043___mcc_h14 = _source95.dtor_boundType;
        DAST._IExpression _3044___mcc_h15 = _source95.dtor_over;
        Dafny.ISequence<DAST._IStatement> _3045___mcc_h16 = _source95.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3046_body = _3045___mcc_h16;
        DAST._IExpression _3047_over = _3044___mcc_h15;
        DAST._IType _3048_boundType = _3043___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _3049_boundName = _3042___mcc_h13;
        {
          RAST._IExpr _3050_over;
          DCOMP._IOwnership _3051___v65;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3052_recIdents;
          RAST._IExpr _out129;
          DCOMP._IOwnership _out130;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out131;
          DCOMP.COMP.GenExpr(_3047_over, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out129, out _out130, out _out131);
          _3050_over = _out129;
          _3051___v65 = _out130;
          _3052_recIdents = _out131;
          RAST._IType _3053_boundTpe;
          RAST._IType _out132;
          _out132 = DCOMP.COMP.GenType(_3048_boundType, false, false);
          _3053_boundTpe = _out132;
          readIdents = _3052_recIdents;
          RAST._IExpr _3054_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3055_bodyIdents;
          DCOMP._IEnvironment _3056_bodyEnv;
          RAST._IExpr _out133;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out134;
          DCOMP._IEnvironment _out135;
          DCOMP.COMP.GenStmts(_3046_body, selfIdent, (env).AddAssigned(_3049_boundName, RAST.Type.create_Borrowed(_3053_boundTpe)), false, earlyReturn, out _out133, out _out134, out _out135);
          _3054_bodyExpr = _out133;
          _3055_bodyIdents = _out134;
          _3056_bodyEnv = _out135;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3055_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_3049_boundName));
          newEnv = env;
          generated = RAST.Expr.create_For(DCOMP.__default.escapeIdent(_3049_boundName), _3050_over, _3054_bodyExpr);
        }
      } else if (_source95.is_Call) {
        DAST._IExpression _3057___mcc_h17 = _source95.dtor_on;
        DAST._ICallName _3058___mcc_h18 = _source95.dtor_callName;
        Dafny.ISequence<DAST._IType> _3059___mcc_h19 = _source95.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _3060___mcc_h20 = _source95.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3061___mcc_h21 = _source95.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3062_maybeOutVars = _3061___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _3063_args = _3060___mcc_h20;
        Dafny.ISequence<DAST._IType> _3064_typeArgs = _3059___mcc_h19;
        DAST._ICallName _3065_name = _3058___mcc_h18;
        DAST._IExpression _3066_on = _3057___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _3067_onExpr;
          DCOMP._IOwnership _3068___v68;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3069_enclosingIdents;
          RAST._IExpr _out136;
          DCOMP._IOwnership _out137;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out138;
          DCOMP.COMP.GenExpr(_3066_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out136, out _out137, out _out138);
          _3067_onExpr = _out136;
          _3068___v68 = _out137;
          _3069_enclosingIdents = _out138;
          Dafny.ISequence<RAST._IType> _3070_typeExprs;
          _3070_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_3064_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _3071_typeI;
            _3071_typeI = BigInteger.Zero;
            Dafny.ISequence<RAST._IType> _3072_typeArgsR;
            _3072_typeArgsR = Dafny.Sequence<RAST._IType>.FromElements();
            while ((_3071_typeI) < (new BigInteger((_3064_typeArgs).Count))) {
              RAST._IType _3073_tpe;
              RAST._IType _out139;
              _out139 = DCOMP.COMP.GenType((_3064_typeArgs).Select(_3071_typeI), false, false);
              _3073_tpe = _out139;
              _3072_typeArgsR = Dafny.Sequence<RAST._IType>.Concat(_3072_typeArgsR, Dafny.Sequence<RAST._IType>.FromElements(_3073_tpe));
              _3071_typeI = (_3071_typeI) + (BigInteger.One);
            }
          }
          Dafny.ISequence<RAST._IExpr> _3074_argExprs;
          _3074_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi10 = new BigInteger((_3063_args).Count);
          for (BigInteger _3075_i = BigInteger.Zero; _3075_i < _hi10; _3075_i++) {
            DCOMP._IOwnership _3076_argOwnership;
            _3076_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_3065_name).is_Name) && ((_3075_i) < (new BigInteger((((_3065_name).dtor_signature)).Count)))) {
              RAST._IType _3077_tpe;
              RAST._IType _out140;
              _out140 = DCOMP.COMP.GenType(((((_3065_name).dtor_signature)).Select(_3075_i)).dtor_typ, false, false);
              _3077_tpe = _out140;
              if ((_3077_tpe).HasCopySemantics()) {
                _3076_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _3078_argExpr;
            DCOMP._IOwnership _3079_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3080_argIdents;
            RAST._IExpr _out141;
            DCOMP._IOwnership _out142;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out143;
            DCOMP.COMP.GenExpr((_3063_args).Select(_3075_i), selfIdent, env, _3076_argOwnership, out _out141, out _out142, out _out143);
            _3078_argExpr = _out141;
            _3079_ownership = _out142;
            _3080_argIdents = _out143;
            _3074_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_3074_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_3078_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3080_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3069_enclosingIdents);
          Dafny.ISequence<Dafny.Rune> _3081_renderedName;
          _3081_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source97) => {
            if (_source97.is_Name) {
              Dafny.ISequence<Dafny.Rune> _3082___mcc_h26 = _source97.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _3083___mcc_h27 = _source97.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _3084___mcc_h28 = _source97.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _3085_name = _3082___mcc_h26;
              return DCOMP.__default.escapeIdent(_3085_name);
            } else if (_source97.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source97.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source97.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_3065_name);
          DAST._IExpression _source98 = _3066_on;
          if (_source98.is_Literal) {
            DAST._ILiteral _3086___mcc_h29 = _source98.dtor_Literal_a0;
            {
              DAST._ICallName _source99 = _3065_name;
              if (_source99.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3087___mcc_h211 = _source99.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3088___mcc_h212 = _source99.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3089___mcc_h213 = _source99.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source100 = _3088___mcc_h212;
                if (_source100.is_None) {
                } else {
                  DAST._IType _3090___mcc_h217 = _source100.dtor_value;
                  DAST._IType _3091_tpe = _3090___mcc_h217;
                  RAST._IType _3092_typ;
                  RAST._IType _out144;
                  _out144 = DCOMP.COMP.GenType(_3091_tpe, false, false);
                  _3092_typ = _out144;
                  if (((_3092_typ).is_Pointer) || ((_3092_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source99.is_MapBuilderAdd) {
              } else if (_source99.is_MapBuilderBuild) {
              } else if (_source99.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _3093___mcc_h31 = _source98.dtor_Ident_a0;
            {
              DAST._ICallName _source101 = _3065_name;
              if (_source101.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3094___mcc_h219 = _source101.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3095___mcc_h220 = _source101.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3096___mcc_h221 = _source101.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source102 = _3095___mcc_h220;
                if (_source102.is_None) {
                } else {
                  DAST._IType _3097___mcc_h225 = _source102.dtor_value;
                  DAST._IType _3098_tpe = _3097___mcc_h225;
                  RAST._IType _3099_typ;
                  RAST._IType _out145;
                  _out145 = DCOMP.COMP.GenType(_3098_tpe, false, false);
                  _3099_typ = _out145;
                  if (((_3099_typ).is_Pointer) || ((_3099_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source101.is_MapBuilderAdd) {
              } else if (_source101.is_MapBuilderBuild) {
              } else if (_source101.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3100___mcc_h33 = _source98.dtor_Companion_a0;
            {
              _3067_onExpr = (_3067_onExpr).MSel(_3081_renderedName);
            }
          } else if (_source98.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _3101___mcc_h35 = _source98.dtor_Tuple_a0;
            {
              DAST._ICallName _source103 = _3065_name;
              if (_source103.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3102___mcc_h227 = _source103.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3103___mcc_h228 = _source103.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3104___mcc_h229 = _source103.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source104 = _3103___mcc_h228;
                if (_source104.is_None) {
                } else {
                  DAST._IType _3105___mcc_h233 = _source104.dtor_value;
                  DAST._IType _3106_tpe = _3105___mcc_h233;
                  RAST._IType _3107_typ;
                  RAST._IType _out146;
                  _out146 = DCOMP.COMP.GenType(_3106_tpe, false, false);
                  _3107_typ = _out146;
                  if (((_3107_typ).is_Pointer) || ((_3107_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source103.is_MapBuilderAdd) {
              } else if (_source103.is_MapBuilderBuild) {
              } else if (_source103.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3108___mcc_h37 = _source98.dtor_path;
            Dafny.ISequence<DAST._IType> _3109___mcc_h38 = _source98.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3110___mcc_h39 = _source98.dtor_args;
            {
              DAST._ICallName _source105 = _3065_name;
              if (_source105.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3111___mcc_h235 = _source105.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3112___mcc_h236 = _source105.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3113___mcc_h237 = _source105.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source106 = _3112___mcc_h236;
                if (_source106.is_None) {
                } else {
                  DAST._IType _3114___mcc_h241 = _source106.dtor_value;
                  DAST._IType _3115_tpe = _3114___mcc_h241;
                  RAST._IType _3116_typ;
                  RAST._IType _out147;
                  _out147 = DCOMP.COMP.GenType(_3115_tpe, false, false);
                  _3116_typ = _out147;
                  if (((_3116_typ).is_Pointer) || ((_3116_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source105.is_MapBuilderAdd) {
              } else if (_source105.is_MapBuilderBuild) {
              } else if (_source105.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _3117___mcc_h43 = _source98.dtor_dims;
            DAST._IType _3118___mcc_h44 = _source98.dtor_typ;
            {
              DAST._ICallName _source107 = _3065_name;
              if (_source107.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3119___mcc_h243 = _source107.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3120___mcc_h244 = _source107.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3121___mcc_h245 = _source107.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source108 = _3120___mcc_h244;
                if (_source108.is_None) {
                } else {
                  DAST._IType _3122___mcc_h249 = _source108.dtor_value;
                  DAST._IType _3123_tpe = _3122___mcc_h249;
                  RAST._IType _3124_typ;
                  RAST._IType _out148;
                  _out148 = DCOMP.COMP.GenType(_3123_tpe, false, false);
                  _3124_typ = _out148;
                  if (((_3124_typ).is_Pointer) || ((_3124_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source107.is_MapBuilderAdd) {
              } else if (_source107.is_MapBuilderBuild) {
              } else if (_source107.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_DatatypeValue) {
            DAST._IDatatypeType _3125___mcc_h47 = _source98.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _3126___mcc_h48 = _source98.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _3127___mcc_h49 = _source98.dtor_variant;
            bool _3128___mcc_h50 = _source98.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _3129___mcc_h51 = _source98.dtor_contents;
            {
              DAST._ICallName _source109 = _3065_name;
              if (_source109.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3130___mcc_h251 = _source109.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3131___mcc_h252 = _source109.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3132___mcc_h253 = _source109.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source110 = _3131___mcc_h252;
                if (_source110.is_None) {
                } else {
                  DAST._IType _3133___mcc_h257 = _source110.dtor_value;
                  DAST._IType _3134_tpe = _3133___mcc_h257;
                  RAST._IType _3135_typ;
                  RAST._IType _out149;
                  _out149 = DCOMP.COMP.GenType(_3134_tpe, false, false);
                  _3135_typ = _out149;
                  if (((_3135_typ).is_Pointer) || ((_3135_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source109.is_MapBuilderAdd) {
              } else if (_source109.is_MapBuilderBuild) {
              } else if (_source109.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Convert) {
            DAST._IExpression _3136___mcc_h57 = _source98.dtor_value;
            DAST._IType _3137___mcc_h58 = _source98.dtor_from;
            DAST._IType _3138___mcc_h59 = _source98.dtor_typ;
            {
              DAST._ICallName _source111 = _3065_name;
              if (_source111.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3139___mcc_h259 = _source111.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3140___mcc_h260 = _source111.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3141___mcc_h261 = _source111.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source112 = _3140___mcc_h260;
                if (_source112.is_None) {
                } else {
                  DAST._IType _3142___mcc_h265 = _source112.dtor_value;
                  DAST._IType _3143_tpe = _3142___mcc_h265;
                  RAST._IType _3144_typ;
                  RAST._IType _out150;
                  _out150 = DCOMP.COMP.GenType(_3143_tpe, false, false);
                  _3144_typ = _out150;
                  if (((_3144_typ).is_Pointer) || ((_3144_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source111.is_MapBuilderAdd) {
              } else if (_source111.is_MapBuilderBuild) {
              } else if (_source111.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SeqConstruct) {
            DAST._IExpression _3145___mcc_h63 = _source98.dtor_length;
            DAST._IExpression _3146___mcc_h64 = _source98.dtor_elem;
            {
              DAST._ICallName _source113 = _3065_name;
              if (_source113.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3147___mcc_h267 = _source113.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3148___mcc_h268 = _source113.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3149___mcc_h269 = _source113.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source114 = _3148___mcc_h268;
                if (_source114.is_None) {
                } else {
                  DAST._IType _3150___mcc_h273 = _source114.dtor_value;
                  DAST._IType _3151_tpe = _3150___mcc_h273;
                  RAST._IType _3152_typ;
                  RAST._IType _out151;
                  _out151 = DCOMP.COMP.GenType(_3151_tpe, false, false);
                  _3152_typ = _out151;
                  if (((_3152_typ).is_Pointer) || ((_3152_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source113.is_MapBuilderAdd) {
              } else if (_source113.is_MapBuilderBuild) {
              } else if (_source113.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _3153___mcc_h67 = _source98.dtor_elements;
            DAST._IType _3154___mcc_h68 = _source98.dtor_typ;
            {
              DAST._ICallName _source115 = _3065_name;
              if (_source115.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3155___mcc_h275 = _source115.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3156___mcc_h276 = _source115.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3157___mcc_h277 = _source115.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source116 = _3156___mcc_h276;
                if (_source116.is_None) {
                } else {
                  DAST._IType _3158___mcc_h281 = _source116.dtor_value;
                  DAST._IType _3159_tpe = _3158___mcc_h281;
                  RAST._IType _3160_typ;
                  RAST._IType _out152;
                  _out152 = DCOMP.COMP.GenType(_3159_tpe, false, false);
                  _3160_typ = _out152;
                  if (((_3160_typ).is_Pointer) || ((_3160_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source115.is_MapBuilderAdd) {
              } else if (_source115.is_MapBuilderBuild) {
              } else if (_source115.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _3161___mcc_h71 = _source98.dtor_elements;
            {
              DAST._ICallName _source117 = _3065_name;
              if (_source117.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3162___mcc_h283 = _source117.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3163___mcc_h284 = _source117.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3164___mcc_h285 = _source117.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source118 = _3163___mcc_h284;
                if (_source118.is_None) {
                } else {
                  DAST._IType _3165___mcc_h289 = _source118.dtor_value;
                  DAST._IType _3166_tpe = _3165___mcc_h289;
                  RAST._IType _3167_typ;
                  RAST._IType _out153;
                  _out153 = DCOMP.COMP.GenType(_3166_tpe, false, false);
                  _3167_typ = _out153;
                  if (((_3167_typ).is_Pointer) || ((_3167_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source117.is_MapBuilderAdd) {
              } else if (_source117.is_MapBuilderBuild) {
              } else if (_source117.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _3168___mcc_h73 = _source98.dtor_elements;
            {
              DAST._ICallName _source119 = _3065_name;
              if (_source119.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3169___mcc_h291 = _source119.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3170___mcc_h292 = _source119.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3171___mcc_h293 = _source119.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source120 = _3170___mcc_h292;
                if (_source120.is_None) {
                } else {
                  DAST._IType _3172___mcc_h297 = _source120.dtor_value;
                  DAST._IType _3173_tpe = _3172___mcc_h297;
                  RAST._IType _3174_typ;
                  RAST._IType _out154;
                  _out154 = DCOMP.COMP.GenType(_3173_tpe, false, false);
                  _3174_typ = _out154;
                  if (((_3174_typ).is_Pointer) || ((_3174_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source119.is_MapBuilderAdd) {
              } else if (_source119.is_MapBuilderBuild) {
              } else if (_source119.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _3175___mcc_h75 = _source98.dtor_mapElems;
            {
              DAST._ICallName _source121 = _3065_name;
              if (_source121.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3176___mcc_h299 = _source121.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3177___mcc_h300 = _source121.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3178___mcc_h301 = _source121.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source122 = _3177___mcc_h300;
                if (_source122.is_None) {
                } else {
                  DAST._IType _3179___mcc_h305 = _source122.dtor_value;
                  DAST._IType _3180_tpe = _3179___mcc_h305;
                  RAST._IType _3181_typ;
                  RAST._IType _out155;
                  _out155 = DCOMP.COMP.GenType(_3180_tpe, false, false);
                  _3181_typ = _out155;
                  if (((_3181_typ).is_Pointer) || ((_3181_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source121.is_MapBuilderAdd) {
              } else if (_source121.is_MapBuilderBuild) {
              } else if (_source121.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapBuilder) {
            DAST._IType _3182___mcc_h77 = _source98.dtor_keyType;
            DAST._IType _3183___mcc_h78 = _source98.dtor_valueType;
            {
              DAST._ICallName _source123 = _3065_name;
              if (_source123.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3184___mcc_h307 = _source123.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3185___mcc_h308 = _source123.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3186___mcc_h309 = _source123.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source124 = _3185___mcc_h308;
                if (_source124.is_None) {
                } else {
                  DAST._IType _3187___mcc_h313 = _source124.dtor_value;
                  DAST._IType _3188_tpe = _3187___mcc_h313;
                  RAST._IType _3189_typ;
                  RAST._IType _out156;
                  _out156 = DCOMP.COMP.GenType(_3188_tpe, false, false);
                  _3189_typ = _out156;
                  if (((_3189_typ).is_Pointer) || ((_3189_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source123.is_MapBuilderAdd) {
              } else if (_source123.is_MapBuilderBuild) {
              } else if (_source123.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SeqUpdate) {
            DAST._IExpression _3190___mcc_h81 = _source98.dtor_expr;
            DAST._IExpression _3191___mcc_h82 = _source98.dtor_indexExpr;
            DAST._IExpression _3192___mcc_h83 = _source98.dtor_value;
            {
              DAST._ICallName _source125 = _3065_name;
              if (_source125.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3193___mcc_h315 = _source125.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3194___mcc_h316 = _source125.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3195___mcc_h317 = _source125.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source126 = _3194___mcc_h316;
                if (_source126.is_None) {
                } else {
                  DAST._IType _3196___mcc_h321 = _source126.dtor_value;
                  DAST._IType _3197_tpe = _3196___mcc_h321;
                  RAST._IType _3198_typ;
                  RAST._IType _out157;
                  _out157 = DCOMP.COMP.GenType(_3197_tpe, false, false);
                  _3198_typ = _out157;
                  if (((_3198_typ).is_Pointer) || ((_3198_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source125.is_MapBuilderAdd) {
              } else if (_source125.is_MapBuilderBuild) {
              } else if (_source125.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapUpdate) {
            DAST._IExpression _3199___mcc_h87 = _source98.dtor_expr;
            DAST._IExpression _3200___mcc_h88 = _source98.dtor_indexExpr;
            DAST._IExpression _3201___mcc_h89 = _source98.dtor_value;
            {
              DAST._ICallName _source127 = _3065_name;
              if (_source127.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3202___mcc_h323 = _source127.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3203___mcc_h324 = _source127.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3204___mcc_h325 = _source127.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source128 = _3203___mcc_h324;
                if (_source128.is_None) {
                } else {
                  DAST._IType _3205___mcc_h329 = _source128.dtor_value;
                  DAST._IType _3206_tpe = _3205___mcc_h329;
                  RAST._IType _3207_typ;
                  RAST._IType _out158;
                  _out158 = DCOMP.COMP.GenType(_3206_tpe, false, false);
                  _3207_typ = _out158;
                  if (((_3207_typ).is_Pointer) || ((_3207_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source127.is_MapBuilderAdd) {
              } else if (_source127.is_MapBuilderBuild) {
              } else if (_source127.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SetBuilder) {
            DAST._IType _3208___mcc_h93 = _source98.dtor_elemType;
            {
              DAST._ICallName _source129 = _3065_name;
              if (_source129.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3209___mcc_h331 = _source129.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3210___mcc_h332 = _source129.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3211___mcc_h333 = _source129.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source130 = _3210___mcc_h332;
                if (_source130.is_None) {
                } else {
                  DAST._IType _3212___mcc_h337 = _source130.dtor_value;
                  DAST._IType _3213_tpe = _3212___mcc_h337;
                  RAST._IType _3214_typ;
                  RAST._IType _out159;
                  _out159 = DCOMP.COMP.GenType(_3213_tpe, false, false);
                  _3214_typ = _out159;
                  if (((_3214_typ).is_Pointer) || ((_3214_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source129.is_MapBuilderAdd) {
              } else if (_source129.is_MapBuilderBuild) {
              } else if (_source129.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_ToMultiset) {
            DAST._IExpression _3215___mcc_h95 = _source98.dtor_ToMultiset_a0;
            {
              DAST._ICallName _source131 = _3065_name;
              if (_source131.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3216___mcc_h339 = _source131.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3217___mcc_h340 = _source131.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3218___mcc_h341 = _source131.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source132 = _3217___mcc_h340;
                if (_source132.is_None) {
                } else {
                  DAST._IType _3219___mcc_h345 = _source132.dtor_value;
                  DAST._IType _3220_tpe = _3219___mcc_h345;
                  RAST._IType _3221_typ;
                  RAST._IType _out160;
                  _out160 = DCOMP.COMP.GenType(_3220_tpe, false, false);
                  _3221_typ = _out160;
                  if (((_3221_typ).is_Pointer) || ((_3221_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source131.is_MapBuilderAdd) {
              } else if (_source131.is_MapBuilderBuild) {
              } else if (_source131.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_This) {
            {
              DAST._ICallName _source133 = _3065_name;
              if (_source133.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3222___mcc_h347 = _source133.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3223___mcc_h348 = _source133.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3224___mcc_h349 = _source133.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source134 = _3223___mcc_h348;
                if (_source134.is_None) {
                } else {
                  DAST._IType _3225___mcc_h353 = _source134.dtor_value;
                  DAST._IType _3226_tpe = _3225___mcc_h353;
                  RAST._IType _3227_typ;
                  RAST._IType _out161;
                  _out161 = DCOMP.COMP.GenType(_3226_tpe, false, false);
                  _3227_typ = _out161;
                  if (((_3227_typ).is_Pointer) || ((_3227_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source133.is_MapBuilderAdd) {
              } else if (_source133.is_MapBuilderBuild) {
              } else if (_source133.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Ite) {
            DAST._IExpression _3228___mcc_h97 = _source98.dtor_cond;
            DAST._IExpression _3229___mcc_h98 = _source98.dtor_thn;
            DAST._IExpression _3230___mcc_h99 = _source98.dtor_els;
            {
              DAST._ICallName _source135 = _3065_name;
              if (_source135.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3231___mcc_h355 = _source135.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3232___mcc_h356 = _source135.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3233___mcc_h357 = _source135.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source136 = _3232___mcc_h356;
                if (_source136.is_None) {
                } else {
                  DAST._IType _3234___mcc_h361 = _source136.dtor_value;
                  DAST._IType _3235_tpe = _3234___mcc_h361;
                  RAST._IType _3236_typ;
                  RAST._IType _out162;
                  _out162 = DCOMP.COMP.GenType(_3235_tpe, false, false);
                  _3236_typ = _out162;
                  if (((_3236_typ).is_Pointer) || ((_3236_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source135.is_MapBuilderAdd) {
              } else if (_source135.is_MapBuilderBuild) {
              } else if (_source135.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_UnOp) {
            DAST._IUnaryOp _3237___mcc_h103 = _source98.dtor_unOp;
            DAST._IExpression _3238___mcc_h104 = _source98.dtor_expr;
            DAST.Format._IUnOpFormat _3239___mcc_h105 = _source98.dtor_format1;
            {
              DAST._ICallName _source137 = _3065_name;
              if (_source137.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3240___mcc_h363 = _source137.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3241___mcc_h364 = _source137.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3242___mcc_h365 = _source137.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source138 = _3241___mcc_h364;
                if (_source138.is_None) {
                } else {
                  DAST._IType _3243___mcc_h369 = _source138.dtor_value;
                  DAST._IType _3244_tpe = _3243___mcc_h369;
                  RAST._IType _3245_typ;
                  RAST._IType _out163;
                  _out163 = DCOMP.COMP.GenType(_3244_tpe, false, false);
                  _3245_typ = _out163;
                  if (((_3245_typ).is_Pointer) || ((_3245_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source137.is_MapBuilderAdd) {
              } else if (_source137.is_MapBuilderBuild) {
              } else if (_source137.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_BinOp) {
            DAST._IBinOp _3246___mcc_h109 = _source98.dtor_op;
            DAST._IExpression _3247___mcc_h110 = _source98.dtor_left;
            DAST._IExpression _3248___mcc_h111 = _source98.dtor_right;
            DAST.Format._IBinOpFormat _3249___mcc_h112 = _source98.dtor_format2;
            {
              DAST._ICallName _source139 = _3065_name;
              if (_source139.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3250___mcc_h371 = _source139.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3251___mcc_h372 = _source139.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3252___mcc_h373 = _source139.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source140 = _3251___mcc_h372;
                if (_source140.is_None) {
                } else {
                  DAST._IType _3253___mcc_h377 = _source140.dtor_value;
                  DAST._IType _3254_tpe = _3253___mcc_h377;
                  RAST._IType _3255_typ;
                  RAST._IType _out164;
                  _out164 = DCOMP.COMP.GenType(_3254_tpe, false, false);
                  _3255_typ = _out164;
                  if (((_3255_typ).is_Pointer) || ((_3255_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source139.is_MapBuilderAdd) {
              } else if (_source139.is_MapBuilderBuild) {
              } else if (_source139.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_ArrayLen) {
            DAST._IExpression _3256___mcc_h117 = _source98.dtor_expr;
            BigInteger _3257___mcc_h118 = _source98.dtor_dim;
            {
              DAST._ICallName _source141 = _3065_name;
              if (_source141.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3258___mcc_h379 = _source141.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3259___mcc_h380 = _source141.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3260___mcc_h381 = _source141.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source142 = _3259___mcc_h380;
                if (_source142.is_None) {
                } else {
                  DAST._IType _3261___mcc_h385 = _source142.dtor_value;
                  DAST._IType _3262_tpe = _3261___mcc_h385;
                  RAST._IType _3263_typ;
                  RAST._IType _out165;
                  _out165 = DCOMP.COMP.GenType(_3262_tpe, false, false);
                  _3263_typ = _out165;
                  if (((_3263_typ).is_Pointer) || ((_3263_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source141.is_MapBuilderAdd) {
              } else if (_source141.is_MapBuilderBuild) {
              } else if (_source141.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapKeys) {
            DAST._IExpression _3264___mcc_h121 = _source98.dtor_expr;
            {
              DAST._ICallName _source143 = _3065_name;
              if (_source143.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3265___mcc_h387 = _source143.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3266___mcc_h388 = _source143.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3267___mcc_h389 = _source143.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source144 = _3266___mcc_h388;
                if (_source144.is_None) {
                } else {
                  DAST._IType _3268___mcc_h393 = _source144.dtor_value;
                  DAST._IType _3269_tpe = _3268___mcc_h393;
                  RAST._IType _3270_typ;
                  RAST._IType _out166;
                  _out166 = DCOMP.COMP.GenType(_3269_tpe, false, false);
                  _3270_typ = _out166;
                  if (((_3270_typ).is_Pointer) || ((_3270_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source143.is_MapBuilderAdd) {
              } else if (_source143.is_MapBuilderBuild) {
              } else if (_source143.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapValues) {
            DAST._IExpression _3271___mcc_h123 = _source98.dtor_expr;
            {
              DAST._ICallName _source145 = _3065_name;
              if (_source145.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3272___mcc_h395 = _source145.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3273___mcc_h396 = _source145.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3274___mcc_h397 = _source145.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source146 = _3273___mcc_h396;
                if (_source146.is_None) {
                } else {
                  DAST._IType _3275___mcc_h401 = _source146.dtor_value;
                  DAST._IType _3276_tpe = _3275___mcc_h401;
                  RAST._IType _3277_typ;
                  RAST._IType _out167;
                  _out167 = DCOMP.COMP.GenType(_3276_tpe, false, false);
                  _3277_typ = _out167;
                  if (((_3277_typ).is_Pointer) || ((_3277_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source145.is_MapBuilderAdd) {
              } else if (_source145.is_MapBuilderBuild) {
              } else if (_source145.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Select) {
            DAST._IExpression _3278___mcc_h125 = _source98.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3279___mcc_h126 = _source98.dtor_field;
            bool _3280___mcc_h127 = _source98.dtor_isConstant;
            bool _3281___mcc_h128 = _source98.dtor_onDatatype;
            {
              DAST._ICallName _source147 = _3065_name;
              if (_source147.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3282___mcc_h403 = _source147.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3283___mcc_h404 = _source147.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3284___mcc_h405 = _source147.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source148 = _3283___mcc_h404;
                if (_source148.is_None) {
                } else {
                  DAST._IType _3285___mcc_h409 = _source148.dtor_value;
                  DAST._IType _3286_tpe = _3285___mcc_h409;
                  RAST._IType _3287_typ;
                  RAST._IType _out168;
                  _out168 = DCOMP.COMP.GenType(_3286_tpe, false, false);
                  _3287_typ = _out168;
                  if (((_3287_typ).is_Pointer) || ((_3287_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source147.is_MapBuilderAdd) {
              } else if (_source147.is_MapBuilderBuild) {
              } else if (_source147.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SelectFn) {
            DAST._IExpression _3288___mcc_h133 = _source98.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3289___mcc_h134 = _source98.dtor_field;
            bool _3290___mcc_h135 = _source98.dtor_onDatatype;
            bool _3291___mcc_h136 = _source98.dtor_isStatic;
            BigInteger _3292___mcc_h137 = _source98.dtor_arity;
            {
              DAST._ICallName _source149 = _3065_name;
              if (_source149.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3293___mcc_h411 = _source149.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3294___mcc_h412 = _source149.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3295___mcc_h413 = _source149.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source150 = _3294___mcc_h412;
                if (_source150.is_None) {
                } else {
                  DAST._IType _3296___mcc_h417 = _source150.dtor_value;
                  DAST._IType _3297_tpe = _3296___mcc_h417;
                  RAST._IType _3298_typ;
                  RAST._IType _out169;
                  _out169 = DCOMP.COMP.GenType(_3297_tpe, false, false);
                  _3298_typ = _out169;
                  if (((_3298_typ).is_Pointer) || ((_3298_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source149.is_MapBuilderAdd) {
              } else if (_source149.is_MapBuilderBuild) {
              } else if (_source149.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Index) {
            DAST._IExpression _3299___mcc_h143 = _source98.dtor_expr;
            DAST._ICollKind _3300___mcc_h144 = _source98.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _3301___mcc_h145 = _source98.dtor_indices;
            {
              DAST._ICallName _source151 = _3065_name;
              if (_source151.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3302___mcc_h419 = _source151.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3303___mcc_h420 = _source151.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3304___mcc_h421 = _source151.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source152 = _3303___mcc_h420;
                if (_source152.is_None) {
                } else {
                  DAST._IType _3305___mcc_h425 = _source152.dtor_value;
                  DAST._IType _3306_tpe = _3305___mcc_h425;
                  RAST._IType _3307_typ;
                  RAST._IType _out170;
                  _out170 = DCOMP.COMP.GenType(_3306_tpe, false, false);
                  _3307_typ = _out170;
                  if (((_3307_typ).is_Pointer) || ((_3307_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source151.is_MapBuilderAdd) {
              } else if (_source151.is_MapBuilderBuild) {
              } else if (_source151.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_IndexRange) {
            DAST._IExpression _3308___mcc_h149 = _source98.dtor_expr;
            bool _3309___mcc_h150 = _source98.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _3310___mcc_h151 = _source98.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _3311___mcc_h152 = _source98.dtor_high;
            {
              DAST._ICallName _source153 = _3065_name;
              if (_source153.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3312___mcc_h427 = _source153.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3313___mcc_h428 = _source153.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3314___mcc_h429 = _source153.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source154 = _3313___mcc_h428;
                if (_source154.is_None) {
                } else {
                  DAST._IType _3315___mcc_h433 = _source154.dtor_value;
                  DAST._IType _3316_tpe = _3315___mcc_h433;
                  RAST._IType _3317_typ;
                  RAST._IType _out171;
                  _out171 = DCOMP.COMP.GenType(_3316_tpe, false, false);
                  _3317_typ = _out171;
                  if (((_3317_typ).is_Pointer) || ((_3317_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source153.is_MapBuilderAdd) {
              } else if (_source153.is_MapBuilderBuild) {
              } else if (_source153.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_TupleSelect) {
            DAST._IExpression _3318___mcc_h157 = _source98.dtor_expr;
            BigInteger _3319___mcc_h158 = _source98.dtor_index;
            {
              DAST._ICallName _source155 = _3065_name;
              if (_source155.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3320___mcc_h435 = _source155.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3321___mcc_h436 = _source155.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3322___mcc_h437 = _source155.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source156 = _3321___mcc_h436;
                if (_source156.is_None) {
                } else {
                  DAST._IType _3323___mcc_h441 = _source156.dtor_value;
                  DAST._IType _3324_tpe = _3323___mcc_h441;
                  RAST._IType _3325_typ;
                  RAST._IType _out172;
                  _out172 = DCOMP.COMP.GenType(_3324_tpe, false, false);
                  _3325_typ = _out172;
                  if (((_3325_typ).is_Pointer) || ((_3325_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source155.is_MapBuilderAdd) {
              } else if (_source155.is_MapBuilderBuild) {
              } else if (_source155.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Call) {
            DAST._IExpression _3326___mcc_h161 = _source98.dtor_on;
            DAST._ICallName _3327___mcc_h162 = _source98.dtor_callName;
            Dafny.ISequence<DAST._IType> _3328___mcc_h163 = _source98.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3329___mcc_h164 = _source98.dtor_args;
            {
              DAST._ICallName _source157 = _3065_name;
              if (_source157.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3330___mcc_h443 = _source157.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3331___mcc_h444 = _source157.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3332___mcc_h445 = _source157.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source158 = _3331___mcc_h444;
                if (_source158.is_None) {
                } else {
                  DAST._IType _3333___mcc_h449 = _source158.dtor_value;
                  DAST._IType _3334_tpe = _3333___mcc_h449;
                  RAST._IType _3335_typ;
                  RAST._IType _out173;
                  _out173 = DCOMP.COMP.GenType(_3334_tpe, false, false);
                  _3335_typ = _out173;
                  if (((_3335_typ).is_Pointer) || ((_3335_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source157.is_MapBuilderAdd) {
              } else if (_source157.is_MapBuilderBuild) {
              } else if (_source157.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _3336___mcc_h169 = _source98.dtor_params;
            DAST._IType _3337___mcc_h170 = _source98.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _3338___mcc_h171 = _source98.dtor_body;
            {
              DAST._ICallName _source159 = _3065_name;
              if (_source159.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3339___mcc_h451 = _source159.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3340___mcc_h452 = _source159.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3341___mcc_h453 = _source159.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source160 = _3340___mcc_h452;
                if (_source160.is_None) {
                } else {
                  DAST._IType _3342___mcc_h457 = _source160.dtor_value;
                  DAST._IType _3343_tpe = _3342___mcc_h457;
                  RAST._IType _3344_typ;
                  RAST._IType _out174;
                  _out174 = DCOMP.COMP.GenType(_3343_tpe, false, false);
                  _3344_typ = _out174;
                  if (((_3344_typ).is_Pointer) || ((_3344_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source159.is_MapBuilderAdd) {
              } else if (_source159.is_MapBuilderBuild) {
              } else if (_source159.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _3345___mcc_h175 = _source98.dtor_values;
            DAST._IType _3346___mcc_h176 = _source98.dtor_retType;
            DAST._IExpression _3347___mcc_h177 = _source98.dtor_expr;
            {
              DAST._ICallName _source161 = _3065_name;
              if (_source161.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3348___mcc_h459 = _source161.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3349___mcc_h460 = _source161.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3350___mcc_h461 = _source161.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source162 = _3349___mcc_h460;
                if (_source162.is_None) {
                } else {
                  DAST._IType _3351___mcc_h465 = _source162.dtor_value;
                  DAST._IType _3352_tpe = _3351___mcc_h465;
                  RAST._IType _3353_typ;
                  RAST._IType _out175;
                  _out175 = DCOMP.COMP.GenType(_3352_tpe, false, false);
                  _3353_typ = _out175;
                  if (((_3353_typ).is_Pointer) || ((_3353_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source161.is_MapBuilderAdd) {
              } else if (_source161.is_MapBuilderBuild) {
              } else if (_source161.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _3354___mcc_h181 = _source98.dtor_name;
            DAST._IType _3355___mcc_h182 = _source98.dtor_typ;
            DAST._IExpression _3356___mcc_h183 = _source98.dtor_value;
            DAST._IExpression _3357___mcc_h184 = _source98.dtor_iifeBody;
            {
              DAST._ICallName _source163 = _3065_name;
              if (_source163.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3358___mcc_h467 = _source163.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3359___mcc_h468 = _source163.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3360___mcc_h469 = _source163.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source164 = _3359___mcc_h468;
                if (_source164.is_None) {
                } else {
                  DAST._IType _3361___mcc_h473 = _source164.dtor_value;
                  DAST._IType _3362_tpe = _3361___mcc_h473;
                  RAST._IType _3363_typ;
                  RAST._IType _out176;
                  _out176 = DCOMP.COMP.GenType(_3362_tpe, false, false);
                  _3363_typ = _out176;
                  if (((_3363_typ).is_Pointer) || ((_3363_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source163.is_MapBuilderAdd) {
              } else if (_source163.is_MapBuilderBuild) {
              } else if (_source163.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Apply) {
            DAST._IExpression _3364___mcc_h189 = _source98.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _3365___mcc_h190 = _source98.dtor_args;
            {
              DAST._ICallName _source165 = _3065_name;
              if (_source165.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3366___mcc_h475 = _source165.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3367___mcc_h476 = _source165.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3368___mcc_h477 = _source165.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source166 = _3367___mcc_h476;
                if (_source166.is_None) {
                } else {
                  DAST._IType _3369___mcc_h481 = _source166.dtor_value;
                  DAST._IType _3370_tpe = _3369___mcc_h481;
                  RAST._IType _3371_typ;
                  RAST._IType _out177;
                  _out177 = DCOMP.COMP.GenType(_3370_tpe, false, false);
                  _3371_typ = _out177;
                  if (((_3371_typ).is_Pointer) || ((_3371_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source165.is_MapBuilderAdd) {
              } else if (_source165.is_MapBuilderBuild) {
              } else if (_source165.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_TypeTest) {
            DAST._IExpression _3372___mcc_h193 = _source98.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3373___mcc_h194 = _source98.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _3374___mcc_h195 = _source98.dtor_variant;
            {
              DAST._ICallName _source167 = _3065_name;
              if (_source167.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3375___mcc_h483 = _source167.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3376___mcc_h484 = _source167.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3377___mcc_h485 = _source167.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source168 = _3376___mcc_h484;
                if (_source168.is_None) {
                } else {
                  DAST._IType _3378___mcc_h489 = _source168.dtor_value;
                  DAST._IType _3379_tpe = _3378___mcc_h489;
                  RAST._IType _3380_typ;
                  RAST._IType _out178;
                  _out178 = DCOMP.COMP.GenType(_3379_tpe, false, false);
                  _3380_typ = _out178;
                  if (((_3380_typ).is_Pointer) || ((_3380_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source167.is_MapBuilderAdd) {
              } else if (_source167.is_MapBuilderBuild) {
              } else if (_source167.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_InitializationValue) {
            DAST._IType _3381___mcc_h199 = _source98.dtor_typ;
            {
              DAST._ICallName _source169 = _3065_name;
              if (_source169.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3382___mcc_h491 = _source169.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3383___mcc_h492 = _source169.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3384___mcc_h493 = _source169.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source170 = _3383___mcc_h492;
                if (_source170.is_None) {
                } else {
                  DAST._IType _3385___mcc_h497 = _source170.dtor_value;
                  DAST._IType _3386_tpe = _3385___mcc_h497;
                  RAST._IType _3387_typ;
                  RAST._IType _out179;
                  _out179 = DCOMP.COMP.GenType(_3386_tpe, false, false);
                  _3387_typ = _out179;
                  if (((_3387_typ).is_Pointer) || ((_3387_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source169.is_MapBuilderAdd) {
              } else if (_source169.is_MapBuilderBuild) {
              } else if (_source169.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_BoolBoundedPool) {
            {
              DAST._ICallName _source171 = _3065_name;
              if (_source171.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3388___mcc_h499 = _source171.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3389___mcc_h500 = _source171.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3390___mcc_h501 = _source171.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source172 = _3389___mcc_h500;
                if (_source172.is_None) {
                } else {
                  DAST._IType _3391___mcc_h505 = _source172.dtor_value;
                  DAST._IType _3392_tpe = _3391___mcc_h505;
                  RAST._IType _3393_typ;
                  RAST._IType _out180;
                  _out180 = DCOMP.COMP.GenType(_3392_tpe, false, false);
                  _3393_typ = _out180;
                  if (((_3393_typ).is_Pointer) || ((_3393_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source171.is_MapBuilderAdd) {
              } else if (_source171.is_MapBuilderBuild) {
              } else if (_source171.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SetBoundedPool) {
            DAST._IExpression _3394___mcc_h201 = _source98.dtor_of;
            {
              DAST._ICallName _source173 = _3065_name;
              if (_source173.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3395___mcc_h507 = _source173.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3396___mcc_h508 = _source173.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3397___mcc_h509 = _source173.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source174 = _3396___mcc_h508;
                if (_source174.is_None) {
                } else {
                  DAST._IType _3398___mcc_h513 = _source174.dtor_value;
                  DAST._IType _3399_tpe = _3398___mcc_h513;
                  RAST._IType _3400_typ;
                  RAST._IType _out181;
                  _out181 = DCOMP.COMP.GenType(_3399_tpe, false, false);
                  _3400_typ = _out181;
                  if (((_3400_typ).is_Pointer) || ((_3400_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source173.is_MapBuilderAdd) {
              } else if (_source173.is_MapBuilderBuild) {
              } else if (_source173.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SeqBoundedPool) {
            DAST._IExpression _3401___mcc_h203 = _source98.dtor_of;
            bool _3402___mcc_h204 = _source98.dtor_includeDuplicates;
            {
              DAST._ICallName _source175 = _3065_name;
              if (_source175.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3403___mcc_h515 = _source175.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3404___mcc_h516 = _source175.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3405___mcc_h517 = _source175.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source176 = _3404___mcc_h516;
                if (_source176.is_None) {
                } else {
                  DAST._IType _3406___mcc_h521 = _source176.dtor_value;
                  DAST._IType _3407_tpe = _3406___mcc_h521;
                  RAST._IType _3408_typ;
                  RAST._IType _out182;
                  _out182 = DCOMP.COMP.GenType(_3407_tpe, false, false);
                  _3408_typ = _out182;
                  if (((_3408_typ).is_Pointer) || ((_3408_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source175.is_MapBuilderAdd) {
              } else if (_source175.is_MapBuilderBuild) {
              } else if (_source175.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else {
            DAST._IExpression _3409___mcc_h207 = _source98.dtor_lo;
            DAST._IExpression _3410___mcc_h208 = _source98.dtor_hi;
            {
              DAST._ICallName _source177 = _3065_name;
              if (_source177.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3411___mcc_h523 = _source177.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3412___mcc_h524 = _source177.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3413___mcc_h525 = _source177.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source178 = _3412___mcc_h524;
                if (_source178.is_None) {
                } else {
                  DAST._IType _3414___mcc_h529 = _source178.dtor_value;
                  DAST._IType _3415_tpe = _3414___mcc_h529;
                  RAST._IType _3416_typ;
                  RAST._IType _out183;
                  _out183 = DCOMP.COMP.GenType(_3415_tpe, false, false);
                  _3416_typ = _out183;
                  if (((_3416_typ).is_Pointer) || ((_3416_typ).is_PointerMut)) {
                    _3067_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3067_onExpr);
                  }
                }
              } else if (_source177.is_MapBuilderAdd) {
              } else if (_source177.is_MapBuilderBuild) {
              } else if (_source177.is_SetBuilderAdd) {
              } else {
              }
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          }
          generated = _3067_onExpr;
          if ((new BigInteger((_3070_typeExprs).Count)).Sign == 1) {
            generated = (generated).ApplyType(_3070_typeExprs);
          }
          generated = (generated).Apply(_3074_argExprs);
          if (((_3062_maybeOutVars).is_Some) && ((new BigInteger(((_3062_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _3417_outVar;
            _3417_outVar = (((_3062_maybeOutVars).dtor_value).Select(BigInteger.Zero));
            if (!((env).HasCopySemantics(_3417_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_3417_outVar, generated);
          } else if (((_3062_maybeOutVars).is_None) || ((new BigInteger(((_3062_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _3418_tmpVar;
            _3418_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _3419_tmpId;
            _3419_tmpId = RAST.Expr.create_Identifier(_3418_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _3418_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3420_outVars;
            _3420_outVars = (_3062_maybeOutVars).dtor_value;
            BigInteger _hi11 = new BigInteger((_3420_outVars).Count);
            for (BigInteger _3421_outI = BigInteger.Zero; _3421_outI < _hi11; _3421_outI++) {
              Dafny.ISequence<Dafny.Rune> _3422_outVar;
              _3422_outVar = ((_3420_outVars).Select(_3421_outI));
              RAST._IExpr _3423_rhs;
              _3423_rhs = (_3419_tmpId).Sel(Std.Strings.__default.OfNat(_3421_outI));
              if (!((env).HasCopySemantics(_3422_outVar))) {
                _3423_rhs = RAST.__default.MaybePlacebo(_3423_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_3422_outVar, _3423_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source95.is_Return) {
        DAST._IExpression _3424___mcc_h22 = _source95.dtor_expr;
        DAST._IExpression _3425_exprDafny = _3424___mcc_h22;
        {
          RAST._IExpr _3426_expr;
          DCOMP._IOwnership _3427___v76;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3428_recIdents;
          RAST._IExpr _out184;
          DCOMP._IOwnership _out185;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out186;
          DCOMP.COMP.GenExpr(_3425_exprDafny, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out184, out _out185, out _out186);
          _3426_expr = _out184;
          _3427___v76 = _out185;
          _3428_recIdents = _out186;
          readIdents = _3428_recIdents;
          if (isLast) {
            generated = _3426_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3426_expr));
          }
          newEnv = env;
        }
      } else if (_source95.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source95.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3429___mcc_h23 = _source95.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3430_toLabel = _3429___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source179 = _3430_toLabel;
          if (_source179.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3431___mcc_h531 = _source179.dtor_value;
            Dafny.ISequence<Dafny.Rune> _3432_lbl = _3431___mcc_h531;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3432_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source95.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _3433___mcc_h24 = _source95.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3434_body = _3433___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          BigInteger _hi12 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _3435_paramI = BigInteger.Zero; _3435_paramI < _hi12; _3435_paramI++) {
            Dafny.ISequence<Dafny.Rune> _3436_param;
            _3436_param = ((env).dtor_names).Select(_3435_paramI);
            RAST._IExpr _3437_paramInit;
            DCOMP._IOwnership _3438___v66;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3439___v67;
            RAST._IExpr _out187;
            DCOMP._IOwnership _out188;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out189;
            DCOMP.COMP.GenExpr(DAST.Expression.create_Ident(_3436_param), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out187, out _out188, out _out189);
            _3437_paramInit = _out187;
            _3438___v66 = _out188;
            _3439___v67 = _out189;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeIdent(_3436_param), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3437_paramInit)));
          }
          RAST._IExpr _3440_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3441_bodyIdents;
          DCOMP._IEnvironment _3442_bodyEnv;
          RAST._IExpr _out190;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out191;
          DCOMP._IEnvironment _out192;
          DCOMP.COMP.GenStmts(_3434_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), env, false, earlyReturn, out _out190, out _out191, out _out192);
          _3440_bodyExpr = _out190;
          _3441_bodyIdents = _out191;
          _3442_bodyEnv = _out192;
          newEnv = env;
          readIdents = _3441_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _3440_bodyExpr)));
        }
      } else if (_source95.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source95.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else {
        DAST._IExpression _3443___mcc_h25 = _source95.dtor_Print_a0;
        DAST._IExpression _3444_e = _3443___mcc_h25;
        {
          RAST._IExpr _3445_printedExpr;
          DCOMP._IOwnership _3446_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3447_recIdents;
          RAST._IExpr _out193;
          DCOMP._IOwnership _out194;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out195;
          DCOMP.COMP.GenExpr(_3444_e, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out193, out _out194, out _out195);
          _3445_printedExpr = _out193;
          _3446_recOwnership = _out194;
          _3447_recIdents = _out195;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_3445_printedExpr)));
          readIdents = _3447_recIdents;
          newEnv = env;
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source180 = range;
      if (_source180.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source180.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source180.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source180.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source180.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source180.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source180.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source180.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source180.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source180.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source180.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public static void FromOwned(RAST._IExpr r, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      } else {
        @out = RAST.__default.BorrowMut(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public static void FromOwnership(RAST._IExpr r, DCOMP._IOwnership ownership, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if (object.Equals(ownership, DCOMP.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out196;
        DCOMP._IOwnership _out197;
        DCOMP.COMP.FromOwned(r, expectedOwnership, out _out196, out _out197);
        @out = _out196;
        resultingOwnership = _out197;
        return ;
      } else if ((object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          @out = RAST.__default.Clone(r);
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMP._IOwnership expectedOwnership, DCOMP._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()));
    }
    public static void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source181 = e;
      DAST._ILiteral _3448___mcc_h0 = _source181.dtor_Literal_a0;
      DAST._ILiteral _source182 = _3448___mcc_h0;
      if (_source182.is_BoolLiteral) {
        bool _3449___mcc_h1 = _source182.dtor_BoolLiteral_a0;
        bool _3450_b = _3449___mcc_h1;
        {
          RAST._IExpr _out198;
          DCOMP._IOwnership _out199;
          DCOMP.COMP.FromOwned(RAST.Expr.create_LiteralBool(_3450_b), expectedOwnership, out _out198, out _out199);
          r = _out198;
          resultingOwnership = _out199;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source182.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _3451___mcc_h2 = _source182.dtor_IntLiteral_a0;
        DAST._IType _3452___mcc_h3 = _source182.dtor_IntLiteral_a1;
        DAST._IType _3453_t = _3452___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _3454_i = _3451___mcc_h2;
        {
          DAST._IType _source183 = _3453_t;
          if (_source183.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3455___mcc_h100 = _source183.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _3456___mcc_h101 = _source183.dtor_typeArgs;
            DAST._IResolvedType _3457___mcc_h102 = _source183.dtor_resolved;
            DAST._IType _3458_o = _3453_t;
            {
              RAST._IType _3459_genType;
              RAST._IType _out200;
              _out200 = DCOMP.COMP.GenType(_3458_o, false, false);
              _3459_genType = _out200;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3459_genType);
            }
          } else if (_source183.is_Nullable) {
            DAST._IType _3460___mcc_h106 = _source183.dtor_Nullable_a0;
            DAST._IType _3461_o = _3453_t;
            {
              RAST._IType _3462_genType;
              RAST._IType _out201;
              _out201 = DCOMP.COMP.GenType(_3461_o, false, false);
              _3462_genType = _out201;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3462_genType);
            }
          } else if (_source183.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3463___mcc_h108 = _source183.dtor_Tuple_a0;
            DAST._IType _3464_o = _3453_t;
            {
              RAST._IType _3465_genType;
              RAST._IType _out202;
              _out202 = DCOMP.COMP.GenType(_3464_o, false, false);
              _3465_genType = _out202;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3465_genType);
            }
          } else if (_source183.is_Array) {
            DAST._IType _3466___mcc_h110 = _source183.dtor_element;
            BigInteger _3467___mcc_h111 = _source183.dtor_dims;
            DAST._IType _3468_o = _3453_t;
            {
              RAST._IType _3469_genType;
              RAST._IType _out203;
              _out203 = DCOMP.COMP.GenType(_3468_o, false, false);
              _3469_genType = _out203;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3469_genType);
            }
          } else if (_source183.is_Seq) {
            DAST._IType _3470___mcc_h114 = _source183.dtor_element;
            DAST._IType _3471_o = _3453_t;
            {
              RAST._IType _3472_genType;
              RAST._IType _out204;
              _out204 = DCOMP.COMP.GenType(_3471_o, false, false);
              _3472_genType = _out204;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3472_genType);
            }
          } else if (_source183.is_Set) {
            DAST._IType _3473___mcc_h116 = _source183.dtor_element;
            DAST._IType _3474_o = _3453_t;
            {
              RAST._IType _3475_genType;
              RAST._IType _out205;
              _out205 = DCOMP.COMP.GenType(_3474_o, false, false);
              _3475_genType = _out205;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3475_genType);
            }
          } else if (_source183.is_Multiset) {
            DAST._IType _3476___mcc_h118 = _source183.dtor_element;
            DAST._IType _3477_o = _3453_t;
            {
              RAST._IType _3478_genType;
              RAST._IType _out206;
              _out206 = DCOMP.COMP.GenType(_3477_o, false, false);
              _3478_genType = _out206;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3478_genType);
            }
          } else if (_source183.is_Map) {
            DAST._IType _3479___mcc_h120 = _source183.dtor_key;
            DAST._IType _3480___mcc_h121 = _source183.dtor_value;
            DAST._IType _3481_o = _3453_t;
            {
              RAST._IType _3482_genType;
              RAST._IType _out207;
              _out207 = DCOMP.COMP.GenType(_3481_o, false, false);
              _3482_genType = _out207;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3482_genType);
            }
          } else if (_source183.is_SetBuilder) {
            DAST._IType _3483___mcc_h124 = _source183.dtor_element;
            DAST._IType _3484_o = _3453_t;
            {
              RAST._IType _3485_genType;
              RAST._IType _out208;
              _out208 = DCOMP.COMP.GenType(_3484_o, false, false);
              _3485_genType = _out208;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3485_genType);
            }
          } else if (_source183.is_MapBuilder) {
            DAST._IType _3486___mcc_h126 = _source183.dtor_key;
            DAST._IType _3487___mcc_h127 = _source183.dtor_value;
            DAST._IType _3488_o = _3453_t;
            {
              RAST._IType _3489_genType;
              RAST._IType _out209;
              _out209 = DCOMP.COMP.GenType(_3488_o, false, false);
              _3489_genType = _out209;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3489_genType);
            }
          } else if (_source183.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3490___mcc_h130 = _source183.dtor_args;
            DAST._IType _3491___mcc_h131 = _source183.dtor_result;
            DAST._IType _3492_o = _3453_t;
            {
              RAST._IType _3493_genType;
              RAST._IType _out210;
              _out210 = DCOMP.COMP.GenType(_3492_o, false, false);
              _3493_genType = _out210;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3493_genType);
            }
          } else if (_source183.is_Primitive) {
            DAST._IPrimitive _3494___mcc_h134 = _source183.dtor_Primitive_a0;
            DAST._IPrimitive _source184 = _3494___mcc_h134;
            if (_source184.is_Int) {
              {
                if ((new BigInteger((_3454_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_3454_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_3454_i, true));
                }
              }
            } else if (_source184.is_Real) {
              DAST._IType _3495_o = _3453_t;
              {
                RAST._IType _3496_genType;
                RAST._IType _out211;
                _out211 = DCOMP.COMP.GenType(_3495_o, false, false);
                _3496_genType = _out211;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3496_genType);
              }
            } else if (_source184.is_String) {
              DAST._IType _3497_o = _3453_t;
              {
                RAST._IType _3498_genType;
                RAST._IType _out212;
                _out212 = DCOMP.COMP.GenType(_3497_o, false, false);
                _3498_genType = _out212;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3498_genType);
              }
            } else if (_source184.is_Bool) {
              DAST._IType _3499_o = _3453_t;
              {
                RAST._IType _3500_genType;
                RAST._IType _out213;
                _out213 = DCOMP.COMP.GenType(_3499_o, false, false);
                _3500_genType = _out213;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3500_genType);
              }
            } else {
              DAST._IType _3501_o = _3453_t;
              {
                RAST._IType _3502_genType;
                RAST._IType _out214;
                _out214 = DCOMP.COMP.GenType(_3501_o, false, false);
                _3502_genType = _out214;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3502_genType);
              }
            }
          } else if (_source183.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3503___mcc_h136 = _source183.dtor_Passthrough_a0;
            DAST._IType _3504_o = _3453_t;
            {
              RAST._IType _3505_genType;
              RAST._IType _out215;
              _out215 = DCOMP.COMP.GenType(_3504_o, false, false);
              _3505_genType = _out215;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3505_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3506___mcc_h138 = _source183.dtor_TypeArg_a0;
            DAST._IType _3507_o = _3453_t;
            {
              RAST._IType _3508_genType;
              RAST._IType _out216;
              _out216 = DCOMP.COMP.GenType(_3507_o, false, false);
              _3508_genType = _out216;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3454_i), _3508_genType);
            }
          }
          RAST._IExpr _out217;
          DCOMP._IOwnership _out218;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out217, out _out218);
          r = _out217;
          resultingOwnership = _out218;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source182.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _3509___mcc_h4 = _source182.dtor_DecLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _3510___mcc_h5 = _source182.dtor_DecLiteral_a1;
        DAST._IType _3511___mcc_h6 = _source182.dtor_DecLiteral_a2;
        DAST._IType _3512_t = _3511___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _3513_d = _3510___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _3514_n = _3509___mcc_h4;
        {
          DAST._IType _source185 = _3512_t;
          if (_source185.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3515___mcc_h140 = _source185.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _3516___mcc_h141 = _source185.dtor_typeArgs;
            DAST._IResolvedType _3517___mcc_h142 = _source185.dtor_resolved;
            DAST._IType _3518_o = _3512_t;
            {
              RAST._IType _3519_genType;
              RAST._IType _out219;
              _out219 = DCOMP.COMP.GenType(_3518_o, false, false);
              _3519_genType = _out219;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3519_genType);
            }
          } else if (_source185.is_Nullable) {
            DAST._IType _3520___mcc_h146 = _source185.dtor_Nullable_a0;
            DAST._IType _3521_o = _3512_t;
            {
              RAST._IType _3522_genType;
              RAST._IType _out220;
              _out220 = DCOMP.COMP.GenType(_3521_o, false, false);
              _3522_genType = _out220;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3522_genType);
            }
          } else if (_source185.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3523___mcc_h148 = _source185.dtor_Tuple_a0;
            DAST._IType _3524_o = _3512_t;
            {
              RAST._IType _3525_genType;
              RAST._IType _out221;
              _out221 = DCOMP.COMP.GenType(_3524_o, false, false);
              _3525_genType = _out221;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3525_genType);
            }
          } else if (_source185.is_Array) {
            DAST._IType _3526___mcc_h150 = _source185.dtor_element;
            BigInteger _3527___mcc_h151 = _source185.dtor_dims;
            DAST._IType _3528_o = _3512_t;
            {
              RAST._IType _3529_genType;
              RAST._IType _out222;
              _out222 = DCOMP.COMP.GenType(_3528_o, false, false);
              _3529_genType = _out222;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3529_genType);
            }
          } else if (_source185.is_Seq) {
            DAST._IType _3530___mcc_h154 = _source185.dtor_element;
            DAST._IType _3531_o = _3512_t;
            {
              RAST._IType _3532_genType;
              RAST._IType _out223;
              _out223 = DCOMP.COMP.GenType(_3531_o, false, false);
              _3532_genType = _out223;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3532_genType);
            }
          } else if (_source185.is_Set) {
            DAST._IType _3533___mcc_h156 = _source185.dtor_element;
            DAST._IType _3534_o = _3512_t;
            {
              RAST._IType _3535_genType;
              RAST._IType _out224;
              _out224 = DCOMP.COMP.GenType(_3534_o, false, false);
              _3535_genType = _out224;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3535_genType);
            }
          } else if (_source185.is_Multiset) {
            DAST._IType _3536___mcc_h158 = _source185.dtor_element;
            DAST._IType _3537_o = _3512_t;
            {
              RAST._IType _3538_genType;
              RAST._IType _out225;
              _out225 = DCOMP.COMP.GenType(_3537_o, false, false);
              _3538_genType = _out225;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3538_genType);
            }
          } else if (_source185.is_Map) {
            DAST._IType _3539___mcc_h160 = _source185.dtor_key;
            DAST._IType _3540___mcc_h161 = _source185.dtor_value;
            DAST._IType _3541_o = _3512_t;
            {
              RAST._IType _3542_genType;
              RAST._IType _out226;
              _out226 = DCOMP.COMP.GenType(_3541_o, false, false);
              _3542_genType = _out226;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3542_genType);
            }
          } else if (_source185.is_SetBuilder) {
            DAST._IType _3543___mcc_h164 = _source185.dtor_element;
            DAST._IType _3544_o = _3512_t;
            {
              RAST._IType _3545_genType;
              RAST._IType _out227;
              _out227 = DCOMP.COMP.GenType(_3544_o, false, false);
              _3545_genType = _out227;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3545_genType);
            }
          } else if (_source185.is_MapBuilder) {
            DAST._IType _3546___mcc_h166 = _source185.dtor_key;
            DAST._IType _3547___mcc_h167 = _source185.dtor_value;
            DAST._IType _3548_o = _3512_t;
            {
              RAST._IType _3549_genType;
              RAST._IType _out228;
              _out228 = DCOMP.COMP.GenType(_3548_o, false, false);
              _3549_genType = _out228;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3549_genType);
            }
          } else if (_source185.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3550___mcc_h170 = _source185.dtor_args;
            DAST._IType _3551___mcc_h171 = _source185.dtor_result;
            DAST._IType _3552_o = _3512_t;
            {
              RAST._IType _3553_genType;
              RAST._IType _out229;
              _out229 = DCOMP.COMP.GenType(_3552_o, false, false);
              _3553_genType = _out229;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3553_genType);
            }
          } else if (_source185.is_Primitive) {
            DAST._IPrimitive _3554___mcc_h174 = _source185.dtor_Primitive_a0;
            DAST._IPrimitive _source186 = _3554___mcc_h174;
            if (_source186.is_Int) {
              DAST._IType _3555_o = _3512_t;
              {
                RAST._IType _3556_genType;
                RAST._IType _out230;
                _out230 = DCOMP.COMP.GenType(_3555_o, false, false);
                _3556_genType = _out230;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3556_genType);
              }
            } else if (_source186.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source186.is_String) {
              DAST._IType _3557_o = _3512_t;
              {
                RAST._IType _3558_genType;
                RAST._IType _out231;
                _out231 = DCOMP.COMP.GenType(_3557_o, false, false);
                _3558_genType = _out231;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3558_genType);
              }
            } else if (_source186.is_Bool) {
              DAST._IType _3559_o = _3512_t;
              {
                RAST._IType _3560_genType;
                RAST._IType _out232;
                _out232 = DCOMP.COMP.GenType(_3559_o, false, false);
                _3560_genType = _out232;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3560_genType);
              }
            } else {
              DAST._IType _3561_o = _3512_t;
              {
                RAST._IType _3562_genType;
                RAST._IType _out233;
                _out233 = DCOMP.COMP.GenType(_3561_o, false, false);
                _3562_genType = _out233;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3562_genType);
              }
            }
          } else if (_source185.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3563___mcc_h176 = _source185.dtor_Passthrough_a0;
            DAST._IType _3564_o = _3512_t;
            {
              RAST._IType _3565_genType;
              RAST._IType _out234;
              _out234 = DCOMP.COMP.GenType(_3564_o, false, false);
              _3565_genType = _out234;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3565_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3566___mcc_h178 = _source185.dtor_TypeArg_a0;
            DAST._IType _3567_o = _3512_t;
            {
              RAST._IType _3568_genType;
              RAST._IType _out235;
              _out235 = DCOMP.COMP.GenType(_3567_o, false, false);
              _3568_genType = _out235;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3514_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3513_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3568_genType);
            }
          }
          RAST._IExpr _out236;
          DCOMP._IOwnership _out237;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out236, out _out237);
          r = _out236;
          resultingOwnership = _out237;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source182.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _3569___mcc_h7 = _source182.dtor_StringLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _3570_l = _3569___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of"))).Apply1(RAST.Expr.create_LiteralString(_3570_l, false));
          RAST._IExpr _out238;
          DCOMP._IOwnership _out239;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out238, out _out239);
          r = _out238;
          resultingOwnership = _out239;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source182.is_CharLiteral) {
        Dafny.Rune _3571___mcc_h8 = _source182.dtor_CharLiteral_a0;
        Dafny.Rune _3572_c = _3571___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_3572_c).Value)));
          r = RAST.Expr.create_TypeAscription(r, DCOMP.__default.DafnyCharUnderlying);
          r = ((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(r);
          RAST._IExpr _out240;
          DCOMP._IOwnership _out241;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out240, out _out241);
          r = _out240;
          resultingOwnership = _out241;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _3573___mcc_h9 = _source182.dtor_Null_a0;
        DAST._IType _3574_tpe = _3573___mcc_h9;
        {
          RAST._IType _3575_tpeGen;
          RAST._IType _out242;
          _out242 = DCOMP.COMP.GenType(_3574_tpe, false, false);
          _3575_tpeGen = _out242;
          r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None")), _3575_tpeGen);
          RAST._IExpr _out243;
          DCOMP._IOwnership _out244;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out243, out _out244);
          r = _out243;
          resultingOwnership = _out244;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public static void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs50 = e;
      DAST._IBinOp _3576_op = _let_tmp_rhs50.dtor_op;
      DAST._IExpression _3577_lExpr = _let_tmp_rhs50.dtor_left;
      DAST._IExpression _3578_rExpr = _let_tmp_rhs50.dtor_right;
      DAST.Format._IBinOpFormat _3579_format = _let_tmp_rhs50.dtor_format2;
      bool _3580_becomesLeftCallsRight;
      _3580_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source187) => {
        if (_source187.is_Eq) {
          bool _3581___mcc_h0 = _source187.dtor_referential;
          bool _3582___mcc_h1 = _source187.dtor_nullable;
          return false;
        } else if (_source187.is_Div) {
          return false;
        } else if (_source187.is_EuclidianDiv) {
          return false;
        } else if (_source187.is_Mod) {
          return false;
        } else if (_source187.is_EuclidianMod) {
          return false;
        } else if (_source187.is_Lt) {
          return false;
        } else if (_source187.is_LtChar) {
          return false;
        } else if (_source187.is_Plus) {
          return false;
        } else if (_source187.is_Minus) {
          return false;
        } else if (_source187.is_Times) {
          return false;
        } else if (_source187.is_BitwiseAnd) {
          return false;
        } else if (_source187.is_BitwiseOr) {
          return false;
        } else if (_source187.is_BitwiseXor) {
          return false;
        } else if (_source187.is_BitwiseShiftRight) {
          return false;
        } else if (_source187.is_BitwiseShiftLeft) {
          return false;
        } else if (_source187.is_And) {
          return false;
        } else if (_source187.is_Or) {
          return false;
        } else if (_source187.is_In) {
          return false;
        } else if (_source187.is_SeqProperPrefix) {
          return false;
        } else if (_source187.is_SeqPrefix) {
          return false;
        } else if (_source187.is_SetMerge) {
          return true;
        } else if (_source187.is_SetSubtraction) {
          return true;
        } else if (_source187.is_SetIntersection) {
          return true;
        } else if (_source187.is_Subset) {
          return false;
        } else if (_source187.is_ProperSubset) {
          return false;
        } else if (_source187.is_SetDisjoint) {
          return true;
        } else if (_source187.is_MapMerge) {
          return true;
        } else if (_source187.is_MapSubtraction) {
          return true;
        } else if (_source187.is_MultisetMerge) {
          return true;
        } else if (_source187.is_MultisetSubtraction) {
          return true;
        } else if (_source187.is_MultisetIntersection) {
          return true;
        } else if (_source187.is_Submultiset) {
          return false;
        } else if (_source187.is_ProperSubmultiset) {
          return false;
        } else if (_source187.is_MultisetDisjoint) {
          return true;
        } else if (_source187.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _3583___mcc_h4 = _source187.dtor_Passthrough_a0;
          return false;
        }
      }))(_3576_op);
      bool _3584_becomesRightCallsLeft;
      _3584_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source188) => {
        if (_source188.is_Eq) {
          bool _3585___mcc_h6 = _source188.dtor_referential;
          bool _3586___mcc_h7 = _source188.dtor_nullable;
          return false;
        } else if (_source188.is_Div) {
          return false;
        } else if (_source188.is_EuclidianDiv) {
          return false;
        } else if (_source188.is_Mod) {
          return false;
        } else if (_source188.is_EuclidianMod) {
          return false;
        } else if (_source188.is_Lt) {
          return false;
        } else if (_source188.is_LtChar) {
          return false;
        } else if (_source188.is_Plus) {
          return false;
        } else if (_source188.is_Minus) {
          return false;
        } else if (_source188.is_Times) {
          return false;
        } else if (_source188.is_BitwiseAnd) {
          return false;
        } else if (_source188.is_BitwiseOr) {
          return false;
        } else if (_source188.is_BitwiseXor) {
          return false;
        } else if (_source188.is_BitwiseShiftRight) {
          return false;
        } else if (_source188.is_BitwiseShiftLeft) {
          return false;
        } else if (_source188.is_And) {
          return false;
        } else if (_source188.is_Or) {
          return false;
        } else if (_source188.is_In) {
          return true;
        } else if (_source188.is_SeqProperPrefix) {
          return false;
        } else if (_source188.is_SeqPrefix) {
          return false;
        } else if (_source188.is_SetMerge) {
          return false;
        } else if (_source188.is_SetSubtraction) {
          return false;
        } else if (_source188.is_SetIntersection) {
          return false;
        } else if (_source188.is_Subset) {
          return false;
        } else if (_source188.is_ProperSubset) {
          return false;
        } else if (_source188.is_SetDisjoint) {
          return false;
        } else if (_source188.is_MapMerge) {
          return false;
        } else if (_source188.is_MapSubtraction) {
          return false;
        } else if (_source188.is_MultisetMerge) {
          return false;
        } else if (_source188.is_MultisetSubtraction) {
          return false;
        } else if (_source188.is_MultisetIntersection) {
          return false;
        } else if (_source188.is_Submultiset) {
          return false;
        } else if (_source188.is_ProperSubmultiset) {
          return false;
        } else if (_source188.is_MultisetDisjoint) {
          return false;
        } else if (_source188.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3587___mcc_h10 = _source188.dtor_Passthrough_a0;
          return false;
        }
      }))(_3576_op);
      bool _3588_becomesCallLeftRight;
      _3588_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source189) => {
        if (_source189.is_Eq) {
          bool _3589___mcc_h12 = _source189.dtor_referential;
          bool _3590___mcc_h13 = _source189.dtor_nullable;
          if ((_3589___mcc_h12) == (true)) {
            if ((_3590___mcc_h13) == (false)) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else if (_source189.is_Div) {
          return false;
        } else if (_source189.is_EuclidianDiv) {
          return false;
        } else if (_source189.is_Mod) {
          return false;
        } else if (_source189.is_EuclidianMod) {
          return false;
        } else if (_source189.is_Lt) {
          return false;
        } else if (_source189.is_LtChar) {
          return false;
        } else if (_source189.is_Plus) {
          return false;
        } else if (_source189.is_Minus) {
          return false;
        } else if (_source189.is_Times) {
          return false;
        } else if (_source189.is_BitwiseAnd) {
          return false;
        } else if (_source189.is_BitwiseOr) {
          return false;
        } else if (_source189.is_BitwiseXor) {
          return false;
        } else if (_source189.is_BitwiseShiftRight) {
          return false;
        } else if (_source189.is_BitwiseShiftLeft) {
          return false;
        } else if (_source189.is_And) {
          return false;
        } else if (_source189.is_Or) {
          return false;
        } else if (_source189.is_In) {
          return false;
        } else if (_source189.is_SeqProperPrefix) {
          return false;
        } else if (_source189.is_SeqPrefix) {
          return false;
        } else if (_source189.is_SetMerge) {
          return false;
        } else if (_source189.is_SetSubtraction) {
          return false;
        } else if (_source189.is_SetIntersection) {
          return false;
        } else if (_source189.is_Subset) {
          return false;
        } else if (_source189.is_ProperSubset) {
          return false;
        } else if (_source189.is_SetDisjoint) {
          return false;
        } else if (_source189.is_MapMerge) {
          return false;
        } else if (_source189.is_MapSubtraction) {
          return false;
        } else if (_source189.is_MultisetMerge) {
          return false;
        } else if (_source189.is_MultisetSubtraction) {
          return false;
        } else if (_source189.is_MultisetIntersection) {
          return false;
        } else if (_source189.is_Submultiset) {
          return false;
        } else if (_source189.is_ProperSubmultiset) {
          return false;
        } else if (_source189.is_MultisetDisjoint) {
          return false;
        } else if (_source189.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3591___mcc_h16 = _source189.dtor_Passthrough_a0;
          return false;
        }
      }))(_3576_op);
      DCOMP._IOwnership _3592_expectedLeftOwnership;
      _3592_expectedLeftOwnership = ((_3580_becomesLeftCallsRight) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : ((((_3584_becomesRightCallsLeft) || (_3588_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      DCOMP._IOwnership _3593_expectedRightOwnership;
      _3593_expectedRightOwnership = (((_3580_becomesLeftCallsRight) || (_3588_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (((_3584_becomesRightCallsLeft) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _3594_left;
      DCOMP._IOwnership _3595___v81;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3596_recIdentsL;
      RAST._IExpr _out245;
      DCOMP._IOwnership _out246;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out247;
      DCOMP.COMP.GenExpr(_3577_lExpr, selfIdent, env, _3592_expectedLeftOwnership, out _out245, out _out246, out _out247);
      _3594_left = _out245;
      _3595___v81 = _out246;
      _3596_recIdentsL = _out247;
      RAST._IExpr _3597_right;
      DCOMP._IOwnership _3598___v82;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3599_recIdentsR;
      RAST._IExpr _out248;
      DCOMP._IOwnership _out249;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out250;
      DCOMP.COMP.GenExpr(_3578_rExpr, selfIdent, env, _3593_expectedRightOwnership, out _out248, out _out249, out _out250);
      _3597_right = _out248;
      _3598___v82 = _out249;
      _3599_recIdentsR = _out250;
      DAST._IBinOp _source190 = _3576_op;
      if (_source190.is_Eq) {
        bool _3600___mcc_h18 = _source190.dtor_referential;
        bool _3601___mcc_h19 = _source190.dtor_nullable;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source191 = _3576_op;
            if (_source191.is_Eq) {
              bool _3602___mcc_h24 = _source191.dtor_referential;
              bool _3603___mcc_h25 = _source191.dtor_nullable;
              bool _3604_nullable = _3603___mcc_h25;
              bool _3605_referential = _3602___mcc_h24;
              {
                if (_3605_referential) {
                  if (_3604_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source191.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source191.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3606___mcc_h26 = _source191.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3607_op = _3606___mcc_h26;
              {
                r = RAST.Expr.create_BinaryOp(_3607_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_Div) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source192 = _3576_op;
            if (_source192.is_Eq) {
              bool _3608___mcc_h27 = _source192.dtor_referential;
              bool _3609___mcc_h28 = _source192.dtor_nullable;
              bool _3610_nullable = _3609___mcc_h28;
              bool _3611_referential = _3608___mcc_h27;
              {
                if (_3611_referential) {
                  if (_3610_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source192.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source192.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3612___mcc_h29 = _source192.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3613_op = _3612___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_3613_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_EuclidianDiv) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source193 = _3576_op;
            if (_source193.is_Eq) {
              bool _3614___mcc_h30 = _source193.dtor_referential;
              bool _3615___mcc_h31 = _source193.dtor_nullable;
              bool _3616_nullable = _3615___mcc_h31;
              bool _3617_referential = _3614___mcc_h30;
              {
                if (_3617_referential) {
                  if (_3616_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source193.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source193.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3618___mcc_h32 = _source193.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3619_op = _3618___mcc_h32;
              {
                r = RAST.Expr.create_BinaryOp(_3619_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_Mod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source194 = _3576_op;
            if (_source194.is_Eq) {
              bool _3620___mcc_h33 = _source194.dtor_referential;
              bool _3621___mcc_h34 = _source194.dtor_nullable;
              bool _3622_nullable = _3621___mcc_h34;
              bool _3623_referential = _3620___mcc_h33;
              {
                if (_3623_referential) {
                  if (_3622_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source194.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source194.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3624___mcc_h35 = _source194.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3625_op = _3624___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_3625_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_EuclidianMod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source195 = _3576_op;
            if (_source195.is_Eq) {
              bool _3626___mcc_h36 = _source195.dtor_referential;
              bool _3627___mcc_h37 = _source195.dtor_nullable;
              bool _3628_nullable = _3627___mcc_h37;
              bool _3629_referential = _3626___mcc_h36;
              {
                if (_3629_referential) {
                  if (_3628_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source195.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source195.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3630___mcc_h38 = _source195.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3631_op = _3630___mcc_h38;
              {
                r = RAST.Expr.create_BinaryOp(_3631_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_Lt) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source196 = _3576_op;
            if (_source196.is_Eq) {
              bool _3632___mcc_h39 = _source196.dtor_referential;
              bool _3633___mcc_h40 = _source196.dtor_nullable;
              bool _3634_nullable = _3633___mcc_h40;
              bool _3635_referential = _3632___mcc_h39;
              {
                if (_3635_referential) {
                  if (_3634_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source196.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source196.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3636___mcc_h41 = _source196.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3637_op = _3636___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_3637_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_LtChar) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source197 = _3576_op;
            if (_source197.is_Eq) {
              bool _3638___mcc_h42 = _source197.dtor_referential;
              bool _3639___mcc_h43 = _source197.dtor_nullable;
              bool _3640_nullable = _3639___mcc_h43;
              bool _3641_referential = _3638___mcc_h42;
              {
                if (_3641_referential) {
                  if (_3640_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source197.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source197.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3642___mcc_h44 = _source197.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3643_op = _3642___mcc_h44;
              {
                r = RAST.Expr.create_BinaryOp(_3643_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_Plus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source198 = _3576_op;
            if (_source198.is_Eq) {
              bool _3644___mcc_h45 = _source198.dtor_referential;
              bool _3645___mcc_h46 = _source198.dtor_nullable;
              bool _3646_nullable = _3645___mcc_h46;
              bool _3647_referential = _3644___mcc_h45;
              {
                if (_3647_referential) {
                  if (_3646_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source198.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source198.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3648___mcc_h47 = _source198.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3649_op = _3648___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_3649_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_Minus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source199 = _3576_op;
            if (_source199.is_Eq) {
              bool _3650___mcc_h48 = _source199.dtor_referential;
              bool _3651___mcc_h49 = _source199.dtor_nullable;
              bool _3652_nullable = _3651___mcc_h49;
              bool _3653_referential = _3650___mcc_h48;
              {
                if (_3653_referential) {
                  if (_3652_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source199.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source199.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3654___mcc_h50 = _source199.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3655_op = _3654___mcc_h50;
              {
                r = RAST.Expr.create_BinaryOp(_3655_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_Times) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source200 = _3576_op;
            if (_source200.is_Eq) {
              bool _3656___mcc_h51 = _source200.dtor_referential;
              bool _3657___mcc_h52 = _source200.dtor_nullable;
              bool _3658_nullable = _3657___mcc_h52;
              bool _3659_referential = _3656___mcc_h51;
              {
                if (_3659_referential) {
                  if (_3658_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source200.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source200.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3660___mcc_h53 = _source200.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3661_op = _3660___mcc_h53;
              {
                r = RAST.Expr.create_BinaryOp(_3661_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_BitwiseAnd) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source201 = _3576_op;
            if (_source201.is_Eq) {
              bool _3662___mcc_h54 = _source201.dtor_referential;
              bool _3663___mcc_h55 = _source201.dtor_nullable;
              bool _3664_nullable = _3663___mcc_h55;
              bool _3665_referential = _3662___mcc_h54;
              {
                if (_3665_referential) {
                  if (_3664_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source201.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source201.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3666___mcc_h56 = _source201.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3667_op = _3666___mcc_h56;
              {
                r = RAST.Expr.create_BinaryOp(_3667_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_BitwiseOr) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source202 = _3576_op;
            if (_source202.is_Eq) {
              bool _3668___mcc_h57 = _source202.dtor_referential;
              bool _3669___mcc_h58 = _source202.dtor_nullable;
              bool _3670_nullable = _3669___mcc_h58;
              bool _3671_referential = _3668___mcc_h57;
              {
                if (_3671_referential) {
                  if (_3670_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source202.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source202.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3672___mcc_h59 = _source202.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3673_op = _3672___mcc_h59;
              {
                r = RAST.Expr.create_BinaryOp(_3673_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_BitwiseXor) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source203 = _3576_op;
            if (_source203.is_Eq) {
              bool _3674___mcc_h60 = _source203.dtor_referential;
              bool _3675___mcc_h61 = _source203.dtor_nullable;
              bool _3676_nullable = _3675___mcc_h61;
              bool _3677_referential = _3674___mcc_h60;
              {
                if (_3677_referential) {
                  if (_3676_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source203.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source203.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3678___mcc_h62 = _source203.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3679_op = _3678___mcc_h62;
              {
                r = RAST.Expr.create_BinaryOp(_3679_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_BitwiseShiftRight) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source204 = _3576_op;
            if (_source204.is_Eq) {
              bool _3680___mcc_h63 = _source204.dtor_referential;
              bool _3681___mcc_h64 = _source204.dtor_nullable;
              bool _3682_nullable = _3681___mcc_h64;
              bool _3683_referential = _3680___mcc_h63;
              {
                if (_3683_referential) {
                  if (_3682_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source204.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source204.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3684___mcc_h65 = _source204.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3685_op = _3684___mcc_h65;
              {
                r = RAST.Expr.create_BinaryOp(_3685_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_BitwiseShiftLeft) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source205 = _3576_op;
            if (_source205.is_Eq) {
              bool _3686___mcc_h66 = _source205.dtor_referential;
              bool _3687___mcc_h67 = _source205.dtor_nullable;
              bool _3688_nullable = _3687___mcc_h67;
              bool _3689_referential = _3686___mcc_h66;
              {
                if (_3689_referential) {
                  if (_3688_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source205.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source205.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3690___mcc_h68 = _source205.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3691_op = _3690___mcc_h68;
              {
                r = RAST.Expr.create_BinaryOp(_3691_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_And) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source206 = _3576_op;
            if (_source206.is_Eq) {
              bool _3692___mcc_h69 = _source206.dtor_referential;
              bool _3693___mcc_h70 = _source206.dtor_nullable;
              bool _3694_nullable = _3693___mcc_h70;
              bool _3695_referential = _3692___mcc_h69;
              {
                if (_3695_referential) {
                  if (_3694_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source206.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source206.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3696___mcc_h71 = _source206.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3697_op = _3696___mcc_h71;
              {
                r = RAST.Expr.create_BinaryOp(_3697_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_Or) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source207 = _3576_op;
            if (_source207.is_Eq) {
              bool _3698___mcc_h72 = _source207.dtor_referential;
              bool _3699___mcc_h73 = _source207.dtor_nullable;
              bool _3700_nullable = _3699___mcc_h73;
              bool _3701_referential = _3698___mcc_h72;
              {
                if (_3701_referential) {
                  if (_3700_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source207.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source207.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3702___mcc_h74 = _source207.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3703_op = _3702___mcc_h74;
              {
                r = RAST.Expr.create_BinaryOp(_3703_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      } else if (_source190.is_In) {
        {
          r = ((_3597_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_3594_left);
        }
      } else if (_source190.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3594_left, _3597_right, _3579_format);
      } else if (_source190.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3594_left, _3597_right, _3579_format);
      } else if (_source190.is_SetMerge) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3597_right);
        }
      } else if (_source190.is_SetSubtraction) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3597_right);
        }
      } else if (_source190.is_SetIntersection) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3597_right);
        }
      } else if (_source190.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3594_left, _3597_right, _3579_format);
        }
      } else if (_source190.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3594_left, _3597_right, _3579_format);
        }
      } else if (_source190.is_SetDisjoint) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3597_right);
        }
      } else if (_source190.is_MapMerge) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3597_right);
        }
      } else if (_source190.is_MapSubtraction) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3597_right);
        }
      } else if (_source190.is_MultisetMerge) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3597_right);
        }
      } else if (_source190.is_MultisetSubtraction) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3597_right);
        }
      } else if (_source190.is_MultisetIntersection) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3597_right);
        }
      } else if (_source190.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3594_left, _3597_right, _3579_format);
        }
      } else if (_source190.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3594_left, _3597_right, _3579_format);
        }
      } else if (_source190.is_MultisetDisjoint) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3597_right);
        }
      } else if (_source190.is_Concat) {
        {
          r = ((_3594_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_3597_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _3704___mcc_h22 = _source190.dtor_Passthrough_a0;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3576_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3576_op), _3594_left, _3597_right, _3579_format);
          } else {
            DAST._IBinOp _source208 = _3576_op;
            if (_source208.is_Eq) {
              bool _3705___mcc_h75 = _source208.dtor_referential;
              bool _3706___mcc_h76 = _source208.dtor_nullable;
              bool _3707_nullable = _3706___mcc_h76;
              bool _3708_referential = _3705___mcc_h75;
              {
                if (_3708_referential) {
                  if (_3707_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3594_left, _3597_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source208.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else if (_source208.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3594_left, _3597_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3709___mcc_h77 = _source208.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3710_op = _3709___mcc_h77;
              {
                r = RAST.Expr.create_BinaryOp(_3710_op, _3594_left, _3597_right, _3579_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out251;
      DCOMP._IOwnership _out252;
      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out251, out _out252);
      r = _out251;
      resultingOwnership = _out252;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3596_recIdentsL, _3599_recIdentsR);
      return ;
    }
    public static void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs51 = e;
      DAST._IExpression _3711_expr = _let_tmp_rhs51.dtor_value;
      DAST._IType _3712_fromTpe = _let_tmp_rhs51.dtor_from;
      DAST._IType _3713_toTpe = _let_tmp_rhs51.dtor_typ;
      if (object.Equals(_3712_fromTpe, _3713_toTpe)) {
        RAST._IExpr _3714_recursiveGen;
        DCOMP._IOwnership _3715_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3716_recIdents;
        RAST._IExpr _out253;
        DCOMP._IOwnership _out254;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out255;
        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out253, out _out254, out _out255);
        _3714_recursiveGen = _out253;
        _3715_recOwned = _out254;
        _3716_recIdents = _out255;
        r = _3714_recursiveGen;
        RAST._IExpr _out256;
        DCOMP._IOwnership _out257;
        DCOMP.COMP.FromOwnership(r, _3715_recOwned, expectedOwnership, out _out256, out _out257);
        r = _out256;
        resultingOwnership = _out257;
        readIdents = _3716_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source209 = _System.Tuple2<DAST._IType, DAST._IType>.create(_3712_fromTpe, _3713_toTpe);
        DAST._IType _3717___mcc_h0 = _source209.dtor__0;
        DAST._IType _3718___mcc_h1 = _source209.dtor__1;
        DAST._IType _source210 = _3717___mcc_h0;
        if (_source210.is_Path) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3719___mcc_h4 = _source210.dtor_Path_a0;
          Dafny.ISequence<DAST._IType> _3720___mcc_h5 = _source210.dtor_typeArgs;
          DAST._IResolvedType _3721___mcc_h6 = _source210.dtor_resolved;
          DAST._IResolvedType _source211 = _3721___mcc_h6;
          if (_source211.is_AllocatedDatatype) {
            DAST._IDatatypeType _3722___mcc_h16 = _source211.dtor_datatypeType;
            DAST._IType _source212 = _3718___mcc_h1;
            if (_source212.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3723___mcc_h20 = _source212.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3724___mcc_h21 = _source212.dtor_typeArgs;
              DAST._IResolvedType _3725___mcc_h22 = _source212.dtor_resolved;
              DAST._IResolvedType _source213 = _3725___mcc_h22;
              if (_source213.is_AllocatedDatatype) {
                DAST._IDatatypeType _3726___mcc_h26 = _source213.dtor_datatypeType;
                {
                  RAST._IType _3727_fromTpeGen;
                  RAST._IType _out258;
                  _out258 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _3727_fromTpeGen = _out258;
                  RAST._IType _3728_toTpeGen;
                  RAST._IType _out259;
                  _out259 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _3728_toTpeGen = _out259;
                  RAST._IExpr _3729_recursiveGen;
                  DCOMP._IOwnership _3730_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3731_recIdents;
                  RAST._IExpr _out260;
                  DCOMP._IOwnership _out261;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out262;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out260, out _out261, out _out262);
                  _3729_recursiveGen = _out260;
                  _3730_recOwned = _out261;
                  _3731_recIdents = _out262;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3729_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3727_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3728_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out263;
                  DCOMP._IOwnership _out264;
                  DCOMP.COMP.FromOwnership(r, _3730_recOwned, expectedOwnership, out _out263, out _out264);
                  r = _out263;
                  resultingOwnership = _out264;
                  readIdents = _3731_recIdents;
                }
              } else if (_source213.is_Datatype) {
                DAST._IDatatypeType _3732___mcc_h28 = _source213.dtor_datatypeType;
                {
                  RAST._IType _3733_fromTpeGen;
                  RAST._IType _out265;
                  _out265 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _3733_fromTpeGen = _out265;
                  RAST._IType _3734_toTpeGen;
                  RAST._IType _out266;
                  _out266 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _3734_toTpeGen = _out266;
                  RAST._IExpr _3735_recursiveGen;
                  DCOMP._IOwnership _3736_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3737_recIdents;
                  RAST._IExpr _out267;
                  DCOMP._IOwnership _out268;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out269;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out267, out _out268, out _out269);
                  _3735_recursiveGen = _out267;
                  _3736_recOwned = _out268;
                  _3737_recIdents = _out269;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3735_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3733_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3734_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out270;
                  DCOMP._IOwnership _out271;
                  DCOMP.COMP.FromOwnership(r, _3736_recOwned, expectedOwnership, out _out270, out _out271);
                  r = _out270;
                  resultingOwnership = _out271;
                  readIdents = _3737_recIdents;
                }
              } else if (_source213.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3738___mcc_h30 = _source213.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3739___mcc_h31 = _source213.dtor_attributes;
                {
                  RAST._IType _3740_fromTpeGen;
                  RAST._IType _out272;
                  _out272 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _3740_fromTpeGen = _out272;
                  RAST._IType _3741_toTpeGen;
                  RAST._IType _out273;
                  _out273 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _3741_toTpeGen = _out273;
                  RAST._IExpr _3742_recursiveGen;
                  DCOMP._IOwnership _3743_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3744_recIdents;
                  RAST._IExpr _out274;
                  DCOMP._IOwnership _out275;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out276;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out274, out _out275, out _out276);
                  _3742_recursiveGen = _out274;
                  _3743_recOwned = _out275;
                  _3744_recIdents = _out276;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3742_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3740_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3741_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out277;
                  DCOMP._IOwnership _out278;
                  DCOMP.COMP.FromOwnership(r, _3743_recOwned, expectedOwnership, out _out277, out _out278);
                  r = _out277;
                  resultingOwnership = _out278;
                  readIdents = _3744_recIdents;
                }
              } else {
                DAST._IType _3745___mcc_h34 = _source213.dtor_baseType;
                DAST._INewtypeRange _3746___mcc_h35 = _source213.dtor_range;
                bool _3747___mcc_h36 = _source213.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3748___mcc_h37 = _source213.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3749_attributes = _3748___mcc_h37;
                bool _3750_erase = _3747___mcc_h36;
                DAST._INewtypeRange _3751_range = _3746___mcc_h35;
                DAST._IType _3752_b = _3745___mcc_h34;
                {
                  Std.Wrappers._IOption<RAST._IType> _3753_nativeToType;
                  _3753_nativeToType = DCOMP.COMP.NewtypeToRustType(_3752_b, _3751_range);
                  if (object.Equals(_3712_fromTpe, _3752_b)) {
                    RAST._IExpr _3754_recursiveGen;
                    DCOMP._IOwnership _3755_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3756_recIdents;
                    RAST._IExpr _out279;
                    DCOMP._IOwnership _out280;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out281;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out279, out _out280, out _out281);
                    _3754_recursiveGen = _out279;
                    _3755_recOwned = _out280;
                    _3756_recIdents = _out281;
                    readIdents = _3756_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source214 = _3753_nativeToType;
                    if (_source214.is_None) {
                      if (_3750_erase) {
                        r = _3754_recursiveGen;
                      } else {
                        RAST._IType _3757_rhsType;
                        RAST._IType _out282;
                        _out282 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                        _3757_rhsType = _out282;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3757_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3754_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out283;
                      DCOMP._IOwnership _out284;
                      DCOMP.COMP.FromOwnership(r, _3755_recOwned, expectedOwnership, out _out283, out _out284);
                      r = _out283;
                      resultingOwnership = _out284;
                    } else {
                      RAST._IType _3758___mcc_h1348 = _source214.dtor_value;
                      RAST._IType _3759_v = _3758___mcc_h1348;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3754_recursiveGen, RAST.Expr.create_ExprFromType(_3759_v)));
                      RAST._IExpr _out285;
                      DCOMP._IOwnership _out286;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out285, out _out286);
                      r = _out285;
                      resultingOwnership = _out286;
                    }
                  } else {
                    if ((_3753_nativeToType).is_Some) {
                      DAST._IType _source215 = _3712_fromTpe;
                      if (_source215.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3760___mcc_h1349 = _source215.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3761___mcc_h1350 = _source215.dtor_typeArgs;
                        DAST._IResolvedType _3762___mcc_h1351 = _source215.dtor_resolved;
                        DAST._IResolvedType _source216 = _3762___mcc_h1351;
                        if (_source216.is_AllocatedDatatype) {
                          DAST._IDatatypeType _3763___mcc_h1355 = _source216.dtor_datatypeType;
                        } else if (_source216.is_Datatype) {
                          DAST._IDatatypeType _3764___mcc_h1357 = _source216.dtor_datatypeType;
                        } else if (_source216.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3765___mcc_h1359 = _source216.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3766___mcc_h1360 = _source216.dtor_attributes;
                        } else {
                          DAST._IType _3767___mcc_h1363 = _source216.dtor_baseType;
                          DAST._INewtypeRange _3768___mcc_h1364 = _source216.dtor_range;
                          bool _3769___mcc_h1365 = _source216.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3770___mcc_h1366 = _source216.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3771_attributes0 = _3770___mcc_h1366;
                          bool _3772_erase0 = _3769___mcc_h1365;
                          DAST._INewtypeRange _3773_range0 = _3768___mcc_h1364;
                          DAST._IType _3774_b0 = _3767___mcc_h1363;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3775_nativeFromType;
                            _3775_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3774_b0, _3773_range0);
                            if ((_3775_nativeFromType).is_Some) {
                              RAST._IExpr _3776_recursiveGen;
                              DCOMP._IOwnership _3777_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3778_recIdents;
                              RAST._IExpr _out287;
                              DCOMP._IOwnership _out288;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out289;
                              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out287, out _out288, out _out289);
                              _3776_recursiveGen = _out287;
                              _3777_recOwned = _out288;
                              _3778_recIdents = _out289;
                              RAST._IExpr _out290;
                              DCOMP._IOwnership _out291;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3776_recursiveGen, (_3753_nativeToType).dtor_value), _3777_recOwned, expectedOwnership, out _out290, out _out291);
                              r = _out290;
                              resultingOwnership = _out291;
                              readIdents = _3778_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source215.is_Nullable) {
                        DAST._IType _3779___mcc_h1371 = _source215.dtor_Nullable_a0;
                      } else if (_source215.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3780___mcc_h1373 = _source215.dtor_Tuple_a0;
                      } else if (_source215.is_Array) {
                        DAST._IType _3781___mcc_h1375 = _source215.dtor_element;
                        BigInteger _3782___mcc_h1376 = _source215.dtor_dims;
                      } else if (_source215.is_Seq) {
                        DAST._IType _3783___mcc_h1379 = _source215.dtor_element;
                      } else if (_source215.is_Set) {
                        DAST._IType _3784___mcc_h1381 = _source215.dtor_element;
                      } else if (_source215.is_Multiset) {
                        DAST._IType _3785___mcc_h1383 = _source215.dtor_element;
                      } else if (_source215.is_Map) {
                        DAST._IType _3786___mcc_h1385 = _source215.dtor_key;
                        DAST._IType _3787___mcc_h1386 = _source215.dtor_value;
                      } else if (_source215.is_SetBuilder) {
                        DAST._IType _3788___mcc_h1389 = _source215.dtor_element;
                      } else if (_source215.is_MapBuilder) {
                        DAST._IType _3789___mcc_h1391 = _source215.dtor_key;
                        DAST._IType _3790___mcc_h1392 = _source215.dtor_value;
                      } else if (_source215.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3791___mcc_h1395 = _source215.dtor_args;
                        DAST._IType _3792___mcc_h1396 = _source215.dtor_result;
                      } else if (_source215.is_Primitive) {
                        DAST._IPrimitive _3793___mcc_h1399 = _source215.dtor_Primitive_a0;
                      } else if (_source215.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3794___mcc_h1401 = _source215.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3795___mcc_h1403 = _source215.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3796_recursiveGen;
                        DCOMP._IOwnership _3797_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3798_recIdents;
                        RAST._IExpr _out292;
                        DCOMP._IOwnership _out293;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out294;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out292, out _out293, out _out294);
                        _3796_recursiveGen = _out292;
                        _3797_recOwned = _out293;
                        _3798_recIdents = _out294;
                        RAST._IExpr _out295;
                        DCOMP._IOwnership _out296;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3796_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3753_nativeToType).dtor_value), _3797_recOwned, expectedOwnership, out _out295, out _out296);
                        r = _out295;
                        resultingOwnership = _out296;
                        readIdents = _3798_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out297;
                    DCOMP._IOwnership _out298;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out299;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _3752_b), _3752_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out297, out _out298, out _out299);
                    r = _out297;
                    resultingOwnership = _out298;
                    readIdents = _out299;
                  }
                }
              }
            } else if (_source212.is_Nullable) {
              DAST._IType _3799___mcc_h42 = _source212.dtor_Nullable_a0;
              {
                RAST._IExpr _3800_recursiveGen;
                DCOMP._IOwnership _3801_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3802_recIdents;
                RAST._IExpr _out300;
                DCOMP._IOwnership _out301;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out302;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out300, out _out301, out _out302);
                _3800_recursiveGen = _out300;
                _3801_recOwned = _out301;
                _3802_recIdents = _out302;
                r = _3800_recursiveGen;
                if (object.Equals(_3801_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out303;
                DCOMP._IOwnership _out304;
                DCOMP.COMP.FromOwnership(r, _3801_recOwned, expectedOwnership, out _out303, out _out304);
                r = _out303;
                resultingOwnership = _out304;
                readIdents = _3802_recIdents;
              }
            } else if (_source212.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3803___mcc_h44 = _source212.dtor_Tuple_a0;
              {
                RAST._IType _3804_fromTpeGen;
                RAST._IType _out305;
                _out305 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3804_fromTpeGen = _out305;
                RAST._IType _3805_toTpeGen;
                RAST._IType _out306;
                _out306 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3805_toTpeGen = _out306;
                RAST._IExpr _3806_recursiveGen;
                DCOMP._IOwnership _3807_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3808_recIdents;
                RAST._IExpr _out307;
                DCOMP._IOwnership _out308;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out309;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out307, out _out308, out _out309);
                _3806_recursiveGen = _out307;
                _3807_recOwned = _out308;
                _3808_recIdents = _out309;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3806_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3804_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3805_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out310;
                DCOMP._IOwnership _out311;
                DCOMP.COMP.FromOwnership(r, _3807_recOwned, expectedOwnership, out _out310, out _out311);
                r = _out310;
                resultingOwnership = _out311;
                readIdents = _3808_recIdents;
              }
            } else if (_source212.is_Array) {
              DAST._IType _3809___mcc_h46 = _source212.dtor_element;
              BigInteger _3810___mcc_h47 = _source212.dtor_dims;
              {
                RAST._IType _3811_fromTpeGen;
                RAST._IType _out312;
                _out312 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3811_fromTpeGen = _out312;
                RAST._IType _3812_toTpeGen;
                RAST._IType _out313;
                _out313 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3812_toTpeGen = _out313;
                RAST._IExpr _3813_recursiveGen;
                DCOMP._IOwnership _3814_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3815_recIdents;
                RAST._IExpr _out314;
                DCOMP._IOwnership _out315;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out316;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out314, out _out315, out _out316);
                _3813_recursiveGen = _out314;
                _3814_recOwned = _out315;
                _3815_recIdents = _out316;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3813_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3811_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3812_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out317;
                DCOMP._IOwnership _out318;
                DCOMP.COMP.FromOwnership(r, _3814_recOwned, expectedOwnership, out _out317, out _out318);
                r = _out317;
                resultingOwnership = _out318;
                readIdents = _3815_recIdents;
              }
            } else if (_source212.is_Seq) {
              DAST._IType _3816___mcc_h50 = _source212.dtor_element;
              {
                RAST._IType _3817_fromTpeGen;
                RAST._IType _out319;
                _out319 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3817_fromTpeGen = _out319;
                RAST._IType _3818_toTpeGen;
                RAST._IType _out320;
                _out320 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3818_toTpeGen = _out320;
                RAST._IExpr _3819_recursiveGen;
                DCOMP._IOwnership _3820_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3821_recIdents;
                RAST._IExpr _out321;
                DCOMP._IOwnership _out322;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out323;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out321, out _out322, out _out323);
                _3819_recursiveGen = _out321;
                _3820_recOwned = _out322;
                _3821_recIdents = _out323;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3819_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3817_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3818_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out324;
                DCOMP._IOwnership _out325;
                DCOMP.COMP.FromOwnership(r, _3820_recOwned, expectedOwnership, out _out324, out _out325);
                r = _out324;
                resultingOwnership = _out325;
                readIdents = _3821_recIdents;
              }
            } else if (_source212.is_Set) {
              DAST._IType _3822___mcc_h52 = _source212.dtor_element;
              {
                RAST._IType _3823_fromTpeGen;
                RAST._IType _out326;
                _out326 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3823_fromTpeGen = _out326;
                RAST._IType _3824_toTpeGen;
                RAST._IType _out327;
                _out327 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3824_toTpeGen = _out327;
                RAST._IExpr _3825_recursiveGen;
                DCOMP._IOwnership _3826_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3827_recIdents;
                RAST._IExpr _out328;
                DCOMP._IOwnership _out329;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out330;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out328, out _out329, out _out330);
                _3825_recursiveGen = _out328;
                _3826_recOwned = _out329;
                _3827_recIdents = _out330;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3825_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3823_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3824_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out331;
                DCOMP._IOwnership _out332;
                DCOMP.COMP.FromOwnership(r, _3826_recOwned, expectedOwnership, out _out331, out _out332);
                r = _out331;
                resultingOwnership = _out332;
                readIdents = _3827_recIdents;
              }
            } else if (_source212.is_Multiset) {
              DAST._IType _3828___mcc_h54 = _source212.dtor_element;
              {
                RAST._IType _3829_fromTpeGen;
                RAST._IType _out333;
                _out333 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3829_fromTpeGen = _out333;
                RAST._IType _3830_toTpeGen;
                RAST._IType _out334;
                _out334 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3830_toTpeGen = _out334;
                RAST._IExpr _3831_recursiveGen;
                DCOMP._IOwnership _3832_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3833_recIdents;
                RAST._IExpr _out335;
                DCOMP._IOwnership _out336;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out337;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out335, out _out336, out _out337);
                _3831_recursiveGen = _out335;
                _3832_recOwned = _out336;
                _3833_recIdents = _out337;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3831_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3829_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3830_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out338;
                DCOMP._IOwnership _out339;
                DCOMP.COMP.FromOwnership(r, _3832_recOwned, expectedOwnership, out _out338, out _out339);
                r = _out338;
                resultingOwnership = _out339;
                readIdents = _3833_recIdents;
              }
            } else if (_source212.is_Map) {
              DAST._IType _3834___mcc_h56 = _source212.dtor_key;
              DAST._IType _3835___mcc_h57 = _source212.dtor_value;
              {
                RAST._IType _3836_fromTpeGen;
                RAST._IType _out340;
                _out340 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3836_fromTpeGen = _out340;
                RAST._IType _3837_toTpeGen;
                RAST._IType _out341;
                _out341 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3837_toTpeGen = _out341;
                RAST._IExpr _3838_recursiveGen;
                DCOMP._IOwnership _3839_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3840_recIdents;
                RAST._IExpr _out342;
                DCOMP._IOwnership _out343;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out344;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out342, out _out343, out _out344);
                _3838_recursiveGen = _out342;
                _3839_recOwned = _out343;
                _3840_recIdents = _out344;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3838_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3836_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3837_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out345;
                DCOMP._IOwnership _out346;
                DCOMP.COMP.FromOwnership(r, _3839_recOwned, expectedOwnership, out _out345, out _out346);
                r = _out345;
                resultingOwnership = _out346;
                readIdents = _3840_recIdents;
              }
            } else if (_source212.is_SetBuilder) {
              DAST._IType _3841___mcc_h60 = _source212.dtor_element;
              {
                RAST._IType _3842_fromTpeGen;
                RAST._IType _out347;
                _out347 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3842_fromTpeGen = _out347;
                RAST._IType _3843_toTpeGen;
                RAST._IType _out348;
                _out348 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3843_toTpeGen = _out348;
                RAST._IExpr _3844_recursiveGen;
                DCOMP._IOwnership _3845_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3846_recIdents;
                RAST._IExpr _out349;
                DCOMP._IOwnership _out350;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out351;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out349, out _out350, out _out351);
                _3844_recursiveGen = _out349;
                _3845_recOwned = _out350;
                _3846_recIdents = _out351;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3844_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3842_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3843_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out352;
                DCOMP._IOwnership _out353;
                DCOMP.COMP.FromOwnership(r, _3845_recOwned, expectedOwnership, out _out352, out _out353);
                r = _out352;
                resultingOwnership = _out353;
                readIdents = _3846_recIdents;
              }
            } else if (_source212.is_MapBuilder) {
              DAST._IType _3847___mcc_h62 = _source212.dtor_key;
              DAST._IType _3848___mcc_h63 = _source212.dtor_value;
              {
                RAST._IType _3849_fromTpeGen;
                RAST._IType _out354;
                _out354 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3849_fromTpeGen = _out354;
                RAST._IType _3850_toTpeGen;
                RAST._IType _out355;
                _out355 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3850_toTpeGen = _out355;
                RAST._IExpr _3851_recursiveGen;
                DCOMP._IOwnership _3852_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3853_recIdents;
                RAST._IExpr _out356;
                DCOMP._IOwnership _out357;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out358;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out356, out _out357, out _out358);
                _3851_recursiveGen = _out356;
                _3852_recOwned = _out357;
                _3853_recIdents = _out358;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3851_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3849_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3850_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out359;
                DCOMP._IOwnership _out360;
                DCOMP.COMP.FromOwnership(r, _3852_recOwned, expectedOwnership, out _out359, out _out360);
                r = _out359;
                resultingOwnership = _out360;
                readIdents = _3853_recIdents;
              }
            } else if (_source212.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3854___mcc_h66 = _source212.dtor_args;
              DAST._IType _3855___mcc_h67 = _source212.dtor_result;
              {
                RAST._IType _3856_fromTpeGen;
                RAST._IType _out361;
                _out361 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3856_fromTpeGen = _out361;
                RAST._IType _3857_toTpeGen;
                RAST._IType _out362;
                _out362 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3857_toTpeGen = _out362;
                RAST._IExpr _3858_recursiveGen;
                DCOMP._IOwnership _3859_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3860_recIdents;
                RAST._IExpr _out363;
                DCOMP._IOwnership _out364;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out365;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out363, out _out364, out _out365);
                _3858_recursiveGen = _out363;
                _3859_recOwned = _out364;
                _3860_recIdents = _out365;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3858_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3856_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3857_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out366;
                DCOMP._IOwnership _out367;
                DCOMP.COMP.FromOwnership(r, _3859_recOwned, expectedOwnership, out _out366, out _out367);
                r = _out366;
                resultingOwnership = _out367;
                readIdents = _3860_recIdents;
              }
            } else if (_source212.is_Primitive) {
              DAST._IPrimitive _3861___mcc_h70 = _source212.dtor_Primitive_a0;
              {
                RAST._IType _3862_fromTpeGen;
                RAST._IType _out368;
                _out368 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3862_fromTpeGen = _out368;
                RAST._IType _3863_toTpeGen;
                RAST._IType _out369;
                _out369 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3863_toTpeGen = _out369;
                RAST._IExpr _3864_recursiveGen;
                DCOMP._IOwnership _3865_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3866_recIdents;
                RAST._IExpr _out370;
                DCOMP._IOwnership _out371;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out372;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out370, out _out371, out _out372);
                _3864_recursiveGen = _out370;
                _3865_recOwned = _out371;
                _3866_recIdents = _out372;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3864_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3862_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3863_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out373;
                DCOMP._IOwnership _out374;
                DCOMP.COMP.FromOwnership(r, _3865_recOwned, expectedOwnership, out _out373, out _out374);
                r = _out373;
                resultingOwnership = _out374;
                readIdents = _3866_recIdents;
              }
            } else if (_source212.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3867___mcc_h72 = _source212.dtor_Passthrough_a0;
              {
                RAST._IType _3868_fromTpeGen;
                RAST._IType _out375;
                _out375 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3868_fromTpeGen = _out375;
                RAST._IType _3869_toTpeGen;
                RAST._IType _out376;
                _out376 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3869_toTpeGen = _out376;
                RAST._IExpr _3870_recursiveGen;
                DCOMP._IOwnership _3871_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3872_recIdents;
                RAST._IExpr _out377;
                DCOMP._IOwnership _out378;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out379;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out377, out _out378, out _out379);
                _3870_recursiveGen = _out377;
                _3871_recOwned = _out378;
                _3872_recIdents = _out379;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3870_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3868_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3869_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out380;
                DCOMP._IOwnership _out381;
                DCOMP.COMP.FromOwnership(r, _3871_recOwned, expectedOwnership, out _out380, out _out381);
                r = _out380;
                resultingOwnership = _out381;
                readIdents = _3872_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3873___mcc_h74 = _source212.dtor_TypeArg_a0;
              {
                RAST._IType _3874_fromTpeGen;
                RAST._IType _out382;
                _out382 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3874_fromTpeGen = _out382;
                RAST._IType _3875_toTpeGen;
                RAST._IType _out383;
                _out383 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3875_toTpeGen = _out383;
                RAST._IExpr _3876_recursiveGen;
                DCOMP._IOwnership _3877_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3878_recIdents;
                RAST._IExpr _out384;
                DCOMP._IOwnership _out385;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out386;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out384, out _out385, out _out386);
                _3876_recursiveGen = _out384;
                _3877_recOwned = _out385;
                _3878_recIdents = _out386;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3876_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3874_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3875_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out387;
                DCOMP._IOwnership _out388;
                DCOMP.COMP.FromOwnership(r, _3877_recOwned, expectedOwnership, out _out387, out _out388);
                r = _out387;
                resultingOwnership = _out388;
                readIdents = _3878_recIdents;
              }
            }
          } else if (_source211.is_Datatype) {
            DAST._IDatatypeType _3879___mcc_h76 = _source211.dtor_datatypeType;
            DAST._IType _source217 = _3718___mcc_h1;
            if (_source217.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3880___mcc_h80 = _source217.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3881___mcc_h81 = _source217.dtor_typeArgs;
              DAST._IResolvedType _3882___mcc_h82 = _source217.dtor_resolved;
              DAST._IResolvedType _source218 = _3882___mcc_h82;
              if (_source218.is_AllocatedDatatype) {
                DAST._IDatatypeType _3883___mcc_h86 = _source218.dtor_datatypeType;
                {
                  RAST._IType _3884_fromTpeGen;
                  RAST._IType _out389;
                  _out389 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _3884_fromTpeGen = _out389;
                  RAST._IType _3885_toTpeGen;
                  RAST._IType _out390;
                  _out390 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _3885_toTpeGen = _out390;
                  RAST._IExpr _3886_recursiveGen;
                  DCOMP._IOwnership _3887_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3888_recIdents;
                  RAST._IExpr _out391;
                  DCOMP._IOwnership _out392;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out393;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out391, out _out392, out _out393);
                  _3886_recursiveGen = _out391;
                  _3887_recOwned = _out392;
                  _3888_recIdents = _out393;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3886_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3884_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3885_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out394;
                  DCOMP._IOwnership _out395;
                  DCOMP.COMP.FromOwnership(r, _3887_recOwned, expectedOwnership, out _out394, out _out395);
                  r = _out394;
                  resultingOwnership = _out395;
                  readIdents = _3888_recIdents;
                }
              } else if (_source218.is_Datatype) {
                DAST._IDatatypeType _3889___mcc_h88 = _source218.dtor_datatypeType;
                {
                  RAST._IType _3890_fromTpeGen;
                  RAST._IType _out396;
                  _out396 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _3890_fromTpeGen = _out396;
                  RAST._IType _3891_toTpeGen;
                  RAST._IType _out397;
                  _out397 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _3891_toTpeGen = _out397;
                  RAST._IExpr _3892_recursiveGen;
                  DCOMP._IOwnership _3893_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3894_recIdents;
                  RAST._IExpr _out398;
                  DCOMP._IOwnership _out399;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out400;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out398, out _out399, out _out400);
                  _3892_recursiveGen = _out398;
                  _3893_recOwned = _out399;
                  _3894_recIdents = _out400;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3892_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3890_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3891_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out401;
                  DCOMP._IOwnership _out402;
                  DCOMP.COMP.FromOwnership(r, _3893_recOwned, expectedOwnership, out _out401, out _out402);
                  r = _out401;
                  resultingOwnership = _out402;
                  readIdents = _3894_recIdents;
                }
              } else if (_source218.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3895___mcc_h90 = _source218.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3896___mcc_h91 = _source218.dtor_attributes;
                {
                  RAST._IType _3897_fromTpeGen;
                  RAST._IType _out403;
                  _out403 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _3897_fromTpeGen = _out403;
                  RAST._IType _3898_toTpeGen;
                  RAST._IType _out404;
                  _out404 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _3898_toTpeGen = _out404;
                  RAST._IExpr _3899_recursiveGen;
                  DCOMP._IOwnership _3900_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3901_recIdents;
                  RAST._IExpr _out405;
                  DCOMP._IOwnership _out406;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out407;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out405, out _out406, out _out407);
                  _3899_recursiveGen = _out405;
                  _3900_recOwned = _out406;
                  _3901_recIdents = _out407;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3899_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3897_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3898_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out408;
                  DCOMP._IOwnership _out409;
                  DCOMP.COMP.FromOwnership(r, _3900_recOwned, expectedOwnership, out _out408, out _out409);
                  r = _out408;
                  resultingOwnership = _out409;
                  readIdents = _3901_recIdents;
                }
              } else {
                DAST._IType _3902___mcc_h94 = _source218.dtor_baseType;
                DAST._INewtypeRange _3903___mcc_h95 = _source218.dtor_range;
                bool _3904___mcc_h96 = _source218.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3905___mcc_h97 = _source218.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3906_attributes = _3905___mcc_h97;
                bool _3907_erase = _3904___mcc_h96;
                DAST._INewtypeRange _3908_range = _3903___mcc_h95;
                DAST._IType _3909_b = _3902___mcc_h94;
                {
                  Std.Wrappers._IOption<RAST._IType> _3910_nativeToType;
                  _3910_nativeToType = DCOMP.COMP.NewtypeToRustType(_3909_b, _3908_range);
                  if (object.Equals(_3712_fromTpe, _3909_b)) {
                    RAST._IExpr _3911_recursiveGen;
                    DCOMP._IOwnership _3912_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3913_recIdents;
                    RAST._IExpr _out410;
                    DCOMP._IOwnership _out411;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out412;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out410, out _out411, out _out412);
                    _3911_recursiveGen = _out410;
                    _3912_recOwned = _out411;
                    _3913_recIdents = _out412;
                    readIdents = _3913_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source219 = _3910_nativeToType;
                    if (_source219.is_None) {
                      if (_3907_erase) {
                        r = _3911_recursiveGen;
                      } else {
                        RAST._IType _3914_rhsType;
                        RAST._IType _out413;
                        _out413 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                        _3914_rhsType = _out413;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3914_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3911_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out414;
                      DCOMP._IOwnership _out415;
                      DCOMP.COMP.FromOwnership(r, _3912_recOwned, expectedOwnership, out _out414, out _out415);
                      r = _out414;
                      resultingOwnership = _out415;
                    } else {
                      RAST._IType _3915___mcc_h1405 = _source219.dtor_value;
                      RAST._IType _3916_v = _3915___mcc_h1405;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3911_recursiveGen, RAST.Expr.create_ExprFromType(_3916_v)));
                      RAST._IExpr _out416;
                      DCOMP._IOwnership _out417;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out416, out _out417);
                      r = _out416;
                      resultingOwnership = _out417;
                    }
                  } else {
                    if ((_3910_nativeToType).is_Some) {
                      DAST._IType _source220 = _3712_fromTpe;
                      if (_source220.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3917___mcc_h1406 = _source220.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3918___mcc_h1407 = _source220.dtor_typeArgs;
                        DAST._IResolvedType _3919___mcc_h1408 = _source220.dtor_resolved;
                        DAST._IResolvedType _source221 = _3919___mcc_h1408;
                        if (_source221.is_AllocatedDatatype) {
                          DAST._IDatatypeType _3920___mcc_h1412 = _source221.dtor_datatypeType;
                        } else if (_source221.is_Datatype) {
                          DAST._IDatatypeType _3921___mcc_h1414 = _source221.dtor_datatypeType;
                        } else if (_source221.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3922___mcc_h1416 = _source221.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3923___mcc_h1417 = _source221.dtor_attributes;
                        } else {
                          DAST._IType _3924___mcc_h1420 = _source221.dtor_baseType;
                          DAST._INewtypeRange _3925___mcc_h1421 = _source221.dtor_range;
                          bool _3926___mcc_h1422 = _source221.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3927___mcc_h1423 = _source221.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3928_attributes0 = _3927___mcc_h1423;
                          bool _3929_erase0 = _3926___mcc_h1422;
                          DAST._INewtypeRange _3930_range0 = _3925___mcc_h1421;
                          DAST._IType _3931_b0 = _3924___mcc_h1420;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3932_nativeFromType;
                            _3932_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3931_b0, _3930_range0);
                            if ((_3932_nativeFromType).is_Some) {
                              RAST._IExpr _3933_recursiveGen;
                              DCOMP._IOwnership _3934_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3935_recIdents;
                              RAST._IExpr _out418;
                              DCOMP._IOwnership _out419;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out420;
                              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out418, out _out419, out _out420);
                              _3933_recursiveGen = _out418;
                              _3934_recOwned = _out419;
                              _3935_recIdents = _out420;
                              RAST._IExpr _out421;
                              DCOMP._IOwnership _out422;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3933_recursiveGen, (_3910_nativeToType).dtor_value), _3934_recOwned, expectedOwnership, out _out421, out _out422);
                              r = _out421;
                              resultingOwnership = _out422;
                              readIdents = _3935_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source220.is_Nullable) {
                        DAST._IType _3936___mcc_h1428 = _source220.dtor_Nullable_a0;
                      } else if (_source220.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3937___mcc_h1430 = _source220.dtor_Tuple_a0;
                      } else if (_source220.is_Array) {
                        DAST._IType _3938___mcc_h1432 = _source220.dtor_element;
                        BigInteger _3939___mcc_h1433 = _source220.dtor_dims;
                      } else if (_source220.is_Seq) {
                        DAST._IType _3940___mcc_h1436 = _source220.dtor_element;
                      } else if (_source220.is_Set) {
                        DAST._IType _3941___mcc_h1438 = _source220.dtor_element;
                      } else if (_source220.is_Multiset) {
                        DAST._IType _3942___mcc_h1440 = _source220.dtor_element;
                      } else if (_source220.is_Map) {
                        DAST._IType _3943___mcc_h1442 = _source220.dtor_key;
                        DAST._IType _3944___mcc_h1443 = _source220.dtor_value;
                      } else if (_source220.is_SetBuilder) {
                        DAST._IType _3945___mcc_h1446 = _source220.dtor_element;
                      } else if (_source220.is_MapBuilder) {
                        DAST._IType _3946___mcc_h1448 = _source220.dtor_key;
                        DAST._IType _3947___mcc_h1449 = _source220.dtor_value;
                      } else if (_source220.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3948___mcc_h1452 = _source220.dtor_args;
                        DAST._IType _3949___mcc_h1453 = _source220.dtor_result;
                      } else if (_source220.is_Primitive) {
                        DAST._IPrimitive _3950___mcc_h1456 = _source220.dtor_Primitive_a0;
                      } else if (_source220.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3951___mcc_h1458 = _source220.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3952___mcc_h1460 = _source220.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3953_recursiveGen;
                        DCOMP._IOwnership _3954_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3955_recIdents;
                        RAST._IExpr _out423;
                        DCOMP._IOwnership _out424;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out425;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out423, out _out424, out _out425);
                        _3953_recursiveGen = _out423;
                        _3954_recOwned = _out424;
                        _3955_recIdents = _out425;
                        RAST._IExpr _out426;
                        DCOMP._IOwnership _out427;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3953_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3910_nativeToType).dtor_value), _3954_recOwned, expectedOwnership, out _out426, out _out427);
                        r = _out426;
                        resultingOwnership = _out427;
                        readIdents = _3955_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out428;
                    DCOMP._IOwnership _out429;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out430;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _3909_b), _3909_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out428, out _out429, out _out430);
                    r = _out428;
                    resultingOwnership = _out429;
                    readIdents = _out430;
                  }
                }
              }
            } else if (_source217.is_Nullable) {
              DAST._IType _3956___mcc_h102 = _source217.dtor_Nullable_a0;
              {
                RAST._IExpr _3957_recursiveGen;
                DCOMP._IOwnership _3958_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3959_recIdents;
                RAST._IExpr _out431;
                DCOMP._IOwnership _out432;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out433;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out431, out _out432, out _out433);
                _3957_recursiveGen = _out431;
                _3958_recOwned = _out432;
                _3959_recIdents = _out433;
                r = _3957_recursiveGen;
                if (object.Equals(_3958_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out434;
                DCOMP._IOwnership _out435;
                DCOMP.COMP.FromOwnership(r, _3958_recOwned, expectedOwnership, out _out434, out _out435);
                r = _out434;
                resultingOwnership = _out435;
                readIdents = _3959_recIdents;
              }
            } else if (_source217.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3960___mcc_h104 = _source217.dtor_Tuple_a0;
              {
                RAST._IType _3961_fromTpeGen;
                RAST._IType _out436;
                _out436 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3961_fromTpeGen = _out436;
                RAST._IType _3962_toTpeGen;
                RAST._IType _out437;
                _out437 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3962_toTpeGen = _out437;
                RAST._IExpr _3963_recursiveGen;
                DCOMP._IOwnership _3964_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3965_recIdents;
                RAST._IExpr _out438;
                DCOMP._IOwnership _out439;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out440;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out438, out _out439, out _out440);
                _3963_recursiveGen = _out438;
                _3964_recOwned = _out439;
                _3965_recIdents = _out440;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3963_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3961_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3962_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out441;
                DCOMP._IOwnership _out442;
                DCOMP.COMP.FromOwnership(r, _3964_recOwned, expectedOwnership, out _out441, out _out442);
                r = _out441;
                resultingOwnership = _out442;
                readIdents = _3965_recIdents;
              }
            } else if (_source217.is_Array) {
              DAST._IType _3966___mcc_h106 = _source217.dtor_element;
              BigInteger _3967___mcc_h107 = _source217.dtor_dims;
              {
                RAST._IType _3968_fromTpeGen;
                RAST._IType _out443;
                _out443 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3968_fromTpeGen = _out443;
                RAST._IType _3969_toTpeGen;
                RAST._IType _out444;
                _out444 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3969_toTpeGen = _out444;
                RAST._IExpr _3970_recursiveGen;
                DCOMP._IOwnership _3971_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3972_recIdents;
                RAST._IExpr _out445;
                DCOMP._IOwnership _out446;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out447;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out445, out _out446, out _out447);
                _3970_recursiveGen = _out445;
                _3971_recOwned = _out446;
                _3972_recIdents = _out447;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3970_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3968_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3969_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out448;
                DCOMP._IOwnership _out449;
                DCOMP.COMP.FromOwnership(r, _3971_recOwned, expectedOwnership, out _out448, out _out449);
                r = _out448;
                resultingOwnership = _out449;
                readIdents = _3972_recIdents;
              }
            } else if (_source217.is_Seq) {
              DAST._IType _3973___mcc_h110 = _source217.dtor_element;
              {
                RAST._IType _3974_fromTpeGen;
                RAST._IType _out450;
                _out450 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3974_fromTpeGen = _out450;
                RAST._IType _3975_toTpeGen;
                RAST._IType _out451;
                _out451 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3975_toTpeGen = _out451;
                RAST._IExpr _3976_recursiveGen;
                DCOMP._IOwnership _3977_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3978_recIdents;
                RAST._IExpr _out452;
                DCOMP._IOwnership _out453;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out454;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out452, out _out453, out _out454);
                _3976_recursiveGen = _out452;
                _3977_recOwned = _out453;
                _3978_recIdents = _out454;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3976_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3974_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3975_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out455;
                DCOMP._IOwnership _out456;
                DCOMP.COMP.FromOwnership(r, _3977_recOwned, expectedOwnership, out _out455, out _out456);
                r = _out455;
                resultingOwnership = _out456;
                readIdents = _3978_recIdents;
              }
            } else if (_source217.is_Set) {
              DAST._IType _3979___mcc_h112 = _source217.dtor_element;
              {
                RAST._IType _3980_fromTpeGen;
                RAST._IType _out457;
                _out457 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3980_fromTpeGen = _out457;
                RAST._IType _3981_toTpeGen;
                RAST._IType _out458;
                _out458 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3981_toTpeGen = _out458;
                RAST._IExpr _3982_recursiveGen;
                DCOMP._IOwnership _3983_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3984_recIdents;
                RAST._IExpr _out459;
                DCOMP._IOwnership _out460;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out461;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out459, out _out460, out _out461);
                _3982_recursiveGen = _out459;
                _3983_recOwned = _out460;
                _3984_recIdents = _out461;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3982_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3980_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3981_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out462;
                DCOMP._IOwnership _out463;
                DCOMP.COMP.FromOwnership(r, _3983_recOwned, expectedOwnership, out _out462, out _out463);
                r = _out462;
                resultingOwnership = _out463;
                readIdents = _3984_recIdents;
              }
            } else if (_source217.is_Multiset) {
              DAST._IType _3985___mcc_h114 = _source217.dtor_element;
              {
                RAST._IType _3986_fromTpeGen;
                RAST._IType _out464;
                _out464 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3986_fromTpeGen = _out464;
                RAST._IType _3987_toTpeGen;
                RAST._IType _out465;
                _out465 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3987_toTpeGen = _out465;
                RAST._IExpr _3988_recursiveGen;
                DCOMP._IOwnership _3989_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3990_recIdents;
                RAST._IExpr _out466;
                DCOMP._IOwnership _out467;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out468;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out466, out _out467, out _out468);
                _3988_recursiveGen = _out466;
                _3989_recOwned = _out467;
                _3990_recIdents = _out468;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3988_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3986_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3987_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out469;
                DCOMP._IOwnership _out470;
                DCOMP.COMP.FromOwnership(r, _3989_recOwned, expectedOwnership, out _out469, out _out470);
                r = _out469;
                resultingOwnership = _out470;
                readIdents = _3990_recIdents;
              }
            } else if (_source217.is_Map) {
              DAST._IType _3991___mcc_h116 = _source217.dtor_key;
              DAST._IType _3992___mcc_h117 = _source217.dtor_value;
              {
                RAST._IType _3993_fromTpeGen;
                RAST._IType _out471;
                _out471 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3993_fromTpeGen = _out471;
                RAST._IType _3994_toTpeGen;
                RAST._IType _out472;
                _out472 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _3994_toTpeGen = _out472;
                RAST._IExpr _3995_recursiveGen;
                DCOMP._IOwnership _3996_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3997_recIdents;
                RAST._IExpr _out473;
                DCOMP._IOwnership _out474;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out475;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out473, out _out474, out _out475);
                _3995_recursiveGen = _out473;
                _3996_recOwned = _out474;
                _3997_recIdents = _out475;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3995_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3993_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3994_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out476;
                DCOMP._IOwnership _out477;
                DCOMP.COMP.FromOwnership(r, _3996_recOwned, expectedOwnership, out _out476, out _out477);
                r = _out476;
                resultingOwnership = _out477;
                readIdents = _3997_recIdents;
              }
            } else if (_source217.is_SetBuilder) {
              DAST._IType _3998___mcc_h120 = _source217.dtor_element;
              {
                RAST._IType _3999_fromTpeGen;
                RAST._IType _out478;
                _out478 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _3999_fromTpeGen = _out478;
                RAST._IType _4000_toTpeGen;
                RAST._IType _out479;
                _out479 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4000_toTpeGen = _out479;
                RAST._IExpr _4001_recursiveGen;
                DCOMP._IOwnership _4002_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4003_recIdents;
                RAST._IExpr _out480;
                DCOMP._IOwnership _out481;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out482;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out480, out _out481, out _out482);
                _4001_recursiveGen = _out480;
                _4002_recOwned = _out481;
                _4003_recIdents = _out482;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4001_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3999_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4000_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out483;
                DCOMP._IOwnership _out484;
                DCOMP.COMP.FromOwnership(r, _4002_recOwned, expectedOwnership, out _out483, out _out484);
                r = _out483;
                resultingOwnership = _out484;
                readIdents = _4003_recIdents;
              }
            } else if (_source217.is_MapBuilder) {
              DAST._IType _4004___mcc_h122 = _source217.dtor_key;
              DAST._IType _4005___mcc_h123 = _source217.dtor_value;
              {
                RAST._IType _4006_fromTpeGen;
                RAST._IType _out485;
                _out485 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4006_fromTpeGen = _out485;
                RAST._IType _4007_toTpeGen;
                RAST._IType _out486;
                _out486 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4007_toTpeGen = _out486;
                RAST._IExpr _4008_recursiveGen;
                DCOMP._IOwnership _4009_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4010_recIdents;
                RAST._IExpr _out487;
                DCOMP._IOwnership _out488;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out489;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out487, out _out488, out _out489);
                _4008_recursiveGen = _out487;
                _4009_recOwned = _out488;
                _4010_recIdents = _out489;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4008_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4006_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4007_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out490;
                DCOMP._IOwnership _out491;
                DCOMP.COMP.FromOwnership(r, _4009_recOwned, expectedOwnership, out _out490, out _out491);
                r = _out490;
                resultingOwnership = _out491;
                readIdents = _4010_recIdents;
              }
            } else if (_source217.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4011___mcc_h126 = _source217.dtor_args;
              DAST._IType _4012___mcc_h127 = _source217.dtor_result;
              {
                RAST._IType _4013_fromTpeGen;
                RAST._IType _out492;
                _out492 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4013_fromTpeGen = _out492;
                RAST._IType _4014_toTpeGen;
                RAST._IType _out493;
                _out493 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4014_toTpeGen = _out493;
                RAST._IExpr _4015_recursiveGen;
                DCOMP._IOwnership _4016_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4017_recIdents;
                RAST._IExpr _out494;
                DCOMP._IOwnership _out495;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out496;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out494, out _out495, out _out496);
                _4015_recursiveGen = _out494;
                _4016_recOwned = _out495;
                _4017_recIdents = _out496;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4015_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4013_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4014_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out497;
                DCOMP._IOwnership _out498;
                DCOMP.COMP.FromOwnership(r, _4016_recOwned, expectedOwnership, out _out497, out _out498);
                r = _out497;
                resultingOwnership = _out498;
                readIdents = _4017_recIdents;
              }
            } else if (_source217.is_Primitive) {
              DAST._IPrimitive _4018___mcc_h130 = _source217.dtor_Primitive_a0;
              {
                RAST._IType _4019_fromTpeGen;
                RAST._IType _out499;
                _out499 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4019_fromTpeGen = _out499;
                RAST._IType _4020_toTpeGen;
                RAST._IType _out500;
                _out500 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4020_toTpeGen = _out500;
                RAST._IExpr _4021_recursiveGen;
                DCOMP._IOwnership _4022_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4023_recIdents;
                RAST._IExpr _out501;
                DCOMP._IOwnership _out502;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out503;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out501, out _out502, out _out503);
                _4021_recursiveGen = _out501;
                _4022_recOwned = _out502;
                _4023_recIdents = _out503;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4021_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4019_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4020_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out504;
                DCOMP._IOwnership _out505;
                DCOMP.COMP.FromOwnership(r, _4022_recOwned, expectedOwnership, out _out504, out _out505);
                r = _out504;
                resultingOwnership = _out505;
                readIdents = _4023_recIdents;
              }
            } else if (_source217.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4024___mcc_h132 = _source217.dtor_Passthrough_a0;
              {
                RAST._IType _4025_fromTpeGen;
                RAST._IType _out506;
                _out506 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4025_fromTpeGen = _out506;
                RAST._IType _4026_toTpeGen;
                RAST._IType _out507;
                _out507 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4026_toTpeGen = _out507;
                RAST._IExpr _4027_recursiveGen;
                DCOMP._IOwnership _4028_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4029_recIdents;
                RAST._IExpr _out508;
                DCOMP._IOwnership _out509;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out510;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out508, out _out509, out _out510);
                _4027_recursiveGen = _out508;
                _4028_recOwned = _out509;
                _4029_recIdents = _out510;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4027_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4025_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4026_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out511;
                DCOMP._IOwnership _out512;
                DCOMP.COMP.FromOwnership(r, _4028_recOwned, expectedOwnership, out _out511, out _out512);
                r = _out511;
                resultingOwnership = _out512;
                readIdents = _4029_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4030___mcc_h134 = _source217.dtor_TypeArg_a0;
              {
                RAST._IType _4031_fromTpeGen;
                RAST._IType _out513;
                _out513 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4031_fromTpeGen = _out513;
                RAST._IType _4032_toTpeGen;
                RAST._IType _out514;
                _out514 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4032_toTpeGen = _out514;
                RAST._IExpr _4033_recursiveGen;
                DCOMP._IOwnership _4034_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4035_recIdents;
                RAST._IExpr _out515;
                DCOMP._IOwnership _out516;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out517;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out515, out _out516, out _out517);
                _4033_recursiveGen = _out515;
                _4034_recOwned = _out516;
                _4035_recIdents = _out517;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4033_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4031_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4032_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out518;
                DCOMP._IOwnership _out519;
                DCOMP.COMP.FromOwnership(r, _4034_recOwned, expectedOwnership, out _out518, out _out519);
                r = _out518;
                resultingOwnership = _out519;
                readIdents = _4035_recIdents;
              }
            }
          } else if (_source211.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4036___mcc_h136 = _source211.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _4037___mcc_h137 = _source211.dtor_attributes;
            DAST._IType _source222 = _3718___mcc_h1;
            if (_source222.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4038___mcc_h144 = _source222.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _4039___mcc_h145 = _source222.dtor_typeArgs;
              DAST._IResolvedType _4040___mcc_h146 = _source222.dtor_resolved;
              DAST._IResolvedType _source223 = _4040___mcc_h146;
              if (_source223.is_AllocatedDatatype) {
                DAST._IDatatypeType _4041___mcc_h150 = _source223.dtor_datatypeType;
                {
                  RAST._IType _4042_fromTpeGen;
                  RAST._IType _out520;
                  _out520 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _4042_fromTpeGen = _out520;
                  RAST._IType _4043_toTpeGen;
                  RAST._IType _out521;
                  _out521 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _4043_toTpeGen = _out521;
                  RAST._IExpr _4044_recursiveGen;
                  DCOMP._IOwnership _4045_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4046_recIdents;
                  RAST._IExpr _out522;
                  DCOMP._IOwnership _out523;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out524;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out522, out _out523, out _out524);
                  _4044_recursiveGen = _out522;
                  _4045_recOwned = _out523;
                  _4046_recIdents = _out524;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4044_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4042_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4043_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out525;
                  DCOMP._IOwnership _out526;
                  DCOMP.COMP.FromOwnership(r, _4045_recOwned, expectedOwnership, out _out525, out _out526);
                  r = _out525;
                  resultingOwnership = _out526;
                  readIdents = _4046_recIdents;
                }
              } else if (_source223.is_Datatype) {
                DAST._IDatatypeType _4047___mcc_h152 = _source223.dtor_datatypeType;
                {
                  RAST._IType _4048_fromTpeGen;
                  RAST._IType _out527;
                  _out527 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _4048_fromTpeGen = _out527;
                  RAST._IType _4049_toTpeGen;
                  RAST._IType _out528;
                  _out528 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _4049_toTpeGen = _out528;
                  RAST._IExpr _4050_recursiveGen;
                  DCOMP._IOwnership _4051_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4052_recIdents;
                  RAST._IExpr _out529;
                  DCOMP._IOwnership _out530;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out531;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out529, out _out530, out _out531);
                  _4050_recursiveGen = _out529;
                  _4051_recOwned = _out530;
                  _4052_recIdents = _out531;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4050_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4048_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4049_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out532;
                  DCOMP._IOwnership _out533;
                  DCOMP.COMP.FromOwnership(r, _4051_recOwned, expectedOwnership, out _out532, out _out533);
                  r = _out532;
                  resultingOwnership = _out533;
                  readIdents = _4052_recIdents;
                }
              } else if (_source223.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4053___mcc_h154 = _source223.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _4054___mcc_h155 = _source223.dtor_attributes;
                {
                  RAST._IType _4055_fromTpeGen;
                  RAST._IType _out534;
                  _out534 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _4055_fromTpeGen = _out534;
                  RAST._IType _4056_toTpeGen;
                  RAST._IType _out535;
                  _out535 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _4056_toTpeGen = _out535;
                  RAST._IExpr _4057_recursiveGen;
                  DCOMP._IOwnership _4058_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4059_recIdents;
                  RAST._IExpr _out536;
                  DCOMP._IOwnership _out537;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out538;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out536, out _out537, out _out538);
                  _4057_recursiveGen = _out536;
                  _4058_recOwned = _out537;
                  _4059_recIdents = _out538;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4057_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4055_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4056_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out539;
                  DCOMP._IOwnership _out540;
                  DCOMP.COMP.FromOwnership(r, _4058_recOwned, expectedOwnership, out _out539, out _out540);
                  r = _out539;
                  resultingOwnership = _out540;
                  readIdents = _4059_recIdents;
                }
              } else {
                DAST._IType _4060___mcc_h158 = _source223.dtor_baseType;
                DAST._INewtypeRange _4061___mcc_h159 = _source223.dtor_range;
                bool _4062___mcc_h160 = _source223.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4063___mcc_h161 = _source223.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4064_attributes = _4063___mcc_h161;
                bool _4065_erase = _4062___mcc_h160;
                DAST._INewtypeRange _4066_range = _4061___mcc_h159;
                DAST._IType _4067_b = _4060___mcc_h158;
                {
                  Std.Wrappers._IOption<RAST._IType> _4068_nativeToType;
                  _4068_nativeToType = DCOMP.COMP.NewtypeToRustType(_4067_b, _4066_range);
                  if (object.Equals(_3712_fromTpe, _4067_b)) {
                    RAST._IExpr _4069_recursiveGen;
                    DCOMP._IOwnership _4070_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4071_recIdents;
                    RAST._IExpr _out541;
                    DCOMP._IOwnership _out542;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out543;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out541, out _out542, out _out543);
                    _4069_recursiveGen = _out541;
                    _4070_recOwned = _out542;
                    _4071_recIdents = _out543;
                    readIdents = _4071_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source224 = _4068_nativeToType;
                    if (_source224.is_None) {
                      if (_4065_erase) {
                        r = _4069_recursiveGen;
                      } else {
                        RAST._IType _4072_rhsType;
                        RAST._IType _out544;
                        _out544 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                        _4072_rhsType = _out544;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4072_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4069_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out545;
                      DCOMP._IOwnership _out546;
                      DCOMP.COMP.FromOwnership(r, _4070_recOwned, expectedOwnership, out _out545, out _out546);
                      r = _out545;
                      resultingOwnership = _out546;
                    } else {
                      RAST._IType _4073___mcc_h1462 = _source224.dtor_value;
                      RAST._IType _4074_v = _4073___mcc_h1462;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4069_recursiveGen, RAST.Expr.create_ExprFromType(_4074_v)));
                      RAST._IExpr _out547;
                      DCOMP._IOwnership _out548;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out547, out _out548);
                      r = _out547;
                      resultingOwnership = _out548;
                    }
                  } else {
                    if ((_4068_nativeToType).is_Some) {
                      DAST._IType _source225 = _3712_fromTpe;
                      if (_source225.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4075___mcc_h1463 = _source225.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _4076___mcc_h1464 = _source225.dtor_typeArgs;
                        DAST._IResolvedType _4077___mcc_h1465 = _source225.dtor_resolved;
                        DAST._IResolvedType _source226 = _4077___mcc_h1465;
                        if (_source226.is_AllocatedDatatype) {
                          DAST._IDatatypeType _4078___mcc_h1469 = _source226.dtor_datatypeType;
                        } else if (_source226.is_Datatype) {
                          DAST._IDatatypeType _4079___mcc_h1471 = _source226.dtor_datatypeType;
                        } else if (_source226.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4080___mcc_h1473 = _source226.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _4081___mcc_h1474 = _source226.dtor_attributes;
                        } else {
                          DAST._IType _4082___mcc_h1477 = _source226.dtor_baseType;
                          DAST._INewtypeRange _4083___mcc_h1478 = _source226.dtor_range;
                          bool _4084___mcc_h1479 = _source226.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _4085___mcc_h1480 = _source226.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _4086_attributes0 = _4085___mcc_h1480;
                          bool _4087_erase0 = _4084___mcc_h1479;
                          DAST._INewtypeRange _4088_range0 = _4083___mcc_h1478;
                          DAST._IType _4089_b0 = _4082___mcc_h1477;
                          {
                            Std.Wrappers._IOption<RAST._IType> _4090_nativeFromType;
                            _4090_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4089_b0, _4088_range0);
                            if ((_4090_nativeFromType).is_Some) {
                              RAST._IExpr _4091_recursiveGen;
                              DCOMP._IOwnership _4092_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4093_recIdents;
                              RAST._IExpr _out549;
                              DCOMP._IOwnership _out550;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out551;
                              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out549, out _out550, out _out551);
                              _4091_recursiveGen = _out549;
                              _4092_recOwned = _out550;
                              _4093_recIdents = _out551;
                              RAST._IExpr _out552;
                              DCOMP._IOwnership _out553;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4091_recursiveGen, (_4068_nativeToType).dtor_value), _4092_recOwned, expectedOwnership, out _out552, out _out553);
                              r = _out552;
                              resultingOwnership = _out553;
                              readIdents = _4093_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source225.is_Nullable) {
                        DAST._IType _4094___mcc_h1485 = _source225.dtor_Nullable_a0;
                      } else if (_source225.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _4095___mcc_h1487 = _source225.dtor_Tuple_a0;
                      } else if (_source225.is_Array) {
                        DAST._IType _4096___mcc_h1489 = _source225.dtor_element;
                        BigInteger _4097___mcc_h1490 = _source225.dtor_dims;
                      } else if (_source225.is_Seq) {
                        DAST._IType _4098___mcc_h1493 = _source225.dtor_element;
                      } else if (_source225.is_Set) {
                        DAST._IType _4099___mcc_h1495 = _source225.dtor_element;
                      } else if (_source225.is_Multiset) {
                        DAST._IType _4100___mcc_h1497 = _source225.dtor_element;
                      } else if (_source225.is_Map) {
                        DAST._IType _4101___mcc_h1499 = _source225.dtor_key;
                        DAST._IType _4102___mcc_h1500 = _source225.dtor_value;
                      } else if (_source225.is_SetBuilder) {
                        DAST._IType _4103___mcc_h1503 = _source225.dtor_element;
                      } else if (_source225.is_MapBuilder) {
                        DAST._IType _4104___mcc_h1505 = _source225.dtor_key;
                        DAST._IType _4105___mcc_h1506 = _source225.dtor_value;
                      } else if (_source225.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _4106___mcc_h1509 = _source225.dtor_args;
                        DAST._IType _4107___mcc_h1510 = _source225.dtor_result;
                      } else if (_source225.is_Primitive) {
                        DAST._IPrimitive _4108___mcc_h1513 = _source225.dtor_Primitive_a0;
                      } else if (_source225.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _4109___mcc_h1515 = _source225.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _4110___mcc_h1517 = _source225.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4111_recursiveGen;
                        DCOMP._IOwnership _4112_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4113_recIdents;
                        RAST._IExpr _out554;
                        DCOMP._IOwnership _out555;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out556;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out554, out _out555, out _out556);
                        _4111_recursiveGen = _out554;
                        _4112_recOwned = _out555;
                        _4113_recIdents = _out556;
                        RAST._IExpr _out557;
                        DCOMP._IOwnership _out558;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4111_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4068_nativeToType).dtor_value), _4112_recOwned, expectedOwnership, out _out557, out _out558);
                        r = _out557;
                        resultingOwnership = _out558;
                        readIdents = _4113_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out559;
                    DCOMP._IOwnership _out560;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out561;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4067_b), _4067_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out559, out _out560, out _out561);
                    r = _out559;
                    resultingOwnership = _out560;
                    readIdents = _out561;
                  }
                }
              }
            } else if (_source222.is_Nullable) {
              DAST._IType _4114___mcc_h166 = _source222.dtor_Nullable_a0;
              {
                RAST._IExpr _4115_recursiveGen;
                DCOMP._IOwnership _4116_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4117_recIdents;
                RAST._IExpr _out562;
                DCOMP._IOwnership _out563;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out564;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out562, out _out563, out _out564);
                _4115_recursiveGen = _out562;
                _4116_recOwned = _out563;
                _4117_recIdents = _out564;
                r = _4115_recursiveGen;
                if (object.Equals(_4116_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out565;
                DCOMP._IOwnership _out566;
                DCOMP.COMP.FromOwnership(r, _4116_recOwned, expectedOwnership, out _out565, out _out566);
                r = _out565;
                resultingOwnership = _out566;
                readIdents = _4117_recIdents;
              }
            } else if (_source222.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4118___mcc_h168 = _source222.dtor_Tuple_a0;
              {
                RAST._IType _4119_fromTpeGen;
                RAST._IType _out567;
                _out567 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4119_fromTpeGen = _out567;
                RAST._IType _4120_toTpeGen;
                RAST._IType _out568;
                _out568 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4120_toTpeGen = _out568;
                RAST._IExpr _4121_recursiveGen;
                DCOMP._IOwnership _4122_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4123_recIdents;
                RAST._IExpr _out569;
                DCOMP._IOwnership _out570;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out571;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out569, out _out570, out _out571);
                _4121_recursiveGen = _out569;
                _4122_recOwned = _out570;
                _4123_recIdents = _out571;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4121_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4119_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4120_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out572;
                DCOMP._IOwnership _out573;
                DCOMP.COMP.FromOwnership(r, _4122_recOwned, expectedOwnership, out _out572, out _out573);
                r = _out572;
                resultingOwnership = _out573;
                readIdents = _4123_recIdents;
              }
            } else if (_source222.is_Array) {
              DAST._IType _4124___mcc_h170 = _source222.dtor_element;
              BigInteger _4125___mcc_h171 = _source222.dtor_dims;
              {
                RAST._IType _4126_fromTpeGen;
                RAST._IType _out574;
                _out574 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4126_fromTpeGen = _out574;
                RAST._IType _4127_toTpeGen;
                RAST._IType _out575;
                _out575 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4127_toTpeGen = _out575;
                RAST._IExpr _4128_recursiveGen;
                DCOMP._IOwnership _4129_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4130_recIdents;
                RAST._IExpr _out576;
                DCOMP._IOwnership _out577;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out578;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out576, out _out577, out _out578);
                _4128_recursiveGen = _out576;
                _4129_recOwned = _out577;
                _4130_recIdents = _out578;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4128_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4126_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4127_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out579;
                DCOMP._IOwnership _out580;
                DCOMP.COMP.FromOwnership(r, _4129_recOwned, expectedOwnership, out _out579, out _out580);
                r = _out579;
                resultingOwnership = _out580;
                readIdents = _4130_recIdents;
              }
            } else if (_source222.is_Seq) {
              DAST._IType _4131___mcc_h174 = _source222.dtor_element;
              {
                RAST._IType _4132_fromTpeGen;
                RAST._IType _out581;
                _out581 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4132_fromTpeGen = _out581;
                RAST._IType _4133_toTpeGen;
                RAST._IType _out582;
                _out582 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4133_toTpeGen = _out582;
                RAST._IExpr _4134_recursiveGen;
                DCOMP._IOwnership _4135_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4136_recIdents;
                RAST._IExpr _out583;
                DCOMP._IOwnership _out584;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out585;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out583, out _out584, out _out585);
                _4134_recursiveGen = _out583;
                _4135_recOwned = _out584;
                _4136_recIdents = _out585;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4134_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4132_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4133_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out586;
                DCOMP._IOwnership _out587;
                DCOMP.COMP.FromOwnership(r, _4135_recOwned, expectedOwnership, out _out586, out _out587);
                r = _out586;
                resultingOwnership = _out587;
                readIdents = _4136_recIdents;
              }
            } else if (_source222.is_Set) {
              DAST._IType _4137___mcc_h176 = _source222.dtor_element;
              {
                RAST._IType _4138_fromTpeGen;
                RAST._IType _out588;
                _out588 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4138_fromTpeGen = _out588;
                RAST._IType _4139_toTpeGen;
                RAST._IType _out589;
                _out589 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4139_toTpeGen = _out589;
                RAST._IExpr _4140_recursiveGen;
                DCOMP._IOwnership _4141_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4142_recIdents;
                RAST._IExpr _out590;
                DCOMP._IOwnership _out591;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out592;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out590, out _out591, out _out592);
                _4140_recursiveGen = _out590;
                _4141_recOwned = _out591;
                _4142_recIdents = _out592;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4140_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4138_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4139_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out593;
                DCOMP._IOwnership _out594;
                DCOMP.COMP.FromOwnership(r, _4141_recOwned, expectedOwnership, out _out593, out _out594);
                r = _out593;
                resultingOwnership = _out594;
                readIdents = _4142_recIdents;
              }
            } else if (_source222.is_Multiset) {
              DAST._IType _4143___mcc_h178 = _source222.dtor_element;
              {
                RAST._IType _4144_fromTpeGen;
                RAST._IType _out595;
                _out595 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4144_fromTpeGen = _out595;
                RAST._IType _4145_toTpeGen;
                RAST._IType _out596;
                _out596 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4145_toTpeGen = _out596;
                RAST._IExpr _4146_recursiveGen;
                DCOMP._IOwnership _4147_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4148_recIdents;
                RAST._IExpr _out597;
                DCOMP._IOwnership _out598;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out599;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out597, out _out598, out _out599);
                _4146_recursiveGen = _out597;
                _4147_recOwned = _out598;
                _4148_recIdents = _out599;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4146_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4144_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4145_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out600;
                DCOMP._IOwnership _out601;
                DCOMP.COMP.FromOwnership(r, _4147_recOwned, expectedOwnership, out _out600, out _out601);
                r = _out600;
                resultingOwnership = _out601;
                readIdents = _4148_recIdents;
              }
            } else if (_source222.is_Map) {
              DAST._IType _4149___mcc_h180 = _source222.dtor_key;
              DAST._IType _4150___mcc_h181 = _source222.dtor_value;
              {
                RAST._IType _4151_fromTpeGen;
                RAST._IType _out602;
                _out602 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4151_fromTpeGen = _out602;
                RAST._IType _4152_toTpeGen;
                RAST._IType _out603;
                _out603 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4152_toTpeGen = _out603;
                RAST._IExpr _4153_recursiveGen;
                DCOMP._IOwnership _4154_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4155_recIdents;
                RAST._IExpr _out604;
                DCOMP._IOwnership _out605;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out606;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out604, out _out605, out _out606);
                _4153_recursiveGen = _out604;
                _4154_recOwned = _out605;
                _4155_recIdents = _out606;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4153_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4151_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4152_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out607;
                DCOMP._IOwnership _out608;
                DCOMP.COMP.FromOwnership(r, _4154_recOwned, expectedOwnership, out _out607, out _out608);
                r = _out607;
                resultingOwnership = _out608;
                readIdents = _4155_recIdents;
              }
            } else if (_source222.is_SetBuilder) {
              DAST._IType _4156___mcc_h184 = _source222.dtor_element;
              {
                RAST._IType _4157_fromTpeGen;
                RAST._IType _out609;
                _out609 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4157_fromTpeGen = _out609;
                RAST._IType _4158_toTpeGen;
                RAST._IType _out610;
                _out610 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4158_toTpeGen = _out610;
                RAST._IExpr _4159_recursiveGen;
                DCOMP._IOwnership _4160_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4161_recIdents;
                RAST._IExpr _out611;
                DCOMP._IOwnership _out612;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out613;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out611, out _out612, out _out613);
                _4159_recursiveGen = _out611;
                _4160_recOwned = _out612;
                _4161_recIdents = _out613;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4159_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4157_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4158_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out614;
                DCOMP._IOwnership _out615;
                DCOMP.COMP.FromOwnership(r, _4160_recOwned, expectedOwnership, out _out614, out _out615);
                r = _out614;
                resultingOwnership = _out615;
                readIdents = _4161_recIdents;
              }
            } else if (_source222.is_MapBuilder) {
              DAST._IType _4162___mcc_h186 = _source222.dtor_key;
              DAST._IType _4163___mcc_h187 = _source222.dtor_value;
              {
                RAST._IType _4164_fromTpeGen;
                RAST._IType _out616;
                _out616 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4164_fromTpeGen = _out616;
                RAST._IType _4165_toTpeGen;
                RAST._IType _out617;
                _out617 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4165_toTpeGen = _out617;
                RAST._IExpr _4166_recursiveGen;
                DCOMP._IOwnership _4167_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4168_recIdents;
                RAST._IExpr _out618;
                DCOMP._IOwnership _out619;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out620;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out618, out _out619, out _out620);
                _4166_recursiveGen = _out618;
                _4167_recOwned = _out619;
                _4168_recIdents = _out620;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4166_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4164_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4165_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out621;
                DCOMP._IOwnership _out622;
                DCOMP.COMP.FromOwnership(r, _4167_recOwned, expectedOwnership, out _out621, out _out622);
                r = _out621;
                resultingOwnership = _out622;
                readIdents = _4168_recIdents;
              }
            } else if (_source222.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4169___mcc_h190 = _source222.dtor_args;
              DAST._IType _4170___mcc_h191 = _source222.dtor_result;
              {
                RAST._IType _4171_fromTpeGen;
                RAST._IType _out623;
                _out623 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4171_fromTpeGen = _out623;
                RAST._IType _4172_toTpeGen;
                RAST._IType _out624;
                _out624 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4172_toTpeGen = _out624;
                RAST._IExpr _4173_recursiveGen;
                DCOMP._IOwnership _4174_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4175_recIdents;
                RAST._IExpr _out625;
                DCOMP._IOwnership _out626;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out627;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out625, out _out626, out _out627);
                _4173_recursiveGen = _out625;
                _4174_recOwned = _out626;
                _4175_recIdents = _out627;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4173_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4171_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4172_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out628;
                DCOMP._IOwnership _out629;
                DCOMP.COMP.FromOwnership(r, _4174_recOwned, expectedOwnership, out _out628, out _out629);
                r = _out628;
                resultingOwnership = _out629;
                readIdents = _4175_recIdents;
              }
            } else if (_source222.is_Primitive) {
              DAST._IPrimitive _4176___mcc_h194 = _source222.dtor_Primitive_a0;
              {
                RAST._IType _4177_fromTpeGen;
                RAST._IType _out630;
                _out630 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4177_fromTpeGen = _out630;
                RAST._IType _4178_toTpeGen;
                RAST._IType _out631;
                _out631 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4178_toTpeGen = _out631;
                RAST._IExpr _4179_recursiveGen;
                DCOMP._IOwnership _4180_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4181_recIdents;
                RAST._IExpr _out632;
                DCOMP._IOwnership _out633;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out634;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out632, out _out633, out _out634);
                _4179_recursiveGen = _out632;
                _4180_recOwned = _out633;
                _4181_recIdents = _out634;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4179_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4177_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4178_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out635;
                DCOMP._IOwnership _out636;
                DCOMP.COMP.FromOwnership(r, _4180_recOwned, expectedOwnership, out _out635, out _out636);
                r = _out635;
                resultingOwnership = _out636;
                readIdents = _4181_recIdents;
              }
            } else if (_source222.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4182___mcc_h196 = _source222.dtor_Passthrough_a0;
              {
                RAST._IType _4183_fromTpeGen;
                RAST._IType _out637;
                _out637 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4183_fromTpeGen = _out637;
                RAST._IType _4184_toTpeGen;
                RAST._IType _out638;
                _out638 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4184_toTpeGen = _out638;
                RAST._IExpr _4185_recursiveGen;
                DCOMP._IOwnership _4186_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4187_recIdents;
                RAST._IExpr _out639;
                DCOMP._IOwnership _out640;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out641;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out639, out _out640, out _out641);
                _4185_recursiveGen = _out639;
                _4186_recOwned = _out640;
                _4187_recIdents = _out641;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4185_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4183_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4184_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out642;
                DCOMP._IOwnership _out643;
                DCOMP.COMP.FromOwnership(r, _4186_recOwned, expectedOwnership, out _out642, out _out643);
                r = _out642;
                resultingOwnership = _out643;
                readIdents = _4187_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4188___mcc_h198 = _source222.dtor_TypeArg_a0;
              {
                RAST._IType _4189_fromTpeGen;
                RAST._IType _out644;
                _out644 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4189_fromTpeGen = _out644;
                RAST._IType _4190_toTpeGen;
                RAST._IType _out645;
                _out645 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4190_toTpeGen = _out645;
                RAST._IExpr _4191_recursiveGen;
                DCOMP._IOwnership _4192_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4193_recIdents;
                RAST._IExpr _out646;
                DCOMP._IOwnership _out647;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out648;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out646, out _out647, out _out648);
                _4191_recursiveGen = _out646;
                _4192_recOwned = _out647;
                _4193_recIdents = _out648;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4191_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4189_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4190_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out649;
                DCOMP._IOwnership _out650;
                DCOMP.COMP.FromOwnership(r, _4192_recOwned, expectedOwnership, out _out649, out _out650);
                r = _out649;
                resultingOwnership = _out650;
                readIdents = _4193_recIdents;
              }
            }
          } else {
            DAST._IType _4194___mcc_h200 = _source211.dtor_baseType;
            DAST._INewtypeRange _4195___mcc_h201 = _source211.dtor_range;
            bool _4196___mcc_h202 = _source211.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _4197___mcc_h203 = _source211.dtor_attributes;
            DAST._IType _source227 = _3718___mcc_h1;
            if (_source227.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4198___mcc_h216 = _source227.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _4199___mcc_h217 = _source227.dtor_typeArgs;
              DAST._IResolvedType _4200___mcc_h218 = _source227.dtor_resolved;
              DAST._IResolvedType _source228 = _4200___mcc_h218;
              if (_source228.is_AllocatedDatatype) {
                DAST._IDatatypeType _4201___mcc_h225 = _source228.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _4202_attributes = _4197___mcc_h203;
                bool _4203_erase = _4196___mcc_h202;
                DAST._INewtypeRange _4204_range = _4195___mcc_h201;
                DAST._IType _4205_b = _4194___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _4206_nativeFromType;
                  _4206_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4205_b, _4204_range);
                  if (object.Equals(_4205_b, _3713_toTpe)) {
                    RAST._IExpr _4207_recursiveGen;
                    DCOMP._IOwnership _4208_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4209_recIdents;
                    RAST._IExpr _out651;
                    DCOMP._IOwnership _out652;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out653;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out651, out _out652, out _out653);
                    _4207_recursiveGen = _out651;
                    _4208_recOwned = _out652;
                    _4209_recIdents = _out653;
                    readIdents = _4209_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source229 = _4206_nativeFromType;
                    if (_source229.is_None) {
                      if (_4203_erase) {
                        r = _4207_recursiveGen;
                      } else {
                        r = (_4207_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out654;
                      DCOMP._IOwnership _out655;
                      DCOMP.COMP.FromOwnership(r, _4208_recOwned, expectedOwnership, out _out654, out _out655);
                      r = _out654;
                      resultingOwnership = _out655;
                    } else {
                      RAST._IType _4210___mcc_h1519 = _source229.dtor_value;
                      RAST._IType _4211_v = _4210___mcc_h1519;
                      RAST._IType _4212_toTpeRust;
                      RAST._IType _out656;
                      _out656 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                      _4212_toTpeRust = _out656;
                      r = (((_4207_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4212_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out657;
                      DCOMP._IOwnership _out658;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out657, out _out658);
                      r = _out657;
                      resultingOwnership = _out658;
                    }
                  } else {
                    if ((_4206_nativeFromType).is_Some) {
                      if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4213_recursiveGen;
                        DCOMP._IOwnership _4214_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4215_recIdents;
                        RAST._IExpr _out659;
                        DCOMP._IOwnership _out660;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out661;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out659, out _out660, out _out661);
                        _4213_recursiveGen = _out659;
                        _4214_recOwned = _out660;
                        _4215_recIdents = _out661;
                        RAST._IExpr _out662;
                        DCOMP._IOwnership _out663;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4213_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4214_recOwned, expectedOwnership, out _out662, out _out663);
                        r = _out662;
                        resultingOwnership = _out663;
                        readIdents = _4215_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out664;
                    DCOMP._IOwnership _out665;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out666;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4205_b), _4205_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out664, out _out665, out _out666);
                    r = _out664;
                    resultingOwnership = _out665;
                    readIdents = _out666;
                  }
                }
              } else if (_source228.is_Datatype) {
                DAST._IDatatypeType _4216___mcc_h228 = _source228.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _4217_attributes = _4197___mcc_h203;
                bool _4218_erase = _4196___mcc_h202;
                DAST._INewtypeRange _4219_range = _4195___mcc_h201;
                DAST._IType _4220_b = _4194___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _4221_nativeFromType;
                  _4221_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4220_b, _4219_range);
                  if (object.Equals(_4220_b, _3713_toTpe)) {
                    RAST._IExpr _4222_recursiveGen;
                    DCOMP._IOwnership _4223_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4224_recIdents;
                    RAST._IExpr _out667;
                    DCOMP._IOwnership _out668;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out669;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out667, out _out668, out _out669);
                    _4222_recursiveGen = _out667;
                    _4223_recOwned = _out668;
                    _4224_recIdents = _out669;
                    readIdents = _4224_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source230 = _4221_nativeFromType;
                    if (_source230.is_None) {
                      if (_4218_erase) {
                        r = _4222_recursiveGen;
                      } else {
                        r = (_4222_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out670;
                      DCOMP._IOwnership _out671;
                      DCOMP.COMP.FromOwnership(r, _4223_recOwned, expectedOwnership, out _out670, out _out671);
                      r = _out670;
                      resultingOwnership = _out671;
                    } else {
                      RAST._IType _4225___mcc_h1520 = _source230.dtor_value;
                      RAST._IType _4226_v = _4225___mcc_h1520;
                      RAST._IType _4227_toTpeRust;
                      RAST._IType _out672;
                      _out672 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                      _4227_toTpeRust = _out672;
                      r = (((_4222_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4227_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out673;
                      DCOMP._IOwnership _out674;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out673, out _out674);
                      r = _out673;
                      resultingOwnership = _out674;
                    }
                  } else {
                    if ((_4221_nativeFromType).is_Some) {
                      if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4228_recursiveGen;
                        DCOMP._IOwnership _4229_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4230_recIdents;
                        RAST._IExpr _out675;
                        DCOMP._IOwnership _out676;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out677;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out675, out _out676, out _out677);
                        _4228_recursiveGen = _out675;
                        _4229_recOwned = _out676;
                        _4230_recIdents = _out677;
                        RAST._IExpr _out678;
                        DCOMP._IOwnership _out679;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4228_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4229_recOwned, expectedOwnership, out _out678, out _out679);
                        r = _out678;
                        resultingOwnership = _out679;
                        readIdents = _4230_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out680;
                    DCOMP._IOwnership _out681;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out682;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4220_b), _4220_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out680, out _out681, out _out682);
                    r = _out680;
                    resultingOwnership = _out681;
                    readIdents = _out682;
                  }
                }
              } else if (_source228.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4231___mcc_h231 = _source228.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _4232___mcc_h232 = _source228.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4233_attributes = _4197___mcc_h203;
                bool _4234_erase = _4196___mcc_h202;
                DAST._INewtypeRange _4235_range = _4195___mcc_h201;
                DAST._IType _4236_b = _4194___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _4237_nativeFromType;
                  _4237_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4236_b, _4235_range);
                  if (object.Equals(_4236_b, _3713_toTpe)) {
                    RAST._IExpr _4238_recursiveGen;
                    DCOMP._IOwnership _4239_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4240_recIdents;
                    RAST._IExpr _out683;
                    DCOMP._IOwnership _out684;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out685;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out683, out _out684, out _out685);
                    _4238_recursiveGen = _out683;
                    _4239_recOwned = _out684;
                    _4240_recIdents = _out685;
                    readIdents = _4240_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source231 = _4237_nativeFromType;
                    if (_source231.is_None) {
                      if (_4234_erase) {
                        r = _4238_recursiveGen;
                      } else {
                        r = (_4238_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out686;
                      DCOMP._IOwnership _out687;
                      DCOMP.COMP.FromOwnership(r, _4239_recOwned, expectedOwnership, out _out686, out _out687);
                      r = _out686;
                      resultingOwnership = _out687;
                    } else {
                      RAST._IType _4241___mcc_h1521 = _source231.dtor_value;
                      RAST._IType _4242_v = _4241___mcc_h1521;
                      RAST._IType _4243_toTpeRust;
                      RAST._IType _out688;
                      _out688 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                      _4243_toTpeRust = _out688;
                      r = (((_4238_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4243_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out689;
                      DCOMP._IOwnership _out690;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out689, out _out690);
                      r = _out689;
                      resultingOwnership = _out690;
                    }
                  } else {
                    if ((_4237_nativeFromType).is_Some) {
                      if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4244_recursiveGen;
                        DCOMP._IOwnership _4245_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4246_recIdents;
                        RAST._IExpr _out691;
                        DCOMP._IOwnership _out692;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out693;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out691, out _out692, out _out693);
                        _4244_recursiveGen = _out691;
                        _4245_recOwned = _out692;
                        _4246_recIdents = _out693;
                        RAST._IExpr _out694;
                        DCOMP._IOwnership _out695;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4244_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4245_recOwned, expectedOwnership, out _out694, out _out695);
                        r = _out694;
                        resultingOwnership = _out695;
                        readIdents = _4246_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out696;
                    DCOMP._IOwnership _out697;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out698;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4236_b), _4236_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out696, out _out697, out _out698);
                    r = _out696;
                    resultingOwnership = _out697;
                    readIdents = _out698;
                  }
                }
              } else {
                DAST._IType _4247___mcc_h237 = _source228.dtor_baseType;
                DAST._INewtypeRange _4248___mcc_h238 = _source228.dtor_range;
                bool _4249___mcc_h239 = _source228.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4250___mcc_h240 = _source228.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4251_attributes = _4250___mcc_h240;
                bool _4252_erase = _4249___mcc_h239;
                DAST._INewtypeRange _4253_range = _4248___mcc_h238;
                DAST._IType _4254_b = _4247___mcc_h237;
                {
                  Std.Wrappers._IOption<RAST._IType> _4255_nativeToType;
                  _4255_nativeToType = DCOMP.COMP.NewtypeToRustType(_4254_b, _4253_range);
                  if (object.Equals(_3712_fromTpe, _4254_b)) {
                    RAST._IExpr _4256_recursiveGen;
                    DCOMP._IOwnership _4257_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4258_recIdents;
                    RAST._IExpr _out699;
                    DCOMP._IOwnership _out700;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out701;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out699, out _out700, out _out701);
                    _4256_recursiveGen = _out699;
                    _4257_recOwned = _out700;
                    _4258_recIdents = _out701;
                    readIdents = _4258_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source232 = _4255_nativeToType;
                    if (_source232.is_None) {
                      if (_4252_erase) {
                        r = _4256_recursiveGen;
                      } else {
                        RAST._IType _4259_rhsType;
                        RAST._IType _out702;
                        _out702 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                        _4259_rhsType = _out702;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4259_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4256_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out703;
                      DCOMP._IOwnership _out704;
                      DCOMP.COMP.FromOwnership(r, _4257_recOwned, expectedOwnership, out _out703, out _out704);
                      r = _out703;
                      resultingOwnership = _out704;
                    } else {
                      RAST._IType _4260___mcc_h1522 = _source232.dtor_value;
                      RAST._IType _4261_v = _4260___mcc_h1522;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4256_recursiveGen, RAST.Expr.create_ExprFromType(_4261_v)));
                      RAST._IExpr _out705;
                      DCOMP._IOwnership _out706;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out705, out _out706);
                      r = _out705;
                      resultingOwnership = _out706;
                    }
                  } else {
                    if ((_4255_nativeToType).is_Some) {
                      DAST._IType _source233 = _3712_fromTpe;
                      if (_source233.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4262___mcc_h1523 = _source233.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _4263___mcc_h1524 = _source233.dtor_typeArgs;
                        DAST._IResolvedType _4264___mcc_h1525 = _source233.dtor_resolved;
                        DAST._IResolvedType _source234 = _4264___mcc_h1525;
                        if (_source234.is_AllocatedDatatype) {
                          DAST._IDatatypeType _4265___mcc_h1529 = _source234.dtor_datatypeType;
                        } else if (_source234.is_Datatype) {
                          DAST._IDatatypeType _4266___mcc_h1531 = _source234.dtor_datatypeType;
                        } else if (_source234.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4267___mcc_h1533 = _source234.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _4268___mcc_h1534 = _source234.dtor_attributes;
                        } else {
                          DAST._IType _4269___mcc_h1537 = _source234.dtor_baseType;
                          DAST._INewtypeRange _4270___mcc_h1538 = _source234.dtor_range;
                          bool _4271___mcc_h1539 = _source234.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _4272___mcc_h1540 = _source234.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _4273_attributes0 = _4272___mcc_h1540;
                          bool _4274_erase0 = _4271___mcc_h1539;
                          DAST._INewtypeRange _4275_range0 = _4270___mcc_h1538;
                          DAST._IType _4276_b0 = _4269___mcc_h1537;
                          {
                            Std.Wrappers._IOption<RAST._IType> _4277_nativeFromType;
                            _4277_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4276_b0, _4275_range0);
                            if ((_4277_nativeFromType).is_Some) {
                              RAST._IExpr _4278_recursiveGen;
                              DCOMP._IOwnership _4279_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4280_recIdents;
                              RAST._IExpr _out707;
                              DCOMP._IOwnership _out708;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out709;
                              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out707, out _out708, out _out709);
                              _4278_recursiveGen = _out707;
                              _4279_recOwned = _out708;
                              _4280_recIdents = _out709;
                              RAST._IExpr _out710;
                              DCOMP._IOwnership _out711;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4278_recursiveGen, (_4255_nativeToType).dtor_value), _4279_recOwned, expectedOwnership, out _out710, out _out711);
                              r = _out710;
                              resultingOwnership = _out711;
                              readIdents = _4280_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source233.is_Nullable) {
                        DAST._IType _4281___mcc_h1545 = _source233.dtor_Nullable_a0;
                      } else if (_source233.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _4282___mcc_h1547 = _source233.dtor_Tuple_a0;
                      } else if (_source233.is_Array) {
                        DAST._IType _4283___mcc_h1549 = _source233.dtor_element;
                        BigInteger _4284___mcc_h1550 = _source233.dtor_dims;
                      } else if (_source233.is_Seq) {
                        DAST._IType _4285___mcc_h1553 = _source233.dtor_element;
                      } else if (_source233.is_Set) {
                        DAST._IType _4286___mcc_h1555 = _source233.dtor_element;
                      } else if (_source233.is_Multiset) {
                        DAST._IType _4287___mcc_h1557 = _source233.dtor_element;
                      } else if (_source233.is_Map) {
                        DAST._IType _4288___mcc_h1559 = _source233.dtor_key;
                        DAST._IType _4289___mcc_h1560 = _source233.dtor_value;
                      } else if (_source233.is_SetBuilder) {
                        DAST._IType _4290___mcc_h1563 = _source233.dtor_element;
                      } else if (_source233.is_MapBuilder) {
                        DAST._IType _4291___mcc_h1565 = _source233.dtor_key;
                        DAST._IType _4292___mcc_h1566 = _source233.dtor_value;
                      } else if (_source233.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _4293___mcc_h1569 = _source233.dtor_args;
                        DAST._IType _4294___mcc_h1570 = _source233.dtor_result;
                      } else if (_source233.is_Primitive) {
                        DAST._IPrimitive _4295___mcc_h1573 = _source233.dtor_Primitive_a0;
                      } else if (_source233.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _4296___mcc_h1575 = _source233.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _4297___mcc_h1577 = _source233.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4298_recursiveGen;
                        DCOMP._IOwnership _4299_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4300_recIdents;
                        RAST._IExpr _out712;
                        DCOMP._IOwnership _out713;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out714;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out712, out _out713, out _out714);
                        _4298_recursiveGen = _out712;
                        _4299_recOwned = _out713;
                        _4300_recIdents = _out714;
                        RAST._IExpr _out715;
                        DCOMP._IOwnership _out716;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4298_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4255_nativeToType).dtor_value), _4299_recOwned, expectedOwnership, out _out715, out _out716);
                        r = _out715;
                        resultingOwnership = _out716;
                        readIdents = _4300_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out717;
                    DCOMP._IOwnership _out718;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out719;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4254_b), _4254_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out717, out _out718, out _out719);
                    r = _out717;
                    resultingOwnership = _out718;
                    readIdents = _out719;
                  }
                }
              }
            } else if (_source227.is_Nullable) {
              DAST._IType _4301___mcc_h249 = _source227.dtor_Nullable_a0;
              {
                RAST._IExpr _4302_recursiveGen;
                DCOMP._IOwnership _4303_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4304_recIdents;
                RAST._IExpr _out720;
                DCOMP._IOwnership _out721;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out722;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out720, out _out721, out _out722);
                _4302_recursiveGen = _out720;
                _4303_recOwned = _out721;
                _4304_recIdents = _out722;
                r = _4302_recursiveGen;
                if (object.Equals(_4303_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out723;
                DCOMP._IOwnership _out724;
                DCOMP.COMP.FromOwnership(r, _4303_recOwned, expectedOwnership, out _out723, out _out724);
                r = _out723;
                resultingOwnership = _out724;
                readIdents = _4304_recIdents;
              }
            } else if (_source227.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4305___mcc_h252 = _source227.dtor_Tuple_a0;
              Dafny.ISequence<DAST._IAttribute> _4306_attributes = _4197___mcc_h203;
              bool _4307_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4308_range = _4195___mcc_h201;
              DAST._IType _4309_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4310_nativeFromType;
                _4310_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4309_b, _4308_range);
                if (object.Equals(_4309_b, _3713_toTpe)) {
                  RAST._IExpr _4311_recursiveGen;
                  DCOMP._IOwnership _4312_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4313_recIdents;
                  RAST._IExpr _out725;
                  DCOMP._IOwnership _out726;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out727;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out725, out _out726, out _out727);
                  _4311_recursiveGen = _out725;
                  _4312_recOwned = _out726;
                  _4313_recIdents = _out727;
                  readIdents = _4313_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source235 = _4310_nativeFromType;
                  if (_source235.is_None) {
                    if (_4307_erase) {
                      r = _4311_recursiveGen;
                    } else {
                      r = (_4311_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out728;
                    DCOMP._IOwnership _out729;
                    DCOMP.COMP.FromOwnership(r, _4312_recOwned, expectedOwnership, out _out728, out _out729);
                    r = _out728;
                    resultingOwnership = _out729;
                  } else {
                    RAST._IType _4314___mcc_h1579 = _source235.dtor_value;
                    RAST._IType _4315_v = _4314___mcc_h1579;
                    RAST._IType _4316_toTpeRust;
                    RAST._IType _out730;
                    _out730 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4316_toTpeRust = _out730;
                    r = (((_4311_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4316_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out731;
                    DCOMP._IOwnership _out732;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out731, out _out732);
                    r = _out731;
                    resultingOwnership = _out732;
                  }
                } else {
                  if ((_4310_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4317_recursiveGen;
                      DCOMP._IOwnership _4318_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4319_recIdents;
                      RAST._IExpr _out733;
                      DCOMP._IOwnership _out734;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out735;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out733, out _out734, out _out735);
                      _4317_recursiveGen = _out733;
                      _4318_recOwned = _out734;
                      _4319_recIdents = _out735;
                      RAST._IExpr _out736;
                      DCOMP._IOwnership _out737;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4317_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4318_recOwned, expectedOwnership, out _out736, out _out737);
                      r = _out736;
                      resultingOwnership = _out737;
                      readIdents = _4319_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out738;
                  DCOMP._IOwnership _out739;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out740;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4309_b), _4309_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out738, out _out739, out _out740);
                  r = _out738;
                  resultingOwnership = _out739;
                  readIdents = _out740;
                }
              }
            } else if (_source227.is_Array) {
              DAST._IType _4320___mcc_h255 = _source227.dtor_element;
              BigInteger _4321___mcc_h256 = _source227.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _4322_attributes = _4197___mcc_h203;
              bool _4323_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4324_range = _4195___mcc_h201;
              DAST._IType _4325_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4326_nativeFromType;
                _4326_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4325_b, _4324_range);
                if (object.Equals(_4325_b, _3713_toTpe)) {
                  RAST._IExpr _4327_recursiveGen;
                  DCOMP._IOwnership _4328_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4329_recIdents;
                  RAST._IExpr _out741;
                  DCOMP._IOwnership _out742;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out743;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out741, out _out742, out _out743);
                  _4327_recursiveGen = _out741;
                  _4328_recOwned = _out742;
                  _4329_recIdents = _out743;
                  readIdents = _4329_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source236 = _4326_nativeFromType;
                  if (_source236.is_None) {
                    if (_4323_erase) {
                      r = _4327_recursiveGen;
                    } else {
                      r = (_4327_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out744;
                    DCOMP._IOwnership _out745;
                    DCOMP.COMP.FromOwnership(r, _4328_recOwned, expectedOwnership, out _out744, out _out745);
                    r = _out744;
                    resultingOwnership = _out745;
                  } else {
                    RAST._IType _4330___mcc_h1580 = _source236.dtor_value;
                    RAST._IType _4331_v = _4330___mcc_h1580;
                    RAST._IType _4332_toTpeRust;
                    RAST._IType _out746;
                    _out746 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4332_toTpeRust = _out746;
                    r = (((_4327_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4332_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out747;
                    DCOMP._IOwnership _out748;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out747, out _out748);
                    r = _out747;
                    resultingOwnership = _out748;
                  }
                } else {
                  if ((_4326_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4333_recursiveGen;
                      DCOMP._IOwnership _4334_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4335_recIdents;
                      RAST._IExpr _out749;
                      DCOMP._IOwnership _out750;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out751;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out749, out _out750, out _out751);
                      _4333_recursiveGen = _out749;
                      _4334_recOwned = _out750;
                      _4335_recIdents = _out751;
                      RAST._IExpr _out752;
                      DCOMP._IOwnership _out753;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4333_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4334_recOwned, expectedOwnership, out _out752, out _out753);
                      r = _out752;
                      resultingOwnership = _out753;
                      readIdents = _4335_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out754;
                  DCOMP._IOwnership _out755;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out756;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4325_b), _4325_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out754, out _out755, out _out756);
                  r = _out754;
                  resultingOwnership = _out755;
                  readIdents = _out756;
                }
              }
            } else if (_source227.is_Seq) {
              DAST._IType _4336___mcc_h261 = _source227.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4337_attributes = _4197___mcc_h203;
              bool _4338_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4339_range = _4195___mcc_h201;
              DAST._IType _4340_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4341_nativeFromType;
                _4341_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4340_b, _4339_range);
                if (object.Equals(_4340_b, _3713_toTpe)) {
                  RAST._IExpr _4342_recursiveGen;
                  DCOMP._IOwnership _4343_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4344_recIdents;
                  RAST._IExpr _out757;
                  DCOMP._IOwnership _out758;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out759;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out757, out _out758, out _out759);
                  _4342_recursiveGen = _out757;
                  _4343_recOwned = _out758;
                  _4344_recIdents = _out759;
                  readIdents = _4344_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source237 = _4341_nativeFromType;
                  if (_source237.is_None) {
                    if (_4338_erase) {
                      r = _4342_recursiveGen;
                    } else {
                      r = (_4342_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out760;
                    DCOMP._IOwnership _out761;
                    DCOMP.COMP.FromOwnership(r, _4343_recOwned, expectedOwnership, out _out760, out _out761);
                    r = _out760;
                    resultingOwnership = _out761;
                  } else {
                    RAST._IType _4345___mcc_h1581 = _source237.dtor_value;
                    RAST._IType _4346_v = _4345___mcc_h1581;
                    RAST._IType _4347_toTpeRust;
                    RAST._IType _out762;
                    _out762 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4347_toTpeRust = _out762;
                    r = (((_4342_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4347_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out763;
                    DCOMP._IOwnership _out764;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out763, out _out764);
                    r = _out763;
                    resultingOwnership = _out764;
                  }
                } else {
                  if ((_4341_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4348_recursiveGen;
                      DCOMP._IOwnership _4349_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4350_recIdents;
                      RAST._IExpr _out765;
                      DCOMP._IOwnership _out766;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out767;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out765, out _out766, out _out767);
                      _4348_recursiveGen = _out765;
                      _4349_recOwned = _out766;
                      _4350_recIdents = _out767;
                      RAST._IExpr _out768;
                      DCOMP._IOwnership _out769;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4348_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4349_recOwned, expectedOwnership, out _out768, out _out769);
                      r = _out768;
                      resultingOwnership = _out769;
                      readIdents = _4350_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out770;
                  DCOMP._IOwnership _out771;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out772;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4340_b), _4340_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out770, out _out771, out _out772);
                  r = _out770;
                  resultingOwnership = _out771;
                  readIdents = _out772;
                }
              }
            } else if (_source227.is_Set) {
              DAST._IType _4351___mcc_h264 = _source227.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4352_attributes = _4197___mcc_h203;
              bool _4353_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4354_range = _4195___mcc_h201;
              DAST._IType _4355_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4356_nativeFromType;
                _4356_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4355_b, _4354_range);
                if (object.Equals(_4355_b, _3713_toTpe)) {
                  RAST._IExpr _4357_recursiveGen;
                  DCOMP._IOwnership _4358_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4359_recIdents;
                  RAST._IExpr _out773;
                  DCOMP._IOwnership _out774;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out775;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out773, out _out774, out _out775);
                  _4357_recursiveGen = _out773;
                  _4358_recOwned = _out774;
                  _4359_recIdents = _out775;
                  readIdents = _4359_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source238 = _4356_nativeFromType;
                  if (_source238.is_None) {
                    if (_4353_erase) {
                      r = _4357_recursiveGen;
                    } else {
                      r = (_4357_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out776;
                    DCOMP._IOwnership _out777;
                    DCOMP.COMP.FromOwnership(r, _4358_recOwned, expectedOwnership, out _out776, out _out777);
                    r = _out776;
                    resultingOwnership = _out777;
                  } else {
                    RAST._IType _4360___mcc_h1582 = _source238.dtor_value;
                    RAST._IType _4361_v = _4360___mcc_h1582;
                    RAST._IType _4362_toTpeRust;
                    RAST._IType _out778;
                    _out778 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4362_toTpeRust = _out778;
                    r = (((_4357_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4362_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out779;
                    DCOMP._IOwnership _out780;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out779, out _out780);
                    r = _out779;
                    resultingOwnership = _out780;
                  }
                } else {
                  if ((_4356_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4363_recursiveGen;
                      DCOMP._IOwnership _4364_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4365_recIdents;
                      RAST._IExpr _out781;
                      DCOMP._IOwnership _out782;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out783;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out781, out _out782, out _out783);
                      _4363_recursiveGen = _out781;
                      _4364_recOwned = _out782;
                      _4365_recIdents = _out783;
                      RAST._IExpr _out784;
                      DCOMP._IOwnership _out785;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4363_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4364_recOwned, expectedOwnership, out _out784, out _out785);
                      r = _out784;
                      resultingOwnership = _out785;
                      readIdents = _4365_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out786;
                  DCOMP._IOwnership _out787;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out788;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4355_b), _4355_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out786, out _out787, out _out788);
                  r = _out786;
                  resultingOwnership = _out787;
                  readIdents = _out788;
                }
              }
            } else if (_source227.is_Multiset) {
              DAST._IType _4366___mcc_h267 = _source227.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4367_attributes = _4197___mcc_h203;
              bool _4368_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4369_range = _4195___mcc_h201;
              DAST._IType _4370_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4371_nativeFromType;
                _4371_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4370_b, _4369_range);
                if (object.Equals(_4370_b, _3713_toTpe)) {
                  RAST._IExpr _4372_recursiveGen;
                  DCOMP._IOwnership _4373_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4374_recIdents;
                  RAST._IExpr _out789;
                  DCOMP._IOwnership _out790;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out791;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out789, out _out790, out _out791);
                  _4372_recursiveGen = _out789;
                  _4373_recOwned = _out790;
                  _4374_recIdents = _out791;
                  readIdents = _4374_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source239 = _4371_nativeFromType;
                  if (_source239.is_None) {
                    if (_4368_erase) {
                      r = _4372_recursiveGen;
                    } else {
                      r = (_4372_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out792;
                    DCOMP._IOwnership _out793;
                    DCOMP.COMP.FromOwnership(r, _4373_recOwned, expectedOwnership, out _out792, out _out793);
                    r = _out792;
                    resultingOwnership = _out793;
                  } else {
                    RAST._IType _4375___mcc_h1583 = _source239.dtor_value;
                    RAST._IType _4376_v = _4375___mcc_h1583;
                    RAST._IType _4377_toTpeRust;
                    RAST._IType _out794;
                    _out794 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4377_toTpeRust = _out794;
                    r = (((_4372_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4377_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out795;
                    DCOMP._IOwnership _out796;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out795, out _out796);
                    r = _out795;
                    resultingOwnership = _out796;
                  }
                } else {
                  if ((_4371_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4378_recursiveGen;
                      DCOMP._IOwnership _4379_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4380_recIdents;
                      RAST._IExpr _out797;
                      DCOMP._IOwnership _out798;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out799;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out797, out _out798, out _out799);
                      _4378_recursiveGen = _out797;
                      _4379_recOwned = _out798;
                      _4380_recIdents = _out799;
                      RAST._IExpr _out800;
                      DCOMP._IOwnership _out801;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4378_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4379_recOwned, expectedOwnership, out _out800, out _out801);
                      r = _out800;
                      resultingOwnership = _out801;
                      readIdents = _4380_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out802;
                  DCOMP._IOwnership _out803;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out804;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4370_b), _4370_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out802, out _out803, out _out804);
                  r = _out802;
                  resultingOwnership = _out803;
                  readIdents = _out804;
                }
              }
            } else if (_source227.is_Map) {
              DAST._IType _4381___mcc_h270 = _source227.dtor_key;
              DAST._IType _4382___mcc_h271 = _source227.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4383_attributes = _4197___mcc_h203;
              bool _4384_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4385_range = _4195___mcc_h201;
              DAST._IType _4386_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4387_nativeFromType;
                _4387_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4386_b, _4385_range);
                if (object.Equals(_4386_b, _3713_toTpe)) {
                  RAST._IExpr _4388_recursiveGen;
                  DCOMP._IOwnership _4389_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4390_recIdents;
                  RAST._IExpr _out805;
                  DCOMP._IOwnership _out806;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out807;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out805, out _out806, out _out807);
                  _4388_recursiveGen = _out805;
                  _4389_recOwned = _out806;
                  _4390_recIdents = _out807;
                  readIdents = _4390_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source240 = _4387_nativeFromType;
                  if (_source240.is_None) {
                    if (_4384_erase) {
                      r = _4388_recursiveGen;
                    } else {
                      r = (_4388_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out808;
                    DCOMP._IOwnership _out809;
                    DCOMP.COMP.FromOwnership(r, _4389_recOwned, expectedOwnership, out _out808, out _out809);
                    r = _out808;
                    resultingOwnership = _out809;
                  } else {
                    RAST._IType _4391___mcc_h1584 = _source240.dtor_value;
                    RAST._IType _4392_v = _4391___mcc_h1584;
                    RAST._IType _4393_toTpeRust;
                    RAST._IType _out810;
                    _out810 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4393_toTpeRust = _out810;
                    r = (((_4388_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4393_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out811;
                    DCOMP._IOwnership _out812;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out811, out _out812);
                    r = _out811;
                    resultingOwnership = _out812;
                  }
                } else {
                  if ((_4387_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4394_recursiveGen;
                      DCOMP._IOwnership _4395_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4396_recIdents;
                      RAST._IExpr _out813;
                      DCOMP._IOwnership _out814;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out815;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out813, out _out814, out _out815);
                      _4394_recursiveGen = _out813;
                      _4395_recOwned = _out814;
                      _4396_recIdents = _out815;
                      RAST._IExpr _out816;
                      DCOMP._IOwnership _out817;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4394_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4395_recOwned, expectedOwnership, out _out816, out _out817);
                      r = _out816;
                      resultingOwnership = _out817;
                      readIdents = _4396_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out818;
                  DCOMP._IOwnership _out819;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out820;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4386_b), _4386_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out818, out _out819, out _out820);
                  r = _out818;
                  resultingOwnership = _out819;
                  readIdents = _out820;
                }
              }
            } else if (_source227.is_SetBuilder) {
              DAST._IType _4397___mcc_h276 = _source227.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4398_attributes = _4197___mcc_h203;
              bool _4399_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4400_range = _4195___mcc_h201;
              DAST._IType _4401_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4402_nativeFromType;
                _4402_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4401_b, _4400_range);
                if (object.Equals(_4401_b, _3713_toTpe)) {
                  RAST._IExpr _4403_recursiveGen;
                  DCOMP._IOwnership _4404_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4405_recIdents;
                  RAST._IExpr _out821;
                  DCOMP._IOwnership _out822;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out823;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out821, out _out822, out _out823);
                  _4403_recursiveGen = _out821;
                  _4404_recOwned = _out822;
                  _4405_recIdents = _out823;
                  readIdents = _4405_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source241 = _4402_nativeFromType;
                  if (_source241.is_None) {
                    if (_4399_erase) {
                      r = _4403_recursiveGen;
                    } else {
                      r = (_4403_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out824;
                    DCOMP._IOwnership _out825;
                    DCOMP.COMP.FromOwnership(r, _4404_recOwned, expectedOwnership, out _out824, out _out825);
                    r = _out824;
                    resultingOwnership = _out825;
                  } else {
                    RAST._IType _4406___mcc_h1585 = _source241.dtor_value;
                    RAST._IType _4407_v = _4406___mcc_h1585;
                    RAST._IType _4408_toTpeRust;
                    RAST._IType _out826;
                    _out826 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4408_toTpeRust = _out826;
                    r = (((_4403_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4408_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out827;
                    DCOMP._IOwnership _out828;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out827, out _out828);
                    r = _out827;
                    resultingOwnership = _out828;
                  }
                } else {
                  if ((_4402_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4409_recursiveGen;
                      DCOMP._IOwnership _4410_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4411_recIdents;
                      RAST._IExpr _out829;
                      DCOMP._IOwnership _out830;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out831;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out829, out _out830, out _out831);
                      _4409_recursiveGen = _out829;
                      _4410_recOwned = _out830;
                      _4411_recIdents = _out831;
                      RAST._IExpr _out832;
                      DCOMP._IOwnership _out833;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4409_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4410_recOwned, expectedOwnership, out _out832, out _out833);
                      r = _out832;
                      resultingOwnership = _out833;
                      readIdents = _4411_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out834;
                  DCOMP._IOwnership _out835;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out836;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4401_b), _4401_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out834, out _out835, out _out836);
                  r = _out834;
                  resultingOwnership = _out835;
                  readIdents = _out836;
                }
              }
            } else if (_source227.is_MapBuilder) {
              DAST._IType _4412___mcc_h279 = _source227.dtor_key;
              DAST._IType _4413___mcc_h280 = _source227.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4414_attributes = _4197___mcc_h203;
              bool _4415_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4416_range = _4195___mcc_h201;
              DAST._IType _4417_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4418_nativeFromType;
                _4418_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4417_b, _4416_range);
                if (object.Equals(_4417_b, _3713_toTpe)) {
                  RAST._IExpr _4419_recursiveGen;
                  DCOMP._IOwnership _4420_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4421_recIdents;
                  RAST._IExpr _out837;
                  DCOMP._IOwnership _out838;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out839;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out837, out _out838, out _out839);
                  _4419_recursiveGen = _out837;
                  _4420_recOwned = _out838;
                  _4421_recIdents = _out839;
                  readIdents = _4421_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source242 = _4418_nativeFromType;
                  if (_source242.is_None) {
                    if (_4415_erase) {
                      r = _4419_recursiveGen;
                    } else {
                      r = (_4419_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out840;
                    DCOMP._IOwnership _out841;
                    DCOMP.COMP.FromOwnership(r, _4420_recOwned, expectedOwnership, out _out840, out _out841);
                    r = _out840;
                    resultingOwnership = _out841;
                  } else {
                    RAST._IType _4422___mcc_h1586 = _source242.dtor_value;
                    RAST._IType _4423_v = _4422___mcc_h1586;
                    RAST._IType _4424_toTpeRust;
                    RAST._IType _out842;
                    _out842 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4424_toTpeRust = _out842;
                    r = (((_4419_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4424_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out843;
                    DCOMP._IOwnership _out844;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out843, out _out844);
                    r = _out843;
                    resultingOwnership = _out844;
                  }
                } else {
                  if ((_4418_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4425_recursiveGen;
                      DCOMP._IOwnership _4426_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4427_recIdents;
                      RAST._IExpr _out845;
                      DCOMP._IOwnership _out846;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out847;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out845, out _out846, out _out847);
                      _4425_recursiveGen = _out845;
                      _4426_recOwned = _out846;
                      _4427_recIdents = _out847;
                      RAST._IExpr _out848;
                      DCOMP._IOwnership _out849;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4425_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4426_recOwned, expectedOwnership, out _out848, out _out849);
                      r = _out848;
                      resultingOwnership = _out849;
                      readIdents = _4427_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out850;
                  DCOMP._IOwnership _out851;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out852;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4417_b), _4417_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out850, out _out851, out _out852);
                  r = _out850;
                  resultingOwnership = _out851;
                  readIdents = _out852;
                }
              }
            } else if (_source227.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4428___mcc_h285 = _source227.dtor_args;
              DAST._IType _4429___mcc_h286 = _source227.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _4430_attributes = _4197___mcc_h203;
              bool _4431_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4432_range = _4195___mcc_h201;
              DAST._IType _4433_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4434_nativeFromType;
                _4434_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4433_b, _4432_range);
                if (object.Equals(_4433_b, _3713_toTpe)) {
                  RAST._IExpr _4435_recursiveGen;
                  DCOMP._IOwnership _4436_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4437_recIdents;
                  RAST._IExpr _out853;
                  DCOMP._IOwnership _out854;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out855;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out853, out _out854, out _out855);
                  _4435_recursiveGen = _out853;
                  _4436_recOwned = _out854;
                  _4437_recIdents = _out855;
                  readIdents = _4437_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source243 = _4434_nativeFromType;
                  if (_source243.is_None) {
                    if (_4431_erase) {
                      r = _4435_recursiveGen;
                    } else {
                      r = (_4435_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out856;
                    DCOMP._IOwnership _out857;
                    DCOMP.COMP.FromOwnership(r, _4436_recOwned, expectedOwnership, out _out856, out _out857);
                    r = _out856;
                    resultingOwnership = _out857;
                  } else {
                    RAST._IType _4438___mcc_h1587 = _source243.dtor_value;
                    RAST._IType _4439_v = _4438___mcc_h1587;
                    RAST._IType _4440_toTpeRust;
                    RAST._IType _out858;
                    _out858 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4440_toTpeRust = _out858;
                    r = (((_4435_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4440_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out859;
                    DCOMP._IOwnership _out860;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out859, out _out860);
                    r = _out859;
                    resultingOwnership = _out860;
                  }
                } else {
                  if ((_4434_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4441_recursiveGen;
                      DCOMP._IOwnership _4442_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4443_recIdents;
                      RAST._IExpr _out861;
                      DCOMP._IOwnership _out862;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out863;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out861, out _out862, out _out863);
                      _4441_recursiveGen = _out861;
                      _4442_recOwned = _out862;
                      _4443_recIdents = _out863;
                      RAST._IExpr _out864;
                      DCOMP._IOwnership _out865;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4441_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4442_recOwned, expectedOwnership, out _out864, out _out865);
                      r = _out864;
                      resultingOwnership = _out865;
                      readIdents = _4443_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out866;
                  DCOMP._IOwnership _out867;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out868;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4433_b), _4433_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out866, out _out867, out _out868);
                  r = _out866;
                  resultingOwnership = _out867;
                  readIdents = _out868;
                }
              }
            } else if (_source227.is_Primitive) {
              DAST._IPrimitive _4444___mcc_h291 = _source227.dtor_Primitive_a0;
              Dafny.ISequence<DAST._IAttribute> _4445_attributes = _4197___mcc_h203;
              bool _4446_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4447_range = _4195___mcc_h201;
              DAST._IType _4448_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4449_nativeFromType;
                _4449_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4448_b, _4447_range);
                if (object.Equals(_4448_b, _3713_toTpe)) {
                  RAST._IExpr _4450_recursiveGen;
                  DCOMP._IOwnership _4451_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4452_recIdents;
                  RAST._IExpr _out869;
                  DCOMP._IOwnership _out870;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out871;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out869, out _out870, out _out871);
                  _4450_recursiveGen = _out869;
                  _4451_recOwned = _out870;
                  _4452_recIdents = _out871;
                  readIdents = _4452_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source244 = _4449_nativeFromType;
                  if (_source244.is_None) {
                    if (_4446_erase) {
                      r = _4450_recursiveGen;
                    } else {
                      r = (_4450_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out872;
                    DCOMP._IOwnership _out873;
                    DCOMP.COMP.FromOwnership(r, _4451_recOwned, expectedOwnership, out _out872, out _out873);
                    r = _out872;
                    resultingOwnership = _out873;
                  } else {
                    RAST._IType _4453___mcc_h1588 = _source244.dtor_value;
                    RAST._IType _4454_v = _4453___mcc_h1588;
                    RAST._IType _4455_toTpeRust;
                    RAST._IType _out874;
                    _out874 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4455_toTpeRust = _out874;
                    r = (((_4450_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4455_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out875;
                    DCOMP._IOwnership _out876;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out875, out _out876);
                    r = _out875;
                    resultingOwnership = _out876;
                  }
                } else {
                  if ((_4449_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4456_recursiveGen;
                      DCOMP._IOwnership _4457_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4458_recIdents;
                      RAST._IExpr _out877;
                      DCOMP._IOwnership _out878;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out879;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out877, out _out878, out _out879);
                      _4456_recursiveGen = _out877;
                      _4457_recOwned = _out878;
                      _4458_recIdents = _out879;
                      RAST._IExpr _out880;
                      DCOMP._IOwnership _out881;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4456_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4457_recOwned, expectedOwnership, out _out880, out _out881);
                      r = _out880;
                      resultingOwnership = _out881;
                      readIdents = _4458_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out882;
                  DCOMP._IOwnership _out883;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out884;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4448_b), _4448_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out882, out _out883, out _out884);
                  r = _out882;
                  resultingOwnership = _out883;
                  readIdents = _out884;
                }
              }
            } else if (_source227.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4459___mcc_h294 = _source227.dtor_Passthrough_a0;
              Dafny.ISequence<DAST._IAttribute> _4460_attributes = _4197___mcc_h203;
              bool _4461_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4462_range = _4195___mcc_h201;
              DAST._IType _4463_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4464_nativeFromType;
                _4464_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4463_b, _4462_range);
                if (object.Equals(_4463_b, _3713_toTpe)) {
                  RAST._IExpr _4465_recursiveGen;
                  DCOMP._IOwnership _4466_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4467_recIdents;
                  RAST._IExpr _out885;
                  DCOMP._IOwnership _out886;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out887;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out885, out _out886, out _out887);
                  _4465_recursiveGen = _out885;
                  _4466_recOwned = _out886;
                  _4467_recIdents = _out887;
                  readIdents = _4467_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source245 = _4464_nativeFromType;
                  if (_source245.is_None) {
                    if (_4461_erase) {
                      r = _4465_recursiveGen;
                    } else {
                      r = (_4465_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out888;
                    DCOMP._IOwnership _out889;
                    DCOMP.COMP.FromOwnership(r, _4466_recOwned, expectedOwnership, out _out888, out _out889);
                    r = _out888;
                    resultingOwnership = _out889;
                  } else {
                    RAST._IType _4468___mcc_h1589 = _source245.dtor_value;
                    RAST._IType _4469_v = _4468___mcc_h1589;
                    RAST._IType _4470_toTpeRust;
                    RAST._IType _out890;
                    _out890 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4470_toTpeRust = _out890;
                    r = (((_4465_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4470_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out891;
                    DCOMP._IOwnership _out892;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out891, out _out892);
                    r = _out891;
                    resultingOwnership = _out892;
                  }
                } else {
                  if ((_4464_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4471_recursiveGen;
                      DCOMP._IOwnership _4472_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4473_recIdents;
                      RAST._IExpr _out893;
                      DCOMP._IOwnership _out894;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out895;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out893, out _out894, out _out895);
                      _4471_recursiveGen = _out893;
                      _4472_recOwned = _out894;
                      _4473_recIdents = _out895;
                      RAST._IExpr _out896;
                      DCOMP._IOwnership _out897;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4471_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4472_recOwned, expectedOwnership, out _out896, out _out897);
                      r = _out896;
                      resultingOwnership = _out897;
                      readIdents = _4473_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out898;
                  DCOMP._IOwnership _out899;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out900;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4463_b), _4463_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out898, out _out899, out _out900);
                  r = _out898;
                  resultingOwnership = _out899;
                  readIdents = _out900;
                }
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4474___mcc_h297 = _source227.dtor_TypeArg_a0;
              Dafny.ISequence<DAST._IAttribute> _4475_attributes = _4197___mcc_h203;
              bool _4476_erase = _4196___mcc_h202;
              DAST._INewtypeRange _4477_range = _4195___mcc_h201;
              DAST._IType _4478_b = _4194___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4479_nativeFromType;
                _4479_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4478_b, _4477_range);
                if (object.Equals(_4478_b, _3713_toTpe)) {
                  RAST._IExpr _4480_recursiveGen;
                  DCOMP._IOwnership _4481_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4482_recIdents;
                  RAST._IExpr _out901;
                  DCOMP._IOwnership _out902;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out903;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out901, out _out902, out _out903);
                  _4480_recursiveGen = _out901;
                  _4481_recOwned = _out902;
                  _4482_recIdents = _out903;
                  readIdents = _4482_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source246 = _4479_nativeFromType;
                  if (_source246.is_None) {
                    if (_4476_erase) {
                      r = _4480_recursiveGen;
                    } else {
                      r = (_4480_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out904;
                    DCOMP._IOwnership _out905;
                    DCOMP.COMP.FromOwnership(r, _4481_recOwned, expectedOwnership, out _out904, out _out905);
                    r = _out904;
                    resultingOwnership = _out905;
                  } else {
                    RAST._IType _4483___mcc_h1590 = _source246.dtor_value;
                    RAST._IType _4484_v = _4483___mcc_h1590;
                    RAST._IType _4485_toTpeRust;
                    RAST._IType _out906;
                    _out906 = DCOMP.COMP.GenType(_3713_toTpe, false, false);
                    _4485_toTpeRust = _out906;
                    r = (((_4480_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4485_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out907;
                    DCOMP._IOwnership _out908;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out907, out _out908);
                    r = _out907;
                    resultingOwnership = _out908;
                  }
                } else {
                  if ((_4479_nativeFromType).is_Some) {
                    if (object.Equals(_3713_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4486_recursiveGen;
                      DCOMP._IOwnership _4487_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4488_recIdents;
                      RAST._IExpr _out909;
                      DCOMP._IOwnership _out910;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out911;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out909, out _out910, out _out911);
                      _4486_recursiveGen = _out909;
                      _4487_recOwned = _out910;
                      _4488_recIdents = _out911;
                      RAST._IExpr _out912;
                      DCOMP._IOwnership _out913;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4486_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4487_recOwned, expectedOwnership, out _out912, out _out913);
                      r = _out912;
                      resultingOwnership = _out913;
                      readIdents = _4488_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out914;
                  DCOMP._IOwnership _out915;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out916;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4478_b), _4478_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out914, out _out915, out _out916);
                  r = _out914;
                  resultingOwnership = _out915;
                  readIdents = _out916;
                }
              }
            }
          }
        } else if (_source210.is_Nullable) {
          DAST._IType _4489___mcc_h300 = _source210.dtor_Nullable_a0;
          DAST._IType _source247 = _3718___mcc_h1;
          if (_source247.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4490___mcc_h304 = _source247.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4491___mcc_h305 = _source247.dtor_typeArgs;
            DAST._IResolvedType _4492___mcc_h306 = _source247.dtor_resolved;
            DAST._IResolvedType _source248 = _4492___mcc_h306;
            if (_source248.is_AllocatedDatatype) {
              DAST._IDatatypeType _4493___mcc_h313 = _source248.dtor_datatypeType;
              {
                RAST._IExpr _4494_recursiveGen;
                DCOMP._IOwnership _4495_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4496_recIdents;
                RAST._IExpr _out917;
                DCOMP._IOwnership _out918;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out919;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out917, out _out918, out _out919);
                _4494_recursiveGen = _out917;
                _4495_recOwned = _out918;
                _4496_recIdents = _out919;
                r = _4494_recursiveGen;
                if (object.Equals(_4495_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out920;
                DCOMP._IOwnership _out921;
                DCOMP.COMP.FromOwnership(r, _4495_recOwned, expectedOwnership, out _out920, out _out921);
                r = _out920;
                resultingOwnership = _out921;
                readIdents = _4496_recIdents;
              }
            } else if (_source248.is_Datatype) {
              DAST._IDatatypeType _4497___mcc_h316 = _source248.dtor_datatypeType;
              {
                RAST._IExpr _4498_recursiveGen;
                DCOMP._IOwnership _4499_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4500_recIdents;
                RAST._IExpr _out922;
                DCOMP._IOwnership _out923;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out924;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out922, out _out923, out _out924);
                _4498_recursiveGen = _out922;
                _4499_recOwned = _out923;
                _4500_recIdents = _out924;
                r = _4498_recursiveGen;
                if (object.Equals(_4499_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out925;
                DCOMP._IOwnership _out926;
                DCOMP.COMP.FromOwnership(r, _4499_recOwned, expectedOwnership, out _out925, out _out926);
                r = _out925;
                resultingOwnership = _out926;
                readIdents = _4500_recIdents;
              }
            } else if (_source248.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4501___mcc_h319 = _source248.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4502___mcc_h320 = _source248.dtor_attributes;
              {
                RAST._IExpr _4503_recursiveGen;
                DCOMP._IOwnership _4504_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4505_recIdents;
                RAST._IExpr _out927;
                DCOMP._IOwnership _out928;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out929;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out927, out _out928, out _out929);
                _4503_recursiveGen = _out927;
                _4504_recOwned = _out928;
                _4505_recIdents = _out929;
                r = _4503_recursiveGen;
                if (object.Equals(_4504_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out930;
                DCOMP._IOwnership _out931;
                DCOMP.COMP.FromOwnership(r, _4504_recOwned, expectedOwnership, out _out930, out _out931);
                r = _out930;
                resultingOwnership = _out931;
                readIdents = _4505_recIdents;
              }
            } else {
              DAST._IType _4506___mcc_h325 = _source248.dtor_baseType;
              DAST._INewtypeRange _4507___mcc_h326 = _source248.dtor_range;
              bool _4508___mcc_h327 = _source248.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4509___mcc_h328 = _source248.dtor_attributes;
              {
                RAST._IExpr _4510_recursiveGen;
                DCOMP._IOwnership _4511_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4512_recIdents;
                RAST._IExpr _out932;
                DCOMP._IOwnership _out933;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out934;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out932, out _out933, out _out934);
                _4510_recursiveGen = _out932;
                _4511_recOwned = _out933;
                _4512_recIdents = _out934;
                r = _4510_recursiveGen;
                if (object.Equals(_4511_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out935;
                DCOMP._IOwnership _out936;
                DCOMP.COMP.FromOwnership(r, _4511_recOwned, expectedOwnership, out _out935, out _out936);
                r = _out935;
                resultingOwnership = _out936;
                readIdents = _4512_recIdents;
              }
            }
          } else if (_source247.is_Nullable) {
            DAST._IType _4513___mcc_h337 = _source247.dtor_Nullable_a0;
            {
              RAST._IExpr _4514_recursiveGen;
              DCOMP._IOwnership _4515_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4516_recIdents;
              RAST._IExpr _out937;
              DCOMP._IOwnership _out938;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out939;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out937, out _out938, out _out939);
              _4514_recursiveGen = _out937;
              _4515_recOwned = _out938;
              _4516_recIdents = _out939;
              r = _4514_recursiveGen;
              if (object.Equals(_4515_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out940;
              DCOMP._IOwnership _out941;
              DCOMP.COMP.FromOwnership(r, _4515_recOwned, expectedOwnership, out _out940, out _out941);
              r = _out940;
              resultingOwnership = _out941;
              readIdents = _4516_recIdents;
            }
          } else if (_source247.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4517___mcc_h340 = _source247.dtor_Tuple_a0;
            {
              RAST._IExpr _4518_recursiveGen;
              DCOMP._IOwnership _4519_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4520_recIdents;
              RAST._IExpr _out942;
              DCOMP._IOwnership _out943;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out944;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out942, out _out943, out _out944);
              _4518_recursiveGen = _out942;
              _4519_recOwned = _out943;
              _4520_recIdents = _out944;
              r = _4518_recursiveGen;
              if (object.Equals(_4519_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out945;
              DCOMP._IOwnership _out946;
              DCOMP.COMP.FromOwnership(r, _4519_recOwned, expectedOwnership, out _out945, out _out946);
              r = _out945;
              resultingOwnership = _out946;
              readIdents = _4520_recIdents;
            }
          } else if (_source247.is_Array) {
            DAST._IType _4521___mcc_h343 = _source247.dtor_element;
            BigInteger _4522___mcc_h344 = _source247.dtor_dims;
            {
              RAST._IExpr _4523_recursiveGen;
              DCOMP._IOwnership _4524_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4525_recIdents;
              RAST._IExpr _out947;
              DCOMP._IOwnership _out948;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out949;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out947, out _out948, out _out949);
              _4523_recursiveGen = _out947;
              _4524_recOwned = _out948;
              _4525_recIdents = _out949;
              r = _4523_recursiveGen;
              if (object.Equals(_4524_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out950;
              DCOMP._IOwnership _out951;
              DCOMP.COMP.FromOwnership(r, _4524_recOwned, expectedOwnership, out _out950, out _out951);
              r = _out950;
              resultingOwnership = _out951;
              readIdents = _4525_recIdents;
            }
          } else if (_source247.is_Seq) {
            DAST._IType _4526___mcc_h349 = _source247.dtor_element;
            {
              RAST._IExpr _4527_recursiveGen;
              DCOMP._IOwnership _4528_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4529_recIdents;
              RAST._IExpr _out952;
              DCOMP._IOwnership _out953;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out954;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out952, out _out953, out _out954);
              _4527_recursiveGen = _out952;
              _4528_recOwned = _out953;
              _4529_recIdents = _out954;
              r = _4527_recursiveGen;
              if (object.Equals(_4528_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out955;
              DCOMP._IOwnership _out956;
              DCOMP.COMP.FromOwnership(r, _4528_recOwned, expectedOwnership, out _out955, out _out956);
              r = _out955;
              resultingOwnership = _out956;
              readIdents = _4529_recIdents;
            }
          } else if (_source247.is_Set) {
            DAST._IType _4530___mcc_h352 = _source247.dtor_element;
            {
              RAST._IExpr _4531_recursiveGen;
              DCOMP._IOwnership _4532_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4533_recIdents;
              RAST._IExpr _out957;
              DCOMP._IOwnership _out958;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out959;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out957, out _out958, out _out959);
              _4531_recursiveGen = _out957;
              _4532_recOwned = _out958;
              _4533_recIdents = _out959;
              r = _4531_recursiveGen;
              if (object.Equals(_4532_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out960;
              DCOMP._IOwnership _out961;
              DCOMP.COMP.FromOwnership(r, _4532_recOwned, expectedOwnership, out _out960, out _out961);
              r = _out960;
              resultingOwnership = _out961;
              readIdents = _4533_recIdents;
            }
          } else if (_source247.is_Multiset) {
            DAST._IType _4534___mcc_h355 = _source247.dtor_element;
            {
              RAST._IExpr _4535_recursiveGen;
              DCOMP._IOwnership _4536_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4537_recIdents;
              RAST._IExpr _out962;
              DCOMP._IOwnership _out963;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out964;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out962, out _out963, out _out964);
              _4535_recursiveGen = _out962;
              _4536_recOwned = _out963;
              _4537_recIdents = _out964;
              r = _4535_recursiveGen;
              if (object.Equals(_4536_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out965;
              DCOMP._IOwnership _out966;
              DCOMP.COMP.FromOwnership(r, _4536_recOwned, expectedOwnership, out _out965, out _out966);
              r = _out965;
              resultingOwnership = _out966;
              readIdents = _4537_recIdents;
            }
          } else if (_source247.is_Map) {
            DAST._IType _4538___mcc_h358 = _source247.dtor_key;
            DAST._IType _4539___mcc_h359 = _source247.dtor_value;
            {
              RAST._IExpr _4540_recursiveGen;
              DCOMP._IOwnership _4541_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4542_recIdents;
              RAST._IExpr _out967;
              DCOMP._IOwnership _out968;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out969;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out967, out _out968, out _out969);
              _4540_recursiveGen = _out967;
              _4541_recOwned = _out968;
              _4542_recIdents = _out969;
              r = _4540_recursiveGen;
              if (object.Equals(_4541_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out970;
              DCOMP._IOwnership _out971;
              DCOMP.COMP.FromOwnership(r, _4541_recOwned, expectedOwnership, out _out970, out _out971);
              r = _out970;
              resultingOwnership = _out971;
              readIdents = _4542_recIdents;
            }
          } else if (_source247.is_SetBuilder) {
            DAST._IType _4543___mcc_h364 = _source247.dtor_element;
            {
              RAST._IExpr _4544_recursiveGen;
              DCOMP._IOwnership _4545_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4546_recIdents;
              RAST._IExpr _out972;
              DCOMP._IOwnership _out973;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out974;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out972, out _out973, out _out974);
              _4544_recursiveGen = _out972;
              _4545_recOwned = _out973;
              _4546_recIdents = _out974;
              r = _4544_recursiveGen;
              if (object.Equals(_4545_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out975;
              DCOMP._IOwnership _out976;
              DCOMP.COMP.FromOwnership(r, _4545_recOwned, expectedOwnership, out _out975, out _out976);
              r = _out975;
              resultingOwnership = _out976;
              readIdents = _4546_recIdents;
            }
          } else if (_source247.is_MapBuilder) {
            DAST._IType _4547___mcc_h367 = _source247.dtor_key;
            DAST._IType _4548___mcc_h368 = _source247.dtor_value;
            {
              RAST._IExpr _4549_recursiveGen;
              DCOMP._IOwnership _4550_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4551_recIdents;
              RAST._IExpr _out977;
              DCOMP._IOwnership _out978;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out979;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out977, out _out978, out _out979);
              _4549_recursiveGen = _out977;
              _4550_recOwned = _out978;
              _4551_recIdents = _out979;
              r = _4549_recursiveGen;
              if (object.Equals(_4550_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out980;
              DCOMP._IOwnership _out981;
              DCOMP.COMP.FromOwnership(r, _4550_recOwned, expectedOwnership, out _out980, out _out981);
              r = _out980;
              resultingOwnership = _out981;
              readIdents = _4551_recIdents;
            }
          } else if (_source247.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4552___mcc_h373 = _source247.dtor_args;
            DAST._IType _4553___mcc_h374 = _source247.dtor_result;
            {
              RAST._IExpr _4554_recursiveGen;
              DCOMP._IOwnership _4555_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4556_recIdents;
              RAST._IExpr _out982;
              DCOMP._IOwnership _out983;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out984;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out982, out _out983, out _out984);
              _4554_recursiveGen = _out982;
              _4555_recOwned = _out983;
              _4556_recIdents = _out984;
              r = _4554_recursiveGen;
              if (object.Equals(_4555_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out985;
              DCOMP._IOwnership _out986;
              DCOMP.COMP.FromOwnership(r, _4555_recOwned, expectedOwnership, out _out985, out _out986);
              r = _out985;
              resultingOwnership = _out986;
              readIdents = _4556_recIdents;
            }
          } else if (_source247.is_Primitive) {
            DAST._IPrimitive _4557___mcc_h379 = _source247.dtor_Primitive_a0;
            {
              RAST._IExpr _4558_recursiveGen;
              DCOMP._IOwnership _4559_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4560_recIdents;
              RAST._IExpr _out987;
              DCOMP._IOwnership _out988;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out989;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out987, out _out988, out _out989);
              _4558_recursiveGen = _out987;
              _4559_recOwned = _out988;
              _4560_recIdents = _out989;
              r = _4558_recursiveGen;
              if (object.Equals(_4559_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out990;
              DCOMP._IOwnership _out991;
              DCOMP.COMP.FromOwnership(r, _4559_recOwned, expectedOwnership, out _out990, out _out991);
              r = _out990;
              resultingOwnership = _out991;
              readIdents = _4560_recIdents;
            }
          } else if (_source247.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4561___mcc_h382 = _source247.dtor_Passthrough_a0;
            {
              RAST._IExpr _4562_recursiveGen;
              DCOMP._IOwnership _4563_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4564_recIdents;
              RAST._IExpr _out992;
              DCOMP._IOwnership _out993;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out994;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out992, out _out993, out _out994);
              _4562_recursiveGen = _out992;
              _4563_recOwned = _out993;
              _4564_recIdents = _out994;
              r = _4562_recursiveGen;
              if (object.Equals(_4563_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out995;
              DCOMP._IOwnership _out996;
              DCOMP.COMP.FromOwnership(r, _4563_recOwned, expectedOwnership, out _out995, out _out996);
              r = _out995;
              resultingOwnership = _out996;
              readIdents = _4564_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4565___mcc_h385 = _source247.dtor_TypeArg_a0;
            {
              RAST._IExpr _4566_recursiveGen;
              DCOMP._IOwnership _4567_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4568_recIdents;
              RAST._IExpr _out997;
              DCOMP._IOwnership _out998;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out999;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out997, out _out998, out _out999);
              _4566_recursiveGen = _out997;
              _4567_recOwned = _out998;
              _4568_recIdents = _out999;
              r = _4566_recursiveGen;
              if (object.Equals(_4567_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out1000;
              DCOMP._IOwnership _out1001;
              DCOMP.COMP.FromOwnership(r, _4567_recOwned, expectedOwnership, out _out1000, out _out1001);
              r = _out1000;
              resultingOwnership = _out1001;
              readIdents = _4568_recIdents;
            }
          }
        } else if (_source210.is_Tuple) {
          Dafny.ISequence<DAST._IType> _4569___mcc_h388 = _source210.dtor_Tuple_a0;
          DAST._IType _source249 = _3718___mcc_h1;
          if (_source249.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4570___mcc_h392 = _source249.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4571___mcc_h393 = _source249.dtor_typeArgs;
            DAST._IResolvedType _4572___mcc_h394 = _source249.dtor_resolved;
            DAST._IResolvedType _source250 = _4572___mcc_h394;
            if (_source250.is_AllocatedDatatype) {
              DAST._IDatatypeType _4573___mcc_h398 = _source250.dtor_datatypeType;
              {
                RAST._IType _4574_fromTpeGen;
                RAST._IType _out1002;
                _out1002 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4574_fromTpeGen = _out1002;
                RAST._IType _4575_toTpeGen;
                RAST._IType _out1003;
                _out1003 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4575_toTpeGen = _out1003;
                RAST._IExpr _4576_recursiveGen;
                DCOMP._IOwnership _4577_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4578_recIdents;
                RAST._IExpr _out1004;
                DCOMP._IOwnership _out1005;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1006;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1004, out _out1005, out _out1006);
                _4576_recursiveGen = _out1004;
                _4577_recOwned = _out1005;
                _4578_recIdents = _out1006;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4576_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4574_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4575_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1007;
                DCOMP._IOwnership _out1008;
                DCOMP.COMP.FromOwnership(r, _4577_recOwned, expectedOwnership, out _out1007, out _out1008);
                r = _out1007;
                resultingOwnership = _out1008;
                readIdents = _4578_recIdents;
              }
            } else if (_source250.is_Datatype) {
              DAST._IDatatypeType _4579___mcc_h400 = _source250.dtor_datatypeType;
              {
                RAST._IType _4580_fromTpeGen;
                RAST._IType _out1009;
                _out1009 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4580_fromTpeGen = _out1009;
                RAST._IType _4581_toTpeGen;
                RAST._IType _out1010;
                _out1010 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4581_toTpeGen = _out1010;
                RAST._IExpr _4582_recursiveGen;
                DCOMP._IOwnership _4583_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4584_recIdents;
                RAST._IExpr _out1011;
                DCOMP._IOwnership _out1012;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1013;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1011, out _out1012, out _out1013);
                _4582_recursiveGen = _out1011;
                _4583_recOwned = _out1012;
                _4584_recIdents = _out1013;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4582_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4580_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4581_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1014;
                DCOMP._IOwnership _out1015;
                DCOMP.COMP.FromOwnership(r, _4583_recOwned, expectedOwnership, out _out1014, out _out1015);
                r = _out1014;
                resultingOwnership = _out1015;
                readIdents = _4584_recIdents;
              }
            } else if (_source250.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4585___mcc_h402 = _source250.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4586___mcc_h403 = _source250.dtor_attributes;
              {
                RAST._IType _4587_fromTpeGen;
                RAST._IType _out1016;
                _out1016 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4587_fromTpeGen = _out1016;
                RAST._IType _4588_toTpeGen;
                RAST._IType _out1017;
                _out1017 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4588_toTpeGen = _out1017;
                RAST._IExpr _4589_recursiveGen;
                DCOMP._IOwnership _4590_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4591_recIdents;
                RAST._IExpr _out1018;
                DCOMP._IOwnership _out1019;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1020;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1018, out _out1019, out _out1020);
                _4589_recursiveGen = _out1018;
                _4590_recOwned = _out1019;
                _4591_recIdents = _out1020;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4589_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4587_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4588_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1021;
                DCOMP._IOwnership _out1022;
                DCOMP.COMP.FromOwnership(r, _4590_recOwned, expectedOwnership, out _out1021, out _out1022);
                r = _out1021;
                resultingOwnership = _out1022;
                readIdents = _4591_recIdents;
              }
            } else {
              DAST._IType _4592___mcc_h406 = _source250.dtor_baseType;
              DAST._INewtypeRange _4593___mcc_h407 = _source250.dtor_range;
              bool _4594___mcc_h408 = _source250.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4595___mcc_h409 = _source250.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4596_attributes = _4595___mcc_h409;
              bool _4597_erase = _4594___mcc_h408;
              DAST._INewtypeRange _4598_range = _4593___mcc_h407;
              DAST._IType _4599_b = _4592___mcc_h406;
              {
                Std.Wrappers._IOption<RAST._IType> _4600_nativeToType;
                _4600_nativeToType = DCOMP.COMP.NewtypeToRustType(_4599_b, _4598_range);
                if (object.Equals(_3712_fromTpe, _4599_b)) {
                  RAST._IExpr _4601_recursiveGen;
                  DCOMP._IOwnership _4602_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4603_recIdents;
                  RAST._IExpr _out1023;
                  DCOMP._IOwnership _out1024;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1025;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1023, out _out1024, out _out1025);
                  _4601_recursiveGen = _out1023;
                  _4602_recOwned = _out1024;
                  _4603_recIdents = _out1025;
                  readIdents = _4603_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source251 = _4600_nativeToType;
                  if (_source251.is_None) {
                    if (_4597_erase) {
                      r = _4601_recursiveGen;
                    } else {
                      RAST._IType _4604_rhsType;
                      RAST._IType _out1026;
                      _out1026 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _4604_rhsType = _out1026;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4604_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4601_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1027;
                    DCOMP._IOwnership _out1028;
                    DCOMP.COMP.FromOwnership(r, _4602_recOwned, expectedOwnership, out _out1027, out _out1028);
                    r = _out1027;
                    resultingOwnership = _out1028;
                  } else {
                    RAST._IType _4605___mcc_h1591 = _source251.dtor_value;
                    RAST._IType _4606_v = _4605___mcc_h1591;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4601_recursiveGen, RAST.Expr.create_ExprFromType(_4606_v)));
                    RAST._IExpr _out1029;
                    DCOMP._IOwnership _out1030;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1029, out _out1030);
                    r = _out1029;
                    resultingOwnership = _out1030;
                  }
                } else {
                  if ((_4600_nativeToType).is_Some) {
                    DAST._IType _source252 = _3712_fromTpe;
                    if (_source252.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4607___mcc_h1592 = _source252.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4608___mcc_h1593 = _source252.dtor_typeArgs;
                      DAST._IResolvedType _4609___mcc_h1594 = _source252.dtor_resolved;
                      DAST._IResolvedType _source253 = _4609___mcc_h1594;
                      if (_source253.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4610___mcc_h1598 = _source253.dtor_datatypeType;
                      } else if (_source253.is_Datatype) {
                        DAST._IDatatypeType _4611___mcc_h1600 = _source253.dtor_datatypeType;
                      } else if (_source253.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4612___mcc_h1602 = _source253.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4613___mcc_h1603 = _source253.dtor_attributes;
                      } else {
                        DAST._IType _4614___mcc_h1606 = _source253.dtor_baseType;
                        DAST._INewtypeRange _4615___mcc_h1607 = _source253.dtor_range;
                        bool _4616___mcc_h1608 = _source253.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4617___mcc_h1609 = _source253.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4618_attributes0 = _4617___mcc_h1609;
                        bool _4619_erase0 = _4616___mcc_h1608;
                        DAST._INewtypeRange _4620_range0 = _4615___mcc_h1607;
                        DAST._IType _4621_b0 = _4614___mcc_h1606;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4622_nativeFromType;
                          _4622_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4621_b0, _4620_range0);
                          if ((_4622_nativeFromType).is_Some) {
                            RAST._IExpr _4623_recursiveGen;
                            DCOMP._IOwnership _4624_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4625_recIdents;
                            RAST._IExpr _out1031;
                            DCOMP._IOwnership _out1032;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1033;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1031, out _out1032, out _out1033);
                            _4623_recursiveGen = _out1031;
                            _4624_recOwned = _out1032;
                            _4625_recIdents = _out1033;
                            RAST._IExpr _out1034;
                            DCOMP._IOwnership _out1035;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4623_recursiveGen, (_4600_nativeToType).dtor_value), _4624_recOwned, expectedOwnership, out _out1034, out _out1035);
                            r = _out1034;
                            resultingOwnership = _out1035;
                            readIdents = _4625_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source252.is_Nullable) {
                      DAST._IType _4626___mcc_h1614 = _source252.dtor_Nullable_a0;
                    } else if (_source252.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4627___mcc_h1616 = _source252.dtor_Tuple_a0;
                    } else if (_source252.is_Array) {
                      DAST._IType _4628___mcc_h1618 = _source252.dtor_element;
                      BigInteger _4629___mcc_h1619 = _source252.dtor_dims;
                    } else if (_source252.is_Seq) {
                      DAST._IType _4630___mcc_h1622 = _source252.dtor_element;
                    } else if (_source252.is_Set) {
                      DAST._IType _4631___mcc_h1624 = _source252.dtor_element;
                    } else if (_source252.is_Multiset) {
                      DAST._IType _4632___mcc_h1626 = _source252.dtor_element;
                    } else if (_source252.is_Map) {
                      DAST._IType _4633___mcc_h1628 = _source252.dtor_key;
                      DAST._IType _4634___mcc_h1629 = _source252.dtor_value;
                    } else if (_source252.is_SetBuilder) {
                      DAST._IType _4635___mcc_h1632 = _source252.dtor_element;
                    } else if (_source252.is_MapBuilder) {
                      DAST._IType _4636___mcc_h1634 = _source252.dtor_key;
                      DAST._IType _4637___mcc_h1635 = _source252.dtor_value;
                    } else if (_source252.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4638___mcc_h1638 = _source252.dtor_args;
                      DAST._IType _4639___mcc_h1639 = _source252.dtor_result;
                    } else if (_source252.is_Primitive) {
                      DAST._IPrimitive _4640___mcc_h1642 = _source252.dtor_Primitive_a0;
                    } else if (_source252.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4641___mcc_h1644 = _source252.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4642___mcc_h1646 = _source252.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4643_recursiveGen;
                      DCOMP._IOwnership _4644_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4645_recIdents;
                      RAST._IExpr _out1036;
                      DCOMP._IOwnership _out1037;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1038;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1036, out _out1037, out _out1038);
                      _4643_recursiveGen = _out1036;
                      _4644_recOwned = _out1037;
                      _4645_recIdents = _out1038;
                      RAST._IExpr _out1039;
                      DCOMP._IOwnership _out1040;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4643_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4600_nativeToType).dtor_value), _4644_recOwned, expectedOwnership, out _out1039, out _out1040);
                      r = _out1039;
                      resultingOwnership = _out1040;
                      readIdents = _4645_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1041;
                  DCOMP._IOwnership _out1042;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1043;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4599_b), _4599_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out1041, out _out1042, out _out1043);
                  r = _out1041;
                  resultingOwnership = _out1042;
                  readIdents = _out1043;
                }
              }
            }
          } else if (_source249.is_Nullable) {
            DAST._IType _4646___mcc_h414 = _source249.dtor_Nullable_a0;
            {
              RAST._IExpr _4647_recursiveGen;
              DCOMP._IOwnership _4648_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4649_recIdents;
              RAST._IExpr _out1044;
              DCOMP._IOwnership _out1045;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1046;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1044, out _out1045, out _out1046);
              _4647_recursiveGen = _out1044;
              _4648_recOwned = _out1045;
              _4649_recIdents = _out1046;
              r = _4647_recursiveGen;
              if (object.Equals(_4648_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1047;
              DCOMP._IOwnership _out1048;
              DCOMP.COMP.FromOwnership(r, _4648_recOwned, expectedOwnership, out _out1047, out _out1048);
              r = _out1047;
              resultingOwnership = _out1048;
              readIdents = _4649_recIdents;
            }
          } else if (_source249.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4650___mcc_h416 = _source249.dtor_Tuple_a0;
            {
              RAST._IType _4651_fromTpeGen;
              RAST._IType _out1049;
              _out1049 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4651_fromTpeGen = _out1049;
              RAST._IType _4652_toTpeGen;
              RAST._IType _out1050;
              _out1050 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4652_toTpeGen = _out1050;
              RAST._IExpr _4653_recursiveGen;
              DCOMP._IOwnership _4654_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4655_recIdents;
              RAST._IExpr _out1051;
              DCOMP._IOwnership _out1052;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1053;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1051, out _out1052, out _out1053);
              _4653_recursiveGen = _out1051;
              _4654_recOwned = _out1052;
              _4655_recIdents = _out1053;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4653_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4651_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4652_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1054;
              DCOMP._IOwnership _out1055;
              DCOMP.COMP.FromOwnership(r, _4654_recOwned, expectedOwnership, out _out1054, out _out1055);
              r = _out1054;
              resultingOwnership = _out1055;
              readIdents = _4655_recIdents;
            }
          } else if (_source249.is_Array) {
            DAST._IType _4656___mcc_h418 = _source249.dtor_element;
            BigInteger _4657___mcc_h419 = _source249.dtor_dims;
            {
              RAST._IType _4658_fromTpeGen;
              RAST._IType _out1056;
              _out1056 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4658_fromTpeGen = _out1056;
              RAST._IType _4659_toTpeGen;
              RAST._IType _out1057;
              _out1057 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4659_toTpeGen = _out1057;
              RAST._IExpr _4660_recursiveGen;
              DCOMP._IOwnership _4661_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4662_recIdents;
              RAST._IExpr _out1058;
              DCOMP._IOwnership _out1059;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1060;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1058, out _out1059, out _out1060);
              _4660_recursiveGen = _out1058;
              _4661_recOwned = _out1059;
              _4662_recIdents = _out1060;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4660_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4658_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4659_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1061;
              DCOMP._IOwnership _out1062;
              DCOMP.COMP.FromOwnership(r, _4661_recOwned, expectedOwnership, out _out1061, out _out1062);
              r = _out1061;
              resultingOwnership = _out1062;
              readIdents = _4662_recIdents;
            }
          } else if (_source249.is_Seq) {
            DAST._IType _4663___mcc_h422 = _source249.dtor_element;
            {
              RAST._IType _4664_fromTpeGen;
              RAST._IType _out1063;
              _out1063 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4664_fromTpeGen = _out1063;
              RAST._IType _4665_toTpeGen;
              RAST._IType _out1064;
              _out1064 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4665_toTpeGen = _out1064;
              RAST._IExpr _4666_recursiveGen;
              DCOMP._IOwnership _4667_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4668_recIdents;
              RAST._IExpr _out1065;
              DCOMP._IOwnership _out1066;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1067;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1065, out _out1066, out _out1067);
              _4666_recursiveGen = _out1065;
              _4667_recOwned = _out1066;
              _4668_recIdents = _out1067;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4666_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4664_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4665_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1068;
              DCOMP._IOwnership _out1069;
              DCOMP.COMP.FromOwnership(r, _4667_recOwned, expectedOwnership, out _out1068, out _out1069);
              r = _out1068;
              resultingOwnership = _out1069;
              readIdents = _4668_recIdents;
            }
          } else if (_source249.is_Set) {
            DAST._IType _4669___mcc_h424 = _source249.dtor_element;
            {
              RAST._IType _4670_fromTpeGen;
              RAST._IType _out1070;
              _out1070 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4670_fromTpeGen = _out1070;
              RAST._IType _4671_toTpeGen;
              RAST._IType _out1071;
              _out1071 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4671_toTpeGen = _out1071;
              RAST._IExpr _4672_recursiveGen;
              DCOMP._IOwnership _4673_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4674_recIdents;
              RAST._IExpr _out1072;
              DCOMP._IOwnership _out1073;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1074;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1072, out _out1073, out _out1074);
              _4672_recursiveGen = _out1072;
              _4673_recOwned = _out1073;
              _4674_recIdents = _out1074;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4672_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4670_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4671_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1075;
              DCOMP._IOwnership _out1076;
              DCOMP.COMP.FromOwnership(r, _4673_recOwned, expectedOwnership, out _out1075, out _out1076);
              r = _out1075;
              resultingOwnership = _out1076;
              readIdents = _4674_recIdents;
            }
          } else if (_source249.is_Multiset) {
            DAST._IType _4675___mcc_h426 = _source249.dtor_element;
            {
              RAST._IType _4676_fromTpeGen;
              RAST._IType _out1077;
              _out1077 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4676_fromTpeGen = _out1077;
              RAST._IType _4677_toTpeGen;
              RAST._IType _out1078;
              _out1078 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4677_toTpeGen = _out1078;
              RAST._IExpr _4678_recursiveGen;
              DCOMP._IOwnership _4679_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4680_recIdents;
              RAST._IExpr _out1079;
              DCOMP._IOwnership _out1080;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1081;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1079, out _out1080, out _out1081);
              _4678_recursiveGen = _out1079;
              _4679_recOwned = _out1080;
              _4680_recIdents = _out1081;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4678_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4676_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4677_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1082;
              DCOMP._IOwnership _out1083;
              DCOMP.COMP.FromOwnership(r, _4679_recOwned, expectedOwnership, out _out1082, out _out1083);
              r = _out1082;
              resultingOwnership = _out1083;
              readIdents = _4680_recIdents;
            }
          } else if (_source249.is_Map) {
            DAST._IType _4681___mcc_h428 = _source249.dtor_key;
            DAST._IType _4682___mcc_h429 = _source249.dtor_value;
            {
              RAST._IType _4683_fromTpeGen;
              RAST._IType _out1084;
              _out1084 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4683_fromTpeGen = _out1084;
              RAST._IType _4684_toTpeGen;
              RAST._IType _out1085;
              _out1085 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4684_toTpeGen = _out1085;
              RAST._IExpr _4685_recursiveGen;
              DCOMP._IOwnership _4686_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4687_recIdents;
              RAST._IExpr _out1086;
              DCOMP._IOwnership _out1087;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1088;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1086, out _out1087, out _out1088);
              _4685_recursiveGen = _out1086;
              _4686_recOwned = _out1087;
              _4687_recIdents = _out1088;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4685_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4683_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4684_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1089;
              DCOMP._IOwnership _out1090;
              DCOMP.COMP.FromOwnership(r, _4686_recOwned, expectedOwnership, out _out1089, out _out1090);
              r = _out1089;
              resultingOwnership = _out1090;
              readIdents = _4687_recIdents;
            }
          } else if (_source249.is_SetBuilder) {
            DAST._IType _4688___mcc_h432 = _source249.dtor_element;
            {
              RAST._IType _4689_fromTpeGen;
              RAST._IType _out1091;
              _out1091 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4689_fromTpeGen = _out1091;
              RAST._IType _4690_toTpeGen;
              RAST._IType _out1092;
              _out1092 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4690_toTpeGen = _out1092;
              RAST._IExpr _4691_recursiveGen;
              DCOMP._IOwnership _4692_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4693_recIdents;
              RAST._IExpr _out1093;
              DCOMP._IOwnership _out1094;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1095;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1093, out _out1094, out _out1095);
              _4691_recursiveGen = _out1093;
              _4692_recOwned = _out1094;
              _4693_recIdents = _out1095;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4691_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4689_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4690_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1096;
              DCOMP._IOwnership _out1097;
              DCOMP.COMP.FromOwnership(r, _4692_recOwned, expectedOwnership, out _out1096, out _out1097);
              r = _out1096;
              resultingOwnership = _out1097;
              readIdents = _4693_recIdents;
            }
          } else if (_source249.is_MapBuilder) {
            DAST._IType _4694___mcc_h434 = _source249.dtor_key;
            DAST._IType _4695___mcc_h435 = _source249.dtor_value;
            {
              RAST._IType _4696_fromTpeGen;
              RAST._IType _out1098;
              _out1098 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4696_fromTpeGen = _out1098;
              RAST._IType _4697_toTpeGen;
              RAST._IType _out1099;
              _out1099 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4697_toTpeGen = _out1099;
              RAST._IExpr _4698_recursiveGen;
              DCOMP._IOwnership _4699_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4700_recIdents;
              RAST._IExpr _out1100;
              DCOMP._IOwnership _out1101;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1102;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1100, out _out1101, out _out1102);
              _4698_recursiveGen = _out1100;
              _4699_recOwned = _out1101;
              _4700_recIdents = _out1102;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4698_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4696_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4697_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1103;
              DCOMP._IOwnership _out1104;
              DCOMP.COMP.FromOwnership(r, _4699_recOwned, expectedOwnership, out _out1103, out _out1104);
              r = _out1103;
              resultingOwnership = _out1104;
              readIdents = _4700_recIdents;
            }
          } else if (_source249.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4701___mcc_h438 = _source249.dtor_args;
            DAST._IType _4702___mcc_h439 = _source249.dtor_result;
            {
              RAST._IType _4703_fromTpeGen;
              RAST._IType _out1105;
              _out1105 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4703_fromTpeGen = _out1105;
              RAST._IType _4704_toTpeGen;
              RAST._IType _out1106;
              _out1106 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4704_toTpeGen = _out1106;
              RAST._IExpr _4705_recursiveGen;
              DCOMP._IOwnership _4706_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4707_recIdents;
              RAST._IExpr _out1107;
              DCOMP._IOwnership _out1108;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1109;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1107, out _out1108, out _out1109);
              _4705_recursiveGen = _out1107;
              _4706_recOwned = _out1108;
              _4707_recIdents = _out1109;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4705_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4703_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4704_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1110;
              DCOMP._IOwnership _out1111;
              DCOMP.COMP.FromOwnership(r, _4706_recOwned, expectedOwnership, out _out1110, out _out1111);
              r = _out1110;
              resultingOwnership = _out1111;
              readIdents = _4707_recIdents;
            }
          } else if (_source249.is_Primitive) {
            DAST._IPrimitive _4708___mcc_h442 = _source249.dtor_Primitive_a0;
            {
              RAST._IType _4709_fromTpeGen;
              RAST._IType _out1112;
              _out1112 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4709_fromTpeGen = _out1112;
              RAST._IType _4710_toTpeGen;
              RAST._IType _out1113;
              _out1113 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4710_toTpeGen = _out1113;
              RAST._IExpr _4711_recursiveGen;
              DCOMP._IOwnership _4712_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4713_recIdents;
              RAST._IExpr _out1114;
              DCOMP._IOwnership _out1115;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1116;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1114, out _out1115, out _out1116);
              _4711_recursiveGen = _out1114;
              _4712_recOwned = _out1115;
              _4713_recIdents = _out1116;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4711_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4709_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4710_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1117;
              DCOMP._IOwnership _out1118;
              DCOMP.COMP.FromOwnership(r, _4712_recOwned, expectedOwnership, out _out1117, out _out1118);
              r = _out1117;
              resultingOwnership = _out1118;
              readIdents = _4713_recIdents;
            }
          } else if (_source249.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4714___mcc_h444 = _source249.dtor_Passthrough_a0;
            {
              RAST._IType _4715_fromTpeGen;
              RAST._IType _out1119;
              _out1119 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4715_fromTpeGen = _out1119;
              RAST._IType _4716_toTpeGen;
              RAST._IType _out1120;
              _out1120 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4716_toTpeGen = _out1120;
              RAST._IExpr _4717_recursiveGen;
              DCOMP._IOwnership _4718_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4719_recIdents;
              RAST._IExpr _out1121;
              DCOMP._IOwnership _out1122;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1123;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1121, out _out1122, out _out1123);
              _4717_recursiveGen = _out1121;
              _4718_recOwned = _out1122;
              _4719_recIdents = _out1123;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4717_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4715_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4716_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1124;
              DCOMP._IOwnership _out1125;
              DCOMP.COMP.FromOwnership(r, _4718_recOwned, expectedOwnership, out _out1124, out _out1125);
              r = _out1124;
              resultingOwnership = _out1125;
              readIdents = _4719_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4720___mcc_h446 = _source249.dtor_TypeArg_a0;
            {
              RAST._IType _4721_fromTpeGen;
              RAST._IType _out1126;
              _out1126 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4721_fromTpeGen = _out1126;
              RAST._IType _4722_toTpeGen;
              RAST._IType _out1127;
              _out1127 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4722_toTpeGen = _out1127;
              RAST._IExpr _4723_recursiveGen;
              DCOMP._IOwnership _4724_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4725_recIdents;
              RAST._IExpr _out1128;
              DCOMP._IOwnership _out1129;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1130;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1128, out _out1129, out _out1130);
              _4723_recursiveGen = _out1128;
              _4724_recOwned = _out1129;
              _4725_recIdents = _out1130;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4723_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4721_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4722_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1131;
              DCOMP._IOwnership _out1132;
              DCOMP.COMP.FromOwnership(r, _4724_recOwned, expectedOwnership, out _out1131, out _out1132);
              r = _out1131;
              resultingOwnership = _out1132;
              readIdents = _4725_recIdents;
            }
          }
        } else if (_source210.is_Array) {
          DAST._IType _4726___mcc_h448 = _source210.dtor_element;
          BigInteger _4727___mcc_h449 = _source210.dtor_dims;
          DAST._IType _source254 = _3718___mcc_h1;
          if (_source254.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4728___mcc_h456 = _source254.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4729___mcc_h457 = _source254.dtor_typeArgs;
            DAST._IResolvedType _4730___mcc_h458 = _source254.dtor_resolved;
            DAST._IResolvedType _source255 = _4730___mcc_h458;
            if (_source255.is_AllocatedDatatype) {
              DAST._IDatatypeType _4731___mcc_h462 = _source255.dtor_datatypeType;
              {
                RAST._IType _4732_fromTpeGen;
                RAST._IType _out1133;
                _out1133 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4732_fromTpeGen = _out1133;
                RAST._IType _4733_toTpeGen;
                RAST._IType _out1134;
                _out1134 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4733_toTpeGen = _out1134;
                RAST._IExpr _4734_recursiveGen;
                DCOMP._IOwnership _4735_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4736_recIdents;
                RAST._IExpr _out1135;
                DCOMP._IOwnership _out1136;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1137;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1135, out _out1136, out _out1137);
                _4734_recursiveGen = _out1135;
                _4735_recOwned = _out1136;
                _4736_recIdents = _out1137;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4734_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4732_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4733_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1138;
                DCOMP._IOwnership _out1139;
                DCOMP.COMP.FromOwnership(r, _4735_recOwned, expectedOwnership, out _out1138, out _out1139);
                r = _out1138;
                resultingOwnership = _out1139;
                readIdents = _4736_recIdents;
              }
            } else if (_source255.is_Datatype) {
              DAST._IDatatypeType _4737___mcc_h464 = _source255.dtor_datatypeType;
              {
                RAST._IType _4738_fromTpeGen;
                RAST._IType _out1140;
                _out1140 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4738_fromTpeGen = _out1140;
                RAST._IType _4739_toTpeGen;
                RAST._IType _out1141;
                _out1141 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4739_toTpeGen = _out1141;
                RAST._IExpr _4740_recursiveGen;
                DCOMP._IOwnership _4741_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4742_recIdents;
                RAST._IExpr _out1142;
                DCOMP._IOwnership _out1143;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1144;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1142, out _out1143, out _out1144);
                _4740_recursiveGen = _out1142;
                _4741_recOwned = _out1143;
                _4742_recIdents = _out1144;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4740_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4738_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4739_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1145;
                DCOMP._IOwnership _out1146;
                DCOMP.COMP.FromOwnership(r, _4741_recOwned, expectedOwnership, out _out1145, out _out1146);
                r = _out1145;
                resultingOwnership = _out1146;
                readIdents = _4742_recIdents;
              }
            } else if (_source255.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4743___mcc_h466 = _source255.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4744___mcc_h467 = _source255.dtor_attributes;
              {
                RAST._IType _4745_fromTpeGen;
                RAST._IType _out1147;
                _out1147 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4745_fromTpeGen = _out1147;
                RAST._IType _4746_toTpeGen;
                RAST._IType _out1148;
                _out1148 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4746_toTpeGen = _out1148;
                RAST._IExpr _4747_recursiveGen;
                DCOMP._IOwnership _4748_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4749_recIdents;
                RAST._IExpr _out1149;
                DCOMP._IOwnership _out1150;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1151;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1149, out _out1150, out _out1151);
                _4747_recursiveGen = _out1149;
                _4748_recOwned = _out1150;
                _4749_recIdents = _out1151;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4747_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4745_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4746_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1152;
                DCOMP._IOwnership _out1153;
                DCOMP.COMP.FromOwnership(r, _4748_recOwned, expectedOwnership, out _out1152, out _out1153);
                r = _out1152;
                resultingOwnership = _out1153;
                readIdents = _4749_recIdents;
              }
            } else {
              DAST._IType _4750___mcc_h470 = _source255.dtor_baseType;
              DAST._INewtypeRange _4751___mcc_h471 = _source255.dtor_range;
              bool _4752___mcc_h472 = _source255.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4753___mcc_h473 = _source255.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4754_attributes = _4753___mcc_h473;
              bool _4755_erase = _4752___mcc_h472;
              DAST._INewtypeRange _4756_range = _4751___mcc_h471;
              DAST._IType _4757_b = _4750___mcc_h470;
              {
                Std.Wrappers._IOption<RAST._IType> _4758_nativeToType;
                _4758_nativeToType = DCOMP.COMP.NewtypeToRustType(_4757_b, _4756_range);
                if (object.Equals(_3712_fromTpe, _4757_b)) {
                  RAST._IExpr _4759_recursiveGen;
                  DCOMP._IOwnership _4760_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4761_recIdents;
                  RAST._IExpr _out1154;
                  DCOMP._IOwnership _out1155;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1156;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1154, out _out1155, out _out1156);
                  _4759_recursiveGen = _out1154;
                  _4760_recOwned = _out1155;
                  _4761_recIdents = _out1156;
                  readIdents = _4761_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source256 = _4758_nativeToType;
                  if (_source256.is_None) {
                    if (_4755_erase) {
                      r = _4759_recursiveGen;
                    } else {
                      RAST._IType _4762_rhsType;
                      RAST._IType _out1157;
                      _out1157 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _4762_rhsType = _out1157;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4762_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4759_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1158;
                    DCOMP._IOwnership _out1159;
                    DCOMP.COMP.FromOwnership(r, _4760_recOwned, expectedOwnership, out _out1158, out _out1159);
                    r = _out1158;
                    resultingOwnership = _out1159;
                  } else {
                    RAST._IType _4763___mcc_h1648 = _source256.dtor_value;
                    RAST._IType _4764_v = _4763___mcc_h1648;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4759_recursiveGen, RAST.Expr.create_ExprFromType(_4764_v)));
                    RAST._IExpr _out1160;
                    DCOMP._IOwnership _out1161;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1160, out _out1161);
                    r = _out1160;
                    resultingOwnership = _out1161;
                  }
                } else {
                  if ((_4758_nativeToType).is_Some) {
                    DAST._IType _source257 = _3712_fromTpe;
                    if (_source257.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4765___mcc_h1649 = _source257.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4766___mcc_h1650 = _source257.dtor_typeArgs;
                      DAST._IResolvedType _4767___mcc_h1651 = _source257.dtor_resolved;
                      DAST._IResolvedType _source258 = _4767___mcc_h1651;
                      if (_source258.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4768___mcc_h1655 = _source258.dtor_datatypeType;
                      } else if (_source258.is_Datatype) {
                        DAST._IDatatypeType _4769___mcc_h1657 = _source258.dtor_datatypeType;
                      } else if (_source258.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4770___mcc_h1659 = _source258.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4771___mcc_h1660 = _source258.dtor_attributes;
                      } else {
                        DAST._IType _4772___mcc_h1663 = _source258.dtor_baseType;
                        DAST._INewtypeRange _4773___mcc_h1664 = _source258.dtor_range;
                        bool _4774___mcc_h1665 = _source258.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4775___mcc_h1666 = _source258.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4776_attributes0 = _4775___mcc_h1666;
                        bool _4777_erase0 = _4774___mcc_h1665;
                        DAST._INewtypeRange _4778_range0 = _4773___mcc_h1664;
                        DAST._IType _4779_b0 = _4772___mcc_h1663;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4780_nativeFromType;
                          _4780_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4779_b0, _4778_range0);
                          if ((_4780_nativeFromType).is_Some) {
                            RAST._IExpr _4781_recursiveGen;
                            DCOMP._IOwnership _4782_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4783_recIdents;
                            RAST._IExpr _out1162;
                            DCOMP._IOwnership _out1163;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1164;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1162, out _out1163, out _out1164);
                            _4781_recursiveGen = _out1162;
                            _4782_recOwned = _out1163;
                            _4783_recIdents = _out1164;
                            RAST._IExpr _out1165;
                            DCOMP._IOwnership _out1166;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4781_recursiveGen, (_4758_nativeToType).dtor_value), _4782_recOwned, expectedOwnership, out _out1165, out _out1166);
                            r = _out1165;
                            resultingOwnership = _out1166;
                            readIdents = _4783_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source257.is_Nullable) {
                      DAST._IType _4784___mcc_h1671 = _source257.dtor_Nullable_a0;
                    } else if (_source257.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4785___mcc_h1673 = _source257.dtor_Tuple_a0;
                    } else if (_source257.is_Array) {
                      DAST._IType _4786___mcc_h1675 = _source257.dtor_element;
                      BigInteger _4787___mcc_h1676 = _source257.dtor_dims;
                    } else if (_source257.is_Seq) {
                      DAST._IType _4788___mcc_h1679 = _source257.dtor_element;
                    } else if (_source257.is_Set) {
                      DAST._IType _4789___mcc_h1681 = _source257.dtor_element;
                    } else if (_source257.is_Multiset) {
                      DAST._IType _4790___mcc_h1683 = _source257.dtor_element;
                    } else if (_source257.is_Map) {
                      DAST._IType _4791___mcc_h1685 = _source257.dtor_key;
                      DAST._IType _4792___mcc_h1686 = _source257.dtor_value;
                    } else if (_source257.is_SetBuilder) {
                      DAST._IType _4793___mcc_h1689 = _source257.dtor_element;
                    } else if (_source257.is_MapBuilder) {
                      DAST._IType _4794___mcc_h1691 = _source257.dtor_key;
                      DAST._IType _4795___mcc_h1692 = _source257.dtor_value;
                    } else if (_source257.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4796___mcc_h1695 = _source257.dtor_args;
                      DAST._IType _4797___mcc_h1696 = _source257.dtor_result;
                    } else if (_source257.is_Primitive) {
                      DAST._IPrimitive _4798___mcc_h1699 = _source257.dtor_Primitive_a0;
                    } else if (_source257.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4799___mcc_h1701 = _source257.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4800___mcc_h1703 = _source257.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4801_recursiveGen;
                      DCOMP._IOwnership _4802_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4803_recIdents;
                      RAST._IExpr _out1167;
                      DCOMP._IOwnership _out1168;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1169;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1167, out _out1168, out _out1169);
                      _4801_recursiveGen = _out1167;
                      _4802_recOwned = _out1168;
                      _4803_recIdents = _out1169;
                      RAST._IExpr _out1170;
                      DCOMP._IOwnership _out1171;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4801_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4758_nativeToType).dtor_value), _4802_recOwned, expectedOwnership, out _out1170, out _out1171);
                      r = _out1170;
                      resultingOwnership = _out1171;
                      readIdents = _4803_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1172;
                  DCOMP._IOwnership _out1173;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1174;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4757_b), _4757_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out1172, out _out1173, out _out1174);
                  r = _out1172;
                  resultingOwnership = _out1173;
                  readIdents = _out1174;
                }
              }
            }
          } else if (_source254.is_Nullable) {
            DAST._IType _4804___mcc_h478 = _source254.dtor_Nullable_a0;
            {
              RAST._IExpr _4805_recursiveGen;
              DCOMP._IOwnership _4806_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4807_recIdents;
              RAST._IExpr _out1175;
              DCOMP._IOwnership _out1176;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1177;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1175, out _out1176, out _out1177);
              _4805_recursiveGen = _out1175;
              _4806_recOwned = _out1176;
              _4807_recIdents = _out1177;
              r = _4805_recursiveGen;
              if (object.Equals(_4806_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1178;
              DCOMP._IOwnership _out1179;
              DCOMP.COMP.FromOwnership(r, _4806_recOwned, expectedOwnership, out _out1178, out _out1179);
              r = _out1178;
              resultingOwnership = _out1179;
              readIdents = _4807_recIdents;
            }
          } else if (_source254.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4808___mcc_h480 = _source254.dtor_Tuple_a0;
            {
              RAST._IType _4809_fromTpeGen;
              RAST._IType _out1180;
              _out1180 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4809_fromTpeGen = _out1180;
              RAST._IType _4810_toTpeGen;
              RAST._IType _out1181;
              _out1181 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4810_toTpeGen = _out1181;
              RAST._IExpr _4811_recursiveGen;
              DCOMP._IOwnership _4812_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4813_recIdents;
              RAST._IExpr _out1182;
              DCOMP._IOwnership _out1183;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1184;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1182, out _out1183, out _out1184);
              _4811_recursiveGen = _out1182;
              _4812_recOwned = _out1183;
              _4813_recIdents = _out1184;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4811_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4809_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4810_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1185;
              DCOMP._IOwnership _out1186;
              DCOMP.COMP.FromOwnership(r, _4812_recOwned, expectedOwnership, out _out1185, out _out1186);
              r = _out1185;
              resultingOwnership = _out1186;
              readIdents = _4813_recIdents;
            }
          } else if (_source254.is_Array) {
            DAST._IType _4814___mcc_h482 = _source254.dtor_element;
            BigInteger _4815___mcc_h483 = _source254.dtor_dims;
            {
              RAST._IType _4816_fromTpeGen;
              RAST._IType _out1187;
              _out1187 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4816_fromTpeGen = _out1187;
              RAST._IType _4817_toTpeGen;
              RAST._IType _out1188;
              _out1188 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4817_toTpeGen = _out1188;
              RAST._IExpr _4818_recursiveGen;
              DCOMP._IOwnership _4819_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4820_recIdents;
              RAST._IExpr _out1189;
              DCOMP._IOwnership _out1190;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1191;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1189, out _out1190, out _out1191);
              _4818_recursiveGen = _out1189;
              _4819_recOwned = _out1190;
              _4820_recIdents = _out1191;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4818_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4816_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4817_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1192;
              DCOMP._IOwnership _out1193;
              DCOMP.COMP.FromOwnership(r, _4819_recOwned, expectedOwnership, out _out1192, out _out1193);
              r = _out1192;
              resultingOwnership = _out1193;
              readIdents = _4820_recIdents;
            }
          } else if (_source254.is_Seq) {
            DAST._IType _4821___mcc_h486 = _source254.dtor_element;
            {
              RAST._IType _4822_fromTpeGen;
              RAST._IType _out1194;
              _out1194 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4822_fromTpeGen = _out1194;
              RAST._IType _4823_toTpeGen;
              RAST._IType _out1195;
              _out1195 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4823_toTpeGen = _out1195;
              RAST._IExpr _4824_recursiveGen;
              DCOMP._IOwnership _4825_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4826_recIdents;
              RAST._IExpr _out1196;
              DCOMP._IOwnership _out1197;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1198;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1196, out _out1197, out _out1198);
              _4824_recursiveGen = _out1196;
              _4825_recOwned = _out1197;
              _4826_recIdents = _out1198;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4824_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4822_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4823_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1199;
              DCOMP._IOwnership _out1200;
              DCOMP.COMP.FromOwnership(r, _4825_recOwned, expectedOwnership, out _out1199, out _out1200);
              r = _out1199;
              resultingOwnership = _out1200;
              readIdents = _4826_recIdents;
            }
          } else if (_source254.is_Set) {
            DAST._IType _4827___mcc_h488 = _source254.dtor_element;
            {
              RAST._IType _4828_fromTpeGen;
              RAST._IType _out1201;
              _out1201 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4828_fromTpeGen = _out1201;
              RAST._IType _4829_toTpeGen;
              RAST._IType _out1202;
              _out1202 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4829_toTpeGen = _out1202;
              RAST._IExpr _4830_recursiveGen;
              DCOMP._IOwnership _4831_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4832_recIdents;
              RAST._IExpr _out1203;
              DCOMP._IOwnership _out1204;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1205;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1203, out _out1204, out _out1205);
              _4830_recursiveGen = _out1203;
              _4831_recOwned = _out1204;
              _4832_recIdents = _out1205;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4830_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4828_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4829_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1206;
              DCOMP._IOwnership _out1207;
              DCOMP.COMP.FromOwnership(r, _4831_recOwned, expectedOwnership, out _out1206, out _out1207);
              r = _out1206;
              resultingOwnership = _out1207;
              readIdents = _4832_recIdents;
            }
          } else if (_source254.is_Multiset) {
            DAST._IType _4833___mcc_h490 = _source254.dtor_element;
            {
              RAST._IType _4834_fromTpeGen;
              RAST._IType _out1208;
              _out1208 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4834_fromTpeGen = _out1208;
              RAST._IType _4835_toTpeGen;
              RAST._IType _out1209;
              _out1209 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4835_toTpeGen = _out1209;
              RAST._IExpr _4836_recursiveGen;
              DCOMP._IOwnership _4837_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4838_recIdents;
              RAST._IExpr _out1210;
              DCOMP._IOwnership _out1211;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1212;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1210, out _out1211, out _out1212);
              _4836_recursiveGen = _out1210;
              _4837_recOwned = _out1211;
              _4838_recIdents = _out1212;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4836_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4834_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4835_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1213;
              DCOMP._IOwnership _out1214;
              DCOMP.COMP.FromOwnership(r, _4837_recOwned, expectedOwnership, out _out1213, out _out1214);
              r = _out1213;
              resultingOwnership = _out1214;
              readIdents = _4838_recIdents;
            }
          } else if (_source254.is_Map) {
            DAST._IType _4839___mcc_h492 = _source254.dtor_key;
            DAST._IType _4840___mcc_h493 = _source254.dtor_value;
            {
              RAST._IType _4841_fromTpeGen;
              RAST._IType _out1215;
              _out1215 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4841_fromTpeGen = _out1215;
              RAST._IType _4842_toTpeGen;
              RAST._IType _out1216;
              _out1216 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4842_toTpeGen = _out1216;
              RAST._IExpr _4843_recursiveGen;
              DCOMP._IOwnership _4844_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4845_recIdents;
              RAST._IExpr _out1217;
              DCOMP._IOwnership _out1218;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1219;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1217, out _out1218, out _out1219);
              _4843_recursiveGen = _out1217;
              _4844_recOwned = _out1218;
              _4845_recIdents = _out1219;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4843_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4841_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4842_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1220;
              DCOMP._IOwnership _out1221;
              DCOMP.COMP.FromOwnership(r, _4844_recOwned, expectedOwnership, out _out1220, out _out1221);
              r = _out1220;
              resultingOwnership = _out1221;
              readIdents = _4845_recIdents;
            }
          } else if (_source254.is_SetBuilder) {
            DAST._IType _4846___mcc_h496 = _source254.dtor_element;
            {
              RAST._IType _4847_fromTpeGen;
              RAST._IType _out1222;
              _out1222 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4847_fromTpeGen = _out1222;
              RAST._IType _4848_toTpeGen;
              RAST._IType _out1223;
              _out1223 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4848_toTpeGen = _out1223;
              RAST._IExpr _4849_recursiveGen;
              DCOMP._IOwnership _4850_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4851_recIdents;
              RAST._IExpr _out1224;
              DCOMP._IOwnership _out1225;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1226;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1224, out _out1225, out _out1226);
              _4849_recursiveGen = _out1224;
              _4850_recOwned = _out1225;
              _4851_recIdents = _out1226;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4849_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4847_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4848_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1227;
              DCOMP._IOwnership _out1228;
              DCOMP.COMP.FromOwnership(r, _4850_recOwned, expectedOwnership, out _out1227, out _out1228);
              r = _out1227;
              resultingOwnership = _out1228;
              readIdents = _4851_recIdents;
            }
          } else if (_source254.is_MapBuilder) {
            DAST._IType _4852___mcc_h498 = _source254.dtor_key;
            DAST._IType _4853___mcc_h499 = _source254.dtor_value;
            {
              RAST._IType _4854_fromTpeGen;
              RAST._IType _out1229;
              _out1229 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4854_fromTpeGen = _out1229;
              RAST._IType _4855_toTpeGen;
              RAST._IType _out1230;
              _out1230 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4855_toTpeGen = _out1230;
              RAST._IExpr _4856_recursiveGen;
              DCOMP._IOwnership _4857_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4858_recIdents;
              RAST._IExpr _out1231;
              DCOMP._IOwnership _out1232;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1233;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1231, out _out1232, out _out1233);
              _4856_recursiveGen = _out1231;
              _4857_recOwned = _out1232;
              _4858_recIdents = _out1233;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4856_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4854_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4855_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1234;
              DCOMP._IOwnership _out1235;
              DCOMP.COMP.FromOwnership(r, _4857_recOwned, expectedOwnership, out _out1234, out _out1235);
              r = _out1234;
              resultingOwnership = _out1235;
              readIdents = _4858_recIdents;
            }
          } else if (_source254.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4859___mcc_h502 = _source254.dtor_args;
            DAST._IType _4860___mcc_h503 = _source254.dtor_result;
            {
              RAST._IType _4861_fromTpeGen;
              RAST._IType _out1236;
              _out1236 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4861_fromTpeGen = _out1236;
              RAST._IType _4862_toTpeGen;
              RAST._IType _out1237;
              _out1237 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4862_toTpeGen = _out1237;
              RAST._IExpr _4863_recursiveGen;
              DCOMP._IOwnership _4864_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4865_recIdents;
              RAST._IExpr _out1238;
              DCOMP._IOwnership _out1239;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1240;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1238, out _out1239, out _out1240);
              _4863_recursiveGen = _out1238;
              _4864_recOwned = _out1239;
              _4865_recIdents = _out1240;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4863_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4861_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4862_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1241;
              DCOMP._IOwnership _out1242;
              DCOMP.COMP.FromOwnership(r, _4864_recOwned, expectedOwnership, out _out1241, out _out1242);
              r = _out1241;
              resultingOwnership = _out1242;
              readIdents = _4865_recIdents;
            }
          } else if (_source254.is_Primitive) {
            DAST._IPrimitive _4866___mcc_h506 = _source254.dtor_Primitive_a0;
            {
              RAST._IType _4867_fromTpeGen;
              RAST._IType _out1243;
              _out1243 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4867_fromTpeGen = _out1243;
              RAST._IType _4868_toTpeGen;
              RAST._IType _out1244;
              _out1244 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4868_toTpeGen = _out1244;
              RAST._IExpr _4869_recursiveGen;
              DCOMP._IOwnership _4870_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4871_recIdents;
              RAST._IExpr _out1245;
              DCOMP._IOwnership _out1246;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1247;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1245, out _out1246, out _out1247);
              _4869_recursiveGen = _out1245;
              _4870_recOwned = _out1246;
              _4871_recIdents = _out1247;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4869_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4867_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4868_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1248;
              DCOMP._IOwnership _out1249;
              DCOMP.COMP.FromOwnership(r, _4870_recOwned, expectedOwnership, out _out1248, out _out1249);
              r = _out1248;
              resultingOwnership = _out1249;
              readIdents = _4871_recIdents;
            }
          } else if (_source254.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4872___mcc_h508 = _source254.dtor_Passthrough_a0;
            {
              RAST._IType _4873_fromTpeGen;
              RAST._IType _out1250;
              _out1250 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4873_fromTpeGen = _out1250;
              RAST._IType _4874_toTpeGen;
              RAST._IType _out1251;
              _out1251 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4874_toTpeGen = _out1251;
              RAST._IExpr _4875_recursiveGen;
              DCOMP._IOwnership _4876_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4877_recIdents;
              RAST._IExpr _out1252;
              DCOMP._IOwnership _out1253;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1254;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1252, out _out1253, out _out1254);
              _4875_recursiveGen = _out1252;
              _4876_recOwned = _out1253;
              _4877_recIdents = _out1254;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4875_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4873_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4874_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1255;
              DCOMP._IOwnership _out1256;
              DCOMP.COMP.FromOwnership(r, _4876_recOwned, expectedOwnership, out _out1255, out _out1256);
              r = _out1255;
              resultingOwnership = _out1256;
              readIdents = _4877_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4878___mcc_h510 = _source254.dtor_TypeArg_a0;
            {
              RAST._IType _4879_fromTpeGen;
              RAST._IType _out1257;
              _out1257 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4879_fromTpeGen = _out1257;
              RAST._IType _4880_toTpeGen;
              RAST._IType _out1258;
              _out1258 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4880_toTpeGen = _out1258;
              RAST._IExpr _4881_recursiveGen;
              DCOMP._IOwnership _4882_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4883_recIdents;
              RAST._IExpr _out1259;
              DCOMP._IOwnership _out1260;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1261;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1259, out _out1260, out _out1261);
              _4881_recursiveGen = _out1259;
              _4882_recOwned = _out1260;
              _4883_recIdents = _out1261;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4881_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4879_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4880_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1262;
              DCOMP._IOwnership _out1263;
              DCOMP.COMP.FromOwnership(r, _4882_recOwned, expectedOwnership, out _out1262, out _out1263);
              r = _out1262;
              resultingOwnership = _out1263;
              readIdents = _4883_recIdents;
            }
          }
        } else if (_source210.is_Seq) {
          DAST._IType _4884___mcc_h512 = _source210.dtor_element;
          DAST._IType _source259 = _3718___mcc_h1;
          if (_source259.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4885___mcc_h516 = _source259.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4886___mcc_h517 = _source259.dtor_typeArgs;
            DAST._IResolvedType _4887___mcc_h518 = _source259.dtor_resolved;
            DAST._IResolvedType _source260 = _4887___mcc_h518;
            if (_source260.is_AllocatedDatatype) {
              DAST._IDatatypeType _4888___mcc_h522 = _source260.dtor_datatypeType;
              {
                RAST._IType _4889_fromTpeGen;
                RAST._IType _out1264;
                _out1264 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4889_fromTpeGen = _out1264;
                RAST._IType _4890_toTpeGen;
                RAST._IType _out1265;
                _out1265 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4890_toTpeGen = _out1265;
                RAST._IExpr _4891_recursiveGen;
                DCOMP._IOwnership _4892_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4893_recIdents;
                RAST._IExpr _out1266;
                DCOMP._IOwnership _out1267;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1268;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1266, out _out1267, out _out1268);
                _4891_recursiveGen = _out1266;
                _4892_recOwned = _out1267;
                _4893_recIdents = _out1268;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4891_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4889_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4890_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1269;
                DCOMP._IOwnership _out1270;
                DCOMP.COMP.FromOwnership(r, _4892_recOwned, expectedOwnership, out _out1269, out _out1270);
                r = _out1269;
                resultingOwnership = _out1270;
                readIdents = _4893_recIdents;
              }
            } else if (_source260.is_Datatype) {
              DAST._IDatatypeType _4894___mcc_h524 = _source260.dtor_datatypeType;
              {
                RAST._IType _4895_fromTpeGen;
                RAST._IType _out1271;
                _out1271 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4895_fromTpeGen = _out1271;
                RAST._IType _4896_toTpeGen;
                RAST._IType _out1272;
                _out1272 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4896_toTpeGen = _out1272;
                RAST._IExpr _4897_recursiveGen;
                DCOMP._IOwnership _4898_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4899_recIdents;
                RAST._IExpr _out1273;
                DCOMP._IOwnership _out1274;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1275;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1273, out _out1274, out _out1275);
                _4897_recursiveGen = _out1273;
                _4898_recOwned = _out1274;
                _4899_recIdents = _out1275;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4897_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4895_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4896_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1276;
                DCOMP._IOwnership _out1277;
                DCOMP.COMP.FromOwnership(r, _4898_recOwned, expectedOwnership, out _out1276, out _out1277);
                r = _out1276;
                resultingOwnership = _out1277;
                readIdents = _4899_recIdents;
              }
            } else if (_source260.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4900___mcc_h526 = _source260.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4901___mcc_h527 = _source260.dtor_attributes;
              {
                RAST._IType _4902_fromTpeGen;
                RAST._IType _out1278;
                _out1278 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _4902_fromTpeGen = _out1278;
                RAST._IType _4903_toTpeGen;
                RAST._IType _out1279;
                _out1279 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _4903_toTpeGen = _out1279;
                RAST._IExpr _4904_recursiveGen;
                DCOMP._IOwnership _4905_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4906_recIdents;
                RAST._IExpr _out1280;
                DCOMP._IOwnership _out1281;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1282;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1280, out _out1281, out _out1282);
                _4904_recursiveGen = _out1280;
                _4905_recOwned = _out1281;
                _4906_recIdents = _out1282;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4904_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4902_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4903_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1283;
                DCOMP._IOwnership _out1284;
                DCOMP.COMP.FromOwnership(r, _4905_recOwned, expectedOwnership, out _out1283, out _out1284);
                r = _out1283;
                resultingOwnership = _out1284;
                readIdents = _4906_recIdents;
              }
            } else {
              DAST._IType _4907___mcc_h530 = _source260.dtor_baseType;
              DAST._INewtypeRange _4908___mcc_h531 = _source260.dtor_range;
              bool _4909___mcc_h532 = _source260.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4910___mcc_h533 = _source260.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4911_attributes = _4910___mcc_h533;
              bool _4912_erase = _4909___mcc_h532;
              DAST._INewtypeRange _4913_range = _4908___mcc_h531;
              DAST._IType _4914_b = _4907___mcc_h530;
              {
                Std.Wrappers._IOption<RAST._IType> _4915_nativeToType;
                _4915_nativeToType = DCOMP.COMP.NewtypeToRustType(_4914_b, _4913_range);
                if (object.Equals(_3712_fromTpe, _4914_b)) {
                  RAST._IExpr _4916_recursiveGen;
                  DCOMP._IOwnership _4917_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4918_recIdents;
                  RAST._IExpr _out1285;
                  DCOMP._IOwnership _out1286;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1287;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1285, out _out1286, out _out1287);
                  _4916_recursiveGen = _out1285;
                  _4917_recOwned = _out1286;
                  _4918_recIdents = _out1287;
                  readIdents = _4918_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source261 = _4915_nativeToType;
                  if (_source261.is_None) {
                    if (_4912_erase) {
                      r = _4916_recursiveGen;
                    } else {
                      RAST._IType _4919_rhsType;
                      RAST._IType _out1288;
                      _out1288 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _4919_rhsType = _out1288;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4919_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4916_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1289;
                    DCOMP._IOwnership _out1290;
                    DCOMP.COMP.FromOwnership(r, _4917_recOwned, expectedOwnership, out _out1289, out _out1290);
                    r = _out1289;
                    resultingOwnership = _out1290;
                  } else {
                    RAST._IType _4920___mcc_h1705 = _source261.dtor_value;
                    RAST._IType _4921_v = _4920___mcc_h1705;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4916_recursiveGen, RAST.Expr.create_ExprFromType(_4921_v)));
                    RAST._IExpr _out1291;
                    DCOMP._IOwnership _out1292;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1291, out _out1292);
                    r = _out1291;
                    resultingOwnership = _out1292;
                  }
                } else {
                  if ((_4915_nativeToType).is_Some) {
                    DAST._IType _source262 = _3712_fromTpe;
                    if (_source262.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4922___mcc_h1706 = _source262.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4923___mcc_h1707 = _source262.dtor_typeArgs;
                      DAST._IResolvedType _4924___mcc_h1708 = _source262.dtor_resolved;
                      DAST._IResolvedType _source263 = _4924___mcc_h1708;
                      if (_source263.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4925___mcc_h1712 = _source263.dtor_datatypeType;
                      } else if (_source263.is_Datatype) {
                        DAST._IDatatypeType _4926___mcc_h1714 = _source263.dtor_datatypeType;
                      } else if (_source263.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4927___mcc_h1716 = _source263.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4928___mcc_h1717 = _source263.dtor_attributes;
                      } else {
                        DAST._IType _4929___mcc_h1720 = _source263.dtor_baseType;
                        DAST._INewtypeRange _4930___mcc_h1721 = _source263.dtor_range;
                        bool _4931___mcc_h1722 = _source263.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4932___mcc_h1723 = _source263.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4933_attributes0 = _4932___mcc_h1723;
                        bool _4934_erase0 = _4931___mcc_h1722;
                        DAST._INewtypeRange _4935_range0 = _4930___mcc_h1721;
                        DAST._IType _4936_b0 = _4929___mcc_h1720;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4937_nativeFromType;
                          _4937_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4936_b0, _4935_range0);
                          if ((_4937_nativeFromType).is_Some) {
                            RAST._IExpr _4938_recursiveGen;
                            DCOMP._IOwnership _4939_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4940_recIdents;
                            RAST._IExpr _out1293;
                            DCOMP._IOwnership _out1294;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1295;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1293, out _out1294, out _out1295);
                            _4938_recursiveGen = _out1293;
                            _4939_recOwned = _out1294;
                            _4940_recIdents = _out1295;
                            RAST._IExpr _out1296;
                            DCOMP._IOwnership _out1297;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4938_recursiveGen, (_4915_nativeToType).dtor_value), _4939_recOwned, expectedOwnership, out _out1296, out _out1297);
                            r = _out1296;
                            resultingOwnership = _out1297;
                            readIdents = _4940_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source262.is_Nullable) {
                      DAST._IType _4941___mcc_h1728 = _source262.dtor_Nullable_a0;
                    } else if (_source262.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4942___mcc_h1730 = _source262.dtor_Tuple_a0;
                    } else if (_source262.is_Array) {
                      DAST._IType _4943___mcc_h1732 = _source262.dtor_element;
                      BigInteger _4944___mcc_h1733 = _source262.dtor_dims;
                    } else if (_source262.is_Seq) {
                      DAST._IType _4945___mcc_h1736 = _source262.dtor_element;
                    } else if (_source262.is_Set) {
                      DAST._IType _4946___mcc_h1738 = _source262.dtor_element;
                    } else if (_source262.is_Multiset) {
                      DAST._IType _4947___mcc_h1740 = _source262.dtor_element;
                    } else if (_source262.is_Map) {
                      DAST._IType _4948___mcc_h1742 = _source262.dtor_key;
                      DAST._IType _4949___mcc_h1743 = _source262.dtor_value;
                    } else if (_source262.is_SetBuilder) {
                      DAST._IType _4950___mcc_h1746 = _source262.dtor_element;
                    } else if (_source262.is_MapBuilder) {
                      DAST._IType _4951___mcc_h1748 = _source262.dtor_key;
                      DAST._IType _4952___mcc_h1749 = _source262.dtor_value;
                    } else if (_source262.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4953___mcc_h1752 = _source262.dtor_args;
                      DAST._IType _4954___mcc_h1753 = _source262.dtor_result;
                    } else if (_source262.is_Primitive) {
                      DAST._IPrimitive _4955___mcc_h1756 = _source262.dtor_Primitive_a0;
                    } else if (_source262.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4956___mcc_h1758 = _source262.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4957___mcc_h1760 = _source262.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4958_recursiveGen;
                      DCOMP._IOwnership _4959_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4960_recIdents;
                      RAST._IExpr _out1298;
                      DCOMP._IOwnership _out1299;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1300;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1298, out _out1299, out _out1300);
                      _4958_recursiveGen = _out1298;
                      _4959_recOwned = _out1299;
                      _4960_recIdents = _out1300;
                      RAST._IExpr _out1301;
                      DCOMP._IOwnership _out1302;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4958_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4915_nativeToType).dtor_value), _4959_recOwned, expectedOwnership, out _out1301, out _out1302);
                      r = _out1301;
                      resultingOwnership = _out1302;
                      readIdents = _4960_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1303;
                  DCOMP._IOwnership _out1304;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1305;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _4914_b), _4914_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out1303, out _out1304, out _out1305);
                  r = _out1303;
                  resultingOwnership = _out1304;
                  readIdents = _out1305;
                }
              }
            }
          } else if (_source259.is_Nullable) {
            DAST._IType _4961___mcc_h538 = _source259.dtor_Nullable_a0;
            {
              RAST._IExpr _4962_recursiveGen;
              DCOMP._IOwnership _4963_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4964_recIdents;
              RAST._IExpr _out1306;
              DCOMP._IOwnership _out1307;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1308;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1306, out _out1307, out _out1308);
              _4962_recursiveGen = _out1306;
              _4963_recOwned = _out1307;
              _4964_recIdents = _out1308;
              r = _4962_recursiveGen;
              if (object.Equals(_4963_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1309;
              DCOMP._IOwnership _out1310;
              DCOMP.COMP.FromOwnership(r, _4963_recOwned, expectedOwnership, out _out1309, out _out1310);
              r = _out1309;
              resultingOwnership = _out1310;
              readIdents = _4964_recIdents;
            }
          } else if (_source259.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4965___mcc_h540 = _source259.dtor_Tuple_a0;
            {
              RAST._IType _4966_fromTpeGen;
              RAST._IType _out1311;
              _out1311 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4966_fromTpeGen = _out1311;
              RAST._IType _4967_toTpeGen;
              RAST._IType _out1312;
              _out1312 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4967_toTpeGen = _out1312;
              RAST._IExpr _4968_recursiveGen;
              DCOMP._IOwnership _4969_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4970_recIdents;
              RAST._IExpr _out1313;
              DCOMP._IOwnership _out1314;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1315;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1313, out _out1314, out _out1315);
              _4968_recursiveGen = _out1313;
              _4969_recOwned = _out1314;
              _4970_recIdents = _out1315;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4968_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4966_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4967_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1316;
              DCOMP._IOwnership _out1317;
              DCOMP.COMP.FromOwnership(r, _4969_recOwned, expectedOwnership, out _out1316, out _out1317);
              r = _out1316;
              resultingOwnership = _out1317;
              readIdents = _4970_recIdents;
            }
          } else if (_source259.is_Array) {
            DAST._IType _4971___mcc_h542 = _source259.dtor_element;
            BigInteger _4972___mcc_h543 = _source259.dtor_dims;
            {
              RAST._IType _4973_fromTpeGen;
              RAST._IType _out1318;
              _out1318 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4973_fromTpeGen = _out1318;
              RAST._IType _4974_toTpeGen;
              RAST._IType _out1319;
              _out1319 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4974_toTpeGen = _out1319;
              RAST._IExpr _4975_recursiveGen;
              DCOMP._IOwnership _4976_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4977_recIdents;
              RAST._IExpr _out1320;
              DCOMP._IOwnership _out1321;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1322;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1320, out _out1321, out _out1322);
              _4975_recursiveGen = _out1320;
              _4976_recOwned = _out1321;
              _4977_recIdents = _out1322;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4975_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4973_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4974_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1323;
              DCOMP._IOwnership _out1324;
              DCOMP.COMP.FromOwnership(r, _4976_recOwned, expectedOwnership, out _out1323, out _out1324);
              r = _out1323;
              resultingOwnership = _out1324;
              readIdents = _4977_recIdents;
            }
          } else if (_source259.is_Seq) {
            DAST._IType _4978___mcc_h546 = _source259.dtor_element;
            {
              RAST._IType _4979_fromTpeGen;
              RAST._IType _out1325;
              _out1325 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4979_fromTpeGen = _out1325;
              RAST._IType _4980_toTpeGen;
              RAST._IType _out1326;
              _out1326 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4980_toTpeGen = _out1326;
              RAST._IExpr _4981_recursiveGen;
              DCOMP._IOwnership _4982_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4983_recIdents;
              RAST._IExpr _out1327;
              DCOMP._IOwnership _out1328;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1329;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1327, out _out1328, out _out1329);
              _4981_recursiveGen = _out1327;
              _4982_recOwned = _out1328;
              _4983_recIdents = _out1329;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4981_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4979_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4980_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1330;
              DCOMP._IOwnership _out1331;
              DCOMP.COMP.FromOwnership(r, _4982_recOwned, expectedOwnership, out _out1330, out _out1331);
              r = _out1330;
              resultingOwnership = _out1331;
              readIdents = _4983_recIdents;
            }
          } else if (_source259.is_Set) {
            DAST._IType _4984___mcc_h548 = _source259.dtor_element;
            {
              RAST._IType _4985_fromTpeGen;
              RAST._IType _out1332;
              _out1332 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4985_fromTpeGen = _out1332;
              RAST._IType _4986_toTpeGen;
              RAST._IType _out1333;
              _out1333 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4986_toTpeGen = _out1333;
              RAST._IExpr _4987_recursiveGen;
              DCOMP._IOwnership _4988_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4989_recIdents;
              RAST._IExpr _out1334;
              DCOMP._IOwnership _out1335;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1336;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1334, out _out1335, out _out1336);
              _4987_recursiveGen = _out1334;
              _4988_recOwned = _out1335;
              _4989_recIdents = _out1336;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4987_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4985_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4986_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1337;
              DCOMP._IOwnership _out1338;
              DCOMP.COMP.FromOwnership(r, _4988_recOwned, expectedOwnership, out _out1337, out _out1338);
              r = _out1337;
              resultingOwnership = _out1338;
              readIdents = _4989_recIdents;
            }
          } else if (_source259.is_Multiset) {
            DAST._IType _4990___mcc_h550 = _source259.dtor_element;
            {
              RAST._IType _4991_fromTpeGen;
              RAST._IType _out1339;
              _out1339 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4991_fromTpeGen = _out1339;
              RAST._IType _4992_toTpeGen;
              RAST._IType _out1340;
              _out1340 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4992_toTpeGen = _out1340;
              RAST._IExpr _4993_recursiveGen;
              DCOMP._IOwnership _4994_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4995_recIdents;
              RAST._IExpr _out1341;
              DCOMP._IOwnership _out1342;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1343;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1341, out _out1342, out _out1343);
              _4993_recursiveGen = _out1341;
              _4994_recOwned = _out1342;
              _4995_recIdents = _out1343;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4993_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4991_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4992_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1344;
              DCOMP._IOwnership _out1345;
              DCOMP.COMP.FromOwnership(r, _4994_recOwned, expectedOwnership, out _out1344, out _out1345);
              r = _out1344;
              resultingOwnership = _out1345;
              readIdents = _4995_recIdents;
            }
          } else if (_source259.is_Map) {
            DAST._IType _4996___mcc_h552 = _source259.dtor_key;
            DAST._IType _4997___mcc_h553 = _source259.dtor_value;
            {
              RAST._IType _4998_fromTpeGen;
              RAST._IType _out1346;
              _out1346 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _4998_fromTpeGen = _out1346;
              RAST._IType _4999_toTpeGen;
              RAST._IType _out1347;
              _out1347 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _4999_toTpeGen = _out1347;
              RAST._IExpr _5000_recursiveGen;
              DCOMP._IOwnership _5001_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5002_recIdents;
              RAST._IExpr _out1348;
              DCOMP._IOwnership _out1349;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1350;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1348, out _out1349, out _out1350);
              _5000_recursiveGen = _out1348;
              _5001_recOwned = _out1349;
              _5002_recIdents = _out1350;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5000_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4998_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4999_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1351;
              DCOMP._IOwnership _out1352;
              DCOMP.COMP.FromOwnership(r, _5001_recOwned, expectedOwnership, out _out1351, out _out1352);
              r = _out1351;
              resultingOwnership = _out1352;
              readIdents = _5002_recIdents;
            }
          } else if (_source259.is_SetBuilder) {
            DAST._IType _5003___mcc_h556 = _source259.dtor_element;
            {
              RAST._IType _5004_fromTpeGen;
              RAST._IType _out1353;
              _out1353 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5004_fromTpeGen = _out1353;
              RAST._IType _5005_toTpeGen;
              RAST._IType _out1354;
              _out1354 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5005_toTpeGen = _out1354;
              RAST._IExpr _5006_recursiveGen;
              DCOMP._IOwnership _5007_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5008_recIdents;
              RAST._IExpr _out1355;
              DCOMP._IOwnership _out1356;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1357;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1355, out _out1356, out _out1357);
              _5006_recursiveGen = _out1355;
              _5007_recOwned = _out1356;
              _5008_recIdents = _out1357;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5006_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5004_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5005_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1358;
              DCOMP._IOwnership _out1359;
              DCOMP.COMP.FromOwnership(r, _5007_recOwned, expectedOwnership, out _out1358, out _out1359);
              r = _out1358;
              resultingOwnership = _out1359;
              readIdents = _5008_recIdents;
            }
          } else if (_source259.is_MapBuilder) {
            DAST._IType _5009___mcc_h558 = _source259.dtor_key;
            DAST._IType _5010___mcc_h559 = _source259.dtor_value;
            {
              RAST._IType _5011_fromTpeGen;
              RAST._IType _out1360;
              _out1360 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5011_fromTpeGen = _out1360;
              RAST._IType _5012_toTpeGen;
              RAST._IType _out1361;
              _out1361 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5012_toTpeGen = _out1361;
              RAST._IExpr _5013_recursiveGen;
              DCOMP._IOwnership _5014_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5015_recIdents;
              RAST._IExpr _out1362;
              DCOMP._IOwnership _out1363;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1364;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1362, out _out1363, out _out1364);
              _5013_recursiveGen = _out1362;
              _5014_recOwned = _out1363;
              _5015_recIdents = _out1364;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5013_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5011_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5012_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1365;
              DCOMP._IOwnership _out1366;
              DCOMP.COMP.FromOwnership(r, _5014_recOwned, expectedOwnership, out _out1365, out _out1366);
              r = _out1365;
              resultingOwnership = _out1366;
              readIdents = _5015_recIdents;
            }
          } else if (_source259.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5016___mcc_h562 = _source259.dtor_args;
            DAST._IType _5017___mcc_h563 = _source259.dtor_result;
            {
              RAST._IType _5018_fromTpeGen;
              RAST._IType _out1367;
              _out1367 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5018_fromTpeGen = _out1367;
              RAST._IType _5019_toTpeGen;
              RAST._IType _out1368;
              _out1368 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5019_toTpeGen = _out1368;
              RAST._IExpr _5020_recursiveGen;
              DCOMP._IOwnership _5021_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5022_recIdents;
              RAST._IExpr _out1369;
              DCOMP._IOwnership _out1370;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1371;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1369, out _out1370, out _out1371);
              _5020_recursiveGen = _out1369;
              _5021_recOwned = _out1370;
              _5022_recIdents = _out1371;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5020_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5018_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5019_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1372;
              DCOMP._IOwnership _out1373;
              DCOMP.COMP.FromOwnership(r, _5021_recOwned, expectedOwnership, out _out1372, out _out1373);
              r = _out1372;
              resultingOwnership = _out1373;
              readIdents = _5022_recIdents;
            }
          } else if (_source259.is_Primitive) {
            DAST._IPrimitive _5023___mcc_h566 = _source259.dtor_Primitive_a0;
            {
              RAST._IType _5024_fromTpeGen;
              RAST._IType _out1374;
              _out1374 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5024_fromTpeGen = _out1374;
              RAST._IType _5025_toTpeGen;
              RAST._IType _out1375;
              _out1375 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5025_toTpeGen = _out1375;
              RAST._IExpr _5026_recursiveGen;
              DCOMP._IOwnership _5027_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5028_recIdents;
              RAST._IExpr _out1376;
              DCOMP._IOwnership _out1377;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1378;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1376, out _out1377, out _out1378);
              _5026_recursiveGen = _out1376;
              _5027_recOwned = _out1377;
              _5028_recIdents = _out1378;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5026_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5024_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5025_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1379;
              DCOMP._IOwnership _out1380;
              DCOMP.COMP.FromOwnership(r, _5027_recOwned, expectedOwnership, out _out1379, out _out1380);
              r = _out1379;
              resultingOwnership = _out1380;
              readIdents = _5028_recIdents;
            }
          } else if (_source259.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5029___mcc_h568 = _source259.dtor_Passthrough_a0;
            {
              RAST._IType _5030_fromTpeGen;
              RAST._IType _out1381;
              _out1381 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5030_fromTpeGen = _out1381;
              RAST._IType _5031_toTpeGen;
              RAST._IType _out1382;
              _out1382 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5031_toTpeGen = _out1382;
              RAST._IExpr _5032_recursiveGen;
              DCOMP._IOwnership _5033_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5034_recIdents;
              RAST._IExpr _out1383;
              DCOMP._IOwnership _out1384;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1385;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1383, out _out1384, out _out1385);
              _5032_recursiveGen = _out1383;
              _5033_recOwned = _out1384;
              _5034_recIdents = _out1385;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5032_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5030_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5031_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1386;
              DCOMP._IOwnership _out1387;
              DCOMP.COMP.FromOwnership(r, _5033_recOwned, expectedOwnership, out _out1386, out _out1387);
              r = _out1386;
              resultingOwnership = _out1387;
              readIdents = _5034_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5035___mcc_h570 = _source259.dtor_TypeArg_a0;
            {
              RAST._IType _5036_fromTpeGen;
              RAST._IType _out1388;
              _out1388 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5036_fromTpeGen = _out1388;
              RAST._IType _5037_toTpeGen;
              RAST._IType _out1389;
              _out1389 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5037_toTpeGen = _out1389;
              RAST._IExpr _5038_recursiveGen;
              DCOMP._IOwnership _5039_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5040_recIdents;
              RAST._IExpr _out1390;
              DCOMP._IOwnership _out1391;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1392;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1390, out _out1391, out _out1392);
              _5038_recursiveGen = _out1390;
              _5039_recOwned = _out1391;
              _5040_recIdents = _out1392;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5038_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5036_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5037_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1393;
              DCOMP._IOwnership _out1394;
              DCOMP.COMP.FromOwnership(r, _5039_recOwned, expectedOwnership, out _out1393, out _out1394);
              r = _out1393;
              resultingOwnership = _out1394;
              readIdents = _5040_recIdents;
            }
          }
        } else if (_source210.is_Set) {
          DAST._IType _5041___mcc_h572 = _source210.dtor_element;
          DAST._IType _source264 = _3718___mcc_h1;
          if (_source264.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5042___mcc_h576 = _source264.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5043___mcc_h577 = _source264.dtor_typeArgs;
            DAST._IResolvedType _5044___mcc_h578 = _source264.dtor_resolved;
            DAST._IResolvedType _source265 = _5044___mcc_h578;
            if (_source265.is_AllocatedDatatype) {
              DAST._IDatatypeType _5045___mcc_h582 = _source265.dtor_datatypeType;
              {
                RAST._IType _5046_fromTpeGen;
                RAST._IType _out1395;
                _out1395 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5046_fromTpeGen = _out1395;
                RAST._IType _5047_toTpeGen;
                RAST._IType _out1396;
                _out1396 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5047_toTpeGen = _out1396;
                RAST._IExpr _5048_recursiveGen;
                DCOMP._IOwnership _5049_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5050_recIdents;
                RAST._IExpr _out1397;
                DCOMP._IOwnership _out1398;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1399;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1397, out _out1398, out _out1399);
                _5048_recursiveGen = _out1397;
                _5049_recOwned = _out1398;
                _5050_recIdents = _out1399;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5048_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5046_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5047_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1400;
                DCOMP._IOwnership _out1401;
                DCOMP.COMP.FromOwnership(r, _5049_recOwned, expectedOwnership, out _out1400, out _out1401);
                r = _out1400;
                resultingOwnership = _out1401;
                readIdents = _5050_recIdents;
              }
            } else if (_source265.is_Datatype) {
              DAST._IDatatypeType _5051___mcc_h584 = _source265.dtor_datatypeType;
              {
                RAST._IType _5052_fromTpeGen;
                RAST._IType _out1402;
                _out1402 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5052_fromTpeGen = _out1402;
                RAST._IType _5053_toTpeGen;
                RAST._IType _out1403;
                _out1403 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5053_toTpeGen = _out1403;
                RAST._IExpr _5054_recursiveGen;
                DCOMP._IOwnership _5055_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5056_recIdents;
                RAST._IExpr _out1404;
                DCOMP._IOwnership _out1405;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1406;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1404, out _out1405, out _out1406);
                _5054_recursiveGen = _out1404;
                _5055_recOwned = _out1405;
                _5056_recIdents = _out1406;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5054_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5052_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5053_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1407;
                DCOMP._IOwnership _out1408;
                DCOMP.COMP.FromOwnership(r, _5055_recOwned, expectedOwnership, out _out1407, out _out1408);
                r = _out1407;
                resultingOwnership = _out1408;
                readIdents = _5056_recIdents;
              }
            } else if (_source265.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5057___mcc_h586 = _source265.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5058___mcc_h587 = _source265.dtor_attributes;
              {
                RAST._IType _5059_fromTpeGen;
                RAST._IType _out1409;
                _out1409 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5059_fromTpeGen = _out1409;
                RAST._IType _5060_toTpeGen;
                RAST._IType _out1410;
                _out1410 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5060_toTpeGen = _out1410;
                RAST._IExpr _5061_recursiveGen;
                DCOMP._IOwnership _5062_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5063_recIdents;
                RAST._IExpr _out1411;
                DCOMP._IOwnership _out1412;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1413;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1411, out _out1412, out _out1413);
                _5061_recursiveGen = _out1411;
                _5062_recOwned = _out1412;
                _5063_recIdents = _out1413;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5061_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5059_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5060_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1414;
                DCOMP._IOwnership _out1415;
                DCOMP.COMP.FromOwnership(r, _5062_recOwned, expectedOwnership, out _out1414, out _out1415);
                r = _out1414;
                resultingOwnership = _out1415;
                readIdents = _5063_recIdents;
              }
            } else {
              DAST._IType _5064___mcc_h590 = _source265.dtor_baseType;
              DAST._INewtypeRange _5065___mcc_h591 = _source265.dtor_range;
              bool _5066___mcc_h592 = _source265.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5067___mcc_h593 = _source265.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5068_attributes = _5067___mcc_h593;
              bool _5069_erase = _5066___mcc_h592;
              DAST._INewtypeRange _5070_range = _5065___mcc_h591;
              DAST._IType _5071_b = _5064___mcc_h590;
              {
                Std.Wrappers._IOption<RAST._IType> _5072_nativeToType;
                _5072_nativeToType = DCOMP.COMP.NewtypeToRustType(_5071_b, _5070_range);
                if (object.Equals(_3712_fromTpe, _5071_b)) {
                  RAST._IExpr _5073_recursiveGen;
                  DCOMP._IOwnership _5074_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5075_recIdents;
                  RAST._IExpr _out1416;
                  DCOMP._IOwnership _out1417;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1418;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1416, out _out1417, out _out1418);
                  _5073_recursiveGen = _out1416;
                  _5074_recOwned = _out1417;
                  _5075_recIdents = _out1418;
                  readIdents = _5075_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source266 = _5072_nativeToType;
                  if (_source266.is_None) {
                    if (_5069_erase) {
                      r = _5073_recursiveGen;
                    } else {
                      RAST._IType _5076_rhsType;
                      RAST._IType _out1419;
                      _out1419 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _5076_rhsType = _out1419;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5076_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5073_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1420;
                    DCOMP._IOwnership _out1421;
                    DCOMP.COMP.FromOwnership(r, _5074_recOwned, expectedOwnership, out _out1420, out _out1421);
                    r = _out1420;
                    resultingOwnership = _out1421;
                  } else {
                    RAST._IType _5077___mcc_h1762 = _source266.dtor_value;
                    RAST._IType _5078_v = _5077___mcc_h1762;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5073_recursiveGen, RAST.Expr.create_ExprFromType(_5078_v)));
                    RAST._IExpr _out1422;
                    DCOMP._IOwnership _out1423;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1422, out _out1423);
                    r = _out1422;
                    resultingOwnership = _out1423;
                  }
                } else {
                  if ((_5072_nativeToType).is_Some) {
                    DAST._IType _source267 = _3712_fromTpe;
                    if (_source267.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5079___mcc_h1763 = _source267.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5080___mcc_h1764 = _source267.dtor_typeArgs;
                      DAST._IResolvedType _5081___mcc_h1765 = _source267.dtor_resolved;
                      DAST._IResolvedType _source268 = _5081___mcc_h1765;
                      if (_source268.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5082___mcc_h1769 = _source268.dtor_datatypeType;
                      } else if (_source268.is_Datatype) {
                        DAST._IDatatypeType _5083___mcc_h1771 = _source268.dtor_datatypeType;
                      } else if (_source268.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5084___mcc_h1773 = _source268.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5085___mcc_h1774 = _source268.dtor_attributes;
                      } else {
                        DAST._IType _5086___mcc_h1777 = _source268.dtor_baseType;
                        DAST._INewtypeRange _5087___mcc_h1778 = _source268.dtor_range;
                        bool _5088___mcc_h1779 = _source268.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5089___mcc_h1780 = _source268.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5090_attributes0 = _5089___mcc_h1780;
                        bool _5091_erase0 = _5088___mcc_h1779;
                        DAST._INewtypeRange _5092_range0 = _5087___mcc_h1778;
                        DAST._IType _5093_b0 = _5086___mcc_h1777;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5094_nativeFromType;
                          _5094_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5093_b0, _5092_range0);
                          if ((_5094_nativeFromType).is_Some) {
                            RAST._IExpr _5095_recursiveGen;
                            DCOMP._IOwnership _5096_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5097_recIdents;
                            RAST._IExpr _out1424;
                            DCOMP._IOwnership _out1425;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1426;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1424, out _out1425, out _out1426);
                            _5095_recursiveGen = _out1424;
                            _5096_recOwned = _out1425;
                            _5097_recIdents = _out1426;
                            RAST._IExpr _out1427;
                            DCOMP._IOwnership _out1428;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5095_recursiveGen, (_5072_nativeToType).dtor_value), _5096_recOwned, expectedOwnership, out _out1427, out _out1428);
                            r = _out1427;
                            resultingOwnership = _out1428;
                            readIdents = _5097_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source267.is_Nullable) {
                      DAST._IType _5098___mcc_h1785 = _source267.dtor_Nullable_a0;
                    } else if (_source267.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5099___mcc_h1787 = _source267.dtor_Tuple_a0;
                    } else if (_source267.is_Array) {
                      DAST._IType _5100___mcc_h1789 = _source267.dtor_element;
                      BigInteger _5101___mcc_h1790 = _source267.dtor_dims;
                    } else if (_source267.is_Seq) {
                      DAST._IType _5102___mcc_h1793 = _source267.dtor_element;
                    } else if (_source267.is_Set) {
                      DAST._IType _5103___mcc_h1795 = _source267.dtor_element;
                    } else if (_source267.is_Multiset) {
                      DAST._IType _5104___mcc_h1797 = _source267.dtor_element;
                    } else if (_source267.is_Map) {
                      DAST._IType _5105___mcc_h1799 = _source267.dtor_key;
                      DAST._IType _5106___mcc_h1800 = _source267.dtor_value;
                    } else if (_source267.is_SetBuilder) {
                      DAST._IType _5107___mcc_h1803 = _source267.dtor_element;
                    } else if (_source267.is_MapBuilder) {
                      DAST._IType _5108___mcc_h1805 = _source267.dtor_key;
                      DAST._IType _5109___mcc_h1806 = _source267.dtor_value;
                    } else if (_source267.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5110___mcc_h1809 = _source267.dtor_args;
                      DAST._IType _5111___mcc_h1810 = _source267.dtor_result;
                    } else if (_source267.is_Primitive) {
                      DAST._IPrimitive _5112___mcc_h1813 = _source267.dtor_Primitive_a0;
                    } else if (_source267.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5113___mcc_h1815 = _source267.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5114___mcc_h1817 = _source267.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5115_recursiveGen;
                      DCOMP._IOwnership _5116_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5117_recIdents;
                      RAST._IExpr _out1429;
                      DCOMP._IOwnership _out1430;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1431;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1429, out _out1430, out _out1431);
                      _5115_recursiveGen = _out1429;
                      _5116_recOwned = _out1430;
                      _5117_recIdents = _out1431;
                      RAST._IExpr _out1432;
                      DCOMP._IOwnership _out1433;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5115_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5072_nativeToType).dtor_value), _5116_recOwned, expectedOwnership, out _out1432, out _out1433);
                      r = _out1432;
                      resultingOwnership = _out1433;
                      readIdents = _5117_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1434;
                  DCOMP._IOwnership _out1435;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1436;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _5071_b), _5071_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out1434, out _out1435, out _out1436);
                  r = _out1434;
                  resultingOwnership = _out1435;
                  readIdents = _out1436;
                }
              }
            }
          } else if (_source264.is_Nullable) {
            DAST._IType _5118___mcc_h598 = _source264.dtor_Nullable_a0;
            {
              RAST._IExpr _5119_recursiveGen;
              DCOMP._IOwnership _5120_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5121_recIdents;
              RAST._IExpr _out1437;
              DCOMP._IOwnership _out1438;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1439;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1437, out _out1438, out _out1439);
              _5119_recursiveGen = _out1437;
              _5120_recOwned = _out1438;
              _5121_recIdents = _out1439;
              r = _5119_recursiveGen;
              if (object.Equals(_5120_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1440;
              DCOMP._IOwnership _out1441;
              DCOMP.COMP.FromOwnership(r, _5120_recOwned, expectedOwnership, out _out1440, out _out1441);
              r = _out1440;
              resultingOwnership = _out1441;
              readIdents = _5121_recIdents;
            }
          } else if (_source264.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5122___mcc_h600 = _source264.dtor_Tuple_a0;
            {
              RAST._IType _5123_fromTpeGen;
              RAST._IType _out1442;
              _out1442 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5123_fromTpeGen = _out1442;
              RAST._IType _5124_toTpeGen;
              RAST._IType _out1443;
              _out1443 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5124_toTpeGen = _out1443;
              RAST._IExpr _5125_recursiveGen;
              DCOMP._IOwnership _5126_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5127_recIdents;
              RAST._IExpr _out1444;
              DCOMP._IOwnership _out1445;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1446;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1444, out _out1445, out _out1446);
              _5125_recursiveGen = _out1444;
              _5126_recOwned = _out1445;
              _5127_recIdents = _out1446;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5125_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5123_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5124_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1447;
              DCOMP._IOwnership _out1448;
              DCOMP.COMP.FromOwnership(r, _5126_recOwned, expectedOwnership, out _out1447, out _out1448);
              r = _out1447;
              resultingOwnership = _out1448;
              readIdents = _5127_recIdents;
            }
          } else if (_source264.is_Array) {
            DAST._IType _5128___mcc_h602 = _source264.dtor_element;
            BigInteger _5129___mcc_h603 = _source264.dtor_dims;
            {
              RAST._IType _5130_fromTpeGen;
              RAST._IType _out1449;
              _out1449 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5130_fromTpeGen = _out1449;
              RAST._IType _5131_toTpeGen;
              RAST._IType _out1450;
              _out1450 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5131_toTpeGen = _out1450;
              RAST._IExpr _5132_recursiveGen;
              DCOMP._IOwnership _5133_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5134_recIdents;
              RAST._IExpr _out1451;
              DCOMP._IOwnership _out1452;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1453;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1451, out _out1452, out _out1453);
              _5132_recursiveGen = _out1451;
              _5133_recOwned = _out1452;
              _5134_recIdents = _out1453;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5132_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5130_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5131_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1454;
              DCOMP._IOwnership _out1455;
              DCOMP.COMP.FromOwnership(r, _5133_recOwned, expectedOwnership, out _out1454, out _out1455);
              r = _out1454;
              resultingOwnership = _out1455;
              readIdents = _5134_recIdents;
            }
          } else if (_source264.is_Seq) {
            DAST._IType _5135___mcc_h606 = _source264.dtor_element;
            {
              RAST._IType _5136_fromTpeGen;
              RAST._IType _out1456;
              _out1456 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5136_fromTpeGen = _out1456;
              RAST._IType _5137_toTpeGen;
              RAST._IType _out1457;
              _out1457 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5137_toTpeGen = _out1457;
              RAST._IExpr _5138_recursiveGen;
              DCOMP._IOwnership _5139_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5140_recIdents;
              RAST._IExpr _out1458;
              DCOMP._IOwnership _out1459;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1460;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1458, out _out1459, out _out1460);
              _5138_recursiveGen = _out1458;
              _5139_recOwned = _out1459;
              _5140_recIdents = _out1460;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5138_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5136_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5137_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1461;
              DCOMP._IOwnership _out1462;
              DCOMP.COMP.FromOwnership(r, _5139_recOwned, expectedOwnership, out _out1461, out _out1462);
              r = _out1461;
              resultingOwnership = _out1462;
              readIdents = _5140_recIdents;
            }
          } else if (_source264.is_Set) {
            DAST._IType _5141___mcc_h608 = _source264.dtor_element;
            {
              RAST._IType _5142_fromTpeGen;
              RAST._IType _out1463;
              _out1463 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5142_fromTpeGen = _out1463;
              RAST._IType _5143_toTpeGen;
              RAST._IType _out1464;
              _out1464 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5143_toTpeGen = _out1464;
              RAST._IExpr _5144_recursiveGen;
              DCOMP._IOwnership _5145_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5146_recIdents;
              RAST._IExpr _out1465;
              DCOMP._IOwnership _out1466;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1467;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1465, out _out1466, out _out1467);
              _5144_recursiveGen = _out1465;
              _5145_recOwned = _out1466;
              _5146_recIdents = _out1467;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5144_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5142_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5143_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1468;
              DCOMP._IOwnership _out1469;
              DCOMP.COMP.FromOwnership(r, _5145_recOwned, expectedOwnership, out _out1468, out _out1469);
              r = _out1468;
              resultingOwnership = _out1469;
              readIdents = _5146_recIdents;
            }
          } else if (_source264.is_Multiset) {
            DAST._IType _5147___mcc_h610 = _source264.dtor_element;
            {
              RAST._IType _5148_fromTpeGen;
              RAST._IType _out1470;
              _out1470 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5148_fromTpeGen = _out1470;
              RAST._IType _5149_toTpeGen;
              RAST._IType _out1471;
              _out1471 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5149_toTpeGen = _out1471;
              RAST._IExpr _5150_recursiveGen;
              DCOMP._IOwnership _5151_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5152_recIdents;
              RAST._IExpr _out1472;
              DCOMP._IOwnership _out1473;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1474;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1472, out _out1473, out _out1474);
              _5150_recursiveGen = _out1472;
              _5151_recOwned = _out1473;
              _5152_recIdents = _out1474;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5150_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5148_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5149_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1475;
              DCOMP._IOwnership _out1476;
              DCOMP.COMP.FromOwnership(r, _5151_recOwned, expectedOwnership, out _out1475, out _out1476);
              r = _out1475;
              resultingOwnership = _out1476;
              readIdents = _5152_recIdents;
            }
          } else if (_source264.is_Map) {
            DAST._IType _5153___mcc_h612 = _source264.dtor_key;
            DAST._IType _5154___mcc_h613 = _source264.dtor_value;
            {
              RAST._IType _5155_fromTpeGen;
              RAST._IType _out1477;
              _out1477 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5155_fromTpeGen = _out1477;
              RAST._IType _5156_toTpeGen;
              RAST._IType _out1478;
              _out1478 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5156_toTpeGen = _out1478;
              RAST._IExpr _5157_recursiveGen;
              DCOMP._IOwnership _5158_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5159_recIdents;
              RAST._IExpr _out1479;
              DCOMP._IOwnership _out1480;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1481;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1479, out _out1480, out _out1481);
              _5157_recursiveGen = _out1479;
              _5158_recOwned = _out1480;
              _5159_recIdents = _out1481;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5157_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5155_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5156_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1482;
              DCOMP._IOwnership _out1483;
              DCOMP.COMP.FromOwnership(r, _5158_recOwned, expectedOwnership, out _out1482, out _out1483);
              r = _out1482;
              resultingOwnership = _out1483;
              readIdents = _5159_recIdents;
            }
          } else if (_source264.is_SetBuilder) {
            DAST._IType _5160___mcc_h616 = _source264.dtor_element;
            {
              RAST._IType _5161_fromTpeGen;
              RAST._IType _out1484;
              _out1484 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5161_fromTpeGen = _out1484;
              RAST._IType _5162_toTpeGen;
              RAST._IType _out1485;
              _out1485 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5162_toTpeGen = _out1485;
              RAST._IExpr _5163_recursiveGen;
              DCOMP._IOwnership _5164_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5165_recIdents;
              RAST._IExpr _out1486;
              DCOMP._IOwnership _out1487;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1488;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1486, out _out1487, out _out1488);
              _5163_recursiveGen = _out1486;
              _5164_recOwned = _out1487;
              _5165_recIdents = _out1488;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5163_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5161_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5162_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1489;
              DCOMP._IOwnership _out1490;
              DCOMP.COMP.FromOwnership(r, _5164_recOwned, expectedOwnership, out _out1489, out _out1490);
              r = _out1489;
              resultingOwnership = _out1490;
              readIdents = _5165_recIdents;
            }
          } else if (_source264.is_MapBuilder) {
            DAST._IType _5166___mcc_h618 = _source264.dtor_key;
            DAST._IType _5167___mcc_h619 = _source264.dtor_value;
            {
              RAST._IType _5168_fromTpeGen;
              RAST._IType _out1491;
              _out1491 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5168_fromTpeGen = _out1491;
              RAST._IType _5169_toTpeGen;
              RAST._IType _out1492;
              _out1492 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5169_toTpeGen = _out1492;
              RAST._IExpr _5170_recursiveGen;
              DCOMP._IOwnership _5171_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5172_recIdents;
              RAST._IExpr _out1493;
              DCOMP._IOwnership _out1494;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1495;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1493, out _out1494, out _out1495);
              _5170_recursiveGen = _out1493;
              _5171_recOwned = _out1494;
              _5172_recIdents = _out1495;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5170_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5168_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5169_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1496;
              DCOMP._IOwnership _out1497;
              DCOMP.COMP.FromOwnership(r, _5171_recOwned, expectedOwnership, out _out1496, out _out1497);
              r = _out1496;
              resultingOwnership = _out1497;
              readIdents = _5172_recIdents;
            }
          } else if (_source264.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5173___mcc_h622 = _source264.dtor_args;
            DAST._IType _5174___mcc_h623 = _source264.dtor_result;
            {
              RAST._IType _5175_fromTpeGen;
              RAST._IType _out1498;
              _out1498 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5175_fromTpeGen = _out1498;
              RAST._IType _5176_toTpeGen;
              RAST._IType _out1499;
              _out1499 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5176_toTpeGen = _out1499;
              RAST._IExpr _5177_recursiveGen;
              DCOMP._IOwnership _5178_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5179_recIdents;
              RAST._IExpr _out1500;
              DCOMP._IOwnership _out1501;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1502;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1500, out _out1501, out _out1502);
              _5177_recursiveGen = _out1500;
              _5178_recOwned = _out1501;
              _5179_recIdents = _out1502;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5177_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5175_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5176_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1503;
              DCOMP._IOwnership _out1504;
              DCOMP.COMP.FromOwnership(r, _5178_recOwned, expectedOwnership, out _out1503, out _out1504);
              r = _out1503;
              resultingOwnership = _out1504;
              readIdents = _5179_recIdents;
            }
          } else if (_source264.is_Primitive) {
            DAST._IPrimitive _5180___mcc_h626 = _source264.dtor_Primitive_a0;
            {
              RAST._IType _5181_fromTpeGen;
              RAST._IType _out1505;
              _out1505 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5181_fromTpeGen = _out1505;
              RAST._IType _5182_toTpeGen;
              RAST._IType _out1506;
              _out1506 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5182_toTpeGen = _out1506;
              RAST._IExpr _5183_recursiveGen;
              DCOMP._IOwnership _5184_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5185_recIdents;
              RAST._IExpr _out1507;
              DCOMP._IOwnership _out1508;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1509;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1507, out _out1508, out _out1509);
              _5183_recursiveGen = _out1507;
              _5184_recOwned = _out1508;
              _5185_recIdents = _out1509;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5183_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5181_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5182_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1510;
              DCOMP._IOwnership _out1511;
              DCOMP.COMP.FromOwnership(r, _5184_recOwned, expectedOwnership, out _out1510, out _out1511);
              r = _out1510;
              resultingOwnership = _out1511;
              readIdents = _5185_recIdents;
            }
          } else if (_source264.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5186___mcc_h628 = _source264.dtor_Passthrough_a0;
            {
              RAST._IType _5187_fromTpeGen;
              RAST._IType _out1512;
              _out1512 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5187_fromTpeGen = _out1512;
              RAST._IType _5188_toTpeGen;
              RAST._IType _out1513;
              _out1513 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5188_toTpeGen = _out1513;
              RAST._IExpr _5189_recursiveGen;
              DCOMP._IOwnership _5190_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5191_recIdents;
              RAST._IExpr _out1514;
              DCOMP._IOwnership _out1515;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1516;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1514, out _out1515, out _out1516);
              _5189_recursiveGen = _out1514;
              _5190_recOwned = _out1515;
              _5191_recIdents = _out1516;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5189_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5187_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5188_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1517;
              DCOMP._IOwnership _out1518;
              DCOMP.COMP.FromOwnership(r, _5190_recOwned, expectedOwnership, out _out1517, out _out1518);
              r = _out1517;
              resultingOwnership = _out1518;
              readIdents = _5191_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5192___mcc_h630 = _source264.dtor_TypeArg_a0;
            {
              RAST._IType _5193_fromTpeGen;
              RAST._IType _out1519;
              _out1519 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5193_fromTpeGen = _out1519;
              RAST._IType _5194_toTpeGen;
              RAST._IType _out1520;
              _out1520 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5194_toTpeGen = _out1520;
              RAST._IExpr _5195_recursiveGen;
              DCOMP._IOwnership _5196_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5197_recIdents;
              RAST._IExpr _out1521;
              DCOMP._IOwnership _out1522;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1523;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1521, out _out1522, out _out1523);
              _5195_recursiveGen = _out1521;
              _5196_recOwned = _out1522;
              _5197_recIdents = _out1523;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5195_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5193_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5194_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1524;
              DCOMP._IOwnership _out1525;
              DCOMP.COMP.FromOwnership(r, _5196_recOwned, expectedOwnership, out _out1524, out _out1525);
              r = _out1524;
              resultingOwnership = _out1525;
              readIdents = _5197_recIdents;
            }
          }
        } else if (_source210.is_Multiset) {
          DAST._IType _5198___mcc_h632 = _source210.dtor_element;
          DAST._IType _source269 = _3718___mcc_h1;
          if (_source269.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5199___mcc_h636 = _source269.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5200___mcc_h637 = _source269.dtor_typeArgs;
            DAST._IResolvedType _5201___mcc_h638 = _source269.dtor_resolved;
            DAST._IResolvedType _source270 = _5201___mcc_h638;
            if (_source270.is_AllocatedDatatype) {
              DAST._IDatatypeType _5202___mcc_h642 = _source270.dtor_datatypeType;
              {
                RAST._IType _5203_fromTpeGen;
                RAST._IType _out1526;
                _out1526 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5203_fromTpeGen = _out1526;
                RAST._IType _5204_toTpeGen;
                RAST._IType _out1527;
                _out1527 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5204_toTpeGen = _out1527;
                RAST._IExpr _5205_recursiveGen;
                DCOMP._IOwnership _5206_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5207_recIdents;
                RAST._IExpr _out1528;
                DCOMP._IOwnership _out1529;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1530;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1528, out _out1529, out _out1530);
                _5205_recursiveGen = _out1528;
                _5206_recOwned = _out1529;
                _5207_recIdents = _out1530;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5205_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5203_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5204_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1531;
                DCOMP._IOwnership _out1532;
                DCOMP.COMP.FromOwnership(r, _5206_recOwned, expectedOwnership, out _out1531, out _out1532);
                r = _out1531;
                resultingOwnership = _out1532;
                readIdents = _5207_recIdents;
              }
            } else if (_source270.is_Datatype) {
              DAST._IDatatypeType _5208___mcc_h644 = _source270.dtor_datatypeType;
              {
                RAST._IType _5209_fromTpeGen;
                RAST._IType _out1533;
                _out1533 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5209_fromTpeGen = _out1533;
                RAST._IType _5210_toTpeGen;
                RAST._IType _out1534;
                _out1534 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5210_toTpeGen = _out1534;
                RAST._IExpr _5211_recursiveGen;
                DCOMP._IOwnership _5212_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5213_recIdents;
                RAST._IExpr _out1535;
                DCOMP._IOwnership _out1536;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1537;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1535, out _out1536, out _out1537);
                _5211_recursiveGen = _out1535;
                _5212_recOwned = _out1536;
                _5213_recIdents = _out1537;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5211_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5209_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5210_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1538;
                DCOMP._IOwnership _out1539;
                DCOMP.COMP.FromOwnership(r, _5212_recOwned, expectedOwnership, out _out1538, out _out1539);
                r = _out1538;
                resultingOwnership = _out1539;
                readIdents = _5213_recIdents;
              }
            } else if (_source270.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5214___mcc_h646 = _source270.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5215___mcc_h647 = _source270.dtor_attributes;
              {
                RAST._IType _5216_fromTpeGen;
                RAST._IType _out1540;
                _out1540 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5216_fromTpeGen = _out1540;
                RAST._IType _5217_toTpeGen;
                RAST._IType _out1541;
                _out1541 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5217_toTpeGen = _out1541;
                RAST._IExpr _5218_recursiveGen;
                DCOMP._IOwnership _5219_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5220_recIdents;
                RAST._IExpr _out1542;
                DCOMP._IOwnership _out1543;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1544;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1542, out _out1543, out _out1544);
                _5218_recursiveGen = _out1542;
                _5219_recOwned = _out1543;
                _5220_recIdents = _out1544;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5218_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5216_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5217_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1545;
                DCOMP._IOwnership _out1546;
                DCOMP.COMP.FromOwnership(r, _5219_recOwned, expectedOwnership, out _out1545, out _out1546);
                r = _out1545;
                resultingOwnership = _out1546;
                readIdents = _5220_recIdents;
              }
            } else {
              DAST._IType _5221___mcc_h650 = _source270.dtor_baseType;
              DAST._INewtypeRange _5222___mcc_h651 = _source270.dtor_range;
              bool _5223___mcc_h652 = _source270.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5224___mcc_h653 = _source270.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5225_attributes = _5224___mcc_h653;
              bool _5226_erase = _5223___mcc_h652;
              DAST._INewtypeRange _5227_range = _5222___mcc_h651;
              DAST._IType _5228_b = _5221___mcc_h650;
              {
                Std.Wrappers._IOption<RAST._IType> _5229_nativeToType;
                _5229_nativeToType = DCOMP.COMP.NewtypeToRustType(_5228_b, _5227_range);
                if (object.Equals(_3712_fromTpe, _5228_b)) {
                  RAST._IExpr _5230_recursiveGen;
                  DCOMP._IOwnership _5231_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5232_recIdents;
                  RAST._IExpr _out1547;
                  DCOMP._IOwnership _out1548;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1549;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1547, out _out1548, out _out1549);
                  _5230_recursiveGen = _out1547;
                  _5231_recOwned = _out1548;
                  _5232_recIdents = _out1549;
                  readIdents = _5232_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source271 = _5229_nativeToType;
                  if (_source271.is_None) {
                    if (_5226_erase) {
                      r = _5230_recursiveGen;
                    } else {
                      RAST._IType _5233_rhsType;
                      RAST._IType _out1550;
                      _out1550 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _5233_rhsType = _out1550;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5233_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5230_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1551;
                    DCOMP._IOwnership _out1552;
                    DCOMP.COMP.FromOwnership(r, _5231_recOwned, expectedOwnership, out _out1551, out _out1552);
                    r = _out1551;
                    resultingOwnership = _out1552;
                  } else {
                    RAST._IType _5234___mcc_h1819 = _source271.dtor_value;
                    RAST._IType _5235_v = _5234___mcc_h1819;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5230_recursiveGen, RAST.Expr.create_ExprFromType(_5235_v)));
                    RAST._IExpr _out1553;
                    DCOMP._IOwnership _out1554;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1553, out _out1554);
                    r = _out1553;
                    resultingOwnership = _out1554;
                  }
                } else {
                  if ((_5229_nativeToType).is_Some) {
                    DAST._IType _source272 = _3712_fromTpe;
                    if (_source272.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5236___mcc_h1820 = _source272.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5237___mcc_h1821 = _source272.dtor_typeArgs;
                      DAST._IResolvedType _5238___mcc_h1822 = _source272.dtor_resolved;
                      DAST._IResolvedType _source273 = _5238___mcc_h1822;
                      if (_source273.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5239___mcc_h1826 = _source273.dtor_datatypeType;
                      } else if (_source273.is_Datatype) {
                        DAST._IDatatypeType _5240___mcc_h1828 = _source273.dtor_datatypeType;
                      } else if (_source273.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5241___mcc_h1830 = _source273.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5242___mcc_h1831 = _source273.dtor_attributes;
                      } else {
                        DAST._IType _5243___mcc_h1834 = _source273.dtor_baseType;
                        DAST._INewtypeRange _5244___mcc_h1835 = _source273.dtor_range;
                        bool _5245___mcc_h1836 = _source273.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5246___mcc_h1837 = _source273.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5247_attributes0 = _5246___mcc_h1837;
                        bool _5248_erase0 = _5245___mcc_h1836;
                        DAST._INewtypeRange _5249_range0 = _5244___mcc_h1835;
                        DAST._IType _5250_b0 = _5243___mcc_h1834;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5251_nativeFromType;
                          _5251_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5250_b0, _5249_range0);
                          if ((_5251_nativeFromType).is_Some) {
                            RAST._IExpr _5252_recursiveGen;
                            DCOMP._IOwnership _5253_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5254_recIdents;
                            RAST._IExpr _out1555;
                            DCOMP._IOwnership _out1556;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1557;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1555, out _out1556, out _out1557);
                            _5252_recursiveGen = _out1555;
                            _5253_recOwned = _out1556;
                            _5254_recIdents = _out1557;
                            RAST._IExpr _out1558;
                            DCOMP._IOwnership _out1559;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5252_recursiveGen, (_5229_nativeToType).dtor_value), _5253_recOwned, expectedOwnership, out _out1558, out _out1559);
                            r = _out1558;
                            resultingOwnership = _out1559;
                            readIdents = _5254_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source272.is_Nullable) {
                      DAST._IType _5255___mcc_h1842 = _source272.dtor_Nullable_a0;
                    } else if (_source272.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5256___mcc_h1844 = _source272.dtor_Tuple_a0;
                    } else if (_source272.is_Array) {
                      DAST._IType _5257___mcc_h1846 = _source272.dtor_element;
                      BigInteger _5258___mcc_h1847 = _source272.dtor_dims;
                    } else if (_source272.is_Seq) {
                      DAST._IType _5259___mcc_h1850 = _source272.dtor_element;
                    } else if (_source272.is_Set) {
                      DAST._IType _5260___mcc_h1852 = _source272.dtor_element;
                    } else if (_source272.is_Multiset) {
                      DAST._IType _5261___mcc_h1854 = _source272.dtor_element;
                    } else if (_source272.is_Map) {
                      DAST._IType _5262___mcc_h1856 = _source272.dtor_key;
                      DAST._IType _5263___mcc_h1857 = _source272.dtor_value;
                    } else if (_source272.is_SetBuilder) {
                      DAST._IType _5264___mcc_h1860 = _source272.dtor_element;
                    } else if (_source272.is_MapBuilder) {
                      DAST._IType _5265___mcc_h1862 = _source272.dtor_key;
                      DAST._IType _5266___mcc_h1863 = _source272.dtor_value;
                    } else if (_source272.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5267___mcc_h1866 = _source272.dtor_args;
                      DAST._IType _5268___mcc_h1867 = _source272.dtor_result;
                    } else if (_source272.is_Primitive) {
                      DAST._IPrimitive _5269___mcc_h1870 = _source272.dtor_Primitive_a0;
                    } else if (_source272.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5270___mcc_h1872 = _source272.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5271___mcc_h1874 = _source272.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5272_recursiveGen;
                      DCOMP._IOwnership _5273_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5274_recIdents;
                      RAST._IExpr _out1560;
                      DCOMP._IOwnership _out1561;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1562;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1560, out _out1561, out _out1562);
                      _5272_recursiveGen = _out1560;
                      _5273_recOwned = _out1561;
                      _5274_recIdents = _out1562;
                      RAST._IExpr _out1563;
                      DCOMP._IOwnership _out1564;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5272_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5229_nativeToType).dtor_value), _5273_recOwned, expectedOwnership, out _out1563, out _out1564);
                      r = _out1563;
                      resultingOwnership = _out1564;
                      readIdents = _5274_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1565;
                  DCOMP._IOwnership _out1566;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1567;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _5228_b), _5228_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out1565, out _out1566, out _out1567);
                  r = _out1565;
                  resultingOwnership = _out1566;
                  readIdents = _out1567;
                }
              }
            }
          } else if (_source269.is_Nullable) {
            DAST._IType _5275___mcc_h658 = _source269.dtor_Nullable_a0;
            {
              RAST._IExpr _5276_recursiveGen;
              DCOMP._IOwnership _5277_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5278_recIdents;
              RAST._IExpr _out1568;
              DCOMP._IOwnership _out1569;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1570;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1568, out _out1569, out _out1570);
              _5276_recursiveGen = _out1568;
              _5277_recOwned = _out1569;
              _5278_recIdents = _out1570;
              r = _5276_recursiveGen;
              if (object.Equals(_5277_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1571;
              DCOMP._IOwnership _out1572;
              DCOMP.COMP.FromOwnership(r, _5277_recOwned, expectedOwnership, out _out1571, out _out1572);
              r = _out1571;
              resultingOwnership = _out1572;
              readIdents = _5278_recIdents;
            }
          } else if (_source269.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5279___mcc_h660 = _source269.dtor_Tuple_a0;
            {
              RAST._IType _5280_fromTpeGen;
              RAST._IType _out1573;
              _out1573 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5280_fromTpeGen = _out1573;
              RAST._IType _5281_toTpeGen;
              RAST._IType _out1574;
              _out1574 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5281_toTpeGen = _out1574;
              RAST._IExpr _5282_recursiveGen;
              DCOMP._IOwnership _5283_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5284_recIdents;
              RAST._IExpr _out1575;
              DCOMP._IOwnership _out1576;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1577;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1575, out _out1576, out _out1577);
              _5282_recursiveGen = _out1575;
              _5283_recOwned = _out1576;
              _5284_recIdents = _out1577;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5282_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5280_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5281_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1578;
              DCOMP._IOwnership _out1579;
              DCOMP.COMP.FromOwnership(r, _5283_recOwned, expectedOwnership, out _out1578, out _out1579);
              r = _out1578;
              resultingOwnership = _out1579;
              readIdents = _5284_recIdents;
            }
          } else if (_source269.is_Array) {
            DAST._IType _5285___mcc_h662 = _source269.dtor_element;
            BigInteger _5286___mcc_h663 = _source269.dtor_dims;
            {
              RAST._IType _5287_fromTpeGen;
              RAST._IType _out1580;
              _out1580 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5287_fromTpeGen = _out1580;
              RAST._IType _5288_toTpeGen;
              RAST._IType _out1581;
              _out1581 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5288_toTpeGen = _out1581;
              RAST._IExpr _5289_recursiveGen;
              DCOMP._IOwnership _5290_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5291_recIdents;
              RAST._IExpr _out1582;
              DCOMP._IOwnership _out1583;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1584;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1582, out _out1583, out _out1584);
              _5289_recursiveGen = _out1582;
              _5290_recOwned = _out1583;
              _5291_recIdents = _out1584;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5289_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5287_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5288_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1585;
              DCOMP._IOwnership _out1586;
              DCOMP.COMP.FromOwnership(r, _5290_recOwned, expectedOwnership, out _out1585, out _out1586);
              r = _out1585;
              resultingOwnership = _out1586;
              readIdents = _5291_recIdents;
            }
          } else if (_source269.is_Seq) {
            DAST._IType _5292___mcc_h666 = _source269.dtor_element;
            {
              RAST._IType _5293_fromTpeGen;
              RAST._IType _out1587;
              _out1587 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5293_fromTpeGen = _out1587;
              RAST._IType _5294_toTpeGen;
              RAST._IType _out1588;
              _out1588 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5294_toTpeGen = _out1588;
              RAST._IExpr _5295_recursiveGen;
              DCOMP._IOwnership _5296_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5297_recIdents;
              RAST._IExpr _out1589;
              DCOMP._IOwnership _out1590;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1591;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1589, out _out1590, out _out1591);
              _5295_recursiveGen = _out1589;
              _5296_recOwned = _out1590;
              _5297_recIdents = _out1591;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5295_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5293_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5294_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1592;
              DCOMP._IOwnership _out1593;
              DCOMP.COMP.FromOwnership(r, _5296_recOwned, expectedOwnership, out _out1592, out _out1593);
              r = _out1592;
              resultingOwnership = _out1593;
              readIdents = _5297_recIdents;
            }
          } else if (_source269.is_Set) {
            DAST._IType _5298___mcc_h668 = _source269.dtor_element;
            {
              RAST._IType _5299_fromTpeGen;
              RAST._IType _out1594;
              _out1594 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5299_fromTpeGen = _out1594;
              RAST._IType _5300_toTpeGen;
              RAST._IType _out1595;
              _out1595 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5300_toTpeGen = _out1595;
              RAST._IExpr _5301_recursiveGen;
              DCOMP._IOwnership _5302_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5303_recIdents;
              RAST._IExpr _out1596;
              DCOMP._IOwnership _out1597;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1598;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1596, out _out1597, out _out1598);
              _5301_recursiveGen = _out1596;
              _5302_recOwned = _out1597;
              _5303_recIdents = _out1598;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5301_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5299_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5300_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1599;
              DCOMP._IOwnership _out1600;
              DCOMP.COMP.FromOwnership(r, _5302_recOwned, expectedOwnership, out _out1599, out _out1600);
              r = _out1599;
              resultingOwnership = _out1600;
              readIdents = _5303_recIdents;
            }
          } else if (_source269.is_Multiset) {
            DAST._IType _5304___mcc_h670 = _source269.dtor_element;
            {
              RAST._IType _5305_fromTpeGen;
              RAST._IType _out1601;
              _out1601 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5305_fromTpeGen = _out1601;
              RAST._IType _5306_toTpeGen;
              RAST._IType _out1602;
              _out1602 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5306_toTpeGen = _out1602;
              RAST._IExpr _5307_recursiveGen;
              DCOMP._IOwnership _5308_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5309_recIdents;
              RAST._IExpr _out1603;
              DCOMP._IOwnership _out1604;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1605;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1603, out _out1604, out _out1605);
              _5307_recursiveGen = _out1603;
              _5308_recOwned = _out1604;
              _5309_recIdents = _out1605;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5307_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5305_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5306_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1606;
              DCOMP._IOwnership _out1607;
              DCOMP.COMP.FromOwnership(r, _5308_recOwned, expectedOwnership, out _out1606, out _out1607);
              r = _out1606;
              resultingOwnership = _out1607;
              readIdents = _5309_recIdents;
            }
          } else if (_source269.is_Map) {
            DAST._IType _5310___mcc_h672 = _source269.dtor_key;
            DAST._IType _5311___mcc_h673 = _source269.dtor_value;
            {
              RAST._IType _5312_fromTpeGen;
              RAST._IType _out1608;
              _out1608 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5312_fromTpeGen = _out1608;
              RAST._IType _5313_toTpeGen;
              RAST._IType _out1609;
              _out1609 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5313_toTpeGen = _out1609;
              RAST._IExpr _5314_recursiveGen;
              DCOMP._IOwnership _5315_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5316_recIdents;
              RAST._IExpr _out1610;
              DCOMP._IOwnership _out1611;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1612;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1610, out _out1611, out _out1612);
              _5314_recursiveGen = _out1610;
              _5315_recOwned = _out1611;
              _5316_recIdents = _out1612;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5314_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5312_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5313_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1613;
              DCOMP._IOwnership _out1614;
              DCOMP.COMP.FromOwnership(r, _5315_recOwned, expectedOwnership, out _out1613, out _out1614);
              r = _out1613;
              resultingOwnership = _out1614;
              readIdents = _5316_recIdents;
            }
          } else if (_source269.is_SetBuilder) {
            DAST._IType _5317___mcc_h676 = _source269.dtor_element;
            {
              RAST._IType _5318_fromTpeGen;
              RAST._IType _out1615;
              _out1615 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5318_fromTpeGen = _out1615;
              RAST._IType _5319_toTpeGen;
              RAST._IType _out1616;
              _out1616 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5319_toTpeGen = _out1616;
              RAST._IExpr _5320_recursiveGen;
              DCOMP._IOwnership _5321_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5322_recIdents;
              RAST._IExpr _out1617;
              DCOMP._IOwnership _out1618;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1619;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1617, out _out1618, out _out1619);
              _5320_recursiveGen = _out1617;
              _5321_recOwned = _out1618;
              _5322_recIdents = _out1619;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5320_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5318_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5319_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1620;
              DCOMP._IOwnership _out1621;
              DCOMP.COMP.FromOwnership(r, _5321_recOwned, expectedOwnership, out _out1620, out _out1621);
              r = _out1620;
              resultingOwnership = _out1621;
              readIdents = _5322_recIdents;
            }
          } else if (_source269.is_MapBuilder) {
            DAST._IType _5323___mcc_h678 = _source269.dtor_key;
            DAST._IType _5324___mcc_h679 = _source269.dtor_value;
            {
              RAST._IType _5325_fromTpeGen;
              RAST._IType _out1622;
              _out1622 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5325_fromTpeGen = _out1622;
              RAST._IType _5326_toTpeGen;
              RAST._IType _out1623;
              _out1623 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5326_toTpeGen = _out1623;
              RAST._IExpr _5327_recursiveGen;
              DCOMP._IOwnership _5328_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5329_recIdents;
              RAST._IExpr _out1624;
              DCOMP._IOwnership _out1625;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1626;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1624, out _out1625, out _out1626);
              _5327_recursiveGen = _out1624;
              _5328_recOwned = _out1625;
              _5329_recIdents = _out1626;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5327_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5325_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5326_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1627;
              DCOMP._IOwnership _out1628;
              DCOMP.COMP.FromOwnership(r, _5328_recOwned, expectedOwnership, out _out1627, out _out1628);
              r = _out1627;
              resultingOwnership = _out1628;
              readIdents = _5329_recIdents;
            }
          } else if (_source269.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5330___mcc_h682 = _source269.dtor_args;
            DAST._IType _5331___mcc_h683 = _source269.dtor_result;
            {
              RAST._IType _5332_fromTpeGen;
              RAST._IType _out1629;
              _out1629 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5332_fromTpeGen = _out1629;
              RAST._IType _5333_toTpeGen;
              RAST._IType _out1630;
              _out1630 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5333_toTpeGen = _out1630;
              RAST._IExpr _5334_recursiveGen;
              DCOMP._IOwnership _5335_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5336_recIdents;
              RAST._IExpr _out1631;
              DCOMP._IOwnership _out1632;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1633;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1631, out _out1632, out _out1633);
              _5334_recursiveGen = _out1631;
              _5335_recOwned = _out1632;
              _5336_recIdents = _out1633;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5334_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5332_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5333_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1634;
              DCOMP._IOwnership _out1635;
              DCOMP.COMP.FromOwnership(r, _5335_recOwned, expectedOwnership, out _out1634, out _out1635);
              r = _out1634;
              resultingOwnership = _out1635;
              readIdents = _5336_recIdents;
            }
          } else if (_source269.is_Primitive) {
            DAST._IPrimitive _5337___mcc_h686 = _source269.dtor_Primitive_a0;
            {
              RAST._IType _5338_fromTpeGen;
              RAST._IType _out1636;
              _out1636 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5338_fromTpeGen = _out1636;
              RAST._IType _5339_toTpeGen;
              RAST._IType _out1637;
              _out1637 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5339_toTpeGen = _out1637;
              RAST._IExpr _5340_recursiveGen;
              DCOMP._IOwnership _5341_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5342_recIdents;
              RAST._IExpr _out1638;
              DCOMP._IOwnership _out1639;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1640;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1638, out _out1639, out _out1640);
              _5340_recursiveGen = _out1638;
              _5341_recOwned = _out1639;
              _5342_recIdents = _out1640;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5340_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5338_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5339_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1641;
              DCOMP._IOwnership _out1642;
              DCOMP.COMP.FromOwnership(r, _5341_recOwned, expectedOwnership, out _out1641, out _out1642);
              r = _out1641;
              resultingOwnership = _out1642;
              readIdents = _5342_recIdents;
            }
          } else if (_source269.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5343___mcc_h688 = _source269.dtor_Passthrough_a0;
            {
              RAST._IType _5344_fromTpeGen;
              RAST._IType _out1643;
              _out1643 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5344_fromTpeGen = _out1643;
              RAST._IType _5345_toTpeGen;
              RAST._IType _out1644;
              _out1644 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5345_toTpeGen = _out1644;
              RAST._IExpr _5346_recursiveGen;
              DCOMP._IOwnership _5347_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5348_recIdents;
              RAST._IExpr _out1645;
              DCOMP._IOwnership _out1646;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1647;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1645, out _out1646, out _out1647);
              _5346_recursiveGen = _out1645;
              _5347_recOwned = _out1646;
              _5348_recIdents = _out1647;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5346_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5344_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5345_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1648;
              DCOMP._IOwnership _out1649;
              DCOMP.COMP.FromOwnership(r, _5347_recOwned, expectedOwnership, out _out1648, out _out1649);
              r = _out1648;
              resultingOwnership = _out1649;
              readIdents = _5348_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5349___mcc_h690 = _source269.dtor_TypeArg_a0;
            {
              RAST._IType _5350_fromTpeGen;
              RAST._IType _out1650;
              _out1650 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5350_fromTpeGen = _out1650;
              RAST._IType _5351_toTpeGen;
              RAST._IType _out1651;
              _out1651 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5351_toTpeGen = _out1651;
              RAST._IExpr _5352_recursiveGen;
              DCOMP._IOwnership _5353_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5354_recIdents;
              RAST._IExpr _out1652;
              DCOMP._IOwnership _out1653;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1654;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1652, out _out1653, out _out1654);
              _5352_recursiveGen = _out1652;
              _5353_recOwned = _out1653;
              _5354_recIdents = _out1654;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5352_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5350_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5351_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1655;
              DCOMP._IOwnership _out1656;
              DCOMP.COMP.FromOwnership(r, _5353_recOwned, expectedOwnership, out _out1655, out _out1656);
              r = _out1655;
              resultingOwnership = _out1656;
              readIdents = _5354_recIdents;
            }
          }
        } else if (_source210.is_Map) {
          DAST._IType _5355___mcc_h692 = _source210.dtor_key;
          DAST._IType _5356___mcc_h693 = _source210.dtor_value;
          DAST._IType _source274 = _3718___mcc_h1;
          if (_source274.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5357___mcc_h700 = _source274.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5358___mcc_h701 = _source274.dtor_typeArgs;
            DAST._IResolvedType _5359___mcc_h702 = _source274.dtor_resolved;
            DAST._IResolvedType _source275 = _5359___mcc_h702;
            if (_source275.is_AllocatedDatatype) {
              DAST._IDatatypeType _5360___mcc_h706 = _source275.dtor_datatypeType;
              {
                RAST._IType _5361_fromTpeGen;
                RAST._IType _out1657;
                _out1657 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5361_fromTpeGen = _out1657;
                RAST._IType _5362_toTpeGen;
                RAST._IType _out1658;
                _out1658 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5362_toTpeGen = _out1658;
                RAST._IExpr _5363_recursiveGen;
                DCOMP._IOwnership _5364_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5365_recIdents;
                RAST._IExpr _out1659;
                DCOMP._IOwnership _out1660;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1661;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1659, out _out1660, out _out1661);
                _5363_recursiveGen = _out1659;
                _5364_recOwned = _out1660;
                _5365_recIdents = _out1661;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5363_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5361_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5362_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1662;
                DCOMP._IOwnership _out1663;
                DCOMP.COMP.FromOwnership(r, _5364_recOwned, expectedOwnership, out _out1662, out _out1663);
                r = _out1662;
                resultingOwnership = _out1663;
                readIdents = _5365_recIdents;
              }
            } else if (_source275.is_Datatype) {
              DAST._IDatatypeType _5366___mcc_h708 = _source275.dtor_datatypeType;
              {
                RAST._IType _5367_fromTpeGen;
                RAST._IType _out1664;
                _out1664 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5367_fromTpeGen = _out1664;
                RAST._IType _5368_toTpeGen;
                RAST._IType _out1665;
                _out1665 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5368_toTpeGen = _out1665;
                RAST._IExpr _5369_recursiveGen;
                DCOMP._IOwnership _5370_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5371_recIdents;
                RAST._IExpr _out1666;
                DCOMP._IOwnership _out1667;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1668;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1666, out _out1667, out _out1668);
                _5369_recursiveGen = _out1666;
                _5370_recOwned = _out1667;
                _5371_recIdents = _out1668;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5369_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5367_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5368_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1669;
                DCOMP._IOwnership _out1670;
                DCOMP.COMP.FromOwnership(r, _5370_recOwned, expectedOwnership, out _out1669, out _out1670);
                r = _out1669;
                resultingOwnership = _out1670;
                readIdents = _5371_recIdents;
              }
            } else if (_source275.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5372___mcc_h710 = _source275.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5373___mcc_h711 = _source275.dtor_attributes;
              {
                RAST._IType _5374_fromTpeGen;
                RAST._IType _out1671;
                _out1671 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5374_fromTpeGen = _out1671;
                RAST._IType _5375_toTpeGen;
                RAST._IType _out1672;
                _out1672 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5375_toTpeGen = _out1672;
                RAST._IExpr _5376_recursiveGen;
                DCOMP._IOwnership _5377_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5378_recIdents;
                RAST._IExpr _out1673;
                DCOMP._IOwnership _out1674;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1675;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1673, out _out1674, out _out1675);
                _5376_recursiveGen = _out1673;
                _5377_recOwned = _out1674;
                _5378_recIdents = _out1675;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5376_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5374_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5375_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1676;
                DCOMP._IOwnership _out1677;
                DCOMP.COMP.FromOwnership(r, _5377_recOwned, expectedOwnership, out _out1676, out _out1677);
                r = _out1676;
                resultingOwnership = _out1677;
                readIdents = _5378_recIdents;
              }
            } else {
              DAST._IType _5379___mcc_h714 = _source275.dtor_baseType;
              DAST._INewtypeRange _5380___mcc_h715 = _source275.dtor_range;
              bool _5381___mcc_h716 = _source275.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5382___mcc_h717 = _source275.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5383_attributes = _5382___mcc_h717;
              bool _5384_erase = _5381___mcc_h716;
              DAST._INewtypeRange _5385_range = _5380___mcc_h715;
              DAST._IType _5386_b = _5379___mcc_h714;
              {
                Std.Wrappers._IOption<RAST._IType> _5387_nativeToType;
                _5387_nativeToType = DCOMP.COMP.NewtypeToRustType(_5386_b, _5385_range);
                if (object.Equals(_3712_fromTpe, _5386_b)) {
                  RAST._IExpr _5388_recursiveGen;
                  DCOMP._IOwnership _5389_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5390_recIdents;
                  RAST._IExpr _out1678;
                  DCOMP._IOwnership _out1679;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1680;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1678, out _out1679, out _out1680);
                  _5388_recursiveGen = _out1678;
                  _5389_recOwned = _out1679;
                  _5390_recIdents = _out1680;
                  readIdents = _5390_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source276 = _5387_nativeToType;
                  if (_source276.is_None) {
                    if (_5384_erase) {
                      r = _5388_recursiveGen;
                    } else {
                      RAST._IType _5391_rhsType;
                      RAST._IType _out1681;
                      _out1681 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _5391_rhsType = _out1681;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5391_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5388_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1682;
                    DCOMP._IOwnership _out1683;
                    DCOMP.COMP.FromOwnership(r, _5389_recOwned, expectedOwnership, out _out1682, out _out1683);
                    r = _out1682;
                    resultingOwnership = _out1683;
                  } else {
                    RAST._IType _5392___mcc_h1876 = _source276.dtor_value;
                    RAST._IType _5393_v = _5392___mcc_h1876;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5388_recursiveGen, RAST.Expr.create_ExprFromType(_5393_v)));
                    RAST._IExpr _out1684;
                    DCOMP._IOwnership _out1685;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1684, out _out1685);
                    r = _out1684;
                    resultingOwnership = _out1685;
                  }
                } else {
                  if ((_5387_nativeToType).is_Some) {
                    DAST._IType _source277 = _3712_fromTpe;
                    if (_source277.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5394___mcc_h1877 = _source277.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5395___mcc_h1878 = _source277.dtor_typeArgs;
                      DAST._IResolvedType _5396___mcc_h1879 = _source277.dtor_resolved;
                      DAST._IResolvedType _source278 = _5396___mcc_h1879;
                      if (_source278.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5397___mcc_h1883 = _source278.dtor_datatypeType;
                      } else if (_source278.is_Datatype) {
                        DAST._IDatatypeType _5398___mcc_h1885 = _source278.dtor_datatypeType;
                      } else if (_source278.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5399___mcc_h1887 = _source278.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5400___mcc_h1888 = _source278.dtor_attributes;
                      } else {
                        DAST._IType _5401___mcc_h1891 = _source278.dtor_baseType;
                        DAST._INewtypeRange _5402___mcc_h1892 = _source278.dtor_range;
                        bool _5403___mcc_h1893 = _source278.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5404___mcc_h1894 = _source278.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5405_attributes0 = _5404___mcc_h1894;
                        bool _5406_erase0 = _5403___mcc_h1893;
                        DAST._INewtypeRange _5407_range0 = _5402___mcc_h1892;
                        DAST._IType _5408_b0 = _5401___mcc_h1891;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5409_nativeFromType;
                          _5409_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5408_b0, _5407_range0);
                          if ((_5409_nativeFromType).is_Some) {
                            RAST._IExpr _5410_recursiveGen;
                            DCOMP._IOwnership _5411_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5412_recIdents;
                            RAST._IExpr _out1686;
                            DCOMP._IOwnership _out1687;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1688;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1686, out _out1687, out _out1688);
                            _5410_recursiveGen = _out1686;
                            _5411_recOwned = _out1687;
                            _5412_recIdents = _out1688;
                            RAST._IExpr _out1689;
                            DCOMP._IOwnership _out1690;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5410_recursiveGen, (_5387_nativeToType).dtor_value), _5411_recOwned, expectedOwnership, out _out1689, out _out1690);
                            r = _out1689;
                            resultingOwnership = _out1690;
                            readIdents = _5412_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source277.is_Nullable) {
                      DAST._IType _5413___mcc_h1899 = _source277.dtor_Nullable_a0;
                    } else if (_source277.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5414___mcc_h1901 = _source277.dtor_Tuple_a0;
                    } else if (_source277.is_Array) {
                      DAST._IType _5415___mcc_h1903 = _source277.dtor_element;
                      BigInteger _5416___mcc_h1904 = _source277.dtor_dims;
                    } else if (_source277.is_Seq) {
                      DAST._IType _5417___mcc_h1907 = _source277.dtor_element;
                    } else if (_source277.is_Set) {
                      DAST._IType _5418___mcc_h1909 = _source277.dtor_element;
                    } else if (_source277.is_Multiset) {
                      DAST._IType _5419___mcc_h1911 = _source277.dtor_element;
                    } else if (_source277.is_Map) {
                      DAST._IType _5420___mcc_h1913 = _source277.dtor_key;
                      DAST._IType _5421___mcc_h1914 = _source277.dtor_value;
                    } else if (_source277.is_SetBuilder) {
                      DAST._IType _5422___mcc_h1917 = _source277.dtor_element;
                    } else if (_source277.is_MapBuilder) {
                      DAST._IType _5423___mcc_h1919 = _source277.dtor_key;
                      DAST._IType _5424___mcc_h1920 = _source277.dtor_value;
                    } else if (_source277.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5425___mcc_h1923 = _source277.dtor_args;
                      DAST._IType _5426___mcc_h1924 = _source277.dtor_result;
                    } else if (_source277.is_Primitive) {
                      DAST._IPrimitive _5427___mcc_h1927 = _source277.dtor_Primitive_a0;
                    } else if (_source277.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5428___mcc_h1929 = _source277.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5429___mcc_h1931 = _source277.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5430_recursiveGen;
                      DCOMP._IOwnership _5431_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5432_recIdents;
                      RAST._IExpr _out1691;
                      DCOMP._IOwnership _out1692;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1693;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1691, out _out1692, out _out1693);
                      _5430_recursiveGen = _out1691;
                      _5431_recOwned = _out1692;
                      _5432_recIdents = _out1693;
                      RAST._IExpr _out1694;
                      DCOMP._IOwnership _out1695;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5430_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5387_nativeToType).dtor_value), _5431_recOwned, expectedOwnership, out _out1694, out _out1695);
                      r = _out1694;
                      resultingOwnership = _out1695;
                      readIdents = _5432_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1696;
                  DCOMP._IOwnership _out1697;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1698;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _5386_b), _5386_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out1696, out _out1697, out _out1698);
                  r = _out1696;
                  resultingOwnership = _out1697;
                  readIdents = _out1698;
                }
              }
            }
          } else if (_source274.is_Nullable) {
            DAST._IType _5433___mcc_h722 = _source274.dtor_Nullable_a0;
            {
              RAST._IExpr _5434_recursiveGen;
              DCOMP._IOwnership _5435_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5436_recIdents;
              RAST._IExpr _out1699;
              DCOMP._IOwnership _out1700;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1701;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1699, out _out1700, out _out1701);
              _5434_recursiveGen = _out1699;
              _5435_recOwned = _out1700;
              _5436_recIdents = _out1701;
              r = _5434_recursiveGen;
              if (object.Equals(_5435_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1702;
              DCOMP._IOwnership _out1703;
              DCOMP.COMP.FromOwnership(r, _5435_recOwned, expectedOwnership, out _out1702, out _out1703);
              r = _out1702;
              resultingOwnership = _out1703;
              readIdents = _5436_recIdents;
            }
          } else if (_source274.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5437___mcc_h724 = _source274.dtor_Tuple_a0;
            {
              RAST._IType _5438_fromTpeGen;
              RAST._IType _out1704;
              _out1704 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5438_fromTpeGen = _out1704;
              RAST._IType _5439_toTpeGen;
              RAST._IType _out1705;
              _out1705 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5439_toTpeGen = _out1705;
              RAST._IExpr _5440_recursiveGen;
              DCOMP._IOwnership _5441_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5442_recIdents;
              RAST._IExpr _out1706;
              DCOMP._IOwnership _out1707;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1708;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1706, out _out1707, out _out1708);
              _5440_recursiveGen = _out1706;
              _5441_recOwned = _out1707;
              _5442_recIdents = _out1708;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5440_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5438_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5439_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1709;
              DCOMP._IOwnership _out1710;
              DCOMP.COMP.FromOwnership(r, _5441_recOwned, expectedOwnership, out _out1709, out _out1710);
              r = _out1709;
              resultingOwnership = _out1710;
              readIdents = _5442_recIdents;
            }
          } else if (_source274.is_Array) {
            DAST._IType _5443___mcc_h726 = _source274.dtor_element;
            BigInteger _5444___mcc_h727 = _source274.dtor_dims;
            {
              RAST._IType _5445_fromTpeGen;
              RAST._IType _out1711;
              _out1711 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5445_fromTpeGen = _out1711;
              RAST._IType _5446_toTpeGen;
              RAST._IType _out1712;
              _out1712 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5446_toTpeGen = _out1712;
              RAST._IExpr _5447_recursiveGen;
              DCOMP._IOwnership _5448_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5449_recIdents;
              RAST._IExpr _out1713;
              DCOMP._IOwnership _out1714;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1715;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1713, out _out1714, out _out1715);
              _5447_recursiveGen = _out1713;
              _5448_recOwned = _out1714;
              _5449_recIdents = _out1715;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5447_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5445_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5446_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1716;
              DCOMP._IOwnership _out1717;
              DCOMP.COMP.FromOwnership(r, _5448_recOwned, expectedOwnership, out _out1716, out _out1717);
              r = _out1716;
              resultingOwnership = _out1717;
              readIdents = _5449_recIdents;
            }
          } else if (_source274.is_Seq) {
            DAST._IType _5450___mcc_h730 = _source274.dtor_element;
            {
              RAST._IType _5451_fromTpeGen;
              RAST._IType _out1718;
              _out1718 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5451_fromTpeGen = _out1718;
              RAST._IType _5452_toTpeGen;
              RAST._IType _out1719;
              _out1719 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5452_toTpeGen = _out1719;
              RAST._IExpr _5453_recursiveGen;
              DCOMP._IOwnership _5454_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5455_recIdents;
              RAST._IExpr _out1720;
              DCOMP._IOwnership _out1721;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1722;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1720, out _out1721, out _out1722);
              _5453_recursiveGen = _out1720;
              _5454_recOwned = _out1721;
              _5455_recIdents = _out1722;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5453_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5451_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5452_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1723;
              DCOMP._IOwnership _out1724;
              DCOMP.COMP.FromOwnership(r, _5454_recOwned, expectedOwnership, out _out1723, out _out1724);
              r = _out1723;
              resultingOwnership = _out1724;
              readIdents = _5455_recIdents;
            }
          } else if (_source274.is_Set) {
            DAST._IType _5456___mcc_h732 = _source274.dtor_element;
            {
              RAST._IType _5457_fromTpeGen;
              RAST._IType _out1725;
              _out1725 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5457_fromTpeGen = _out1725;
              RAST._IType _5458_toTpeGen;
              RAST._IType _out1726;
              _out1726 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5458_toTpeGen = _out1726;
              RAST._IExpr _5459_recursiveGen;
              DCOMP._IOwnership _5460_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5461_recIdents;
              RAST._IExpr _out1727;
              DCOMP._IOwnership _out1728;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1729;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1727, out _out1728, out _out1729);
              _5459_recursiveGen = _out1727;
              _5460_recOwned = _out1728;
              _5461_recIdents = _out1729;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5459_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5457_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5458_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1730;
              DCOMP._IOwnership _out1731;
              DCOMP.COMP.FromOwnership(r, _5460_recOwned, expectedOwnership, out _out1730, out _out1731);
              r = _out1730;
              resultingOwnership = _out1731;
              readIdents = _5461_recIdents;
            }
          } else if (_source274.is_Multiset) {
            DAST._IType _5462___mcc_h734 = _source274.dtor_element;
            {
              RAST._IType _5463_fromTpeGen;
              RAST._IType _out1732;
              _out1732 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5463_fromTpeGen = _out1732;
              RAST._IType _5464_toTpeGen;
              RAST._IType _out1733;
              _out1733 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5464_toTpeGen = _out1733;
              RAST._IExpr _5465_recursiveGen;
              DCOMP._IOwnership _5466_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5467_recIdents;
              RAST._IExpr _out1734;
              DCOMP._IOwnership _out1735;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1736;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1734, out _out1735, out _out1736);
              _5465_recursiveGen = _out1734;
              _5466_recOwned = _out1735;
              _5467_recIdents = _out1736;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5465_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5463_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5464_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1737;
              DCOMP._IOwnership _out1738;
              DCOMP.COMP.FromOwnership(r, _5466_recOwned, expectedOwnership, out _out1737, out _out1738);
              r = _out1737;
              resultingOwnership = _out1738;
              readIdents = _5467_recIdents;
            }
          } else if (_source274.is_Map) {
            DAST._IType _5468___mcc_h736 = _source274.dtor_key;
            DAST._IType _5469___mcc_h737 = _source274.dtor_value;
            {
              RAST._IType _5470_fromTpeGen;
              RAST._IType _out1739;
              _out1739 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5470_fromTpeGen = _out1739;
              RAST._IType _5471_toTpeGen;
              RAST._IType _out1740;
              _out1740 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5471_toTpeGen = _out1740;
              RAST._IExpr _5472_recursiveGen;
              DCOMP._IOwnership _5473_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5474_recIdents;
              RAST._IExpr _out1741;
              DCOMP._IOwnership _out1742;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1743;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1741, out _out1742, out _out1743);
              _5472_recursiveGen = _out1741;
              _5473_recOwned = _out1742;
              _5474_recIdents = _out1743;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5472_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5470_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5471_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1744;
              DCOMP._IOwnership _out1745;
              DCOMP.COMP.FromOwnership(r, _5473_recOwned, expectedOwnership, out _out1744, out _out1745);
              r = _out1744;
              resultingOwnership = _out1745;
              readIdents = _5474_recIdents;
            }
          } else if (_source274.is_SetBuilder) {
            DAST._IType _5475___mcc_h740 = _source274.dtor_element;
            {
              RAST._IType _5476_fromTpeGen;
              RAST._IType _out1746;
              _out1746 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5476_fromTpeGen = _out1746;
              RAST._IType _5477_toTpeGen;
              RAST._IType _out1747;
              _out1747 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5477_toTpeGen = _out1747;
              RAST._IExpr _5478_recursiveGen;
              DCOMP._IOwnership _5479_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5480_recIdents;
              RAST._IExpr _out1748;
              DCOMP._IOwnership _out1749;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1750;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1748, out _out1749, out _out1750);
              _5478_recursiveGen = _out1748;
              _5479_recOwned = _out1749;
              _5480_recIdents = _out1750;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5478_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5476_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5477_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1751;
              DCOMP._IOwnership _out1752;
              DCOMP.COMP.FromOwnership(r, _5479_recOwned, expectedOwnership, out _out1751, out _out1752);
              r = _out1751;
              resultingOwnership = _out1752;
              readIdents = _5480_recIdents;
            }
          } else if (_source274.is_MapBuilder) {
            DAST._IType _5481___mcc_h742 = _source274.dtor_key;
            DAST._IType _5482___mcc_h743 = _source274.dtor_value;
            {
              RAST._IType _5483_fromTpeGen;
              RAST._IType _out1753;
              _out1753 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5483_fromTpeGen = _out1753;
              RAST._IType _5484_toTpeGen;
              RAST._IType _out1754;
              _out1754 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5484_toTpeGen = _out1754;
              RAST._IExpr _5485_recursiveGen;
              DCOMP._IOwnership _5486_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5487_recIdents;
              RAST._IExpr _out1755;
              DCOMP._IOwnership _out1756;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1757;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1755, out _out1756, out _out1757);
              _5485_recursiveGen = _out1755;
              _5486_recOwned = _out1756;
              _5487_recIdents = _out1757;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5485_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5483_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5484_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1758;
              DCOMP._IOwnership _out1759;
              DCOMP.COMP.FromOwnership(r, _5486_recOwned, expectedOwnership, out _out1758, out _out1759);
              r = _out1758;
              resultingOwnership = _out1759;
              readIdents = _5487_recIdents;
            }
          } else if (_source274.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5488___mcc_h746 = _source274.dtor_args;
            DAST._IType _5489___mcc_h747 = _source274.dtor_result;
            {
              RAST._IType _5490_fromTpeGen;
              RAST._IType _out1760;
              _out1760 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5490_fromTpeGen = _out1760;
              RAST._IType _5491_toTpeGen;
              RAST._IType _out1761;
              _out1761 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5491_toTpeGen = _out1761;
              RAST._IExpr _5492_recursiveGen;
              DCOMP._IOwnership _5493_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5494_recIdents;
              RAST._IExpr _out1762;
              DCOMP._IOwnership _out1763;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1764;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1762, out _out1763, out _out1764);
              _5492_recursiveGen = _out1762;
              _5493_recOwned = _out1763;
              _5494_recIdents = _out1764;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5492_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5490_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5491_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1765;
              DCOMP._IOwnership _out1766;
              DCOMP.COMP.FromOwnership(r, _5493_recOwned, expectedOwnership, out _out1765, out _out1766);
              r = _out1765;
              resultingOwnership = _out1766;
              readIdents = _5494_recIdents;
            }
          } else if (_source274.is_Primitive) {
            DAST._IPrimitive _5495___mcc_h750 = _source274.dtor_Primitive_a0;
            {
              RAST._IType _5496_fromTpeGen;
              RAST._IType _out1767;
              _out1767 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5496_fromTpeGen = _out1767;
              RAST._IType _5497_toTpeGen;
              RAST._IType _out1768;
              _out1768 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5497_toTpeGen = _out1768;
              RAST._IExpr _5498_recursiveGen;
              DCOMP._IOwnership _5499_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5500_recIdents;
              RAST._IExpr _out1769;
              DCOMP._IOwnership _out1770;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1771;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1769, out _out1770, out _out1771);
              _5498_recursiveGen = _out1769;
              _5499_recOwned = _out1770;
              _5500_recIdents = _out1771;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5498_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5496_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5497_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1772;
              DCOMP._IOwnership _out1773;
              DCOMP.COMP.FromOwnership(r, _5499_recOwned, expectedOwnership, out _out1772, out _out1773);
              r = _out1772;
              resultingOwnership = _out1773;
              readIdents = _5500_recIdents;
            }
          } else if (_source274.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5501___mcc_h752 = _source274.dtor_Passthrough_a0;
            {
              RAST._IType _5502_fromTpeGen;
              RAST._IType _out1774;
              _out1774 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5502_fromTpeGen = _out1774;
              RAST._IType _5503_toTpeGen;
              RAST._IType _out1775;
              _out1775 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5503_toTpeGen = _out1775;
              RAST._IExpr _5504_recursiveGen;
              DCOMP._IOwnership _5505_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5506_recIdents;
              RAST._IExpr _out1776;
              DCOMP._IOwnership _out1777;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1778;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1776, out _out1777, out _out1778);
              _5504_recursiveGen = _out1776;
              _5505_recOwned = _out1777;
              _5506_recIdents = _out1778;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5504_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5502_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5503_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1779;
              DCOMP._IOwnership _out1780;
              DCOMP.COMP.FromOwnership(r, _5505_recOwned, expectedOwnership, out _out1779, out _out1780);
              r = _out1779;
              resultingOwnership = _out1780;
              readIdents = _5506_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5507___mcc_h754 = _source274.dtor_TypeArg_a0;
            {
              RAST._IType _5508_fromTpeGen;
              RAST._IType _out1781;
              _out1781 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5508_fromTpeGen = _out1781;
              RAST._IType _5509_toTpeGen;
              RAST._IType _out1782;
              _out1782 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5509_toTpeGen = _out1782;
              RAST._IExpr _5510_recursiveGen;
              DCOMP._IOwnership _5511_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5512_recIdents;
              RAST._IExpr _out1783;
              DCOMP._IOwnership _out1784;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1785;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1783, out _out1784, out _out1785);
              _5510_recursiveGen = _out1783;
              _5511_recOwned = _out1784;
              _5512_recIdents = _out1785;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5510_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5508_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5509_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1786;
              DCOMP._IOwnership _out1787;
              DCOMP.COMP.FromOwnership(r, _5511_recOwned, expectedOwnership, out _out1786, out _out1787);
              r = _out1786;
              resultingOwnership = _out1787;
              readIdents = _5512_recIdents;
            }
          }
        } else if (_source210.is_SetBuilder) {
          DAST._IType _5513___mcc_h756 = _source210.dtor_element;
          DAST._IType _source279 = _3718___mcc_h1;
          if (_source279.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5514___mcc_h760 = _source279.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5515___mcc_h761 = _source279.dtor_typeArgs;
            DAST._IResolvedType _5516___mcc_h762 = _source279.dtor_resolved;
            DAST._IResolvedType _source280 = _5516___mcc_h762;
            if (_source280.is_AllocatedDatatype) {
              DAST._IDatatypeType _5517___mcc_h766 = _source280.dtor_datatypeType;
              {
                RAST._IType _5518_fromTpeGen;
                RAST._IType _out1788;
                _out1788 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5518_fromTpeGen = _out1788;
                RAST._IType _5519_toTpeGen;
                RAST._IType _out1789;
                _out1789 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5519_toTpeGen = _out1789;
                RAST._IExpr _5520_recursiveGen;
                DCOMP._IOwnership _5521_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5522_recIdents;
                RAST._IExpr _out1790;
                DCOMP._IOwnership _out1791;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1792;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1790, out _out1791, out _out1792);
                _5520_recursiveGen = _out1790;
                _5521_recOwned = _out1791;
                _5522_recIdents = _out1792;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5520_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5518_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5519_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1793;
                DCOMP._IOwnership _out1794;
                DCOMP.COMP.FromOwnership(r, _5521_recOwned, expectedOwnership, out _out1793, out _out1794);
                r = _out1793;
                resultingOwnership = _out1794;
                readIdents = _5522_recIdents;
              }
            } else if (_source280.is_Datatype) {
              DAST._IDatatypeType _5523___mcc_h768 = _source280.dtor_datatypeType;
              {
                RAST._IType _5524_fromTpeGen;
                RAST._IType _out1795;
                _out1795 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5524_fromTpeGen = _out1795;
                RAST._IType _5525_toTpeGen;
                RAST._IType _out1796;
                _out1796 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5525_toTpeGen = _out1796;
                RAST._IExpr _5526_recursiveGen;
                DCOMP._IOwnership _5527_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5528_recIdents;
                RAST._IExpr _out1797;
                DCOMP._IOwnership _out1798;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1799;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1797, out _out1798, out _out1799);
                _5526_recursiveGen = _out1797;
                _5527_recOwned = _out1798;
                _5528_recIdents = _out1799;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5526_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5524_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5525_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1800;
                DCOMP._IOwnership _out1801;
                DCOMP.COMP.FromOwnership(r, _5527_recOwned, expectedOwnership, out _out1800, out _out1801);
                r = _out1800;
                resultingOwnership = _out1801;
                readIdents = _5528_recIdents;
              }
            } else if (_source280.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5529___mcc_h770 = _source280.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5530___mcc_h771 = _source280.dtor_attributes;
              {
                RAST._IType _5531_fromTpeGen;
                RAST._IType _out1802;
                _out1802 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5531_fromTpeGen = _out1802;
                RAST._IType _5532_toTpeGen;
                RAST._IType _out1803;
                _out1803 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5532_toTpeGen = _out1803;
                RAST._IExpr _5533_recursiveGen;
                DCOMP._IOwnership _5534_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5535_recIdents;
                RAST._IExpr _out1804;
                DCOMP._IOwnership _out1805;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1806;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1804, out _out1805, out _out1806);
                _5533_recursiveGen = _out1804;
                _5534_recOwned = _out1805;
                _5535_recIdents = _out1806;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5533_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5531_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5532_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1807;
                DCOMP._IOwnership _out1808;
                DCOMP.COMP.FromOwnership(r, _5534_recOwned, expectedOwnership, out _out1807, out _out1808);
                r = _out1807;
                resultingOwnership = _out1808;
                readIdents = _5535_recIdents;
              }
            } else {
              DAST._IType _5536___mcc_h774 = _source280.dtor_baseType;
              DAST._INewtypeRange _5537___mcc_h775 = _source280.dtor_range;
              bool _5538___mcc_h776 = _source280.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5539___mcc_h777 = _source280.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5540_attributes = _5539___mcc_h777;
              bool _5541_erase = _5538___mcc_h776;
              DAST._INewtypeRange _5542_range = _5537___mcc_h775;
              DAST._IType _5543_b = _5536___mcc_h774;
              {
                Std.Wrappers._IOption<RAST._IType> _5544_nativeToType;
                _5544_nativeToType = DCOMP.COMP.NewtypeToRustType(_5543_b, _5542_range);
                if (object.Equals(_3712_fromTpe, _5543_b)) {
                  RAST._IExpr _5545_recursiveGen;
                  DCOMP._IOwnership _5546_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5547_recIdents;
                  RAST._IExpr _out1809;
                  DCOMP._IOwnership _out1810;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1811;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1809, out _out1810, out _out1811);
                  _5545_recursiveGen = _out1809;
                  _5546_recOwned = _out1810;
                  _5547_recIdents = _out1811;
                  readIdents = _5547_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source281 = _5544_nativeToType;
                  if (_source281.is_None) {
                    if (_5541_erase) {
                      r = _5545_recursiveGen;
                    } else {
                      RAST._IType _5548_rhsType;
                      RAST._IType _out1812;
                      _out1812 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _5548_rhsType = _out1812;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5548_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5545_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1813;
                    DCOMP._IOwnership _out1814;
                    DCOMP.COMP.FromOwnership(r, _5546_recOwned, expectedOwnership, out _out1813, out _out1814);
                    r = _out1813;
                    resultingOwnership = _out1814;
                  } else {
                    RAST._IType _5549___mcc_h1933 = _source281.dtor_value;
                    RAST._IType _5550_v = _5549___mcc_h1933;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5545_recursiveGen, RAST.Expr.create_ExprFromType(_5550_v)));
                    RAST._IExpr _out1815;
                    DCOMP._IOwnership _out1816;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1815, out _out1816);
                    r = _out1815;
                    resultingOwnership = _out1816;
                  }
                } else {
                  if ((_5544_nativeToType).is_Some) {
                    DAST._IType _source282 = _3712_fromTpe;
                    if (_source282.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5551___mcc_h1934 = _source282.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5552___mcc_h1935 = _source282.dtor_typeArgs;
                      DAST._IResolvedType _5553___mcc_h1936 = _source282.dtor_resolved;
                      DAST._IResolvedType _source283 = _5553___mcc_h1936;
                      if (_source283.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5554___mcc_h1940 = _source283.dtor_datatypeType;
                      } else if (_source283.is_Datatype) {
                        DAST._IDatatypeType _5555___mcc_h1942 = _source283.dtor_datatypeType;
                      } else if (_source283.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5556___mcc_h1944 = _source283.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5557___mcc_h1945 = _source283.dtor_attributes;
                      } else {
                        DAST._IType _5558___mcc_h1948 = _source283.dtor_baseType;
                        DAST._INewtypeRange _5559___mcc_h1949 = _source283.dtor_range;
                        bool _5560___mcc_h1950 = _source283.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5561___mcc_h1951 = _source283.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5562_attributes0 = _5561___mcc_h1951;
                        bool _5563_erase0 = _5560___mcc_h1950;
                        DAST._INewtypeRange _5564_range0 = _5559___mcc_h1949;
                        DAST._IType _5565_b0 = _5558___mcc_h1948;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5566_nativeFromType;
                          _5566_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5565_b0, _5564_range0);
                          if ((_5566_nativeFromType).is_Some) {
                            RAST._IExpr _5567_recursiveGen;
                            DCOMP._IOwnership _5568_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5569_recIdents;
                            RAST._IExpr _out1817;
                            DCOMP._IOwnership _out1818;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1819;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1817, out _out1818, out _out1819);
                            _5567_recursiveGen = _out1817;
                            _5568_recOwned = _out1818;
                            _5569_recIdents = _out1819;
                            RAST._IExpr _out1820;
                            DCOMP._IOwnership _out1821;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5567_recursiveGen, (_5544_nativeToType).dtor_value), _5568_recOwned, expectedOwnership, out _out1820, out _out1821);
                            r = _out1820;
                            resultingOwnership = _out1821;
                            readIdents = _5569_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source282.is_Nullable) {
                      DAST._IType _5570___mcc_h1956 = _source282.dtor_Nullable_a0;
                    } else if (_source282.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5571___mcc_h1958 = _source282.dtor_Tuple_a0;
                    } else if (_source282.is_Array) {
                      DAST._IType _5572___mcc_h1960 = _source282.dtor_element;
                      BigInteger _5573___mcc_h1961 = _source282.dtor_dims;
                    } else if (_source282.is_Seq) {
                      DAST._IType _5574___mcc_h1964 = _source282.dtor_element;
                    } else if (_source282.is_Set) {
                      DAST._IType _5575___mcc_h1966 = _source282.dtor_element;
                    } else if (_source282.is_Multiset) {
                      DAST._IType _5576___mcc_h1968 = _source282.dtor_element;
                    } else if (_source282.is_Map) {
                      DAST._IType _5577___mcc_h1970 = _source282.dtor_key;
                      DAST._IType _5578___mcc_h1971 = _source282.dtor_value;
                    } else if (_source282.is_SetBuilder) {
                      DAST._IType _5579___mcc_h1974 = _source282.dtor_element;
                    } else if (_source282.is_MapBuilder) {
                      DAST._IType _5580___mcc_h1976 = _source282.dtor_key;
                      DAST._IType _5581___mcc_h1977 = _source282.dtor_value;
                    } else if (_source282.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5582___mcc_h1980 = _source282.dtor_args;
                      DAST._IType _5583___mcc_h1981 = _source282.dtor_result;
                    } else if (_source282.is_Primitive) {
                      DAST._IPrimitive _5584___mcc_h1984 = _source282.dtor_Primitive_a0;
                    } else if (_source282.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5585___mcc_h1986 = _source282.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5586___mcc_h1988 = _source282.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5587_recursiveGen;
                      DCOMP._IOwnership _5588_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5589_recIdents;
                      RAST._IExpr _out1822;
                      DCOMP._IOwnership _out1823;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1824;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1822, out _out1823, out _out1824);
                      _5587_recursiveGen = _out1822;
                      _5588_recOwned = _out1823;
                      _5589_recIdents = _out1824;
                      RAST._IExpr _out1825;
                      DCOMP._IOwnership _out1826;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5587_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5544_nativeToType).dtor_value), _5588_recOwned, expectedOwnership, out _out1825, out _out1826);
                      r = _out1825;
                      resultingOwnership = _out1826;
                      readIdents = _5589_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1827;
                  DCOMP._IOwnership _out1828;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1829;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _5543_b), _5543_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out1827, out _out1828, out _out1829);
                  r = _out1827;
                  resultingOwnership = _out1828;
                  readIdents = _out1829;
                }
              }
            }
          } else if (_source279.is_Nullable) {
            DAST._IType _5590___mcc_h782 = _source279.dtor_Nullable_a0;
            {
              RAST._IExpr _5591_recursiveGen;
              DCOMP._IOwnership _5592_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5593_recIdents;
              RAST._IExpr _out1830;
              DCOMP._IOwnership _out1831;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1832;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1830, out _out1831, out _out1832);
              _5591_recursiveGen = _out1830;
              _5592_recOwned = _out1831;
              _5593_recIdents = _out1832;
              r = _5591_recursiveGen;
              if (object.Equals(_5592_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1833;
              DCOMP._IOwnership _out1834;
              DCOMP.COMP.FromOwnership(r, _5592_recOwned, expectedOwnership, out _out1833, out _out1834);
              r = _out1833;
              resultingOwnership = _out1834;
              readIdents = _5593_recIdents;
            }
          } else if (_source279.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5594___mcc_h784 = _source279.dtor_Tuple_a0;
            {
              RAST._IType _5595_fromTpeGen;
              RAST._IType _out1835;
              _out1835 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5595_fromTpeGen = _out1835;
              RAST._IType _5596_toTpeGen;
              RAST._IType _out1836;
              _out1836 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5596_toTpeGen = _out1836;
              RAST._IExpr _5597_recursiveGen;
              DCOMP._IOwnership _5598_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5599_recIdents;
              RAST._IExpr _out1837;
              DCOMP._IOwnership _out1838;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1839;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1837, out _out1838, out _out1839);
              _5597_recursiveGen = _out1837;
              _5598_recOwned = _out1838;
              _5599_recIdents = _out1839;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5597_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5595_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5596_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1840;
              DCOMP._IOwnership _out1841;
              DCOMP.COMP.FromOwnership(r, _5598_recOwned, expectedOwnership, out _out1840, out _out1841);
              r = _out1840;
              resultingOwnership = _out1841;
              readIdents = _5599_recIdents;
            }
          } else if (_source279.is_Array) {
            DAST._IType _5600___mcc_h786 = _source279.dtor_element;
            BigInteger _5601___mcc_h787 = _source279.dtor_dims;
            {
              RAST._IType _5602_fromTpeGen;
              RAST._IType _out1842;
              _out1842 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5602_fromTpeGen = _out1842;
              RAST._IType _5603_toTpeGen;
              RAST._IType _out1843;
              _out1843 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5603_toTpeGen = _out1843;
              RAST._IExpr _5604_recursiveGen;
              DCOMP._IOwnership _5605_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5606_recIdents;
              RAST._IExpr _out1844;
              DCOMP._IOwnership _out1845;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1846;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1844, out _out1845, out _out1846);
              _5604_recursiveGen = _out1844;
              _5605_recOwned = _out1845;
              _5606_recIdents = _out1846;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5604_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5602_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5603_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1847;
              DCOMP._IOwnership _out1848;
              DCOMP.COMP.FromOwnership(r, _5605_recOwned, expectedOwnership, out _out1847, out _out1848);
              r = _out1847;
              resultingOwnership = _out1848;
              readIdents = _5606_recIdents;
            }
          } else if (_source279.is_Seq) {
            DAST._IType _5607___mcc_h790 = _source279.dtor_element;
            {
              RAST._IType _5608_fromTpeGen;
              RAST._IType _out1849;
              _out1849 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5608_fromTpeGen = _out1849;
              RAST._IType _5609_toTpeGen;
              RAST._IType _out1850;
              _out1850 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5609_toTpeGen = _out1850;
              RAST._IExpr _5610_recursiveGen;
              DCOMP._IOwnership _5611_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5612_recIdents;
              RAST._IExpr _out1851;
              DCOMP._IOwnership _out1852;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1853;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1851, out _out1852, out _out1853);
              _5610_recursiveGen = _out1851;
              _5611_recOwned = _out1852;
              _5612_recIdents = _out1853;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5610_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5608_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5609_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1854;
              DCOMP._IOwnership _out1855;
              DCOMP.COMP.FromOwnership(r, _5611_recOwned, expectedOwnership, out _out1854, out _out1855);
              r = _out1854;
              resultingOwnership = _out1855;
              readIdents = _5612_recIdents;
            }
          } else if (_source279.is_Set) {
            DAST._IType _5613___mcc_h792 = _source279.dtor_element;
            {
              RAST._IType _5614_fromTpeGen;
              RAST._IType _out1856;
              _out1856 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5614_fromTpeGen = _out1856;
              RAST._IType _5615_toTpeGen;
              RAST._IType _out1857;
              _out1857 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5615_toTpeGen = _out1857;
              RAST._IExpr _5616_recursiveGen;
              DCOMP._IOwnership _5617_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5618_recIdents;
              RAST._IExpr _out1858;
              DCOMP._IOwnership _out1859;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1860;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1858, out _out1859, out _out1860);
              _5616_recursiveGen = _out1858;
              _5617_recOwned = _out1859;
              _5618_recIdents = _out1860;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5616_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5614_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5615_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1861;
              DCOMP._IOwnership _out1862;
              DCOMP.COMP.FromOwnership(r, _5617_recOwned, expectedOwnership, out _out1861, out _out1862);
              r = _out1861;
              resultingOwnership = _out1862;
              readIdents = _5618_recIdents;
            }
          } else if (_source279.is_Multiset) {
            DAST._IType _5619___mcc_h794 = _source279.dtor_element;
            {
              RAST._IType _5620_fromTpeGen;
              RAST._IType _out1863;
              _out1863 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5620_fromTpeGen = _out1863;
              RAST._IType _5621_toTpeGen;
              RAST._IType _out1864;
              _out1864 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5621_toTpeGen = _out1864;
              RAST._IExpr _5622_recursiveGen;
              DCOMP._IOwnership _5623_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5624_recIdents;
              RAST._IExpr _out1865;
              DCOMP._IOwnership _out1866;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1867;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1865, out _out1866, out _out1867);
              _5622_recursiveGen = _out1865;
              _5623_recOwned = _out1866;
              _5624_recIdents = _out1867;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5622_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5620_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5621_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1868;
              DCOMP._IOwnership _out1869;
              DCOMP.COMP.FromOwnership(r, _5623_recOwned, expectedOwnership, out _out1868, out _out1869);
              r = _out1868;
              resultingOwnership = _out1869;
              readIdents = _5624_recIdents;
            }
          } else if (_source279.is_Map) {
            DAST._IType _5625___mcc_h796 = _source279.dtor_key;
            DAST._IType _5626___mcc_h797 = _source279.dtor_value;
            {
              RAST._IType _5627_fromTpeGen;
              RAST._IType _out1870;
              _out1870 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5627_fromTpeGen = _out1870;
              RAST._IType _5628_toTpeGen;
              RAST._IType _out1871;
              _out1871 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5628_toTpeGen = _out1871;
              RAST._IExpr _5629_recursiveGen;
              DCOMP._IOwnership _5630_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5631_recIdents;
              RAST._IExpr _out1872;
              DCOMP._IOwnership _out1873;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1874;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1872, out _out1873, out _out1874);
              _5629_recursiveGen = _out1872;
              _5630_recOwned = _out1873;
              _5631_recIdents = _out1874;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5629_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5627_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5628_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1875;
              DCOMP._IOwnership _out1876;
              DCOMP.COMP.FromOwnership(r, _5630_recOwned, expectedOwnership, out _out1875, out _out1876);
              r = _out1875;
              resultingOwnership = _out1876;
              readIdents = _5631_recIdents;
            }
          } else if (_source279.is_SetBuilder) {
            DAST._IType _5632___mcc_h800 = _source279.dtor_element;
            {
              RAST._IType _5633_fromTpeGen;
              RAST._IType _out1877;
              _out1877 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5633_fromTpeGen = _out1877;
              RAST._IType _5634_toTpeGen;
              RAST._IType _out1878;
              _out1878 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5634_toTpeGen = _out1878;
              RAST._IExpr _5635_recursiveGen;
              DCOMP._IOwnership _5636_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5637_recIdents;
              RAST._IExpr _out1879;
              DCOMP._IOwnership _out1880;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1881;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1879, out _out1880, out _out1881);
              _5635_recursiveGen = _out1879;
              _5636_recOwned = _out1880;
              _5637_recIdents = _out1881;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5635_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5633_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5634_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1882;
              DCOMP._IOwnership _out1883;
              DCOMP.COMP.FromOwnership(r, _5636_recOwned, expectedOwnership, out _out1882, out _out1883);
              r = _out1882;
              resultingOwnership = _out1883;
              readIdents = _5637_recIdents;
            }
          } else if (_source279.is_MapBuilder) {
            DAST._IType _5638___mcc_h802 = _source279.dtor_key;
            DAST._IType _5639___mcc_h803 = _source279.dtor_value;
            {
              RAST._IType _5640_fromTpeGen;
              RAST._IType _out1884;
              _out1884 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5640_fromTpeGen = _out1884;
              RAST._IType _5641_toTpeGen;
              RAST._IType _out1885;
              _out1885 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5641_toTpeGen = _out1885;
              RAST._IExpr _5642_recursiveGen;
              DCOMP._IOwnership _5643_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5644_recIdents;
              RAST._IExpr _out1886;
              DCOMP._IOwnership _out1887;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1888;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1886, out _out1887, out _out1888);
              _5642_recursiveGen = _out1886;
              _5643_recOwned = _out1887;
              _5644_recIdents = _out1888;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5642_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5640_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5641_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1889;
              DCOMP._IOwnership _out1890;
              DCOMP.COMP.FromOwnership(r, _5643_recOwned, expectedOwnership, out _out1889, out _out1890);
              r = _out1889;
              resultingOwnership = _out1890;
              readIdents = _5644_recIdents;
            }
          } else if (_source279.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5645___mcc_h806 = _source279.dtor_args;
            DAST._IType _5646___mcc_h807 = _source279.dtor_result;
            {
              RAST._IType _5647_fromTpeGen;
              RAST._IType _out1891;
              _out1891 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5647_fromTpeGen = _out1891;
              RAST._IType _5648_toTpeGen;
              RAST._IType _out1892;
              _out1892 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5648_toTpeGen = _out1892;
              RAST._IExpr _5649_recursiveGen;
              DCOMP._IOwnership _5650_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5651_recIdents;
              RAST._IExpr _out1893;
              DCOMP._IOwnership _out1894;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1895;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1893, out _out1894, out _out1895);
              _5649_recursiveGen = _out1893;
              _5650_recOwned = _out1894;
              _5651_recIdents = _out1895;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5649_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5647_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5648_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1896;
              DCOMP._IOwnership _out1897;
              DCOMP.COMP.FromOwnership(r, _5650_recOwned, expectedOwnership, out _out1896, out _out1897);
              r = _out1896;
              resultingOwnership = _out1897;
              readIdents = _5651_recIdents;
            }
          } else if (_source279.is_Primitive) {
            DAST._IPrimitive _5652___mcc_h810 = _source279.dtor_Primitive_a0;
            {
              RAST._IType _5653_fromTpeGen;
              RAST._IType _out1898;
              _out1898 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5653_fromTpeGen = _out1898;
              RAST._IType _5654_toTpeGen;
              RAST._IType _out1899;
              _out1899 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5654_toTpeGen = _out1899;
              RAST._IExpr _5655_recursiveGen;
              DCOMP._IOwnership _5656_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5657_recIdents;
              RAST._IExpr _out1900;
              DCOMP._IOwnership _out1901;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1902;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1900, out _out1901, out _out1902);
              _5655_recursiveGen = _out1900;
              _5656_recOwned = _out1901;
              _5657_recIdents = _out1902;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5655_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5653_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5654_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1903;
              DCOMP._IOwnership _out1904;
              DCOMP.COMP.FromOwnership(r, _5656_recOwned, expectedOwnership, out _out1903, out _out1904);
              r = _out1903;
              resultingOwnership = _out1904;
              readIdents = _5657_recIdents;
            }
          } else if (_source279.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5658___mcc_h812 = _source279.dtor_Passthrough_a0;
            {
              RAST._IType _5659_fromTpeGen;
              RAST._IType _out1905;
              _out1905 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5659_fromTpeGen = _out1905;
              RAST._IType _5660_toTpeGen;
              RAST._IType _out1906;
              _out1906 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5660_toTpeGen = _out1906;
              RAST._IExpr _5661_recursiveGen;
              DCOMP._IOwnership _5662_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5663_recIdents;
              RAST._IExpr _out1907;
              DCOMP._IOwnership _out1908;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1909;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1907, out _out1908, out _out1909);
              _5661_recursiveGen = _out1907;
              _5662_recOwned = _out1908;
              _5663_recIdents = _out1909;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5661_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5659_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5660_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1910;
              DCOMP._IOwnership _out1911;
              DCOMP.COMP.FromOwnership(r, _5662_recOwned, expectedOwnership, out _out1910, out _out1911);
              r = _out1910;
              resultingOwnership = _out1911;
              readIdents = _5663_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5664___mcc_h814 = _source279.dtor_TypeArg_a0;
            {
              RAST._IType _5665_fromTpeGen;
              RAST._IType _out1912;
              _out1912 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5665_fromTpeGen = _out1912;
              RAST._IType _5666_toTpeGen;
              RAST._IType _out1913;
              _out1913 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5666_toTpeGen = _out1913;
              RAST._IExpr _5667_recursiveGen;
              DCOMP._IOwnership _5668_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5669_recIdents;
              RAST._IExpr _out1914;
              DCOMP._IOwnership _out1915;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1916;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1914, out _out1915, out _out1916);
              _5667_recursiveGen = _out1914;
              _5668_recOwned = _out1915;
              _5669_recIdents = _out1916;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5667_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5665_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5666_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1917;
              DCOMP._IOwnership _out1918;
              DCOMP.COMP.FromOwnership(r, _5668_recOwned, expectedOwnership, out _out1917, out _out1918);
              r = _out1917;
              resultingOwnership = _out1918;
              readIdents = _5669_recIdents;
            }
          }
        } else if (_source210.is_MapBuilder) {
          DAST._IType _5670___mcc_h816 = _source210.dtor_key;
          DAST._IType _5671___mcc_h817 = _source210.dtor_value;
          DAST._IType _source284 = _3718___mcc_h1;
          if (_source284.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5672___mcc_h824 = _source284.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5673___mcc_h825 = _source284.dtor_typeArgs;
            DAST._IResolvedType _5674___mcc_h826 = _source284.dtor_resolved;
            DAST._IResolvedType _source285 = _5674___mcc_h826;
            if (_source285.is_AllocatedDatatype) {
              DAST._IDatatypeType _5675___mcc_h830 = _source285.dtor_datatypeType;
              {
                RAST._IType _5676_fromTpeGen;
                RAST._IType _out1919;
                _out1919 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5676_fromTpeGen = _out1919;
                RAST._IType _5677_toTpeGen;
                RAST._IType _out1920;
                _out1920 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5677_toTpeGen = _out1920;
                RAST._IExpr _5678_recursiveGen;
                DCOMP._IOwnership _5679_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5680_recIdents;
                RAST._IExpr _out1921;
                DCOMP._IOwnership _out1922;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1923;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1921, out _out1922, out _out1923);
                _5678_recursiveGen = _out1921;
                _5679_recOwned = _out1922;
                _5680_recIdents = _out1923;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5678_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5676_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5677_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1924;
                DCOMP._IOwnership _out1925;
                DCOMP.COMP.FromOwnership(r, _5679_recOwned, expectedOwnership, out _out1924, out _out1925);
                r = _out1924;
                resultingOwnership = _out1925;
                readIdents = _5680_recIdents;
              }
            } else if (_source285.is_Datatype) {
              DAST._IDatatypeType _5681___mcc_h832 = _source285.dtor_datatypeType;
              {
                RAST._IType _5682_fromTpeGen;
                RAST._IType _out1926;
                _out1926 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5682_fromTpeGen = _out1926;
                RAST._IType _5683_toTpeGen;
                RAST._IType _out1927;
                _out1927 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5683_toTpeGen = _out1927;
                RAST._IExpr _5684_recursiveGen;
                DCOMP._IOwnership _5685_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5686_recIdents;
                RAST._IExpr _out1928;
                DCOMP._IOwnership _out1929;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1930;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1928, out _out1929, out _out1930);
                _5684_recursiveGen = _out1928;
                _5685_recOwned = _out1929;
                _5686_recIdents = _out1930;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5684_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5682_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5683_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1931;
                DCOMP._IOwnership _out1932;
                DCOMP.COMP.FromOwnership(r, _5685_recOwned, expectedOwnership, out _out1931, out _out1932);
                r = _out1931;
                resultingOwnership = _out1932;
                readIdents = _5686_recIdents;
              }
            } else if (_source285.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5687___mcc_h834 = _source285.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5688___mcc_h835 = _source285.dtor_attributes;
              {
                RAST._IType _5689_fromTpeGen;
                RAST._IType _out1933;
                _out1933 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5689_fromTpeGen = _out1933;
                RAST._IType _5690_toTpeGen;
                RAST._IType _out1934;
                _out1934 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5690_toTpeGen = _out1934;
                RAST._IExpr _5691_recursiveGen;
                DCOMP._IOwnership _5692_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5693_recIdents;
                RAST._IExpr _out1935;
                DCOMP._IOwnership _out1936;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1937;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1935, out _out1936, out _out1937);
                _5691_recursiveGen = _out1935;
                _5692_recOwned = _out1936;
                _5693_recIdents = _out1937;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5691_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5689_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5690_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1938;
                DCOMP._IOwnership _out1939;
                DCOMP.COMP.FromOwnership(r, _5692_recOwned, expectedOwnership, out _out1938, out _out1939);
                r = _out1938;
                resultingOwnership = _out1939;
                readIdents = _5693_recIdents;
              }
            } else {
              DAST._IType _5694___mcc_h838 = _source285.dtor_baseType;
              DAST._INewtypeRange _5695___mcc_h839 = _source285.dtor_range;
              bool _5696___mcc_h840 = _source285.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5697___mcc_h841 = _source285.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5698_attributes = _5697___mcc_h841;
              bool _5699_erase = _5696___mcc_h840;
              DAST._INewtypeRange _5700_range = _5695___mcc_h839;
              DAST._IType _5701_b = _5694___mcc_h838;
              {
                Std.Wrappers._IOption<RAST._IType> _5702_nativeToType;
                _5702_nativeToType = DCOMP.COMP.NewtypeToRustType(_5701_b, _5700_range);
                if (object.Equals(_3712_fromTpe, _5701_b)) {
                  RAST._IExpr _5703_recursiveGen;
                  DCOMP._IOwnership _5704_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5705_recIdents;
                  RAST._IExpr _out1940;
                  DCOMP._IOwnership _out1941;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1942;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1940, out _out1941, out _out1942);
                  _5703_recursiveGen = _out1940;
                  _5704_recOwned = _out1941;
                  _5705_recIdents = _out1942;
                  readIdents = _5705_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source286 = _5702_nativeToType;
                  if (_source286.is_None) {
                    if (_5699_erase) {
                      r = _5703_recursiveGen;
                    } else {
                      RAST._IType _5706_rhsType;
                      RAST._IType _out1943;
                      _out1943 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _5706_rhsType = _out1943;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5706_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5703_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1944;
                    DCOMP._IOwnership _out1945;
                    DCOMP.COMP.FromOwnership(r, _5704_recOwned, expectedOwnership, out _out1944, out _out1945);
                    r = _out1944;
                    resultingOwnership = _out1945;
                  } else {
                    RAST._IType _5707___mcc_h1990 = _source286.dtor_value;
                    RAST._IType _5708_v = _5707___mcc_h1990;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5703_recursiveGen, RAST.Expr.create_ExprFromType(_5708_v)));
                    RAST._IExpr _out1946;
                    DCOMP._IOwnership _out1947;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1946, out _out1947);
                    r = _out1946;
                    resultingOwnership = _out1947;
                  }
                } else {
                  if ((_5702_nativeToType).is_Some) {
                    DAST._IType _source287 = _3712_fromTpe;
                    if (_source287.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5709___mcc_h1991 = _source287.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5710___mcc_h1992 = _source287.dtor_typeArgs;
                      DAST._IResolvedType _5711___mcc_h1993 = _source287.dtor_resolved;
                      DAST._IResolvedType _source288 = _5711___mcc_h1993;
                      if (_source288.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5712___mcc_h1997 = _source288.dtor_datatypeType;
                      } else if (_source288.is_Datatype) {
                        DAST._IDatatypeType _5713___mcc_h1999 = _source288.dtor_datatypeType;
                      } else if (_source288.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5714___mcc_h2001 = _source288.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5715___mcc_h2002 = _source288.dtor_attributes;
                      } else {
                        DAST._IType _5716___mcc_h2005 = _source288.dtor_baseType;
                        DAST._INewtypeRange _5717___mcc_h2006 = _source288.dtor_range;
                        bool _5718___mcc_h2007 = _source288.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5719___mcc_h2008 = _source288.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5720_attributes0 = _5719___mcc_h2008;
                        bool _5721_erase0 = _5718___mcc_h2007;
                        DAST._INewtypeRange _5722_range0 = _5717___mcc_h2006;
                        DAST._IType _5723_b0 = _5716___mcc_h2005;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5724_nativeFromType;
                          _5724_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5723_b0, _5722_range0);
                          if ((_5724_nativeFromType).is_Some) {
                            RAST._IExpr _5725_recursiveGen;
                            DCOMP._IOwnership _5726_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5727_recIdents;
                            RAST._IExpr _out1948;
                            DCOMP._IOwnership _out1949;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1950;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1948, out _out1949, out _out1950);
                            _5725_recursiveGen = _out1948;
                            _5726_recOwned = _out1949;
                            _5727_recIdents = _out1950;
                            RAST._IExpr _out1951;
                            DCOMP._IOwnership _out1952;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5725_recursiveGen, (_5702_nativeToType).dtor_value), _5726_recOwned, expectedOwnership, out _out1951, out _out1952);
                            r = _out1951;
                            resultingOwnership = _out1952;
                            readIdents = _5727_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source287.is_Nullable) {
                      DAST._IType _5728___mcc_h2013 = _source287.dtor_Nullable_a0;
                    } else if (_source287.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5729___mcc_h2015 = _source287.dtor_Tuple_a0;
                    } else if (_source287.is_Array) {
                      DAST._IType _5730___mcc_h2017 = _source287.dtor_element;
                      BigInteger _5731___mcc_h2018 = _source287.dtor_dims;
                    } else if (_source287.is_Seq) {
                      DAST._IType _5732___mcc_h2021 = _source287.dtor_element;
                    } else if (_source287.is_Set) {
                      DAST._IType _5733___mcc_h2023 = _source287.dtor_element;
                    } else if (_source287.is_Multiset) {
                      DAST._IType _5734___mcc_h2025 = _source287.dtor_element;
                    } else if (_source287.is_Map) {
                      DAST._IType _5735___mcc_h2027 = _source287.dtor_key;
                      DAST._IType _5736___mcc_h2028 = _source287.dtor_value;
                    } else if (_source287.is_SetBuilder) {
                      DAST._IType _5737___mcc_h2031 = _source287.dtor_element;
                    } else if (_source287.is_MapBuilder) {
                      DAST._IType _5738___mcc_h2033 = _source287.dtor_key;
                      DAST._IType _5739___mcc_h2034 = _source287.dtor_value;
                    } else if (_source287.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5740___mcc_h2037 = _source287.dtor_args;
                      DAST._IType _5741___mcc_h2038 = _source287.dtor_result;
                    } else if (_source287.is_Primitive) {
                      DAST._IPrimitive _5742___mcc_h2041 = _source287.dtor_Primitive_a0;
                    } else if (_source287.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5743___mcc_h2043 = _source287.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5744___mcc_h2045 = _source287.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5745_recursiveGen;
                      DCOMP._IOwnership _5746_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5747_recIdents;
                      RAST._IExpr _out1953;
                      DCOMP._IOwnership _out1954;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1955;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1953, out _out1954, out _out1955);
                      _5745_recursiveGen = _out1953;
                      _5746_recOwned = _out1954;
                      _5747_recIdents = _out1955;
                      RAST._IExpr _out1956;
                      DCOMP._IOwnership _out1957;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5745_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5702_nativeToType).dtor_value), _5746_recOwned, expectedOwnership, out _out1956, out _out1957);
                      r = _out1956;
                      resultingOwnership = _out1957;
                      readIdents = _5747_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1958;
                  DCOMP._IOwnership _out1959;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1960;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _5701_b), _5701_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out1958, out _out1959, out _out1960);
                  r = _out1958;
                  resultingOwnership = _out1959;
                  readIdents = _out1960;
                }
              }
            }
          } else if (_source284.is_Nullable) {
            DAST._IType _5748___mcc_h846 = _source284.dtor_Nullable_a0;
            {
              RAST._IExpr _5749_recursiveGen;
              DCOMP._IOwnership _5750_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5751_recIdents;
              RAST._IExpr _out1961;
              DCOMP._IOwnership _out1962;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1963;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1961, out _out1962, out _out1963);
              _5749_recursiveGen = _out1961;
              _5750_recOwned = _out1962;
              _5751_recIdents = _out1963;
              r = _5749_recursiveGen;
              if (object.Equals(_5750_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1964;
              DCOMP._IOwnership _out1965;
              DCOMP.COMP.FromOwnership(r, _5750_recOwned, expectedOwnership, out _out1964, out _out1965);
              r = _out1964;
              resultingOwnership = _out1965;
              readIdents = _5751_recIdents;
            }
          } else if (_source284.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5752___mcc_h848 = _source284.dtor_Tuple_a0;
            {
              RAST._IType _5753_fromTpeGen;
              RAST._IType _out1966;
              _out1966 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5753_fromTpeGen = _out1966;
              RAST._IType _5754_toTpeGen;
              RAST._IType _out1967;
              _out1967 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5754_toTpeGen = _out1967;
              RAST._IExpr _5755_recursiveGen;
              DCOMP._IOwnership _5756_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5757_recIdents;
              RAST._IExpr _out1968;
              DCOMP._IOwnership _out1969;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1970;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1968, out _out1969, out _out1970);
              _5755_recursiveGen = _out1968;
              _5756_recOwned = _out1969;
              _5757_recIdents = _out1970;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5755_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5753_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5754_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1971;
              DCOMP._IOwnership _out1972;
              DCOMP.COMP.FromOwnership(r, _5756_recOwned, expectedOwnership, out _out1971, out _out1972);
              r = _out1971;
              resultingOwnership = _out1972;
              readIdents = _5757_recIdents;
            }
          } else if (_source284.is_Array) {
            DAST._IType _5758___mcc_h850 = _source284.dtor_element;
            BigInteger _5759___mcc_h851 = _source284.dtor_dims;
            {
              RAST._IType _5760_fromTpeGen;
              RAST._IType _out1973;
              _out1973 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5760_fromTpeGen = _out1973;
              RAST._IType _5761_toTpeGen;
              RAST._IType _out1974;
              _out1974 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5761_toTpeGen = _out1974;
              RAST._IExpr _5762_recursiveGen;
              DCOMP._IOwnership _5763_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5764_recIdents;
              RAST._IExpr _out1975;
              DCOMP._IOwnership _out1976;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1977;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1975, out _out1976, out _out1977);
              _5762_recursiveGen = _out1975;
              _5763_recOwned = _out1976;
              _5764_recIdents = _out1977;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5762_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5760_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5761_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1978;
              DCOMP._IOwnership _out1979;
              DCOMP.COMP.FromOwnership(r, _5763_recOwned, expectedOwnership, out _out1978, out _out1979);
              r = _out1978;
              resultingOwnership = _out1979;
              readIdents = _5764_recIdents;
            }
          } else if (_source284.is_Seq) {
            DAST._IType _5765___mcc_h854 = _source284.dtor_element;
            {
              RAST._IType _5766_fromTpeGen;
              RAST._IType _out1980;
              _out1980 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5766_fromTpeGen = _out1980;
              RAST._IType _5767_toTpeGen;
              RAST._IType _out1981;
              _out1981 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5767_toTpeGen = _out1981;
              RAST._IExpr _5768_recursiveGen;
              DCOMP._IOwnership _5769_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5770_recIdents;
              RAST._IExpr _out1982;
              DCOMP._IOwnership _out1983;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1984;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1982, out _out1983, out _out1984);
              _5768_recursiveGen = _out1982;
              _5769_recOwned = _out1983;
              _5770_recIdents = _out1984;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5768_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5766_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5767_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1985;
              DCOMP._IOwnership _out1986;
              DCOMP.COMP.FromOwnership(r, _5769_recOwned, expectedOwnership, out _out1985, out _out1986);
              r = _out1985;
              resultingOwnership = _out1986;
              readIdents = _5770_recIdents;
            }
          } else if (_source284.is_Set) {
            DAST._IType _5771___mcc_h856 = _source284.dtor_element;
            {
              RAST._IType _5772_fromTpeGen;
              RAST._IType _out1987;
              _out1987 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5772_fromTpeGen = _out1987;
              RAST._IType _5773_toTpeGen;
              RAST._IType _out1988;
              _out1988 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5773_toTpeGen = _out1988;
              RAST._IExpr _5774_recursiveGen;
              DCOMP._IOwnership _5775_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5776_recIdents;
              RAST._IExpr _out1989;
              DCOMP._IOwnership _out1990;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1991;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1989, out _out1990, out _out1991);
              _5774_recursiveGen = _out1989;
              _5775_recOwned = _out1990;
              _5776_recIdents = _out1991;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5774_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5772_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5773_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1992;
              DCOMP._IOwnership _out1993;
              DCOMP.COMP.FromOwnership(r, _5775_recOwned, expectedOwnership, out _out1992, out _out1993);
              r = _out1992;
              resultingOwnership = _out1993;
              readIdents = _5776_recIdents;
            }
          } else if (_source284.is_Multiset) {
            DAST._IType _5777___mcc_h858 = _source284.dtor_element;
            {
              RAST._IType _5778_fromTpeGen;
              RAST._IType _out1994;
              _out1994 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5778_fromTpeGen = _out1994;
              RAST._IType _5779_toTpeGen;
              RAST._IType _out1995;
              _out1995 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5779_toTpeGen = _out1995;
              RAST._IExpr _5780_recursiveGen;
              DCOMP._IOwnership _5781_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5782_recIdents;
              RAST._IExpr _out1996;
              DCOMP._IOwnership _out1997;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1998;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out1996, out _out1997, out _out1998);
              _5780_recursiveGen = _out1996;
              _5781_recOwned = _out1997;
              _5782_recIdents = _out1998;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5780_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5778_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5779_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1999;
              DCOMP._IOwnership _out2000;
              DCOMP.COMP.FromOwnership(r, _5781_recOwned, expectedOwnership, out _out1999, out _out2000);
              r = _out1999;
              resultingOwnership = _out2000;
              readIdents = _5782_recIdents;
            }
          } else if (_source284.is_Map) {
            DAST._IType _5783___mcc_h860 = _source284.dtor_key;
            DAST._IType _5784___mcc_h861 = _source284.dtor_value;
            {
              RAST._IType _5785_fromTpeGen;
              RAST._IType _out2001;
              _out2001 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5785_fromTpeGen = _out2001;
              RAST._IType _5786_toTpeGen;
              RAST._IType _out2002;
              _out2002 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5786_toTpeGen = _out2002;
              RAST._IExpr _5787_recursiveGen;
              DCOMP._IOwnership _5788_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5789_recIdents;
              RAST._IExpr _out2003;
              DCOMP._IOwnership _out2004;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2005;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2003, out _out2004, out _out2005);
              _5787_recursiveGen = _out2003;
              _5788_recOwned = _out2004;
              _5789_recIdents = _out2005;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5787_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5785_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5786_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2006;
              DCOMP._IOwnership _out2007;
              DCOMP.COMP.FromOwnership(r, _5788_recOwned, expectedOwnership, out _out2006, out _out2007);
              r = _out2006;
              resultingOwnership = _out2007;
              readIdents = _5789_recIdents;
            }
          } else if (_source284.is_SetBuilder) {
            DAST._IType _5790___mcc_h864 = _source284.dtor_element;
            {
              RAST._IType _5791_fromTpeGen;
              RAST._IType _out2008;
              _out2008 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5791_fromTpeGen = _out2008;
              RAST._IType _5792_toTpeGen;
              RAST._IType _out2009;
              _out2009 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5792_toTpeGen = _out2009;
              RAST._IExpr _5793_recursiveGen;
              DCOMP._IOwnership _5794_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5795_recIdents;
              RAST._IExpr _out2010;
              DCOMP._IOwnership _out2011;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2012;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2010, out _out2011, out _out2012);
              _5793_recursiveGen = _out2010;
              _5794_recOwned = _out2011;
              _5795_recIdents = _out2012;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5793_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5791_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5792_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2013;
              DCOMP._IOwnership _out2014;
              DCOMP.COMP.FromOwnership(r, _5794_recOwned, expectedOwnership, out _out2013, out _out2014);
              r = _out2013;
              resultingOwnership = _out2014;
              readIdents = _5795_recIdents;
            }
          } else if (_source284.is_MapBuilder) {
            DAST._IType _5796___mcc_h866 = _source284.dtor_key;
            DAST._IType _5797___mcc_h867 = _source284.dtor_value;
            {
              RAST._IType _5798_fromTpeGen;
              RAST._IType _out2015;
              _out2015 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5798_fromTpeGen = _out2015;
              RAST._IType _5799_toTpeGen;
              RAST._IType _out2016;
              _out2016 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5799_toTpeGen = _out2016;
              RAST._IExpr _5800_recursiveGen;
              DCOMP._IOwnership _5801_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5802_recIdents;
              RAST._IExpr _out2017;
              DCOMP._IOwnership _out2018;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2019;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2017, out _out2018, out _out2019);
              _5800_recursiveGen = _out2017;
              _5801_recOwned = _out2018;
              _5802_recIdents = _out2019;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5800_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5798_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5799_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2020;
              DCOMP._IOwnership _out2021;
              DCOMP.COMP.FromOwnership(r, _5801_recOwned, expectedOwnership, out _out2020, out _out2021);
              r = _out2020;
              resultingOwnership = _out2021;
              readIdents = _5802_recIdents;
            }
          } else if (_source284.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5803___mcc_h870 = _source284.dtor_args;
            DAST._IType _5804___mcc_h871 = _source284.dtor_result;
            {
              RAST._IType _5805_fromTpeGen;
              RAST._IType _out2022;
              _out2022 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5805_fromTpeGen = _out2022;
              RAST._IType _5806_toTpeGen;
              RAST._IType _out2023;
              _out2023 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5806_toTpeGen = _out2023;
              RAST._IExpr _5807_recursiveGen;
              DCOMP._IOwnership _5808_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5809_recIdents;
              RAST._IExpr _out2024;
              DCOMP._IOwnership _out2025;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2026;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2024, out _out2025, out _out2026);
              _5807_recursiveGen = _out2024;
              _5808_recOwned = _out2025;
              _5809_recIdents = _out2026;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5807_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5805_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5806_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2027;
              DCOMP._IOwnership _out2028;
              DCOMP.COMP.FromOwnership(r, _5808_recOwned, expectedOwnership, out _out2027, out _out2028);
              r = _out2027;
              resultingOwnership = _out2028;
              readIdents = _5809_recIdents;
            }
          } else if (_source284.is_Primitive) {
            DAST._IPrimitive _5810___mcc_h874 = _source284.dtor_Primitive_a0;
            {
              RAST._IType _5811_fromTpeGen;
              RAST._IType _out2029;
              _out2029 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5811_fromTpeGen = _out2029;
              RAST._IType _5812_toTpeGen;
              RAST._IType _out2030;
              _out2030 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5812_toTpeGen = _out2030;
              RAST._IExpr _5813_recursiveGen;
              DCOMP._IOwnership _5814_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5815_recIdents;
              RAST._IExpr _out2031;
              DCOMP._IOwnership _out2032;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2033;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2031, out _out2032, out _out2033);
              _5813_recursiveGen = _out2031;
              _5814_recOwned = _out2032;
              _5815_recIdents = _out2033;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5813_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5811_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5812_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2034;
              DCOMP._IOwnership _out2035;
              DCOMP.COMP.FromOwnership(r, _5814_recOwned, expectedOwnership, out _out2034, out _out2035);
              r = _out2034;
              resultingOwnership = _out2035;
              readIdents = _5815_recIdents;
            }
          } else if (_source284.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5816___mcc_h876 = _source284.dtor_Passthrough_a0;
            {
              RAST._IType _5817_fromTpeGen;
              RAST._IType _out2036;
              _out2036 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5817_fromTpeGen = _out2036;
              RAST._IType _5818_toTpeGen;
              RAST._IType _out2037;
              _out2037 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5818_toTpeGen = _out2037;
              RAST._IExpr _5819_recursiveGen;
              DCOMP._IOwnership _5820_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5821_recIdents;
              RAST._IExpr _out2038;
              DCOMP._IOwnership _out2039;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2040;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2038, out _out2039, out _out2040);
              _5819_recursiveGen = _out2038;
              _5820_recOwned = _out2039;
              _5821_recIdents = _out2040;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5819_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5817_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5818_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2041;
              DCOMP._IOwnership _out2042;
              DCOMP.COMP.FromOwnership(r, _5820_recOwned, expectedOwnership, out _out2041, out _out2042);
              r = _out2041;
              resultingOwnership = _out2042;
              readIdents = _5821_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5822___mcc_h878 = _source284.dtor_TypeArg_a0;
            {
              RAST._IType _5823_fromTpeGen;
              RAST._IType _out2043;
              _out2043 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5823_fromTpeGen = _out2043;
              RAST._IType _5824_toTpeGen;
              RAST._IType _out2044;
              _out2044 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5824_toTpeGen = _out2044;
              RAST._IExpr _5825_recursiveGen;
              DCOMP._IOwnership _5826_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5827_recIdents;
              RAST._IExpr _out2045;
              DCOMP._IOwnership _out2046;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2047;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2045, out _out2046, out _out2047);
              _5825_recursiveGen = _out2045;
              _5826_recOwned = _out2046;
              _5827_recIdents = _out2047;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5825_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5823_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5824_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2048;
              DCOMP._IOwnership _out2049;
              DCOMP.COMP.FromOwnership(r, _5826_recOwned, expectedOwnership, out _out2048, out _out2049);
              r = _out2048;
              resultingOwnership = _out2049;
              readIdents = _5827_recIdents;
            }
          }
        } else if (_source210.is_Arrow) {
          Dafny.ISequence<DAST._IType> _5828___mcc_h880 = _source210.dtor_args;
          DAST._IType _5829___mcc_h881 = _source210.dtor_result;
          DAST._IType _source289 = _3718___mcc_h1;
          if (_source289.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5830___mcc_h888 = _source289.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5831___mcc_h889 = _source289.dtor_typeArgs;
            DAST._IResolvedType _5832___mcc_h890 = _source289.dtor_resolved;
            DAST._IResolvedType _source290 = _5832___mcc_h890;
            if (_source290.is_AllocatedDatatype) {
              DAST._IDatatypeType _5833___mcc_h894 = _source290.dtor_datatypeType;
              {
                RAST._IType _5834_fromTpeGen;
                RAST._IType _out2050;
                _out2050 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5834_fromTpeGen = _out2050;
                RAST._IType _5835_toTpeGen;
                RAST._IType _out2051;
                _out2051 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5835_toTpeGen = _out2051;
                RAST._IExpr _5836_recursiveGen;
                DCOMP._IOwnership _5837_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5838_recIdents;
                RAST._IExpr _out2052;
                DCOMP._IOwnership _out2053;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2054;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2052, out _out2053, out _out2054);
                _5836_recursiveGen = _out2052;
                _5837_recOwned = _out2053;
                _5838_recIdents = _out2054;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5836_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5834_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5835_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2055;
                DCOMP._IOwnership _out2056;
                DCOMP.COMP.FromOwnership(r, _5837_recOwned, expectedOwnership, out _out2055, out _out2056);
                r = _out2055;
                resultingOwnership = _out2056;
                readIdents = _5838_recIdents;
              }
            } else if (_source290.is_Datatype) {
              DAST._IDatatypeType _5839___mcc_h896 = _source290.dtor_datatypeType;
              {
                RAST._IType _5840_fromTpeGen;
                RAST._IType _out2057;
                _out2057 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5840_fromTpeGen = _out2057;
                RAST._IType _5841_toTpeGen;
                RAST._IType _out2058;
                _out2058 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5841_toTpeGen = _out2058;
                RAST._IExpr _5842_recursiveGen;
                DCOMP._IOwnership _5843_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5844_recIdents;
                RAST._IExpr _out2059;
                DCOMP._IOwnership _out2060;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2061;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2059, out _out2060, out _out2061);
                _5842_recursiveGen = _out2059;
                _5843_recOwned = _out2060;
                _5844_recIdents = _out2061;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5842_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5840_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5841_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2062;
                DCOMP._IOwnership _out2063;
                DCOMP.COMP.FromOwnership(r, _5843_recOwned, expectedOwnership, out _out2062, out _out2063);
                r = _out2062;
                resultingOwnership = _out2063;
                readIdents = _5844_recIdents;
              }
            } else if (_source290.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5845___mcc_h898 = _source290.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5846___mcc_h899 = _source290.dtor_attributes;
              {
                RAST._IType _5847_fromTpeGen;
                RAST._IType _out2064;
                _out2064 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _5847_fromTpeGen = _out2064;
                RAST._IType _5848_toTpeGen;
                RAST._IType _out2065;
                _out2065 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _5848_toTpeGen = _out2065;
                RAST._IExpr _5849_recursiveGen;
                DCOMP._IOwnership _5850_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5851_recIdents;
                RAST._IExpr _out2066;
                DCOMP._IOwnership _out2067;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2068;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2066, out _out2067, out _out2068);
                _5849_recursiveGen = _out2066;
                _5850_recOwned = _out2067;
                _5851_recIdents = _out2068;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5849_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5847_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5848_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2069;
                DCOMP._IOwnership _out2070;
                DCOMP.COMP.FromOwnership(r, _5850_recOwned, expectedOwnership, out _out2069, out _out2070);
                r = _out2069;
                resultingOwnership = _out2070;
                readIdents = _5851_recIdents;
              }
            } else {
              DAST._IType _5852___mcc_h902 = _source290.dtor_baseType;
              DAST._INewtypeRange _5853___mcc_h903 = _source290.dtor_range;
              bool _5854___mcc_h904 = _source290.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5855___mcc_h905 = _source290.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5856_attributes = _5855___mcc_h905;
              bool _5857_erase = _5854___mcc_h904;
              DAST._INewtypeRange _5858_range = _5853___mcc_h903;
              DAST._IType _5859_b = _5852___mcc_h902;
              {
                Std.Wrappers._IOption<RAST._IType> _5860_nativeToType;
                _5860_nativeToType = DCOMP.COMP.NewtypeToRustType(_5859_b, _5858_range);
                if (object.Equals(_3712_fromTpe, _5859_b)) {
                  RAST._IExpr _5861_recursiveGen;
                  DCOMP._IOwnership _5862_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5863_recIdents;
                  RAST._IExpr _out2071;
                  DCOMP._IOwnership _out2072;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2073;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2071, out _out2072, out _out2073);
                  _5861_recursiveGen = _out2071;
                  _5862_recOwned = _out2072;
                  _5863_recIdents = _out2073;
                  readIdents = _5863_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source291 = _5860_nativeToType;
                  if (_source291.is_None) {
                    if (_5857_erase) {
                      r = _5861_recursiveGen;
                    } else {
                      RAST._IType _5864_rhsType;
                      RAST._IType _out2074;
                      _out2074 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _5864_rhsType = _out2074;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5864_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5861_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out2075;
                    DCOMP._IOwnership _out2076;
                    DCOMP.COMP.FromOwnership(r, _5862_recOwned, expectedOwnership, out _out2075, out _out2076);
                    r = _out2075;
                    resultingOwnership = _out2076;
                  } else {
                    RAST._IType _5865___mcc_h2047 = _source291.dtor_value;
                    RAST._IType _5866_v = _5865___mcc_h2047;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5861_recursiveGen, RAST.Expr.create_ExprFromType(_5866_v)));
                    RAST._IExpr _out2077;
                    DCOMP._IOwnership _out2078;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2077, out _out2078);
                    r = _out2077;
                    resultingOwnership = _out2078;
                  }
                } else {
                  if ((_5860_nativeToType).is_Some) {
                    DAST._IType _source292 = _3712_fromTpe;
                    if (_source292.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5867___mcc_h2048 = _source292.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5868___mcc_h2049 = _source292.dtor_typeArgs;
                      DAST._IResolvedType _5869___mcc_h2050 = _source292.dtor_resolved;
                      DAST._IResolvedType _source293 = _5869___mcc_h2050;
                      if (_source293.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5870___mcc_h2054 = _source293.dtor_datatypeType;
                      } else if (_source293.is_Datatype) {
                        DAST._IDatatypeType _5871___mcc_h2056 = _source293.dtor_datatypeType;
                      } else if (_source293.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5872___mcc_h2058 = _source293.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5873___mcc_h2059 = _source293.dtor_attributes;
                      } else {
                        DAST._IType _5874___mcc_h2062 = _source293.dtor_baseType;
                        DAST._INewtypeRange _5875___mcc_h2063 = _source293.dtor_range;
                        bool _5876___mcc_h2064 = _source293.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5877___mcc_h2065 = _source293.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5878_attributes0 = _5877___mcc_h2065;
                        bool _5879_erase0 = _5876___mcc_h2064;
                        DAST._INewtypeRange _5880_range0 = _5875___mcc_h2063;
                        DAST._IType _5881_b0 = _5874___mcc_h2062;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5882_nativeFromType;
                          _5882_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5881_b0, _5880_range0);
                          if ((_5882_nativeFromType).is_Some) {
                            RAST._IExpr _5883_recursiveGen;
                            DCOMP._IOwnership _5884_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5885_recIdents;
                            RAST._IExpr _out2079;
                            DCOMP._IOwnership _out2080;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2081;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2079, out _out2080, out _out2081);
                            _5883_recursiveGen = _out2079;
                            _5884_recOwned = _out2080;
                            _5885_recIdents = _out2081;
                            RAST._IExpr _out2082;
                            DCOMP._IOwnership _out2083;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5883_recursiveGen, (_5860_nativeToType).dtor_value), _5884_recOwned, expectedOwnership, out _out2082, out _out2083);
                            r = _out2082;
                            resultingOwnership = _out2083;
                            readIdents = _5885_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source292.is_Nullable) {
                      DAST._IType _5886___mcc_h2070 = _source292.dtor_Nullable_a0;
                    } else if (_source292.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5887___mcc_h2072 = _source292.dtor_Tuple_a0;
                    } else if (_source292.is_Array) {
                      DAST._IType _5888___mcc_h2074 = _source292.dtor_element;
                      BigInteger _5889___mcc_h2075 = _source292.dtor_dims;
                    } else if (_source292.is_Seq) {
                      DAST._IType _5890___mcc_h2078 = _source292.dtor_element;
                    } else if (_source292.is_Set) {
                      DAST._IType _5891___mcc_h2080 = _source292.dtor_element;
                    } else if (_source292.is_Multiset) {
                      DAST._IType _5892___mcc_h2082 = _source292.dtor_element;
                    } else if (_source292.is_Map) {
                      DAST._IType _5893___mcc_h2084 = _source292.dtor_key;
                      DAST._IType _5894___mcc_h2085 = _source292.dtor_value;
                    } else if (_source292.is_SetBuilder) {
                      DAST._IType _5895___mcc_h2088 = _source292.dtor_element;
                    } else if (_source292.is_MapBuilder) {
                      DAST._IType _5896___mcc_h2090 = _source292.dtor_key;
                      DAST._IType _5897___mcc_h2091 = _source292.dtor_value;
                    } else if (_source292.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5898___mcc_h2094 = _source292.dtor_args;
                      DAST._IType _5899___mcc_h2095 = _source292.dtor_result;
                    } else if (_source292.is_Primitive) {
                      DAST._IPrimitive _5900___mcc_h2098 = _source292.dtor_Primitive_a0;
                    } else if (_source292.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5901___mcc_h2100 = _source292.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5902___mcc_h2102 = _source292.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5903_recursiveGen;
                      DCOMP._IOwnership _5904_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5905_recIdents;
                      RAST._IExpr _out2084;
                      DCOMP._IOwnership _out2085;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2086;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2084, out _out2085, out _out2086);
                      _5903_recursiveGen = _out2084;
                      _5904_recOwned = _out2085;
                      _5905_recIdents = _out2086;
                      RAST._IExpr _out2087;
                      DCOMP._IOwnership _out2088;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5903_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5860_nativeToType).dtor_value), _5904_recOwned, expectedOwnership, out _out2087, out _out2088);
                      r = _out2087;
                      resultingOwnership = _out2088;
                      readIdents = _5905_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out2089;
                  DCOMP._IOwnership _out2090;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2091;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _5859_b), _5859_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out2089, out _out2090, out _out2091);
                  r = _out2089;
                  resultingOwnership = _out2090;
                  readIdents = _out2091;
                }
              }
            }
          } else if (_source289.is_Nullable) {
            DAST._IType _5906___mcc_h910 = _source289.dtor_Nullable_a0;
            {
              RAST._IExpr _5907_recursiveGen;
              DCOMP._IOwnership _5908_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5909_recIdents;
              RAST._IExpr _out2092;
              DCOMP._IOwnership _out2093;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2094;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2092, out _out2093, out _out2094);
              _5907_recursiveGen = _out2092;
              _5908_recOwned = _out2093;
              _5909_recIdents = _out2094;
              r = _5907_recursiveGen;
              if (object.Equals(_5908_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out2095;
              DCOMP._IOwnership _out2096;
              DCOMP.COMP.FromOwnership(r, _5908_recOwned, expectedOwnership, out _out2095, out _out2096);
              r = _out2095;
              resultingOwnership = _out2096;
              readIdents = _5909_recIdents;
            }
          } else if (_source289.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5910___mcc_h912 = _source289.dtor_Tuple_a0;
            {
              RAST._IType _5911_fromTpeGen;
              RAST._IType _out2097;
              _out2097 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5911_fromTpeGen = _out2097;
              RAST._IType _5912_toTpeGen;
              RAST._IType _out2098;
              _out2098 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5912_toTpeGen = _out2098;
              RAST._IExpr _5913_recursiveGen;
              DCOMP._IOwnership _5914_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5915_recIdents;
              RAST._IExpr _out2099;
              DCOMP._IOwnership _out2100;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2101;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2099, out _out2100, out _out2101);
              _5913_recursiveGen = _out2099;
              _5914_recOwned = _out2100;
              _5915_recIdents = _out2101;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5913_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5911_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5912_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2102;
              DCOMP._IOwnership _out2103;
              DCOMP.COMP.FromOwnership(r, _5914_recOwned, expectedOwnership, out _out2102, out _out2103);
              r = _out2102;
              resultingOwnership = _out2103;
              readIdents = _5915_recIdents;
            }
          } else if (_source289.is_Array) {
            DAST._IType _5916___mcc_h914 = _source289.dtor_element;
            BigInteger _5917___mcc_h915 = _source289.dtor_dims;
            {
              RAST._IType _5918_fromTpeGen;
              RAST._IType _out2104;
              _out2104 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5918_fromTpeGen = _out2104;
              RAST._IType _5919_toTpeGen;
              RAST._IType _out2105;
              _out2105 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5919_toTpeGen = _out2105;
              RAST._IExpr _5920_recursiveGen;
              DCOMP._IOwnership _5921_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5922_recIdents;
              RAST._IExpr _out2106;
              DCOMP._IOwnership _out2107;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2108;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2106, out _out2107, out _out2108);
              _5920_recursiveGen = _out2106;
              _5921_recOwned = _out2107;
              _5922_recIdents = _out2108;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5920_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5918_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5919_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2109;
              DCOMP._IOwnership _out2110;
              DCOMP.COMP.FromOwnership(r, _5921_recOwned, expectedOwnership, out _out2109, out _out2110);
              r = _out2109;
              resultingOwnership = _out2110;
              readIdents = _5922_recIdents;
            }
          } else if (_source289.is_Seq) {
            DAST._IType _5923___mcc_h918 = _source289.dtor_element;
            {
              RAST._IType _5924_fromTpeGen;
              RAST._IType _out2111;
              _out2111 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5924_fromTpeGen = _out2111;
              RAST._IType _5925_toTpeGen;
              RAST._IType _out2112;
              _out2112 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5925_toTpeGen = _out2112;
              RAST._IExpr _5926_recursiveGen;
              DCOMP._IOwnership _5927_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5928_recIdents;
              RAST._IExpr _out2113;
              DCOMP._IOwnership _out2114;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2115;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2113, out _out2114, out _out2115);
              _5926_recursiveGen = _out2113;
              _5927_recOwned = _out2114;
              _5928_recIdents = _out2115;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5926_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5924_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5925_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2116;
              DCOMP._IOwnership _out2117;
              DCOMP.COMP.FromOwnership(r, _5927_recOwned, expectedOwnership, out _out2116, out _out2117);
              r = _out2116;
              resultingOwnership = _out2117;
              readIdents = _5928_recIdents;
            }
          } else if (_source289.is_Set) {
            DAST._IType _5929___mcc_h920 = _source289.dtor_element;
            {
              RAST._IType _5930_fromTpeGen;
              RAST._IType _out2118;
              _out2118 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5930_fromTpeGen = _out2118;
              RAST._IType _5931_toTpeGen;
              RAST._IType _out2119;
              _out2119 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5931_toTpeGen = _out2119;
              RAST._IExpr _5932_recursiveGen;
              DCOMP._IOwnership _5933_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5934_recIdents;
              RAST._IExpr _out2120;
              DCOMP._IOwnership _out2121;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2122;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2120, out _out2121, out _out2122);
              _5932_recursiveGen = _out2120;
              _5933_recOwned = _out2121;
              _5934_recIdents = _out2122;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5932_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5930_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5931_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2123;
              DCOMP._IOwnership _out2124;
              DCOMP.COMP.FromOwnership(r, _5933_recOwned, expectedOwnership, out _out2123, out _out2124);
              r = _out2123;
              resultingOwnership = _out2124;
              readIdents = _5934_recIdents;
            }
          } else if (_source289.is_Multiset) {
            DAST._IType _5935___mcc_h922 = _source289.dtor_element;
            {
              RAST._IType _5936_fromTpeGen;
              RAST._IType _out2125;
              _out2125 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5936_fromTpeGen = _out2125;
              RAST._IType _5937_toTpeGen;
              RAST._IType _out2126;
              _out2126 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5937_toTpeGen = _out2126;
              RAST._IExpr _5938_recursiveGen;
              DCOMP._IOwnership _5939_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5940_recIdents;
              RAST._IExpr _out2127;
              DCOMP._IOwnership _out2128;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2129;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2127, out _out2128, out _out2129);
              _5938_recursiveGen = _out2127;
              _5939_recOwned = _out2128;
              _5940_recIdents = _out2129;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5938_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5936_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5937_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2130;
              DCOMP._IOwnership _out2131;
              DCOMP.COMP.FromOwnership(r, _5939_recOwned, expectedOwnership, out _out2130, out _out2131);
              r = _out2130;
              resultingOwnership = _out2131;
              readIdents = _5940_recIdents;
            }
          } else if (_source289.is_Map) {
            DAST._IType _5941___mcc_h924 = _source289.dtor_key;
            DAST._IType _5942___mcc_h925 = _source289.dtor_value;
            {
              RAST._IType _5943_fromTpeGen;
              RAST._IType _out2132;
              _out2132 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5943_fromTpeGen = _out2132;
              RAST._IType _5944_toTpeGen;
              RAST._IType _out2133;
              _out2133 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5944_toTpeGen = _out2133;
              RAST._IExpr _5945_recursiveGen;
              DCOMP._IOwnership _5946_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5947_recIdents;
              RAST._IExpr _out2134;
              DCOMP._IOwnership _out2135;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2136;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2134, out _out2135, out _out2136);
              _5945_recursiveGen = _out2134;
              _5946_recOwned = _out2135;
              _5947_recIdents = _out2136;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5945_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5943_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5944_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2137;
              DCOMP._IOwnership _out2138;
              DCOMP.COMP.FromOwnership(r, _5946_recOwned, expectedOwnership, out _out2137, out _out2138);
              r = _out2137;
              resultingOwnership = _out2138;
              readIdents = _5947_recIdents;
            }
          } else if (_source289.is_SetBuilder) {
            DAST._IType _5948___mcc_h928 = _source289.dtor_element;
            {
              RAST._IType _5949_fromTpeGen;
              RAST._IType _out2139;
              _out2139 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5949_fromTpeGen = _out2139;
              RAST._IType _5950_toTpeGen;
              RAST._IType _out2140;
              _out2140 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5950_toTpeGen = _out2140;
              RAST._IExpr _5951_recursiveGen;
              DCOMP._IOwnership _5952_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5953_recIdents;
              RAST._IExpr _out2141;
              DCOMP._IOwnership _out2142;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2143;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2141, out _out2142, out _out2143);
              _5951_recursiveGen = _out2141;
              _5952_recOwned = _out2142;
              _5953_recIdents = _out2143;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5951_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5949_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5950_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2144;
              DCOMP._IOwnership _out2145;
              DCOMP.COMP.FromOwnership(r, _5952_recOwned, expectedOwnership, out _out2144, out _out2145);
              r = _out2144;
              resultingOwnership = _out2145;
              readIdents = _5953_recIdents;
            }
          } else if (_source289.is_MapBuilder) {
            DAST._IType _5954___mcc_h930 = _source289.dtor_key;
            DAST._IType _5955___mcc_h931 = _source289.dtor_value;
            {
              RAST._IType _5956_fromTpeGen;
              RAST._IType _out2146;
              _out2146 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5956_fromTpeGen = _out2146;
              RAST._IType _5957_toTpeGen;
              RAST._IType _out2147;
              _out2147 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5957_toTpeGen = _out2147;
              RAST._IExpr _5958_recursiveGen;
              DCOMP._IOwnership _5959_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5960_recIdents;
              RAST._IExpr _out2148;
              DCOMP._IOwnership _out2149;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2150;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2148, out _out2149, out _out2150);
              _5958_recursiveGen = _out2148;
              _5959_recOwned = _out2149;
              _5960_recIdents = _out2150;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5958_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5956_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5957_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2151;
              DCOMP._IOwnership _out2152;
              DCOMP.COMP.FromOwnership(r, _5959_recOwned, expectedOwnership, out _out2151, out _out2152);
              r = _out2151;
              resultingOwnership = _out2152;
              readIdents = _5960_recIdents;
            }
          } else if (_source289.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5961___mcc_h934 = _source289.dtor_args;
            DAST._IType _5962___mcc_h935 = _source289.dtor_result;
            {
              RAST._IType _5963_fromTpeGen;
              RAST._IType _out2153;
              _out2153 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5963_fromTpeGen = _out2153;
              RAST._IType _5964_toTpeGen;
              RAST._IType _out2154;
              _out2154 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5964_toTpeGen = _out2154;
              RAST._IExpr _5965_recursiveGen;
              DCOMP._IOwnership _5966_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5967_recIdents;
              RAST._IExpr _out2155;
              DCOMP._IOwnership _out2156;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2157;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2155, out _out2156, out _out2157);
              _5965_recursiveGen = _out2155;
              _5966_recOwned = _out2156;
              _5967_recIdents = _out2157;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5965_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5963_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5964_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2158;
              DCOMP._IOwnership _out2159;
              DCOMP.COMP.FromOwnership(r, _5966_recOwned, expectedOwnership, out _out2158, out _out2159);
              r = _out2158;
              resultingOwnership = _out2159;
              readIdents = _5967_recIdents;
            }
          } else if (_source289.is_Primitive) {
            DAST._IPrimitive _5968___mcc_h938 = _source289.dtor_Primitive_a0;
            {
              RAST._IType _5969_fromTpeGen;
              RAST._IType _out2160;
              _out2160 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5969_fromTpeGen = _out2160;
              RAST._IType _5970_toTpeGen;
              RAST._IType _out2161;
              _out2161 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5970_toTpeGen = _out2161;
              RAST._IExpr _5971_recursiveGen;
              DCOMP._IOwnership _5972_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5973_recIdents;
              RAST._IExpr _out2162;
              DCOMP._IOwnership _out2163;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2164;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2162, out _out2163, out _out2164);
              _5971_recursiveGen = _out2162;
              _5972_recOwned = _out2163;
              _5973_recIdents = _out2164;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5971_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5969_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5970_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2165;
              DCOMP._IOwnership _out2166;
              DCOMP.COMP.FromOwnership(r, _5972_recOwned, expectedOwnership, out _out2165, out _out2166);
              r = _out2165;
              resultingOwnership = _out2166;
              readIdents = _5973_recIdents;
            }
          } else if (_source289.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5974___mcc_h940 = _source289.dtor_Passthrough_a0;
            {
              RAST._IType _5975_fromTpeGen;
              RAST._IType _out2167;
              _out2167 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5975_fromTpeGen = _out2167;
              RAST._IType _5976_toTpeGen;
              RAST._IType _out2168;
              _out2168 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5976_toTpeGen = _out2168;
              RAST._IExpr _5977_recursiveGen;
              DCOMP._IOwnership _5978_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5979_recIdents;
              RAST._IExpr _out2169;
              DCOMP._IOwnership _out2170;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2171;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2169, out _out2170, out _out2171);
              _5977_recursiveGen = _out2169;
              _5978_recOwned = _out2170;
              _5979_recIdents = _out2171;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5977_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5975_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5976_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2172;
              DCOMP._IOwnership _out2173;
              DCOMP.COMP.FromOwnership(r, _5978_recOwned, expectedOwnership, out _out2172, out _out2173);
              r = _out2172;
              resultingOwnership = _out2173;
              readIdents = _5979_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5980___mcc_h942 = _source289.dtor_TypeArg_a0;
            {
              RAST._IType _5981_fromTpeGen;
              RAST._IType _out2174;
              _out2174 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _5981_fromTpeGen = _out2174;
              RAST._IType _5982_toTpeGen;
              RAST._IType _out2175;
              _out2175 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _5982_toTpeGen = _out2175;
              RAST._IExpr _5983_recursiveGen;
              DCOMP._IOwnership _5984_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5985_recIdents;
              RAST._IExpr _out2176;
              DCOMP._IOwnership _out2177;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2178;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2176, out _out2177, out _out2178);
              _5983_recursiveGen = _out2176;
              _5984_recOwned = _out2177;
              _5985_recIdents = _out2178;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5983_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5981_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5982_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2179;
              DCOMP._IOwnership _out2180;
              DCOMP.COMP.FromOwnership(r, _5984_recOwned, expectedOwnership, out _out2179, out _out2180);
              r = _out2179;
              resultingOwnership = _out2180;
              readIdents = _5985_recIdents;
            }
          }
        } else if (_source210.is_Primitive) {
          DAST._IPrimitive _5986___mcc_h944 = _source210.dtor_Primitive_a0;
          DAST._IPrimitive _source294 = _5986___mcc_h944;
          if (_source294.is_Int) {
            DAST._IType _source295 = _3718___mcc_h1;
            if (_source295.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5987___mcc_h948 = _source295.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _5988___mcc_h949 = _source295.dtor_typeArgs;
              DAST._IResolvedType _5989___mcc_h950 = _source295.dtor_resolved;
              DAST._IResolvedType _source296 = _5989___mcc_h950;
              if (_source296.is_AllocatedDatatype) {
                DAST._IDatatypeType _5990___mcc_h954 = _source296.dtor_datatypeType;
                {
                  RAST._IType _5991_fromTpeGen;
                  RAST._IType _out2181;
                  _out2181 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _5991_fromTpeGen = _out2181;
                  RAST._IType _5992_toTpeGen;
                  RAST._IType _out2182;
                  _out2182 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _5992_toTpeGen = _out2182;
                  RAST._IExpr _5993_recursiveGen;
                  DCOMP._IOwnership _5994_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5995_recIdents;
                  RAST._IExpr _out2183;
                  DCOMP._IOwnership _out2184;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2185;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2183, out _out2184, out _out2185);
                  _5993_recursiveGen = _out2183;
                  _5994_recOwned = _out2184;
                  _5995_recIdents = _out2185;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5993_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5991_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5992_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2186;
                  DCOMP._IOwnership _out2187;
                  DCOMP.COMP.FromOwnership(r, _5994_recOwned, expectedOwnership, out _out2186, out _out2187);
                  r = _out2186;
                  resultingOwnership = _out2187;
                  readIdents = _5995_recIdents;
                }
              } else if (_source296.is_Datatype) {
                DAST._IDatatypeType _5996___mcc_h956 = _source296.dtor_datatypeType;
                {
                  RAST._IType _5997_fromTpeGen;
                  RAST._IType _out2188;
                  _out2188 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _5997_fromTpeGen = _out2188;
                  RAST._IType _5998_toTpeGen;
                  RAST._IType _out2189;
                  _out2189 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _5998_toTpeGen = _out2189;
                  RAST._IExpr _5999_recursiveGen;
                  DCOMP._IOwnership _6000_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6001_recIdents;
                  RAST._IExpr _out2190;
                  DCOMP._IOwnership _out2191;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2192;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2190, out _out2191, out _out2192);
                  _5999_recursiveGen = _out2190;
                  _6000_recOwned = _out2191;
                  _6001_recIdents = _out2192;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5999_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5997_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5998_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2193;
                  DCOMP._IOwnership _out2194;
                  DCOMP.COMP.FromOwnership(r, _6000_recOwned, expectedOwnership, out _out2193, out _out2194);
                  r = _out2193;
                  resultingOwnership = _out2194;
                  readIdents = _6001_recIdents;
                }
              } else if (_source296.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6002___mcc_h958 = _source296.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6003___mcc_h959 = _source296.dtor_attributes;
                {
                  RAST._IType _6004_fromTpeGen;
                  RAST._IType _out2195;
                  _out2195 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6004_fromTpeGen = _out2195;
                  RAST._IType _6005_toTpeGen;
                  RAST._IType _out2196;
                  _out2196 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6005_toTpeGen = _out2196;
                  RAST._IExpr _6006_recursiveGen;
                  DCOMP._IOwnership _6007_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6008_recIdents;
                  RAST._IExpr _out2197;
                  DCOMP._IOwnership _out2198;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2199;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2197, out _out2198, out _out2199);
                  _6006_recursiveGen = _out2197;
                  _6007_recOwned = _out2198;
                  _6008_recIdents = _out2199;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6006_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6004_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6005_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2200;
                  DCOMP._IOwnership _out2201;
                  DCOMP.COMP.FromOwnership(r, _6007_recOwned, expectedOwnership, out _out2200, out _out2201);
                  r = _out2200;
                  resultingOwnership = _out2201;
                  readIdents = _6008_recIdents;
                }
              } else {
                DAST._IType _6009___mcc_h962 = _source296.dtor_baseType;
                DAST._INewtypeRange _6010___mcc_h963 = _source296.dtor_range;
                bool _6011___mcc_h964 = _source296.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6012___mcc_h965 = _source296.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6013_attributes = _6012___mcc_h965;
                bool _6014_erase = _6011___mcc_h964;
                DAST._INewtypeRange _6015_range = _6010___mcc_h963;
                DAST._IType _6016_b = _6009___mcc_h962;
                {
                  Std.Wrappers._IOption<RAST._IType> _6017_nativeToType;
                  _6017_nativeToType = DCOMP.COMP.NewtypeToRustType(_6016_b, _6015_range);
                  if (object.Equals(_3712_fromTpe, _6016_b)) {
                    RAST._IExpr _6018_recursiveGen;
                    DCOMP._IOwnership _6019_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6020_recIdents;
                    RAST._IExpr _out2202;
                    DCOMP._IOwnership _out2203;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2204;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2202, out _out2203, out _out2204);
                    _6018_recursiveGen = _out2202;
                    _6019_recOwned = _out2203;
                    _6020_recIdents = _out2204;
                    readIdents = _6020_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source297 = _6017_nativeToType;
                    if (_source297.is_None) {
                      if (_6014_erase) {
                        r = _6018_recursiveGen;
                      } else {
                        RAST._IType _6021_rhsType;
                        RAST._IType _out2205;
                        _out2205 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                        _6021_rhsType = _out2205;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6021_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6018_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2206;
                      DCOMP._IOwnership _out2207;
                      DCOMP.COMP.FromOwnership(r, _6019_recOwned, expectedOwnership, out _out2206, out _out2207);
                      r = _out2206;
                      resultingOwnership = _out2207;
                    } else {
                      RAST._IType _6022___mcc_h2104 = _source297.dtor_value;
                      RAST._IType _6023_v = _6022___mcc_h2104;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6018_recursiveGen, RAST.Expr.create_ExprFromType(_6023_v)));
                      RAST._IExpr _out2208;
                      DCOMP._IOwnership _out2209;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2208, out _out2209);
                      r = _out2208;
                      resultingOwnership = _out2209;
                    }
                  } else {
                    if ((_6017_nativeToType).is_Some) {
                      DAST._IType _source298 = _3712_fromTpe;
                      if (_source298.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6024___mcc_h2105 = _source298.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6025___mcc_h2106 = _source298.dtor_typeArgs;
                        DAST._IResolvedType _6026___mcc_h2107 = _source298.dtor_resolved;
                        DAST._IResolvedType _source299 = _6026___mcc_h2107;
                        if (_source299.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6027___mcc_h2111 = _source299.dtor_datatypeType;
                        } else if (_source299.is_Datatype) {
                          DAST._IDatatypeType _6028___mcc_h2113 = _source299.dtor_datatypeType;
                        } else if (_source299.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6029___mcc_h2115 = _source299.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6030___mcc_h2116 = _source299.dtor_attributes;
                        } else {
                          DAST._IType _6031___mcc_h2119 = _source299.dtor_baseType;
                          DAST._INewtypeRange _6032___mcc_h2120 = _source299.dtor_range;
                          bool _6033___mcc_h2121 = _source299.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6034___mcc_h2122 = _source299.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6035_attributes0 = _6034___mcc_h2122;
                          bool _6036_erase0 = _6033___mcc_h2121;
                          DAST._INewtypeRange _6037_range0 = _6032___mcc_h2120;
                          DAST._IType _6038_b0 = _6031___mcc_h2119;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6039_nativeFromType;
                            _6039_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6038_b0, _6037_range0);
                            if ((_6039_nativeFromType).is_Some) {
                              RAST._IExpr _6040_recursiveGen;
                              DCOMP._IOwnership _6041_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6042_recIdents;
                              RAST._IExpr _out2210;
                              DCOMP._IOwnership _out2211;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2212;
                              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2210, out _out2211, out _out2212);
                              _6040_recursiveGen = _out2210;
                              _6041_recOwned = _out2211;
                              _6042_recIdents = _out2212;
                              RAST._IExpr _out2213;
                              DCOMP._IOwnership _out2214;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6040_recursiveGen, (_6017_nativeToType).dtor_value), _6041_recOwned, expectedOwnership, out _out2213, out _out2214);
                              r = _out2213;
                              resultingOwnership = _out2214;
                              readIdents = _6042_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source298.is_Nullable) {
                        DAST._IType _6043___mcc_h2127 = _source298.dtor_Nullable_a0;
                      } else if (_source298.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6044___mcc_h2129 = _source298.dtor_Tuple_a0;
                      } else if (_source298.is_Array) {
                        DAST._IType _6045___mcc_h2131 = _source298.dtor_element;
                        BigInteger _6046___mcc_h2132 = _source298.dtor_dims;
                      } else if (_source298.is_Seq) {
                        DAST._IType _6047___mcc_h2135 = _source298.dtor_element;
                      } else if (_source298.is_Set) {
                        DAST._IType _6048___mcc_h2137 = _source298.dtor_element;
                      } else if (_source298.is_Multiset) {
                        DAST._IType _6049___mcc_h2139 = _source298.dtor_element;
                      } else if (_source298.is_Map) {
                        DAST._IType _6050___mcc_h2141 = _source298.dtor_key;
                        DAST._IType _6051___mcc_h2142 = _source298.dtor_value;
                      } else if (_source298.is_SetBuilder) {
                        DAST._IType _6052___mcc_h2145 = _source298.dtor_element;
                      } else if (_source298.is_MapBuilder) {
                        DAST._IType _6053___mcc_h2147 = _source298.dtor_key;
                        DAST._IType _6054___mcc_h2148 = _source298.dtor_value;
                      } else if (_source298.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6055___mcc_h2151 = _source298.dtor_args;
                        DAST._IType _6056___mcc_h2152 = _source298.dtor_result;
                      } else if (_source298.is_Primitive) {
                        DAST._IPrimitive _6057___mcc_h2155 = _source298.dtor_Primitive_a0;
                      } else if (_source298.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6058___mcc_h2157 = _source298.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6059___mcc_h2159 = _source298.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6060_recursiveGen;
                        DCOMP._IOwnership _6061_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6062_recIdents;
                        RAST._IExpr _out2215;
                        DCOMP._IOwnership _out2216;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2217;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2215, out _out2216, out _out2217);
                        _6060_recursiveGen = _out2215;
                        _6061_recOwned = _out2216;
                        _6062_recIdents = _out2217;
                        RAST._IExpr _out2218;
                        DCOMP._IOwnership _out2219;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6060_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6017_nativeToType).dtor_value), _6061_recOwned, expectedOwnership, out _out2218, out _out2219);
                        r = _out2218;
                        resultingOwnership = _out2219;
                        readIdents = _6062_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2220;
                    DCOMP._IOwnership _out2221;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2222;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _6016_b), _6016_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out2220, out _out2221, out _out2222);
                    r = _out2220;
                    resultingOwnership = _out2221;
                    readIdents = _out2222;
                  }
                }
              }
            } else if (_source295.is_Nullable) {
              DAST._IType _6063___mcc_h970 = _source295.dtor_Nullable_a0;
              {
                RAST._IExpr _6064_recursiveGen;
                DCOMP._IOwnership _6065_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6066_recIdents;
                RAST._IExpr _out2223;
                DCOMP._IOwnership _out2224;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2225;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2223, out _out2224, out _out2225);
                _6064_recursiveGen = _out2223;
                _6065_recOwned = _out2224;
                _6066_recIdents = _out2225;
                r = _6064_recursiveGen;
                if (object.Equals(_6065_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2226;
                DCOMP._IOwnership _out2227;
                DCOMP.COMP.FromOwnership(r, _6065_recOwned, expectedOwnership, out _out2226, out _out2227);
                r = _out2226;
                resultingOwnership = _out2227;
                readIdents = _6066_recIdents;
              }
            } else if (_source295.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6067___mcc_h972 = _source295.dtor_Tuple_a0;
              {
                RAST._IType _6068_fromTpeGen;
                RAST._IType _out2228;
                _out2228 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6068_fromTpeGen = _out2228;
                RAST._IType _6069_toTpeGen;
                RAST._IType _out2229;
                _out2229 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6069_toTpeGen = _out2229;
                RAST._IExpr _6070_recursiveGen;
                DCOMP._IOwnership _6071_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6072_recIdents;
                RAST._IExpr _out2230;
                DCOMP._IOwnership _out2231;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2232;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2230, out _out2231, out _out2232);
                _6070_recursiveGen = _out2230;
                _6071_recOwned = _out2231;
                _6072_recIdents = _out2232;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6070_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6068_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6069_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2233;
                DCOMP._IOwnership _out2234;
                DCOMP.COMP.FromOwnership(r, _6071_recOwned, expectedOwnership, out _out2233, out _out2234);
                r = _out2233;
                resultingOwnership = _out2234;
                readIdents = _6072_recIdents;
              }
            } else if (_source295.is_Array) {
              DAST._IType _6073___mcc_h974 = _source295.dtor_element;
              BigInteger _6074___mcc_h975 = _source295.dtor_dims;
              {
                RAST._IType _6075_fromTpeGen;
                RAST._IType _out2235;
                _out2235 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6075_fromTpeGen = _out2235;
                RAST._IType _6076_toTpeGen;
                RAST._IType _out2236;
                _out2236 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6076_toTpeGen = _out2236;
                RAST._IExpr _6077_recursiveGen;
                DCOMP._IOwnership _6078_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6079_recIdents;
                RAST._IExpr _out2237;
                DCOMP._IOwnership _out2238;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2239;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2237, out _out2238, out _out2239);
                _6077_recursiveGen = _out2237;
                _6078_recOwned = _out2238;
                _6079_recIdents = _out2239;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6077_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6075_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6076_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2240;
                DCOMP._IOwnership _out2241;
                DCOMP.COMP.FromOwnership(r, _6078_recOwned, expectedOwnership, out _out2240, out _out2241);
                r = _out2240;
                resultingOwnership = _out2241;
                readIdents = _6079_recIdents;
              }
            } else if (_source295.is_Seq) {
              DAST._IType _6080___mcc_h978 = _source295.dtor_element;
              {
                RAST._IType _6081_fromTpeGen;
                RAST._IType _out2242;
                _out2242 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6081_fromTpeGen = _out2242;
                RAST._IType _6082_toTpeGen;
                RAST._IType _out2243;
                _out2243 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6082_toTpeGen = _out2243;
                RAST._IExpr _6083_recursiveGen;
                DCOMP._IOwnership _6084_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6085_recIdents;
                RAST._IExpr _out2244;
                DCOMP._IOwnership _out2245;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2246;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2244, out _out2245, out _out2246);
                _6083_recursiveGen = _out2244;
                _6084_recOwned = _out2245;
                _6085_recIdents = _out2246;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6083_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6081_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6082_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2247;
                DCOMP._IOwnership _out2248;
                DCOMP.COMP.FromOwnership(r, _6084_recOwned, expectedOwnership, out _out2247, out _out2248);
                r = _out2247;
                resultingOwnership = _out2248;
                readIdents = _6085_recIdents;
              }
            } else if (_source295.is_Set) {
              DAST._IType _6086___mcc_h980 = _source295.dtor_element;
              {
                RAST._IType _6087_fromTpeGen;
                RAST._IType _out2249;
                _out2249 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6087_fromTpeGen = _out2249;
                RAST._IType _6088_toTpeGen;
                RAST._IType _out2250;
                _out2250 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6088_toTpeGen = _out2250;
                RAST._IExpr _6089_recursiveGen;
                DCOMP._IOwnership _6090_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6091_recIdents;
                RAST._IExpr _out2251;
                DCOMP._IOwnership _out2252;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2253;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2251, out _out2252, out _out2253);
                _6089_recursiveGen = _out2251;
                _6090_recOwned = _out2252;
                _6091_recIdents = _out2253;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6089_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6087_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6088_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2254;
                DCOMP._IOwnership _out2255;
                DCOMP.COMP.FromOwnership(r, _6090_recOwned, expectedOwnership, out _out2254, out _out2255);
                r = _out2254;
                resultingOwnership = _out2255;
                readIdents = _6091_recIdents;
              }
            } else if (_source295.is_Multiset) {
              DAST._IType _6092___mcc_h982 = _source295.dtor_element;
              {
                RAST._IType _6093_fromTpeGen;
                RAST._IType _out2256;
                _out2256 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6093_fromTpeGen = _out2256;
                RAST._IType _6094_toTpeGen;
                RAST._IType _out2257;
                _out2257 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6094_toTpeGen = _out2257;
                RAST._IExpr _6095_recursiveGen;
                DCOMP._IOwnership _6096_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6097_recIdents;
                RAST._IExpr _out2258;
                DCOMP._IOwnership _out2259;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2260;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2258, out _out2259, out _out2260);
                _6095_recursiveGen = _out2258;
                _6096_recOwned = _out2259;
                _6097_recIdents = _out2260;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6095_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6093_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6094_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2261;
                DCOMP._IOwnership _out2262;
                DCOMP.COMP.FromOwnership(r, _6096_recOwned, expectedOwnership, out _out2261, out _out2262);
                r = _out2261;
                resultingOwnership = _out2262;
                readIdents = _6097_recIdents;
              }
            } else if (_source295.is_Map) {
              DAST._IType _6098___mcc_h984 = _source295.dtor_key;
              DAST._IType _6099___mcc_h985 = _source295.dtor_value;
              {
                RAST._IType _6100_fromTpeGen;
                RAST._IType _out2263;
                _out2263 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6100_fromTpeGen = _out2263;
                RAST._IType _6101_toTpeGen;
                RAST._IType _out2264;
                _out2264 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6101_toTpeGen = _out2264;
                RAST._IExpr _6102_recursiveGen;
                DCOMP._IOwnership _6103_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6104_recIdents;
                RAST._IExpr _out2265;
                DCOMP._IOwnership _out2266;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2267;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2265, out _out2266, out _out2267);
                _6102_recursiveGen = _out2265;
                _6103_recOwned = _out2266;
                _6104_recIdents = _out2267;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6102_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6100_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6101_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2268;
                DCOMP._IOwnership _out2269;
                DCOMP.COMP.FromOwnership(r, _6103_recOwned, expectedOwnership, out _out2268, out _out2269);
                r = _out2268;
                resultingOwnership = _out2269;
                readIdents = _6104_recIdents;
              }
            } else if (_source295.is_SetBuilder) {
              DAST._IType _6105___mcc_h988 = _source295.dtor_element;
              {
                RAST._IType _6106_fromTpeGen;
                RAST._IType _out2270;
                _out2270 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6106_fromTpeGen = _out2270;
                RAST._IType _6107_toTpeGen;
                RAST._IType _out2271;
                _out2271 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6107_toTpeGen = _out2271;
                RAST._IExpr _6108_recursiveGen;
                DCOMP._IOwnership _6109_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6110_recIdents;
                RAST._IExpr _out2272;
                DCOMP._IOwnership _out2273;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2274;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2272, out _out2273, out _out2274);
                _6108_recursiveGen = _out2272;
                _6109_recOwned = _out2273;
                _6110_recIdents = _out2274;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6108_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6106_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6107_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2275;
                DCOMP._IOwnership _out2276;
                DCOMP.COMP.FromOwnership(r, _6109_recOwned, expectedOwnership, out _out2275, out _out2276);
                r = _out2275;
                resultingOwnership = _out2276;
                readIdents = _6110_recIdents;
              }
            } else if (_source295.is_MapBuilder) {
              DAST._IType _6111___mcc_h990 = _source295.dtor_key;
              DAST._IType _6112___mcc_h991 = _source295.dtor_value;
              {
                RAST._IType _6113_fromTpeGen;
                RAST._IType _out2277;
                _out2277 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6113_fromTpeGen = _out2277;
                RAST._IType _6114_toTpeGen;
                RAST._IType _out2278;
                _out2278 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6114_toTpeGen = _out2278;
                RAST._IExpr _6115_recursiveGen;
                DCOMP._IOwnership _6116_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6117_recIdents;
                RAST._IExpr _out2279;
                DCOMP._IOwnership _out2280;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2281;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2279, out _out2280, out _out2281);
                _6115_recursiveGen = _out2279;
                _6116_recOwned = _out2280;
                _6117_recIdents = _out2281;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6115_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6113_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6114_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2282;
                DCOMP._IOwnership _out2283;
                DCOMP.COMP.FromOwnership(r, _6116_recOwned, expectedOwnership, out _out2282, out _out2283);
                r = _out2282;
                resultingOwnership = _out2283;
                readIdents = _6117_recIdents;
              }
            } else if (_source295.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6118___mcc_h994 = _source295.dtor_args;
              DAST._IType _6119___mcc_h995 = _source295.dtor_result;
              {
                RAST._IType _6120_fromTpeGen;
                RAST._IType _out2284;
                _out2284 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6120_fromTpeGen = _out2284;
                RAST._IType _6121_toTpeGen;
                RAST._IType _out2285;
                _out2285 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6121_toTpeGen = _out2285;
                RAST._IExpr _6122_recursiveGen;
                DCOMP._IOwnership _6123_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6124_recIdents;
                RAST._IExpr _out2286;
                DCOMP._IOwnership _out2287;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2288;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2286, out _out2287, out _out2288);
                _6122_recursiveGen = _out2286;
                _6123_recOwned = _out2287;
                _6124_recIdents = _out2288;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6122_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6120_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6121_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2289;
                DCOMP._IOwnership _out2290;
                DCOMP.COMP.FromOwnership(r, _6123_recOwned, expectedOwnership, out _out2289, out _out2290);
                r = _out2289;
                resultingOwnership = _out2290;
                readIdents = _6124_recIdents;
              }
            } else if (_source295.is_Primitive) {
              DAST._IPrimitive _6125___mcc_h998 = _source295.dtor_Primitive_a0;
              DAST._IPrimitive _source300 = _6125___mcc_h998;
              if (_source300.is_Int) {
                {
                  RAST._IType _6126_fromTpeGen;
                  RAST._IType _out2291;
                  _out2291 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6126_fromTpeGen = _out2291;
                  RAST._IType _6127_toTpeGen;
                  RAST._IType _out2292;
                  _out2292 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6127_toTpeGen = _out2292;
                  RAST._IExpr _6128_recursiveGen;
                  DCOMP._IOwnership _6129_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6130_recIdents;
                  RAST._IExpr _out2293;
                  DCOMP._IOwnership _out2294;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2295;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2293, out _out2294, out _out2295);
                  _6128_recursiveGen = _out2293;
                  _6129_recOwned = _out2294;
                  _6130_recIdents = _out2295;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6128_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6126_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6127_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2296;
                  DCOMP._IOwnership _out2297;
                  DCOMP.COMP.FromOwnership(r, _6129_recOwned, expectedOwnership, out _out2296, out _out2297);
                  r = _out2296;
                  resultingOwnership = _out2297;
                  readIdents = _6130_recIdents;
                }
              } else if (_source300.is_Real) {
                {
                  RAST._IExpr _6131_recursiveGen;
                  DCOMP._IOwnership _6132___v97;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6133_recIdents;
                  RAST._IExpr _out2298;
                  DCOMP._IOwnership _out2299;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2300;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2298, out _out2299, out _out2300);
                  _6131_recursiveGen = _out2298;
                  _6132___v97 = _out2299;
                  _6133_recIdents = _out2300;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_6131_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out2301;
                  DCOMP._IOwnership _out2302;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2301, out _out2302);
                  r = _out2301;
                  resultingOwnership = _out2302;
                  readIdents = _6133_recIdents;
                }
              } else if (_source300.is_String) {
                {
                  RAST._IType _6134_fromTpeGen;
                  RAST._IType _out2303;
                  _out2303 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6134_fromTpeGen = _out2303;
                  RAST._IType _6135_toTpeGen;
                  RAST._IType _out2304;
                  _out2304 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6135_toTpeGen = _out2304;
                  RAST._IExpr _6136_recursiveGen;
                  DCOMP._IOwnership _6137_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6138_recIdents;
                  RAST._IExpr _out2305;
                  DCOMP._IOwnership _out2306;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2307;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2305, out _out2306, out _out2307);
                  _6136_recursiveGen = _out2305;
                  _6137_recOwned = _out2306;
                  _6138_recIdents = _out2307;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6136_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6134_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6135_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2308;
                  DCOMP._IOwnership _out2309;
                  DCOMP.COMP.FromOwnership(r, _6137_recOwned, expectedOwnership, out _out2308, out _out2309);
                  r = _out2308;
                  resultingOwnership = _out2309;
                  readIdents = _6138_recIdents;
                }
              } else if (_source300.is_Bool) {
                {
                  RAST._IType _6139_fromTpeGen;
                  RAST._IType _out2310;
                  _out2310 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6139_fromTpeGen = _out2310;
                  RAST._IType _6140_toTpeGen;
                  RAST._IType _out2311;
                  _out2311 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6140_toTpeGen = _out2311;
                  RAST._IExpr _6141_recursiveGen;
                  DCOMP._IOwnership _6142_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6143_recIdents;
                  RAST._IExpr _out2312;
                  DCOMP._IOwnership _out2313;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2314;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2312, out _out2313, out _out2314);
                  _6141_recursiveGen = _out2312;
                  _6142_recOwned = _out2313;
                  _6143_recIdents = _out2314;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6141_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6139_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6140_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2315;
                  DCOMP._IOwnership _out2316;
                  DCOMP.COMP.FromOwnership(r, _6142_recOwned, expectedOwnership, out _out2315, out _out2316);
                  r = _out2315;
                  resultingOwnership = _out2316;
                  readIdents = _6143_recIdents;
                }
              } else {
                {
                  RAST._IType _6144_rhsType;
                  RAST._IType _out2317;
                  _out2317 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6144_rhsType = _out2317;
                  RAST._IExpr _6145_recursiveGen;
                  DCOMP._IOwnership _6146___v103;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6147_recIdents;
                  RAST._IExpr _out2318;
                  DCOMP._IOwnership _out2319;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2320;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2318, out _out2319, out _out2320);
                  _6145_recursiveGen = _out2318;
                  _6146___v103 = _out2319;
                  _6147_recIdents = _out2320;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_6145_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out2321;
                  DCOMP._IOwnership _out2322;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2321, out _out2322);
                  r = _out2321;
                  resultingOwnership = _out2322;
                  readIdents = _6147_recIdents;
                }
              }
            } else if (_source295.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6148___mcc_h1000 = _source295.dtor_Passthrough_a0;
              {
                RAST._IType _6149_rhsType;
                RAST._IType _out2323;
                _out2323 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6149_rhsType = _out2323;
                RAST._IExpr _6150_recursiveGen;
                DCOMP._IOwnership _6151___v100;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6152_recIdents;
                RAST._IExpr _out2324;
                DCOMP._IOwnership _out2325;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2326;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2324, out _out2325, out _out2326);
                _6150_recursiveGen = _out2324;
                _6151___v100 = _out2325;
                _6152_recIdents = _out2326;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_6149_rhsType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_6150_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out2327;
                DCOMP._IOwnership _out2328;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2327, out _out2328);
                r = _out2327;
                resultingOwnership = _out2328;
                readIdents = _6152_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6153___mcc_h1002 = _source295.dtor_TypeArg_a0;
              {
                RAST._IType _6154_fromTpeGen;
                RAST._IType _out2329;
                _out2329 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6154_fromTpeGen = _out2329;
                RAST._IType _6155_toTpeGen;
                RAST._IType _out2330;
                _out2330 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6155_toTpeGen = _out2330;
                RAST._IExpr _6156_recursiveGen;
                DCOMP._IOwnership _6157_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6158_recIdents;
                RAST._IExpr _out2331;
                DCOMP._IOwnership _out2332;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2333;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2331, out _out2332, out _out2333);
                _6156_recursiveGen = _out2331;
                _6157_recOwned = _out2332;
                _6158_recIdents = _out2333;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6156_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6154_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6155_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2334;
                DCOMP._IOwnership _out2335;
                DCOMP.COMP.FromOwnership(r, _6157_recOwned, expectedOwnership, out _out2334, out _out2335);
                r = _out2334;
                resultingOwnership = _out2335;
                readIdents = _6158_recIdents;
              }
            }
          } else if (_source294.is_Real) {
            DAST._IType _source301 = _3718___mcc_h1;
            if (_source301.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6159___mcc_h1004 = _source301.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6160___mcc_h1005 = _source301.dtor_typeArgs;
              DAST._IResolvedType _6161___mcc_h1006 = _source301.dtor_resolved;
              DAST._IResolvedType _source302 = _6161___mcc_h1006;
              if (_source302.is_AllocatedDatatype) {
                DAST._IDatatypeType _6162___mcc_h1010 = _source302.dtor_datatypeType;
                {
                  RAST._IType _6163_fromTpeGen;
                  RAST._IType _out2336;
                  _out2336 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6163_fromTpeGen = _out2336;
                  RAST._IType _6164_toTpeGen;
                  RAST._IType _out2337;
                  _out2337 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6164_toTpeGen = _out2337;
                  RAST._IExpr _6165_recursiveGen;
                  DCOMP._IOwnership _6166_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6167_recIdents;
                  RAST._IExpr _out2338;
                  DCOMP._IOwnership _out2339;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2340;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2338, out _out2339, out _out2340);
                  _6165_recursiveGen = _out2338;
                  _6166_recOwned = _out2339;
                  _6167_recIdents = _out2340;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6165_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6163_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6164_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2341;
                  DCOMP._IOwnership _out2342;
                  DCOMP.COMP.FromOwnership(r, _6166_recOwned, expectedOwnership, out _out2341, out _out2342);
                  r = _out2341;
                  resultingOwnership = _out2342;
                  readIdents = _6167_recIdents;
                }
              } else if (_source302.is_Datatype) {
                DAST._IDatatypeType _6168___mcc_h1012 = _source302.dtor_datatypeType;
                {
                  RAST._IType _6169_fromTpeGen;
                  RAST._IType _out2343;
                  _out2343 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6169_fromTpeGen = _out2343;
                  RAST._IType _6170_toTpeGen;
                  RAST._IType _out2344;
                  _out2344 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6170_toTpeGen = _out2344;
                  RAST._IExpr _6171_recursiveGen;
                  DCOMP._IOwnership _6172_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6173_recIdents;
                  RAST._IExpr _out2345;
                  DCOMP._IOwnership _out2346;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2347;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2345, out _out2346, out _out2347);
                  _6171_recursiveGen = _out2345;
                  _6172_recOwned = _out2346;
                  _6173_recIdents = _out2347;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6171_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6169_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6170_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2348;
                  DCOMP._IOwnership _out2349;
                  DCOMP.COMP.FromOwnership(r, _6172_recOwned, expectedOwnership, out _out2348, out _out2349);
                  r = _out2348;
                  resultingOwnership = _out2349;
                  readIdents = _6173_recIdents;
                }
              } else if (_source302.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6174___mcc_h1014 = _source302.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6175___mcc_h1015 = _source302.dtor_attributes;
                {
                  RAST._IType _6176_fromTpeGen;
                  RAST._IType _out2350;
                  _out2350 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6176_fromTpeGen = _out2350;
                  RAST._IType _6177_toTpeGen;
                  RAST._IType _out2351;
                  _out2351 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6177_toTpeGen = _out2351;
                  RAST._IExpr _6178_recursiveGen;
                  DCOMP._IOwnership _6179_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6180_recIdents;
                  RAST._IExpr _out2352;
                  DCOMP._IOwnership _out2353;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2354;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2352, out _out2353, out _out2354);
                  _6178_recursiveGen = _out2352;
                  _6179_recOwned = _out2353;
                  _6180_recIdents = _out2354;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6178_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6176_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6177_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2355;
                  DCOMP._IOwnership _out2356;
                  DCOMP.COMP.FromOwnership(r, _6179_recOwned, expectedOwnership, out _out2355, out _out2356);
                  r = _out2355;
                  resultingOwnership = _out2356;
                  readIdents = _6180_recIdents;
                }
              } else {
                DAST._IType _6181___mcc_h1018 = _source302.dtor_baseType;
                DAST._INewtypeRange _6182___mcc_h1019 = _source302.dtor_range;
                bool _6183___mcc_h1020 = _source302.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6184___mcc_h1021 = _source302.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6185_attributes = _6184___mcc_h1021;
                bool _6186_erase = _6183___mcc_h1020;
                DAST._INewtypeRange _6187_range = _6182___mcc_h1019;
                DAST._IType _6188_b = _6181___mcc_h1018;
                {
                  Std.Wrappers._IOption<RAST._IType> _6189_nativeToType;
                  _6189_nativeToType = DCOMP.COMP.NewtypeToRustType(_6188_b, _6187_range);
                  if (object.Equals(_3712_fromTpe, _6188_b)) {
                    RAST._IExpr _6190_recursiveGen;
                    DCOMP._IOwnership _6191_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6192_recIdents;
                    RAST._IExpr _out2357;
                    DCOMP._IOwnership _out2358;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2359;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2357, out _out2358, out _out2359);
                    _6190_recursiveGen = _out2357;
                    _6191_recOwned = _out2358;
                    _6192_recIdents = _out2359;
                    readIdents = _6192_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source303 = _6189_nativeToType;
                    if (_source303.is_None) {
                      if (_6186_erase) {
                        r = _6190_recursiveGen;
                      } else {
                        RAST._IType _6193_rhsType;
                        RAST._IType _out2360;
                        _out2360 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                        _6193_rhsType = _out2360;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6193_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6190_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2361;
                      DCOMP._IOwnership _out2362;
                      DCOMP.COMP.FromOwnership(r, _6191_recOwned, expectedOwnership, out _out2361, out _out2362);
                      r = _out2361;
                      resultingOwnership = _out2362;
                    } else {
                      RAST._IType _6194___mcc_h2161 = _source303.dtor_value;
                      RAST._IType _6195_v = _6194___mcc_h2161;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6190_recursiveGen, RAST.Expr.create_ExprFromType(_6195_v)));
                      RAST._IExpr _out2363;
                      DCOMP._IOwnership _out2364;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2363, out _out2364);
                      r = _out2363;
                      resultingOwnership = _out2364;
                    }
                  } else {
                    if ((_6189_nativeToType).is_Some) {
                      DAST._IType _source304 = _3712_fromTpe;
                      if (_source304.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6196___mcc_h2162 = _source304.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6197___mcc_h2163 = _source304.dtor_typeArgs;
                        DAST._IResolvedType _6198___mcc_h2164 = _source304.dtor_resolved;
                        DAST._IResolvedType _source305 = _6198___mcc_h2164;
                        if (_source305.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6199___mcc_h2168 = _source305.dtor_datatypeType;
                        } else if (_source305.is_Datatype) {
                          DAST._IDatatypeType _6200___mcc_h2170 = _source305.dtor_datatypeType;
                        } else if (_source305.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6201___mcc_h2172 = _source305.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6202___mcc_h2173 = _source305.dtor_attributes;
                        } else {
                          DAST._IType _6203___mcc_h2176 = _source305.dtor_baseType;
                          DAST._INewtypeRange _6204___mcc_h2177 = _source305.dtor_range;
                          bool _6205___mcc_h2178 = _source305.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6206___mcc_h2179 = _source305.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6207_attributes0 = _6206___mcc_h2179;
                          bool _6208_erase0 = _6205___mcc_h2178;
                          DAST._INewtypeRange _6209_range0 = _6204___mcc_h2177;
                          DAST._IType _6210_b0 = _6203___mcc_h2176;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6211_nativeFromType;
                            _6211_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6210_b0, _6209_range0);
                            if ((_6211_nativeFromType).is_Some) {
                              RAST._IExpr _6212_recursiveGen;
                              DCOMP._IOwnership _6213_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6214_recIdents;
                              RAST._IExpr _out2365;
                              DCOMP._IOwnership _out2366;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2367;
                              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2365, out _out2366, out _out2367);
                              _6212_recursiveGen = _out2365;
                              _6213_recOwned = _out2366;
                              _6214_recIdents = _out2367;
                              RAST._IExpr _out2368;
                              DCOMP._IOwnership _out2369;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6212_recursiveGen, (_6189_nativeToType).dtor_value), _6213_recOwned, expectedOwnership, out _out2368, out _out2369);
                              r = _out2368;
                              resultingOwnership = _out2369;
                              readIdents = _6214_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source304.is_Nullable) {
                        DAST._IType _6215___mcc_h2184 = _source304.dtor_Nullable_a0;
                      } else if (_source304.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6216___mcc_h2186 = _source304.dtor_Tuple_a0;
                      } else if (_source304.is_Array) {
                        DAST._IType _6217___mcc_h2188 = _source304.dtor_element;
                        BigInteger _6218___mcc_h2189 = _source304.dtor_dims;
                      } else if (_source304.is_Seq) {
                        DAST._IType _6219___mcc_h2192 = _source304.dtor_element;
                      } else if (_source304.is_Set) {
                        DAST._IType _6220___mcc_h2194 = _source304.dtor_element;
                      } else if (_source304.is_Multiset) {
                        DAST._IType _6221___mcc_h2196 = _source304.dtor_element;
                      } else if (_source304.is_Map) {
                        DAST._IType _6222___mcc_h2198 = _source304.dtor_key;
                        DAST._IType _6223___mcc_h2199 = _source304.dtor_value;
                      } else if (_source304.is_SetBuilder) {
                        DAST._IType _6224___mcc_h2202 = _source304.dtor_element;
                      } else if (_source304.is_MapBuilder) {
                        DAST._IType _6225___mcc_h2204 = _source304.dtor_key;
                        DAST._IType _6226___mcc_h2205 = _source304.dtor_value;
                      } else if (_source304.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6227___mcc_h2208 = _source304.dtor_args;
                        DAST._IType _6228___mcc_h2209 = _source304.dtor_result;
                      } else if (_source304.is_Primitive) {
                        DAST._IPrimitive _6229___mcc_h2212 = _source304.dtor_Primitive_a0;
                      } else if (_source304.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6230___mcc_h2214 = _source304.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6231___mcc_h2216 = _source304.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6232_recursiveGen;
                        DCOMP._IOwnership _6233_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6234_recIdents;
                        RAST._IExpr _out2370;
                        DCOMP._IOwnership _out2371;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2372;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2370, out _out2371, out _out2372);
                        _6232_recursiveGen = _out2370;
                        _6233_recOwned = _out2371;
                        _6234_recIdents = _out2372;
                        RAST._IExpr _out2373;
                        DCOMP._IOwnership _out2374;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6232_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6189_nativeToType).dtor_value), _6233_recOwned, expectedOwnership, out _out2373, out _out2374);
                        r = _out2373;
                        resultingOwnership = _out2374;
                        readIdents = _6234_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2375;
                    DCOMP._IOwnership _out2376;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2377;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _6188_b), _6188_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out2375, out _out2376, out _out2377);
                    r = _out2375;
                    resultingOwnership = _out2376;
                    readIdents = _out2377;
                  }
                }
              }
            } else if (_source301.is_Nullable) {
              DAST._IType _6235___mcc_h1026 = _source301.dtor_Nullable_a0;
              {
                RAST._IExpr _6236_recursiveGen;
                DCOMP._IOwnership _6237_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6238_recIdents;
                RAST._IExpr _out2378;
                DCOMP._IOwnership _out2379;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2380;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2378, out _out2379, out _out2380);
                _6236_recursiveGen = _out2378;
                _6237_recOwned = _out2379;
                _6238_recIdents = _out2380;
                r = _6236_recursiveGen;
                if (object.Equals(_6237_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2381;
                DCOMP._IOwnership _out2382;
                DCOMP.COMP.FromOwnership(r, _6237_recOwned, expectedOwnership, out _out2381, out _out2382);
                r = _out2381;
                resultingOwnership = _out2382;
                readIdents = _6238_recIdents;
              }
            } else if (_source301.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6239___mcc_h1028 = _source301.dtor_Tuple_a0;
              {
                RAST._IType _6240_fromTpeGen;
                RAST._IType _out2383;
                _out2383 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6240_fromTpeGen = _out2383;
                RAST._IType _6241_toTpeGen;
                RAST._IType _out2384;
                _out2384 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6241_toTpeGen = _out2384;
                RAST._IExpr _6242_recursiveGen;
                DCOMP._IOwnership _6243_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6244_recIdents;
                RAST._IExpr _out2385;
                DCOMP._IOwnership _out2386;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2387;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2385, out _out2386, out _out2387);
                _6242_recursiveGen = _out2385;
                _6243_recOwned = _out2386;
                _6244_recIdents = _out2387;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6242_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6240_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6241_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2388;
                DCOMP._IOwnership _out2389;
                DCOMP.COMP.FromOwnership(r, _6243_recOwned, expectedOwnership, out _out2388, out _out2389);
                r = _out2388;
                resultingOwnership = _out2389;
                readIdents = _6244_recIdents;
              }
            } else if (_source301.is_Array) {
              DAST._IType _6245___mcc_h1030 = _source301.dtor_element;
              BigInteger _6246___mcc_h1031 = _source301.dtor_dims;
              {
                RAST._IType _6247_fromTpeGen;
                RAST._IType _out2390;
                _out2390 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6247_fromTpeGen = _out2390;
                RAST._IType _6248_toTpeGen;
                RAST._IType _out2391;
                _out2391 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6248_toTpeGen = _out2391;
                RAST._IExpr _6249_recursiveGen;
                DCOMP._IOwnership _6250_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6251_recIdents;
                RAST._IExpr _out2392;
                DCOMP._IOwnership _out2393;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2394;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2392, out _out2393, out _out2394);
                _6249_recursiveGen = _out2392;
                _6250_recOwned = _out2393;
                _6251_recIdents = _out2394;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6249_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6247_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6248_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2395;
                DCOMP._IOwnership _out2396;
                DCOMP.COMP.FromOwnership(r, _6250_recOwned, expectedOwnership, out _out2395, out _out2396);
                r = _out2395;
                resultingOwnership = _out2396;
                readIdents = _6251_recIdents;
              }
            } else if (_source301.is_Seq) {
              DAST._IType _6252___mcc_h1034 = _source301.dtor_element;
              {
                RAST._IType _6253_fromTpeGen;
                RAST._IType _out2397;
                _out2397 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6253_fromTpeGen = _out2397;
                RAST._IType _6254_toTpeGen;
                RAST._IType _out2398;
                _out2398 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6254_toTpeGen = _out2398;
                RAST._IExpr _6255_recursiveGen;
                DCOMP._IOwnership _6256_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6257_recIdents;
                RAST._IExpr _out2399;
                DCOMP._IOwnership _out2400;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2401;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2399, out _out2400, out _out2401);
                _6255_recursiveGen = _out2399;
                _6256_recOwned = _out2400;
                _6257_recIdents = _out2401;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6255_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6253_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6254_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2402;
                DCOMP._IOwnership _out2403;
                DCOMP.COMP.FromOwnership(r, _6256_recOwned, expectedOwnership, out _out2402, out _out2403);
                r = _out2402;
                resultingOwnership = _out2403;
                readIdents = _6257_recIdents;
              }
            } else if (_source301.is_Set) {
              DAST._IType _6258___mcc_h1036 = _source301.dtor_element;
              {
                RAST._IType _6259_fromTpeGen;
                RAST._IType _out2404;
                _out2404 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6259_fromTpeGen = _out2404;
                RAST._IType _6260_toTpeGen;
                RAST._IType _out2405;
                _out2405 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6260_toTpeGen = _out2405;
                RAST._IExpr _6261_recursiveGen;
                DCOMP._IOwnership _6262_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6263_recIdents;
                RAST._IExpr _out2406;
                DCOMP._IOwnership _out2407;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2408;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2406, out _out2407, out _out2408);
                _6261_recursiveGen = _out2406;
                _6262_recOwned = _out2407;
                _6263_recIdents = _out2408;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6261_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6259_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6260_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2409;
                DCOMP._IOwnership _out2410;
                DCOMP.COMP.FromOwnership(r, _6262_recOwned, expectedOwnership, out _out2409, out _out2410);
                r = _out2409;
                resultingOwnership = _out2410;
                readIdents = _6263_recIdents;
              }
            } else if (_source301.is_Multiset) {
              DAST._IType _6264___mcc_h1038 = _source301.dtor_element;
              {
                RAST._IType _6265_fromTpeGen;
                RAST._IType _out2411;
                _out2411 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6265_fromTpeGen = _out2411;
                RAST._IType _6266_toTpeGen;
                RAST._IType _out2412;
                _out2412 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6266_toTpeGen = _out2412;
                RAST._IExpr _6267_recursiveGen;
                DCOMP._IOwnership _6268_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6269_recIdents;
                RAST._IExpr _out2413;
                DCOMP._IOwnership _out2414;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2415;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2413, out _out2414, out _out2415);
                _6267_recursiveGen = _out2413;
                _6268_recOwned = _out2414;
                _6269_recIdents = _out2415;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6267_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6265_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6266_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2416;
                DCOMP._IOwnership _out2417;
                DCOMP.COMP.FromOwnership(r, _6268_recOwned, expectedOwnership, out _out2416, out _out2417);
                r = _out2416;
                resultingOwnership = _out2417;
                readIdents = _6269_recIdents;
              }
            } else if (_source301.is_Map) {
              DAST._IType _6270___mcc_h1040 = _source301.dtor_key;
              DAST._IType _6271___mcc_h1041 = _source301.dtor_value;
              {
                RAST._IType _6272_fromTpeGen;
                RAST._IType _out2418;
                _out2418 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6272_fromTpeGen = _out2418;
                RAST._IType _6273_toTpeGen;
                RAST._IType _out2419;
                _out2419 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6273_toTpeGen = _out2419;
                RAST._IExpr _6274_recursiveGen;
                DCOMP._IOwnership _6275_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6276_recIdents;
                RAST._IExpr _out2420;
                DCOMP._IOwnership _out2421;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2422;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2420, out _out2421, out _out2422);
                _6274_recursiveGen = _out2420;
                _6275_recOwned = _out2421;
                _6276_recIdents = _out2422;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6274_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6272_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6273_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2423;
                DCOMP._IOwnership _out2424;
                DCOMP.COMP.FromOwnership(r, _6275_recOwned, expectedOwnership, out _out2423, out _out2424);
                r = _out2423;
                resultingOwnership = _out2424;
                readIdents = _6276_recIdents;
              }
            } else if (_source301.is_SetBuilder) {
              DAST._IType _6277___mcc_h1044 = _source301.dtor_element;
              {
                RAST._IType _6278_fromTpeGen;
                RAST._IType _out2425;
                _out2425 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6278_fromTpeGen = _out2425;
                RAST._IType _6279_toTpeGen;
                RAST._IType _out2426;
                _out2426 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6279_toTpeGen = _out2426;
                RAST._IExpr _6280_recursiveGen;
                DCOMP._IOwnership _6281_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6282_recIdents;
                RAST._IExpr _out2427;
                DCOMP._IOwnership _out2428;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2429;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2427, out _out2428, out _out2429);
                _6280_recursiveGen = _out2427;
                _6281_recOwned = _out2428;
                _6282_recIdents = _out2429;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6280_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6278_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6279_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2430;
                DCOMP._IOwnership _out2431;
                DCOMP.COMP.FromOwnership(r, _6281_recOwned, expectedOwnership, out _out2430, out _out2431);
                r = _out2430;
                resultingOwnership = _out2431;
                readIdents = _6282_recIdents;
              }
            } else if (_source301.is_MapBuilder) {
              DAST._IType _6283___mcc_h1046 = _source301.dtor_key;
              DAST._IType _6284___mcc_h1047 = _source301.dtor_value;
              {
                RAST._IType _6285_fromTpeGen;
                RAST._IType _out2432;
                _out2432 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6285_fromTpeGen = _out2432;
                RAST._IType _6286_toTpeGen;
                RAST._IType _out2433;
                _out2433 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6286_toTpeGen = _out2433;
                RAST._IExpr _6287_recursiveGen;
                DCOMP._IOwnership _6288_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6289_recIdents;
                RAST._IExpr _out2434;
                DCOMP._IOwnership _out2435;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2436;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2434, out _out2435, out _out2436);
                _6287_recursiveGen = _out2434;
                _6288_recOwned = _out2435;
                _6289_recIdents = _out2436;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6287_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6285_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6286_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2437;
                DCOMP._IOwnership _out2438;
                DCOMP.COMP.FromOwnership(r, _6288_recOwned, expectedOwnership, out _out2437, out _out2438);
                r = _out2437;
                resultingOwnership = _out2438;
                readIdents = _6289_recIdents;
              }
            } else if (_source301.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6290___mcc_h1050 = _source301.dtor_args;
              DAST._IType _6291___mcc_h1051 = _source301.dtor_result;
              {
                RAST._IType _6292_fromTpeGen;
                RAST._IType _out2439;
                _out2439 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6292_fromTpeGen = _out2439;
                RAST._IType _6293_toTpeGen;
                RAST._IType _out2440;
                _out2440 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6293_toTpeGen = _out2440;
                RAST._IExpr _6294_recursiveGen;
                DCOMP._IOwnership _6295_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6296_recIdents;
                RAST._IExpr _out2441;
                DCOMP._IOwnership _out2442;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2443;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2441, out _out2442, out _out2443);
                _6294_recursiveGen = _out2441;
                _6295_recOwned = _out2442;
                _6296_recIdents = _out2443;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6294_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6292_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6293_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2444;
                DCOMP._IOwnership _out2445;
                DCOMP.COMP.FromOwnership(r, _6295_recOwned, expectedOwnership, out _out2444, out _out2445);
                r = _out2444;
                resultingOwnership = _out2445;
                readIdents = _6296_recIdents;
              }
            } else if (_source301.is_Primitive) {
              DAST._IPrimitive _6297___mcc_h1054 = _source301.dtor_Primitive_a0;
              DAST._IPrimitive _source306 = _6297___mcc_h1054;
              if (_source306.is_Int) {
                {
                  RAST._IExpr _6298_recursiveGen;
                  DCOMP._IOwnership _6299___v98;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6300_recIdents;
                  RAST._IExpr _out2446;
                  DCOMP._IOwnership _out2447;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2448;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2446, out _out2447, out _out2448);
                  _6298_recursiveGen = _out2446;
                  _6299___v98 = _out2447;
                  _6300_recIdents = _out2448;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_6298_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out2449;
                  DCOMP._IOwnership _out2450;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2449, out _out2450);
                  r = _out2449;
                  resultingOwnership = _out2450;
                  readIdents = _6300_recIdents;
                }
              } else if (_source306.is_Real) {
                {
                  RAST._IType _6301_fromTpeGen;
                  RAST._IType _out2451;
                  _out2451 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6301_fromTpeGen = _out2451;
                  RAST._IType _6302_toTpeGen;
                  RAST._IType _out2452;
                  _out2452 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6302_toTpeGen = _out2452;
                  RAST._IExpr _6303_recursiveGen;
                  DCOMP._IOwnership _6304_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6305_recIdents;
                  RAST._IExpr _out2453;
                  DCOMP._IOwnership _out2454;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2455;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2453, out _out2454, out _out2455);
                  _6303_recursiveGen = _out2453;
                  _6304_recOwned = _out2454;
                  _6305_recIdents = _out2455;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6303_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6301_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6302_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2456;
                  DCOMP._IOwnership _out2457;
                  DCOMP.COMP.FromOwnership(r, _6304_recOwned, expectedOwnership, out _out2456, out _out2457);
                  r = _out2456;
                  resultingOwnership = _out2457;
                  readIdents = _6305_recIdents;
                }
              } else if (_source306.is_String) {
                {
                  RAST._IType _6306_fromTpeGen;
                  RAST._IType _out2458;
                  _out2458 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6306_fromTpeGen = _out2458;
                  RAST._IType _6307_toTpeGen;
                  RAST._IType _out2459;
                  _out2459 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6307_toTpeGen = _out2459;
                  RAST._IExpr _6308_recursiveGen;
                  DCOMP._IOwnership _6309_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6310_recIdents;
                  RAST._IExpr _out2460;
                  DCOMP._IOwnership _out2461;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2462;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2460, out _out2461, out _out2462);
                  _6308_recursiveGen = _out2460;
                  _6309_recOwned = _out2461;
                  _6310_recIdents = _out2462;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6308_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6306_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6307_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2463;
                  DCOMP._IOwnership _out2464;
                  DCOMP.COMP.FromOwnership(r, _6309_recOwned, expectedOwnership, out _out2463, out _out2464);
                  r = _out2463;
                  resultingOwnership = _out2464;
                  readIdents = _6310_recIdents;
                }
              } else if (_source306.is_Bool) {
                {
                  RAST._IType _6311_fromTpeGen;
                  RAST._IType _out2465;
                  _out2465 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6311_fromTpeGen = _out2465;
                  RAST._IType _6312_toTpeGen;
                  RAST._IType _out2466;
                  _out2466 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6312_toTpeGen = _out2466;
                  RAST._IExpr _6313_recursiveGen;
                  DCOMP._IOwnership _6314_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6315_recIdents;
                  RAST._IExpr _out2467;
                  DCOMP._IOwnership _out2468;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2469;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2467, out _out2468, out _out2469);
                  _6313_recursiveGen = _out2467;
                  _6314_recOwned = _out2468;
                  _6315_recIdents = _out2469;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6313_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6311_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6312_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2470;
                  DCOMP._IOwnership _out2471;
                  DCOMP.COMP.FromOwnership(r, _6314_recOwned, expectedOwnership, out _out2470, out _out2471);
                  r = _out2470;
                  resultingOwnership = _out2471;
                  readIdents = _6315_recIdents;
                }
              } else {
                {
                  RAST._IType _6316_fromTpeGen;
                  RAST._IType _out2472;
                  _out2472 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6316_fromTpeGen = _out2472;
                  RAST._IType _6317_toTpeGen;
                  RAST._IType _out2473;
                  _out2473 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6317_toTpeGen = _out2473;
                  RAST._IExpr _6318_recursiveGen;
                  DCOMP._IOwnership _6319_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6320_recIdents;
                  RAST._IExpr _out2474;
                  DCOMP._IOwnership _out2475;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2476;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2474, out _out2475, out _out2476);
                  _6318_recursiveGen = _out2474;
                  _6319_recOwned = _out2475;
                  _6320_recIdents = _out2476;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6318_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6316_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6317_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2477;
                  DCOMP._IOwnership _out2478;
                  DCOMP.COMP.FromOwnership(r, _6319_recOwned, expectedOwnership, out _out2477, out _out2478);
                  r = _out2477;
                  resultingOwnership = _out2478;
                  readIdents = _6320_recIdents;
                }
              }
            } else if (_source301.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6321___mcc_h1056 = _source301.dtor_Passthrough_a0;
              {
                RAST._IType _6322_fromTpeGen;
                RAST._IType _out2479;
                _out2479 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6322_fromTpeGen = _out2479;
                RAST._IType _6323_toTpeGen;
                RAST._IType _out2480;
                _out2480 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6323_toTpeGen = _out2480;
                RAST._IExpr _6324_recursiveGen;
                DCOMP._IOwnership _6325_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6326_recIdents;
                RAST._IExpr _out2481;
                DCOMP._IOwnership _out2482;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2483;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2481, out _out2482, out _out2483);
                _6324_recursiveGen = _out2481;
                _6325_recOwned = _out2482;
                _6326_recIdents = _out2483;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6324_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6322_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6323_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2484;
                DCOMP._IOwnership _out2485;
                DCOMP.COMP.FromOwnership(r, _6325_recOwned, expectedOwnership, out _out2484, out _out2485);
                r = _out2484;
                resultingOwnership = _out2485;
                readIdents = _6326_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6327___mcc_h1058 = _source301.dtor_TypeArg_a0;
              {
                RAST._IType _6328_fromTpeGen;
                RAST._IType _out2486;
                _out2486 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6328_fromTpeGen = _out2486;
                RAST._IType _6329_toTpeGen;
                RAST._IType _out2487;
                _out2487 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6329_toTpeGen = _out2487;
                RAST._IExpr _6330_recursiveGen;
                DCOMP._IOwnership _6331_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6332_recIdents;
                RAST._IExpr _out2488;
                DCOMP._IOwnership _out2489;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2490;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2488, out _out2489, out _out2490);
                _6330_recursiveGen = _out2488;
                _6331_recOwned = _out2489;
                _6332_recIdents = _out2490;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6330_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6328_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6329_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2491;
                DCOMP._IOwnership _out2492;
                DCOMP.COMP.FromOwnership(r, _6331_recOwned, expectedOwnership, out _out2491, out _out2492);
                r = _out2491;
                resultingOwnership = _out2492;
                readIdents = _6332_recIdents;
              }
            }
          } else if (_source294.is_String) {
            DAST._IType _source307 = _3718___mcc_h1;
            if (_source307.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6333___mcc_h1060 = _source307.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6334___mcc_h1061 = _source307.dtor_typeArgs;
              DAST._IResolvedType _6335___mcc_h1062 = _source307.dtor_resolved;
              DAST._IResolvedType _source308 = _6335___mcc_h1062;
              if (_source308.is_AllocatedDatatype) {
                DAST._IDatatypeType _6336___mcc_h1066 = _source308.dtor_datatypeType;
                {
                  RAST._IType _6337_fromTpeGen;
                  RAST._IType _out2493;
                  _out2493 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6337_fromTpeGen = _out2493;
                  RAST._IType _6338_toTpeGen;
                  RAST._IType _out2494;
                  _out2494 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6338_toTpeGen = _out2494;
                  RAST._IExpr _6339_recursiveGen;
                  DCOMP._IOwnership _6340_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6341_recIdents;
                  RAST._IExpr _out2495;
                  DCOMP._IOwnership _out2496;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2497;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2495, out _out2496, out _out2497);
                  _6339_recursiveGen = _out2495;
                  _6340_recOwned = _out2496;
                  _6341_recIdents = _out2497;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6339_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6337_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6338_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2498;
                  DCOMP._IOwnership _out2499;
                  DCOMP.COMP.FromOwnership(r, _6340_recOwned, expectedOwnership, out _out2498, out _out2499);
                  r = _out2498;
                  resultingOwnership = _out2499;
                  readIdents = _6341_recIdents;
                }
              } else if (_source308.is_Datatype) {
                DAST._IDatatypeType _6342___mcc_h1068 = _source308.dtor_datatypeType;
                {
                  RAST._IType _6343_fromTpeGen;
                  RAST._IType _out2500;
                  _out2500 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6343_fromTpeGen = _out2500;
                  RAST._IType _6344_toTpeGen;
                  RAST._IType _out2501;
                  _out2501 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6344_toTpeGen = _out2501;
                  RAST._IExpr _6345_recursiveGen;
                  DCOMP._IOwnership _6346_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6347_recIdents;
                  RAST._IExpr _out2502;
                  DCOMP._IOwnership _out2503;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2504;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2502, out _out2503, out _out2504);
                  _6345_recursiveGen = _out2502;
                  _6346_recOwned = _out2503;
                  _6347_recIdents = _out2504;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6345_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6343_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6344_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2505;
                  DCOMP._IOwnership _out2506;
                  DCOMP.COMP.FromOwnership(r, _6346_recOwned, expectedOwnership, out _out2505, out _out2506);
                  r = _out2505;
                  resultingOwnership = _out2506;
                  readIdents = _6347_recIdents;
                }
              } else if (_source308.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6348___mcc_h1070 = _source308.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6349___mcc_h1071 = _source308.dtor_attributes;
                {
                  RAST._IType _6350_fromTpeGen;
                  RAST._IType _out2507;
                  _out2507 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6350_fromTpeGen = _out2507;
                  RAST._IType _6351_toTpeGen;
                  RAST._IType _out2508;
                  _out2508 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6351_toTpeGen = _out2508;
                  RAST._IExpr _6352_recursiveGen;
                  DCOMP._IOwnership _6353_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6354_recIdents;
                  RAST._IExpr _out2509;
                  DCOMP._IOwnership _out2510;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2511;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2509, out _out2510, out _out2511);
                  _6352_recursiveGen = _out2509;
                  _6353_recOwned = _out2510;
                  _6354_recIdents = _out2511;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6352_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6350_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6351_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2512;
                  DCOMP._IOwnership _out2513;
                  DCOMP.COMP.FromOwnership(r, _6353_recOwned, expectedOwnership, out _out2512, out _out2513);
                  r = _out2512;
                  resultingOwnership = _out2513;
                  readIdents = _6354_recIdents;
                }
              } else {
                DAST._IType _6355___mcc_h1074 = _source308.dtor_baseType;
                DAST._INewtypeRange _6356___mcc_h1075 = _source308.dtor_range;
                bool _6357___mcc_h1076 = _source308.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6358___mcc_h1077 = _source308.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6359_attributes = _6358___mcc_h1077;
                bool _6360_erase = _6357___mcc_h1076;
                DAST._INewtypeRange _6361_range = _6356___mcc_h1075;
                DAST._IType _6362_b = _6355___mcc_h1074;
                {
                  Std.Wrappers._IOption<RAST._IType> _6363_nativeToType;
                  _6363_nativeToType = DCOMP.COMP.NewtypeToRustType(_6362_b, _6361_range);
                  if (object.Equals(_3712_fromTpe, _6362_b)) {
                    RAST._IExpr _6364_recursiveGen;
                    DCOMP._IOwnership _6365_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6366_recIdents;
                    RAST._IExpr _out2514;
                    DCOMP._IOwnership _out2515;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2516;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2514, out _out2515, out _out2516);
                    _6364_recursiveGen = _out2514;
                    _6365_recOwned = _out2515;
                    _6366_recIdents = _out2516;
                    readIdents = _6366_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source309 = _6363_nativeToType;
                    if (_source309.is_None) {
                      if (_6360_erase) {
                        r = _6364_recursiveGen;
                      } else {
                        RAST._IType _6367_rhsType;
                        RAST._IType _out2517;
                        _out2517 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                        _6367_rhsType = _out2517;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6367_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6364_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2518;
                      DCOMP._IOwnership _out2519;
                      DCOMP.COMP.FromOwnership(r, _6365_recOwned, expectedOwnership, out _out2518, out _out2519);
                      r = _out2518;
                      resultingOwnership = _out2519;
                    } else {
                      RAST._IType _6368___mcc_h2218 = _source309.dtor_value;
                      RAST._IType _6369_v = _6368___mcc_h2218;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6364_recursiveGen, RAST.Expr.create_ExprFromType(_6369_v)));
                      RAST._IExpr _out2520;
                      DCOMP._IOwnership _out2521;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2520, out _out2521);
                      r = _out2520;
                      resultingOwnership = _out2521;
                    }
                  } else {
                    if ((_6363_nativeToType).is_Some) {
                      DAST._IType _source310 = _3712_fromTpe;
                      if (_source310.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6370___mcc_h2219 = _source310.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6371___mcc_h2220 = _source310.dtor_typeArgs;
                        DAST._IResolvedType _6372___mcc_h2221 = _source310.dtor_resolved;
                        DAST._IResolvedType _source311 = _6372___mcc_h2221;
                        if (_source311.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6373___mcc_h2225 = _source311.dtor_datatypeType;
                        } else if (_source311.is_Datatype) {
                          DAST._IDatatypeType _6374___mcc_h2227 = _source311.dtor_datatypeType;
                        } else if (_source311.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6375___mcc_h2229 = _source311.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6376___mcc_h2230 = _source311.dtor_attributes;
                        } else {
                          DAST._IType _6377___mcc_h2233 = _source311.dtor_baseType;
                          DAST._INewtypeRange _6378___mcc_h2234 = _source311.dtor_range;
                          bool _6379___mcc_h2235 = _source311.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6380___mcc_h2236 = _source311.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6381_attributes0 = _6380___mcc_h2236;
                          bool _6382_erase0 = _6379___mcc_h2235;
                          DAST._INewtypeRange _6383_range0 = _6378___mcc_h2234;
                          DAST._IType _6384_b0 = _6377___mcc_h2233;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6385_nativeFromType;
                            _6385_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6384_b0, _6383_range0);
                            if ((_6385_nativeFromType).is_Some) {
                              RAST._IExpr _6386_recursiveGen;
                              DCOMP._IOwnership _6387_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6388_recIdents;
                              RAST._IExpr _out2522;
                              DCOMP._IOwnership _out2523;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2524;
                              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2522, out _out2523, out _out2524);
                              _6386_recursiveGen = _out2522;
                              _6387_recOwned = _out2523;
                              _6388_recIdents = _out2524;
                              RAST._IExpr _out2525;
                              DCOMP._IOwnership _out2526;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6386_recursiveGen, (_6363_nativeToType).dtor_value), _6387_recOwned, expectedOwnership, out _out2525, out _out2526);
                              r = _out2525;
                              resultingOwnership = _out2526;
                              readIdents = _6388_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source310.is_Nullable) {
                        DAST._IType _6389___mcc_h2241 = _source310.dtor_Nullable_a0;
                      } else if (_source310.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6390___mcc_h2243 = _source310.dtor_Tuple_a0;
                      } else if (_source310.is_Array) {
                        DAST._IType _6391___mcc_h2245 = _source310.dtor_element;
                        BigInteger _6392___mcc_h2246 = _source310.dtor_dims;
                      } else if (_source310.is_Seq) {
                        DAST._IType _6393___mcc_h2249 = _source310.dtor_element;
                      } else if (_source310.is_Set) {
                        DAST._IType _6394___mcc_h2251 = _source310.dtor_element;
                      } else if (_source310.is_Multiset) {
                        DAST._IType _6395___mcc_h2253 = _source310.dtor_element;
                      } else if (_source310.is_Map) {
                        DAST._IType _6396___mcc_h2255 = _source310.dtor_key;
                        DAST._IType _6397___mcc_h2256 = _source310.dtor_value;
                      } else if (_source310.is_SetBuilder) {
                        DAST._IType _6398___mcc_h2259 = _source310.dtor_element;
                      } else if (_source310.is_MapBuilder) {
                        DAST._IType _6399___mcc_h2261 = _source310.dtor_key;
                        DAST._IType _6400___mcc_h2262 = _source310.dtor_value;
                      } else if (_source310.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6401___mcc_h2265 = _source310.dtor_args;
                        DAST._IType _6402___mcc_h2266 = _source310.dtor_result;
                      } else if (_source310.is_Primitive) {
                        DAST._IPrimitive _6403___mcc_h2269 = _source310.dtor_Primitive_a0;
                      } else if (_source310.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6404___mcc_h2271 = _source310.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6405___mcc_h2273 = _source310.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6406_recursiveGen;
                        DCOMP._IOwnership _6407_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6408_recIdents;
                        RAST._IExpr _out2527;
                        DCOMP._IOwnership _out2528;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2529;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2527, out _out2528, out _out2529);
                        _6406_recursiveGen = _out2527;
                        _6407_recOwned = _out2528;
                        _6408_recIdents = _out2529;
                        RAST._IExpr _out2530;
                        DCOMP._IOwnership _out2531;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6406_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6363_nativeToType).dtor_value), _6407_recOwned, expectedOwnership, out _out2530, out _out2531);
                        r = _out2530;
                        resultingOwnership = _out2531;
                        readIdents = _6408_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2532;
                    DCOMP._IOwnership _out2533;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2534;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _6362_b), _6362_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out2532, out _out2533, out _out2534);
                    r = _out2532;
                    resultingOwnership = _out2533;
                    readIdents = _out2534;
                  }
                }
              }
            } else if (_source307.is_Nullable) {
              DAST._IType _6409___mcc_h1082 = _source307.dtor_Nullable_a0;
              {
                RAST._IExpr _6410_recursiveGen;
                DCOMP._IOwnership _6411_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6412_recIdents;
                RAST._IExpr _out2535;
                DCOMP._IOwnership _out2536;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2537;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2535, out _out2536, out _out2537);
                _6410_recursiveGen = _out2535;
                _6411_recOwned = _out2536;
                _6412_recIdents = _out2537;
                r = _6410_recursiveGen;
                if (object.Equals(_6411_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2538;
                DCOMP._IOwnership _out2539;
                DCOMP.COMP.FromOwnership(r, _6411_recOwned, expectedOwnership, out _out2538, out _out2539);
                r = _out2538;
                resultingOwnership = _out2539;
                readIdents = _6412_recIdents;
              }
            } else if (_source307.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6413___mcc_h1084 = _source307.dtor_Tuple_a0;
              {
                RAST._IType _6414_fromTpeGen;
                RAST._IType _out2540;
                _out2540 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6414_fromTpeGen = _out2540;
                RAST._IType _6415_toTpeGen;
                RAST._IType _out2541;
                _out2541 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6415_toTpeGen = _out2541;
                RAST._IExpr _6416_recursiveGen;
                DCOMP._IOwnership _6417_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6418_recIdents;
                RAST._IExpr _out2542;
                DCOMP._IOwnership _out2543;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2544;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2542, out _out2543, out _out2544);
                _6416_recursiveGen = _out2542;
                _6417_recOwned = _out2543;
                _6418_recIdents = _out2544;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6416_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6414_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6415_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2545;
                DCOMP._IOwnership _out2546;
                DCOMP.COMP.FromOwnership(r, _6417_recOwned, expectedOwnership, out _out2545, out _out2546);
                r = _out2545;
                resultingOwnership = _out2546;
                readIdents = _6418_recIdents;
              }
            } else if (_source307.is_Array) {
              DAST._IType _6419___mcc_h1086 = _source307.dtor_element;
              BigInteger _6420___mcc_h1087 = _source307.dtor_dims;
              {
                RAST._IType _6421_fromTpeGen;
                RAST._IType _out2547;
                _out2547 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6421_fromTpeGen = _out2547;
                RAST._IType _6422_toTpeGen;
                RAST._IType _out2548;
                _out2548 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6422_toTpeGen = _out2548;
                RAST._IExpr _6423_recursiveGen;
                DCOMP._IOwnership _6424_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6425_recIdents;
                RAST._IExpr _out2549;
                DCOMP._IOwnership _out2550;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2551;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2549, out _out2550, out _out2551);
                _6423_recursiveGen = _out2549;
                _6424_recOwned = _out2550;
                _6425_recIdents = _out2551;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6423_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6421_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6422_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2552;
                DCOMP._IOwnership _out2553;
                DCOMP.COMP.FromOwnership(r, _6424_recOwned, expectedOwnership, out _out2552, out _out2553);
                r = _out2552;
                resultingOwnership = _out2553;
                readIdents = _6425_recIdents;
              }
            } else if (_source307.is_Seq) {
              DAST._IType _6426___mcc_h1090 = _source307.dtor_element;
              {
                RAST._IType _6427_fromTpeGen;
                RAST._IType _out2554;
                _out2554 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6427_fromTpeGen = _out2554;
                RAST._IType _6428_toTpeGen;
                RAST._IType _out2555;
                _out2555 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6428_toTpeGen = _out2555;
                RAST._IExpr _6429_recursiveGen;
                DCOMP._IOwnership _6430_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6431_recIdents;
                RAST._IExpr _out2556;
                DCOMP._IOwnership _out2557;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2558;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2556, out _out2557, out _out2558);
                _6429_recursiveGen = _out2556;
                _6430_recOwned = _out2557;
                _6431_recIdents = _out2558;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6429_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6427_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6428_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2559;
                DCOMP._IOwnership _out2560;
                DCOMP.COMP.FromOwnership(r, _6430_recOwned, expectedOwnership, out _out2559, out _out2560);
                r = _out2559;
                resultingOwnership = _out2560;
                readIdents = _6431_recIdents;
              }
            } else if (_source307.is_Set) {
              DAST._IType _6432___mcc_h1092 = _source307.dtor_element;
              {
                RAST._IType _6433_fromTpeGen;
                RAST._IType _out2561;
                _out2561 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6433_fromTpeGen = _out2561;
                RAST._IType _6434_toTpeGen;
                RAST._IType _out2562;
                _out2562 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6434_toTpeGen = _out2562;
                RAST._IExpr _6435_recursiveGen;
                DCOMP._IOwnership _6436_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6437_recIdents;
                RAST._IExpr _out2563;
                DCOMP._IOwnership _out2564;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2565;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2563, out _out2564, out _out2565);
                _6435_recursiveGen = _out2563;
                _6436_recOwned = _out2564;
                _6437_recIdents = _out2565;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6435_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6433_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6434_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2566;
                DCOMP._IOwnership _out2567;
                DCOMP.COMP.FromOwnership(r, _6436_recOwned, expectedOwnership, out _out2566, out _out2567);
                r = _out2566;
                resultingOwnership = _out2567;
                readIdents = _6437_recIdents;
              }
            } else if (_source307.is_Multiset) {
              DAST._IType _6438___mcc_h1094 = _source307.dtor_element;
              {
                RAST._IType _6439_fromTpeGen;
                RAST._IType _out2568;
                _out2568 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6439_fromTpeGen = _out2568;
                RAST._IType _6440_toTpeGen;
                RAST._IType _out2569;
                _out2569 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6440_toTpeGen = _out2569;
                RAST._IExpr _6441_recursiveGen;
                DCOMP._IOwnership _6442_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6443_recIdents;
                RAST._IExpr _out2570;
                DCOMP._IOwnership _out2571;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2572;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2570, out _out2571, out _out2572);
                _6441_recursiveGen = _out2570;
                _6442_recOwned = _out2571;
                _6443_recIdents = _out2572;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6441_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6439_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6440_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2573;
                DCOMP._IOwnership _out2574;
                DCOMP.COMP.FromOwnership(r, _6442_recOwned, expectedOwnership, out _out2573, out _out2574);
                r = _out2573;
                resultingOwnership = _out2574;
                readIdents = _6443_recIdents;
              }
            } else if (_source307.is_Map) {
              DAST._IType _6444___mcc_h1096 = _source307.dtor_key;
              DAST._IType _6445___mcc_h1097 = _source307.dtor_value;
              {
                RAST._IType _6446_fromTpeGen;
                RAST._IType _out2575;
                _out2575 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6446_fromTpeGen = _out2575;
                RAST._IType _6447_toTpeGen;
                RAST._IType _out2576;
                _out2576 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6447_toTpeGen = _out2576;
                RAST._IExpr _6448_recursiveGen;
                DCOMP._IOwnership _6449_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6450_recIdents;
                RAST._IExpr _out2577;
                DCOMP._IOwnership _out2578;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2579;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2577, out _out2578, out _out2579);
                _6448_recursiveGen = _out2577;
                _6449_recOwned = _out2578;
                _6450_recIdents = _out2579;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6448_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6446_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6447_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2580;
                DCOMP._IOwnership _out2581;
                DCOMP.COMP.FromOwnership(r, _6449_recOwned, expectedOwnership, out _out2580, out _out2581);
                r = _out2580;
                resultingOwnership = _out2581;
                readIdents = _6450_recIdents;
              }
            } else if (_source307.is_SetBuilder) {
              DAST._IType _6451___mcc_h1100 = _source307.dtor_element;
              {
                RAST._IType _6452_fromTpeGen;
                RAST._IType _out2582;
                _out2582 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6452_fromTpeGen = _out2582;
                RAST._IType _6453_toTpeGen;
                RAST._IType _out2583;
                _out2583 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6453_toTpeGen = _out2583;
                RAST._IExpr _6454_recursiveGen;
                DCOMP._IOwnership _6455_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6456_recIdents;
                RAST._IExpr _out2584;
                DCOMP._IOwnership _out2585;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2586;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2584, out _out2585, out _out2586);
                _6454_recursiveGen = _out2584;
                _6455_recOwned = _out2585;
                _6456_recIdents = _out2586;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6454_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6452_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6453_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2587;
                DCOMP._IOwnership _out2588;
                DCOMP.COMP.FromOwnership(r, _6455_recOwned, expectedOwnership, out _out2587, out _out2588);
                r = _out2587;
                resultingOwnership = _out2588;
                readIdents = _6456_recIdents;
              }
            } else if (_source307.is_MapBuilder) {
              DAST._IType _6457___mcc_h1102 = _source307.dtor_key;
              DAST._IType _6458___mcc_h1103 = _source307.dtor_value;
              {
                RAST._IType _6459_fromTpeGen;
                RAST._IType _out2589;
                _out2589 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6459_fromTpeGen = _out2589;
                RAST._IType _6460_toTpeGen;
                RAST._IType _out2590;
                _out2590 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6460_toTpeGen = _out2590;
                RAST._IExpr _6461_recursiveGen;
                DCOMP._IOwnership _6462_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6463_recIdents;
                RAST._IExpr _out2591;
                DCOMP._IOwnership _out2592;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2593;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2591, out _out2592, out _out2593);
                _6461_recursiveGen = _out2591;
                _6462_recOwned = _out2592;
                _6463_recIdents = _out2593;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6461_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6459_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6460_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2594;
                DCOMP._IOwnership _out2595;
                DCOMP.COMP.FromOwnership(r, _6462_recOwned, expectedOwnership, out _out2594, out _out2595);
                r = _out2594;
                resultingOwnership = _out2595;
                readIdents = _6463_recIdents;
              }
            } else if (_source307.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6464___mcc_h1106 = _source307.dtor_args;
              DAST._IType _6465___mcc_h1107 = _source307.dtor_result;
              {
                RAST._IType _6466_fromTpeGen;
                RAST._IType _out2596;
                _out2596 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6466_fromTpeGen = _out2596;
                RAST._IType _6467_toTpeGen;
                RAST._IType _out2597;
                _out2597 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6467_toTpeGen = _out2597;
                RAST._IExpr _6468_recursiveGen;
                DCOMP._IOwnership _6469_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6470_recIdents;
                RAST._IExpr _out2598;
                DCOMP._IOwnership _out2599;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2600;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2598, out _out2599, out _out2600);
                _6468_recursiveGen = _out2598;
                _6469_recOwned = _out2599;
                _6470_recIdents = _out2600;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6468_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6466_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6467_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2601;
                DCOMP._IOwnership _out2602;
                DCOMP.COMP.FromOwnership(r, _6469_recOwned, expectedOwnership, out _out2601, out _out2602);
                r = _out2601;
                resultingOwnership = _out2602;
                readIdents = _6470_recIdents;
              }
            } else if (_source307.is_Primitive) {
              DAST._IPrimitive _6471___mcc_h1110 = _source307.dtor_Primitive_a0;
              {
                RAST._IType _6472_fromTpeGen;
                RAST._IType _out2603;
                _out2603 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6472_fromTpeGen = _out2603;
                RAST._IType _6473_toTpeGen;
                RAST._IType _out2604;
                _out2604 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6473_toTpeGen = _out2604;
                RAST._IExpr _6474_recursiveGen;
                DCOMP._IOwnership _6475_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6476_recIdents;
                RAST._IExpr _out2605;
                DCOMP._IOwnership _out2606;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2607;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2605, out _out2606, out _out2607);
                _6474_recursiveGen = _out2605;
                _6475_recOwned = _out2606;
                _6476_recIdents = _out2607;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6474_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6472_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6473_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2608;
                DCOMP._IOwnership _out2609;
                DCOMP.COMP.FromOwnership(r, _6475_recOwned, expectedOwnership, out _out2608, out _out2609);
                r = _out2608;
                resultingOwnership = _out2609;
                readIdents = _6476_recIdents;
              }
            } else if (_source307.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6477___mcc_h1112 = _source307.dtor_Passthrough_a0;
              {
                RAST._IType _6478_fromTpeGen;
                RAST._IType _out2610;
                _out2610 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6478_fromTpeGen = _out2610;
                RAST._IType _6479_toTpeGen;
                RAST._IType _out2611;
                _out2611 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6479_toTpeGen = _out2611;
                RAST._IExpr _6480_recursiveGen;
                DCOMP._IOwnership _6481_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6482_recIdents;
                RAST._IExpr _out2612;
                DCOMP._IOwnership _out2613;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2614;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2612, out _out2613, out _out2614);
                _6480_recursiveGen = _out2612;
                _6481_recOwned = _out2613;
                _6482_recIdents = _out2614;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6480_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6478_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6479_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2615;
                DCOMP._IOwnership _out2616;
                DCOMP.COMP.FromOwnership(r, _6481_recOwned, expectedOwnership, out _out2615, out _out2616);
                r = _out2615;
                resultingOwnership = _out2616;
                readIdents = _6482_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6483___mcc_h1114 = _source307.dtor_TypeArg_a0;
              {
                RAST._IType _6484_fromTpeGen;
                RAST._IType _out2617;
                _out2617 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6484_fromTpeGen = _out2617;
                RAST._IType _6485_toTpeGen;
                RAST._IType _out2618;
                _out2618 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6485_toTpeGen = _out2618;
                RAST._IExpr _6486_recursiveGen;
                DCOMP._IOwnership _6487_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6488_recIdents;
                RAST._IExpr _out2619;
                DCOMP._IOwnership _out2620;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2621;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2619, out _out2620, out _out2621);
                _6486_recursiveGen = _out2619;
                _6487_recOwned = _out2620;
                _6488_recIdents = _out2621;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6486_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6484_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6485_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2622;
                DCOMP._IOwnership _out2623;
                DCOMP.COMP.FromOwnership(r, _6487_recOwned, expectedOwnership, out _out2622, out _out2623);
                r = _out2622;
                resultingOwnership = _out2623;
                readIdents = _6488_recIdents;
              }
            }
          } else if (_source294.is_Bool) {
            DAST._IType _source312 = _3718___mcc_h1;
            if (_source312.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6489___mcc_h1116 = _source312.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6490___mcc_h1117 = _source312.dtor_typeArgs;
              DAST._IResolvedType _6491___mcc_h1118 = _source312.dtor_resolved;
              DAST._IResolvedType _source313 = _6491___mcc_h1118;
              if (_source313.is_AllocatedDatatype) {
                DAST._IDatatypeType _6492___mcc_h1122 = _source313.dtor_datatypeType;
                {
                  RAST._IType _6493_fromTpeGen;
                  RAST._IType _out2624;
                  _out2624 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6493_fromTpeGen = _out2624;
                  RAST._IType _6494_toTpeGen;
                  RAST._IType _out2625;
                  _out2625 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6494_toTpeGen = _out2625;
                  RAST._IExpr _6495_recursiveGen;
                  DCOMP._IOwnership _6496_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6497_recIdents;
                  RAST._IExpr _out2626;
                  DCOMP._IOwnership _out2627;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2628;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2626, out _out2627, out _out2628);
                  _6495_recursiveGen = _out2626;
                  _6496_recOwned = _out2627;
                  _6497_recIdents = _out2628;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6495_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6493_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6494_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2629;
                  DCOMP._IOwnership _out2630;
                  DCOMP.COMP.FromOwnership(r, _6496_recOwned, expectedOwnership, out _out2629, out _out2630);
                  r = _out2629;
                  resultingOwnership = _out2630;
                  readIdents = _6497_recIdents;
                }
              } else if (_source313.is_Datatype) {
                DAST._IDatatypeType _6498___mcc_h1124 = _source313.dtor_datatypeType;
                {
                  RAST._IType _6499_fromTpeGen;
                  RAST._IType _out2631;
                  _out2631 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6499_fromTpeGen = _out2631;
                  RAST._IType _6500_toTpeGen;
                  RAST._IType _out2632;
                  _out2632 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6500_toTpeGen = _out2632;
                  RAST._IExpr _6501_recursiveGen;
                  DCOMP._IOwnership _6502_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6503_recIdents;
                  RAST._IExpr _out2633;
                  DCOMP._IOwnership _out2634;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2635;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2633, out _out2634, out _out2635);
                  _6501_recursiveGen = _out2633;
                  _6502_recOwned = _out2634;
                  _6503_recIdents = _out2635;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6501_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6499_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6500_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2636;
                  DCOMP._IOwnership _out2637;
                  DCOMP.COMP.FromOwnership(r, _6502_recOwned, expectedOwnership, out _out2636, out _out2637);
                  r = _out2636;
                  resultingOwnership = _out2637;
                  readIdents = _6503_recIdents;
                }
              } else if (_source313.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6504___mcc_h1126 = _source313.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6505___mcc_h1127 = _source313.dtor_attributes;
                {
                  RAST._IType _6506_fromTpeGen;
                  RAST._IType _out2638;
                  _out2638 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6506_fromTpeGen = _out2638;
                  RAST._IType _6507_toTpeGen;
                  RAST._IType _out2639;
                  _out2639 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6507_toTpeGen = _out2639;
                  RAST._IExpr _6508_recursiveGen;
                  DCOMP._IOwnership _6509_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6510_recIdents;
                  RAST._IExpr _out2640;
                  DCOMP._IOwnership _out2641;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2642;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2640, out _out2641, out _out2642);
                  _6508_recursiveGen = _out2640;
                  _6509_recOwned = _out2641;
                  _6510_recIdents = _out2642;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6508_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6506_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6507_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2643;
                  DCOMP._IOwnership _out2644;
                  DCOMP.COMP.FromOwnership(r, _6509_recOwned, expectedOwnership, out _out2643, out _out2644);
                  r = _out2643;
                  resultingOwnership = _out2644;
                  readIdents = _6510_recIdents;
                }
              } else {
                DAST._IType _6511___mcc_h1130 = _source313.dtor_baseType;
                DAST._INewtypeRange _6512___mcc_h1131 = _source313.dtor_range;
                bool _6513___mcc_h1132 = _source313.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6514___mcc_h1133 = _source313.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6515_attributes = _6514___mcc_h1133;
                bool _6516_erase = _6513___mcc_h1132;
                DAST._INewtypeRange _6517_range = _6512___mcc_h1131;
                DAST._IType _6518_b = _6511___mcc_h1130;
                {
                  Std.Wrappers._IOption<RAST._IType> _6519_nativeToType;
                  _6519_nativeToType = DCOMP.COMP.NewtypeToRustType(_6518_b, _6517_range);
                  if (object.Equals(_3712_fromTpe, _6518_b)) {
                    RAST._IExpr _6520_recursiveGen;
                    DCOMP._IOwnership _6521_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6522_recIdents;
                    RAST._IExpr _out2645;
                    DCOMP._IOwnership _out2646;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2647;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2645, out _out2646, out _out2647);
                    _6520_recursiveGen = _out2645;
                    _6521_recOwned = _out2646;
                    _6522_recIdents = _out2647;
                    readIdents = _6522_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source314 = _6519_nativeToType;
                    if (_source314.is_None) {
                      if (_6516_erase) {
                        r = _6520_recursiveGen;
                      } else {
                        RAST._IType _6523_rhsType;
                        RAST._IType _out2648;
                        _out2648 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                        _6523_rhsType = _out2648;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6523_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6520_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2649;
                      DCOMP._IOwnership _out2650;
                      DCOMP.COMP.FromOwnership(r, _6521_recOwned, expectedOwnership, out _out2649, out _out2650);
                      r = _out2649;
                      resultingOwnership = _out2650;
                    } else {
                      RAST._IType _6524___mcc_h2275 = _source314.dtor_value;
                      RAST._IType _6525_v = _6524___mcc_h2275;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6520_recursiveGen, RAST.Expr.create_ExprFromType(_6525_v)));
                      RAST._IExpr _out2651;
                      DCOMP._IOwnership _out2652;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2651, out _out2652);
                      r = _out2651;
                      resultingOwnership = _out2652;
                    }
                  } else {
                    if ((_6519_nativeToType).is_Some) {
                      DAST._IType _source315 = _3712_fromTpe;
                      if (_source315.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6526___mcc_h2276 = _source315.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6527___mcc_h2277 = _source315.dtor_typeArgs;
                        DAST._IResolvedType _6528___mcc_h2278 = _source315.dtor_resolved;
                        DAST._IResolvedType _source316 = _6528___mcc_h2278;
                        if (_source316.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6529___mcc_h2282 = _source316.dtor_datatypeType;
                        } else if (_source316.is_Datatype) {
                          DAST._IDatatypeType _6530___mcc_h2284 = _source316.dtor_datatypeType;
                        } else if (_source316.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6531___mcc_h2286 = _source316.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6532___mcc_h2287 = _source316.dtor_attributes;
                        } else {
                          DAST._IType _6533___mcc_h2290 = _source316.dtor_baseType;
                          DAST._INewtypeRange _6534___mcc_h2291 = _source316.dtor_range;
                          bool _6535___mcc_h2292 = _source316.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6536___mcc_h2293 = _source316.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6537_attributes0 = _6536___mcc_h2293;
                          bool _6538_erase0 = _6535___mcc_h2292;
                          DAST._INewtypeRange _6539_range0 = _6534___mcc_h2291;
                          DAST._IType _6540_b0 = _6533___mcc_h2290;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6541_nativeFromType;
                            _6541_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6540_b0, _6539_range0);
                            if ((_6541_nativeFromType).is_Some) {
                              RAST._IExpr _6542_recursiveGen;
                              DCOMP._IOwnership _6543_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6544_recIdents;
                              RAST._IExpr _out2653;
                              DCOMP._IOwnership _out2654;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2655;
                              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2653, out _out2654, out _out2655);
                              _6542_recursiveGen = _out2653;
                              _6543_recOwned = _out2654;
                              _6544_recIdents = _out2655;
                              RAST._IExpr _out2656;
                              DCOMP._IOwnership _out2657;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6542_recursiveGen, (_6519_nativeToType).dtor_value), _6543_recOwned, expectedOwnership, out _out2656, out _out2657);
                              r = _out2656;
                              resultingOwnership = _out2657;
                              readIdents = _6544_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source315.is_Nullable) {
                        DAST._IType _6545___mcc_h2298 = _source315.dtor_Nullable_a0;
                      } else if (_source315.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6546___mcc_h2300 = _source315.dtor_Tuple_a0;
                      } else if (_source315.is_Array) {
                        DAST._IType _6547___mcc_h2302 = _source315.dtor_element;
                        BigInteger _6548___mcc_h2303 = _source315.dtor_dims;
                      } else if (_source315.is_Seq) {
                        DAST._IType _6549___mcc_h2306 = _source315.dtor_element;
                      } else if (_source315.is_Set) {
                        DAST._IType _6550___mcc_h2308 = _source315.dtor_element;
                      } else if (_source315.is_Multiset) {
                        DAST._IType _6551___mcc_h2310 = _source315.dtor_element;
                      } else if (_source315.is_Map) {
                        DAST._IType _6552___mcc_h2312 = _source315.dtor_key;
                        DAST._IType _6553___mcc_h2313 = _source315.dtor_value;
                      } else if (_source315.is_SetBuilder) {
                        DAST._IType _6554___mcc_h2316 = _source315.dtor_element;
                      } else if (_source315.is_MapBuilder) {
                        DAST._IType _6555___mcc_h2318 = _source315.dtor_key;
                        DAST._IType _6556___mcc_h2319 = _source315.dtor_value;
                      } else if (_source315.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6557___mcc_h2322 = _source315.dtor_args;
                        DAST._IType _6558___mcc_h2323 = _source315.dtor_result;
                      } else if (_source315.is_Primitive) {
                        DAST._IPrimitive _6559___mcc_h2326 = _source315.dtor_Primitive_a0;
                      } else if (_source315.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6560___mcc_h2328 = _source315.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6561___mcc_h2330 = _source315.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6562_recursiveGen;
                        DCOMP._IOwnership _6563_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6564_recIdents;
                        RAST._IExpr _out2658;
                        DCOMP._IOwnership _out2659;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2660;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2658, out _out2659, out _out2660);
                        _6562_recursiveGen = _out2658;
                        _6563_recOwned = _out2659;
                        _6564_recIdents = _out2660;
                        RAST._IExpr _out2661;
                        DCOMP._IOwnership _out2662;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6562_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6519_nativeToType).dtor_value), _6563_recOwned, expectedOwnership, out _out2661, out _out2662);
                        r = _out2661;
                        resultingOwnership = _out2662;
                        readIdents = _6564_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2663;
                    DCOMP._IOwnership _out2664;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2665;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _6518_b), _6518_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out2663, out _out2664, out _out2665);
                    r = _out2663;
                    resultingOwnership = _out2664;
                    readIdents = _out2665;
                  }
                }
              }
            } else if (_source312.is_Nullable) {
              DAST._IType _6565___mcc_h1138 = _source312.dtor_Nullable_a0;
              {
                RAST._IExpr _6566_recursiveGen;
                DCOMP._IOwnership _6567_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6568_recIdents;
                RAST._IExpr _out2666;
                DCOMP._IOwnership _out2667;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2668;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2666, out _out2667, out _out2668);
                _6566_recursiveGen = _out2666;
                _6567_recOwned = _out2667;
                _6568_recIdents = _out2668;
                r = _6566_recursiveGen;
                if (object.Equals(_6567_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2669;
                DCOMP._IOwnership _out2670;
                DCOMP.COMP.FromOwnership(r, _6567_recOwned, expectedOwnership, out _out2669, out _out2670);
                r = _out2669;
                resultingOwnership = _out2670;
                readIdents = _6568_recIdents;
              }
            } else if (_source312.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6569___mcc_h1140 = _source312.dtor_Tuple_a0;
              {
                RAST._IType _6570_fromTpeGen;
                RAST._IType _out2671;
                _out2671 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6570_fromTpeGen = _out2671;
                RAST._IType _6571_toTpeGen;
                RAST._IType _out2672;
                _out2672 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6571_toTpeGen = _out2672;
                RAST._IExpr _6572_recursiveGen;
                DCOMP._IOwnership _6573_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6574_recIdents;
                RAST._IExpr _out2673;
                DCOMP._IOwnership _out2674;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2675;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2673, out _out2674, out _out2675);
                _6572_recursiveGen = _out2673;
                _6573_recOwned = _out2674;
                _6574_recIdents = _out2675;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6572_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6570_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6571_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2676;
                DCOMP._IOwnership _out2677;
                DCOMP.COMP.FromOwnership(r, _6573_recOwned, expectedOwnership, out _out2676, out _out2677);
                r = _out2676;
                resultingOwnership = _out2677;
                readIdents = _6574_recIdents;
              }
            } else if (_source312.is_Array) {
              DAST._IType _6575___mcc_h1142 = _source312.dtor_element;
              BigInteger _6576___mcc_h1143 = _source312.dtor_dims;
              {
                RAST._IType _6577_fromTpeGen;
                RAST._IType _out2678;
                _out2678 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6577_fromTpeGen = _out2678;
                RAST._IType _6578_toTpeGen;
                RAST._IType _out2679;
                _out2679 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6578_toTpeGen = _out2679;
                RAST._IExpr _6579_recursiveGen;
                DCOMP._IOwnership _6580_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6581_recIdents;
                RAST._IExpr _out2680;
                DCOMP._IOwnership _out2681;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2682;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2680, out _out2681, out _out2682);
                _6579_recursiveGen = _out2680;
                _6580_recOwned = _out2681;
                _6581_recIdents = _out2682;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6579_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6577_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6578_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2683;
                DCOMP._IOwnership _out2684;
                DCOMP.COMP.FromOwnership(r, _6580_recOwned, expectedOwnership, out _out2683, out _out2684);
                r = _out2683;
                resultingOwnership = _out2684;
                readIdents = _6581_recIdents;
              }
            } else if (_source312.is_Seq) {
              DAST._IType _6582___mcc_h1146 = _source312.dtor_element;
              {
                RAST._IType _6583_fromTpeGen;
                RAST._IType _out2685;
                _out2685 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6583_fromTpeGen = _out2685;
                RAST._IType _6584_toTpeGen;
                RAST._IType _out2686;
                _out2686 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6584_toTpeGen = _out2686;
                RAST._IExpr _6585_recursiveGen;
                DCOMP._IOwnership _6586_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6587_recIdents;
                RAST._IExpr _out2687;
                DCOMP._IOwnership _out2688;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2689;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2687, out _out2688, out _out2689);
                _6585_recursiveGen = _out2687;
                _6586_recOwned = _out2688;
                _6587_recIdents = _out2689;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6585_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6583_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6584_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2690;
                DCOMP._IOwnership _out2691;
                DCOMP.COMP.FromOwnership(r, _6586_recOwned, expectedOwnership, out _out2690, out _out2691);
                r = _out2690;
                resultingOwnership = _out2691;
                readIdents = _6587_recIdents;
              }
            } else if (_source312.is_Set) {
              DAST._IType _6588___mcc_h1148 = _source312.dtor_element;
              {
                RAST._IType _6589_fromTpeGen;
                RAST._IType _out2692;
                _out2692 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6589_fromTpeGen = _out2692;
                RAST._IType _6590_toTpeGen;
                RAST._IType _out2693;
                _out2693 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6590_toTpeGen = _out2693;
                RAST._IExpr _6591_recursiveGen;
                DCOMP._IOwnership _6592_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6593_recIdents;
                RAST._IExpr _out2694;
                DCOMP._IOwnership _out2695;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2696;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2694, out _out2695, out _out2696);
                _6591_recursiveGen = _out2694;
                _6592_recOwned = _out2695;
                _6593_recIdents = _out2696;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6591_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6589_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6590_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2697;
                DCOMP._IOwnership _out2698;
                DCOMP.COMP.FromOwnership(r, _6592_recOwned, expectedOwnership, out _out2697, out _out2698);
                r = _out2697;
                resultingOwnership = _out2698;
                readIdents = _6593_recIdents;
              }
            } else if (_source312.is_Multiset) {
              DAST._IType _6594___mcc_h1150 = _source312.dtor_element;
              {
                RAST._IType _6595_fromTpeGen;
                RAST._IType _out2699;
                _out2699 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6595_fromTpeGen = _out2699;
                RAST._IType _6596_toTpeGen;
                RAST._IType _out2700;
                _out2700 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6596_toTpeGen = _out2700;
                RAST._IExpr _6597_recursiveGen;
                DCOMP._IOwnership _6598_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6599_recIdents;
                RAST._IExpr _out2701;
                DCOMP._IOwnership _out2702;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2703;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2701, out _out2702, out _out2703);
                _6597_recursiveGen = _out2701;
                _6598_recOwned = _out2702;
                _6599_recIdents = _out2703;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6597_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6595_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6596_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2704;
                DCOMP._IOwnership _out2705;
                DCOMP.COMP.FromOwnership(r, _6598_recOwned, expectedOwnership, out _out2704, out _out2705);
                r = _out2704;
                resultingOwnership = _out2705;
                readIdents = _6599_recIdents;
              }
            } else if (_source312.is_Map) {
              DAST._IType _6600___mcc_h1152 = _source312.dtor_key;
              DAST._IType _6601___mcc_h1153 = _source312.dtor_value;
              {
                RAST._IType _6602_fromTpeGen;
                RAST._IType _out2706;
                _out2706 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6602_fromTpeGen = _out2706;
                RAST._IType _6603_toTpeGen;
                RAST._IType _out2707;
                _out2707 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6603_toTpeGen = _out2707;
                RAST._IExpr _6604_recursiveGen;
                DCOMP._IOwnership _6605_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6606_recIdents;
                RAST._IExpr _out2708;
                DCOMP._IOwnership _out2709;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2710;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2708, out _out2709, out _out2710);
                _6604_recursiveGen = _out2708;
                _6605_recOwned = _out2709;
                _6606_recIdents = _out2710;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6604_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6602_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6603_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2711;
                DCOMP._IOwnership _out2712;
                DCOMP.COMP.FromOwnership(r, _6605_recOwned, expectedOwnership, out _out2711, out _out2712);
                r = _out2711;
                resultingOwnership = _out2712;
                readIdents = _6606_recIdents;
              }
            } else if (_source312.is_SetBuilder) {
              DAST._IType _6607___mcc_h1156 = _source312.dtor_element;
              {
                RAST._IType _6608_fromTpeGen;
                RAST._IType _out2713;
                _out2713 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6608_fromTpeGen = _out2713;
                RAST._IType _6609_toTpeGen;
                RAST._IType _out2714;
                _out2714 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6609_toTpeGen = _out2714;
                RAST._IExpr _6610_recursiveGen;
                DCOMP._IOwnership _6611_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6612_recIdents;
                RAST._IExpr _out2715;
                DCOMP._IOwnership _out2716;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2717;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2715, out _out2716, out _out2717);
                _6610_recursiveGen = _out2715;
                _6611_recOwned = _out2716;
                _6612_recIdents = _out2717;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6610_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6608_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6609_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2718;
                DCOMP._IOwnership _out2719;
                DCOMP.COMP.FromOwnership(r, _6611_recOwned, expectedOwnership, out _out2718, out _out2719);
                r = _out2718;
                resultingOwnership = _out2719;
                readIdents = _6612_recIdents;
              }
            } else if (_source312.is_MapBuilder) {
              DAST._IType _6613___mcc_h1158 = _source312.dtor_key;
              DAST._IType _6614___mcc_h1159 = _source312.dtor_value;
              {
                RAST._IType _6615_fromTpeGen;
                RAST._IType _out2720;
                _out2720 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6615_fromTpeGen = _out2720;
                RAST._IType _6616_toTpeGen;
                RAST._IType _out2721;
                _out2721 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6616_toTpeGen = _out2721;
                RAST._IExpr _6617_recursiveGen;
                DCOMP._IOwnership _6618_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6619_recIdents;
                RAST._IExpr _out2722;
                DCOMP._IOwnership _out2723;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2724;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2722, out _out2723, out _out2724);
                _6617_recursiveGen = _out2722;
                _6618_recOwned = _out2723;
                _6619_recIdents = _out2724;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6617_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6615_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6616_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2725;
                DCOMP._IOwnership _out2726;
                DCOMP.COMP.FromOwnership(r, _6618_recOwned, expectedOwnership, out _out2725, out _out2726);
                r = _out2725;
                resultingOwnership = _out2726;
                readIdents = _6619_recIdents;
              }
            } else if (_source312.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6620___mcc_h1162 = _source312.dtor_args;
              DAST._IType _6621___mcc_h1163 = _source312.dtor_result;
              {
                RAST._IType _6622_fromTpeGen;
                RAST._IType _out2727;
                _out2727 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6622_fromTpeGen = _out2727;
                RAST._IType _6623_toTpeGen;
                RAST._IType _out2728;
                _out2728 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6623_toTpeGen = _out2728;
                RAST._IExpr _6624_recursiveGen;
                DCOMP._IOwnership _6625_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6626_recIdents;
                RAST._IExpr _out2729;
                DCOMP._IOwnership _out2730;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2731;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2729, out _out2730, out _out2731);
                _6624_recursiveGen = _out2729;
                _6625_recOwned = _out2730;
                _6626_recIdents = _out2731;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6624_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6622_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6623_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2732;
                DCOMP._IOwnership _out2733;
                DCOMP.COMP.FromOwnership(r, _6625_recOwned, expectedOwnership, out _out2732, out _out2733);
                r = _out2732;
                resultingOwnership = _out2733;
                readIdents = _6626_recIdents;
              }
            } else if (_source312.is_Primitive) {
              DAST._IPrimitive _6627___mcc_h1166 = _source312.dtor_Primitive_a0;
              {
                RAST._IType _6628_fromTpeGen;
                RAST._IType _out2734;
                _out2734 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6628_fromTpeGen = _out2734;
                RAST._IType _6629_toTpeGen;
                RAST._IType _out2735;
                _out2735 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6629_toTpeGen = _out2735;
                RAST._IExpr _6630_recursiveGen;
                DCOMP._IOwnership _6631_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6632_recIdents;
                RAST._IExpr _out2736;
                DCOMP._IOwnership _out2737;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2738;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2736, out _out2737, out _out2738);
                _6630_recursiveGen = _out2736;
                _6631_recOwned = _out2737;
                _6632_recIdents = _out2738;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6630_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6628_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6629_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2739;
                DCOMP._IOwnership _out2740;
                DCOMP.COMP.FromOwnership(r, _6631_recOwned, expectedOwnership, out _out2739, out _out2740);
                r = _out2739;
                resultingOwnership = _out2740;
                readIdents = _6632_recIdents;
              }
            } else if (_source312.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6633___mcc_h1168 = _source312.dtor_Passthrough_a0;
              {
                RAST._IType _6634_fromTpeGen;
                RAST._IType _out2741;
                _out2741 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6634_fromTpeGen = _out2741;
                RAST._IType _6635_toTpeGen;
                RAST._IType _out2742;
                _out2742 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6635_toTpeGen = _out2742;
                RAST._IExpr _6636_recursiveGen;
                DCOMP._IOwnership _6637_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6638_recIdents;
                RAST._IExpr _out2743;
                DCOMP._IOwnership _out2744;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2745;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2743, out _out2744, out _out2745);
                _6636_recursiveGen = _out2743;
                _6637_recOwned = _out2744;
                _6638_recIdents = _out2745;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6636_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6634_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6635_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2746;
                DCOMP._IOwnership _out2747;
                DCOMP.COMP.FromOwnership(r, _6637_recOwned, expectedOwnership, out _out2746, out _out2747);
                r = _out2746;
                resultingOwnership = _out2747;
                readIdents = _6638_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6639___mcc_h1170 = _source312.dtor_TypeArg_a0;
              {
                RAST._IType _6640_fromTpeGen;
                RAST._IType _out2748;
                _out2748 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6640_fromTpeGen = _out2748;
                RAST._IType _6641_toTpeGen;
                RAST._IType _out2749;
                _out2749 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6641_toTpeGen = _out2749;
                RAST._IExpr _6642_recursiveGen;
                DCOMP._IOwnership _6643_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6644_recIdents;
                RAST._IExpr _out2750;
                DCOMP._IOwnership _out2751;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2752;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2750, out _out2751, out _out2752);
                _6642_recursiveGen = _out2750;
                _6643_recOwned = _out2751;
                _6644_recIdents = _out2752;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6642_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6640_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6641_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2753;
                DCOMP._IOwnership _out2754;
                DCOMP.COMP.FromOwnership(r, _6643_recOwned, expectedOwnership, out _out2753, out _out2754);
                r = _out2753;
                resultingOwnership = _out2754;
                readIdents = _6644_recIdents;
              }
            }
          } else {
            DAST._IType _source317 = _3718___mcc_h1;
            if (_source317.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6645___mcc_h1172 = _source317.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6646___mcc_h1173 = _source317.dtor_typeArgs;
              DAST._IResolvedType _6647___mcc_h1174 = _source317.dtor_resolved;
              DAST._IResolvedType _source318 = _6647___mcc_h1174;
              if (_source318.is_AllocatedDatatype) {
                DAST._IDatatypeType _6648___mcc_h1178 = _source318.dtor_datatypeType;
                {
                  RAST._IType _6649_fromTpeGen;
                  RAST._IType _out2755;
                  _out2755 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6649_fromTpeGen = _out2755;
                  RAST._IType _6650_toTpeGen;
                  RAST._IType _out2756;
                  _out2756 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6650_toTpeGen = _out2756;
                  RAST._IExpr _6651_recursiveGen;
                  DCOMP._IOwnership _6652_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6653_recIdents;
                  RAST._IExpr _out2757;
                  DCOMP._IOwnership _out2758;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2759;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2757, out _out2758, out _out2759);
                  _6651_recursiveGen = _out2757;
                  _6652_recOwned = _out2758;
                  _6653_recIdents = _out2759;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6651_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6649_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6650_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2760;
                  DCOMP._IOwnership _out2761;
                  DCOMP.COMP.FromOwnership(r, _6652_recOwned, expectedOwnership, out _out2760, out _out2761);
                  r = _out2760;
                  resultingOwnership = _out2761;
                  readIdents = _6653_recIdents;
                }
              } else if (_source318.is_Datatype) {
                DAST._IDatatypeType _6654___mcc_h1180 = _source318.dtor_datatypeType;
                {
                  RAST._IType _6655_fromTpeGen;
                  RAST._IType _out2762;
                  _out2762 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6655_fromTpeGen = _out2762;
                  RAST._IType _6656_toTpeGen;
                  RAST._IType _out2763;
                  _out2763 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6656_toTpeGen = _out2763;
                  RAST._IExpr _6657_recursiveGen;
                  DCOMP._IOwnership _6658_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6659_recIdents;
                  RAST._IExpr _out2764;
                  DCOMP._IOwnership _out2765;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2766;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2764, out _out2765, out _out2766);
                  _6657_recursiveGen = _out2764;
                  _6658_recOwned = _out2765;
                  _6659_recIdents = _out2766;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6657_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6655_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6656_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2767;
                  DCOMP._IOwnership _out2768;
                  DCOMP.COMP.FromOwnership(r, _6658_recOwned, expectedOwnership, out _out2767, out _out2768);
                  r = _out2767;
                  resultingOwnership = _out2768;
                  readIdents = _6659_recIdents;
                }
              } else if (_source318.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6660___mcc_h1182 = _source318.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6661___mcc_h1183 = _source318.dtor_attributes;
                {
                  RAST._IType _6662_fromTpeGen;
                  RAST._IType _out2769;
                  _out2769 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6662_fromTpeGen = _out2769;
                  RAST._IType _6663_toTpeGen;
                  RAST._IType _out2770;
                  _out2770 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6663_toTpeGen = _out2770;
                  RAST._IExpr _6664_recursiveGen;
                  DCOMP._IOwnership _6665_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6666_recIdents;
                  RAST._IExpr _out2771;
                  DCOMP._IOwnership _out2772;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2773;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2771, out _out2772, out _out2773);
                  _6664_recursiveGen = _out2771;
                  _6665_recOwned = _out2772;
                  _6666_recIdents = _out2773;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6664_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6662_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6663_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2774;
                  DCOMP._IOwnership _out2775;
                  DCOMP.COMP.FromOwnership(r, _6665_recOwned, expectedOwnership, out _out2774, out _out2775);
                  r = _out2774;
                  resultingOwnership = _out2775;
                  readIdents = _6666_recIdents;
                }
              } else {
                DAST._IType _6667___mcc_h1186 = _source318.dtor_baseType;
                DAST._INewtypeRange _6668___mcc_h1187 = _source318.dtor_range;
                bool _6669___mcc_h1188 = _source318.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6670___mcc_h1189 = _source318.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6671_attributes = _6670___mcc_h1189;
                bool _6672_erase = _6669___mcc_h1188;
                DAST._INewtypeRange _6673_range = _6668___mcc_h1187;
                DAST._IType _6674_b = _6667___mcc_h1186;
                {
                  Std.Wrappers._IOption<RAST._IType> _6675_nativeToType;
                  _6675_nativeToType = DCOMP.COMP.NewtypeToRustType(_6674_b, _6673_range);
                  if (object.Equals(_3712_fromTpe, _6674_b)) {
                    RAST._IExpr _6676_recursiveGen;
                    DCOMP._IOwnership _6677_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6678_recIdents;
                    RAST._IExpr _out2776;
                    DCOMP._IOwnership _out2777;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2778;
                    DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2776, out _out2777, out _out2778);
                    _6676_recursiveGen = _out2776;
                    _6677_recOwned = _out2777;
                    _6678_recIdents = _out2778;
                    readIdents = _6678_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source319 = _6675_nativeToType;
                    if (_source319.is_None) {
                      if (_6672_erase) {
                        r = _6676_recursiveGen;
                      } else {
                        RAST._IType _6679_rhsType;
                        RAST._IType _out2779;
                        _out2779 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                        _6679_rhsType = _out2779;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6679_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6676_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2780;
                      DCOMP._IOwnership _out2781;
                      DCOMP.COMP.FromOwnership(r, _6677_recOwned, expectedOwnership, out _out2780, out _out2781);
                      r = _out2780;
                      resultingOwnership = _out2781;
                    } else {
                      RAST._IType _6680___mcc_h2332 = _source319.dtor_value;
                      RAST._IType _6681_v = _6680___mcc_h2332;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6676_recursiveGen, RAST.Expr.create_ExprFromType(_6681_v)));
                      RAST._IExpr _out2782;
                      DCOMP._IOwnership _out2783;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2782, out _out2783);
                      r = _out2782;
                      resultingOwnership = _out2783;
                    }
                  } else {
                    if ((_6675_nativeToType).is_Some) {
                      DAST._IType _source320 = _3712_fromTpe;
                      if (_source320.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6682___mcc_h2333 = _source320.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6683___mcc_h2334 = _source320.dtor_typeArgs;
                        DAST._IResolvedType _6684___mcc_h2335 = _source320.dtor_resolved;
                        DAST._IResolvedType _source321 = _6684___mcc_h2335;
                        if (_source321.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6685___mcc_h2339 = _source321.dtor_datatypeType;
                        } else if (_source321.is_Datatype) {
                          DAST._IDatatypeType _6686___mcc_h2341 = _source321.dtor_datatypeType;
                        } else if (_source321.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6687___mcc_h2343 = _source321.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6688___mcc_h2344 = _source321.dtor_attributes;
                        } else {
                          DAST._IType _6689___mcc_h2347 = _source321.dtor_baseType;
                          DAST._INewtypeRange _6690___mcc_h2348 = _source321.dtor_range;
                          bool _6691___mcc_h2349 = _source321.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6692___mcc_h2350 = _source321.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6693_attributes0 = _6692___mcc_h2350;
                          bool _6694_erase0 = _6691___mcc_h2349;
                          DAST._INewtypeRange _6695_range0 = _6690___mcc_h2348;
                          DAST._IType _6696_b0 = _6689___mcc_h2347;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6697_nativeFromType;
                            _6697_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6696_b0, _6695_range0);
                            if ((_6697_nativeFromType).is_Some) {
                              RAST._IExpr _6698_recursiveGen;
                              DCOMP._IOwnership _6699_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6700_recIdents;
                              RAST._IExpr _out2784;
                              DCOMP._IOwnership _out2785;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2786;
                              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2784, out _out2785, out _out2786);
                              _6698_recursiveGen = _out2784;
                              _6699_recOwned = _out2785;
                              _6700_recIdents = _out2786;
                              RAST._IExpr _out2787;
                              DCOMP._IOwnership _out2788;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6698_recursiveGen, (_6675_nativeToType).dtor_value), _6699_recOwned, expectedOwnership, out _out2787, out _out2788);
                              r = _out2787;
                              resultingOwnership = _out2788;
                              readIdents = _6700_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source320.is_Nullable) {
                        DAST._IType _6701___mcc_h2355 = _source320.dtor_Nullable_a0;
                      } else if (_source320.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6702___mcc_h2357 = _source320.dtor_Tuple_a0;
                      } else if (_source320.is_Array) {
                        DAST._IType _6703___mcc_h2359 = _source320.dtor_element;
                        BigInteger _6704___mcc_h2360 = _source320.dtor_dims;
                      } else if (_source320.is_Seq) {
                        DAST._IType _6705___mcc_h2363 = _source320.dtor_element;
                      } else if (_source320.is_Set) {
                        DAST._IType _6706___mcc_h2365 = _source320.dtor_element;
                      } else if (_source320.is_Multiset) {
                        DAST._IType _6707___mcc_h2367 = _source320.dtor_element;
                      } else if (_source320.is_Map) {
                        DAST._IType _6708___mcc_h2369 = _source320.dtor_key;
                        DAST._IType _6709___mcc_h2370 = _source320.dtor_value;
                      } else if (_source320.is_SetBuilder) {
                        DAST._IType _6710___mcc_h2373 = _source320.dtor_element;
                      } else if (_source320.is_MapBuilder) {
                        DAST._IType _6711___mcc_h2375 = _source320.dtor_key;
                        DAST._IType _6712___mcc_h2376 = _source320.dtor_value;
                      } else if (_source320.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6713___mcc_h2379 = _source320.dtor_args;
                        DAST._IType _6714___mcc_h2380 = _source320.dtor_result;
                      } else if (_source320.is_Primitive) {
                        DAST._IPrimitive _6715___mcc_h2383 = _source320.dtor_Primitive_a0;
                      } else if (_source320.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6716___mcc_h2385 = _source320.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6717___mcc_h2387 = _source320.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6718_recursiveGen;
                        DCOMP._IOwnership _6719_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6720_recIdents;
                        RAST._IExpr _out2789;
                        DCOMP._IOwnership _out2790;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2791;
                        DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2789, out _out2790, out _out2791);
                        _6718_recursiveGen = _out2789;
                        _6719_recOwned = _out2790;
                        _6720_recIdents = _out2791;
                        RAST._IExpr _out2792;
                        DCOMP._IOwnership _out2793;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6718_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6675_nativeToType).dtor_value), _6719_recOwned, expectedOwnership, out _out2792, out _out2793);
                        r = _out2792;
                        resultingOwnership = _out2793;
                        readIdents = _6720_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2794;
                    DCOMP._IOwnership _out2795;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2796;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _6674_b), _6674_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out2794, out _out2795, out _out2796);
                    r = _out2794;
                    resultingOwnership = _out2795;
                    readIdents = _out2796;
                  }
                }
              }
            } else if (_source317.is_Nullable) {
              DAST._IType _6721___mcc_h1194 = _source317.dtor_Nullable_a0;
              {
                RAST._IExpr _6722_recursiveGen;
                DCOMP._IOwnership _6723_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6724_recIdents;
                RAST._IExpr _out2797;
                DCOMP._IOwnership _out2798;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2799;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2797, out _out2798, out _out2799);
                _6722_recursiveGen = _out2797;
                _6723_recOwned = _out2798;
                _6724_recIdents = _out2799;
                r = _6722_recursiveGen;
                if (object.Equals(_6723_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2800;
                DCOMP._IOwnership _out2801;
                DCOMP.COMP.FromOwnership(r, _6723_recOwned, expectedOwnership, out _out2800, out _out2801);
                r = _out2800;
                resultingOwnership = _out2801;
                readIdents = _6724_recIdents;
              }
            } else if (_source317.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6725___mcc_h1196 = _source317.dtor_Tuple_a0;
              {
                RAST._IType _6726_fromTpeGen;
                RAST._IType _out2802;
                _out2802 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6726_fromTpeGen = _out2802;
                RAST._IType _6727_toTpeGen;
                RAST._IType _out2803;
                _out2803 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6727_toTpeGen = _out2803;
                RAST._IExpr _6728_recursiveGen;
                DCOMP._IOwnership _6729_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6730_recIdents;
                RAST._IExpr _out2804;
                DCOMP._IOwnership _out2805;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2806;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2804, out _out2805, out _out2806);
                _6728_recursiveGen = _out2804;
                _6729_recOwned = _out2805;
                _6730_recIdents = _out2806;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6728_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6726_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6727_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2807;
                DCOMP._IOwnership _out2808;
                DCOMP.COMP.FromOwnership(r, _6729_recOwned, expectedOwnership, out _out2807, out _out2808);
                r = _out2807;
                resultingOwnership = _out2808;
                readIdents = _6730_recIdents;
              }
            } else if (_source317.is_Array) {
              DAST._IType _6731___mcc_h1198 = _source317.dtor_element;
              BigInteger _6732___mcc_h1199 = _source317.dtor_dims;
              {
                RAST._IType _6733_fromTpeGen;
                RAST._IType _out2809;
                _out2809 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6733_fromTpeGen = _out2809;
                RAST._IType _6734_toTpeGen;
                RAST._IType _out2810;
                _out2810 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6734_toTpeGen = _out2810;
                RAST._IExpr _6735_recursiveGen;
                DCOMP._IOwnership _6736_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6737_recIdents;
                RAST._IExpr _out2811;
                DCOMP._IOwnership _out2812;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2813;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2811, out _out2812, out _out2813);
                _6735_recursiveGen = _out2811;
                _6736_recOwned = _out2812;
                _6737_recIdents = _out2813;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6735_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6733_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6734_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2814;
                DCOMP._IOwnership _out2815;
                DCOMP.COMP.FromOwnership(r, _6736_recOwned, expectedOwnership, out _out2814, out _out2815);
                r = _out2814;
                resultingOwnership = _out2815;
                readIdents = _6737_recIdents;
              }
            } else if (_source317.is_Seq) {
              DAST._IType _6738___mcc_h1202 = _source317.dtor_element;
              {
                RAST._IType _6739_fromTpeGen;
                RAST._IType _out2816;
                _out2816 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6739_fromTpeGen = _out2816;
                RAST._IType _6740_toTpeGen;
                RAST._IType _out2817;
                _out2817 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6740_toTpeGen = _out2817;
                RAST._IExpr _6741_recursiveGen;
                DCOMP._IOwnership _6742_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6743_recIdents;
                RAST._IExpr _out2818;
                DCOMP._IOwnership _out2819;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2820;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2818, out _out2819, out _out2820);
                _6741_recursiveGen = _out2818;
                _6742_recOwned = _out2819;
                _6743_recIdents = _out2820;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6741_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6739_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6740_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2821;
                DCOMP._IOwnership _out2822;
                DCOMP.COMP.FromOwnership(r, _6742_recOwned, expectedOwnership, out _out2821, out _out2822);
                r = _out2821;
                resultingOwnership = _out2822;
                readIdents = _6743_recIdents;
              }
            } else if (_source317.is_Set) {
              DAST._IType _6744___mcc_h1204 = _source317.dtor_element;
              {
                RAST._IType _6745_fromTpeGen;
                RAST._IType _out2823;
                _out2823 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6745_fromTpeGen = _out2823;
                RAST._IType _6746_toTpeGen;
                RAST._IType _out2824;
                _out2824 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6746_toTpeGen = _out2824;
                RAST._IExpr _6747_recursiveGen;
                DCOMP._IOwnership _6748_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6749_recIdents;
                RAST._IExpr _out2825;
                DCOMP._IOwnership _out2826;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2827;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2825, out _out2826, out _out2827);
                _6747_recursiveGen = _out2825;
                _6748_recOwned = _out2826;
                _6749_recIdents = _out2827;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6747_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6745_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6746_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2828;
                DCOMP._IOwnership _out2829;
                DCOMP.COMP.FromOwnership(r, _6748_recOwned, expectedOwnership, out _out2828, out _out2829);
                r = _out2828;
                resultingOwnership = _out2829;
                readIdents = _6749_recIdents;
              }
            } else if (_source317.is_Multiset) {
              DAST._IType _6750___mcc_h1206 = _source317.dtor_element;
              {
                RAST._IType _6751_fromTpeGen;
                RAST._IType _out2830;
                _out2830 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6751_fromTpeGen = _out2830;
                RAST._IType _6752_toTpeGen;
                RAST._IType _out2831;
                _out2831 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6752_toTpeGen = _out2831;
                RAST._IExpr _6753_recursiveGen;
                DCOMP._IOwnership _6754_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6755_recIdents;
                RAST._IExpr _out2832;
                DCOMP._IOwnership _out2833;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2834;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2832, out _out2833, out _out2834);
                _6753_recursiveGen = _out2832;
                _6754_recOwned = _out2833;
                _6755_recIdents = _out2834;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6753_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6751_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6752_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2835;
                DCOMP._IOwnership _out2836;
                DCOMP.COMP.FromOwnership(r, _6754_recOwned, expectedOwnership, out _out2835, out _out2836);
                r = _out2835;
                resultingOwnership = _out2836;
                readIdents = _6755_recIdents;
              }
            } else if (_source317.is_Map) {
              DAST._IType _6756___mcc_h1208 = _source317.dtor_key;
              DAST._IType _6757___mcc_h1209 = _source317.dtor_value;
              {
                RAST._IType _6758_fromTpeGen;
                RAST._IType _out2837;
                _out2837 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6758_fromTpeGen = _out2837;
                RAST._IType _6759_toTpeGen;
                RAST._IType _out2838;
                _out2838 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6759_toTpeGen = _out2838;
                RAST._IExpr _6760_recursiveGen;
                DCOMP._IOwnership _6761_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6762_recIdents;
                RAST._IExpr _out2839;
                DCOMP._IOwnership _out2840;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2841;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2839, out _out2840, out _out2841);
                _6760_recursiveGen = _out2839;
                _6761_recOwned = _out2840;
                _6762_recIdents = _out2841;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6760_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6758_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6759_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2842;
                DCOMP._IOwnership _out2843;
                DCOMP.COMP.FromOwnership(r, _6761_recOwned, expectedOwnership, out _out2842, out _out2843);
                r = _out2842;
                resultingOwnership = _out2843;
                readIdents = _6762_recIdents;
              }
            } else if (_source317.is_SetBuilder) {
              DAST._IType _6763___mcc_h1212 = _source317.dtor_element;
              {
                RAST._IType _6764_fromTpeGen;
                RAST._IType _out2844;
                _out2844 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6764_fromTpeGen = _out2844;
                RAST._IType _6765_toTpeGen;
                RAST._IType _out2845;
                _out2845 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6765_toTpeGen = _out2845;
                RAST._IExpr _6766_recursiveGen;
                DCOMP._IOwnership _6767_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6768_recIdents;
                RAST._IExpr _out2846;
                DCOMP._IOwnership _out2847;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2848;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2846, out _out2847, out _out2848);
                _6766_recursiveGen = _out2846;
                _6767_recOwned = _out2847;
                _6768_recIdents = _out2848;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6766_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6764_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6765_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2849;
                DCOMP._IOwnership _out2850;
                DCOMP.COMP.FromOwnership(r, _6767_recOwned, expectedOwnership, out _out2849, out _out2850);
                r = _out2849;
                resultingOwnership = _out2850;
                readIdents = _6768_recIdents;
              }
            } else if (_source317.is_MapBuilder) {
              DAST._IType _6769___mcc_h1214 = _source317.dtor_key;
              DAST._IType _6770___mcc_h1215 = _source317.dtor_value;
              {
                RAST._IType _6771_fromTpeGen;
                RAST._IType _out2851;
                _out2851 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6771_fromTpeGen = _out2851;
                RAST._IType _6772_toTpeGen;
                RAST._IType _out2852;
                _out2852 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6772_toTpeGen = _out2852;
                RAST._IExpr _6773_recursiveGen;
                DCOMP._IOwnership _6774_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6775_recIdents;
                RAST._IExpr _out2853;
                DCOMP._IOwnership _out2854;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2855;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2853, out _out2854, out _out2855);
                _6773_recursiveGen = _out2853;
                _6774_recOwned = _out2854;
                _6775_recIdents = _out2855;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6773_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6771_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6772_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2856;
                DCOMP._IOwnership _out2857;
                DCOMP.COMP.FromOwnership(r, _6774_recOwned, expectedOwnership, out _out2856, out _out2857);
                r = _out2856;
                resultingOwnership = _out2857;
                readIdents = _6775_recIdents;
              }
            } else if (_source317.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6776___mcc_h1218 = _source317.dtor_args;
              DAST._IType _6777___mcc_h1219 = _source317.dtor_result;
              {
                RAST._IType _6778_fromTpeGen;
                RAST._IType _out2858;
                _out2858 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6778_fromTpeGen = _out2858;
                RAST._IType _6779_toTpeGen;
                RAST._IType _out2859;
                _out2859 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6779_toTpeGen = _out2859;
                RAST._IExpr _6780_recursiveGen;
                DCOMP._IOwnership _6781_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6782_recIdents;
                RAST._IExpr _out2860;
                DCOMP._IOwnership _out2861;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2862;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2860, out _out2861, out _out2862);
                _6780_recursiveGen = _out2860;
                _6781_recOwned = _out2861;
                _6782_recIdents = _out2862;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6780_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6778_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6779_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2863;
                DCOMP._IOwnership _out2864;
                DCOMP.COMP.FromOwnership(r, _6781_recOwned, expectedOwnership, out _out2863, out _out2864);
                r = _out2863;
                resultingOwnership = _out2864;
                readIdents = _6782_recIdents;
              }
            } else if (_source317.is_Primitive) {
              DAST._IPrimitive _6783___mcc_h1222 = _source317.dtor_Primitive_a0;
              DAST._IPrimitive _source322 = _6783___mcc_h1222;
              if (_source322.is_Int) {
                {
                  RAST._IType _6784_rhsType;
                  RAST._IType _out2865;
                  _out2865 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6784_rhsType = _out2865;
                  RAST._IExpr _6785_recursiveGen;
                  DCOMP._IOwnership _6786___v104;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6787_recIdents;
                  RAST._IExpr _out2866;
                  DCOMP._IOwnership _out2867;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2868;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2866, out _out2867, out _out2868);
                  _6785_recursiveGen = _out2866;
                  _6786___v104 = _out2867;
                  _6787_recIdents = _out2868;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_6785_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as u32)}")));
                  RAST._IExpr _out2869;
                  DCOMP._IOwnership _out2870;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2869, out _out2870);
                  r = _out2869;
                  resultingOwnership = _out2870;
                  readIdents = _6787_recIdents;
                }
              } else if (_source322.is_Real) {
                {
                  RAST._IType _6788_fromTpeGen;
                  RAST._IType _out2871;
                  _out2871 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6788_fromTpeGen = _out2871;
                  RAST._IType _6789_toTpeGen;
                  RAST._IType _out2872;
                  _out2872 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6789_toTpeGen = _out2872;
                  RAST._IExpr _6790_recursiveGen;
                  DCOMP._IOwnership _6791_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6792_recIdents;
                  RAST._IExpr _out2873;
                  DCOMP._IOwnership _out2874;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2875;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2873, out _out2874, out _out2875);
                  _6790_recursiveGen = _out2873;
                  _6791_recOwned = _out2874;
                  _6792_recIdents = _out2875;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6790_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6788_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6789_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2876;
                  DCOMP._IOwnership _out2877;
                  DCOMP.COMP.FromOwnership(r, _6791_recOwned, expectedOwnership, out _out2876, out _out2877);
                  r = _out2876;
                  resultingOwnership = _out2877;
                  readIdents = _6792_recIdents;
                }
              } else if (_source322.is_String) {
                {
                  RAST._IType _6793_fromTpeGen;
                  RAST._IType _out2878;
                  _out2878 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6793_fromTpeGen = _out2878;
                  RAST._IType _6794_toTpeGen;
                  RAST._IType _out2879;
                  _out2879 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6794_toTpeGen = _out2879;
                  RAST._IExpr _6795_recursiveGen;
                  DCOMP._IOwnership _6796_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6797_recIdents;
                  RAST._IExpr _out2880;
                  DCOMP._IOwnership _out2881;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2882;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2880, out _out2881, out _out2882);
                  _6795_recursiveGen = _out2880;
                  _6796_recOwned = _out2881;
                  _6797_recIdents = _out2882;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6795_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6793_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6794_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2883;
                  DCOMP._IOwnership _out2884;
                  DCOMP.COMP.FromOwnership(r, _6796_recOwned, expectedOwnership, out _out2883, out _out2884);
                  r = _out2883;
                  resultingOwnership = _out2884;
                  readIdents = _6797_recIdents;
                }
              } else if (_source322.is_Bool) {
                {
                  RAST._IType _6798_fromTpeGen;
                  RAST._IType _out2885;
                  _out2885 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6798_fromTpeGen = _out2885;
                  RAST._IType _6799_toTpeGen;
                  RAST._IType _out2886;
                  _out2886 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6799_toTpeGen = _out2886;
                  RAST._IExpr _6800_recursiveGen;
                  DCOMP._IOwnership _6801_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6802_recIdents;
                  RAST._IExpr _out2887;
                  DCOMP._IOwnership _out2888;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2889;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2887, out _out2888, out _out2889);
                  _6800_recursiveGen = _out2887;
                  _6801_recOwned = _out2888;
                  _6802_recIdents = _out2889;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6800_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6798_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6799_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2890;
                  DCOMP._IOwnership _out2891;
                  DCOMP.COMP.FromOwnership(r, _6801_recOwned, expectedOwnership, out _out2890, out _out2891);
                  r = _out2890;
                  resultingOwnership = _out2891;
                  readIdents = _6802_recIdents;
                }
              } else {
                {
                  RAST._IType _6803_fromTpeGen;
                  RAST._IType _out2892;
                  _out2892 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                  _6803_fromTpeGen = _out2892;
                  RAST._IType _6804_toTpeGen;
                  RAST._IType _out2893;
                  _out2893 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                  _6804_toTpeGen = _out2893;
                  RAST._IExpr _6805_recursiveGen;
                  DCOMP._IOwnership _6806_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6807_recIdents;
                  RAST._IExpr _out2894;
                  DCOMP._IOwnership _out2895;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2896;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2894, out _out2895, out _out2896);
                  _6805_recursiveGen = _out2894;
                  _6806_recOwned = _out2895;
                  _6807_recIdents = _out2896;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6805_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6803_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6804_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2897;
                  DCOMP._IOwnership _out2898;
                  DCOMP.COMP.FromOwnership(r, _6806_recOwned, expectedOwnership, out _out2897, out _out2898);
                  r = _out2897;
                  resultingOwnership = _out2898;
                  readIdents = _6807_recIdents;
                }
              }
            } else if (_source317.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6808___mcc_h1224 = _source317.dtor_Passthrough_a0;
              {
                RAST._IType _6809_fromTpeGen;
                RAST._IType _out2899;
                _out2899 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6809_fromTpeGen = _out2899;
                RAST._IType _6810_toTpeGen;
                RAST._IType _out2900;
                _out2900 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6810_toTpeGen = _out2900;
                RAST._IExpr _6811_recursiveGen;
                DCOMP._IOwnership _6812_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6813_recIdents;
                RAST._IExpr _out2901;
                DCOMP._IOwnership _out2902;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2903;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2901, out _out2902, out _out2903);
                _6811_recursiveGen = _out2901;
                _6812_recOwned = _out2902;
                _6813_recIdents = _out2903;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6811_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6809_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6810_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2904;
                DCOMP._IOwnership _out2905;
                DCOMP.COMP.FromOwnership(r, _6812_recOwned, expectedOwnership, out _out2904, out _out2905);
                r = _out2904;
                resultingOwnership = _out2905;
                readIdents = _6813_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6814___mcc_h1226 = _source317.dtor_TypeArg_a0;
              {
                RAST._IType _6815_fromTpeGen;
                RAST._IType _out2906;
                _out2906 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6815_fromTpeGen = _out2906;
                RAST._IType _6816_toTpeGen;
                RAST._IType _out2907;
                _out2907 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6816_toTpeGen = _out2907;
                RAST._IExpr _6817_recursiveGen;
                DCOMP._IOwnership _6818_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6819_recIdents;
                RAST._IExpr _out2908;
                DCOMP._IOwnership _out2909;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2910;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2908, out _out2909, out _out2910);
                _6817_recursiveGen = _out2908;
                _6818_recOwned = _out2909;
                _6819_recIdents = _out2910;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6817_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6815_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6816_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2911;
                DCOMP._IOwnership _out2912;
                DCOMP.COMP.FromOwnership(r, _6818_recOwned, expectedOwnership, out _out2911, out _out2912);
                r = _out2911;
                resultingOwnership = _out2912;
                readIdents = _6819_recIdents;
              }
            }
          }
        } else if (_source210.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _6820___mcc_h1228 = _source210.dtor_Passthrough_a0;
          DAST._IType _source323 = _3718___mcc_h1;
          if (_source323.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6821___mcc_h1232 = _source323.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _6822___mcc_h1233 = _source323.dtor_typeArgs;
            DAST._IResolvedType _6823___mcc_h1234 = _source323.dtor_resolved;
            DAST._IResolvedType _source324 = _6823___mcc_h1234;
            if (_source324.is_AllocatedDatatype) {
              DAST._IDatatypeType _6824___mcc_h1238 = _source324.dtor_datatypeType;
              {
                RAST._IType _6825_fromTpeGen;
                RAST._IType _out2913;
                _out2913 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6825_fromTpeGen = _out2913;
                RAST._IType _6826_toTpeGen;
                RAST._IType _out2914;
                _out2914 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6826_toTpeGen = _out2914;
                RAST._IExpr _6827_recursiveGen;
                DCOMP._IOwnership _6828_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6829_recIdents;
                RAST._IExpr _out2915;
                DCOMP._IOwnership _out2916;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2917;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2915, out _out2916, out _out2917);
                _6827_recursiveGen = _out2915;
                _6828_recOwned = _out2916;
                _6829_recIdents = _out2917;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6827_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6825_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6826_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2918;
                DCOMP._IOwnership _out2919;
                DCOMP.COMP.FromOwnership(r, _6828_recOwned, expectedOwnership, out _out2918, out _out2919);
                r = _out2918;
                resultingOwnership = _out2919;
                readIdents = _6829_recIdents;
              }
            } else if (_source324.is_Datatype) {
              DAST._IDatatypeType _6830___mcc_h1240 = _source324.dtor_datatypeType;
              {
                RAST._IType _6831_fromTpeGen;
                RAST._IType _out2920;
                _out2920 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6831_fromTpeGen = _out2920;
                RAST._IType _6832_toTpeGen;
                RAST._IType _out2921;
                _out2921 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6832_toTpeGen = _out2921;
                RAST._IExpr _6833_recursiveGen;
                DCOMP._IOwnership _6834_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6835_recIdents;
                RAST._IExpr _out2922;
                DCOMP._IOwnership _out2923;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2924;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2922, out _out2923, out _out2924);
                _6833_recursiveGen = _out2922;
                _6834_recOwned = _out2923;
                _6835_recIdents = _out2924;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6833_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6831_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6832_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2925;
                DCOMP._IOwnership _out2926;
                DCOMP.COMP.FromOwnership(r, _6834_recOwned, expectedOwnership, out _out2925, out _out2926);
                r = _out2925;
                resultingOwnership = _out2926;
                readIdents = _6835_recIdents;
              }
            } else if (_source324.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6836___mcc_h1242 = _source324.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _6837___mcc_h1243 = _source324.dtor_attributes;
              {
                RAST._IType _6838_fromTpeGen;
                RAST._IType _out2927;
                _out2927 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6838_fromTpeGen = _out2927;
                RAST._IType _6839_toTpeGen;
                RAST._IType _out2928;
                _out2928 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6839_toTpeGen = _out2928;
                RAST._IExpr _6840_recursiveGen;
                DCOMP._IOwnership _6841_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6842_recIdents;
                RAST._IExpr _out2929;
                DCOMP._IOwnership _out2930;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2931;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2929, out _out2930, out _out2931);
                _6840_recursiveGen = _out2929;
                _6841_recOwned = _out2930;
                _6842_recIdents = _out2931;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6840_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6838_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6839_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2932;
                DCOMP._IOwnership _out2933;
                DCOMP.COMP.FromOwnership(r, _6841_recOwned, expectedOwnership, out _out2932, out _out2933);
                r = _out2932;
                resultingOwnership = _out2933;
                readIdents = _6842_recIdents;
              }
            } else {
              DAST._IType _6843___mcc_h1246 = _source324.dtor_baseType;
              DAST._INewtypeRange _6844___mcc_h1247 = _source324.dtor_range;
              bool _6845___mcc_h1248 = _source324.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _6846___mcc_h1249 = _source324.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _6847_attributes = _6846___mcc_h1249;
              bool _6848_erase = _6845___mcc_h1248;
              DAST._INewtypeRange _6849_range = _6844___mcc_h1247;
              DAST._IType _6850_b = _6843___mcc_h1246;
              {
                Std.Wrappers._IOption<RAST._IType> _6851_nativeToType;
                _6851_nativeToType = DCOMP.COMP.NewtypeToRustType(_6850_b, _6849_range);
                if (object.Equals(_3712_fromTpe, _6850_b)) {
                  RAST._IExpr _6852_recursiveGen;
                  DCOMP._IOwnership _6853_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6854_recIdents;
                  RAST._IExpr _out2934;
                  DCOMP._IOwnership _out2935;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2936;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2934, out _out2935, out _out2936);
                  _6852_recursiveGen = _out2934;
                  _6853_recOwned = _out2935;
                  _6854_recIdents = _out2936;
                  readIdents = _6854_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source325 = _6851_nativeToType;
                  if (_source325.is_None) {
                    if (_6848_erase) {
                      r = _6852_recursiveGen;
                    } else {
                      RAST._IType _6855_rhsType;
                      RAST._IType _out2937;
                      _out2937 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _6855_rhsType = _out2937;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6855_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6852_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out2938;
                    DCOMP._IOwnership _out2939;
                    DCOMP.COMP.FromOwnership(r, _6853_recOwned, expectedOwnership, out _out2938, out _out2939);
                    r = _out2938;
                    resultingOwnership = _out2939;
                  } else {
                    RAST._IType _6856___mcc_h2389 = _source325.dtor_value;
                    RAST._IType _6857_v = _6856___mcc_h2389;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6852_recursiveGen, RAST.Expr.create_ExprFromType(_6857_v)));
                    RAST._IExpr _out2940;
                    DCOMP._IOwnership _out2941;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2940, out _out2941);
                    r = _out2940;
                    resultingOwnership = _out2941;
                  }
                } else {
                  if ((_6851_nativeToType).is_Some) {
                    DAST._IType _source326 = _3712_fromTpe;
                    if (_source326.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6858___mcc_h2390 = _source326.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _6859___mcc_h2391 = _source326.dtor_typeArgs;
                      DAST._IResolvedType _6860___mcc_h2392 = _source326.dtor_resolved;
                      DAST._IResolvedType _source327 = _6860___mcc_h2392;
                      if (_source327.is_AllocatedDatatype) {
                        DAST._IDatatypeType _6861___mcc_h2396 = _source327.dtor_datatypeType;
                      } else if (_source327.is_Datatype) {
                        DAST._IDatatypeType _6862___mcc_h2398 = _source327.dtor_datatypeType;
                      } else if (_source327.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6863___mcc_h2400 = _source327.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _6864___mcc_h2401 = _source327.dtor_attributes;
                      } else {
                        DAST._IType _6865___mcc_h2404 = _source327.dtor_baseType;
                        DAST._INewtypeRange _6866___mcc_h2405 = _source327.dtor_range;
                        bool _6867___mcc_h2406 = _source327.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _6868___mcc_h2407 = _source327.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _6869_attributes0 = _6868___mcc_h2407;
                        bool _6870_erase0 = _6867___mcc_h2406;
                        DAST._INewtypeRange _6871_range0 = _6866___mcc_h2405;
                        DAST._IType _6872_b0 = _6865___mcc_h2404;
                        {
                          Std.Wrappers._IOption<RAST._IType> _6873_nativeFromType;
                          _6873_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6872_b0, _6871_range0);
                          if ((_6873_nativeFromType).is_Some) {
                            RAST._IExpr _6874_recursiveGen;
                            DCOMP._IOwnership _6875_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6876_recIdents;
                            RAST._IExpr _out2942;
                            DCOMP._IOwnership _out2943;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2944;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2942, out _out2943, out _out2944);
                            _6874_recursiveGen = _out2942;
                            _6875_recOwned = _out2943;
                            _6876_recIdents = _out2944;
                            RAST._IExpr _out2945;
                            DCOMP._IOwnership _out2946;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6874_recursiveGen, (_6851_nativeToType).dtor_value), _6875_recOwned, expectedOwnership, out _out2945, out _out2946);
                            r = _out2945;
                            resultingOwnership = _out2946;
                            readIdents = _6876_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source326.is_Nullable) {
                      DAST._IType _6877___mcc_h2412 = _source326.dtor_Nullable_a0;
                    } else if (_source326.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _6878___mcc_h2414 = _source326.dtor_Tuple_a0;
                    } else if (_source326.is_Array) {
                      DAST._IType _6879___mcc_h2416 = _source326.dtor_element;
                      BigInteger _6880___mcc_h2417 = _source326.dtor_dims;
                    } else if (_source326.is_Seq) {
                      DAST._IType _6881___mcc_h2420 = _source326.dtor_element;
                    } else if (_source326.is_Set) {
                      DAST._IType _6882___mcc_h2422 = _source326.dtor_element;
                    } else if (_source326.is_Multiset) {
                      DAST._IType _6883___mcc_h2424 = _source326.dtor_element;
                    } else if (_source326.is_Map) {
                      DAST._IType _6884___mcc_h2426 = _source326.dtor_key;
                      DAST._IType _6885___mcc_h2427 = _source326.dtor_value;
                    } else if (_source326.is_SetBuilder) {
                      DAST._IType _6886___mcc_h2430 = _source326.dtor_element;
                    } else if (_source326.is_MapBuilder) {
                      DAST._IType _6887___mcc_h2432 = _source326.dtor_key;
                      DAST._IType _6888___mcc_h2433 = _source326.dtor_value;
                    } else if (_source326.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _6889___mcc_h2436 = _source326.dtor_args;
                      DAST._IType _6890___mcc_h2437 = _source326.dtor_result;
                    } else if (_source326.is_Primitive) {
                      DAST._IPrimitive _6891___mcc_h2440 = _source326.dtor_Primitive_a0;
                    } else if (_source326.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _6892___mcc_h2442 = _source326.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _6893___mcc_h2444 = _source326.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _6894_recursiveGen;
                      DCOMP._IOwnership _6895_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6896_recIdents;
                      RAST._IExpr _out2947;
                      DCOMP._IOwnership _out2948;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2949;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2947, out _out2948, out _out2949);
                      _6894_recursiveGen = _out2947;
                      _6895_recOwned = _out2948;
                      _6896_recIdents = _out2949;
                      RAST._IExpr _out2950;
                      DCOMP._IOwnership _out2951;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6894_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6851_nativeToType).dtor_value), _6895_recOwned, expectedOwnership, out _out2950, out _out2951);
                      r = _out2950;
                      resultingOwnership = _out2951;
                      readIdents = _6896_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out2952;
                  DCOMP._IOwnership _out2953;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2954;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _6850_b), _6850_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out2952, out _out2953, out _out2954);
                  r = _out2952;
                  resultingOwnership = _out2953;
                  readIdents = _out2954;
                }
              }
            }
          } else if (_source323.is_Nullable) {
            DAST._IType _6897___mcc_h1254 = _source323.dtor_Nullable_a0;
            {
              RAST._IExpr _6898_recursiveGen;
              DCOMP._IOwnership _6899_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6900_recIdents;
              RAST._IExpr _out2955;
              DCOMP._IOwnership _out2956;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2957;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2955, out _out2956, out _out2957);
              _6898_recursiveGen = _out2955;
              _6899_recOwned = _out2956;
              _6900_recIdents = _out2957;
              r = _6898_recursiveGen;
              if (object.Equals(_6899_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out2958;
              DCOMP._IOwnership _out2959;
              DCOMP.COMP.FromOwnership(r, _6899_recOwned, expectedOwnership, out _out2958, out _out2959);
              r = _out2958;
              resultingOwnership = _out2959;
              readIdents = _6900_recIdents;
            }
          } else if (_source323.is_Tuple) {
            Dafny.ISequence<DAST._IType> _6901___mcc_h1256 = _source323.dtor_Tuple_a0;
            {
              RAST._IType _6902_fromTpeGen;
              RAST._IType _out2960;
              _out2960 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6902_fromTpeGen = _out2960;
              RAST._IType _6903_toTpeGen;
              RAST._IType _out2961;
              _out2961 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6903_toTpeGen = _out2961;
              RAST._IExpr _6904_recursiveGen;
              DCOMP._IOwnership _6905_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6906_recIdents;
              RAST._IExpr _out2962;
              DCOMP._IOwnership _out2963;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2964;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2962, out _out2963, out _out2964);
              _6904_recursiveGen = _out2962;
              _6905_recOwned = _out2963;
              _6906_recIdents = _out2964;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6904_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6902_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6903_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2965;
              DCOMP._IOwnership _out2966;
              DCOMP.COMP.FromOwnership(r, _6905_recOwned, expectedOwnership, out _out2965, out _out2966);
              r = _out2965;
              resultingOwnership = _out2966;
              readIdents = _6906_recIdents;
            }
          } else if (_source323.is_Array) {
            DAST._IType _6907___mcc_h1258 = _source323.dtor_element;
            BigInteger _6908___mcc_h1259 = _source323.dtor_dims;
            {
              RAST._IType _6909_fromTpeGen;
              RAST._IType _out2967;
              _out2967 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6909_fromTpeGen = _out2967;
              RAST._IType _6910_toTpeGen;
              RAST._IType _out2968;
              _out2968 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6910_toTpeGen = _out2968;
              RAST._IExpr _6911_recursiveGen;
              DCOMP._IOwnership _6912_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6913_recIdents;
              RAST._IExpr _out2969;
              DCOMP._IOwnership _out2970;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2971;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2969, out _out2970, out _out2971);
              _6911_recursiveGen = _out2969;
              _6912_recOwned = _out2970;
              _6913_recIdents = _out2971;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6911_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6909_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6910_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2972;
              DCOMP._IOwnership _out2973;
              DCOMP.COMP.FromOwnership(r, _6912_recOwned, expectedOwnership, out _out2972, out _out2973);
              r = _out2972;
              resultingOwnership = _out2973;
              readIdents = _6913_recIdents;
            }
          } else if (_source323.is_Seq) {
            DAST._IType _6914___mcc_h1262 = _source323.dtor_element;
            {
              RAST._IType _6915_fromTpeGen;
              RAST._IType _out2974;
              _out2974 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6915_fromTpeGen = _out2974;
              RAST._IType _6916_toTpeGen;
              RAST._IType _out2975;
              _out2975 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6916_toTpeGen = _out2975;
              RAST._IExpr _6917_recursiveGen;
              DCOMP._IOwnership _6918_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6919_recIdents;
              RAST._IExpr _out2976;
              DCOMP._IOwnership _out2977;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2978;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2976, out _out2977, out _out2978);
              _6917_recursiveGen = _out2976;
              _6918_recOwned = _out2977;
              _6919_recIdents = _out2978;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6917_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6915_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6916_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2979;
              DCOMP._IOwnership _out2980;
              DCOMP.COMP.FromOwnership(r, _6918_recOwned, expectedOwnership, out _out2979, out _out2980);
              r = _out2979;
              resultingOwnership = _out2980;
              readIdents = _6919_recIdents;
            }
          } else if (_source323.is_Set) {
            DAST._IType _6920___mcc_h1264 = _source323.dtor_element;
            {
              RAST._IType _6921_fromTpeGen;
              RAST._IType _out2981;
              _out2981 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6921_fromTpeGen = _out2981;
              RAST._IType _6922_toTpeGen;
              RAST._IType _out2982;
              _out2982 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6922_toTpeGen = _out2982;
              RAST._IExpr _6923_recursiveGen;
              DCOMP._IOwnership _6924_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6925_recIdents;
              RAST._IExpr _out2983;
              DCOMP._IOwnership _out2984;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2985;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2983, out _out2984, out _out2985);
              _6923_recursiveGen = _out2983;
              _6924_recOwned = _out2984;
              _6925_recIdents = _out2985;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6923_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6921_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6922_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2986;
              DCOMP._IOwnership _out2987;
              DCOMP.COMP.FromOwnership(r, _6924_recOwned, expectedOwnership, out _out2986, out _out2987);
              r = _out2986;
              resultingOwnership = _out2987;
              readIdents = _6925_recIdents;
            }
          } else if (_source323.is_Multiset) {
            DAST._IType _6926___mcc_h1266 = _source323.dtor_element;
            {
              RAST._IType _6927_fromTpeGen;
              RAST._IType _out2988;
              _out2988 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6927_fromTpeGen = _out2988;
              RAST._IType _6928_toTpeGen;
              RAST._IType _out2989;
              _out2989 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6928_toTpeGen = _out2989;
              RAST._IExpr _6929_recursiveGen;
              DCOMP._IOwnership _6930_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6931_recIdents;
              RAST._IExpr _out2990;
              DCOMP._IOwnership _out2991;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2992;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2990, out _out2991, out _out2992);
              _6929_recursiveGen = _out2990;
              _6930_recOwned = _out2991;
              _6931_recIdents = _out2992;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6929_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6927_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6928_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2993;
              DCOMP._IOwnership _out2994;
              DCOMP.COMP.FromOwnership(r, _6930_recOwned, expectedOwnership, out _out2993, out _out2994);
              r = _out2993;
              resultingOwnership = _out2994;
              readIdents = _6931_recIdents;
            }
          } else if (_source323.is_Map) {
            DAST._IType _6932___mcc_h1268 = _source323.dtor_key;
            DAST._IType _6933___mcc_h1269 = _source323.dtor_value;
            {
              RAST._IType _6934_fromTpeGen;
              RAST._IType _out2995;
              _out2995 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6934_fromTpeGen = _out2995;
              RAST._IType _6935_toTpeGen;
              RAST._IType _out2996;
              _out2996 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6935_toTpeGen = _out2996;
              RAST._IExpr _6936_recursiveGen;
              DCOMP._IOwnership _6937_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6938_recIdents;
              RAST._IExpr _out2997;
              DCOMP._IOwnership _out2998;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2999;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out2997, out _out2998, out _out2999);
              _6936_recursiveGen = _out2997;
              _6937_recOwned = _out2998;
              _6938_recIdents = _out2999;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6936_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6934_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6935_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3000;
              DCOMP._IOwnership _out3001;
              DCOMP.COMP.FromOwnership(r, _6937_recOwned, expectedOwnership, out _out3000, out _out3001);
              r = _out3000;
              resultingOwnership = _out3001;
              readIdents = _6938_recIdents;
            }
          } else if (_source323.is_SetBuilder) {
            DAST._IType _6939___mcc_h1272 = _source323.dtor_element;
            {
              RAST._IType _6940_fromTpeGen;
              RAST._IType _out3002;
              _out3002 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6940_fromTpeGen = _out3002;
              RAST._IType _6941_toTpeGen;
              RAST._IType _out3003;
              _out3003 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6941_toTpeGen = _out3003;
              RAST._IExpr _6942_recursiveGen;
              DCOMP._IOwnership _6943_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6944_recIdents;
              RAST._IExpr _out3004;
              DCOMP._IOwnership _out3005;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3006;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3004, out _out3005, out _out3006);
              _6942_recursiveGen = _out3004;
              _6943_recOwned = _out3005;
              _6944_recIdents = _out3006;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6942_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6940_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6941_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3007;
              DCOMP._IOwnership _out3008;
              DCOMP.COMP.FromOwnership(r, _6943_recOwned, expectedOwnership, out _out3007, out _out3008);
              r = _out3007;
              resultingOwnership = _out3008;
              readIdents = _6944_recIdents;
            }
          } else if (_source323.is_MapBuilder) {
            DAST._IType _6945___mcc_h1274 = _source323.dtor_key;
            DAST._IType _6946___mcc_h1275 = _source323.dtor_value;
            {
              RAST._IType _6947_fromTpeGen;
              RAST._IType _out3009;
              _out3009 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6947_fromTpeGen = _out3009;
              RAST._IType _6948_toTpeGen;
              RAST._IType _out3010;
              _out3010 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6948_toTpeGen = _out3010;
              RAST._IExpr _6949_recursiveGen;
              DCOMP._IOwnership _6950_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6951_recIdents;
              RAST._IExpr _out3011;
              DCOMP._IOwnership _out3012;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3013;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3011, out _out3012, out _out3013);
              _6949_recursiveGen = _out3011;
              _6950_recOwned = _out3012;
              _6951_recIdents = _out3013;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6949_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6947_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6948_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3014;
              DCOMP._IOwnership _out3015;
              DCOMP.COMP.FromOwnership(r, _6950_recOwned, expectedOwnership, out _out3014, out _out3015);
              r = _out3014;
              resultingOwnership = _out3015;
              readIdents = _6951_recIdents;
            }
          } else if (_source323.is_Arrow) {
            Dafny.ISequence<DAST._IType> _6952___mcc_h1278 = _source323.dtor_args;
            DAST._IType _6953___mcc_h1279 = _source323.dtor_result;
            {
              RAST._IType _6954_fromTpeGen;
              RAST._IType _out3016;
              _out3016 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6954_fromTpeGen = _out3016;
              RAST._IType _6955_toTpeGen;
              RAST._IType _out3017;
              _out3017 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6955_toTpeGen = _out3017;
              RAST._IExpr _6956_recursiveGen;
              DCOMP._IOwnership _6957_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6958_recIdents;
              RAST._IExpr _out3018;
              DCOMP._IOwnership _out3019;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3020;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3018, out _out3019, out _out3020);
              _6956_recursiveGen = _out3018;
              _6957_recOwned = _out3019;
              _6958_recIdents = _out3020;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6956_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6954_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6955_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3021;
              DCOMP._IOwnership _out3022;
              DCOMP.COMP.FromOwnership(r, _6957_recOwned, expectedOwnership, out _out3021, out _out3022);
              r = _out3021;
              resultingOwnership = _out3022;
              readIdents = _6958_recIdents;
            }
          } else if (_source323.is_Primitive) {
            DAST._IPrimitive _6959___mcc_h1282 = _source323.dtor_Primitive_a0;
            DAST._IPrimitive _source328 = _6959___mcc_h1282;
            if (_source328.is_Int) {
              {
                RAST._IType _6960_rhsType;
                RAST._IType _out3023;
                _out3023 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6960_rhsType = _out3023;
                RAST._IExpr _6961_recursiveGen;
                DCOMP._IOwnership _6962___v102;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6963_recIdents;
                RAST._IExpr _out3024;
                DCOMP._IOwnership _out3025;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3026;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3024, out _out3025, out _out3026);
                _6961_recursiveGen = _out3024;
                _6962___v102 = _out3025;
                _6963_recIdents = _out3026;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_6961_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")}")));
                RAST._IExpr _out3027;
                DCOMP._IOwnership _out3028;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3027, out _out3028);
                r = _out3027;
                resultingOwnership = _out3028;
                readIdents = _6963_recIdents;
              }
            } else if (_source328.is_Real) {
              {
                RAST._IType _6964_fromTpeGen;
                RAST._IType _out3029;
                _out3029 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6964_fromTpeGen = _out3029;
                RAST._IType _6965_toTpeGen;
                RAST._IType _out3030;
                _out3030 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6965_toTpeGen = _out3030;
                RAST._IExpr _6966_recursiveGen;
                DCOMP._IOwnership _6967_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6968_recIdents;
                RAST._IExpr _out3031;
                DCOMP._IOwnership _out3032;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3033;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3031, out _out3032, out _out3033);
                _6966_recursiveGen = _out3031;
                _6967_recOwned = _out3032;
                _6968_recIdents = _out3033;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6966_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6964_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6965_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3034;
                DCOMP._IOwnership _out3035;
                DCOMP.COMP.FromOwnership(r, _6967_recOwned, expectedOwnership, out _out3034, out _out3035);
                r = _out3034;
                resultingOwnership = _out3035;
                readIdents = _6968_recIdents;
              }
            } else if (_source328.is_String) {
              {
                RAST._IType _6969_fromTpeGen;
                RAST._IType _out3036;
                _out3036 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6969_fromTpeGen = _out3036;
                RAST._IType _6970_toTpeGen;
                RAST._IType _out3037;
                _out3037 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6970_toTpeGen = _out3037;
                RAST._IExpr _6971_recursiveGen;
                DCOMP._IOwnership _6972_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6973_recIdents;
                RAST._IExpr _out3038;
                DCOMP._IOwnership _out3039;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3040;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3038, out _out3039, out _out3040);
                _6971_recursiveGen = _out3038;
                _6972_recOwned = _out3039;
                _6973_recIdents = _out3040;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6971_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6969_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6970_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3041;
                DCOMP._IOwnership _out3042;
                DCOMP.COMP.FromOwnership(r, _6972_recOwned, expectedOwnership, out _out3041, out _out3042);
                r = _out3041;
                resultingOwnership = _out3042;
                readIdents = _6973_recIdents;
              }
            } else if (_source328.is_Bool) {
              {
                RAST._IType _6974_fromTpeGen;
                RAST._IType _out3043;
                _out3043 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6974_fromTpeGen = _out3043;
                RAST._IType _6975_toTpeGen;
                RAST._IType _out3044;
                _out3044 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6975_toTpeGen = _out3044;
                RAST._IExpr _6976_recursiveGen;
                DCOMP._IOwnership _6977_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6978_recIdents;
                RAST._IExpr _out3045;
                DCOMP._IOwnership _out3046;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3047;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3045, out _out3046, out _out3047);
                _6976_recursiveGen = _out3045;
                _6977_recOwned = _out3046;
                _6978_recIdents = _out3047;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6976_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6974_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6975_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3048;
                DCOMP._IOwnership _out3049;
                DCOMP.COMP.FromOwnership(r, _6977_recOwned, expectedOwnership, out _out3048, out _out3049);
                r = _out3048;
                resultingOwnership = _out3049;
                readIdents = _6978_recIdents;
              }
            } else {
              {
                RAST._IType _6979_fromTpeGen;
                RAST._IType _out3050;
                _out3050 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _6979_fromTpeGen = _out3050;
                RAST._IType _6980_toTpeGen;
                RAST._IType _out3051;
                _out3051 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _6980_toTpeGen = _out3051;
                RAST._IExpr _6981_recursiveGen;
                DCOMP._IOwnership _6982_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6983_recIdents;
                RAST._IExpr _out3052;
                DCOMP._IOwnership _out3053;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3054;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3052, out _out3053, out _out3054);
                _6981_recursiveGen = _out3052;
                _6982_recOwned = _out3053;
                _6983_recIdents = _out3054;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6981_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6979_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6980_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3055;
                DCOMP._IOwnership _out3056;
                DCOMP.COMP.FromOwnership(r, _6982_recOwned, expectedOwnership, out _out3055, out _out3056);
                r = _out3055;
                resultingOwnership = _out3056;
                readIdents = _6983_recIdents;
              }
            }
          } else if (_source323.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _6984___mcc_h1284 = _source323.dtor_Passthrough_a0;
            {
              RAST._IExpr _6985_recursiveGen;
              DCOMP._IOwnership _6986___v107;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6987_recIdents;
              RAST._IExpr _out3057;
              DCOMP._IOwnership _out3058;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3059;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3057, out _out3058, out _out3059);
              _6985_recursiveGen = _out3057;
              _6986___v107 = _out3058;
              _6987_recIdents = _out3059;
              RAST._IType _6988_toTpeGen;
              RAST._IType _out3060;
              _out3060 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6988_toTpeGen = _out3060;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_6985_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_6988_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out3061;
              DCOMP._IOwnership _out3062;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3061, out _out3062);
              r = _out3061;
              resultingOwnership = _out3062;
              readIdents = _6987_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _6989___mcc_h1286 = _source323.dtor_TypeArg_a0;
            {
              RAST._IType _6990_fromTpeGen;
              RAST._IType _out3063;
              _out3063 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _6990_fromTpeGen = _out3063;
              RAST._IType _6991_toTpeGen;
              RAST._IType _out3064;
              _out3064 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _6991_toTpeGen = _out3064;
              RAST._IExpr _6992_recursiveGen;
              DCOMP._IOwnership _6993_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6994_recIdents;
              RAST._IExpr _out3065;
              DCOMP._IOwnership _out3066;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3067;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3065, out _out3066, out _out3067);
              _6992_recursiveGen = _out3065;
              _6993_recOwned = _out3066;
              _6994_recIdents = _out3067;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6992_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6990_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6991_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3068;
              DCOMP._IOwnership _out3069;
              DCOMP.COMP.FromOwnership(r, _6993_recOwned, expectedOwnership, out _out3068, out _out3069);
              r = _out3068;
              resultingOwnership = _out3069;
              readIdents = _6994_recIdents;
            }
          }
        } else {
          Dafny.ISequence<Dafny.Rune> _6995___mcc_h1288 = _source210.dtor_TypeArg_a0;
          DAST._IType _source329 = _3718___mcc_h1;
          if (_source329.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6996___mcc_h1292 = _source329.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _6997___mcc_h1293 = _source329.dtor_typeArgs;
            DAST._IResolvedType _6998___mcc_h1294 = _source329.dtor_resolved;
            DAST._IResolvedType _source330 = _6998___mcc_h1294;
            if (_source330.is_AllocatedDatatype) {
              DAST._IDatatypeType _6999___mcc_h1298 = _source330.dtor_datatypeType;
              {
                RAST._IType _7000_fromTpeGen;
                RAST._IType _out3070;
                _out3070 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _7000_fromTpeGen = _out3070;
                RAST._IType _7001_toTpeGen;
                RAST._IType _out3071;
                _out3071 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _7001_toTpeGen = _out3071;
                RAST._IExpr _7002_recursiveGen;
                DCOMP._IOwnership _7003_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7004_recIdents;
                RAST._IExpr _out3072;
                DCOMP._IOwnership _out3073;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3074;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3072, out _out3073, out _out3074);
                _7002_recursiveGen = _out3072;
                _7003_recOwned = _out3073;
                _7004_recIdents = _out3074;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7002_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7000_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7001_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3075;
                DCOMP._IOwnership _out3076;
                DCOMP.COMP.FromOwnership(r, _7003_recOwned, expectedOwnership, out _out3075, out _out3076);
                r = _out3075;
                resultingOwnership = _out3076;
                readIdents = _7004_recIdents;
              }
            } else if (_source330.is_Datatype) {
              DAST._IDatatypeType _7005___mcc_h1300 = _source330.dtor_datatypeType;
              {
                RAST._IType _7006_fromTpeGen;
                RAST._IType _out3077;
                _out3077 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _7006_fromTpeGen = _out3077;
                RAST._IType _7007_toTpeGen;
                RAST._IType _out3078;
                _out3078 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _7007_toTpeGen = _out3078;
                RAST._IExpr _7008_recursiveGen;
                DCOMP._IOwnership _7009_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7010_recIdents;
                RAST._IExpr _out3079;
                DCOMP._IOwnership _out3080;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3081;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3079, out _out3080, out _out3081);
                _7008_recursiveGen = _out3079;
                _7009_recOwned = _out3080;
                _7010_recIdents = _out3081;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7008_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7006_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7007_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3082;
                DCOMP._IOwnership _out3083;
                DCOMP.COMP.FromOwnership(r, _7009_recOwned, expectedOwnership, out _out3082, out _out3083);
                r = _out3082;
                resultingOwnership = _out3083;
                readIdents = _7010_recIdents;
              }
            } else if (_source330.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7011___mcc_h1302 = _source330.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _7012___mcc_h1303 = _source330.dtor_attributes;
              {
                RAST._IType _7013_fromTpeGen;
                RAST._IType _out3084;
                _out3084 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
                _7013_fromTpeGen = _out3084;
                RAST._IType _7014_toTpeGen;
                RAST._IType _out3085;
                _out3085 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                _7014_toTpeGen = _out3085;
                RAST._IExpr _7015_recursiveGen;
                DCOMP._IOwnership _7016_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7017_recIdents;
                RAST._IExpr _out3086;
                DCOMP._IOwnership _out3087;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3088;
                DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3086, out _out3087, out _out3088);
                _7015_recursiveGen = _out3086;
                _7016_recOwned = _out3087;
                _7017_recIdents = _out3088;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7015_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7013_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7014_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3089;
                DCOMP._IOwnership _out3090;
                DCOMP.COMP.FromOwnership(r, _7016_recOwned, expectedOwnership, out _out3089, out _out3090);
                r = _out3089;
                resultingOwnership = _out3090;
                readIdents = _7017_recIdents;
              }
            } else {
              DAST._IType _7018___mcc_h1306 = _source330.dtor_baseType;
              DAST._INewtypeRange _7019___mcc_h1307 = _source330.dtor_range;
              bool _7020___mcc_h1308 = _source330.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _7021___mcc_h1309 = _source330.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _7022_attributes = _7021___mcc_h1309;
              bool _7023_erase = _7020___mcc_h1308;
              DAST._INewtypeRange _7024_range = _7019___mcc_h1307;
              DAST._IType _7025_b = _7018___mcc_h1306;
              {
                Std.Wrappers._IOption<RAST._IType> _7026_nativeToType;
                _7026_nativeToType = DCOMP.COMP.NewtypeToRustType(_7025_b, _7024_range);
                if (object.Equals(_3712_fromTpe, _7025_b)) {
                  RAST._IExpr _7027_recursiveGen;
                  DCOMP._IOwnership _7028_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7029_recIdents;
                  RAST._IExpr _out3091;
                  DCOMP._IOwnership _out3092;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3093;
                  DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3091, out _out3092, out _out3093);
                  _7027_recursiveGen = _out3091;
                  _7028_recOwned = _out3092;
                  _7029_recIdents = _out3093;
                  readIdents = _7029_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source331 = _7026_nativeToType;
                  if (_source331.is_None) {
                    if (_7023_erase) {
                      r = _7027_recursiveGen;
                    } else {
                      RAST._IType _7030_rhsType;
                      RAST._IType _out3094;
                      _out3094 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
                      _7030_rhsType = _out3094;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_7030_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_7027_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out3095;
                    DCOMP._IOwnership _out3096;
                    DCOMP.COMP.FromOwnership(r, _7028_recOwned, expectedOwnership, out _out3095, out _out3096);
                    r = _out3095;
                    resultingOwnership = _out3096;
                  } else {
                    RAST._IType _7031___mcc_h2446 = _source331.dtor_value;
                    RAST._IType _7032_v = _7031___mcc_h2446;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_7027_recursiveGen, RAST.Expr.create_ExprFromType(_7032_v)));
                    RAST._IExpr _out3097;
                    DCOMP._IOwnership _out3098;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3097, out _out3098);
                    r = _out3097;
                    resultingOwnership = _out3098;
                  }
                } else {
                  if ((_7026_nativeToType).is_Some) {
                    DAST._IType _source332 = _3712_fromTpe;
                    if (_source332.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7033___mcc_h2447 = _source332.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _7034___mcc_h2448 = _source332.dtor_typeArgs;
                      DAST._IResolvedType _7035___mcc_h2449 = _source332.dtor_resolved;
                      DAST._IResolvedType _source333 = _7035___mcc_h2449;
                      if (_source333.is_AllocatedDatatype) {
                        DAST._IDatatypeType _7036___mcc_h2453 = _source333.dtor_datatypeType;
                      } else if (_source333.is_Datatype) {
                        DAST._IDatatypeType _7037___mcc_h2455 = _source333.dtor_datatypeType;
                      } else if (_source333.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7038___mcc_h2457 = _source333.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _7039___mcc_h2458 = _source333.dtor_attributes;
                      } else {
                        DAST._IType _7040___mcc_h2461 = _source333.dtor_baseType;
                        DAST._INewtypeRange _7041___mcc_h2462 = _source333.dtor_range;
                        bool _7042___mcc_h2463 = _source333.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _7043___mcc_h2464 = _source333.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _7044_attributes0 = _7043___mcc_h2464;
                        bool _7045_erase0 = _7042___mcc_h2463;
                        DAST._INewtypeRange _7046_range0 = _7041___mcc_h2462;
                        DAST._IType _7047_b0 = _7040___mcc_h2461;
                        {
                          Std.Wrappers._IOption<RAST._IType> _7048_nativeFromType;
                          _7048_nativeFromType = DCOMP.COMP.NewtypeToRustType(_7047_b0, _7046_range0);
                          if ((_7048_nativeFromType).is_Some) {
                            RAST._IExpr _7049_recursiveGen;
                            DCOMP._IOwnership _7050_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7051_recIdents;
                            RAST._IExpr _out3099;
                            DCOMP._IOwnership _out3100;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3101;
                            DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3099, out _out3100, out _out3101);
                            _7049_recursiveGen = _out3099;
                            _7050_recOwned = _out3100;
                            _7051_recIdents = _out3101;
                            RAST._IExpr _out3102;
                            DCOMP._IOwnership _out3103;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_7049_recursiveGen, (_7026_nativeToType).dtor_value), _7050_recOwned, expectedOwnership, out _out3102, out _out3103);
                            r = _out3102;
                            resultingOwnership = _out3103;
                            readIdents = _7051_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source332.is_Nullable) {
                      DAST._IType _7052___mcc_h2469 = _source332.dtor_Nullable_a0;
                    } else if (_source332.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _7053___mcc_h2471 = _source332.dtor_Tuple_a0;
                    } else if (_source332.is_Array) {
                      DAST._IType _7054___mcc_h2473 = _source332.dtor_element;
                      BigInteger _7055___mcc_h2474 = _source332.dtor_dims;
                    } else if (_source332.is_Seq) {
                      DAST._IType _7056___mcc_h2477 = _source332.dtor_element;
                    } else if (_source332.is_Set) {
                      DAST._IType _7057___mcc_h2479 = _source332.dtor_element;
                    } else if (_source332.is_Multiset) {
                      DAST._IType _7058___mcc_h2481 = _source332.dtor_element;
                    } else if (_source332.is_Map) {
                      DAST._IType _7059___mcc_h2483 = _source332.dtor_key;
                      DAST._IType _7060___mcc_h2484 = _source332.dtor_value;
                    } else if (_source332.is_SetBuilder) {
                      DAST._IType _7061___mcc_h2487 = _source332.dtor_element;
                    } else if (_source332.is_MapBuilder) {
                      DAST._IType _7062___mcc_h2489 = _source332.dtor_key;
                      DAST._IType _7063___mcc_h2490 = _source332.dtor_value;
                    } else if (_source332.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _7064___mcc_h2493 = _source332.dtor_args;
                      DAST._IType _7065___mcc_h2494 = _source332.dtor_result;
                    } else if (_source332.is_Primitive) {
                      DAST._IPrimitive _7066___mcc_h2497 = _source332.dtor_Primitive_a0;
                    } else if (_source332.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _7067___mcc_h2499 = _source332.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _7068___mcc_h2501 = _source332.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3712_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _7069_recursiveGen;
                      DCOMP._IOwnership _7070_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7071_recIdents;
                      RAST._IExpr _out3104;
                      DCOMP._IOwnership _out3105;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3106;
                      DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3104, out _out3105, out _out3106);
                      _7069_recursiveGen = _out3104;
                      _7070_recOwned = _out3105;
                      _7071_recIdents = _out3106;
                      RAST._IExpr _out3107;
                      DCOMP._IOwnership _out3108;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_7069_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_7026_nativeToType).dtor_value), _7070_recOwned, expectedOwnership, out _out3107, out _out3108);
                      r = _out3107;
                      resultingOwnership = _out3108;
                      readIdents = _7071_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out3109;
                  DCOMP._IOwnership _out3110;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3111;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3711_expr, _3712_fromTpe, _7025_b), _7025_b, _3713_toTpe), selfIdent, env, expectedOwnership, out _out3109, out _out3110, out _out3111);
                  r = _out3109;
                  resultingOwnership = _out3110;
                  readIdents = _out3111;
                }
              }
            }
          } else if (_source329.is_Nullable) {
            DAST._IType _7072___mcc_h1314 = _source329.dtor_Nullable_a0;
            {
              RAST._IExpr _7073_recursiveGen;
              DCOMP._IOwnership _7074_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7075_recIdents;
              RAST._IExpr _out3112;
              DCOMP._IOwnership _out3113;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3114;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3112, out _out3113, out _out3114);
              _7073_recursiveGen = _out3112;
              _7074_recOwned = _out3113;
              _7075_recIdents = _out3114;
              r = _7073_recursiveGen;
              if (object.Equals(_7074_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out3115;
              DCOMP._IOwnership _out3116;
              DCOMP.COMP.FromOwnership(r, _7074_recOwned, expectedOwnership, out _out3115, out _out3116);
              r = _out3115;
              resultingOwnership = _out3116;
              readIdents = _7075_recIdents;
            }
          } else if (_source329.is_Tuple) {
            Dafny.ISequence<DAST._IType> _7076___mcc_h1316 = _source329.dtor_Tuple_a0;
            {
              RAST._IType _7077_fromTpeGen;
              RAST._IType _out3117;
              _out3117 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7077_fromTpeGen = _out3117;
              RAST._IType _7078_toTpeGen;
              RAST._IType _out3118;
              _out3118 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7078_toTpeGen = _out3118;
              RAST._IExpr _7079_recursiveGen;
              DCOMP._IOwnership _7080_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7081_recIdents;
              RAST._IExpr _out3119;
              DCOMP._IOwnership _out3120;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3121;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3119, out _out3120, out _out3121);
              _7079_recursiveGen = _out3119;
              _7080_recOwned = _out3120;
              _7081_recIdents = _out3121;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7079_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7077_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7078_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3122;
              DCOMP._IOwnership _out3123;
              DCOMP.COMP.FromOwnership(r, _7080_recOwned, expectedOwnership, out _out3122, out _out3123);
              r = _out3122;
              resultingOwnership = _out3123;
              readIdents = _7081_recIdents;
            }
          } else if (_source329.is_Array) {
            DAST._IType _7082___mcc_h1318 = _source329.dtor_element;
            BigInteger _7083___mcc_h1319 = _source329.dtor_dims;
            {
              RAST._IType _7084_fromTpeGen;
              RAST._IType _out3124;
              _out3124 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7084_fromTpeGen = _out3124;
              RAST._IType _7085_toTpeGen;
              RAST._IType _out3125;
              _out3125 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7085_toTpeGen = _out3125;
              RAST._IExpr _7086_recursiveGen;
              DCOMP._IOwnership _7087_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7088_recIdents;
              RAST._IExpr _out3126;
              DCOMP._IOwnership _out3127;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3128;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3126, out _out3127, out _out3128);
              _7086_recursiveGen = _out3126;
              _7087_recOwned = _out3127;
              _7088_recIdents = _out3128;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7086_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7084_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7085_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3129;
              DCOMP._IOwnership _out3130;
              DCOMP.COMP.FromOwnership(r, _7087_recOwned, expectedOwnership, out _out3129, out _out3130);
              r = _out3129;
              resultingOwnership = _out3130;
              readIdents = _7088_recIdents;
            }
          } else if (_source329.is_Seq) {
            DAST._IType _7089___mcc_h1322 = _source329.dtor_element;
            {
              RAST._IType _7090_fromTpeGen;
              RAST._IType _out3131;
              _out3131 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7090_fromTpeGen = _out3131;
              RAST._IType _7091_toTpeGen;
              RAST._IType _out3132;
              _out3132 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7091_toTpeGen = _out3132;
              RAST._IExpr _7092_recursiveGen;
              DCOMP._IOwnership _7093_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7094_recIdents;
              RAST._IExpr _out3133;
              DCOMP._IOwnership _out3134;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3135;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3133, out _out3134, out _out3135);
              _7092_recursiveGen = _out3133;
              _7093_recOwned = _out3134;
              _7094_recIdents = _out3135;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7092_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7090_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7091_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3136;
              DCOMP._IOwnership _out3137;
              DCOMP.COMP.FromOwnership(r, _7093_recOwned, expectedOwnership, out _out3136, out _out3137);
              r = _out3136;
              resultingOwnership = _out3137;
              readIdents = _7094_recIdents;
            }
          } else if (_source329.is_Set) {
            DAST._IType _7095___mcc_h1324 = _source329.dtor_element;
            {
              RAST._IType _7096_fromTpeGen;
              RAST._IType _out3138;
              _out3138 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7096_fromTpeGen = _out3138;
              RAST._IType _7097_toTpeGen;
              RAST._IType _out3139;
              _out3139 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7097_toTpeGen = _out3139;
              RAST._IExpr _7098_recursiveGen;
              DCOMP._IOwnership _7099_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7100_recIdents;
              RAST._IExpr _out3140;
              DCOMP._IOwnership _out3141;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3142;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3140, out _out3141, out _out3142);
              _7098_recursiveGen = _out3140;
              _7099_recOwned = _out3141;
              _7100_recIdents = _out3142;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7098_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7096_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7097_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3143;
              DCOMP._IOwnership _out3144;
              DCOMP.COMP.FromOwnership(r, _7099_recOwned, expectedOwnership, out _out3143, out _out3144);
              r = _out3143;
              resultingOwnership = _out3144;
              readIdents = _7100_recIdents;
            }
          } else if (_source329.is_Multiset) {
            DAST._IType _7101___mcc_h1326 = _source329.dtor_element;
            {
              RAST._IType _7102_fromTpeGen;
              RAST._IType _out3145;
              _out3145 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7102_fromTpeGen = _out3145;
              RAST._IType _7103_toTpeGen;
              RAST._IType _out3146;
              _out3146 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7103_toTpeGen = _out3146;
              RAST._IExpr _7104_recursiveGen;
              DCOMP._IOwnership _7105_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7106_recIdents;
              RAST._IExpr _out3147;
              DCOMP._IOwnership _out3148;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3149;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3147, out _out3148, out _out3149);
              _7104_recursiveGen = _out3147;
              _7105_recOwned = _out3148;
              _7106_recIdents = _out3149;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7104_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7102_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7103_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3150;
              DCOMP._IOwnership _out3151;
              DCOMP.COMP.FromOwnership(r, _7105_recOwned, expectedOwnership, out _out3150, out _out3151);
              r = _out3150;
              resultingOwnership = _out3151;
              readIdents = _7106_recIdents;
            }
          } else if (_source329.is_Map) {
            DAST._IType _7107___mcc_h1328 = _source329.dtor_key;
            DAST._IType _7108___mcc_h1329 = _source329.dtor_value;
            {
              RAST._IType _7109_fromTpeGen;
              RAST._IType _out3152;
              _out3152 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7109_fromTpeGen = _out3152;
              RAST._IType _7110_toTpeGen;
              RAST._IType _out3153;
              _out3153 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7110_toTpeGen = _out3153;
              RAST._IExpr _7111_recursiveGen;
              DCOMP._IOwnership _7112_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7113_recIdents;
              RAST._IExpr _out3154;
              DCOMP._IOwnership _out3155;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3156;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3154, out _out3155, out _out3156);
              _7111_recursiveGen = _out3154;
              _7112_recOwned = _out3155;
              _7113_recIdents = _out3156;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7111_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7109_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7110_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3157;
              DCOMP._IOwnership _out3158;
              DCOMP.COMP.FromOwnership(r, _7112_recOwned, expectedOwnership, out _out3157, out _out3158);
              r = _out3157;
              resultingOwnership = _out3158;
              readIdents = _7113_recIdents;
            }
          } else if (_source329.is_SetBuilder) {
            DAST._IType _7114___mcc_h1332 = _source329.dtor_element;
            {
              RAST._IType _7115_fromTpeGen;
              RAST._IType _out3159;
              _out3159 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7115_fromTpeGen = _out3159;
              RAST._IType _7116_toTpeGen;
              RAST._IType _out3160;
              _out3160 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7116_toTpeGen = _out3160;
              RAST._IExpr _7117_recursiveGen;
              DCOMP._IOwnership _7118_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7119_recIdents;
              RAST._IExpr _out3161;
              DCOMP._IOwnership _out3162;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3163;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3161, out _out3162, out _out3163);
              _7117_recursiveGen = _out3161;
              _7118_recOwned = _out3162;
              _7119_recIdents = _out3163;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7117_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7115_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7116_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3164;
              DCOMP._IOwnership _out3165;
              DCOMP.COMP.FromOwnership(r, _7118_recOwned, expectedOwnership, out _out3164, out _out3165);
              r = _out3164;
              resultingOwnership = _out3165;
              readIdents = _7119_recIdents;
            }
          } else if (_source329.is_MapBuilder) {
            DAST._IType _7120___mcc_h1334 = _source329.dtor_key;
            DAST._IType _7121___mcc_h1335 = _source329.dtor_value;
            {
              RAST._IType _7122_fromTpeGen;
              RAST._IType _out3166;
              _out3166 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7122_fromTpeGen = _out3166;
              RAST._IType _7123_toTpeGen;
              RAST._IType _out3167;
              _out3167 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7123_toTpeGen = _out3167;
              RAST._IExpr _7124_recursiveGen;
              DCOMP._IOwnership _7125_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7126_recIdents;
              RAST._IExpr _out3168;
              DCOMP._IOwnership _out3169;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3170;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3168, out _out3169, out _out3170);
              _7124_recursiveGen = _out3168;
              _7125_recOwned = _out3169;
              _7126_recIdents = _out3170;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7124_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7122_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7123_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3171;
              DCOMP._IOwnership _out3172;
              DCOMP.COMP.FromOwnership(r, _7125_recOwned, expectedOwnership, out _out3171, out _out3172);
              r = _out3171;
              resultingOwnership = _out3172;
              readIdents = _7126_recIdents;
            }
          } else if (_source329.is_Arrow) {
            Dafny.ISequence<DAST._IType> _7127___mcc_h1338 = _source329.dtor_args;
            DAST._IType _7128___mcc_h1339 = _source329.dtor_result;
            {
              RAST._IType _7129_fromTpeGen;
              RAST._IType _out3173;
              _out3173 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7129_fromTpeGen = _out3173;
              RAST._IType _7130_toTpeGen;
              RAST._IType _out3174;
              _out3174 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7130_toTpeGen = _out3174;
              RAST._IExpr _7131_recursiveGen;
              DCOMP._IOwnership _7132_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7133_recIdents;
              RAST._IExpr _out3175;
              DCOMP._IOwnership _out3176;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3177;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3175, out _out3176, out _out3177);
              _7131_recursiveGen = _out3175;
              _7132_recOwned = _out3176;
              _7133_recIdents = _out3177;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7131_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7129_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7130_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3178;
              DCOMP._IOwnership _out3179;
              DCOMP.COMP.FromOwnership(r, _7132_recOwned, expectedOwnership, out _out3178, out _out3179);
              r = _out3178;
              resultingOwnership = _out3179;
              readIdents = _7133_recIdents;
            }
          } else if (_source329.is_Primitive) {
            DAST._IPrimitive _7134___mcc_h1342 = _source329.dtor_Primitive_a0;
            {
              RAST._IType _7135_fromTpeGen;
              RAST._IType _out3180;
              _out3180 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7135_fromTpeGen = _out3180;
              RAST._IType _7136_toTpeGen;
              RAST._IType _out3181;
              _out3181 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7136_toTpeGen = _out3181;
              RAST._IExpr _7137_recursiveGen;
              DCOMP._IOwnership _7138_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7139_recIdents;
              RAST._IExpr _out3182;
              DCOMP._IOwnership _out3183;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3184;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3182, out _out3183, out _out3184);
              _7137_recursiveGen = _out3182;
              _7138_recOwned = _out3183;
              _7139_recIdents = _out3184;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7137_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7135_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7136_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3185;
              DCOMP._IOwnership _out3186;
              DCOMP.COMP.FromOwnership(r, _7138_recOwned, expectedOwnership, out _out3185, out _out3186);
              r = _out3185;
              resultingOwnership = _out3186;
              readIdents = _7139_recIdents;
            }
          } else if (_source329.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _7140___mcc_h1344 = _source329.dtor_Passthrough_a0;
            {
              RAST._IType _7141_fromTpeGen;
              RAST._IType _out3187;
              _out3187 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7141_fromTpeGen = _out3187;
              RAST._IType _7142_toTpeGen;
              RAST._IType _out3188;
              _out3188 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7142_toTpeGen = _out3188;
              RAST._IExpr _7143_recursiveGen;
              DCOMP._IOwnership _7144_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7145_recIdents;
              RAST._IExpr _out3189;
              DCOMP._IOwnership _out3190;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3191;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3189, out _out3190, out _out3191);
              _7143_recursiveGen = _out3189;
              _7144_recOwned = _out3190;
              _7145_recIdents = _out3191;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7143_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7141_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7142_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3192;
              DCOMP._IOwnership _out3193;
              DCOMP.COMP.FromOwnership(r, _7144_recOwned, expectedOwnership, out _out3192, out _out3193);
              r = _out3192;
              resultingOwnership = _out3193;
              readIdents = _7145_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _7146___mcc_h1346 = _source329.dtor_TypeArg_a0;
            {
              RAST._IType _7147_fromTpeGen;
              RAST._IType _out3194;
              _out3194 = DCOMP.COMP.GenType(_3712_fromTpe, true, false);
              _7147_fromTpeGen = _out3194;
              RAST._IType _7148_toTpeGen;
              RAST._IType _out3195;
              _out3195 = DCOMP.COMP.GenType(_3713_toTpe, true, false);
              _7148_toTpeGen = _out3195;
              RAST._IExpr _7149_recursiveGen;
              DCOMP._IOwnership _7150_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7151_recIdents;
              RAST._IExpr _out3196;
              DCOMP._IOwnership _out3197;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3198;
              DCOMP.COMP.GenExpr(_3711_expr, selfIdent, env, expectedOwnership, out _out3196, out _out3197, out _out3198);
              _7149_recursiveGen = _out3196;
              _7150_recOwned = _out3197;
              _7151_recIdents = _out3198;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7149_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7147_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7148_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3199;
              DCOMP._IOwnership _out3200;
              DCOMP.COMP.FromOwnership(r, _7150_recOwned, expectedOwnership, out _out3199, out _out3200);
              r = _out3199;
              resultingOwnership = _out3200;
              readIdents = _7151_recIdents;
            }
          }
        }
      }
      return ;
    }
    public static void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source334 = e;
      if (_source334.is_Literal) {
        DAST._ILiteral _7152___mcc_h0 = _source334.dtor_Literal_a0;
        RAST._IExpr _out3201;
        DCOMP._IOwnership _out3202;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3203;
        DCOMP.COMP.GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out3201, out _out3202, out _out3203);
        r = _out3201;
        resultingOwnership = _out3202;
        readIdents = _out3203;
      } else if (_source334.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _7153___mcc_h1 = _source334.dtor_Ident_a0;
        Dafny.ISequence<Dafny.Rune> _7154_name = _7153___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _7155_rName;
          _7155_rName = DCOMP.__default.escapeIdent(_7154_name);
          r = RAST.Expr.create_Identifier(_7155_rName);
          Std.Wrappers._IOption<RAST._IType> _7156_tpe;
          _7156_tpe = (env).GetType(_7155_rName);
          Std.Wrappers._IOption<RAST._IType> _7157_placeboOpt;
          _7157_placeboOpt = (((_7156_tpe).is_Some) ? (((_7156_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
          bool _7158_currentlyBorrowed;
          _7158_currentlyBorrowed = (env).IsBorrowed(_7154_name);
          bool _7159_noNeedOfClone;
          _7159_noNeedOfClone = (env).HasCopySemantics(_7154_name);
          if ((_7157_placeboOpt).is_Some) {
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            _7158_currentlyBorrowed = false;
            _7159_noNeedOfClone = true;
          }
          if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowedMut())) {
            r = RAST.__default.BorrowMut(r);
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
            if (!(_7159_noNeedOfClone)) {
              r = RAST.__default.Clone(r);
            }
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else if (_7158_currentlyBorrowed) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          } else {
            r = RAST.__default.Borrow(r);
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7154_name);
          return ;
        }
      } else if (_source334.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7160___mcc_h2 = _source334.dtor_Companion_a0;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7161_path = _7160___mcc_h2;
        {
          RAST._IExpr _out3204;
          _out3204 = DCOMP.COMP.GenPathExpr(_7161_path);
          r = _out3204;
          RAST._IExpr _out3205;
          DCOMP._IOwnership _out3206;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3205, out _out3206);
          r = _out3205;
          resultingOwnership = _out3206;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source334.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _7162___mcc_h3 = _source334.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IExpression> _7163_values = _7162___mcc_h3;
        {
          Dafny.ISequence<Dafny.Rune> _7164_s;
          _7164_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(");
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7165_i;
          _7165_i = BigInteger.Zero;
          while ((_7165_i) < (new BigInteger((_7163_values).Count))) {
            if ((_7165_i).Sign == 1) {
              _7164_s = Dafny.Sequence<Dafny.Rune>.Concat(_7164_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
            }
            RAST._IExpr _7166_recursiveGen;
            DCOMP._IOwnership _7167___v110;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7168_recIdents;
            RAST._IExpr _out3207;
            DCOMP._IOwnership _out3208;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3209;
            DCOMP.COMP.GenExpr((_7163_values).Select(_7165_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3207, out _out3208, out _out3209);
            _7166_recursiveGen = _out3207;
            _7167___v110 = _out3208;
            _7168_recIdents = _out3209;
            _7164_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7164_s, (_7166_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7168_recIdents);
            _7165_i = (_7165_i) + (BigInteger.One);
          }
          _7164_s = Dafny.Sequence<Dafny.Rune>.Concat(_7164_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          r = RAST.Expr.create_RawExpr(_7164_s);
          RAST._IExpr _out3210;
          DCOMP._IOwnership _out3211;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3210, out _out3211);
          r = _out3210;
          resultingOwnership = _out3211;
          return ;
        }
      } else if (_source334.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7169___mcc_h4 = _source334.dtor_path;
        Dafny.ISequence<DAST._IType> _7170___mcc_h5 = _source334.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _7171___mcc_h6 = _source334.dtor_args;
        Dafny.ISequence<DAST._IExpression> _7172_args = _7171___mcc_h6;
        Dafny.ISequence<DAST._IType> _7173_typeArgs = _7170___mcc_h5;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7174_path = _7169___mcc_h4;
        {
          RAST._IExpr _out3212;
          _out3212 = DCOMP.COMP.GenPathExpr(_7174_path);
          r = _out3212;
          if ((new BigInteger((_7173_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _7175_typeExprs;
            _7175_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi13 = new BigInteger((_7173_typeArgs).Count);
            for (BigInteger _7176_i = BigInteger.Zero; _7176_i < _hi13; _7176_i++) {
              RAST._IType _7177_typeExpr;
              RAST._IType _out3213;
              _out3213 = DCOMP.COMP.GenType((_7173_typeArgs).Select(_7176_i), false, false);
              _7177_typeExpr = _out3213;
              _7175_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_7175_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_7177_typeExpr));
            }
            r = (r).ApplyType(_7175_typeExprs);
          }
          r = (r).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _7178_arguments;
          _7178_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi14 = new BigInteger((_7172_args).Count);
          for (BigInteger _7179_i = BigInteger.Zero; _7179_i < _hi14; _7179_i++) {
            RAST._IExpr _7180_recursiveGen;
            DCOMP._IOwnership _7181___v111;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7182_recIdents;
            RAST._IExpr _out3214;
            DCOMP._IOwnership _out3215;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3216;
            DCOMP.COMP.GenExpr((_7172_args).Select(_7179_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3214, out _out3215, out _out3216);
            _7180_recursiveGen = _out3214;
            _7181___v111 = _out3215;
            _7182_recIdents = _out3216;
            _7178_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7178_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7180_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7182_recIdents);
          }
          r = (r).Apply(_7178_arguments);
          RAST._IExpr _out3217;
          DCOMP._IOwnership _out3218;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3217, out _out3218);
          r = _out3217;
          resultingOwnership = _out3218;
          return ;
        }
      } else if (_source334.is_NewArray) {
        Dafny.ISequence<DAST._IExpression> _7183___mcc_h7 = _source334.dtor_dims;
        DAST._IType _7184___mcc_h8 = _source334.dtor_typ;
        DAST._IType _7185_typ = _7184___mcc_h8;
        Dafny.ISequence<DAST._IExpression> _7186_dims = _7183___mcc_h7;
        {
          BigInteger _7187_i;
          _7187_i = (new BigInteger((_7186_dims).Count)) - (BigInteger.One);
          RAST._IType _7188_genTyp;
          RAST._IType _out3219;
          _out3219 = DCOMP.COMP.GenType(_7185_typ, false, false);
          _7188_genTyp = _out3219;
          Dafny.ISequence<Dafny.Rune> _7189_s;
          _7189_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_7188_genTyp)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::std::default::Default>::default()"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          while ((_7187_i).Sign != -1) {
            RAST._IExpr _7190_recursiveGen;
            DCOMP._IOwnership _7191___v112;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7192_recIdents;
            RAST._IExpr _out3220;
            DCOMP._IOwnership _out3221;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3222;
            DCOMP.COMP.GenExpr((_7186_dims).Select(_7187_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3220, out _out3221, out _out3222);
            _7190_recursiveGen = _out3220;
            _7191___v112 = _out3221;
            _7192_recIdents = _out3222;
            _7189_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(::std::cell::RefCell::new(vec!["), _7189_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("; <usize as ::dafny_runtime::NumCast>::from(")), (_7190_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()]))"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7192_recIdents);
            _7187_i = (_7187_i) - (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(_7189_s);
          RAST._IExpr _out3223;
          DCOMP._IOwnership _out3224;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3223, out _out3224);
          r = _out3223;
          resultingOwnership = _out3224;
          return ;
        }
      } else if (_source334.is_DatatypeValue) {
        DAST._IDatatypeType _7193___mcc_h9 = _source334.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _7194___mcc_h10 = _source334.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _7195___mcc_h11 = _source334.dtor_variant;
        bool _7196___mcc_h12 = _source334.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7197___mcc_h13 = _source334.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7198_values = _7197___mcc_h13;
        bool _7199_isCo = _7196___mcc_h12;
        Dafny.ISequence<Dafny.Rune> _7200_variant = _7195___mcc_h11;
        Dafny.ISequence<DAST._IType> _7201_typeArgs = _7194___mcc_h10;
        DAST._IDatatypeType _7202_datatypeType = _7193___mcc_h9;
        {
          RAST._IExpr _out3225;
          _out3225 = DCOMP.COMP.GenPathExpr((_7202_datatypeType).dtor_path);
          r = _out3225;
          Dafny.ISequence<RAST._IType> _7203_genTypeArgs;
          _7203_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi15 = new BigInteger((_7201_typeArgs).Count);
          for (BigInteger _7204_i = BigInteger.Zero; _7204_i < _hi15; _7204_i++) {
            RAST._IType _7205_typeExpr;
            RAST._IType _out3226;
            _out3226 = DCOMP.COMP.GenType((_7201_typeArgs).Select(_7204_i), false, false);
            _7205_typeExpr = _out3226;
            _7203_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_7203_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_7205_typeExpr));
          }
          if ((new BigInteger((_7201_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_7203_genTypeArgs);
          }
          r = (r).MSel(DCOMP.__default.escapeIdent(_7200_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _7206_assignments;
          _7206_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi16 = new BigInteger((_7198_values).Count);
          for (BigInteger _7207_i = BigInteger.Zero; _7207_i < _hi16; _7207_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs52 = (_7198_values).Select(_7207_i);
            Dafny.ISequence<Dafny.Rune> _7208_name = _let_tmp_rhs52.dtor__0;
            DAST._IExpression _7209_value = _let_tmp_rhs52.dtor__1;
            if (_7199_isCo) {
              RAST._IExpr _7210_recursiveGen;
              DCOMP._IOwnership _7211___v113;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7212_recIdents;
              RAST._IExpr _out3227;
              DCOMP._IOwnership _out3228;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3229;
              DCOMP.COMP.GenExpr(_7209_value, selfIdent, DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out3227, out _out3228, out _out3229);
              _7210_recursiveGen = _out3227;
              _7211___v113 = _out3228;
              _7212_recIdents = _out3229;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7212_recIdents);
              Dafny.ISequence<Dafny.Rune> _7213_allReadCloned;
              _7213_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_7212_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _7214_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_2 in (_7212_recIdents).Elements) {
                  _7214_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_2;
                  if ((_7212_recIdents).Contains(_7214_next)) {
                    goto after__ASSIGN_SUCH_THAT_2;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 3037)");
              after__ASSIGN_SUCH_THAT_2: ;
                _7213_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7213_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent(_7214_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMP.__default.escapeIdent(_7214_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _7212_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_7212_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7214_next));
              }
              Dafny.ISequence<Dafny.Rune> _7215_assigned;
              _7215_assigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _7213_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_7210_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _7206_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7206_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_7208_name), RAST.Expr.create_RawExpr(_7215_assigned))));
            } else {
              RAST._IExpr _7216_recursiveGen;
              DCOMP._IOwnership _7217___v114;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7218_recIdents;
              RAST._IExpr _out3230;
              DCOMP._IOwnership _out3231;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3232;
              DCOMP.COMP.GenExpr(_7209_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3230, out _out3231, out _out3232);
              _7216_recursiveGen = _out3230;
              _7217___v114 = _out3231;
              _7218_recIdents = _out3232;
              _7206_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7206_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_7208_name), _7216_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7218_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _7206_assignments);
          if (DCOMP.COMP.IsRcWrapped((_7202_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out3233;
          DCOMP._IOwnership _out3234;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3233, out _out3234);
          r = _out3233;
          resultingOwnership = _out3234;
          return ;
        }
      } else if (_source334.is_Convert) {
        DAST._IExpression _7219___mcc_h14 = _source334.dtor_value;
        DAST._IType _7220___mcc_h15 = _source334.dtor_from;
        DAST._IType _7221___mcc_h16 = _source334.dtor_typ;
        {
          RAST._IExpr _out3235;
          DCOMP._IOwnership _out3236;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3237;
          DCOMP.COMP.GenExprConvert(e, selfIdent, env, expectedOwnership, out _out3235, out _out3236, out _out3237);
          r = _out3235;
          resultingOwnership = _out3236;
          readIdents = _out3237;
        }
      } else if (_source334.is_SeqConstruct) {
        DAST._IExpression _7222___mcc_h17 = _source334.dtor_length;
        DAST._IExpression _7223___mcc_h18 = _source334.dtor_elem;
        DAST._IExpression _7224_expr = _7223___mcc_h18;
        DAST._IExpression _7225_length = _7222___mcc_h17;
        {
          RAST._IExpr _7226_recursiveGen;
          DCOMP._IOwnership _7227___v118;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7228_recIdents;
          RAST._IExpr _out3238;
          DCOMP._IOwnership _out3239;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3240;
          DCOMP.COMP.GenExpr(_7224_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3238, out _out3239, out _out3240);
          _7226_recursiveGen = _out3238;
          _7227___v118 = _out3239;
          _7228_recIdents = _out3240;
          RAST._IExpr _7229_lengthGen;
          DCOMP._IOwnership _7230___v119;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7231_lengthIdents;
          RAST._IExpr _out3241;
          DCOMP._IOwnership _out3242;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3243;
          DCOMP.COMP.GenExpr(_7225_length, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3241, out _out3242, out _out3243);
          _7229_lengthGen = _out3241;
          _7230___v119 = _out3242;
          _7231_lengthIdents = _out3243;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_7226_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_7229_lengthGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer.0(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7228_recIdents, _7231_lengthIdents);
          RAST._IExpr _out3244;
          DCOMP._IOwnership _out3245;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3244, out _out3245);
          r = _out3244;
          resultingOwnership = _out3245;
          return ;
        }
      } else if (_source334.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _7232___mcc_h19 = _source334.dtor_elements;
        DAST._IType _7233___mcc_h20 = _source334.dtor_typ;
        DAST._IType _7234_typ = _7233___mcc_h20;
        Dafny.ISequence<DAST._IExpression> _7235_exprs = _7232___mcc_h19;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _7236_genTpe;
          RAST._IType _out3246;
          _out3246 = DCOMP.COMP.GenType(_7234_typ, false, false);
          _7236_genTpe = _out3246;
          BigInteger _7237_i;
          _7237_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _7238_args;
          _7238_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_7237_i) < (new BigInteger((_7235_exprs).Count))) {
            RAST._IExpr _7239_recursiveGen;
            DCOMP._IOwnership _7240___v120;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7241_recIdents;
            RAST._IExpr _out3247;
            DCOMP._IOwnership _out3248;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3249;
            DCOMP.COMP.GenExpr((_7235_exprs).Select(_7237_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3247, out _out3248, out _out3249);
            _7239_recursiveGen = _out3247;
            _7240___v120 = _out3248;
            _7241_recIdents = _out3249;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7241_recIdents);
            _7238_args = Dafny.Sequence<RAST._IExpr>.Concat(_7238_args, Dafny.Sequence<RAST._IExpr>.FromElements(_7239_recursiveGen));
            _7237_i = (_7237_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_7238_args);
          if ((new BigInteger((_7238_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_7236_genTpe));
          }
          RAST._IExpr _out3250;
          DCOMP._IOwnership _out3251;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3250, out _out3251);
          r = _out3250;
          resultingOwnership = _out3251;
          return ;
        }
      } else if (_source334.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _7242___mcc_h21 = _source334.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _7243_exprs = _7242___mcc_h21;
        {
          Dafny.ISequence<RAST._IExpr> _7244_generatedValues;
          _7244_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7245_i;
          _7245_i = BigInteger.Zero;
          while ((_7245_i) < (new BigInteger((_7243_exprs).Count))) {
            RAST._IExpr _7246_recursiveGen;
            DCOMP._IOwnership _7247___v121;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7248_recIdents;
            RAST._IExpr _out3252;
            DCOMP._IOwnership _out3253;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3254;
            DCOMP.COMP.GenExpr((_7243_exprs).Select(_7245_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3252, out _out3253, out _out3254);
            _7246_recursiveGen = _out3252;
            _7247___v121 = _out3253;
            _7248_recIdents = _out3254;
            _7244_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_7244_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_7246_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7248_recIdents);
            _7245_i = (_7245_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_7244_generatedValues);
          RAST._IExpr _out3255;
          DCOMP._IOwnership _out3256;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3255, out _out3256);
          r = _out3255;
          resultingOwnership = _out3256;
          return ;
        }
      } else if (_source334.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _7249___mcc_h22 = _source334.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _7250_exprs = _7249___mcc_h22;
        {
          Dafny.ISequence<RAST._IExpr> _7251_generatedValues;
          _7251_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7252_i;
          _7252_i = BigInteger.Zero;
          while ((_7252_i) < (new BigInteger((_7250_exprs).Count))) {
            RAST._IExpr _7253_recursiveGen;
            DCOMP._IOwnership _7254___v122;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7255_recIdents;
            RAST._IExpr _out3257;
            DCOMP._IOwnership _out3258;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3259;
            DCOMP.COMP.GenExpr((_7250_exprs).Select(_7252_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3257, out _out3258, out _out3259);
            _7253_recursiveGen = _out3257;
            _7254___v122 = _out3258;
            _7255_recIdents = _out3259;
            _7251_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_7251_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_7253_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7255_recIdents);
            _7252_i = (_7252_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_7251_generatedValues);
          RAST._IExpr _out3260;
          DCOMP._IOwnership _out3261;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3260, out _out3261);
          r = _out3260;
          resultingOwnership = _out3261;
          return ;
        }
      } else if (_source334.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7256___mcc_h23 = _source334.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7257_mapElems = _7256___mcc_h23;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _7258_generatedValues;
          _7258_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7259_i;
          _7259_i = BigInteger.Zero;
          while ((_7259_i) < (new BigInteger((_7257_mapElems).Count))) {
            RAST._IExpr _7260_recursiveGenKey;
            DCOMP._IOwnership _7261___v124;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7262_recIdentsKey;
            RAST._IExpr _out3262;
            DCOMP._IOwnership _out3263;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3264;
            DCOMP.COMP.GenExpr(((_7257_mapElems).Select(_7259_i)).dtor__0, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3262, out _out3263, out _out3264);
            _7260_recursiveGenKey = _out3262;
            _7261___v124 = _out3263;
            _7262_recIdentsKey = _out3264;
            RAST._IExpr _7263_recursiveGenValue;
            DCOMP._IOwnership _7264___v125;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7265_recIdentsValue;
            RAST._IExpr _out3265;
            DCOMP._IOwnership _out3266;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3267;
            DCOMP.COMP.GenExpr(((_7257_mapElems).Select(_7259_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3265, out _out3266, out _out3267);
            _7263_recursiveGenValue = _out3265;
            _7264___v125 = _out3266;
            _7265_recIdentsValue = _out3267;
            _7258_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_7258_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_7260_recursiveGenKey, _7263_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7262_recIdentsKey), _7265_recIdentsValue);
            _7259_i = (_7259_i) + (BigInteger.One);
          }
          _7259_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _7266_arguments;
          _7266_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_7259_i) < (new BigInteger((_7258_generatedValues).Count))) {
            RAST._IExpr _7267_genKey;
            _7267_genKey = ((_7258_generatedValues).Select(_7259_i)).dtor__0;
            RAST._IExpr _7268_genValue;
            _7268_genValue = ((_7258_generatedValues).Select(_7259_i)).dtor__1;
            _7266_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7266_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _7267_genKey, _7268_genValue, DAST.Format.BinOpFormat.create_NoFormat())));
            _7259_i = (_7259_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_7266_arguments);
          RAST._IExpr _out3268;
          DCOMP._IOwnership _out3269;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3268, out _out3269);
          r = _out3268;
          resultingOwnership = _out3269;
          return ;
        }
      } else if (_source334.is_MapBuilder) {
        DAST._IType _7269___mcc_h24 = _source334.dtor_keyType;
        DAST._IType _7270___mcc_h25 = _source334.dtor_valueType;
        DAST._IType _7271_valueType = _7270___mcc_h25;
        DAST._IType _7272_keyType = _7269___mcc_h24;
        {
          RAST._IType _7273_kType;
          RAST._IType _out3270;
          _out3270 = DCOMP.COMP.GenType(_7272_keyType, false, false);
          _7273_kType = _out3270;
          RAST._IType _7274_vType;
          RAST._IType _out3271;
          _out3271 = DCOMP.COMP.GenType(_7271_valueType, false, false);
          _7274_vType = _out3271;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::MapBuilder::<"), (_7273_kType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_7274_vType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out3272;
          DCOMP._IOwnership _out3273;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3272, out _out3273);
          r = _out3272;
          resultingOwnership = _out3273;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source334.is_SeqUpdate) {
        DAST._IExpression _7275___mcc_h26 = _source334.dtor_expr;
        DAST._IExpression _7276___mcc_h27 = _source334.dtor_indexExpr;
        DAST._IExpression _7277___mcc_h28 = _source334.dtor_value;
        DAST._IExpression _7278_value = _7277___mcc_h28;
        DAST._IExpression _7279_index = _7276___mcc_h27;
        DAST._IExpression _7280_expr = _7275___mcc_h26;
        {
          RAST._IExpr _7281_exprR;
          DCOMP._IOwnership _7282___v126;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7283_exprIdents;
          RAST._IExpr _out3274;
          DCOMP._IOwnership _out3275;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3276;
          DCOMP.COMP.GenExpr(_7280_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3274, out _out3275, out _out3276);
          _7281_exprR = _out3274;
          _7282___v126 = _out3275;
          _7283_exprIdents = _out3276;
          RAST._IExpr _7284_indexR;
          DCOMP._IOwnership _7285_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7286_indexIdents;
          RAST._IExpr _out3277;
          DCOMP._IOwnership _out3278;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3279;
          DCOMP.COMP.GenExpr(_7279_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3277, out _out3278, out _out3279);
          _7284_indexR = _out3277;
          _7285_indexOwnership = _out3278;
          _7286_indexIdents = _out3279;
          RAST._IExpr _7287_valueR;
          DCOMP._IOwnership _7288_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7289_valueIdents;
          RAST._IExpr _out3280;
          DCOMP._IOwnership _out3281;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3282;
          DCOMP.COMP.GenExpr(_7278_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3280, out _out3281, out _out3282);
          _7287_valueR = _out3280;
          _7288_valueOwnership = _out3281;
          _7289_valueIdents = _out3282;
          r = ((_7281_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_7284_indexR, _7287_valueR));
          RAST._IExpr _out3283;
          DCOMP._IOwnership _out3284;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3283, out _out3284);
          r = _out3283;
          resultingOwnership = _out3284;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7283_exprIdents, _7286_indexIdents), _7289_valueIdents);
          return ;
        }
      } else if (_source334.is_MapUpdate) {
        DAST._IExpression _7290___mcc_h29 = _source334.dtor_expr;
        DAST._IExpression _7291___mcc_h30 = _source334.dtor_indexExpr;
        DAST._IExpression _7292___mcc_h31 = _source334.dtor_value;
        DAST._IExpression _7293_value = _7292___mcc_h31;
        DAST._IExpression _7294_index = _7291___mcc_h30;
        DAST._IExpression _7295_expr = _7290___mcc_h29;
        {
          RAST._IExpr _7296_exprR;
          DCOMP._IOwnership _7297___v127;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7298_exprIdents;
          RAST._IExpr _out3285;
          DCOMP._IOwnership _out3286;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3287;
          DCOMP.COMP.GenExpr(_7295_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3285, out _out3286, out _out3287);
          _7296_exprR = _out3285;
          _7297___v127 = _out3286;
          _7298_exprIdents = _out3287;
          RAST._IExpr _7299_indexR;
          DCOMP._IOwnership _7300_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7301_indexIdents;
          RAST._IExpr _out3288;
          DCOMP._IOwnership _out3289;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3290;
          DCOMP.COMP.GenExpr(_7294_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3288, out _out3289, out _out3290);
          _7299_indexR = _out3288;
          _7300_indexOwnership = _out3289;
          _7301_indexIdents = _out3290;
          RAST._IExpr _7302_valueR;
          DCOMP._IOwnership _7303_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7304_valueIdents;
          RAST._IExpr _out3291;
          DCOMP._IOwnership _out3292;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3293;
          DCOMP.COMP.GenExpr(_7293_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3291, out _out3292, out _out3293);
          _7302_valueR = _out3291;
          _7303_valueOwnership = _out3292;
          _7304_valueIdents = _out3293;
          r = ((_7296_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_7299_indexR, _7302_valueR));
          RAST._IExpr _out3294;
          DCOMP._IOwnership _out3295;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3294, out _out3295);
          r = _out3294;
          resultingOwnership = _out3295;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7298_exprIdents, _7301_indexIdents), _7304_valueIdents);
          return ;
        }
      } else if (_source334.is_SetBuilder) {
        DAST._IType _7305___mcc_h32 = _source334.dtor_elemType;
        DAST._IType _7306_elemType = _7305___mcc_h32;
        {
          RAST._IType _7307_eType;
          RAST._IType _out3296;
          _out3296 = DCOMP.COMP.GenType(_7306_elemType, false, false);
          _7307_eType = _out3296;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::SetBuilder::<"), (_7307_eType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out3297;
          DCOMP._IOwnership _out3298;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3297, out _out3298);
          r = _out3297;
          resultingOwnership = _out3298;
          return ;
        }
      } else if (_source334.is_ToMultiset) {
        DAST._IExpression _7308___mcc_h33 = _source334.dtor_ToMultiset_a0;
        DAST._IExpression _7309_expr = _7308___mcc_h33;
        {
          RAST._IExpr _7310_recursiveGen;
          DCOMP._IOwnership _7311___v123;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7312_recIdents;
          RAST._IExpr _out3299;
          DCOMP._IOwnership _out3300;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3301;
          DCOMP.COMP.GenExpr(_7309_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3299, out _out3300, out _out3301);
          _7310_recursiveGen = _out3299;
          _7311___v123 = _out3300;
          _7312_recIdents = _out3301;
          r = ((_7310_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _7312_recIdents;
          RAST._IExpr _out3302;
          DCOMP._IOwnership _out3303;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3302, out _out3303);
          r = _out3302;
          resultingOwnership = _out3303;
          return ;
        }
      } else if (_source334.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source335 = selfIdent;
          if (_source335.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out3304;
              DCOMP._IOwnership _out3305;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3304, out _out3305);
              r = _out3304;
              resultingOwnership = _out3305;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _7313___mcc_h273 = _source335.dtor_value;
            Dafny.ISequence<Dafny.Rune> _7314_id = _7313___mcc_h273;
            {
              r = RAST.Expr.create_RawExpr(_7314_id);
              if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
                r = RAST.__default.Clone(r);
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_7314_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_7314_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7314_id);
            }
          }
          return ;
        }
      } else if (_source334.is_Ite) {
        DAST._IExpression _7315___mcc_h34 = _source334.dtor_cond;
        DAST._IExpression _7316___mcc_h35 = _source334.dtor_thn;
        DAST._IExpression _7317___mcc_h36 = _source334.dtor_els;
        DAST._IExpression _7318_f = _7317___mcc_h36;
        DAST._IExpression _7319_t = _7316___mcc_h35;
        DAST._IExpression _7320_cond = _7315___mcc_h34;
        {
          RAST._IExpr _7321_cond;
          DCOMP._IOwnership _7322___v128;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7323_recIdentsCond;
          RAST._IExpr _out3306;
          DCOMP._IOwnership _out3307;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3308;
          DCOMP.COMP.GenExpr(_7320_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3306, out _out3307, out _out3308);
          _7321_cond = _out3306;
          _7322___v128 = _out3307;
          _7323_recIdentsCond = _out3308;
          Dafny.ISequence<Dafny.Rune> _7324_condString;
          _7324_condString = (_7321_cond)._ToString(DCOMP.__default.IND);
          RAST._IExpr _7325___v129;
          DCOMP._IOwnership _7326_tHasToBeOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7327___v130;
          RAST._IExpr _out3309;
          DCOMP._IOwnership _out3310;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3311;
          DCOMP.COMP.GenExpr(_7319_t, selfIdent, env, expectedOwnership, out _out3309, out _out3310, out _out3311);
          _7325___v129 = _out3309;
          _7326_tHasToBeOwned = _out3310;
          _7327___v130 = _out3311;
          RAST._IExpr _7328_fExpr;
          DCOMP._IOwnership _7329_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7330_recIdentsF;
          RAST._IExpr _out3312;
          DCOMP._IOwnership _out3313;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3314;
          DCOMP.COMP.GenExpr(_7318_f, selfIdent, env, _7326_tHasToBeOwned, out _out3312, out _out3313, out _out3314);
          _7328_fExpr = _out3312;
          _7329_fOwned = _out3313;
          _7330_recIdentsF = _out3314;
          Dafny.ISequence<Dafny.Rune> _7331_fString;
          _7331_fString = (_7328_fExpr)._ToString(DCOMP.__default.IND);
          RAST._IExpr _7332_tExpr;
          DCOMP._IOwnership _7333___v131;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7334_recIdentsT;
          RAST._IExpr _out3315;
          DCOMP._IOwnership _out3316;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3317;
          DCOMP.COMP.GenExpr(_7319_t, selfIdent, env, _7329_fOwned, out _out3315, out _out3316, out _out3317);
          _7332_tExpr = _out3315;
          _7333___v131 = _out3316;
          _7334_recIdentsT = _out3317;
          Dafny.ISequence<Dafny.Rune> _7335_tString;
          _7335_tString = (_7332_tExpr)._ToString(DCOMP.__default.IND);
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(if "), _7324_condString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), _7335_tString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n} else {\n")), _7331_fString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})")));
          RAST._IExpr _out3318;
          DCOMP._IOwnership _out3319;
          DCOMP.COMP.FromOwnership(r, _7329_fOwned, expectedOwnership, out _out3318, out _out3319);
          r = _out3318;
          resultingOwnership = _out3319;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7323_recIdentsCond, _7334_recIdentsT), _7330_recIdentsF);
          return ;
        }
      } else if (_source334.is_UnOp) {
        DAST._IUnaryOp _7336___mcc_h37 = _source334.dtor_unOp;
        DAST._IExpression _7337___mcc_h38 = _source334.dtor_expr;
        DAST.Format._IUnOpFormat _7338___mcc_h39 = _source334.dtor_format1;
        DAST._IUnaryOp _source336 = _7336___mcc_h37;
        if (_source336.is_Not) {
          DAST.Format._IUnOpFormat _7339_format = _7338___mcc_h39;
          DAST._IExpression _7340_e = _7337___mcc_h38;
          {
            RAST._IExpr _7341_recursiveGen;
            DCOMP._IOwnership _7342___v132;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7343_recIdents;
            RAST._IExpr _out3320;
            DCOMP._IOwnership _out3321;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3322;
            DCOMP.COMP.GenExpr(_7340_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3320, out _out3321, out _out3322);
            _7341_recursiveGen = _out3320;
            _7342___v132 = _out3321;
            _7343_recIdents = _out3322;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _7341_recursiveGen, _7339_format);
            RAST._IExpr _out3323;
            DCOMP._IOwnership _out3324;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3323, out _out3324);
            r = _out3323;
            resultingOwnership = _out3324;
            readIdents = _7343_recIdents;
            return ;
          }
        } else if (_source336.is_BitwiseNot) {
          DAST.Format._IUnOpFormat _7344_format = _7338___mcc_h39;
          DAST._IExpression _7345_e = _7337___mcc_h38;
          {
            RAST._IExpr _7346_recursiveGen;
            DCOMP._IOwnership _7347___v133;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7348_recIdents;
            RAST._IExpr _out3325;
            DCOMP._IOwnership _out3326;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3327;
            DCOMP.COMP.GenExpr(_7345_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3325, out _out3326, out _out3327);
            _7346_recursiveGen = _out3325;
            _7347___v133 = _out3326;
            _7348_recIdents = _out3327;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _7346_recursiveGen, _7344_format);
            RAST._IExpr _out3328;
            DCOMP._IOwnership _out3329;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3328, out _out3329);
            r = _out3328;
            resultingOwnership = _out3329;
            readIdents = _7348_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnOpFormat _7349_format = _7338___mcc_h39;
          DAST._IExpression _7350_e = _7337___mcc_h38;
          {
            RAST._IExpr _7351_recursiveGen;
            DCOMP._IOwnership _7352_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7353_recIdents;
            RAST._IExpr _out3330;
            DCOMP._IOwnership _out3331;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3332;
            DCOMP.COMP.GenExpr(_7350_e, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3330, out _out3331, out _out3332);
            _7351_recursiveGen = _out3330;
            _7352_recOwned = _out3331;
            _7353_recIdents = _out3332;
            r = ((_7351_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out3333;
            DCOMP._IOwnership _out3334;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3333, out _out3334);
            r = _out3333;
            resultingOwnership = _out3334;
            readIdents = _7353_recIdents;
            return ;
          }
        }
      } else if (_source334.is_BinOp) {
        DAST._IBinOp _7354___mcc_h40 = _source334.dtor_op;
        DAST._IExpression _7355___mcc_h41 = _source334.dtor_left;
        DAST._IExpression _7356___mcc_h42 = _source334.dtor_right;
        DAST.Format._IBinOpFormat _7357___mcc_h43 = _source334.dtor_format2;
        RAST._IExpr _out3335;
        DCOMP._IOwnership _out3336;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3337;
        DCOMP.COMP.GenExprBinary(e, selfIdent, env, expectedOwnership, out _out3335, out _out3336, out _out3337);
        r = _out3335;
        resultingOwnership = _out3336;
        readIdents = _out3337;
      } else if (_source334.is_ArrayLen) {
        DAST._IExpression _7358___mcc_h44 = _source334.dtor_expr;
        BigInteger _7359___mcc_h45 = _source334.dtor_dim;
        BigInteger _7360_dim = _7359___mcc_h45;
        DAST._IExpression _7361_expr = _7358___mcc_h44;
        {
          RAST._IExpr _7362_recursiveGen;
          DCOMP._IOwnership _7363___v138;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7364_recIdents;
          RAST._IExpr _out3338;
          DCOMP._IOwnership _out3339;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3340;
          DCOMP.COMP.GenExpr(_7361_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3338, out _out3339, out _out3340);
          _7362_recursiveGen = _out3338;
          _7363___v138 = _out3339;
          _7364_recIdents = _out3340;
          if ((_7360_dim).Sign == 0) {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(("), (_7362_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").borrow().len())")));
          } else {
            Dafny.ISequence<Dafny.Rune> _7365_s;
            _7365_s = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(m.borrow().len())")))._ToString(DCOMP.__default.IND);
            BigInteger _7366_i;
            _7366_i = BigInteger.One;
            while ((_7366_i) < (_7360_dim)) {
              _7365_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("m.borrow().get(0).map(|m| "), _7365_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"));
              _7366_i = (_7366_i) + (BigInteger.One);
            }
            r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7362_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow().get(0).map(|m| ")), _7365_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"))));
          }
          RAST._IExpr _out3341;
          DCOMP._IOwnership _out3342;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3341, out _out3342);
          r = _out3341;
          resultingOwnership = _out3342;
          readIdents = _7364_recIdents;
          return ;
        }
      } else if (_source334.is_MapKeys) {
        DAST._IExpression _7367___mcc_h46 = _source334.dtor_expr;
        DAST._IExpression _7368_expr = _7367___mcc_h46;
        {
          RAST._IExpr _7369_recursiveGen;
          DCOMP._IOwnership _7370___v139;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7371_recIdents;
          RAST._IExpr _out3343;
          DCOMP._IOwnership _out3344;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3345;
          DCOMP.COMP.GenExpr(_7368_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3343, out _out3344, out _out3345);
          _7369_recursiveGen = _out3343;
          _7370___v139 = _out3344;
          _7371_recIdents = _out3345;
          readIdents = _7371_recIdents;
          r = ((_7369_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out3346;
          DCOMP._IOwnership _out3347;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3346, out _out3347);
          r = _out3346;
          resultingOwnership = _out3347;
          return ;
        }
      } else if (_source334.is_MapValues) {
        DAST._IExpression _7372___mcc_h47 = _source334.dtor_expr;
        DAST._IExpression _7373_expr = _7372___mcc_h47;
        {
          RAST._IExpr _7374_recursiveGen;
          DCOMP._IOwnership _7375___v140;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7376_recIdents;
          RAST._IExpr _out3348;
          DCOMP._IOwnership _out3349;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3350;
          DCOMP.COMP.GenExpr(_7373_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3348, out _out3349, out _out3350);
          _7374_recursiveGen = _out3348;
          _7375___v140 = _out3349;
          _7376_recIdents = _out3350;
          readIdents = _7376_recIdents;
          r = ((_7374_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out3351;
          DCOMP._IOwnership _out3352;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3351, out _out3352);
          r = _out3351;
          resultingOwnership = _out3352;
          return ;
        }
      } else if (_source334.is_Select) {
        DAST._IExpression _7377___mcc_h48 = _source334.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _7378___mcc_h49 = _source334.dtor_field;
        bool _7379___mcc_h50 = _source334.dtor_isConstant;
        bool _7380___mcc_h51 = _source334.dtor_onDatatype;
        DAST._IExpression _source337 = _7377___mcc_h48;
        if (_source337.is_Literal) {
          DAST._ILiteral _7381___mcc_h52 = _source337.dtor_Literal_a0;
          bool _7382_isDatatype = _7380___mcc_h51;
          bool _7383_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7384_field = _7378___mcc_h49;
          DAST._IExpression _7385_on = _7377___mcc_h48;
          {
            if ((_7382_isDatatype) || (_7383_isConstant)) {
              RAST._IExpr _7386_onExpr;
              DCOMP._IOwnership _7387_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7388_recIdents;
              RAST._IExpr _out3353;
              DCOMP._IOwnership _out3354;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3355;
              DCOMP.COMP.GenExpr(_7385_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3353, out _out3354, out _out3355);
              _7386_onExpr = _out3353;
              _7387_onOwned = _out3354;
              _7388_recIdents = _out3355;
              r = ((_7386_onExpr).Sel(DCOMP.__default.escapeIdent(_7384_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3356;
              DCOMP._IOwnership _out3357;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3356, out _out3357);
              r = _out3356;
              resultingOwnership = _out3357;
              readIdents = _7388_recIdents;
            } else {
              RAST._IExpr _7389_onExpr;
              DCOMP._IOwnership _7390_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7391_recIdents;
              RAST._IExpr _out3358;
              DCOMP._IOwnership _out3359;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3360;
              DCOMP.COMP.GenExpr(_7385_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3358, out _out3359, out _out3360);
              _7389_onExpr = _out3358;
              _7390_onOwned = _out3359;
              _7391_recIdents = _out3360;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7389_onExpr)).Sel(DCOMP.__default.escapeIdent(_7384_field));
              RAST._IExpr _out3361;
              DCOMP._IOwnership _out3362;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3361, out _out3362);
              r = _out3361;
              resultingOwnership = _out3362;
              readIdents = _7391_recIdents;
            }
            return ;
          }
        } else if (_source337.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _7392___mcc_h54 = _source337.dtor_Ident_a0;
          bool _7393_isDatatype = _7380___mcc_h51;
          bool _7394_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7395_field = _7378___mcc_h49;
          DAST._IExpression _7396_on = _7377___mcc_h48;
          {
            if ((_7393_isDatatype) || (_7394_isConstant)) {
              RAST._IExpr _7397_onExpr;
              DCOMP._IOwnership _7398_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7399_recIdents;
              RAST._IExpr _out3363;
              DCOMP._IOwnership _out3364;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3365;
              DCOMP.COMP.GenExpr(_7396_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3363, out _out3364, out _out3365);
              _7397_onExpr = _out3363;
              _7398_onOwned = _out3364;
              _7399_recIdents = _out3365;
              r = ((_7397_onExpr).Sel(DCOMP.__default.escapeIdent(_7395_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3366;
              DCOMP._IOwnership _out3367;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3366, out _out3367);
              r = _out3366;
              resultingOwnership = _out3367;
              readIdents = _7399_recIdents;
            } else {
              RAST._IExpr _7400_onExpr;
              DCOMP._IOwnership _7401_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7402_recIdents;
              RAST._IExpr _out3368;
              DCOMP._IOwnership _out3369;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3370;
              DCOMP.COMP.GenExpr(_7396_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3368, out _out3369, out _out3370);
              _7400_onExpr = _out3368;
              _7401_onOwned = _out3369;
              _7402_recIdents = _out3370;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7400_onExpr)).Sel(DCOMP.__default.escapeIdent(_7395_field));
              RAST._IExpr _out3371;
              DCOMP._IOwnership _out3372;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3371, out _out3372);
              r = _out3371;
              resultingOwnership = _out3372;
              readIdents = _7402_recIdents;
            }
            return ;
          }
        } else if (_source337.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7403___mcc_h56 = _source337.dtor_Companion_a0;
          bool _7404_isDatatype = _7380___mcc_h51;
          bool _7405_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7406_field = _7378___mcc_h49;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7407_c = _7403___mcc_h56;
          {
            RAST._IExpr _7408_onExpr;
            DCOMP._IOwnership _7409_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7410_recIdents;
            RAST._IExpr _out3373;
            DCOMP._IOwnership _out3374;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3375;
            DCOMP.COMP.GenExpr(DAST.Expression.create_Companion(_7407_c), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3373, out _out3374, out _out3375);
            _7408_onExpr = _out3373;
            _7409_onOwned = _out3374;
            _7410_recIdents = _out3375;
            r = ((_7408_onExpr).MSel(DCOMP.__default.escapeIdent(_7406_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out3376;
            DCOMP._IOwnership _out3377;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3376, out _out3377);
            r = _out3376;
            resultingOwnership = _out3377;
            readIdents = _7410_recIdents;
            return ;
          }
        } else if (_source337.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _7411___mcc_h58 = _source337.dtor_Tuple_a0;
          bool _7412_isDatatype = _7380___mcc_h51;
          bool _7413_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7414_field = _7378___mcc_h49;
          DAST._IExpression _7415_on = _7377___mcc_h48;
          {
            if ((_7412_isDatatype) || (_7413_isConstant)) {
              RAST._IExpr _7416_onExpr;
              DCOMP._IOwnership _7417_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7418_recIdents;
              RAST._IExpr _out3378;
              DCOMP._IOwnership _out3379;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3380;
              DCOMP.COMP.GenExpr(_7415_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3378, out _out3379, out _out3380);
              _7416_onExpr = _out3378;
              _7417_onOwned = _out3379;
              _7418_recIdents = _out3380;
              r = ((_7416_onExpr).Sel(DCOMP.__default.escapeIdent(_7414_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3381;
              DCOMP._IOwnership _out3382;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3381, out _out3382);
              r = _out3381;
              resultingOwnership = _out3382;
              readIdents = _7418_recIdents;
            } else {
              RAST._IExpr _7419_onExpr;
              DCOMP._IOwnership _7420_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7421_recIdents;
              RAST._IExpr _out3383;
              DCOMP._IOwnership _out3384;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3385;
              DCOMP.COMP.GenExpr(_7415_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3383, out _out3384, out _out3385);
              _7419_onExpr = _out3383;
              _7420_onOwned = _out3384;
              _7421_recIdents = _out3385;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7419_onExpr)).Sel(DCOMP.__default.escapeIdent(_7414_field));
              RAST._IExpr _out3386;
              DCOMP._IOwnership _out3387;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3386, out _out3387);
              r = _out3386;
              resultingOwnership = _out3387;
              readIdents = _7421_recIdents;
            }
            return ;
          }
        } else if (_source337.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7422___mcc_h60 = _source337.dtor_path;
          Dafny.ISequence<DAST._IType> _7423___mcc_h61 = _source337.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _7424___mcc_h62 = _source337.dtor_args;
          bool _7425_isDatatype = _7380___mcc_h51;
          bool _7426_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7427_field = _7378___mcc_h49;
          DAST._IExpression _7428_on = _7377___mcc_h48;
          {
            if ((_7425_isDatatype) || (_7426_isConstant)) {
              RAST._IExpr _7429_onExpr;
              DCOMP._IOwnership _7430_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7431_recIdents;
              RAST._IExpr _out3388;
              DCOMP._IOwnership _out3389;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3390;
              DCOMP.COMP.GenExpr(_7428_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3388, out _out3389, out _out3390);
              _7429_onExpr = _out3388;
              _7430_onOwned = _out3389;
              _7431_recIdents = _out3390;
              r = ((_7429_onExpr).Sel(DCOMP.__default.escapeIdent(_7427_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3391;
              DCOMP._IOwnership _out3392;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3391, out _out3392);
              r = _out3391;
              resultingOwnership = _out3392;
              readIdents = _7431_recIdents;
            } else {
              RAST._IExpr _7432_onExpr;
              DCOMP._IOwnership _7433_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7434_recIdents;
              RAST._IExpr _out3393;
              DCOMP._IOwnership _out3394;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3395;
              DCOMP.COMP.GenExpr(_7428_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3393, out _out3394, out _out3395);
              _7432_onExpr = _out3393;
              _7433_onOwned = _out3394;
              _7434_recIdents = _out3395;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7432_onExpr)).Sel(DCOMP.__default.escapeIdent(_7427_field));
              RAST._IExpr _out3396;
              DCOMP._IOwnership _out3397;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3396, out _out3397);
              r = _out3396;
              resultingOwnership = _out3397;
              readIdents = _7434_recIdents;
            }
            return ;
          }
        } else if (_source337.is_NewArray) {
          Dafny.ISequence<DAST._IExpression> _7435___mcc_h66 = _source337.dtor_dims;
          DAST._IType _7436___mcc_h67 = _source337.dtor_typ;
          bool _7437_isDatatype = _7380___mcc_h51;
          bool _7438_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7439_field = _7378___mcc_h49;
          DAST._IExpression _7440_on = _7377___mcc_h48;
          {
            if ((_7437_isDatatype) || (_7438_isConstant)) {
              RAST._IExpr _7441_onExpr;
              DCOMP._IOwnership _7442_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7443_recIdents;
              RAST._IExpr _out3398;
              DCOMP._IOwnership _out3399;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3400;
              DCOMP.COMP.GenExpr(_7440_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3398, out _out3399, out _out3400);
              _7441_onExpr = _out3398;
              _7442_onOwned = _out3399;
              _7443_recIdents = _out3400;
              r = ((_7441_onExpr).Sel(DCOMP.__default.escapeIdent(_7439_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3401;
              DCOMP._IOwnership _out3402;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3401, out _out3402);
              r = _out3401;
              resultingOwnership = _out3402;
              readIdents = _7443_recIdents;
            } else {
              RAST._IExpr _7444_onExpr;
              DCOMP._IOwnership _7445_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7446_recIdents;
              RAST._IExpr _out3403;
              DCOMP._IOwnership _out3404;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3405;
              DCOMP.COMP.GenExpr(_7440_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3403, out _out3404, out _out3405);
              _7444_onExpr = _out3403;
              _7445_onOwned = _out3404;
              _7446_recIdents = _out3405;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7444_onExpr)).Sel(DCOMP.__default.escapeIdent(_7439_field));
              RAST._IExpr _out3406;
              DCOMP._IOwnership _out3407;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3406, out _out3407);
              r = _out3406;
              resultingOwnership = _out3407;
              readIdents = _7446_recIdents;
            }
            return ;
          }
        } else if (_source337.is_DatatypeValue) {
          DAST._IDatatypeType _7447___mcc_h70 = _source337.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _7448___mcc_h71 = _source337.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _7449___mcc_h72 = _source337.dtor_variant;
          bool _7450___mcc_h73 = _source337.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7451___mcc_h74 = _source337.dtor_contents;
          bool _7452_isDatatype = _7380___mcc_h51;
          bool _7453_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7454_field = _7378___mcc_h49;
          DAST._IExpression _7455_on = _7377___mcc_h48;
          {
            if ((_7452_isDatatype) || (_7453_isConstant)) {
              RAST._IExpr _7456_onExpr;
              DCOMP._IOwnership _7457_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7458_recIdents;
              RAST._IExpr _out3408;
              DCOMP._IOwnership _out3409;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3410;
              DCOMP.COMP.GenExpr(_7455_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3408, out _out3409, out _out3410);
              _7456_onExpr = _out3408;
              _7457_onOwned = _out3409;
              _7458_recIdents = _out3410;
              r = ((_7456_onExpr).Sel(DCOMP.__default.escapeIdent(_7454_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3411;
              DCOMP._IOwnership _out3412;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3411, out _out3412);
              r = _out3411;
              resultingOwnership = _out3412;
              readIdents = _7458_recIdents;
            } else {
              RAST._IExpr _7459_onExpr;
              DCOMP._IOwnership _7460_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7461_recIdents;
              RAST._IExpr _out3413;
              DCOMP._IOwnership _out3414;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3415;
              DCOMP.COMP.GenExpr(_7455_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3413, out _out3414, out _out3415);
              _7459_onExpr = _out3413;
              _7460_onOwned = _out3414;
              _7461_recIdents = _out3415;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7459_onExpr)).Sel(DCOMP.__default.escapeIdent(_7454_field));
              RAST._IExpr _out3416;
              DCOMP._IOwnership _out3417;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3416, out _out3417);
              r = _out3416;
              resultingOwnership = _out3417;
              readIdents = _7461_recIdents;
            }
            return ;
          }
        } else if (_source337.is_Convert) {
          DAST._IExpression _7462___mcc_h80 = _source337.dtor_value;
          DAST._IType _7463___mcc_h81 = _source337.dtor_from;
          DAST._IType _7464___mcc_h82 = _source337.dtor_typ;
          bool _7465_isDatatype = _7380___mcc_h51;
          bool _7466_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7467_field = _7378___mcc_h49;
          DAST._IExpression _7468_on = _7377___mcc_h48;
          {
            if ((_7465_isDatatype) || (_7466_isConstant)) {
              RAST._IExpr _7469_onExpr;
              DCOMP._IOwnership _7470_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7471_recIdents;
              RAST._IExpr _out3418;
              DCOMP._IOwnership _out3419;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3420;
              DCOMP.COMP.GenExpr(_7468_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3418, out _out3419, out _out3420);
              _7469_onExpr = _out3418;
              _7470_onOwned = _out3419;
              _7471_recIdents = _out3420;
              r = ((_7469_onExpr).Sel(DCOMP.__default.escapeIdent(_7467_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3421;
              DCOMP._IOwnership _out3422;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3421, out _out3422);
              r = _out3421;
              resultingOwnership = _out3422;
              readIdents = _7471_recIdents;
            } else {
              RAST._IExpr _7472_onExpr;
              DCOMP._IOwnership _7473_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7474_recIdents;
              RAST._IExpr _out3423;
              DCOMP._IOwnership _out3424;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3425;
              DCOMP.COMP.GenExpr(_7468_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3423, out _out3424, out _out3425);
              _7472_onExpr = _out3423;
              _7473_onOwned = _out3424;
              _7474_recIdents = _out3425;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7472_onExpr)).Sel(DCOMP.__default.escapeIdent(_7467_field));
              RAST._IExpr _out3426;
              DCOMP._IOwnership _out3427;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3426, out _out3427);
              r = _out3426;
              resultingOwnership = _out3427;
              readIdents = _7474_recIdents;
            }
            return ;
          }
        } else if (_source337.is_SeqConstruct) {
          DAST._IExpression _7475___mcc_h86 = _source337.dtor_length;
          DAST._IExpression _7476___mcc_h87 = _source337.dtor_elem;
          bool _7477_isDatatype = _7380___mcc_h51;
          bool _7478_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7479_field = _7378___mcc_h49;
          DAST._IExpression _7480_on = _7377___mcc_h48;
          {
            if ((_7477_isDatatype) || (_7478_isConstant)) {
              RAST._IExpr _7481_onExpr;
              DCOMP._IOwnership _7482_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7483_recIdents;
              RAST._IExpr _out3428;
              DCOMP._IOwnership _out3429;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3430;
              DCOMP.COMP.GenExpr(_7480_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3428, out _out3429, out _out3430);
              _7481_onExpr = _out3428;
              _7482_onOwned = _out3429;
              _7483_recIdents = _out3430;
              r = ((_7481_onExpr).Sel(DCOMP.__default.escapeIdent(_7479_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3431;
              DCOMP._IOwnership _out3432;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3431, out _out3432);
              r = _out3431;
              resultingOwnership = _out3432;
              readIdents = _7483_recIdents;
            } else {
              RAST._IExpr _7484_onExpr;
              DCOMP._IOwnership _7485_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7486_recIdents;
              RAST._IExpr _out3433;
              DCOMP._IOwnership _out3434;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3435;
              DCOMP.COMP.GenExpr(_7480_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3433, out _out3434, out _out3435);
              _7484_onExpr = _out3433;
              _7485_onOwned = _out3434;
              _7486_recIdents = _out3435;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7484_onExpr)).Sel(DCOMP.__default.escapeIdent(_7479_field));
              RAST._IExpr _out3436;
              DCOMP._IOwnership _out3437;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3436, out _out3437);
              r = _out3436;
              resultingOwnership = _out3437;
              readIdents = _7486_recIdents;
            }
            return ;
          }
        } else if (_source337.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _7487___mcc_h90 = _source337.dtor_elements;
          DAST._IType _7488___mcc_h91 = _source337.dtor_typ;
          bool _7489_isDatatype = _7380___mcc_h51;
          bool _7490_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7491_field = _7378___mcc_h49;
          DAST._IExpression _7492_on = _7377___mcc_h48;
          {
            if ((_7489_isDatatype) || (_7490_isConstant)) {
              RAST._IExpr _7493_onExpr;
              DCOMP._IOwnership _7494_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7495_recIdents;
              RAST._IExpr _out3438;
              DCOMP._IOwnership _out3439;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3440;
              DCOMP.COMP.GenExpr(_7492_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3438, out _out3439, out _out3440);
              _7493_onExpr = _out3438;
              _7494_onOwned = _out3439;
              _7495_recIdents = _out3440;
              r = ((_7493_onExpr).Sel(DCOMP.__default.escapeIdent(_7491_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3441;
              DCOMP._IOwnership _out3442;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3441, out _out3442);
              r = _out3441;
              resultingOwnership = _out3442;
              readIdents = _7495_recIdents;
            } else {
              RAST._IExpr _7496_onExpr;
              DCOMP._IOwnership _7497_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7498_recIdents;
              RAST._IExpr _out3443;
              DCOMP._IOwnership _out3444;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3445;
              DCOMP.COMP.GenExpr(_7492_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3443, out _out3444, out _out3445);
              _7496_onExpr = _out3443;
              _7497_onOwned = _out3444;
              _7498_recIdents = _out3445;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7496_onExpr)).Sel(DCOMP.__default.escapeIdent(_7491_field));
              RAST._IExpr _out3446;
              DCOMP._IOwnership _out3447;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3446, out _out3447);
              r = _out3446;
              resultingOwnership = _out3447;
              readIdents = _7498_recIdents;
            }
            return ;
          }
        } else if (_source337.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _7499___mcc_h94 = _source337.dtor_elements;
          bool _7500_isDatatype = _7380___mcc_h51;
          bool _7501_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7502_field = _7378___mcc_h49;
          DAST._IExpression _7503_on = _7377___mcc_h48;
          {
            if ((_7500_isDatatype) || (_7501_isConstant)) {
              RAST._IExpr _7504_onExpr;
              DCOMP._IOwnership _7505_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7506_recIdents;
              RAST._IExpr _out3448;
              DCOMP._IOwnership _out3449;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3450;
              DCOMP.COMP.GenExpr(_7503_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3448, out _out3449, out _out3450);
              _7504_onExpr = _out3448;
              _7505_onOwned = _out3449;
              _7506_recIdents = _out3450;
              r = ((_7504_onExpr).Sel(DCOMP.__default.escapeIdent(_7502_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3451;
              DCOMP._IOwnership _out3452;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3451, out _out3452);
              r = _out3451;
              resultingOwnership = _out3452;
              readIdents = _7506_recIdents;
            } else {
              RAST._IExpr _7507_onExpr;
              DCOMP._IOwnership _7508_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7509_recIdents;
              RAST._IExpr _out3453;
              DCOMP._IOwnership _out3454;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3455;
              DCOMP.COMP.GenExpr(_7503_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3453, out _out3454, out _out3455);
              _7507_onExpr = _out3453;
              _7508_onOwned = _out3454;
              _7509_recIdents = _out3455;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7507_onExpr)).Sel(DCOMP.__default.escapeIdent(_7502_field));
              RAST._IExpr _out3456;
              DCOMP._IOwnership _out3457;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3456, out _out3457);
              r = _out3456;
              resultingOwnership = _out3457;
              readIdents = _7509_recIdents;
            }
            return ;
          }
        } else if (_source337.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _7510___mcc_h96 = _source337.dtor_elements;
          bool _7511_isDatatype = _7380___mcc_h51;
          bool _7512_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7513_field = _7378___mcc_h49;
          DAST._IExpression _7514_on = _7377___mcc_h48;
          {
            if ((_7511_isDatatype) || (_7512_isConstant)) {
              RAST._IExpr _7515_onExpr;
              DCOMP._IOwnership _7516_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7517_recIdents;
              RAST._IExpr _out3458;
              DCOMP._IOwnership _out3459;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3460;
              DCOMP.COMP.GenExpr(_7514_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3458, out _out3459, out _out3460);
              _7515_onExpr = _out3458;
              _7516_onOwned = _out3459;
              _7517_recIdents = _out3460;
              r = ((_7515_onExpr).Sel(DCOMP.__default.escapeIdent(_7513_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3461;
              DCOMP._IOwnership _out3462;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3461, out _out3462);
              r = _out3461;
              resultingOwnership = _out3462;
              readIdents = _7517_recIdents;
            } else {
              RAST._IExpr _7518_onExpr;
              DCOMP._IOwnership _7519_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7520_recIdents;
              RAST._IExpr _out3463;
              DCOMP._IOwnership _out3464;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3465;
              DCOMP.COMP.GenExpr(_7514_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3463, out _out3464, out _out3465);
              _7518_onExpr = _out3463;
              _7519_onOwned = _out3464;
              _7520_recIdents = _out3465;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7518_onExpr)).Sel(DCOMP.__default.escapeIdent(_7513_field));
              RAST._IExpr _out3466;
              DCOMP._IOwnership _out3467;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3466, out _out3467);
              r = _out3466;
              resultingOwnership = _out3467;
              readIdents = _7520_recIdents;
            }
            return ;
          }
        } else if (_source337.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7521___mcc_h98 = _source337.dtor_mapElems;
          bool _7522_isDatatype = _7380___mcc_h51;
          bool _7523_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7524_field = _7378___mcc_h49;
          DAST._IExpression _7525_on = _7377___mcc_h48;
          {
            if ((_7522_isDatatype) || (_7523_isConstant)) {
              RAST._IExpr _7526_onExpr;
              DCOMP._IOwnership _7527_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7528_recIdents;
              RAST._IExpr _out3468;
              DCOMP._IOwnership _out3469;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3470;
              DCOMP.COMP.GenExpr(_7525_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3468, out _out3469, out _out3470);
              _7526_onExpr = _out3468;
              _7527_onOwned = _out3469;
              _7528_recIdents = _out3470;
              r = ((_7526_onExpr).Sel(DCOMP.__default.escapeIdent(_7524_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3471;
              DCOMP._IOwnership _out3472;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3471, out _out3472);
              r = _out3471;
              resultingOwnership = _out3472;
              readIdents = _7528_recIdents;
            } else {
              RAST._IExpr _7529_onExpr;
              DCOMP._IOwnership _7530_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7531_recIdents;
              RAST._IExpr _out3473;
              DCOMP._IOwnership _out3474;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3475;
              DCOMP.COMP.GenExpr(_7525_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3473, out _out3474, out _out3475);
              _7529_onExpr = _out3473;
              _7530_onOwned = _out3474;
              _7531_recIdents = _out3475;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7529_onExpr)).Sel(DCOMP.__default.escapeIdent(_7524_field));
              RAST._IExpr _out3476;
              DCOMP._IOwnership _out3477;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3476, out _out3477);
              r = _out3476;
              resultingOwnership = _out3477;
              readIdents = _7531_recIdents;
            }
            return ;
          }
        } else if (_source337.is_MapBuilder) {
          DAST._IType _7532___mcc_h100 = _source337.dtor_keyType;
          DAST._IType _7533___mcc_h101 = _source337.dtor_valueType;
          bool _7534_isDatatype = _7380___mcc_h51;
          bool _7535_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7536_field = _7378___mcc_h49;
          DAST._IExpression _7537_on = _7377___mcc_h48;
          {
            if ((_7534_isDatatype) || (_7535_isConstant)) {
              RAST._IExpr _7538_onExpr;
              DCOMP._IOwnership _7539_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7540_recIdents;
              RAST._IExpr _out3478;
              DCOMP._IOwnership _out3479;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3480;
              DCOMP.COMP.GenExpr(_7537_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3478, out _out3479, out _out3480);
              _7538_onExpr = _out3478;
              _7539_onOwned = _out3479;
              _7540_recIdents = _out3480;
              r = ((_7538_onExpr).Sel(DCOMP.__default.escapeIdent(_7536_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3481;
              DCOMP._IOwnership _out3482;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3481, out _out3482);
              r = _out3481;
              resultingOwnership = _out3482;
              readIdents = _7540_recIdents;
            } else {
              RAST._IExpr _7541_onExpr;
              DCOMP._IOwnership _7542_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7543_recIdents;
              RAST._IExpr _out3483;
              DCOMP._IOwnership _out3484;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3485;
              DCOMP.COMP.GenExpr(_7537_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3483, out _out3484, out _out3485);
              _7541_onExpr = _out3483;
              _7542_onOwned = _out3484;
              _7543_recIdents = _out3485;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7541_onExpr)).Sel(DCOMP.__default.escapeIdent(_7536_field));
              RAST._IExpr _out3486;
              DCOMP._IOwnership _out3487;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3486, out _out3487);
              r = _out3486;
              resultingOwnership = _out3487;
              readIdents = _7543_recIdents;
            }
            return ;
          }
        } else if (_source337.is_SeqUpdate) {
          DAST._IExpression _7544___mcc_h104 = _source337.dtor_expr;
          DAST._IExpression _7545___mcc_h105 = _source337.dtor_indexExpr;
          DAST._IExpression _7546___mcc_h106 = _source337.dtor_value;
          bool _7547_isDatatype = _7380___mcc_h51;
          bool _7548_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7549_field = _7378___mcc_h49;
          DAST._IExpression _7550_on = _7377___mcc_h48;
          {
            if ((_7547_isDatatype) || (_7548_isConstant)) {
              RAST._IExpr _7551_onExpr;
              DCOMP._IOwnership _7552_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7553_recIdents;
              RAST._IExpr _out3488;
              DCOMP._IOwnership _out3489;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3490;
              DCOMP.COMP.GenExpr(_7550_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3488, out _out3489, out _out3490);
              _7551_onExpr = _out3488;
              _7552_onOwned = _out3489;
              _7553_recIdents = _out3490;
              r = ((_7551_onExpr).Sel(DCOMP.__default.escapeIdent(_7549_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3491;
              DCOMP._IOwnership _out3492;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3491, out _out3492);
              r = _out3491;
              resultingOwnership = _out3492;
              readIdents = _7553_recIdents;
            } else {
              RAST._IExpr _7554_onExpr;
              DCOMP._IOwnership _7555_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7556_recIdents;
              RAST._IExpr _out3493;
              DCOMP._IOwnership _out3494;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3495;
              DCOMP.COMP.GenExpr(_7550_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3493, out _out3494, out _out3495);
              _7554_onExpr = _out3493;
              _7555_onOwned = _out3494;
              _7556_recIdents = _out3495;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7554_onExpr)).Sel(DCOMP.__default.escapeIdent(_7549_field));
              RAST._IExpr _out3496;
              DCOMP._IOwnership _out3497;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3496, out _out3497);
              r = _out3496;
              resultingOwnership = _out3497;
              readIdents = _7556_recIdents;
            }
            return ;
          }
        } else if (_source337.is_MapUpdate) {
          DAST._IExpression _7557___mcc_h110 = _source337.dtor_expr;
          DAST._IExpression _7558___mcc_h111 = _source337.dtor_indexExpr;
          DAST._IExpression _7559___mcc_h112 = _source337.dtor_value;
          bool _7560_isDatatype = _7380___mcc_h51;
          bool _7561_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7562_field = _7378___mcc_h49;
          DAST._IExpression _7563_on = _7377___mcc_h48;
          {
            if ((_7560_isDatatype) || (_7561_isConstant)) {
              RAST._IExpr _7564_onExpr;
              DCOMP._IOwnership _7565_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7566_recIdents;
              RAST._IExpr _out3498;
              DCOMP._IOwnership _out3499;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3500;
              DCOMP.COMP.GenExpr(_7563_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3498, out _out3499, out _out3500);
              _7564_onExpr = _out3498;
              _7565_onOwned = _out3499;
              _7566_recIdents = _out3500;
              r = ((_7564_onExpr).Sel(DCOMP.__default.escapeIdent(_7562_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3501;
              DCOMP._IOwnership _out3502;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3501, out _out3502);
              r = _out3501;
              resultingOwnership = _out3502;
              readIdents = _7566_recIdents;
            } else {
              RAST._IExpr _7567_onExpr;
              DCOMP._IOwnership _7568_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7569_recIdents;
              RAST._IExpr _out3503;
              DCOMP._IOwnership _out3504;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3505;
              DCOMP.COMP.GenExpr(_7563_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3503, out _out3504, out _out3505);
              _7567_onExpr = _out3503;
              _7568_onOwned = _out3504;
              _7569_recIdents = _out3505;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7567_onExpr)).Sel(DCOMP.__default.escapeIdent(_7562_field));
              RAST._IExpr _out3506;
              DCOMP._IOwnership _out3507;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3506, out _out3507);
              r = _out3506;
              resultingOwnership = _out3507;
              readIdents = _7569_recIdents;
            }
            return ;
          }
        } else if (_source337.is_SetBuilder) {
          DAST._IType _7570___mcc_h116 = _source337.dtor_elemType;
          bool _7571_isDatatype = _7380___mcc_h51;
          bool _7572_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7573_field = _7378___mcc_h49;
          DAST._IExpression _7574_on = _7377___mcc_h48;
          {
            if ((_7571_isDatatype) || (_7572_isConstant)) {
              RAST._IExpr _7575_onExpr;
              DCOMP._IOwnership _7576_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7577_recIdents;
              RAST._IExpr _out3508;
              DCOMP._IOwnership _out3509;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3510;
              DCOMP.COMP.GenExpr(_7574_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3508, out _out3509, out _out3510);
              _7575_onExpr = _out3508;
              _7576_onOwned = _out3509;
              _7577_recIdents = _out3510;
              r = ((_7575_onExpr).Sel(DCOMP.__default.escapeIdent(_7573_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3511;
              DCOMP._IOwnership _out3512;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3511, out _out3512);
              r = _out3511;
              resultingOwnership = _out3512;
              readIdents = _7577_recIdents;
            } else {
              RAST._IExpr _7578_onExpr;
              DCOMP._IOwnership _7579_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7580_recIdents;
              RAST._IExpr _out3513;
              DCOMP._IOwnership _out3514;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3515;
              DCOMP.COMP.GenExpr(_7574_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3513, out _out3514, out _out3515);
              _7578_onExpr = _out3513;
              _7579_onOwned = _out3514;
              _7580_recIdents = _out3515;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7578_onExpr)).Sel(DCOMP.__default.escapeIdent(_7573_field));
              RAST._IExpr _out3516;
              DCOMP._IOwnership _out3517;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3516, out _out3517);
              r = _out3516;
              resultingOwnership = _out3517;
              readIdents = _7580_recIdents;
            }
            return ;
          }
        } else if (_source337.is_ToMultiset) {
          DAST._IExpression _7581___mcc_h118 = _source337.dtor_ToMultiset_a0;
          bool _7582_isDatatype = _7380___mcc_h51;
          bool _7583_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7584_field = _7378___mcc_h49;
          DAST._IExpression _7585_on = _7377___mcc_h48;
          {
            if ((_7582_isDatatype) || (_7583_isConstant)) {
              RAST._IExpr _7586_onExpr;
              DCOMP._IOwnership _7587_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7588_recIdents;
              RAST._IExpr _out3518;
              DCOMP._IOwnership _out3519;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3520;
              DCOMP.COMP.GenExpr(_7585_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3518, out _out3519, out _out3520);
              _7586_onExpr = _out3518;
              _7587_onOwned = _out3519;
              _7588_recIdents = _out3520;
              r = ((_7586_onExpr).Sel(DCOMP.__default.escapeIdent(_7584_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3521;
              DCOMP._IOwnership _out3522;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3521, out _out3522);
              r = _out3521;
              resultingOwnership = _out3522;
              readIdents = _7588_recIdents;
            } else {
              RAST._IExpr _7589_onExpr;
              DCOMP._IOwnership _7590_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7591_recIdents;
              RAST._IExpr _out3523;
              DCOMP._IOwnership _out3524;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3525;
              DCOMP.COMP.GenExpr(_7585_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3523, out _out3524, out _out3525);
              _7589_onExpr = _out3523;
              _7590_onOwned = _out3524;
              _7591_recIdents = _out3525;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7589_onExpr)).Sel(DCOMP.__default.escapeIdent(_7584_field));
              RAST._IExpr _out3526;
              DCOMP._IOwnership _out3527;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3526, out _out3527);
              r = _out3526;
              resultingOwnership = _out3527;
              readIdents = _7591_recIdents;
            }
            return ;
          }
        } else if (_source337.is_This) {
          bool _7592_isDatatype = _7380___mcc_h51;
          bool _7593_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7594_field = _7378___mcc_h49;
          DAST._IExpression _7595_on = _7377___mcc_h48;
          {
            if ((_7592_isDatatype) || (_7593_isConstant)) {
              RAST._IExpr _7596_onExpr;
              DCOMP._IOwnership _7597_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7598_recIdents;
              RAST._IExpr _out3528;
              DCOMP._IOwnership _out3529;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3530;
              DCOMP.COMP.GenExpr(_7595_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3528, out _out3529, out _out3530);
              _7596_onExpr = _out3528;
              _7597_onOwned = _out3529;
              _7598_recIdents = _out3530;
              r = ((_7596_onExpr).Sel(DCOMP.__default.escapeIdent(_7594_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3531;
              DCOMP._IOwnership _out3532;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3531, out _out3532);
              r = _out3531;
              resultingOwnership = _out3532;
              readIdents = _7598_recIdents;
            } else {
              RAST._IExpr _7599_onExpr;
              DCOMP._IOwnership _7600_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7601_recIdents;
              RAST._IExpr _out3533;
              DCOMP._IOwnership _out3534;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3535;
              DCOMP.COMP.GenExpr(_7595_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3533, out _out3534, out _out3535);
              _7599_onExpr = _out3533;
              _7600_onOwned = _out3534;
              _7601_recIdents = _out3535;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7599_onExpr)).Sel(DCOMP.__default.escapeIdent(_7594_field));
              RAST._IExpr _out3536;
              DCOMP._IOwnership _out3537;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3536, out _out3537);
              r = _out3536;
              resultingOwnership = _out3537;
              readIdents = _7601_recIdents;
            }
            return ;
          }
        } else if (_source337.is_Ite) {
          DAST._IExpression _7602___mcc_h120 = _source337.dtor_cond;
          DAST._IExpression _7603___mcc_h121 = _source337.dtor_thn;
          DAST._IExpression _7604___mcc_h122 = _source337.dtor_els;
          bool _7605_isDatatype = _7380___mcc_h51;
          bool _7606_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7607_field = _7378___mcc_h49;
          DAST._IExpression _7608_on = _7377___mcc_h48;
          {
            if ((_7605_isDatatype) || (_7606_isConstant)) {
              RAST._IExpr _7609_onExpr;
              DCOMP._IOwnership _7610_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7611_recIdents;
              RAST._IExpr _out3538;
              DCOMP._IOwnership _out3539;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3540;
              DCOMP.COMP.GenExpr(_7608_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3538, out _out3539, out _out3540);
              _7609_onExpr = _out3538;
              _7610_onOwned = _out3539;
              _7611_recIdents = _out3540;
              r = ((_7609_onExpr).Sel(DCOMP.__default.escapeIdent(_7607_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3541;
              DCOMP._IOwnership _out3542;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3541, out _out3542);
              r = _out3541;
              resultingOwnership = _out3542;
              readIdents = _7611_recIdents;
            } else {
              RAST._IExpr _7612_onExpr;
              DCOMP._IOwnership _7613_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7614_recIdents;
              RAST._IExpr _out3543;
              DCOMP._IOwnership _out3544;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3545;
              DCOMP.COMP.GenExpr(_7608_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3543, out _out3544, out _out3545);
              _7612_onExpr = _out3543;
              _7613_onOwned = _out3544;
              _7614_recIdents = _out3545;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7612_onExpr)).Sel(DCOMP.__default.escapeIdent(_7607_field));
              RAST._IExpr _out3546;
              DCOMP._IOwnership _out3547;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3546, out _out3547);
              r = _out3546;
              resultingOwnership = _out3547;
              readIdents = _7614_recIdents;
            }
            return ;
          }
        } else if (_source337.is_UnOp) {
          DAST._IUnaryOp _7615___mcc_h126 = _source337.dtor_unOp;
          DAST._IExpression _7616___mcc_h127 = _source337.dtor_expr;
          DAST.Format._IUnOpFormat _7617___mcc_h128 = _source337.dtor_format1;
          bool _7618_isDatatype = _7380___mcc_h51;
          bool _7619_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7620_field = _7378___mcc_h49;
          DAST._IExpression _7621_on = _7377___mcc_h48;
          {
            if ((_7618_isDatatype) || (_7619_isConstant)) {
              RAST._IExpr _7622_onExpr;
              DCOMP._IOwnership _7623_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7624_recIdents;
              RAST._IExpr _out3548;
              DCOMP._IOwnership _out3549;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3550;
              DCOMP.COMP.GenExpr(_7621_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3548, out _out3549, out _out3550);
              _7622_onExpr = _out3548;
              _7623_onOwned = _out3549;
              _7624_recIdents = _out3550;
              r = ((_7622_onExpr).Sel(DCOMP.__default.escapeIdent(_7620_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3551;
              DCOMP._IOwnership _out3552;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3551, out _out3552);
              r = _out3551;
              resultingOwnership = _out3552;
              readIdents = _7624_recIdents;
            } else {
              RAST._IExpr _7625_onExpr;
              DCOMP._IOwnership _7626_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7627_recIdents;
              RAST._IExpr _out3553;
              DCOMP._IOwnership _out3554;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3555;
              DCOMP.COMP.GenExpr(_7621_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3553, out _out3554, out _out3555);
              _7625_onExpr = _out3553;
              _7626_onOwned = _out3554;
              _7627_recIdents = _out3555;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7625_onExpr)).Sel(DCOMP.__default.escapeIdent(_7620_field));
              RAST._IExpr _out3556;
              DCOMP._IOwnership _out3557;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3556, out _out3557);
              r = _out3556;
              resultingOwnership = _out3557;
              readIdents = _7627_recIdents;
            }
            return ;
          }
        } else if (_source337.is_BinOp) {
          DAST._IBinOp _7628___mcc_h132 = _source337.dtor_op;
          DAST._IExpression _7629___mcc_h133 = _source337.dtor_left;
          DAST._IExpression _7630___mcc_h134 = _source337.dtor_right;
          DAST.Format._IBinOpFormat _7631___mcc_h135 = _source337.dtor_format2;
          bool _7632_isDatatype = _7380___mcc_h51;
          bool _7633_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7634_field = _7378___mcc_h49;
          DAST._IExpression _7635_on = _7377___mcc_h48;
          {
            if ((_7632_isDatatype) || (_7633_isConstant)) {
              RAST._IExpr _7636_onExpr;
              DCOMP._IOwnership _7637_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7638_recIdents;
              RAST._IExpr _out3558;
              DCOMP._IOwnership _out3559;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3560;
              DCOMP.COMP.GenExpr(_7635_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3558, out _out3559, out _out3560);
              _7636_onExpr = _out3558;
              _7637_onOwned = _out3559;
              _7638_recIdents = _out3560;
              r = ((_7636_onExpr).Sel(DCOMP.__default.escapeIdent(_7634_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3561;
              DCOMP._IOwnership _out3562;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3561, out _out3562);
              r = _out3561;
              resultingOwnership = _out3562;
              readIdents = _7638_recIdents;
            } else {
              RAST._IExpr _7639_onExpr;
              DCOMP._IOwnership _7640_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7641_recIdents;
              RAST._IExpr _out3563;
              DCOMP._IOwnership _out3564;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3565;
              DCOMP.COMP.GenExpr(_7635_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3563, out _out3564, out _out3565);
              _7639_onExpr = _out3563;
              _7640_onOwned = _out3564;
              _7641_recIdents = _out3565;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7639_onExpr)).Sel(DCOMP.__default.escapeIdent(_7634_field));
              RAST._IExpr _out3566;
              DCOMP._IOwnership _out3567;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3566, out _out3567);
              r = _out3566;
              resultingOwnership = _out3567;
              readIdents = _7641_recIdents;
            }
            return ;
          }
        } else if (_source337.is_ArrayLen) {
          DAST._IExpression _7642___mcc_h140 = _source337.dtor_expr;
          BigInteger _7643___mcc_h141 = _source337.dtor_dim;
          bool _7644_isDatatype = _7380___mcc_h51;
          bool _7645_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7646_field = _7378___mcc_h49;
          DAST._IExpression _7647_on = _7377___mcc_h48;
          {
            if ((_7644_isDatatype) || (_7645_isConstant)) {
              RAST._IExpr _7648_onExpr;
              DCOMP._IOwnership _7649_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7650_recIdents;
              RAST._IExpr _out3568;
              DCOMP._IOwnership _out3569;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3570;
              DCOMP.COMP.GenExpr(_7647_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3568, out _out3569, out _out3570);
              _7648_onExpr = _out3568;
              _7649_onOwned = _out3569;
              _7650_recIdents = _out3570;
              r = ((_7648_onExpr).Sel(DCOMP.__default.escapeIdent(_7646_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3571;
              DCOMP._IOwnership _out3572;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3571, out _out3572);
              r = _out3571;
              resultingOwnership = _out3572;
              readIdents = _7650_recIdents;
            } else {
              RAST._IExpr _7651_onExpr;
              DCOMP._IOwnership _7652_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7653_recIdents;
              RAST._IExpr _out3573;
              DCOMP._IOwnership _out3574;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3575;
              DCOMP.COMP.GenExpr(_7647_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3573, out _out3574, out _out3575);
              _7651_onExpr = _out3573;
              _7652_onOwned = _out3574;
              _7653_recIdents = _out3575;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7651_onExpr)).Sel(DCOMP.__default.escapeIdent(_7646_field));
              RAST._IExpr _out3576;
              DCOMP._IOwnership _out3577;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3576, out _out3577);
              r = _out3576;
              resultingOwnership = _out3577;
              readIdents = _7653_recIdents;
            }
            return ;
          }
        } else if (_source337.is_MapKeys) {
          DAST._IExpression _7654___mcc_h144 = _source337.dtor_expr;
          bool _7655_isDatatype = _7380___mcc_h51;
          bool _7656_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7657_field = _7378___mcc_h49;
          DAST._IExpression _7658_on = _7377___mcc_h48;
          {
            if ((_7655_isDatatype) || (_7656_isConstant)) {
              RAST._IExpr _7659_onExpr;
              DCOMP._IOwnership _7660_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7661_recIdents;
              RAST._IExpr _out3578;
              DCOMP._IOwnership _out3579;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3580;
              DCOMP.COMP.GenExpr(_7658_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3578, out _out3579, out _out3580);
              _7659_onExpr = _out3578;
              _7660_onOwned = _out3579;
              _7661_recIdents = _out3580;
              r = ((_7659_onExpr).Sel(DCOMP.__default.escapeIdent(_7657_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3581;
              DCOMP._IOwnership _out3582;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3581, out _out3582);
              r = _out3581;
              resultingOwnership = _out3582;
              readIdents = _7661_recIdents;
            } else {
              RAST._IExpr _7662_onExpr;
              DCOMP._IOwnership _7663_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7664_recIdents;
              RAST._IExpr _out3583;
              DCOMP._IOwnership _out3584;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3585;
              DCOMP.COMP.GenExpr(_7658_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3583, out _out3584, out _out3585);
              _7662_onExpr = _out3583;
              _7663_onOwned = _out3584;
              _7664_recIdents = _out3585;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7662_onExpr)).Sel(DCOMP.__default.escapeIdent(_7657_field));
              RAST._IExpr _out3586;
              DCOMP._IOwnership _out3587;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3586, out _out3587);
              r = _out3586;
              resultingOwnership = _out3587;
              readIdents = _7664_recIdents;
            }
            return ;
          }
        } else if (_source337.is_MapValues) {
          DAST._IExpression _7665___mcc_h146 = _source337.dtor_expr;
          bool _7666_isDatatype = _7380___mcc_h51;
          bool _7667_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7668_field = _7378___mcc_h49;
          DAST._IExpression _7669_on = _7377___mcc_h48;
          {
            if ((_7666_isDatatype) || (_7667_isConstant)) {
              RAST._IExpr _7670_onExpr;
              DCOMP._IOwnership _7671_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7672_recIdents;
              RAST._IExpr _out3588;
              DCOMP._IOwnership _out3589;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3590;
              DCOMP.COMP.GenExpr(_7669_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3588, out _out3589, out _out3590);
              _7670_onExpr = _out3588;
              _7671_onOwned = _out3589;
              _7672_recIdents = _out3590;
              r = ((_7670_onExpr).Sel(DCOMP.__default.escapeIdent(_7668_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3591;
              DCOMP._IOwnership _out3592;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3591, out _out3592);
              r = _out3591;
              resultingOwnership = _out3592;
              readIdents = _7672_recIdents;
            } else {
              RAST._IExpr _7673_onExpr;
              DCOMP._IOwnership _7674_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7675_recIdents;
              RAST._IExpr _out3593;
              DCOMP._IOwnership _out3594;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3595;
              DCOMP.COMP.GenExpr(_7669_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3593, out _out3594, out _out3595);
              _7673_onExpr = _out3593;
              _7674_onOwned = _out3594;
              _7675_recIdents = _out3595;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7673_onExpr)).Sel(DCOMP.__default.escapeIdent(_7668_field));
              RAST._IExpr _out3596;
              DCOMP._IOwnership _out3597;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3596, out _out3597);
              r = _out3596;
              resultingOwnership = _out3597;
              readIdents = _7675_recIdents;
            }
            return ;
          }
        } else if (_source337.is_Select) {
          DAST._IExpression _7676___mcc_h148 = _source337.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _7677___mcc_h149 = _source337.dtor_field;
          bool _7678___mcc_h150 = _source337.dtor_isConstant;
          bool _7679___mcc_h151 = _source337.dtor_onDatatype;
          bool _7680_isDatatype = _7380___mcc_h51;
          bool _7681_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7682_field = _7378___mcc_h49;
          DAST._IExpression _7683_on = _7377___mcc_h48;
          {
            if ((_7680_isDatatype) || (_7681_isConstant)) {
              RAST._IExpr _7684_onExpr;
              DCOMP._IOwnership _7685_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7686_recIdents;
              RAST._IExpr _out3598;
              DCOMP._IOwnership _out3599;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3600;
              DCOMP.COMP.GenExpr(_7683_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3598, out _out3599, out _out3600);
              _7684_onExpr = _out3598;
              _7685_onOwned = _out3599;
              _7686_recIdents = _out3600;
              r = ((_7684_onExpr).Sel(DCOMP.__default.escapeIdent(_7682_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3601;
              DCOMP._IOwnership _out3602;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3601, out _out3602);
              r = _out3601;
              resultingOwnership = _out3602;
              readIdents = _7686_recIdents;
            } else {
              RAST._IExpr _7687_onExpr;
              DCOMP._IOwnership _7688_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7689_recIdents;
              RAST._IExpr _out3603;
              DCOMP._IOwnership _out3604;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3605;
              DCOMP.COMP.GenExpr(_7683_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3603, out _out3604, out _out3605);
              _7687_onExpr = _out3603;
              _7688_onOwned = _out3604;
              _7689_recIdents = _out3605;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7687_onExpr)).Sel(DCOMP.__default.escapeIdent(_7682_field));
              RAST._IExpr _out3606;
              DCOMP._IOwnership _out3607;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3606, out _out3607);
              r = _out3606;
              resultingOwnership = _out3607;
              readIdents = _7689_recIdents;
            }
            return ;
          }
        } else if (_source337.is_SelectFn) {
          DAST._IExpression _7690___mcc_h156 = _source337.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _7691___mcc_h157 = _source337.dtor_field;
          bool _7692___mcc_h158 = _source337.dtor_onDatatype;
          bool _7693___mcc_h159 = _source337.dtor_isStatic;
          BigInteger _7694___mcc_h160 = _source337.dtor_arity;
          bool _7695_isDatatype = _7380___mcc_h51;
          bool _7696_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7697_field = _7378___mcc_h49;
          DAST._IExpression _7698_on = _7377___mcc_h48;
          {
            if ((_7695_isDatatype) || (_7696_isConstant)) {
              RAST._IExpr _7699_onExpr;
              DCOMP._IOwnership _7700_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7701_recIdents;
              RAST._IExpr _out3608;
              DCOMP._IOwnership _out3609;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3610;
              DCOMP.COMP.GenExpr(_7698_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3608, out _out3609, out _out3610);
              _7699_onExpr = _out3608;
              _7700_onOwned = _out3609;
              _7701_recIdents = _out3610;
              r = ((_7699_onExpr).Sel(DCOMP.__default.escapeIdent(_7697_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3611;
              DCOMP._IOwnership _out3612;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3611, out _out3612);
              r = _out3611;
              resultingOwnership = _out3612;
              readIdents = _7701_recIdents;
            } else {
              RAST._IExpr _7702_onExpr;
              DCOMP._IOwnership _7703_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7704_recIdents;
              RAST._IExpr _out3613;
              DCOMP._IOwnership _out3614;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3615;
              DCOMP.COMP.GenExpr(_7698_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3613, out _out3614, out _out3615);
              _7702_onExpr = _out3613;
              _7703_onOwned = _out3614;
              _7704_recIdents = _out3615;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7702_onExpr)).Sel(DCOMP.__default.escapeIdent(_7697_field));
              RAST._IExpr _out3616;
              DCOMP._IOwnership _out3617;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3616, out _out3617);
              r = _out3616;
              resultingOwnership = _out3617;
              readIdents = _7704_recIdents;
            }
            return ;
          }
        } else if (_source337.is_Index) {
          DAST._IExpression _7705___mcc_h166 = _source337.dtor_expr;
          DAST._ICollKind _7706___mcc_h167 = _source337.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _7707___mcc_h168 = _source337.dtor_indices;
          bool _7708_isDatatype = _7380___mcc_h51;
          bool _7709_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7710_field = _7378___mcc_h49;
          DAST._IExpression _7711_on = _7377___mcc_h48;
          {
            if ((_7708_isDatatype) || (_7709_isConstant)) {
              RAST._IExpr _7712_onExpr;
              DCOMP._IOwnership _7713_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7714_recIdents;
              RAST._IExpr _out3618;
              DCOMP._IOwnership _out3619;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3620;
              DCOMP.COMP.GenExpr(_7711_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3618, out _out3619, out _out3620);
              _7712_onExpr = _out3618;
              _7713_onOwned = _out3619;
              _7714_recIdents = _out3620;
              r = ((_7712_onExpr).Sel(DCOMP.__default.escapeIdent(_7710_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3621;
              DCOMP._IOwnership _out3622;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3621, out _out3622);
              r = _out3621;
              resultingOwnership = _out3622;
              readIdents = _7714_recIdents;
            } else {
              RAST._IExpr _7715_onExpr;
              DCOMP._IOwnership _7716_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7717_recIdents;
              RAST._IExpr _out3623;
              DCOMP._IOwnership _out3624;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3625;
              DCOMP.COMP.GenExpr(_7711_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3623, out _out3624, out _out3625);
              _7715_onExpr = _out3623;
              _7716_onOwned = _out3624;
              _7717_recIdents = _out3625;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7715_onExpr)).Sel(DCOMP.__default.escapeIdent(_7710_field));
              RAST._IExpr _out3626;
              DCOMP._IOwnership _out3627;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3626, out _out3627);
              r = _out3626;
              resultingOwnership = _out3627;
              readIdents = _7717_recIdents;
            }
            return ;
          }
        } else if (_source337.is_IndexRange) {
          DAST._IExpression _7718___mcc_h172 = _source337.dtor_expr;
          bool _7719___mcc_h173 = _source337.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _7720___mcc_h174 = _source337.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _7721___mcc_h175 = _source337.dtor_high;
          bool _7722_isDatatype = _7380___mcc_h51;
          bool _7723_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7724_field = _7378___mcc_h49;
          DAST._IExpression _7725_on = _7377___mcc_h48;
          {
            if ((_7722_isDatatype) || (_7723_isConstant)) {
              RAST._IExpr _7726_onExpr;
              DCOMP._IOwnership _7727_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7728_recIdents;
              RAST._IExpr _out3628;
              DCOMP._IOwnership _out3629;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3630;
              DCOMP.COMP.GenExpr(_7725_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3628, out _out3629, out _out3630);
              _7726_onExpr = _out3628;
              _7727_onOwned = _out3629;
              _7728_recIdents = _out3630;
              r = ((_7726_onExpr).Sel(DCOMP.__default.escapeIdent(_7724_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3631;
              DCOMP._IOwnership _out3632;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3631, out _out3632);
              r = _out3631;
              resultingOwnership = _out3632;
              readIdents = _7728_recIdents;
            } else {
              RAST._IExpr _7729_onExpr;
              DCOMP._IOwnership _7730_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7731_recIdents;
              RAST._IExpr _out3633;
              DCOMP._IOwnership _out3634;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3635;
              DCOMP.COMP.GenExpr(_7725_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3633, out _out3634, out _out3635);
              _7729_onExpr = _out3633;
              _7730_onOwned = _out3634;
              _7731_recIdents = _out3635;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7729_onExpr)).Sel(DCOMP.__default.escapeIdent(_7724_field));
              RAST._IExpr _out3636;
              DCOMP._IOwnership _out3637;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3636, out _out3637);
              r = _out3636;
              resultingOwnership = _out3637;
              readIdents = _7731_recIdents;
            }
            return ;
          }
        } else if (_source337.is_TupleSelect) {
          DAST._IExpression _7732___mcc_h180 = _source337.dtor_expr;
          BigInteger _7733___mcc_h181 = _source337.dtor_index;
          bool _7734_isDatatype = _7380___mcc_h51;
          bool _7735_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7736_field = _7378___mcc_h49;
          DAST._IExpression _7737_on = _7377___mcc_h48;
          {
            if ((_7734_isDatatype) || (_7735_isConstant)) {
              RAST._IExpr _7738_onExpr;
              DCOMP._IOwnership _7739_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7740_recIdents;
              RAST._IExpr _out3638;
              DCOMP._IOwnership _out3639;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3640;
              DCOMP.COMP.GenExpr(_7737_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3638, out _out3639, out _out3640);
              _7738_onExpr = _out3638;
              _7739_onOwned = _out3639;
              _7740_recIdents = _out3640;
              r = ((_7738_onExpr).Sel(DCOMP.__default.escapeIdent(_7736_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3641;
              DCOMP._IOwnership _out3642;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3641, out _out3642);
              r = _out3641;
              resultingOwnership = _out3642;
              readIdents = _7740_recIdents;
            } else {
              RAST._IExpr _7741_onExpr;
              DCOMP._IOwnership _7742_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7743_recIdents;
              RAST._IExpr _out3643;
              DCOMP._IOwnership _out3644;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3645;
              DCOMP.COMP.GenExpr(_7737_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3643, out _out3644, out _out3645);
              _7741_onExpr = _out3643;
              _7742_onOwned = _out3644;
              _7743_recIdents = _out3645;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7741_onExpr)).Sel(DCOMP.__default.escapeIdent(_7736_field));
              RAST._IExpr _out3646;
              DCOMP._IOwnership _out3647;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3646, out _out3647);
              r = _out3646;
              resultingOwnership = _out3647;
              readIdents = _7743_recIdents;
            }
            return ;
          }
        } else if (_source337.is_Call) {
          DAST._IExpression _7744___mcc_h184 = _source337.dtor_on;
          DAST._ICallName _7745___mcc_h185 = _source337.dtor_callName;
          Dafny.ISequence<DAST._IType> _7746___mcc_h186 = _source337.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _7747___mcc_h187 = _source337.dtor_args;
          bool _7748_isDatatype = _7380___mcc_h51;
          bool _7749_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7750_field = _7378___mcc_h49;
          DAST._IExpression _7751_on = _7377___mcc_h48;
          {
            if ((_7748_isDatatype) || (_7749_isConstant)) {
              RAST._IExpr _7752_onExpr;
              DCOMP._IOwnership _7753_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7754_recIdents;
              RAST._IExpr _out3648;
              DCOMP._IOwnership _out3649;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3650;
              DCOMP.COMP.GenExpr(_7751_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3648, out _out3649, out _out3650);
              _7752_onExpr = _out3648;
              _7753_onOwned = _out3649;
              _7754_recIdents = _out3650;
              r = ((_7752_onExpr).Sel(DCOMP.__default.escapeIdent(_7750_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3651;
              DCOMP._IOwnership _out3652;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3651, out _out3652);
              r = _out3651;
              resultingOwnership = _out3652;
              readIdents = _7754_recIdents;
            } else {
              RAST._IExpr _7755_onExpr;
              DCOMP._IOwnership _7756_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7757_recIdents;
              RAST._IExpr _out3653;
              DCOMP._IOwnership _out3654;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3655;
              DCOMP.COMP.GenExpr(_7751_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3653, out _out3654, out _out3655);
              _7755_onExpr = _out3653;
              _7756_onOwned = _out3654;
              _7757_recIdents = _out3655;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7755_onExpr)).Sel(DCOMP.__default.escapeIdent(_7750_field));
              RAST._IExpr _out3656;
              DCOMP._IOwnership _out3657;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3656, out _out3657);
              r = _out3656;
              resultingOwnership = _out3657;
              readIdents = _7757_recIdents;
            }
            return ;
          }
        } else if (_source337.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _7758___mcc_h192 = _source337.dtor_params;
          DAST._IType _7759___mcc_h193 = _source337.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _7760___mcc_h194 = _source337.dtor_body;
          bool _7761_isDatatype = _7380___mcc_h51;
          bool _7762_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7763_field = _7378___mcc_h49;
          DAST._IExpression _7764_on = _7377___mcc_h48;
          {
            if ((_7761_isDatatype) || (_7762_isConstant)) {
              RAST._IExpr _7765_onExpr;
              DCOMP._IOwnership _7766_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7767_recIdents;
              RAST._IExpr _out3658;
              DCOMP._IOwnership _out3659;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3660;
              DCOMP.COMP.GenExpr(_7764_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3658, out _out3659, out _out3660);
              _7765_onExpr = _out3658;
              _7766_onOwned = _out3659;
              _7767_recIdents = _out3660;
              r = ((_7765_onExpr).Sel(DCOMP.__default.escapeIdent(_7763_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3661;
              DCOMP._IOwnership _out3662;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3661, out _out3662);
              r = _out3661;
              resultingOwnership = _out3662;
              readIdents = _7767_recIdents;
            } else {
              RAST._IExpr _7768_onExpr;
              DCOMP._IOwnership _7769_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7770_recIdents;
              RAST._IExpr _out3663;
              DCOMP._IOwnership _out3664;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3665;
              DCOMP.COMP.GenExpr(_7764_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3663, out _out3664, out _out3665);
              _7768_onExpr = _out3663;
              _7769_onOwned = _out3664;
              _7770_recIdents = _out3665;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7768_onExpr)).Sel(DCOMP.__default.escapeIdent(_7763_field));
              RAST._IExpr _out3666;
              DCOMP._IOwnership _out3667;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3666, out _out3667);
              r = _out3666;
              resultingOwnership = _out3667;
              readIdents = _7770_recIdents;
            }
            return ;
          }
        } else if (_source337.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7771___mcc_h198 = _source337.dtor_values;
          DAST._IType _7772___mcc_h199 = _source337.dtor_retType;
          DAST._IExpression _7773___mcc_h200 = _source337.dtor_expr;
          bool _7774_isDatatype = _7380___mcc_h51;
          bool _7775_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7776_field = _7378___mcc_h49;
          DAST._IExpression _7777_on = _7377___mcc_h48;
          {
            if ((_7774_isDatatype) || (_7775_isConstant)) {
              RAST._IExpr _7778_onExpr;
              DCOMP._IOwnership _7779_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7780_recIdents;
              RAST._IExpr _out3668;
              DCOMP._IOwnership _out3669;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3670;
              DCOMP.COMP.GenExpr(_7777_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3668, out _out3669, out _out3670);
              _7778_onExpr = _out3668;
              _7779_onOwned = _out3669;
              _7780_recIdents = _out3670;
              r = ((_7778_onExpr).Sel(DCOMP.__default.escapeIdent(_7776_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3671;
              DCOMP._IOwnership _out3672;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3671, out _out3672);
              r = _out3671;
              resultingOwnership = _out3672;
              readIdents = _7780_recIdents;
            } else {
              RAST._IExpr _7781_onExpr;
              DCOMP._IOwnership _7782_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7783_recIdents;
              RAST._IExpr _out3673;
              DCOMP._IOwnership _out3674;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3675;
              DCOMP.COMP.GenExpr(_7777_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3673, out _out3674, out _out3675);
              _7781_onExpr = _out3673;
              _7782_onOwned = _out3674;
              _7783_recIdents = _out3675;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7781_onExpr)).Sel(DCOMP.__default.escapeIdent(_7776_field));
              RAST._IExpr _out3676;
              DCOMP._IOwnership _out3677;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3676, out _out3677);
              r = _out3676;
              resultingOwnership = _out3677;
              readIdents = _7783_recIdents;
            }
            return ;
          }
        } else if (_source337.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _7784___mcc_h204 = _source337.dtor_name;
          DAST._IType _7785___mcc_h205 = _source337.dtor_typ;
          DAST._IExpression _7786___mcc_h206 = _source337.dtor_value;
          DAST._IExpression _7787___mcc_h207 = _source337.dtor_iifeBody;
          bool _7788_isDatatype = _7380___mcc_h51;
          bool _7789_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7790_field = _7378___mcc_h49;
          DAST._IExpression _7791_on = _7377___mcc_h48;
          {
            if ((_7788_isDatatype) || (_7789_isConstant)) {
              RAST._IExpr _7792_onExpr;
              DCOMP._IOwnership _7793_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7794_recIdents;
              RAST._IExpr _out3678;
              DCOMP._IOwnership _out3679;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3680;
              DCOMP.COMP.GenExpr(_7791_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3678, out _out3679, out _out3680);
              _7792_onExpr = _out3678;
              _7793_onOwned = _out3679;
              _7794_recIdents = _out3680;
              r = ((_7792_onExpr).Sel(DCOMP.__default.escapeIdent(_7790_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3681;
              DCOMP._IOwnership _out3682;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3681, out _out3682);
              r = _out3681;
              resultingOwnership = _out3682;
              readIdents = _7794_recIdents;
            } else {
              RAST._IExpr _7795_onExpr;
              DCOMP._IOwnership _7796_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7797_recIdents;
              RAST._IExpr _out3683;
              DCOMP._IOwnership _out3684;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3685;
              DCOMP.COMP.GenExpr(_7791_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3683, out _out3684, out _out3685);
              _7795_onExpr = _out3683;
              _7796_onOwned = _out3684;
              _7797_recIdents = _out3685;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7795_onExpr)).Sel(DCOMP.__default.escapeIdent(_7790_field));
              RAST._IExpr _out3686;
              DCOMP._IOwnership _out3687;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3686, out _out3687);
              r = _out3686;
              resultingOwnership = _out3687;
              readIdents = _7797_recIdents;
            }
            return ;
          }
        } else if (_source337.is_Apply) {
          DAST._IExpression _7798___mcc_h212 = _source337.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _7799___mcc_h213 = _source337.dtor_args;
          bool _7800_isDatatype = _7380___mcc_h51;
          bool _7801_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7802_field = _7378___mcc_h49;
          DAST._IExpression _7803_on = _7377___mcc_h48;
          {
            if ((_7800_isDatatype) || (_7801_isConstant)) {
              RAST._IExpr _7804_onExpr;
              DCOMP._IOwnership _7805_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7806_recIdents;
              RAST._IExpr _out3688;
              DCOMP._IOwnership _out3689;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3690;
              DCOMP.COMP.GenExpr(_7803_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3688, out _out3689, out _out3690);
              _7804_onExpr = _out3688;
              _7805_onOwned = _out3689;
              _7806_recIdents = _out3690;
              r = ((_7804_onExpr).Sel(DCOMP.__default.escapeIdent(_7802_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3691;
              DCOMP._IOwnership _out3692;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3691, out _out3692);
              r = _out3691;
              resultingOwnership = _out3692;
              readIdents = _7806_recIdents;
            } else {
              RAST._IExpr _7807_onExpr;
              DCOMP._IOwnership _7808_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7809_recIdents;
              RAST._IExpr _out3693;
              DCOMP._IOwnership _out3694;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3695;
              DCOMP.COMP.GenExpr(_7803_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3693, out _out3694, out _out3695);
              _7807_onExpr = _out3693;
              _7808_onOwned = _out3694;
              _7809_recIdents = _out3695;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7807_onExpr)).Sel(DCOMP.__default.escapeIdent(_7802_field));
              RAST._IExpr _out3696;
              DCOMP._IOwnership _out3697;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3696, out _out3697);
              r = _out3696;
              resultingOwnership = _out3697;
              readIdents = _7809_recIdents;
            }
            return ;
          }
        } else if (_source337.is_TypeTest) {
          DAST._IExpression _7810___mcc_h216 = _source337.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7811___mcc_h217 = _source337.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _7812___mcc_h218 = _source337.dtor_variant;
          bool _7813_isDatatype = _7380___mcc_h51;
          bool _7814_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7815_field = _7378___mcc_h49;
          DAST._IExpression _7816_on = _7377___mcc_h48;
          {
            if ((_7813_isDatatype) || (_7814_isConstant)) {
              RAST._IExpr _7817_onExpr;
              DCOMP._IOwnership _7818_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7819_recIdents;
              RAST._IExpr _out3698;
              DCOMP._IOwnership _out3699;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3700;
              DCOMP.COMP.GenExpr(_7816_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3698, out _out3699, out _out3700);
              _7817_onExpr = _out3698;
              _7818_onOwned = _out3699;
              _7819_recIdents = _out3700;
              r = ((_7817_onExpr).Sel(DCOMP.__default.escapeIdent(_7815_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3701;
              DCOMP._IOwnership _out3702;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3701, out _out3702);
              r = _out3701;
              resultingOwnership = _out3702;
              readIdents = _7819_recIdents;
            } else {
              RAST._IExpr _7820_onExpr;
              DCOMP._IOwnership _7821_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7822_recIdents;
              RAST._IExpr _out3703;
              DCOMP._IOwnership _out3704;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3705;
              DCOMP.COMP.GenExpr(_7816_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3703, out _out3704, out _out3705);
              _7820_onExpr = _out3703;
              _7821_onOwned = _out3704;
              _7822_recIdents = _out3705;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7820_onExpr)).Sel(DCOMP.__default.escapeIdent(_7815_field));
              RAST._IExpr _out3706;
              DCOMP._IOwnership _out3707;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3706, out _out3707);
              r = _out3706;
              resultingOwnership = _out3707;
              readIdents = _7822_recIdents;
            }
            return ;
          }
        } else if (_source337.is_InitializationValue) {
          DAST._IType _7823___mcc_h222 = _source337.dtor_typ;
          bool _7824_isDatatype = _7380___mcc_h51;
          bool _7825_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7826_field = _7378___mcc_h49;
          DAST._IExpression _7827_on = _7377___mcc_h48;
          {
            if ((_7824_isDatatype) || (_7825_isConstant)) {
              RAST._IExpr _7828_onExpr;
              DCOMP._IOwnership _7829_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7830_recIdents;
              RAST._IExpr _out3708;
              DCOMP._IOwnership _out3709;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3710;
              DCOMP.COMP.GenExpr(_7827_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3708, out _out3709, out _out3710);
              _7828_onExpr = _out3708;
              _7829_onOwned = _out3709;
              _7830_recIdents = _out3710;
              r = ((_7828_onExpr).Sel(DCOMP.__default.escapeIdent(_7826_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3711;
              DCOMP._IOwnership _out3712;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3711, out _out3712);
              r = _out3711;
              resultingOwnership = _out3712;
              readIdents = _7830_recIdents;
            } else {
              RAST._IExpr _7831_onExpr;
              DCOMP._IOwnership _7832_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7833_recIdents;
              RAST._IExpr _out3713;
              DCOMP._IOwnership _out3714;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3715;
              DCOMP.COMP.GenExpr(_7827_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3713, out _out3714, out _out3715);
              _7831_onExpr = _out3713;
              _7832_onOwned = _out3714;
              _7833_recIdents = _out3715;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7831_onExpr)).Sel(DCOMP.__default.escapeIdent(_7826_field));
              RAST._IExpr _out3716;
              DCOMP._IOwnership _out3717;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3716, out _out3717);
              r = _out3716;
              resultingOwnership = _out3717;
              readIdents = _7833_recIdents;
            }
            return ;
          }
        } else if (_source337.is_BoolBoundedPool) {
          bool _7834_isDatatype = _7380___mcc_h51;
          bool _7835_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7836_field = _7378___mcc_h49;
          DAST._IExpression _7837_on = _7377___mcc_h48;
          {
            if ((_7834_isDatatype) || (_7835_isConstant)) {
              RAST._IExpr _7838_onExpr;
              DCOMP._IOwnership _7839_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7840_recIdents;
              RAST._IExpr _out3718;
              DCOMP._IOwnership _out3719;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3720;
              DCOMP.COMP.GenExpr(_7837_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3718, out _out3719, out _out3720);
              _7838_onExpr = _out3718;
              _7839_onOwned = _out3719;
              _7840_recIdents = _out3720;
              r = ((_7838_onExpr).Sel(DCOMP.__default.escapeIdent(_7836_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3721;
              DCOMP._IOwnership _out3722;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3721, out _out3722);
              r = _out3721;
              resultingOwnership = _out3722;
              readIdents = _7840_recIdents;
            } else {
              RAST._IExpr _7841_onExpr;
              DCOMP._IOwnership _7842_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7843_recIdents;
              RAST._IExpr _out3723;
              DCOMP._IOwnership _out3724;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3725;
              DCOMP.COMP.GenExpr(_7837_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3723, out _out3724, out _out3725);
              _7841_onExpr = _out3723;
              _7842_onOwned = _out3724;
              _7843_recIdents = _out3725;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7841_onExpr)).Sel(DCOMP.__default.escapeIdent(_7836_field));
              RAST._IExpr _out3726;
              DCOMP._IOwnership _out3727;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3726, out _out3727);
              r = _out3726;
              resultingOwnership = _out3727;
              readIdents = _7843_recIdents;
            }
            return ;
          }
        } else if (_source337.is_SetBoundedPool) {
          DAST._IExpression _7844___mcc_h224 = _source337.dtor_of;
          bool _7845_isDatatype = _7380___mcc_h51;
          bool _7846_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7847_field = _7378___mcc_h49;
          DAST._IExpression _7848_on = _7377___mcc_h48;
          {
            if ((_7845_isDatatype) || (_7846_isConstant)) {
              RAST._IExpr _7849_onExpr;
              DCOMP._IOwnership _7850_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7851_recIdents;
              RAST._IExpr _out3728;
              DCOMP._IOwnership _out3729;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3730;
              DCOMP.COMP.GenExpr(_7848_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3728, out _out3729, out _out3730);
              _7849_onExpr = _out3728;
              _7850_onOwned = _out3729;
              _7851_recIdents = _out3730;
              r = ((_7849_onExpr).Sel(DCOMP.__default.escapeIdent(_7847_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3731;
              DCOMP._IOwnership _out3732;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3731, out _out3732);
              r = _out3731;
              resultingOwnership = _out3732;
              readIdents = _7851_recIdents;
            } else {
              RAST._IExpr _7852_onExpr;
              DCOMP._IOwnership _7853_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7854_recIdents;
              RAST._IExpr _out3733;
              DCOMP._IOwnership _out3734;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3735;
              DCOMP.COMP.GenExpr(_7848_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3733, out _out3734, out _out3735);
              _7852_onExpr = _out3733;
              _7853_onOwned = _out3734;
              _7854_recIdents = _out3735;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7852_onExpr)).Sel(DCOMP.__default.escapeIdent(_7847_field));
              RAST._IExpr _out3736;
              DCOMP._IOwnership _out3737;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3736, out _out3737);
              r = _out3736;
              resultingOwnership = _out3737;
              readIdents = _7854_recIdents;
            }
            return ;
          }
        } else if (_source337.is_SeqBoundedPool) {
          DAST._IExpression _7855___mcc_h226 = _source337.dtor_of;
          bool _7856___mcc_h227 = _source337.dtor_includeDuplicates;
          bool _7857_isDatatype = _7380___mcc_h51;
          bool _7858_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7859_field = _7378___mcc_h49;
          DAST._IExpression _7860_on = _7377___mcc_h48;
          {
            if ((_7857_isDatatype) || (_7858_isConstant)) {
              RAST._IExpr _7861_onExpr;
              DCOMP._IOwnership _7862_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7863_recIdents;
              RAST._IExpr _out3738;
              DCOMP._IOwnership _out3739;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3740;
              DCOMP.COMP.GenExpr(_7860_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3738, out _out3739, out _out3740);
              _7861_onExpr = _out3738;
              _7862_onOwned = _out3739;
              _7863_recIdents = _out3740;
              r = ((_7861_onExpr).Sel(DCOMP.__default.escapeIdent(_7859_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3741;
              DCOMP._IOwnership _out3742;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3741, out _out3742);
              r = _out3741;
              resultingOwnership = _out3742;
              readIdents = _7863_recIdents;
            } else {
              RAST._IExpr _7864_onExpr;
              DCOMP._IOwnership _7865_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7866_recIdents;
              RAST._IExpr _out3743;
              DCOMP._IOwnership _out3744;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3745;
              DCOMP.COMP.GenExpr(_7860_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3743, out _out3744, out _out3745);
              _7864_onExpr = _out3743;
              _7865_onOwned = _out3744;
              _7866_recIdents = _out3745;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7864_onExpr)).Sel(DCOMP.__default.escapeIdent(_7859_field));
              RAST._IExpr _out3746;
              DCOMP._IOwnership _out3747;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3746, out _out3747);
              r = _out3746;
              resultingOwnership = _out3747;
              readIdents = _7866_recIdents;
            }
            return ;
          }
        } else {
          DAST._IExpression _7867___mcc_h230 = _source337.dtor_lo;
          DAST._IExpression _7868___mcc_h231 = _source337.dtor_hi;
          bool _7869_isDatatype = _7380___mcc_h51;
          bool _7870_isConstant = _7379___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7871_field = _7378___mcc_h49;
          DAST._IExpression _7872_on = _7377___mcc_h48;
          {
            if ((_7869_isDatatype) || (_7870_isConstant)) {
              RAST._IExpr _7873_onExpr;
              DCOMP._IOwnership _7874_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7875_recIdents;
              RAST._IExpr _out3748;
              DCOMP._IOwnership _out3749;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3750;
              DCOMP.COMP.GenExpr(_7872_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3748, out _out3749, out _out3750);
              _7873_onExpr = _out3748;
              _7874_onOwned = _out3749;
              _7875_recIdents = _out3750;
              r = ((_7873_onExpr).Sel(DCOMP.__default.escapeIdent(_7871_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3751;
              DCOMP._IOwnership _out3752;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3751, out _out3752);
              r = _out3751;
              resultingOwnership = _out3752;
              readIdents = _7875_recIdents;
            } else {
              RAST._IExpr _7876_onExpr;
              DCOMP._IOwnership _7877_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7878_recIdents;
              RAST._IExpr _out3753;
              DCOMP._IOwnership _out3754;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3755;
              DCOMP.COMP.GenExpr(_7872_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3753, out _out3754, out _out3755);
              _7876_onExpr = _out3753;
              _7877_onOwned = _out3754;
              _7878_recIdents = _out3755;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7876_onExpr)).Sel(DCOMP.__default.escapeIdent(_7871_field));
              RAST._IExpr _out3756;
              DCOMP._IOwnership _out3757;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3756, out _out3757);
              r = _out3756;
              resultingOwnership = _out3757;
              readIdents = _7878_recIdents;
            }
            return ;
          }
        }
      } else if (_source334.is_SelectFn) {
        DAST._IExpression _7879___mcc_h234 = _source334.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _7880___mcc_h235 = _source334.dtor_field;
        bool _7881___mcc_h236 = _source334.dtor_onDatatype;
        bool _7882___mcc_h237 = _source334.dtor_isStatic;
        BigInteger _7883___mcc_h238 = _source334.dtor_arity;
        BigInteger _7884_arity = _7883___mcc_h238;
        bool _7885_isStatic = _7882___mcc_h237;
        bool _7886_isDatatype = _7881___mcc_h236;
        Dafny.ISequence<Dafny.Rune> _7887_field = _7880___mcc_h235;
        DAST._IExpression _7888_on = _7879___mcc_h234;
        {
          RAST._IExpr _7889_onExpr;
          DCOMP._IOwnership _7890_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7891_recIdents;
          RAST._IExpr _out3758;
          DCOMP._IOwnership _out3759;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3760;
          DCOMP.COMP.GenExpr(_7888_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3758, out _out3759, out _out3760);
          _7889_onExpr = _out3758;
          _7890_onOwned = _out3759;
          _7891_recIdents = _out3760;
          Dafny.ISequence<Dafny.Rune> _7892_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _7893_onString;
          _7893_onString = (_7889_onExpr)._ToString(DCOMP.__default.IND);
          if (_7885_isStatic) {
            _7892_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7893_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent(_7887_field));
          } else {
            _7892_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _7892_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7892_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _7893_onString), ((object.Equals(_7890_onOwned, DCOMP.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _7894_args;
            _7894_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _7895_i;
            _7895_i = BigInteger.Zero;
            while ((_7895_i) < (_7884_arity)) {
              if ((_7895_i).Sign == 1) {
                _7894_args = Dafny.Sequence<Dafny.Rune>.Concat(_7894_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _7894_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7894_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_7895_i));
              _7895_i = (_7895_i) + (BigInteger.One);
            }
            _7892_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7892_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _7894_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _7892_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7892_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), _7887_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _7894_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _7892_s = Dafny.Sequence<Dafny.Rune>.Concat(_7892_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _7892_s = Dafny.Sequence<Dafny.Rune>.Concat(_7892_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _7896_typeShape;
          _7896_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _7897_i;
          _7897_i = BigInteger.Zero;
          while ((_7897_i) < (_7884_arity)) {
            if ((_7897_i).Sign == 1) {
              _7896_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7896_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _7896_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7896_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _7897_i = (_7897_i) + (BigInteger.One);
          }
          _7896_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7896_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _7892_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper(::std::rc::Rc::new("), _7892_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _7896_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">)"));
          r = RAST.Expr.create_RawExpr(_7892_s);
          RAST._IExpr _out3761;
          DCOMP._IOwnership _out3762;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3761, out _out3762);
          r = _out3761;
          resultingOwnership = _out3762;
          readIdents = _7891_recIdents;
          return ;
        }
      } else if (_source334.is_Index) {
        DAST._IExpression _7898___mcc_h239 = _source334.dtor_expr;
        DAST._ICollKind _7899___mcc_h240 = _source334.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _7900___mcc_h241 = _source334.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _7901_indices = _7900___mcc_h241;
        DAST._ICollKind _7902_collKind = _7899___mcc_h240;
        DAST._IExpression _7903_on = _7898___mcc_h239;
        {
          RAST._IExpr _7904_onExpr;
          DCOMP._IOwnership _7905_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7906_recIdents;
          RAST._IExpr _out3763;
          DCOMP._IOwnership _out3764;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3765;
          DCOMP.COMP.GenExpr(_7903_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3763, out _out3764, out _out3765);
          _7904_onExpr = _out3763;
          _7905_onOwned = _out3764;
          _7906_recIdents = _out3765;
          readIdents = _7906_recIdents;
          r = _7904_onExpr;
          BigInteger _7907_i;
          _7907_i = BigInteger.Zero;
          while ((_7907_i) < (new BigInteger((_7901_indices).Count))) {
            if (object.Equals(_7902_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _7908_idx;
            DCOMP._IOwnership _7909_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7910_recIdentsIdx;
            RAST._IExpr _out3766;
            DCOMP._IOwnership _out3767;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3768;
            DCOMP.COMP.GenExpr((_7901_indices).Select(_7907_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3766, out _out3767, out _out3768);
            _7908_idx = _out3766;
            _7909_idxOwned = _out3767;
            _7910_recIdentsIdx = _out3768;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_7908_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7910_recIdentsIdx);
            _7907_i = (_7907_i) + (BigInteger.One);
          }
          RAST._IExpr _out3769;
          DCOMP._IOwnership _out3770;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3769, out _out3770);
          r = _out3769;
          resultingOwnership = _out3770;
          return ;
        }
      } else if (_source334.is_IndexRange) {
        DAST._IExpression _7911___mcc_h242 = _source334.dtor_expr;
        bool _7912___mcc_h243 = _source334.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _7913___mcc_h244 = _source334.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _7914___mcc_h245 = _source334.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _7915_high = _7914___mcc_h245;
        Std.Wrappers._IOption<DAST._IExpression> _7916_low = _7913___mcc_h244;
        bool _7917_isArray = _7912___mcc_h243;
        DAST._IExpression _7918_on = _7911___mcc_h242;
        {
          RAST._IExpr _7919_onExpr;
          DCOMP._IOwnership _7920_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7921_recIdents;
          RAST._IExpr _out3771;
          DCOMP._IOwnership _out3772;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3773;
          DCOMP.COMP.GenExpr(_7918_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3771, out _out3772, out _out3773);
          _7919_onExpr = _out3771;
          _7920_onOwned = _out3772;
          _7921_recIdents = _out3773;
          readIdents = _7921_recIdents;
          Dafny.ISequence<Dafny.Rune> _7922_methodName;
          _7922_methodName = (((_7916_low).is_Some) ? ((((_7915_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_7915_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _7923_arguments;
          _7923_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source338 = _7916_low;
          if (_source338.is_None) {
          } else {
            DAST._IExpression _7924___mcc_h274 = _source338.dtor_value;
            DAST._IExpression _7925_l = _7924___mcc_h274;
            {
              RAST._IExpr _7926_lExpr;
              DCOMP._IOwnership _7927___v141;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7928_recIdentsL;
              RAST._IExpr _out3774;
              DCOMP._IOwnership _out3775;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3776;
              DCOMP.COMP.GenExpr(_7925_l, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3774, out _out3775, out _out3776);
              _7926_lExpr = _out3774;
              _7927___v141 = _out3775;
              _7928_recIdentsL = _out3776;
              _7923_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7923_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7926_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7928_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source339 = _7915_high;
          if (_source339.is_None) {
          } else {
            DAST._IExpression _7929___mcc_h275 = _source339.dtor_value;
            DAST._IExpression _7930_h = _7929___mcc_h275;
            {
              RAST._IExpr _7931_hExpr;
              DCOMP._IOwnership _7932___v142;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7933_recIdentsH;
              RAST._IExpr _out3777;
              DCOMP._IOwnership _out3778;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3779;
              DCOMP.COMP.GenExpr(_7930_h, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3777, out _out3778, out _out3779);
              _7931_hExpr = _out3777;
              _7932___v142 = _out3778;
              _7933_recIdentsH = _out3779;
              _7923_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7923_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7931_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7933_recIdentsH);
            }
          }
          r = _7919_onExpr;
          if (_7917_isArray) {
            if (!(_7922_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _7922_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _7922_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _7922_methodName))).Apply(_7923_arguments);
          } else {
            if (!(_7922_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_7922_methodName)).Apply(_7923_arguments);
            }
          }
          RAST._IExpr _out3780;
          DCOMP._IOwnership _out3781;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3780, out _out3781);
          r = _out3780;
          resultingOwnership = _out3781;
          return ;
        }
      } else if (_source334.is_TupleSelect) {
        DAST._IExpression _7934___mcc_h246 = _source334.dtor_expr;
        BigInteger _7935___mcc_h247 = _source334.dtor_index;
        BigInteger _7936_idx = _7935___mcc_h247;
        DAST._IExpression _7937_on = _7934___mcc_h246;
        {
          RAST._IExpr _7938_onExpr;
          DCOMP._IOwnership _7939_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7940_recIdents;
          RAST._IExpr _out3782;
          DCOMP._IOwnership _out3783;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3784;
          DCOMP.COMP.GenExpr(_7937_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3782, out _out3783, out _out3784);
          _7938_onExpr = _out3782;
          _7939_onOwnership = _out3783;
          _7940_recIdents = _out3784;
          r = (_7938_onExpr).Sel(Std.Strings.__default.OfNat(_7936_idx));
          RAST._IExpr _out3785;
          DCOMP._IOwnership _out3786;
          DCOMP.COMP.FromOwnership(r, _7939_onOwnership, expectedOwnership, out _out3785, out _out3786);
          r = _out3785;
          resultingOwnership = _out3786;
          readIdents = _7940_recIdents;
          return ;
        }
      } else if (_source334.is_Call) {
        DAST._IExpression _7941___mcc_h248 = _source334.dtor_on;
        DAST._ICallName _7942___mcc_h249 = _source334.dtor_callName;
        Dafny.ISequence<DAST._IType> _7943___mcc_h250 = _source334.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _7944___mcc_h251 = _source334.dtor_args;
        Dafny.ISequence<DAST._IExpression> _7945_args = _7944___mcc_h251;
        Dafny.ISequence<DAST._IType> _7946_typeArgs = _7943___mcc_h250;
        DAST._ICallName _7947_name = _7942___mcc_h249;
        DAST._IExpression _7948_on = _7941___mcc_h248;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _7949_onExpr;
          DCOMP._IOwnership _7950___v143;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7951_recIdents;
          RAST._IExpr _out3787;
          DCOMP._IOwnership _out3788;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3789;
          DCOMP.COMP.GenExpr(_7948_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3787, out _out3788, out _out3789);
          _7949_onExpr = _out3787;
          _7950___v143 = _out3788;
          _7951_recIdents = _out3789;
          Dafny.ISequence<RAST._IType> _7952_typeExprs;
          _7952_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_7946_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi17 = new BigInteger((_7946_typeArgs).Count);
            for (BigInteger _7953_typeI = BigInteger.Zero; _7953_typeI < _hi17; _7953_typeI++) {
              RAST._IType _7954_typeExpr;
              RAST._IType _out3790;
              _out3790 = DCOMP.COMP.GenType((_7946_typeArgs).Select(_7953_typeI), false, false);
              _7954_typeExpr = _out3790;
              _7952_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_7952_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_7954_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _7955_argExprs;
          _7955_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi18 = new BigInteger((_7945_args).Count);
          for (BigInteger _7956_i = BigInteger.Zero; _7956_i < _hi18; _7956_i++) {
            DCOMP._IOwnership _7957_argOwnership;
            _7957_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_7947_name).is_Name) && ((_7956_i) < (new BigInteger((((_7947_name).dtor_signature)).Count)))) {
              RAST._IType _7958_tpe;
              RAST._IType _out3791;
              _out3791 = DCOMP.COMP.GenType(((((_7947_name).dtor_signature)).Select(_7956_i)).dtor_typ, false, false);
              _7958_tpe = _out3791;
              if ((_7958_tpe).HasCopySemantics()) {
                _7957_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _7959_argExpr;
            DCOMP._IOwnership _7960___v144;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7961_argIdents;
            RAST._IExpr _out3792;
            DCOMP._IOwnership _out3793;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3794;
            DCOMP.COMP.GenExpr((_7945_args).Select(_7956_i), selfIdent, env, _7957_argOwnership, out _out3792, out _out3793, out _out3794);
            _7959_argExpr = _out3792;
            _7960___v144 = _out3793;
            _7961_argIdents = _out3794;
            _7955_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_7955_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_7959_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7961_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7951_recIdents);
          Dafny.ISequence<Dafny.Rune> _7962_renderedName;
          _7962_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source340) => {
            if (_source340.is_Name) {
              Dafny.ISequence<Dafny.Rune> _7963___mcc_h276 = _source340.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _7964___mcc_h277 = _source340.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _7965___mcc_h278 = _source340.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _7966_ident = _7963___mcc_h276;
              return DCOMP.__default.escapeIdent(_7966_ident);
            } else if (_source340.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source340.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source340.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_7947_name);
          DAST._IExpression _source341 = _7948_on;
          if (_source341.is_Literal) {
            DAST._ILiteral _7967___mcc_h279 = _source341.dtor_Literal_a0;
            {
              DAST._ICallName _source342 = _7947_name;
              if (_source342.is_Name) {
                Dafny.ISequence<Dafny.Rune> _7968___mcc_h461 = _source342.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _7969___mcc_h462 = _source342.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _7970___mcc_h463 = _source342.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source343 = _7969___mcc_h462;
                if (_source343.is_None) {
                } else {
                  DAST._IType _7971___mcc_h467 = _source343.dtor_value;
                  DAST._IType _7972_tpe = _7971___mcc_h467;
                  RAST._IType _7973_typ;
                  RAST._IType _out3795;
                  _out3795 = DCOMP.COMP.GenType(_7972_tpe, false, false);
                  _7973_typ = _out3795;
                  if (((_7973_typ).is_Pointer) || ((_7973_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source342.is_MapBuilderAdd) {
              } else if (_source342.is_MapBuilderBuild) {
              } else if (_source342.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _7974___mcc_h281 = _source341.dtor_Ident_a0;
            {
              DAST._ICallName _source344 = _7947_name;
              if (_source344.is_Name) {
                Dafny.ISequence<Dafny.Rune> _7975___mcc_h469 = _source344.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _7976___mcc_h470 = _source344.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _7977___mcc_h471 = _source344.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source345 = _7976___mcc_h470;
                if (_source345.is_None) {
                } else {
                  DAST._IType _7978___mcc_h475 = _source345.dtor_value;
                  DAST._IType _7979_tpe = _7978___mcc_h475;
                  RAST._IType _7980_typ;
                  RAST._IType _out3796;
                  _out3796 = DCOMP.COMP.GenType(_7979_tpe, false, false);
                  _7980_typ = _out3796;
                  if (((_7980_typ).is_Pointer) || ((_7980_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source344.is_MapBuilderAdd) {
              } else if (_source344.is_MapBuilderBuild) {
              } else if (_source344.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7981___mcc_h283 = _source341.dtor_Companion_a0;
            {
              _7949_onExpr = (_7949_onExpr).MSel(_7962_renderedName);
            }
          } else if (_source341.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _7982___mcc_h285 = _source341.dtor_Tuple_a0;
            {
              DAST._ICallName _source346 = _7947_name;
              if (_source346.is_Name) {
                Dafny.ISequence<Dafny.Rune> _7983___mcc_h477 = _source346.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _7984___mcc_h478 = _source346.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _7985___mcc_h479 = _source346.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source347 = _7984___mcc_h478;
                if (_source347.is_None) {
                } else {
                  DAST._IType _7986___mcc_h483 = _source347.dtor_value;
                  DAST._IType _7987_tpe = _7986___mcc_h483;
                  RAST._IType _7988_typ;
                  RAST._IType _out3797;
                  _out3797 = DCOMP.COMP.GenType(_7987_tpe, false, false);
                  _7988_typ = _out3797;
                  if (((_7988_typ).is_Pointer) || ((_7988_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source346.is_MapBuilderAdd) {
              } else if (_source346.is_MapBuilderBuild) {
              } else if (_source346.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7989___mcc_h287 = _source341.dtor_path;
            Dafny.ISequence<DAST._IType> _7990___mcc_h288 = _source341.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _7991___mcc_h289 = _source341.dtor_args;
            {
              DAST._ICallName _source348 = _7947_name;
              if (_source348.is_Name) {
                Dafny.ISequence<Dafny.Rune> _7992___mcc_h485 = _source348.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _7993___mcc_h486 = _source348.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _7994___mcc_h487 = _source348.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source349 = _7993___mcc_h486;
                if (_source349.is_None) {
                } else {
                  DAST._IType _7995___mcc_h491 = _source349.dtor_value;
                  DAST._IType _7996_tpe = _7995___mcc_h491;
                  RAST._IType _7997_typ;
                  RAST._IType _out3798;
                  _out3798 = DCOMP.COMP.GenType(_7996_tpe, false, false);
                  _7997_typ = _out3798;
                  if (((_7997_typ).is_Pointer) || ((_7997_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source348.is_MapBuilderAdd) {
              } else if (_source348.is_MapBuilderBuild) {
              } else if (_source348.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _7998___mcc_h293 = _source341.dtor_dims;
            DAST._IType _7999___mcc_h294 = _source341.dtor_typ;
            {
              DAST._ICallName _source350 = _7947_name;
              if (_source350.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8000___mcc_h493 = _source350.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8001___mcc_h494 = _source350.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8002___mcc_h495 = _source350.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source351 = _8001___mcc_h494;
                if (_source351.is_None) {
                } else {
                  DAST._IType _8003___mcc_h499 = _source351.dtor_value;
                  DAST._IType _8004_tpe = _8003___mcc_h499;
                  RAST._IType _8005_typ;
                  RAST._IType _out3799;
                  _out3799 = DCOMP.COMP.GenType(_8004_tpe, false, false);
                  _8005_typ = _out3799;
                  if (((_8005_typ).is_Pointer) || ((_8005_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source350.is_MapBuilderAdd) {
              } else if (_source350.is_MapBuilderBuild) {
              } else if (_source350.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_DatatypeValue) {
            DAST._IDatatypeType _8006___mcc_h297 = _source341.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _8007___mcc_h298 = _source341.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _8008___mcc_h299 = _source341.dtor_variant;
            bool _8009___mcc_h300 = _source341.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _8010___mcc_h301 = _source341.dtor_contents;
            {
              DAST._ICallName _source352 = _7947_name;
              if (_source352.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8011___mcc_h501 = _source352.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8012___mcc_h502 = _source352.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8013___mcc_h503 = _source352.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source353 = _8012___mcc_h502;
                if (_source353.is_None) {
                } else {
                  DAST._IType _8014___mcc_h507 = _source353.dtor_value;
                  DAST._IType _8015_tpe = _8014___mcc_h507;
                  RAST._IType _8016_typ;
                  RAST._IType _out3800;
                  _out3800 = DCOMP.COMP.GenType(_8015_tpe, false, false);
                  _8016_typ = _out3800;
                  if (((_8016_typ).is_Pointer) || ((_8016_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source352.is_MapBuilderAdd) {
              } else if (_source352.is_MapBuilderBuild) {
              } else if (_source352.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_Convert) {
            DAST._IExpression _8017___mcc_h307 = _source341.dtor_value;
            DAST._IType _8018___mcc_h308 = _source341.dtor_from;
            DAST._IType _8019___mcc_h309 = _source341.dtor_typ;
            {
              DAST._ICallName _source354 = _7947_name;
              if (_source354.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8020___mcc_h509 = _source354.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8021___mcc_h510 = _source354.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8022___mcc_h511 = _source354.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source355 = _8021___mcc_h510;
                if (_source355.is_None) {
                } else {
                  DAST._IType _8023___mcc_h515 = _source355.dtor_value;
                  DAST._IType _8024_tpe = _8023___mcc_h515;
                  RAST._IType _8025_typ;
                  RAST._IType _out3801;
                  _out3801 = DCOMP.COMP.GenType(_8024_tpe, false, false);
                  _8025_typ = _out3801;
                  if (((_8025_typ).is_Pointer) || ((_8025_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source354.is_MapBuilderAdd) {
              } else if (_source354.is_MapBuilderBuild) {
              } else if (_source354.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_SeqConstruct) {
            DAST._IExpression _8026___mcc_h313 = _source341.dtor_length;
            DAST._IExpression _8027___mcc_h314 = _source341.dtor_elem;
            {
              DAST._ICallName _source356 = _7947_name;
              if (_source356.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8028___mcc_h517 = _source356.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8029___mcc_h518 = _source356.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8030___mcc_h519 = _source356.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source357 = _8029___mcc_h518;
                if (_source357.is_None) {
                } else {
                  DAST._IType _8031___mcc_h523 = _source357.dtor_value;
                  DAST._IType _8032_tpe = _8031___mcc_h523;
                  RAST._IType _8033_typ;
                  RAST._IType _out3802;
                  _out3802 = DCOMP.COMP.GenType(_8032_tpe, false, false);
                  _8033_typ = _out3802;
                  if (((_8033_typ).is_Pointer) || ((_8033_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source356.is_MapBuilderAdd) {
              } else if (_source356.is_MapBuilderBuild) {
              } else if (_source356.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _8034___mcc_h317 = _source341.dtor_elements;
            DAST._IType _8035___mcc_h318 = _source341.dtor_typ;
            {
              DAST._ICallName _source358 = _7947_name;
              if (_source358.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8036___mcc_h525 = _source358.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8037___mcc_h526 = _source358.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8038___mcc_h527 = _source358.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source359 = _8037___mcc_h526;
                if (_source359.is_None) {
                } else {
                  DAST._IType _8039___mcc_h531 = _source359.dtor_value;
                  DAST._IType _8040_tpe = _8039___mcc_h531;
                  RAST._IType _8041_typ;
                  RAST._IType _out3803;
                  _out3803 = DCOMP.COMP.GenType(_8040_tpe, false, false);
                  _8041_typ = _out3803;
                  if (((_8041_typ).is_Pointer) || ((_8041_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source358.is_MapBuilderAdd) {
              } else if (_source358.is_MapBuilderBuild) {
              } else if (_source358.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _8042___mcc_h321 = _source341.dtor_elements;
            {
              DAST._ICallName _source360 = _7947_name;
              if (_source360.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8043___mcc_h533 = _source360.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8044___mcc_h534 = _source360.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8045___mcc_h535 = _source360.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source361 = _8044___mcc_h534;
                if (_source361.is_None) {
                } else {
                  DAST._IType _8046___mcc_h539 = _source361.dtor_value;
                  DAST._IType _8047_tpe = _8046___mcc_h539;
                  RAST._IType _8048_typ;
                  RAST._IType _out3804;
                  _out3804 = DCOMP.COMP.GenType(_8047_tpe, false, false);
                  _8048_typ = _out3804;
                  if (((_8048_typ).is_Pointer) || ((_8048_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source360.is_MapBuilderAdd) {
              } else if (_source360.is_MapBuilderBuild) {
              } else if (_source360.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _8049___mcc_h323 = _source341.dtor_elements;
            {
              DAST._ICallName _source362 = _7947_name;
              if (_source362.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8050___mcc_h541 = _source362.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8051___mcc_h542 = _source362.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8052___mcc_h543 = _source362.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source363 = _8051___mcc_h542;
                if (_source363.is_None) {
                } else {
                  DAST._IType _8053___mcc_h547 = _source363.dtor_value;
                  DAST._IType _8054_tpe = _8053___mcc_h547;
                  RAST._IType _8055_typ;
                  RAST._IType _out3805;
                  _out3805 = DCOMP.COMP.GenType(_8054_tpe, false, false);
                  _8055_typ = _out3805;
                  if (((_8055_typ).is_Pointer) || ((_8055_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source362.is_MapBuilderAdd) {
              } else if (_source362.is_MapBuilderBuild) {
              } else if (_source362.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _8056___mcc_h325 = _source341.dtor_mapElems;
            {
              DAST._ICallName _source364 = _7947_name;
              if (_source364.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8057___mcc_h549 = _source364.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8058___mcc_h550 = _source364.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8059___mcc_h551 = _source364.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source365 = _8058___mcc_h550;
                if (_source365.is_None) {
                } else {
                  DAST._IType _8060___mcc_h555 = _source365.dtor_value;
                  DAST._IType _8061_tpe = _8060___mcc_h555;
                  RAST._IType _8062_typ;
                  RAST._IType _out3806;
                  _out3806 = DCOMP.COMP.GenType(_8061_tpe, false, false);
                  _8062_typ = _out3806;
                  if (((_8062_typ).is_Pointer) || ((_8062_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source364.is_MapBuilderAdd) {
              } else if (_source364.is_MapBuilderBuild) {
              } else if (_source364.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_MapBuilder) {
            DAST._IType _8063___mcc_h327 = _source341.dtor_keyType;
            DAST._IType _8064___mcc_h328 = _source341.dtor_valueType;
            {
              DAST._ICallName _source366 = _7947_name;
              if (_source366.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8065___mcc_h557 = _source366.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8066___mcc_h558 = _source366.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8067___mcc_h559 = _source366.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source367 = _8066___mcc_h558;
                if (_source367.is_None) {
                } else {
                  DAST._IType _8068___mcc_h563 = _source367.dtor_value;
                  DAST._IType _8069_tpe = _8068___mcc_h563;
                  RAST._IType _8070_typ;
                  RAST._IType _out3807;
                  _out3807 = DCOMP.COMP.GenType(_8069_tpe, false, false);
                  _8070_typ = _out3807;
                  if (((_8070_typ).is_Pointer) || ((_8070_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source366.is_MapBuilderAdd) {
              } else if (_source366.is_MapBuilderBuild) {
              } else if (_source366.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_SeqUpdate) {
            DAST._IExpression _8071___mcc_h331 = _source341.dtor_expr;
            DAST._IExpression _8072___mcc_h332 = _source341.dtor_indexExpr;
            DAST._IExpression _8073___mcc_h333 = _source341.dtor_value;
            {
              DAST._ICallName _source368 = _7947_name;
              if (_source368.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8074___mcc_h565 = _source368.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8075___mcc_h566 = _source368.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8076___mcc_h567 = _source368.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source369 = _8075___mcc_h566;
                if (_source369.is_None) {
                } else {
                  DAST._IType _8077___mcc_h571 = _source369.dtor_value;
                  DAST._IType _8078_tpe = _8077___mcc_h571;
                  RAST._IType _8079_typ;
                  RAST._IType _out3808;
                  _out3808 = DCOMP.COMP.GenType(_8078_tpe, false, false);
                  _8079_typ = _out3808;
                  if (((_8079_typ).is_Pointer) || ((_8079_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source368.is_MapBuilderAdd) {
              } else if (_source368.is_MapBuilderBuild) {
              } else if (_source368.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_MapUpdate) {
            DAST._IExpression _8080___mcc_h337 = _source341.dtor_expr;
            DAST._IExpression _8081___mcc_h338 = _source341.dtor_indexExpr;
            DAST._IExpression _8082___mcc_h339 = _source341.dtor_value;
            {
              DAST._ICallName _source370 = _7947_name;
              if (_source370.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8083___mcc_h573 = _source370.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8084___mcc_h574 = _source370.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8085___mcc_h575 = _source370.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source371 = _8084___mcc_h574;
                if (_source371.is_None) {
                } else {
                  DAST._IType _8086___mcc_h579 = _source371.dtor_value;
                  DAST._IType _8087_tpe = _8086___mcc_h579;
                  RAST._IType _8088_typ;
                  RAST._IType _out3809;
                  _out3809 = DCOMP.COMP.GenType(_8087_tpe, false, false);
                  _8088_typ = _out3809;
                  if (((_8088_typ).is_Pointer) || ((_8088_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source370.is_MapBuilderAdd) {
              } else if (_source370.is_MapBuilderBuild) {
              } else if (_source370.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_SetBuilder) {
            DAST._IType _8089___mcc_h343 = _source341.dtor_elemType;
            {
              DAST._ICallName _source372 = _7947_name;
              if (_source372.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8090___mcc_h581 = _source372.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8091___mcc_h582 = _source372.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8092___mcc_h583 = _source372.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source373 = _8091___mcc_h582;
                if (_source373.is_None) {
                } else {
                  DAST._IType _8093___mcc_h587 = _source373.dtor_value;
                  DAST._IType _8094_tpe = _8093___mcc_h587;
                  RAST._IType _8095_typ;
                  RAST._IType _out3810;
                  _out3810 = DCOMP.COMP.GenType(_8094_tpe, false, false);
                  _8095_typ = _out3810;
                  if (((_8095_typ).is_Pointer) || ((_8095_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source372.is_MapBuilderAdd) {
              } else if (_source372.is_MapBuilderBuild) {
              } else if (_source372.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_ToMultiset) {
            DAST._IExpression _8096___mcc_h345 = _source341.dtor_ToMultiset_a0;
            {
              DAST._ICallName _source374 = _7947_name;
              if (_source374.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8097___mcc_h589 = _source374.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8098___mcc_h590 = _source374.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8099___mcc_h591 = _source374.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source375 = _8098___mcc_h590;
                if (_source375.is_None) {
                } else {
                  DAST._IType _8100___mcc_h595 = _source375.dtor_value;
                  DAST._IType _8101_tpe = _8100___mcc_h595;
                  RAST._IType _8102_typ;
                  RAST._IType _out3811;
                  _out3811 = DCOMP.COMP.GenType(_8101_tpe, false, false);
                  _8102_typ = _out3811;
                  if (((_8102_typ).is_Pointer) || ((_8102_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source374.is_MapBuilderAdd) {
              } else if (_source374.is_MapBuilderBuild) {
              } else if (_source374.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_This) {
            {
              DAST._ICallName _source376 = _7947_name;
              if (_source376.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8103___mcc_h597 = _source376.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8104___mcc_h598 = _source376.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8105___mcc_h599 = _source376.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source377 = _8104___mcc_h598;
                if (_source377.is_None) {
                } else {
                  DAST._IType _8106___mcc_h603 = _source377.dtor_value;
                  DAST._IType _8107_tpe = _8106___mcc_h603;
                  RAST._IType _8108_typ;
                  RAST._IType _out3812;
                  _out3812 = DCOMP.COMP.GenType(_8107_tpe, false, false);
                  _8108_typ = _out3812;
                  if (((_8108_typ).is_Pointer) || ((_8108_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source376.is_MapBuilderAdd) {
              } else if (_source376.is_MapBuilderBuild) {
              } else if (_source376.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_Ite) {
            DAST._IExpression _8109___mcc_h347 = _source341.dtor_cond;
            DAST._IExpression _8110___mcc_h348 = _source341.dtor_thn;
            DAST._IExpression _8111___mcc_h349 = _source341.dtor_els;
            {
              DAST._ICallName _source378 = _7947_name;
              if (_source378.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8112___mcc_h605 = _source378.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8113___mcc_h606 = _source378.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8114___mcc_h607 = _source378.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source379 = _8113___mcc_h606;
                if (_source379.is_None) {
                } else {
                  DAST._IType _8115___mcc_h611 = _source379.dtor_value;
                  DAST._IType _8116_tpe = _8115___mcc_h611;
                  RAST._IType _8117_typ;
                  RAST._IType _out3813;
                  _out3813 = DCOMP.COMP.GenType(_8116_tpe, false, false);
                  _8117_typ = _out3813;
                  if (((_8117_typ).is_Pointer) || ((_8117_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source378.is_MapBuilderAdd) {
              } else if (_source378.is_MapBuilderBuild) {
              } else if (_source378.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_UnOp) {
            DAST._IUnaryOp _8118___mcc_h353 = _source341.dtor_unOp;
            DAST._IExpression _8119___mcc_h354 = _source341.dtor_expr;
            DAST.Format._IUnOpFormat _8120___mcc_h355 = _source341.dtor_format1;
            {
              DAST._ICallName _source380 = _7947_name;
              if (_source380.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8121___mcc_h613 = _source380.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8122___mcc_h614 = _source380.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8123___mcc_h615 = _source380.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source381 = _8122___mcc_h614;
                if (_source381.is_None) {
                } else {
                  DAST._IType _8124___mcc_h619 = _source381.dtor_value;
                  DAST._IType _8125_tpe = _8124___mcc_h619;
                  RAST._IType _8126_typ;
                  RAST._IType _out3814;
                  _out3814 = DCOMP.COMP.GenType(_8125_tpe, false, false);
                  _8126_typ = _out3814;
                  if (((_8126_typ).is_Pointer) || ((_8126_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source380.is_MapBuilderAdd) {
              } else if (_source380.is_MapBuilderBuild) {
              } else if (_source380.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_BinOp) {
            DAST._IBinOp _8127___mcc_h359 = _source341.dtor_op;
            DAST._IExpression _8128___mcc_h360 = _source341.dtor_left;
            DAST._IExpression _8129___mcc_h361 = _source341.dtor_right;
            DAST.Format._IBinOpFormat _8130___mcc_h362 = _source341.dtor_format2;
            {
              DAST._ICallName _source382 = _7947_name;
              if (_source382.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8131___mcc_h621 = _source382.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8132___mcc_h622 = _source382.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8133___mcc_h623 = _source382.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source383 = _8132___mcc_h622;
                if (_source383.is_None) {
                } else {
                  DAST._IType _8134___mcc_h627 = _source383.dtor_value;
                  DAST._IType _8135_tpe = _8134___mcc_h627;
                  RAST._IType _8136_typ;
                  RAST._IType _out3815;
                  _out3815 = DCOMP.COMP.GenType(_8135_tpe, false, false);
                  _8136_typ = _out3815;
                  if (((_8136_typ).is_Pointer) || ((_8136_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source382.is_MapBuilderAdd) {
              } else if (_source382.is_MapBuilderBuild) {
              } else if (_source382.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_ArrayLen) {
            DAST._IExpression _8137___mcc_h367 = _source341.dtor_expr;
            BigInteger _8138___mcc_h368 = _source341.dtor_dim;
            {
              DAST._ICallName _source384 = _7947_name;
              if (_source384.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8139___mcc_h629 = _source384.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8140___mcc_h630 = _source384.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8141___mcc_h631 = _source384.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source385 = _8140___mcc_h630;
                if (_source385.is_None) {
                } else {
                  DAST._IType _8142___mcc_h635 = _source385.dtor_value;
                  DAST._IType _8143_tpe = _8142___mcc_h635;
                  RAST._IType _8144_typ;
                  RAST._IType _out3816;
                  _out3816 = DCOMP.COMP.GenType(_8143_tpe, false, false);
                  _8144_typ = _out3816;
                  if (((_8144_typ).is_Pointer) || ((_8144_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source384.is_MapBuilderAdd) {
              } else if (_source384.is_MapBuilderBuild) {
              } else if (_source384.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_MapKeys) {
            DAST._IExpression _8145___mcc_h371 = _source341.dtor_expr;
            {
              DAST._ICallName _source386 = _7947_name;
              if (_source386.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8146___mcc_h637 = _source386.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8147___mcc_h638 = _source386.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8148___mcc_h639 = _source386.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source387 = _8147___mcc_h638;
                if (_source387.is_None) {
                } else {
                  DAST._IType _8149___mcc_h643 = _source387.dtor_value;
                  DAST._IType _8150_tpe = _8149___mcc_h643;
                  RAST._IType _8151_typ;
                  RAST._IType _out3817;
                  _out3817 = DCOMP.COMP.GenType(_8150_tpe, false, false);
                  _8151_typ = _out3817;
                  if (((_8151_typ).is_Pointer) || ((_8151_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source386.is_MapBuilderAdd) {
              } else if (_source386.is_MapBuilderBuild) {
              } else if (_source386.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_MapValues) {
            DAST._IExpression _8152___mcc_h373 = _source341.dtor_expr;
            {
              DAST._ICallName _source388 = _7947_name;
              if (_source388.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8153___mcc_h645 = _source388.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8154___mcc_h646 = _source388.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8155___mcc_h647 = _source388.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source389 = _8154___mcc_h646;
                if (_source389.is_None) {
                } else {
                  DAST._IType _8156___mcc_h651 = _source389.dtor_value;
                  DAST._IType _8157_tpe = _8156___mcc_h651;
                  RAST._IType _8158_typ;
                  RAST._IType _out3818;
                  _out3818 = DCOMP.COMP.GenType(_8157_tpe, false, false);
                  _8158_typ = _out3818;
                  if (((_8158_typ).is_Pointer) || ((_8158_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source388.is_MapBuilderAdd) {
              } else if (_source388.is_MapBuilderBuild) {
              } else if (_source388.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_Select) {
            DAST._IExpression _8159___mcc_h375 = _source341.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _8160___mcc_h376 = _source341.dtor_field;
            bool _8161___mcc_h377 = _source341.dtor_isConstant;
            bool _8162___mcc_h378 = _source341.dtor_onDatatype;
            {
              DAST._ICallName _source390 = _7947_name;
              if (_source390.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8163___mcc_h653 = _source390.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8164___mcc_h654 = _source390.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8165___mcc_h655 = _source390.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source391 = _8164___mcc_h654;
                if (_source391.is_None) {
                } else {
                  DAST._IType _8166___mcc_h659 = _source391.dtor_value;
                  DAST._IType _8167_tpe = _8166___mcc_h659;
                  RAST._IType _8168_typ;
                  RAST._IType _out3819;
                  _out3819 = DCOMP.COMP.GenType(_8167_tpe, false, false);
                  _8168_typ = _out3819;
                  if (((_8168_typ).is_Pointer) || ((_8168_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source390.is_MapBuilderAdd) {
              } else if (_source390.is_MapBuilderBuild) {
              } else if (_source390.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_SelectFn) {
            DAST._IExpression _8169___mcc_h383 = _source341.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _8170___mcc_h384 = _source341.dtor_field;
            bool _8171___mcc_h385 = _source341.dtor_onDatatype;
            bool _8172___mcc_h386 = _source341.dtor_isStatic;
            BigInteger _8173___mcc_h387 = _source341.dtor_arity;
            {
              DAST._ICallName _source392 = _7947_name;
              if (_source392.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8174___mcc_h661 = _source392.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8175___mcc_h662 = _source392.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8176___mcc_h663 = _source392.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source393 = _8175___mcc_h662;
                if (_source393.is_None) {
                } else {
                  DAST._IType _8177___mcc_h667 = _source393.dtor_value;
                  DAST._IType _8178_tpe = _8177___mcc_h667;
                  RAST._IType _8179_typ;
                  RAST._IType _out3820;
                  _out3820 = DCOMP.COMP.GenType(_8178_tpe, false, false);
                  _8179_typ = _out3820;
                  if (((_8179_typ).is_Pointer) || ((_8179_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source392.is_MapBuilderAdd) {
              } else if (_source392.is_MapBuilderBuild) {
              } else if (_source392.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_Index) {
            DAST._IExpression _8180___mcc_h393 = _source341.dtor_expr;
            DAST._ICollKind _8181___mcc_h394 = _source341.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _8182___mcc_h395 = _source341.dtor_indices;
            {
              DAST._ICallName _source394 = _7947_name;
              if (_source394.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8183___mcc_h669 = _source394.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8184___mcc_h670 = _source394.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8185___mcc_h671 = _source394.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source395 = _8184___mcc_h670;
                if (_source395.is_None) {
                } else {
                  DAST._IType _8186___mcc_h675 = _source395.dtor_value;
                  DAST._IType _8187_tpe = _8186___mcc_h675;
                  RAST._IType _8188_typ;
                  RAST._IType _out3821;
                  _out3821 = DCOMP.COMP.GenType(_8187_tpe, false, false);
                  _8188_typ = _out3821;
                  if (((_8188_typ).is_Pointer) || ((_8188_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source394.is_MapBuilderAdd) {
              } else if (_source394.is_MapBuilderBuild) {
              } else if (_source394.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_IndexRange) {
            DAST._IExpression _8189___mcc_h399 = _source341.dtor_expr;
            bool _8190___mcc_h400 = _source341.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _8191___mcc_h401 = _source341.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _8192___mcc_h402 = _source341.dtor_high;
            {
              DAST._ICallName _source396 = _7947_name;
              if (_source396.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8193___mcc_h677 = _source396.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8194___mcc_h678 = _source396.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8195___mcc_h679 = _source396.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source397 = _8194___mcc_h678;
                if (_source397.is_None) {
                } else {
                  DAST._IType _8196___mcc_h683 = _source397.dtor_value;
                  DAST._IType _8197_tpe = _8196___mcc_h683;
                  RAST._IType _8198_typ;
                  RAST._IType _out3822;
                  _out3822 = DCOMP.COMP.GenType(_8197_tpe, false, false);
                  _8198_typ = _out3822;
                  if (((_8198_typ).is_Pointer) || ((_8198_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source396.is_MapBuilderAdd) {
              } else if (_source396.is_MapBuilderBuild) {
              } else if (_source396.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_TupleSelect) {
            DAST._IExpression _8199___mcc_h407 = _source341.dtor_expr;
            BigInteger _8200___mcc_h408 = _source341.dtor_index;
            {
              DAST._ICallName _source398 = _7947_name;
              if (_source398.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8201___mcc_h685 = _source398.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8202___mcc_h686 = _source398.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8203___mcc_h687 = _source398.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source399 = _8202___mcc_h686;
                if (_source399.is_None) {
                } else {
                  DAST._IType _8204___mcc_h691 = _source399.dtor_value;
                  DAST._IType _8205_tpe = _8204___mcc_h691;
                  RAST._IType _8206_typ;
                  RAST._IType _out3823;
                  _out3823 = DCOMP.COMP.GenType(_8205_tpe, false, false);
                  _8206_typ = _out3823;
                  if (((_8206_typ).is_Pointer) || ((_8206_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source398.is_MapBuilderAdd) {
              } else if (_source398.is_MapBuilderBuild) {
              } else if (_source398.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_Call) {
            DAST._IExpression _8207___mcc_h411 = _source341.dtor_on;
            DAST._ICallName _8208___mcc_h412 = _source341.dtor_callName;
            Dafny.ISequence<DAST._IType> _8209___mcc_h413 = _source341.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _8210___mcc_h414 = _source341.dtor_args;
            {
              DAST._ICallName _source400 = _7947_name;
              if (_source400.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8211___mcc_h693 = _source400.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8212___mcc_h694 = _source400.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8213___mcc_h695 = _source400.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source401 = _8212___mcc_h694;
                if (_source401.is_None) {
                } else {
                  DAST._IType _8214___mcc_h699 = _source401.dtor_value;
                  DAST._IType _8215_tpe = _8214___mcc_h699;
                  RAST._IType _8216_typ;
                  RAST._IType _out3824;
                  _out3824 = DCOMP.COMP.GenType(_8215_tpe, false, false);
                  _8216_typ = _out3824;
                  if (((_8216_typ).is_Pointer) || ((_8216_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source400.is_MapBuilderAdd) {
              } else if (_source400.is_MapBuilderBuild) {
              } else if (_source400.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _8217___mcc_h419 = _source341.dtor_params;
            DAST._IType _8218___mcc_h420 = _source341.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _8219___mcc_h421 = _source341.dtor_body;
            {
              DAST._ICallName _source402 = _7947_name;
              if (_source402.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8220___mcc_h701 = _source402.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8221___mcc_h702 = _source402.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8222___mcc_h703 = _source402.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source403 = _8221___mcc_h702;
                if (_source403.is_None) {
                } else {
                  DAST._IType _8223___mcc_h707 = _source403.dtor_value;
                  DAST._IType _8224_tpe = _8223___mcc_h707;
                  RAST._IType _8225_typ;
                  RAST._IType _out3825;
                  _out3825 = DCOMP.COMP.GenType(_8224_tpe, false, false);
                  _8225_typ = _out3825;
                  if (((_8225_typ).is_Pointer) || ((_8225_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source402.is_MapBuilderAdd) {
              } else if (_source402.is_MapBuilderBuild) {
              } else if (_source402.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _8226___mcc_h425 = _source341.dtor_values;
            DAST._IType _8227___mcc_h426 = _source341.dtor_retType;
            DAST._IExpression _8228___mcc_h427 = _source341.dtor_expr;
            {
              DAST._ICallName _source404 = _7947_name;
              if (_source404.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8229___mcc_h709 = _source404.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8230___mcc_h710 = _source404.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8231___mcc_h711 = _source404.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source405 = _8230___mcc_h710;
                if (_source405.is_None) {
                } else {
                  DAST._IType _8232___mcc_h715 = _source405.dtor_value;
                  DAST._IType _8233_tpe = _8232___mcc_h715;
                  RAST._IType _8234_typ;
                  RAST._IType _out3826;
                  _out3826 = DCOMP.COMP.GenType(_8233_tpe, false, false);
                  _8234_typ = _out3826;
                  if (((_8234_typ).is_Pointer) || ((_8234_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source404.is_MapBuilderAdd) {
              } else if (_source404.is_MapBuilderBuild) {
              } else if (_source404.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _8235___mcc_h431 = _source341.dtor_name;
            DAST._IType _8236___mcc_h432 = _source341.dtor_typ;
            DAST._IExpression _8237___mcc_h433 = _source341.dtor_value;
            DAST._IExpression _8238___mcc_h434 = _source341.dtor_iifeBody;
            {
              DAST._ICallName _source406 = _7947_name;
              if (_source406.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8239___mcc_h717 = _source406.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8240___mcc_h718 = _source406.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8241___mcc_h719 = _source406.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source407 = _8240___mcc_h718;
                if (_source407.is_None) {
                } else {
                  DAST._IType _8242___mcc_h723 = _source407.dtor_value;
                  DAST._IType _8243_tpe = _8242___mcc_h723;
                  RAST._IType _8244_typ;
                  RAST._IType _out3827;
                  _out3827 = DCOMP.COMP.GenType(_8243_tpe, false, false);
                  _8244_typ = _out3827;
                  if (((_8244_typ).is_Pointer) || ((_8244_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source406.is_MapBuilderAdd) {
              } else if (_source406.is_MapBuilderBuild) {
              } else if (_source406.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_Apply) {
            DAST._IExpression _8245___mcc_h439 = _source341.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _8246___mcc_h440 = _source341.dtor_args;
            {
              DAST._ICallName _source408 = _7947_name;
              if (_source408.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8247___mcc_h725 = _source408.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8248___mcc_h726 = _source408.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8249___mcc_h727 = _source408.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source409 = _8248___mcc_h726;
                if (_source409.is_None) {
                } else {
                  DAST._IType _8250___mcc_h731 = _source409.dtor_value;
                  DAST._IType _8251_tpe = _8250___mcc_h731;
                  RAST._IType _8252_typ;
                  RAST._IType _out3828;
                  _out3828 = DCOMP.COMP.GenType(_8251_tpe, false, false);
                  _8252_typ = _out3828;
                  if (((_8252_typ).is_Pointer) || ((_8252_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source408.is_MapBuilderAdd) {
              } else if (_source408.is_MapBuilderBuild) {
              } else if (_source408.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_TypeTest) {
            DAST._IExpression _8253___mcc_h443 = _source341.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8254___mcc_h444 = _source341.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _8255___mcc_h445 = _source341.dtor_variant;
            {
              DAST._ICallName _source410 = _7947_name;
              if (_source410.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8256___mcc_h733 = _source410.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8257___mcc_h734 = _source410.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8258___mcc_h735 = _source410.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source411 = _8257___mcc_h734;
                if (_source411.is_None) {
                } else {
                  DAST._IType _8259___mcc_h739 = _source411.dtor_value;
                  DAST._IType _8260_tpe = _8259___mcc_h739;
                  RAST._IType _8261_typ;
                  RAST._IType _out3829;
                  _out3829 = DCOMP.COMP.GenType(_8260_tpe, false, false);
                  _8261_typ = _out3829;
                  if (((_8261_typ).is_Pointer) || ((_8261_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source410.is_MapBuilderAdd) {
              } else if (_source410.is_MapBuilderBuild) {
              } else if (_source410.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_InitializationValue) {
            DAST._IType _8262___mcc_h449 = _source341.dtor_typ;
            {
              DAST._ICallName _source412 = _7947_name;
              if (_source412.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8263___mcc_h741 = _source412.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8264___mcc_h742 = _source412.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8265___mcc_h743 = _source412.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source413 = _8264___mcc_h742;
                if (_source413.is_None) {
                } else {
                  DAST._IType _8266___mcc_h747 = _source413.dtor_value;
                  DAST._IType _8267_tpe = _8266___mcc_h747;
                  RAST._IType _8268_typ;
                  RAST._IType _out3830;
                  _out3830 = DCOMP.COMP.GenType(_8267_tpe, false, false);
                  _8268_typ = _out3830;
                  if (((_8268_typ).is_Pointer) || ((_8268_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source412.is_MapBuilderAdd) {
              } else if (_source412.is_MapBuilderBuild) {
              } else if (_source412.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_BoolBoundedPool) {
            {
              DAST._ICallName _source414 = _7947_name;
              if (_source414.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8269___mcc_h749 = _source414.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8270___mcc_h750 = _source414.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8271___mcc_h751 = _source414.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source415 = _8270___mcc_h750;
                if (_source415.is_None) {
                } else {
                  DAST._IType _8272___mcc_h755 = _source415.dtor_value;
                  DAST._IType _8273_tpe = _8272___mcc_h755;
                  RAST._IType _8274_typ;
                  RAST._IType _out3831;
                  _out3831 = DCOMP.COMP.GenType(_8273_tpe, false, false);
                  _8274_typ = _out3831;
                  if (((_8274_typ).is_Pointer) || ((_8274_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source414.is_MapBuilderAdd) {
              } else if (_source414.is_MapBuilderBuild) {
              } else if (_source414.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_SetBoundedPool) {
            DAST._IExpression _8275___mcc_h451 = _source341.dtor_of;
            {
              DAST._ICallName _source416 = _7947_name;
              if (_source416.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8276___mcc_h757 = _source416.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8277___mcc_h758 = _source416.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8278___mcc_h759 = _source416.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source417 = _8277___mcc_h758;
                if (_source417.is_None) {
                } else {
                  DAST._IType _8279___mcc_h763 = _source417.dtor_value;
                  DAST._IType _8280_tpe = _8279___mcc_h763;
                  RAST._IType _8281_typ;
                  RAST._IType _out3832;
                  _out3832 = DCOMP.COMP.GenType(_8280_tpe, false, false);
                  _8281_typ = _out3832;
                  if (((_8281_typ).is_Pointer) || ((_8281_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source416.is_MapBuilderAdd) {
              } else if (_source416.is_MapBuilderBuild) {
              } else if (_source416.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else if (_source341.is_SeqBoundedPool) {
            DAST._IExpression _8282___mcc_h453 = _source341.dtor_of;
            bool _8283___mcc_h454 = _source341.dtor_includeDuplicates;
            {
              DAST._ICallName _source418 = _7947_name;
              if (_source418.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8284___mcc_h765 = _source418.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8285___mcc_h766 = _source418.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8286___mcc_h767 = _source418.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source419 = _8285___mcc_h766;
                if (_source419.is_None) {
                } else {
                  DAST._IType _8287___mcc_h771 = _source419.dtor_value;
                  DAST._IType _8288_tpe = _8287___mcc_h771;
                  RAST._IType _8289_typ;
                  RAST._IType _out3833;
                  _out3833 = DCOMP.COMP.GenType(_8288_tpe, false, false);
                  _8289_typ = _out3833;
                  if (((_8289_typ).is_Pointer) || ((_8289_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source418.is_MapBuilderAdd) {
              } else if (_source418.is_MapBuilderBuild) {
              } else if (_source418.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          } else {
            DAST._IExpression _8290___mcc_h457 = _source341.dtor_lo;
            DAST._IExpression _8291___mcc_h458 = _source341.dtor_hi;
            {
              DAST._ICallName _source420 = _7947_name;
              if (_source420.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8292___mcc_h773 = _source420.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8293___mcc_h774 = _source420.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8294___mcc_h775 = _source420.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source421 = _8293___mcc_h774;
                if (_source421.is_None) {
                } else {
                  DAST._IType _8295___mcc_h779 = _source421.dtor_value;
                  DAST._IType _8296_tpe = _8295___mcc_h779;
                  RAST._IType _8297_typ;
                  RAST._IType _out3834;
                  _out3834 = DCOMP.COMP.GenType(_8296_tpe, false, false);
                  _8297_typ = _out3834;
                  if (((_8297_typ).is_Pointer) || ((_8297_typ).is_PointerMut)) {
                    _7949_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7949_onExpr);
                  }
                }
              } else if (_source420.is_MapBuilderAdd) {
              } else if (_source420.is_MapBuilderBuild) {
              } else if (_source420.is_SetBuilderAdd) {
              } else {
              }
              _7949_onExpr = (_7949_onExpr).Sel(_7962_renderedName);
            }
          }
          r = _7949_onExpr;
          if ((new BigInteger((_7952_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_7952_typeExprs);
          }
          r = (r).Apply(_7955_argExprs);
          RAST._IExpr _out3835;
          DCOMP._IOwnership _out3836;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3835, out _out3836);
          r = _out3835;
          resultingOwnership = _out3836;
          return ;
        }
      } else if (_source334.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _8298___mcc_h252 = _source334.dtor_params;
        DAST._IType _8299___mcc_h253 = _source334.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _8300___mcc_h254 = _source334.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8301_body = _8300___mcc_h254;
        DAST._IType _8302_retType = _8299___mcc_h253;
        Dafny.ISequence<DAST._IFormal> _8303_paramsDafny = _8298___mcc_h252;
        {
          Dafny.ISequence<RAST._IFormal> _8304_params;
          Dafny.ISequence<RAST._IFormal> _out3837;
          _out3837 = DCOMP.COMP.GenParams(_8303_paramsDafny);
          _8304_params = _out3837;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8305_paramNames;
          _8305_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _8306_paramTypesMap;
          _8306_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi19 = new BigInteger((_8304_params).Count);
          for (BigInteger _8307_i = BigInteger.Zero; _8307_i < _hi19; _8307_i++) {
            Dafny.ISequence<Dafny.Rune> _8308_name;
            _8308_name = ((_8304_params).Select(_8307_i)).dtor_name;
            _8305_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8305_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8308_name));
            _8306_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8306_paramTypesMap, _8308_name, ((_8304_params).Select(_8307_i)).dtor_tpe);
          }
          DCOMP._IEnvironment _8309_env;
          _8309_env = DCOMP.Environment.create(_8305_paramNames, _8306_paramTypesMap);
          RAST._IExpr _8310_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8311_recIdents;
          DCOMP._IEnvironment _8312___v152;
          RAST._IExpr _out3838;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3839;
          DCOMP._IEnvironment _out3840;
          DCOMP.COMP.GenStmts(_8301_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _8309_env, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out3838, out _out3839, out _out3840);
          _8310_recursiveGen = _out3838;
          _8311_recIdents = _out3839;
          _8312___v152 = _out3840;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _8313_allReadCloned;
          _8313_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          while (!(_8311_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _8314_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_3 in (_8311_recIdents).Elements) {
              _8314_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_3;
              if ((_8311_recIdents).Contains(_8314_next)) {
                goto after__ASSIGN_SUCH_THAT_3;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 3489)");
          after__ASSIGN_SUCH_THAT_3: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_8314_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
                _8313_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(_8313_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let _this = self.clone();\n"));
              }
            } else if (!((_8305_paramNames).Contains(_8314_next))) {
              _8313_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8313_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent(_8314_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMP.__default.escapeIdent(_8314_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8314_next));
            }
            _8311_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_8311_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8314_next));
          }
          Dafny.ISequence<Dafny.Rune> _8315_paramsString;
          _8315_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          Dafny.ISequence<Dafny.Rune> _8316_paramTypes;
          _8316_paramTypes = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi20 = new BigInteger((_8304_params).Count);
          for (BigInteger _8317_i = BigInteger.Zero; _8317_i < _hi20; _8317_i++) {
            if ((_8317_i).Sign == 1) {
              _8315_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_8315_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              _8316_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_8316_paramTypes, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _8315_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8315_paramsString, DCOMP.__default.escapeIdent(((_8304_params).Select(_8317_i)).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (RAST.Type.create_Borrowed(((_8304_params).Select(_8317_i)).dtor_tpe))._ToString(DCOMP.__default.IND));
            _8316_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_8316_paramTypes, (RAST.Type.create_Borrowed(((_8304_params).Select(_8317_i)).dtor_tpe))._ToString(DCOMP.__default.IND));
          }
          RAST._IType _8318_retTypeGen;
          RAST._IType _out3841;
          _out3841 = DCOMP.COMP.GenType(_8302_retType, false, true);
          _8318_retTypeGen = _out3841;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper::<::std::rc::Rc<dyn ::std::ops::Fn("), _8316_paramTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_8318_retTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>({\n")), _8313_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(move |")), _8315_paramsString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| -> ")), (_8318_retTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), (_8310_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})})")));
          RAST._IExpr _out3842;
          DCOMP._IOwnership _out3843;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3842, out _out3843);
          r = _out3842;
          resultingOwnership = _out3843;
          return ;
        }
      } else if (_source334.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _8319___mcc_h255 = _source334.dtor_values;
        DAST._IType _8320___mcc_h256 = _source334.dtor_retType;
        DAST._IExpression _8321___mcc_h257 = _source334.dtor_expr;
        DAST._IExpression _8322_expr = _8321___mcc_h257;
        DAST._IType _8323_retType = _8320___mcc_h256;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _8324_values = _8319___mcc_h255;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8325_paramNames;
          _8325_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _8326_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out3844;
          _out3844 = DCOMP.COMP.GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_8327_value) => {
            return (_8327_value).dtor__0;
          })), _8324_values));
          _8326_paramFormals = _out3844;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _8328_paramTypes;
          _8328_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8329_paramNamesSet;
          _8329_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi21 = new BigInteger((_8324_values).Count);
          for (BigInteger _8330_i = BigInteger.Zero; _8330_i < _hi21; _8330_i++) {
            Dafny.ISequence<Dafny.Rune> _8331_name;
            _8331_name = (((_8324_values).Select(_8330_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _8332_rName;
            _8332_rName = DCOMP.__default.escapeIdent(_8331_name);
            _8325_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8325_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8332_rName));
            _8328_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8328_paramTypes, _8332_rName, ((_8326_paramFormals).Select(_8330_i)).dtor_tpe);
            _8329_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8329_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8331_name));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _8333_s;
          _8333_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          Dafny.ISequence<Dafny.Rune> _8334_paramsString;
          _8334_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi22 = new BigInteger((_8324_values).Count);
          for (BigInteger _8335_i = BigInteger.Zero; _8335_i < _hi22; _8335_i++) {
            if ((_8335_i).Sign == 1) {
              _8334_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_8334_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IType _8336_typStr;
            RAST._IType _out3845;
            _out3845 = DCOMP.COMP.GenType((((_8324_values).Select(_8335_i)).dtor__0).dtor_typ, false, true);
            _8336_typStr = _out3845;
            RAST._IExpr _8337_valueGen;
            DCOMP._IOwnership _8338___v153;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8339_recIdents;
            RAST._IExpr _out3846;
            DCOMP._IOwnership _out3847;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3848;
            DCOMP.COMP.GenExpr(((_8324_values).Select(_8335_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3846, out _out3847, out _out3848);
            _8337_valueGen = _out3846;
            _8338___v153 = _out3847;
            _8339_recIdents = _out3848;
            _8333_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8333_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent((((_8324_values).Select(_8335_i)).dtor__0).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_8336_typStr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8339_recIdents);
            _8333_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8333_s, (_8337_valueGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
          }
          DCOMP._IEnvironment _8340_newEnv;
          _8340_newEnv = DCOMP.Environment.create(_8325_paramNames, _8328_paramTypes);
          RAST._IExpr _8341_recGen;
          DCOMP._IOwnership _8342_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8343_recIdents;
          RAST._IExpr _out3849;
          DCOMP._IOwnership _out3850;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3851;
          DCOMP.COMP.GenExpr(_8322_expr, selfIdent, _8340_newEnv, expectedOwnership, out _out3849, out _out3850, out _out3851);
          _8341_recGen = _out3849;
          _8342_recOwned = _out3850;
          _8343_recIdents = _out3851;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_8343_recIdents, _8329_paramNamesSet);
          _8333_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8333_s, (_8341_recGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}"));
          r = RAST.Expr.create_RawExpr(_8333_s);
          RAST._IExpr _out3852;
          DCOMP._IOwnership _out3853;
          DCOMP.COMP.FromOwnership(r, _8342_recOwned, expectedOwnership, out _out3852, out _out3853);
          r = _out3852;
          resultingOwnership = _out3853;
          return ;
        }
      } else if (_source334.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _8344___mcc_h258 = _source334.dtor_name;
        DAST._IType _8345___mcc_h259 = _source334.dtor_typ;
        DAST._IExpression _8346___mcc_h260 = _source334.dtor_value;
        DAST._IExpression _8347___mcc_h261 = _source334.dtor_iifeBody;
        DAST._IExpression _8348_iifeBody = _8347___mcc_h261;
        DAST._IExpression _8349_value = _8346___mcc_h260;
        DAST._IType _8350_tpe = _8345___mcc_h259;
        Dafny.ISequence<Dafny.Rune> _8351_name = _8344___mcc_h258;
        {
          RAST._IExpr _8352_valueGen;
          DCOMP._IOwnership _8353___v154;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8354_recIdents;
          RAST._IExpr _out3854;
          DCOMP._IOwnership _out3855;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3856;
          DCOMP.COMP.GenExpr(_8349_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3854, out _out3855, out _out3856);
          _8352_valueGen = _out3854;
          _8353___v154 = _out3855;
          _8354_recIdents = _out3856;
          readIdents = _8354_recIdents;
          RAST._IType _8355_valueTypeGen;
          RAST._IType _out3857;
          _out3857 = DCOMP.COMP.GenType(_8350_tpe, false, true);
          _8355_valueTypeGen = _out3857;
          RAST._IExpr _8356_bodyGen;
          DCOMP._IOwnership _8357___v155;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8358_bodyIdents;
          RAST._IExpr _out3858;
          DCOMP._IOwnership _out3859;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3860;
          DCOMP.COMP.GenExpr(_8348_iifeBody, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3858, out _out3859, out _out3860);
          _8356_bodyGen = _out3858;
          _8357___v155 = _out3859;
          _8358_bodyIdents = _out3860;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_8358_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_8351_name))));
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet "), DCOMP.__default.escapeIdent((_8351_name))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_8355_valueTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (_8352_valueGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n")), (_8356_bodyGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}")));
          RAST._IExpr _out3861;
          DCOMP._IOwnership _out3862;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3861, out _out3862);
          r = _out3861;
          resultingOwnership = _out3862;
          return ;
        }
      } else if (_source334.is_Apply) {
        DAST._IExpression _8359___mcc_h262 = _source334.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _8360___mcc_h263 = _source334.dtor_args;
        Dafny.ISequence<DAST._IExpression> _8361_args = _8360___mcc_h263;
        DAST._IExpression _8362_func = _8359___mcc_h262;
        {
          RAST._IExpr _8363_funcExpr;
          DCOMP._IOwnership _8364___v156;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8365_recIdents;
          RAST._IExpr _out3863;
          DCOMP._IOwnership _out3864;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3865;
          DCOMP.COMP.GenExpr(_8362_func, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3863, out _out3864, out _out3865);
          _8363_funcExpr = _out3863;
          _8364___v156 = _out3864;
          _8365_recIdents = _out3865;
          readIdents = _8365_recIdents;
          Dafny.ISequence<Dafny.Rune> _8366_argString;
          _8366_argString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _8367_i;
          _8367_i = BigInteger.Zero;
          while ((_8367_i) < (new BigInteger((_8361_args).Count))) {
            if ((_8367_i).Sign == 1) {
              _8366_argString = Dafny.Sequence<Dafny.Rune>.Concat(_8366_argString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IExpr _8368_argExpr;
            DCOMP._IOwnership _8369_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8370_argIdents;
            RAST._IExpr _out3866;
            DCOMP._IOwnership _out3867;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3868;
            DCOMP.COMP.GenExpr((_8361_args).Select(_8367_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3866, out _out3867, out _out3868);
            _8368_argExpr = _out3866;
            _8369_argOwned = _out3867;
            _8370_argIdents = _out3868;
            Dafny.ISequence<Dafny.Rune> _8371_argExprString;
            _8371_argExprString = (_8368_argExpr)._ToString(DCOMP.__default.IND);
            if (object.Equals(_8369_argOwned, DCOMP.Ownership.create_OwnershipOwned())) {
              _8371_argExprString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _8371_argExprString);
            }
            _8366_argString = Dafny.Sequence<Dafny.Rune>.Concat(_8366_argString, _8371_argExprString);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8370_argIdents);
            _8367_i = (_8367_i) + (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_8363_funcExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _8366_argString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("))")));
          RAST._IExpr _out3869;
          DCOMP._IOwnership _out3870;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3869, out _out3870);
          r = _out3869;
          resultingOwnership = _out3870;
          return ;
        }
      } else if (_source334.is_TypeTest) {
        DAST._IExpression _8372___mcc_h264 = _source334.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8373___mcc_h265 = _source334.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _8374___mcc_h266 = _source334.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _8375_variant = _8374___mcc_h266;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8376_dType = _8373___mcc_h265;
        DAST._IExpression _8377_on = _8372___mcc_h264;
        {
          RAST._IExpr _8378_exprGen;
          DCOMP._IOwnership _8379___v157;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8380_recIdents;
          RAST._IExpr _out3871;
          DCOMP._IOwnership _out3872;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3873;
          DCOMP.COMP.GenExpr(_8377_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3871, out _out3872, out _out3873);
          _8378_exprGen = _out3871;
          _8379___v157 = _out3872;
          _8380_recIdents = _out3873;
          RAST._IType _8381_dTypePath;
          RAST._IType _out3874;
          _out3874 = DCOMP.COMP.GenPath(_8376_dType);
          _8381_dTypePath = _out3874;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_8378_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_8381_dTypePath).MSel(DCOMP.__default.escapeIdent(_8375_variant)))._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out3875;
          DCOMP._IOwnership _out3876;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3875, out _out3876);
          r = _out3875;
          resultingOwnership = _out3876;
          readIdents = _8380_recIdents;
          return ;
        }
      } else if (_source334.is_InitializationValue) {
        DAST._IType _8382___mcc_h267 = _source334.dtor_typ;
        DAST._IType _8383_typ = _8382___mcc_h267;
        {
          RAST._IType _8384_typExpr;
          RAST._IType _out3877;
          _out3877 = DCOMP.COMP.GenType(_8383_typ, false, false);
          _8384_typExpr = _out3877;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_8384_typExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          RAST._IExpr _out3878;
          DCOMP._IOwnership _out3879;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3878, out _out3879);
          r = _out3878;
          resultingOwnership = _out3879;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source334.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out3880;
          DCOMP._IOwnership _out3881;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3880, out _out3881);
          r = _out3880;
          resultingOwnership = _out3881;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source334.is_SetBoundedPool) {
        DAST._IExpression _8385___mcc_h268 = _source334.dtor_of;
        DAST._IExpression _8386_of = _8385___mcc_h268;
        {
          RAST._IExpr _8387_exprGen;
          DCOMP._IOwnership _8388___v158;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8389_recIdents;
          RAST._IExpr _out3882;
          DCOMP._IOwnership _out3883;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3884;
          DCOMP.COMP.GenExpr(_8386_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3882, out _out3883, out _out3884);
          _8387_exprGen = _out3882;
          _8388___v158 = _out3883;
          _8389_recIdents = _out3884;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8387_exprGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()")));
          RAST._IExpr _out3885;
          DCOMP._IOwnership _out3886;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3885, out _out3886);
          r = _out3885;
          resultingOwnership = _out3886;
          readIdents = _8389_recIdents;
          return ;
        }
      } else if (_source334.is_SeqBoundedPool) {
        DAST._IExpression _8390___mcc_h269 = _source334.dtor_of;
        bool _8391___mcc_h270 = _source334.dtor_includeDuplicates;
        bool _8392_includeDuplicates = _8391___mcc_h270;
        DAST._IExpression _8393_of = _8390___mcc_h269;
        {
          RAST._IExpr _8394_exprGen;
          DCOMP._IOwnership _8395___v159;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8396_recIdents;
          RAST._IExpr _out3887;
          DCOMP._IOwnership _out3888;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3889;
          DCOMP.COMP.GenExpr(_8393_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3887, out _out3888, out _out3889);
          _8394_exprGen = _out3887;
          _8395___v159 = _out3888;
          _8396_recIdents = _out3889;
          Dafny.ISequence<Dafny.Rune> _8397_s;
          _8397_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8394_exprGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()"));
          if (!(_8392_includeDuplicates)) {
            _8397_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::itertools::Itertools::unique("), _8397_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          }
          r = RAST.Expr.create_RawExpr(_8397_s);
          RAST._IExpr _out3890;
          DCOMP._IOwnership _out3891;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3890, out _out3891);
          r = _out3890;
          resultingOwnership = _out3891;
          readIdents = _8396_recIdents;
          return ;
        }
      } else {
        DAST._IExpression _8398___mcc_h271 = _source334.dtor_lo;
        DAST._IExpression _8399___mcc_h272 = _source334.dtor_hi;
        DAST._IExpression _8400_hi = _8399___mcc_h272;
        DAST._IExpression _8401_lo = _8398___mcc_h271;
        {
          RAST._IExpr _8402_lo;
          DCOMP._IOwnership _8403___v160;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8404_recIdentsLo;
          RAST._IExpr _out3892;
          DCOMP._IOwnership _out3893;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3894;
          DCOMP.COMP.GenExpr(_8401_lo, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3892, out _out3893, out _out3894);
          _8402_lo = _out3892;
          _8403___v160 = _out3893;
          _8404_recIdentsLo = _out3894;
          RAST._IExpr _8405_hi;
          DCOMP._IOwnership _8406___v161;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8407_recIdentsHi;
          RAST._IExpr _out3895;
          DCOMP._IOwnership _out3896;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3897;
          DCOMP.COMP.GenExpr(_8400_hi, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3895, out _out3896, out _out3897);
          _8405_hi = _out3895;
          _8406___v161 = _out3896;
          _8407_recIdentsHi = _out3897;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::integer_range("), (_8402_lo)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_8405_hi)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          RAST._IExpr _out3898;
          DCOMP._IOwnership _out3899;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3898, out _out3899);
          r = _out3898;
          resultingOwnership = _out3899;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8404_recIdentsLo, _8407_recIdentsHi);
          return ;
        }
      }
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern crate dafny_runtime;\n"));
      BigInteger _8408_i;
      _8408_i = BigInteger.Zero;
      while ((_8408_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _8409_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _8410_m;
        RAST._IMod _out3900;
        _out3900 = DCOMP.COMP.GenModule((p).Select(_8408_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _8410_m = _out3900;
        _8409_generated = (_8410_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_8408_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _8409_generated);
        _8408_i = (_8408_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _8411_i;
      _8411_i = BigInteger.Zero;
      while ((_8411_i) < (new BigInteger((fullName).Count))) {
        if ((_8411_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMP.__default.escapeIdent((fullName).Select(_8411_i)));
        _8411_i = (_8411_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMP
namespace DCOMPUTF16 {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in119 = (i).Drop(new BigInteger(2));
            i = _in119;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in120 = (i).Drop(BigInteger.One);
        i = _in120;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _8412___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_8412___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _8412___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_8412___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in121 = (i).Drop(new BigInteger(2));
        i = _in121;
        goto TAIL_CALL_START;
      } else {
        _8412___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_8412___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in122 = (i).Drop(BigInteger.One);
        i = _in122;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _8413___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_8413___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _8413___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_8413___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in123 = (i).Drop(BigInteger.One);
        i = _in123;
        goto TAIL_CALL_START;
      } else {
        _8413___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_8413___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in124 = (i).Drop(BigInteger.One);
        i = _in124;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMPUTF16.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMPUTF16.__default.has__special(i)))) && (!(DCOMPUTF16.__default.reserved__rust).Contains(i))) && (!(DCOMPUTF16.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMPUTF16.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMPUTF16.__default.is__tuple__builder(i)) {
        return DCOMPUTF16.__default.better__tuple__builder__name(i);
      } else if ((DCOMPUTF16.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMPUTF16.__default.is__idiomatic__rust__id(i)) {
        return DCOMPUTF16.__default.idiomatic__rust(i);
      } else if (DCOMPUTF16.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _8414_r = DCOMPUTF16.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _8414_r);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static bool UnicodeChars { get {
      return false;
    } }
    public static Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if (DCOMPUTF16.__default.UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public static RAST._IType DafnyCharUnderlying { get {
      if (DCOMPUTF16.__default.UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMPUTF16._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMPUTF16._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IOwnership>(DCOMPUTF16.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IUnassignedStatus {
    bool is_Unassigned { get; }
    bool is_WithTracker { get; }
    Dafny.ISequence<Dafny.Rune> dtor_tracker__name { get; }
    _IUnassignedStatus DowncastClone();
  }
  public abstract class UnassignedStatus : _IUnassignedStatus {
    public UnassignedStatus() {
    }
    private static readonly DCOMPUTF16._IUnassignedStatus theDefault = create_Unassigned();
    public static DCOMPUTF16._IUnassignedStatus Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus>(DCOMPUTF16.UnassignedStatus.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnassignedStatus create_Unassigned() {
      return new UnassignedStatus_Unassigned();
    }
    public static _IUnassignedStatus create_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) {
      return new UnassignedStatus_WithTracker(tracker__name);
    }
    public bool is_Unassigned { get { return this is UnassignedStatus_Unassigned; } }
    public bool is_WithTracker { get { return this is UnassignedStatus_WithTracker; } }
    public Dafny.ISequence<Dafny.Rune> dtor_tracker__name {
      get {
        var d = this;
        return ((UnassignedStatus_WithTracker)d)._tracker__name;
      }
    }
    public abstract _IUnassignedStatus DowncastClone();
  }
  public class UnassignedStatus_Unassigned : UnassignedStatus {
    public UnassignedStatus_Unassigned() : base() {
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_Unassigned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.UnassignedStatus_Unassigned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.UnassignedStatus.Unassigned";
      return s;
    }
  }
  public class UnassignedStatus_WithTracker : UnassignedStatus {
    public readonly Dafny.ISequence<Dafny.Rune> _tracker__name;
    public UnassignedStatus_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) : base() {
      this._tracker__name = tracker__name;
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_WithTracker(_tracker__name);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.UnassignedStatus_WithTracker;
      return oth != null && object.Equals(this._tracker__name, oth._tracker__name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tracker__name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.UnassignedStatus.WithTracker";
      s += "(";
      s += this._tracker__name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMPUTF16._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._names = names;
      this._types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_names, _types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Environment;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
    private static readonly DCOMPUTF16._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMPUTF16._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment>(DCOMPUTF16.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._types;
      }
    }
    public static DCOMPUTF16._IEnvironment Empty() {
      return DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).HasCopySemantics());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).HasCopySemantics(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMPUTF16._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
  }

  public partial class COMP {
    public COMP() {
    }
    public static RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<RAST._IModDecl> _8415_body;
      Dafny.ISequence<RAST._IModDecl> _out3901;
      _out3901 = DCOMPUTF16.COMP.GenModuleBody((mod).dtor_body, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
      _8415_body = _out3901;
      s = (((mod).dtor_isExtern) ? (RAST.Mod.create_ExternMod(DCOMPUTF16.__default.escapeIdent((mod).dtor_name))) : (RAST.Mod.create_Mod(DCOMPUTF16.__default.escapeIdent((mod).dtor_name), _8415_body)));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((containingPath).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System")))) {
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements()))));
      }
      BigInteger _hi23 = new BigInteger((body).Count);
      for (BigInteger _8416_i = BigInteger.Zero; _8416_i < _hi23; _8416_i++) {
        Dafny.ISequence<RAST._IModDecl> _8417_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source422 = (body).Select(_8416_i);
        if (_source422.is_Module) {
          DAST._IModule _8418___mcc_h0 = _source422.dtor_Module_a0;
          DAST._IModule _8419_m = _8418___mcc_h0;
          RAST._IMod _8420_mm;
          RAST._IMod _out3902;
          _out3902 = DCOMPUTF16.COMP.GenModule(_8419_m, containingPath);
          _8420_mm = _out3902;
          _8417_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_8420_mm));
        } else if (_source422.is_Class) {
          DAST._IClass _8421___mcc_h1 = _source422.dtor_Class_a0;
          DAST._IClass _8422_c = _8421___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out3903;
          _out3903 = DCOMPUTF16.COMP.GenClass(_8422_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_8422_c).dtor_name)));
          _8417_generated = _out3903;
        } else if (_source422.is_Trait) {
          DAST._ITrait _8423___mcc_h2 = _source422.dtor_Trait_a0;
          DAST._ITrait _8424_t = _8423___mcc_h2;
          Dafny.ISequence<Dafny.Rune> _8425_tt;
          Dafny.ISequence<Dafny.Rune> _out3904;
          _out3904 = DCOMPUTF16.COMP.GenTrait(_8424_t, containingPath);
          _8425_tt = _out3904;
          _8417_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_RawDecl(_8425_tt));
        } else if (_source422.is_Newtype) {
          DAST._INewtype _8426___mcc_h3 = _source422.dtor_Newtype_a0;
          DAST._INewtype _8427_n = _8426___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out3905;
          _out3905 = DCOMPUTF16.COMP.GenNewtype(_8427_n);
          _8417_generated = _out3905;
        } else {
          DAST._IDatatype _8428___mcc_h4 = _source422.dtor_Datatype_a0;
          DAST._IDatatype _8429_d = _8428___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out3906;
          _out3906 = DCOMPUTF16.COMP.GenDatatype(_8429_d);
          _8417_generated = _out3906;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _8417_generated);
      }
      return s;
    }
    public static void GenTypeParameters(Dafny.ISequence<DAST._IType> @params, out Dafny.ISet<DAST._IType> typeParamsSet, out Dafny.ISequence<RAST._ITypeParam> typeParams, out Dafny.ISequence<RAST._ITypeParam> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSet = Dafny.Set<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      BigInteger _8430_tpI;
      _8430_tpI = BigInteger.Zero;
      if ((new BigInteger((@params).Count)).Sign == 1) {
        while ((_8430_tpI) < (new BigInteger((@params).Count))) {
          DAST._IType _8431_tp;
          _8431_tp = (@params).Select(_8430_tpI);
          typeParamsSet = Dafny.Set<DAST._IType>.Union(typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_8431_tp));
          RAST._IType _8432_genTp;
          RAST._IType _out3907;
          _out3907 = DCOMPUTF16.COMP.GenType(_8431_tp, false, false);
          _8432_genTp = _out3907;
          typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_8432_genTp)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<RAST._IType>.FromElements())));
          _8430_tpI = (_8430_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<RAST._IType> _8433_baseConstraints;
      _8433_baseConstraints = Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.StaticTrait);
      constrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(typeParams, _8433_baseConstraints);
    }
    public static Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _8434_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _8435_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _8436_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _8437_whereConstraints;
      Dafny.ISet<DAST._IType> _out3908;
      Dafny.ISequence<RAST._ITypeParam> _out3909;
      Dafny.ISequence<RAST._ITypeParam> _out3910;
      Dafny.ISequence<Dafny.Rune> _out3911;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3908, out _out3909, out _out3910, out _out3911);
      _8434_typeParamsSet = _out3908;
      _8435_sTypeParams = _out3909;
      _8436_sConstrainedTypeParams = _out3910;
      _8437_whereConstraints = _out3911;
      Dafny.ISequence<Dafny.Rune> _8438_constrainedTypeParams;
      _8438_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_8436_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IField> _8439_fields;
      _8439_fields = Dafny.Sequence<RAST._IField>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _8440_fieldInits;
      _8440_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _8441_fieldI;
      _8441_fieldI = BigInteger.Zero;
      while ((_8441_fieldI) < (new BigInteger(((c).dtor_fields).Count))) {
        DAST._IField _8442_field;
        _8442_field = ((c).dtor_fields).Select(_8441_fieldI);
        RAST._IType _8443_fieldType;
        RAST._IType _out3912;
        _out3912 = DCOMPUTF16.COMP.GenType(((_8442_field).dtor_formal).dtor_typ, false, false);
        _8443_fieldType = _out3912;
        Dafny.ISequence<Dafny.Rune> _8444_fieldRustName;
        _8444_fieldRustName = DCOMPUTF16.__default.escapeIdent(((_8442_field).dtor_formal).dtor_name);
        _8439_fields = Dafny.Sequence<RAST._IField>.Concat(_8439_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PUB(), RAST.Formal.create(_8444_fieldRustName, _8443_fieldType))));
        Std.Wrappers._IOption<DAST._IExpression> _source423 = (_8442_field).dtor_defaultValue;
        if (_source423.is_None) {
          {
            RAST._IExpr _8445_default;
            _8445_default = RAST.__default.std__Default__default;
            _8440_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_8440_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_8444_fieldRustName, _8445_default)));
          }
        } else {
          DAST._IExpression _8446___mcc_h0 = _source423.dtor_value;
          DAST._IExpression _8447_e = _8446___mcc_h0;
          {
            RAST._IExpr _8448_expr;
            DCOMPUTF16._IOwnership _8449___v40;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8450___v41;
            RAST._IExpr _out3913;
            DCOMPUTF16._IOwnership _out3914;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3915;
            DCOMPUTF16.COMP.GenExpr(_8447_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3913, out _out3914, out _out3915);
            _8448_expr = _out3913;
            _8449___v40 = _out3914;
            _8450___v41 = _out3915;
            _8440_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_8440_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_8444_fieldRustName, _8448_expr)));
          }
        }
        _8441_fieldI = (_8441_fieldI) + (BigInteger.One);
      }
      BigInteger _hi24 = new BigInteger(((c).dtor_typeParams).Count);
      for (BigInteger _8451_typeParamI = BigInteger.Zero; _8451_typeParamI < _hi24; _8451_typeParamI++) {
        RAST._IType _8452_tpeGen;
        RAST._IType _out3916;
        _out3916 = DCOMPUTF16.COMP.GenType(((c).dtor_typeParams).Select(_8451_typeParamI), false, false);
        _8452_tpeGen = _out3916;
        _8439_fields = Dafny.Sequence<RAST._IField>.Concat(_8439_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_8451_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_8452_tpeGen))))));
        _8440_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_8440_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_8451_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
      }
      Dafny.ISequence<Dafny.Rune> _8453_datatypeName;
      _8453_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      RAST._IStruct _8454_struct;
      _8454_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _8453_datatypeName, _8435_sTypeParams, RAST.Fields.create_NamedFields(_8439_fields));
      Dafny.ISequence<RAST._IType> _8455_typeParamsAsTypes;
      _8455_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_8456_typeParam) => {
        return RAST.__default.RawType((_8456_typeParam).dtor_content);
      })), _8435_sTypeParams);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_8454_struct));
      DAST._IType _8457_underlyingDatatype;
      _8457_underlyingDatatype = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(path, (c).dtor_attributes)));
      Dafny.ISequence<RAST._IImplMember> _8458_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _8459_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out3917;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3918;
      DCOMPUTF16.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_AllocatedDatatype(DAST.DatatypeType.create(path, (c).dtor_attributes))), _8434_typeParamsSet, out _out3917, out _out3918);
      _8458_implBodyRaw = _out3917;
      _8459_traitBodies = _out3918;
      Dafny.ISequence<RAST._IImplMember> _8460_implBody;
      _8460_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(RAST.Expr.create_Identifier(_8453_datatypeName), _8440_fieldInits))))), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.SelfPointerMut), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate"))).ApplyType1(RAST.Type.create_SelfOwned())).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())))))), _8458_implBodyRaw);
      RAST._IImpl _8461_i;
      _8461_i = RAST.Impl.create_Impl(_8436_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8453_datatypeName), _8455_typeParamsAsTypes), _8437_whereConstraints, _8460_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_8461_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _8462_i;
        _8462_i = BigInteger.Zero;
        while ((_8462_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _8463_superClass;
          _8463_superClass = ((c).dtor_superClasses).Select(_8462_i);
          DAST._IType _source424 = _8463_superClass;
          if (_source424.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8464___mcc_h1 = _source424.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _8465___mcc_h2 = _source424.dtor_typeArgs;
            DAST._IResolvedType _8466___mcc_h3 = _source424.dtor_resolved;
            DAST._IResolvedType _source425 = _8466___mcc_h3;
            if (_source425.is_AllocatedDatatype) {
              DAST._IDatatypeType _8467___mcc_h7 = _source425.dtor_datatypeType;
            } else if (_source425.is_Datatype) {
              DAST._IDatatypeType _8468___mcc_h9 = _source425.dtor_datatypeType;
            } else if (_source425.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8469___mcc_h11 = _source425.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _8470___mcc_h12 = _source425.dtor_attributes;
              Dafny.ISequence<DAST._IType> _8471_typeArgs = _8465___mcc_h2;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8472_traitPath = _8464___mcc_h1;
              {
                RAST._IType _8473_pathStr;
                RAST._IType _out3919;
                _out3919 = DCOMPUTF16.COMP.GenPath(_8472_traitPath);
                _8473_pathStr = _out3919;
                Dafny.ISequence<RAST._IType> _8474_typeArgs;
                Dafny.ISequence<RAST._IType> _out3920;
                _out3920 = DCOMPUTF16.COMP.GenTypeArgs(_8471_typeArgs, false, false);
                _8474_typeArgs = _out3920;
                Dafny.ISequence<RAST._IImplMember> _8475_body;
                _8475_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_8459_traitBodies).Contains(_8472_traitPath)) {
                  _8475_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_8459_traitBodies,_8472_traitPath);
                }
                RAST._IType _8476_genSelfPath;
                RAST._IType _out3921;
                _out3921 = DCOMPUTF16.COMP.GenPath(path);
                _8476_genSelfPath = _out3921;
                RAST._IModDecl _8477_x;
                _8477_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8436_sConstrainedTypeParams, RAST.Type.create_TypeApp(_8473_pathStr, _8474_typeArgs), RAST.__default.Rc(RAST.Type.create_TypeApp(_8476_genSelfPath, _8455_typeParamsAsTypes)), _8437_whereConstraints, _8475_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_8477_x));
              }
            } else {
              DAST._IType _8478___mcc_h15 = _source425.dtor_baseType;
              DAST._INewtypeRange _8479___mcc_h16 = _source425.dtor_range;
              bool _8480___mcc_h17 = _source425.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _8481___mcc_h18 = _source425.dtor_attributes;
            }
          } else if (_source424.is_Nullable) {
            DAST._IType _8482___mcc_h23 = _source424.dtor_Nullable_a0;
          } else if (_source424.is_Tuple) {
            Dafny.ISequence<DAST._IType> _8483___mcc_h25 = _source424.dtor_Tuple_a0;
          } else if (_source424.is_Array) {
            DAST._IType _8484___mcc_h27 = _source424.dtor_element;
            BigInteger _8485___mcc_h28 = _source424.dtor_dims;
          } else if (_source424.is_Seq) {
            DAST._IType _8486___mcc_h31 = _source424.dtor_element;
          } else if (_source424.is_Set) {
            DAST._IType _8487___mcc_h33 = _source424.dtor_element;
          } else if (_source424.is_Multiset) {
            DAST._IType _8488___mcc_h35 = _source424.dtor_element;
          } else if (_source424.is_Map) {
            DAST._IType _8489___mcc_h37 = _source424.dtor_key;
            DAST._IType _8490___mcc_h38 = _source424.dtor_value;
          } else if (_source424.is_SetBuilder) {
            DAST._IType _8491___mcc_h41 = _source424.dtor_element;
          } else if (_source424.is_MapBuilder) {
            DAST._IType _8492___mcc_h43 = _source424.dtor_key;
            DAST._IType _8493___mcc_h44 = _source424.dtor_value;
          } else if (_source424.is_Arrow) {
            Dafny.ISequence<DAST._IType> _8494___mcc_h47 = _source424.dtor_args;
            DAST._IType _8495___mcc_h48 = _source424.dtor_result;
          } else if (_source424.is_Primitive) {
            DAST._IPrimitive _8496___mcc_h51 = _source424.dtor_Primitive_a0;
          } else if (_source424.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _8497___mcc_h53 = _source424.dtor_Passthrough_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _8498___mcc_h55 = _source424.dtor_TypeArg_a0;
          }
          _8462_i = (_8462_i) + (BigInteger.One);
        }
      }
      RAST._IImpl _8499_d;
      _8499_d = RAST.Impl.create_ImplFor(_8436_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8453_datatypeName), _8455_typeParamsAsTypes), _8437_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(_8453_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::new()"))))))));
      Dafny.ISequence<RAST._IModDecl> _8500_defaultImpl;
      _8500_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_8499_d));
      RAST._IImpl _8501_p;
      _8501_p = RAST.Impl.create_ImplFor(_8436_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8453_datatypeName), _8455_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), ((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")"))))))));
      Dafny.ISequence<RAST._IModDecl> _8502_printImpl;
      _8502_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_8501_p));
      RAST._IImpl _8503_pp;
      _8503_pp = RAST.Impl.create_ImplFor(_8435_sTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::cmp::PartialEq")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8453_datatypeName), _8455_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("eq"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("other"), RAST.__default.SelfBorrowed)), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ptr::eq(self, other)")))))));
      Dafny.ISequence<RAST._IModDecl> _8504_ptrPartialEqImpl;
      _8504_ptrPartialEqImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_8503_pp));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(s, _8500_defaultImpl), _8502_printImpl), _8504_ptrPartialEqImpl);
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISet<DAST._IType> _8505_typeParamsSet;
      _8505_typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._IType> _8506_typeParams;
      _8506_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _8507_tpI;
      _8507_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_8507_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._IType _8508_tp;
          _8508_tp = ((t).dtor_typeParams).Select(_8507_tpI);
          _8505_typeParamsSet = Dafny.Set<DAST._IType>.Union(_8505_typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_8508_tp));
          RAST._IType _8509_genTp;
          RAST._IType _out3922;
          _out3922 = DCOMPUTF16.COMP.GenType(_8508_tp, false, false);
          _8509_genTp = _out3922;
          _8506_typeParams = Dafny.Sequence<RAST._IType>.Concat(_8506_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_8509_genTp));
          _8507_tpI = (_8507_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8510_fullPath;
      _8510_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _8511_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _8512___v45;
      Dafny.ISequence<RAST._IImplMember> _out3923;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3924;
      DCOMPUTF16.COMP.GenClassImplBody((t).dtor_body, true, DAST.Type.create_Path(_8510_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Trait(_8510_fullPath, (t).dtor_attributes)), _8505_typeParamsSet, out _out3923, out _out3924);
      _8511_implBody = _out3923;
      _8512___v45 = _out3924;
      s = (RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMPUTF16.__default.escapeIdent((t).dtor_name)), _8506_typeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _8511_implBody)))._ToString(DCOMPUTF16.__default.IND);
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _8513_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _8514_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _8515_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _8516_whereConstraints;
      Dafny.ISet<DAST._IType> _out3925;
      Dafny.ISequence<RAST._ITypeParam> _out3926;
      Dafny.ISequence<RAST._ITypeParam> _out3927;
      Dafny.ISequence<Dafny.Rune> _out3928;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3925, out _out3926, out _out3927, out _out3928);
      _8513_typeParamsSet = _out3925;
      _8514_sTypeParams = _out3926;
      _8515_sConstrainedTypeParams = _out3927;
      _8516_whereConstraints = _out3928;
      Dafny.ISequence<RAST._IType> _8517_typeParamsAsTypes;
      _8517_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_8518_t) => {
        return RAST.__default.RawType((_8518_t).dtor_content);
      })), _8514_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _8519_constrainedTypeParams;
      _8519_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_8515_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _8520_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source426 = DCOMPUTF16.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source426.is_None) {
        RAST._IType _out3929;
        _out3929 = DCOMPUTF16.COMP.GenType((c).dtor_base, false, false);
        _8520_underlyingType = _out3929;
      } else {
        RAST._IType _8521___mcc_h0 = _source426.dtor_value;
        RAST._IType _8522_v = _8521___mcc_h0;
        _8520_underlyingType = _8522_v;
      }
      DAST._IType _8523_resultingType;
      _8523_resultingType = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Newtype((c).dtor_base, (c).dtor_range, false, (c).dtor_attributes));
      Dafny.ISequence<Dafny.Rune> _8524_datatypeName;
      _8524_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _8524_datatypeName, _8514_sTypeParams, RAST.Fields.create_NamelessFields(Dafny.Sequence<RAST._INamelessField>.FromElements(RAST.NamelessField.create(RAST.Visibility.create_PUB(), _8520_underlyingType))))));
      RAST._IExpr _8525_fnBody;
      _8525_fnBody = RAST.Expr.create_Identifier(_8524_datatypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source427 = (c).dtor_witnessExpr;
      if (_source427.is_None) {
        {
          _8525_fnBody = (_8525_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _8526___mcc_h1 = _source427.dtor_value;
        DAST._IExpression _8527_e = _8526___mcc_h1;
        {
          DAST._IExpression _8528_e;
          _8528_e = ((object.Equals((c).dtor_base, _8523_resultingType)) ? (_8527_e) : (DAST.Expression.create_Convert(_8527_e, (c).dtor_base, _8523_resultingType)));
          RAST._IExpr _8529_eStr;
          DCOMPUTF16._IOwnership _8530___v46;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8531___v47;
          RAST._IExpr _out3930;
          DCOMPUTF16._IOwnership _out3931;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3932;
          DCOMPUTF16.COMP.GenExpr(_8528_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3930, out _out3931, out _out3932);
          _8529_eStr = _out3930;
          _8530___v46 = _out3931;
          _8531___v47 = _out3932;
          _8525_fnBody = (_8525_fnBody).Apply1(_8529_eStr);
        }
      }
      RAST._IImplMember _8532_body;
      _8532_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8525_fnBody)));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8515_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8524_datatypeName), _8517_typeParamsAsTypes), _8516_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_8532_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8515_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8524_datatypeName), _8517_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8515_sConstrainedTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8524_datatypeName), _8517_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_8520_underlyingType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _8533_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _8534_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _8535_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _8536_whereConstraints;
      Dafny.ISet<DAST._IType> _out3933;
      Dafny.ISequence<RAST._ITypeParam> _out3934;
      Dafny.ISequence<RAST._ITypeParam> _out3935;
      Dafny.ISequence<Dafny.Rune> _out3936;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3933, out _out3934, out _out3935, out _out3936);
      _8533_typeParamsSet = _out3933;
      _8534_sTypeParams = _out3934;
      _8535_sConstrainedTypeParams = _out3935;
      _8536_whereConstraints = _out3936;
      Dafny.ISequence<RAST._IType> _8537_typeParamsAsTypes;
      _8537_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_8538_t) => {
        return RAST.__default.RawType((_8538_t).dtor_content);
      })), _8534_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _8539_constrainedTypeParams;
      _8539_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_8535_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.IND, DCOMPUTF16.__default.IND));
      Dafny.ISequence<Dafny.Rune> _8540_datatypeName;
      _8540_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _8541_ctors;
      _8541_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _8542_i;
      _8542_i = BigInteger.Zero;
      while ((_8542_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _8543_ctor;
        _8543_ctor = ((c).dtor_ctors).Select(_8542_i);
        Dafny.ISequence<RAST._IField> _8544_ctorArgs;
        _8544_ctorArgs = Dafny.Sequence<RAST._IField>.FromElements();
        BigInteger _8545_j;
        _8545_j = BigInteger.Zero;
        while ((_8545_j) < (new BigInteger(((_8543_ctor).dtor_args).Count))) {
          DAST._IFormal _8546_formal;
          _8546_formal = ((_8543_ctor).dtor_args).Select(_8545_j);
          RAST._IType _8547_formalType;
          RAST._IType _out3937;
          _out3937 = DCOMPUTF16.COMP.GenType((_8546_formal).dtor_typ, false, false);
          _8547_formalType = _out3937;
          if ((c).dtor_isCo) {
            _8544_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_8544_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_8546_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_8547_formalType))))));
          } else {
            _8544_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_8544_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_8546_formal).dtor_name), _8547_formalType))));
          }
          _8545_j = (_8545_j) + (BigInteger.One);
        }
        _8541_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_8541_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMPUTF16.__default.escapeIdent((_8543_ctor).dtor_name), RAST.Fields.create_NamedFields(_8544_ctorArgs))));
        _8542_i = (_8542_i) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8548_selfPath;
      _8548_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _8549_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _8550_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out3938;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3939;
      DCOMPUTF16.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(_8548_selfPath, (c).dtor_attributes))), _8533_typeParamsSet, out _out3938, out _out3939);
      _8549_implBodyRaw = _out3938;
      _8550_traitBodies = _out3939;
      Dafny.ISequence<RAST._IImplMember> _8551_implBody;
      _8551_implBody = _8549_implBodyRaw;
      _8542_i = BigInteger.Zero;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8552_emittedFields;
      _8552_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      while ((_8542_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _8553_ctor;
        _8553_ctor = ((c).dtor_ctors).Select(_8542_i);
        BigInteger _8554_j;
        _8554_j = BigInteger.Zero;
        while ((_8554_j) < (new BigInteger(((_8553_ctor).dtor_args).Count))) {
          DAST._IFormal _8555_formal;
          _8555_formal = ((_8553_ctor).dtor_args).Select(_8554_j);
          if (!((_8552_emittedFields).Contains((_8555_formal).dtor_name))) {
            _8552_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8552_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_8555_formal).dtor_name));
            RAST._IType _8556_formalType;
            RAST._IType _out3940;
            _out3940 = DCOMPUTF16.COMP.GenType((_8555_formal).dtor_typ, false, false);
            _8556_formalType = _out3940;
            Dafny.ISequence<RAST._IMatchCase> _8557_cases;
            _8557_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _8558_k;
            _8558_k = BigInteger.Zero;
            while ((_8558_k) < (new BigInteger(((c).dtor_ctors).Count))) {
              DAST._IDatatypeCtor _8559_ctor2;
              _8559_ctor2 = ((c).dtor_ctors).Select(_8558_k);
              Dafny.ISequence<Dafny.Rune> _8560_pattern;
              _8560_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8540_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent((_8559_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _8561_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              BigInteger _8562_l;
              _8562_l = BigInteger.Zero;
              bool _8563_hasMatchingField;
              _8563_hasMatchingField = false;
              while ((_8562_l) < (new BigInteger(((_8559_ctor2).dtor_args).Count))) {
                DAST._IFormal _8564_formal2;
                _8564_formal2 = ((_8559_ctor2).dtor_args).Select(_8562_l);
                if (((_8555_formal).dtor_name).Equals((_8564_formal2).dtor_name)) {
                  _8563_hasMatchingField = true;
                }
                _8560_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8560_pattern, DCOMPUTF16.__default.escapeIdent((_8564_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
                _8562_l = (_8562_l) + (BigInteger.One);
              }
              _8560_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_8560_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_8563_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _8561_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMPUTF16.__default.escapeIdent((_8555_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _8561_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.escapeIdent((_8555_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _8561_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _8565_ctorMatch;
              _8565_ctorMatch = RAST.MatchCase.create(_8560_pattern, RAST.Expr.create_RawExpr(_8561_rhs));
              _8557_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_8557_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_8565_ctorMatch));
              _8558_k = (_8558_k) + (BigInteger.One);
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _8557_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_8557_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_8540_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _8566_methodBody;
            _8566_methodBody = RAST.Expr.create_Match(RAST.__default.self, _8557_cases);
            _8551_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_8551_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMPUTF16.__default.escapeIdent((_8555_formal).dtor_name), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_8556_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8566_methodBody)))));
          }
          _8554_j = (_8554_j) + (BigInteger.One);
        }
        _8542_i = (_8542_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        BigInteger _8567_typeI;
        _8567_typeI = BigInteger.Zero;
        Dafny.ISequence<RAST._IType> _8568_types;
        _8568_types = Dafny.Sequence<RAST._IType>.FromElements();
        while ((_8567_typeI) < (new BigInteger(((c).dtor_typeParams).Count))) {
          RAST._IType _8569_genTp;
          RAST._IType _out3941;
          _out3941 = DCOMPUTF16.COMP.GenType(((c).dtor_typeParams).Select(_8567_typeI), false, false);
          _8569_genTp = _out3941;
          _8568_types = Dafny.Sequence<RAST._IType>.Concat(_8568_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData::")), Dafny.Sequence<RAST._IType>.FromElements(_8569_genTp))));
          _8567_typeI = (_8567_typeI) + (BigInteger.One);
        }
        _8541_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_8541_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Fields.create_NamelessFields(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessField>(((System.Func<RAST._IType, RAST._INamelessField>)((_8570_tpe) => {
  return RAST.NamelessField.create(RAST.Visibility.create_PRIV(), _8570_tpe);
})), _8568_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _8571_enumBody;
      _8571_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _8540_datatypeName, _8534_sTypeParams, _8541_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_8535_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8540_datatypeName), _8537_typeParamsAsTypes), _8536_whereConstraints, _8551_implBody)));
      _8542_i = BigInteger.Zero;
      Dafny.ISequence<RAST._IMatchCase> _8572_printImplBodyCases;
      _8572_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      while ((_8542_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _8573_ctor;
        _8573_ctor = ((c).dtor_ctors).Select(_8542_i);
        Dafny.ISequence<Dafny.Rune> _8574_ctorMatch;
        _8574_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.escapeIdent((_8573_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _8575_modulePrefix;
        _8575_modulePrefix = (((((c).dtor_enclosingModule)).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(((c).dtor_enclosingModule), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _8576_printRhs;
        _8576_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _8575_modulePrefix), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent((_8573_ctor).dtor_name)), (((_8573_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        BigInteger _8577_j;
        _8577_j = BigInteger.Zero;
        while ((_8577_j) < (new BigInteger(((_8573_ctor).dtor_args).Count))) {
          DAST._IFormal _8578_formal;
          _8578_formal = ((_8573_ctor).dtor_args).Select(_8577_j);
          _8574_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8574_ctorMatch, DCOMPUTF16.__default.escapeIdent((_8578_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          if ((_8577_j).Sign == 1) {
            _8576_printRhs = (_8576_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _8576_printRhs = (_8576_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMPUTF16.__default.escapeIdent((_8578_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
          _8577_j = (_8577_j) + (BigInteger.One);
        }
        _8574_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_8574_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_8573_ctor).dtor_hasAnyArgs) {
          _8576_printRhs = (_8576_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _8576_printRhs = (_8576_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _8572_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_8572_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8540_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _8574_ctorMatch), RAST.Expr.create_Block(_8576_printRhs))));
        _8542_i = (_8542_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _8572_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_8572_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_8540_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      RAST._IExpr _8579_printImplBody;
      _8579_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _8572_printImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _8580_printImpl;
      _8580_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8535_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8540_datatypeName), _8537_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8579_printImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _8581_defaultImpl;
      _8581_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _8582_asRefImpl;
      _8582_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        _8542_i = BigInteger.Zero;
        RAST._IExpr _8583_structName;
        _8583_structName = (RAST.Expr.create_Identifier(_8540_datatypeName)).MSel(DCOMPUTF16.__default.escapeIdent((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _8584_structAssignments;
        _8584_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        while ((_8542_i) < (new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count))) {
          DAST._IFormal _8585_formal;
          _8585_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_8542_i);
          _8584_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_8584_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent((_8585_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
          _8542_i = (_8542_i) + (BigInteger.One);
        }
        Dafny.ISequence<RAST._ITypeParam> _8586_defaultConstrainedTypeParams;
        _8586_defaultConstrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(_8534_sTypeParams, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _8587_fullType;
        _8587_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8540_datatypeName), _8537_typeParamsAsTypes);
        _8581_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8586_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _8587_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_8587_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_8583_structName, _8584_structAssignments))))))));
        _8582_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8586_defaultConstrainedTypeParams, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_8587_fullType), RAST.Type.create_Borrowed(_8587_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_8571_enumBody, _8580_printImpl), _8581_defaultImpl), _8582_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi25 = new BigInteger((p).Count);
        for (BigInteger _8588_i = BigInteger.Zero; _8588_i < _hi25; _8588_i++) {
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(((p).Select(_8588_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi26 = new BigInteger((p).Count);
        for (BigInteger _8589_i = BigInteger.Zero; _8589_i < _hi26; _8589_i++) {
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(((p).Select(_8589_i))));
        }
      }
      return r;
    }
    public static Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, bool inBinding, bool inFn)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _8590_i;
        _8590_i = BigInteger.Zero;
        while ((_8590_i) < (new BigInteger((args).Count))) {
          RAST._IType _8591_genTp;
          RAST._IType _out3942;
          _out3942 = DCOMPUTF16.COMP.GenType((args).Select(_8590_i), inBinding, inFn);
          _8591_genTp = _out3942;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_8591_genTp));
          _8590_i = (_8590_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public static bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public static RAST._IType GenType(DAST._IType c, bool inBinding, bool inFn)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source428 = c;
      if (_source428.is_Path) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8592___mcc_h0 = _source428.dtor_Path_a0;
        Dafny.ISequence<DAST._IType> _8593___mcc_h1 = _source428.dtor_typeArgs;
        DAST._IResolvedType _8594___mcc_h2 = _source428.dtor_resolved;
        DAST._IResolvedType _8595_resolved = _8594___mcc_h2;
        Dafny.ISequence<DAST._IType> _8596_args = _8593___mcc_h1;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8597_p = _8592___mcc_h0;
        {
          RAST._IType _8598_t;
          RAST._IType _out3943;
          _out3943 = DCOMPUTF16.COMP.GenPath(_8597_p);
          _8598_t = _out3943;
          Dafny.ISequence<RAST._IType> _8599_typeArgs;
          Dafny.ISequence<RAST._IType> _out3944;
          _out3944 = DCOMPUTF16.COMP.GenTypeArgs(_8596_args, inBinding, inFn);
          _8599_typeArgs = _out3944;
          s = RAST.Type.create_TypeApp(_8598_t, _8599_typeArgs);
          DAST._IResolvedType _source429 = _8595_resolved;
          if (_source429.is_AllocatedDatatype) {
            DAST._IDatatypeType _8600___mcc_h21 = _source429.dtor_datatypeType;
            DAST._IDatatypeType _source430 = _8600___mcc_h21;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8601___mcc_h22 = _source430.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _8602___mcc_h23 = _source430.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _8603_attributes = _8602___mcc_h23;
            {
              s = RAST.Type.create_PointerMut(s);
            }
          } else if (_source429.is_Datatype) {
            DAST._IDatatypeType _8604___mcc_h24 = _source429.dtor_datatypeType;
            DAST._IDatatypeType _source431 = _8604___mcc_h24;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8605___mcc_h25 = _source431.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _8606___mcc_h26 = _source431.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _8607_attributes = _8606___mcc_h26;
            {
              if (DCOMPUTF16.COMP.IsRcWrapped(_8607_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source429.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8608___mcc_h27 = _source429.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _8609___mcc_h28 = _source429.dtor_attributes;
            {
              if ((_8597_p).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = RAST.__default.Rc(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::any::Any")));
              } else {
                if (inBinding) {
                  s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
                } else {
                  s = RAST.Type.create_ImplType(s);
                }
              }
            }
          } else {
            DAST._IType _8610___mcc_h29 = _source429.dtor_baseType;
            DAST._INewtypeRange _8611___mcc_h30 = _source429.dtor_range;
            bool _8612___mcc_h31 = _source429.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _8613___mcc_h32 = _source429.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _8614_attributes = _8613___mcc_h32;
            bool _8615_erased = _8612___mcc_h31;
            DAST._INewtypeRange _8616_range = _8611___mcc_h30;
            DAST._IType _8617_t = _8610___mcc_h29;
            {
              if (_8615_erased) {
                Std.Wrappers._IOption<RAST._IType> _source432 = DCOMPUTF16.COMP.NewtypeToRustType(_8617_t, _8616_range);
                if (_source432.is_None) {
                } else {
                  RAST._IType _8618___mcc_h33 = _source432.dtor_value;
                  RAST._IType _8619_v = _8618___mcc_h33;
                  s = _8619_v;
                }
              }
            }
          }
        }
      } else if (_source428.is_Nullable) {
        DAST._IType _8620___mcc_h3 = _source428.dtor_Nullable_a0;
        DAST._IType _8621_inner = _8620___mcc_h3;
        {
          RAST._IType _8622_innerExpr;
          RAST._IType _out3945;
          _out3945 = DCOMPUTF16.COMP.GenType(_8621_inner, inBinding, inFn);
          _8622_innerExpr = _out3945;
          s = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::option::Option")), Dafny.Sequence<RAST._IType>.FromElements(_8622_innerExpr));
        }
      } else if (_source428.is_Tuple) {
        Dafny.ISequence<DAST._IType> _8623___mcc_h4 = _source428.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IType> _8624_types = _8623___mcc_h4;
        {
          Dafny.ISequence<RAST._IType> _8625_args;
          _8625_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _8626_i;
          _8626_i = BigInteger.Zero;
          while ((_8626_i) < (new BigInteger((_8624_types).Count))) {
            RAST._IType _8627_generated;
            RAST._IType _out3946;
            _out3946 = DCOMPUTF16.COMP.GenType((_8624_types).Select(_8626_i), inBinding, inFn);
            _8627_generated = _out3946;
            _8625_args = Dafny.Sequence<RAST._IType>.Concat(_8625_args, Dafny.Sequence<RAST._IType>.FromElements(_8627_generated));
            _8626_i = (_8626_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_8625_args);
        }
      } else if (_source428.is_Array) {
        DAST._IType _8628___mcc_h5 = _source428.dtor_element;
        BigInteger _8629___mcc_h6 = _source428.dtor_dims;
        BigInteger _8630_dims = _8629___mcc_h6;
        DAST._IType _8631_element = _8628___mcc_h5;
        {
          RAST._IType _8632_elem;
          RAST._IType _out3947;
          _out3947 = DCOMPUTF16.COMP.GenType(_8631_element, inBinding, inFn);
          _8632_elem = _out3947;
          s = _8632_elem;
          BigInteger _8633_i;
          _8633_i = BigInteger.Zero;
          while ((_8633_i) < (_8630_dims)) {
            s = RAST.__default.Rc(RAST.__default.RefCell(RAST.__default.Vec(s)));
            _8633_i = (_8633_i) + (BigInteger.One);
          }
        }
      } else if (_source428.is_Seq) {
        DAST._IType _8634___mcc_h7 = _source428.dtor_element;
        DAST._IType _8635_element = _8634___mcc_h7;
        {
          RAST._IType _8636_elem;
          RAST._IType _out3948;
          _out3948 = DCOMPUTF16.COMP.GenType(_8635_element, inBinding, inFn);
          _8636_elem = _out3948;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_8636_elem));
        }
      } else if (_source428.is_Set) {
        DAST._IType _8637___mcc_h8 = _source428.dtor_element;
        DAST._IType _8638_element = _8637___mcc_h8;
        {
          RAST._IType _8639_elem;
          RAST._IType _out3949;
          _out3949 = DCOMPUTF16.COMP.GenType(_8638_element, inBinding, inFn);
          _8639_elem = _out3949;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_8639_elem));
        }
      } else if (_source428.is_Multiset) {
        DAST._IType _8640___mcc_h9 = _source428.dtor_element;
        DAST._IType _8641_element = _8640___mcc_h9;
        {
          RAST._IType _8642_elem;
          RAST._IType _out3950;
          _out3950 = DCOMPUTF16.COMP.GenType(_8641_element, inBinding, inFn);
          _8642_elem = _out3950;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_8642_elem));
        }
      } else if (_source428.is_Map) {
        DAST._IType _8643___mcc_h10 = _source428.dtor_key;
        DAST._IType _8644___mcc_h11 = _source428.dtor_value;
        DAST._IType _8645_value = _8644___mcc_h11;
        DAST._IType _8646_key = _8643___mcc_h10;
        {
          RAST._IType _8647_keyType;
          RAST._IType _out3951;
          _out3951 = DCOMPUTF16.COMP.GenType(_8646_key, inBinding, inFn);
          _8647_keyType = _out3951;
          RAST._IType _8648_valueType;
          RAST._IType _out3952;
          _out3952 = DCOMPUTF16.COMP.GenType(_8645_value, inBinding, inFn);
          _8648_valueType = _out3952;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_8647_keyType, _8648_valueType));
        }
      } else if (_source428.is_SetBuilder) {
        DAST._IType _8649___mcc_h12 = _source428.dtor_element;
        DAST._IType _8650_elem = _8649___mcc_h12;
        {
          RAST._IType _8651_elemType;
          RAST._IType _out3953;
          _out3953 = DCOMPUTF16.COMP.GenType(_8650_elem, inBinding, inFn);
          _8651_elemType = _out3953;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_8651_elemType));
        }
      } else if (_source428.is_MapBuilder) {
        DAST._IType _8652___mcc_h13 = _source428.dtor_key;
        DAST._IType _8653___mcc_h14 = _source428.dtor_value;
        DAST._IType _8654_value = _8653___mcc_h14;
        DAST._IType _8655_key = _8652___mcc_h13;
        {
          RAST._IType _8656_keyType;
          RAST._IType _out3954;
          _out3954 = DCOMPUTF16.COMP.GenType(_8655_key, inBinding, inFn);
          _8656_keyType = _out3954;
          RAST._IType _8657_valueType;
          RAST._IType _out3955;
          _out3955 = DCOMPUTF16.COMP.GenType(_8654_value, inBinding, inFn);
          _8657_valueType = _out3955;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_8656_keyType, _8657_valueType));
        }
      } else if (_source428.is_Arrow) {
        Dafny.ISequence<DAST._IType> _8658___mcc_h15 = _source428.dtor_args;
        DAST._IType _8659___mcc_h16 = _source428.dtor_result;
        DAST._IType _8660_result = _8659___mcc_h16;
        Dafny.ISequence<DAST._IType> _8661_args = _8658___mcc_h15;
        {
          Dafny.ISequence<RAST._IType> _8662_argTypes;
          _8662_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _8663_i;
          _8663_i = BigInteger.Zero;
          while ((_8663_i) < (new BigInteger((_8661_args).Count))) {
            RAST._IType _8664_generated;
            RAST._IType _out3956;
            _out3956 = DCOMPUTF16.COMP.GenType((_8661_args).Select(_8663_i), inBinding, true);
            _8664_generated = _out3956;
            _8662_argTypes = Dafny.Sequence<RAST._IType>.Concat(_8662_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_8664_generated)));
            _8663_i = (_8663_i) + (BigInteger.One);
          }
          RAST._IType _8665_resultType;
          RAST._IType _out3957;
          _out3957 = DCOMPUTF16.COMP.GenType(_8660_result, inBinding, (inFn) || (inBinding));
          _8665_resultType = _out3957;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("FunctionWrapper")), Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_FnType(_8662_argTypes, RAST.Type.create_IntersectionType(_8665_resultType, RAST.__default.StaticTrait))));
        }
      } else if (_source428.is_Primitive) {
        DAST._IPrimitive _8666___mcc_h17 = _source428.dtor_Primitive_a0;
        DAST._IPrimitive _8667_p = _8666___mcc_h17;
        {
          DAST._IPrimitive _source433 = _8667_p;
          if (_source433.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source433.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source433.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel(DCOMPUTF16.__default.DafnyChar)));
          } else if (_source433.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel(DCOMPUTF16.__default.DafnyChar);
          }
        }
      } else if (_source428.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _8668___mcc_h18 = _source428.dtor_Passthrough_a0;
        Dafny.ISequence<Dafny.Rune> _8669_v = _8668___mcc_h18;
        s = RAST.__default.RawType(_8669_v);
      } else {
        Dafny.ISequence<Dafny.Rune> _8670___mcc_h19 = _source428.dtor_TypeArg_a0;
        Dafny.ISequence<Dafny.Rune> _source434 = _8670___mcc_h19;
        Dafny.ISequence<Dafny.Rune> _8671___mcc_h20 = _source434;
        Dafny.ISequence<Dafny.Rune> _8672_name = _8671___mcc_h20;
        s = RAST.__default.RawType(DCOMPUTF16.__default.escapeIdent(_8672_name));
      }
      return s;
    }
    public static void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _8673_i;
      _8673_i = BigInteger.Zero;
      while ((_8673_i) < (new BigInteger((body).Count))) {
        DAST._IMethod _source435 = (body).Select(_8673_i);
        DAST._IMethod _8674___mcc_h0 = _source435;
        DAST._IMethod _8675_m = _8674___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source436 = (_8675_m).dtor_overridingPath;
          if (_source436.is_None) {
            {
              RAST._IImplMember _8676_generated;
              RAST._IImplMember _out3958;
              _out3958 = DCOMPUTF16.COMP.GenMethod(_8675_m, forTrait, enclosingType, enclosingTypeParams);
              _8676_generated = _out3958;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_8676_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8677___mcc_h1 = _source436.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8678_p = _8677___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _8679_existing;
              _8679_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_8678_p)) {
                _8679_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_8678_p);
              }
              RAST._IImplMember _8680_genMethod;
              RAST._IImplMember _out3959;
              _out3959 = DCOMPUTF16.COMP.GenMethod(_8675_m, true, enclosingType, enclosingTypeParams);
              _8680_genMethod = _out3959;
              _8679_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_8679_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_8680_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_8678_p, _8679_existing)));
            }
          }
        }
        _8673_i = (_8673_i) + (BigInteger.One);
      }
    }
    public static Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _8681_i;
      _8681_i = BigInteger.Zero;
      while ((_8681_i) < (new BigInteger((@params).Count))) {
        DAST._IFormal _8682_param;
        _8682_param = (@params).Select(_8681_i);
        RAST._IType _8683_paramType;
        RAST._IType _out3960;
        _out3960 = DCOMPUTF16.COMP.GenType((_8682_param).dtor_typ, false, false);
        _8683_paramType = _out3960;
        if (!((_8683_paramType).HasCopySemantics())) {
          _8683_paramType = RAST.Type.create_Borrowed(_8683_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_8682_param).dtor_name), _8683_paramType)));
        _8681_i = (_8681_i) + (BigInteger.One);
      }
      return s;
    }
    public static RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _8684_params;
      Dafny.ISequence<RAST._IFormal> _out3961;
      _out3961 = DCOMPUTF16.COMP.GenParams((m).dtor_params);
      _8684_params = _out3961;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8685_paramNames;
      _8685_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _8686_paramTypes;
      _8686_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi27 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _8687_paramI = BigInteger.Zero; _8687_paramI < _hi27; _8687_paramI++) {
        DAST._IFormal _8688_dafny__formal;
        _8688_dafny__formal = ((m).dtor_params).Select(_8687_paramI);
        RAST._IFormal _8689_formal;
        _8689_formal = (_8684_params).Select(_8687_paramI);
        Dafny.ISequence<Dafny.Rune> _8690_name;
        _8690_name = (_8689_formal).dtor_name;
        _8685_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8685_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8690_name));
        _8686_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8686_paramTypes, _8690_name, (_8689_formal).dtor_tpe);
      }
      if (!((m).dtor_isStatic)) {
        if (forTrait) {
          _8684_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), _8684_params);
        } else {
          RAST._IType _8691_tpe;
          RAST._IType _out3962;
          _out3962 = DCOMPUTF16.COMP.GenType(enclosingType, false, false);
          _8691_tpe = _out3962;
          _8684_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_Borrowed(_8691_tpe))), _8684_params);
        }
      }
      Dafny.ISequence<RAST._IType> _8692_retTypeArgs;
      _8692_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _8693_typeI;
      _8693_typeI = BigInteger.Zero;
      while ((_8693_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _8694_typeExpr;
        RAST._IType _out3963;
        _out3963 = DCOMPUTF16.COMP.GenType(((m).dtor_outTypes).Select(_8693_typeI), false, false);
        _8694_typeExpr = _out3963;
        _8692_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_8692_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_8694_typeExpr));
        _8693_typeI = (_8693_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _8695_visibility;
      _8695_visibility = RAST.Visibility.create_PUB();
      Dafny.ISequence<Dafny.Rune> _8696_fnName;
      _8696_fnName = DCOMPUTF16.__default.escapeIdent((m).dtor_name);
      Dafny.ISequence<DAST._IType> _8697_typeParamsFiltered;
      _8697_typeParamsFiltered = Dafny.Sequence<DAST._IType>.FromElements();
      BigInteger _8698_typeParamI;
      _8698_typeParamI = BigInteger.Zero;
      while ((_8698_typeParamI) < (new BigInteger(((m).dtor_typeParams).Count))) {
        DAST._IType _8699_typeParam;
        _8699_typeParam = ((m).dtor_typeParams).Select(_8698_typeParamI);
        if (!((enclosingTypeParams).Contains(_8699_typeParam))) {
          _8697_typeParamsFiltered = Dafny.Sequence<DAST._IType>.Concat(_8697_typeParamsFiltered, Dafny.Sequence<DAST._IType>.FromElements(_8699_typeParam));
        }
        _8698_typeParamI = (_8698_typeParamI) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.Rune> _8700_whereClauses;
      _8700_whereClauses = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      Dafny.ISequence<RAST._ITypeParam> _8701_typeParams;
      _8701_typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      if ((new BigInteger((_8697_typeParamsFiltered).Count)).Sign == 1) {
        _8700_whereClauses = Dafny.Sequence<Dafny.Rune>.Concat(_8700_whereClauses, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" where "));
        BigInteger _8702_i;
        _8702_i = BigInteger.Zero;
        while ((_8702_i) < (new BigInteger((_8697_typeParamsFiltered).Count))) {
          RAST._IType _8703_typeExpr;
          RAST._IType _out3964;
          _out3964 = DCOMPUTF16.COMP.GenType((_8697_typeParamsFiltered).Select(_8702_i), false, false);
          _8703_typeExpr = _out3964;
          _8701_typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(_8701_typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_8703_typeExpr)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.DefaultTrait, RAST.__default.StaticTrait))));
          _8702_i = (_8702_i) + (BigInteger.One);
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _8704_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMPUTF16._IEnvironment _8705_env = DCOMPUTF16.Environment.Default();
      if ((m).dtor_hasBody) {
        RAST._IExpr _8706_earlyReturn;
        _8706_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source437 = (m).dtor_outVars;
        if (_source437.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8707___mcc_h0 = _source437.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8708_outVars = _8707___mcc_h0;
          {
            Dafny.ISequence<RAST._IExpr> _8709_tupleArgs;
            _8709_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
            BigInteger _hi28 = new BigInteger((_8708_outVars).Count);
            for (BigInteger _8710_outI = BigInteger.Zero; _8710_outI < _hi28; _8710_outI++) {
              Dafny.ISequence<Dafny.Rune> _8711_outVar;
              _8711_outVar = (_8708_outVars).Select(_8710_outI);
              RAST._IType _8712_outType;
              RAST._IType _out3965;
              _out3965 = DCOMPUTF16.COMP.GenType(((m).dtor_outTypes).Select(_8710_outI), false, false);
              _8712_outType = _out3965;
              Dafny.ISequence<Dafny.Rune> _8713_outName;
              _8713_outName = DCOMPUTF16.__default.escapeIdent((_8711_outVar));
              _8685_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8685_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8713_outName));
              RAST._IType _8714_outMaybeType;
              _8714_outMaybeType = (((_8712_outType).HasCopySemantics()) ? (_8712_outType) : (RAST.__default.MaybePlaceboType(_8712_outType)));
              _8686_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8686_paramTypes, _8713_outName, _8714_outMaybeType);
              RAST._IExpr _8715_outVarReturn;
              DCOMPUTF16._IOwnership _8716___v52;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8717___v53;
              RAST._IExpr _out3966;
              DCOMPUTF16._IOwnership _out3967;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3968;
              DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Ident((_8711_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8713_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_8713_outName, _8714_outMaybeType))), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3966, out _out3967, out _out3968);
              _8715_outVarReturn = _out3966;
              _8716___v52 = _out3967;
              _8717___v53 = _out3968;
              _8709_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_8709_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_8715_outVarReturn));
            }
            if ((new BigInteger((_8709_tupleArgs).Count)) == (BigInteger.One)) {
              _8706_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_8709_tupleArgs).Select(BigInteger.Zero)));
            } else {
              _8706_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_8709_tupleArgs)));
            }
          }
        }
        _8705_env = DCOMPUTF16.Environment.create(_8685_paramNames, _8686_paramTypes);
        RAST._IExpr _8718_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8719___v54;
        DCOMPUTF16._IEnvironment _8720___v55;
        RAST._IExpr _out3969;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3970;
        DCOMPUTF16._IEnvironment _out3971;
        DCOMPUTF16.COMP.GenStmts((m).dtor_body, (((m).dtor_isStatic) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))), _8705_env, true, _8706_earlyReturn, out _out3969, out _out3970, out _out3971);
        _8718_body = _out3969;
        _8719___v54 = _out3970;
        _8720___v55 = _out3971;
        _8704_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some(_8718_body);
      } else {
        _8705_env = DCOMPUTF16.Environment.create(_8685_paramNames, _8686_paramTypes);
        _8704_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_8695_visibility, RAST.Fn.create(_8696_fnName, _8701_typeParams, _8684_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_8692_retTypeArgs).Count)) == (BigInteger.One)) ? ((_8692_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_8692_retTypeArgs)))), _8700_whereClauses, _8704_fBody));
      return s;
    }
    public static void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMPUTF16._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMPUTF16.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8721_declarations;
      _8721_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _8722_i;
      _8722_i = BigInteger.Zero;
      newEnv = env;
      Dafny.ISequence<DAST._IStatement> _8723_stmts;
      _8723_stmts = stmts;
      while ((_8722_i) < (new BigInteger((_8723_stmts).Count))) {
        DAST._IStatement _8724_stmt;
        _8724_stmt = (_8723_stmts).Select(_8722_i);
        DAST._IStatement _source438 = _8724_stmt;
        if (_source438.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _8725___mcc_h0 = _source438.dtor_name;
          DAST._IType _8726___mcc_h1 = _source438.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _8727___mcc_h2 = _source438.dtor_maybeValue;
          Std.Wrappers._IOption<DAST._IExpression> _source439 = _8727___mcc_h2;
          if (_source439.is_None) {
            DAST._IType _8728_optType = _8726___mcc_h1;
            Dafny.ISequence<Dafny.Rune> _8729_name = _8725___mcc_h0;
            if (((_8722_i) + (BigInteger.One)) < (new BigInteger((_8723_stmts).Count))) {
              DAST._IStatement _source440 = (_8723_stmts).Select((_8722_i) + (BigInteger.One));
              if (_source440.is_DeclareVar) {
                Dafny.ISequence<Dafny.Rune> _8730___mcc_h52 = _source440.dtor_name;
                DAST._IType _8731___mcc_h53 = _source440.dtor_typ;
                Std.Wrappers._IOption<DAST._IExpression> _8732___mcc_h54 = _source440.dtor_maybeValue;
              } else if (_source440.is_Assign) {
                DAST._IAssignLhs _8733___mcc_h58 = _source440.dtor_lhs;
                DAST._IExpression _8734___mcc_h59 = _source440.dtor_value;
                DAST._IAssignLhs _source441 = _8733___mcc_h58;
                if (_source441.is_Ident) {
                  Dafny.ISequence<Dafny.Rune> _8735___mcc_h62 = _source441.dtor_ident;
                  Dafny.ISequence<Dafny.Rune> _source442 = _8735___mcc_h62;
                  Dafny.ISequence<Dafny.Rune> _8736___mcc_h64 = _source442;
                  DAST._IExpression _8737_rhs = _8734___mcc_h59;
                  Dafny.ISequence<Dafny.Rune> _8738_name2 = _8736___mcc_h64;
                  if ((_8738_name2).Equals(_8729_name)) {
                    _8723_stmts = Dafny.Sequence<DAST._IStatement>.Concat(Dafny.Sequence<DAST._IStatement>.Concat((_8723_stmts).Subsequence(BigInteger.Zero, _8722_i), Dafny.Sequence<DAST._IStatement>.FromElements(DAST.Statement.create_DeclareVar(_8729_name, _8728_optType, Std.Wrappers.Option<DAST._IExpression>.create_Some(_8737_rhs)))), (_8723_stmts).Drop((_8722_i) + (BigInteger.One)));
                    _8724_stmt = (_8723_stmts).Select(_8722_i);
                  }
                } else if (_source441.is_Select) {
                  DAST._IExpression _8739___mcc_h66 = _source441.dtor_expr;
                  Dafny.ISequence<Dafny.Rune> _8740___mcc_h67 = _source441.dtor_field;
                } else {
                  DAST._IExpression _8741___mcc_h70 = _source441.dtor_expr;
                  Dafny.ISequence<DAST._IExpression> _8742___mcc_h71 = _source441.dtor_indices;
                }
              } else if (_source440.is_If) {
                DAST._IExpression _8743___mcc_h74 = _source440.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _8744___mcc_h75 = _source440.dtor_thn;
                Dafny.ISequence<DAST._IStatement> _8745___mcc_h76 = _source440.dtor_els;
              } else if (_source440.is_Labeled) {
                Dafny.ISequence<Dafny.Rune> _8746___mcc_h80 = _source440.dtor_lbl;
                Dafny.ISequence<DAST._IStatement> _8747___mcc_h81 = _source440.dtor_body;
              } else if (_source440.is_While) {
                DAST._IExpression _8748___mcc_h84 = _source440.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _8749___mcc_h85 = _source440.dtor_body;
              } else if (_source440.is_Foreach) {
                Dafny.ISequence<Dafny.Rune> _8750___mcc_h88 = _source440.dtor_boundName;
                DAST._IType _8751___mcc_h89 = _source440.dtor_boundType;
                DAST._IExpression _8752___mcc_h90 = _source440.dtor_over;
                Dafny.ISequence<DAST._IStatement> _8753___mcc_h91 = _source440.dtor_body;
              } else if (_source440.is_Call) {
                DAST._IExpression _8754___mcc_h96 = _source440.dtor_on;
                DAST._ICallName _8755___mcc_h97 = _source440.dtor_callName;
                Dafny.ISequence<DAST._IType> _8756___mcc_h98 = _source440.dtor_typeArgs;
                Dafny.ISequence<DAST._IExpression> _8757___mcc_h99 = _source440.dtor_args;
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8758___mcc_h100 = _source440.dtor_outs;
              } else if (_source440.is_Return) {
                DAST._IExpression _8759___mcc_h106 = _source440.dtor_expr;
              } else if (_source440.is_EarlyReturn) {
              } else if (_source440.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8760___mcc_h108 = _source440.dtor_toLabel;
              } else if (_source440.is_TailRecursive) {
                Dafny.ISequence<DAST._IStatement> _8761___mcc_h110 = _source440.dtor_body;
              } else if (_source440.is_JumpTailCallStart) {
              } else if (_source440.is_Halt) {
              } else {
                DAST._IExpression _8762___mcc_h112 = _source440.dtor_Print_a0;
              }
            }
          } else {
            DAST._IExpression _8763___mcc_h6 = _source439.dtor_value;
          }
        } else if (_source438.is_Assign) {
          DAST._IAssignLhs _8764___mcc_h8 = _source438.dtor_lhs;
          DAST._IExpression _8765___mcc_h9 = _source438.dtor_value;
        } else if (_source438.is_If) {
          DAST._IExpression _8766___mcc_h12 = _source438.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8767___mcc_h13 = _source438.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _8768___mcc_h14 = _source438.dtor_els;
        } else if (_source438.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _8769___mcc_h18 = _source438.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _8770___mcc_h19 = _source438.dtor_body;
        } else if (_source438.is_While) {
          DAST._IExpression _8771___mcc_h22 = _source438.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8772___mcc_h23 = _source438.dtor_body;
        } else if (_source438.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _8773___mcc_h26 = _source438.dtor_boundName;
          DAST._IType _8774___mcc_h27 = _source438.dtor_boundType;
          DAST._IExpression _8775___mcc_h28 = _source438.dtor_over;
          Dafny.ISequence<DAST._IStatement> _8776___mcc_h29 = _source438.dtor_body;
        } else if (_source438.is_Call) {
          DAST._IExpression _8777___mcc_h34 = _source438.dtor_on;
          DAST._ICallName _8778___mcc_h35 = _source438.dtor_callName;
          Dafny.ISequence<DAST._IType> _8779___mcc_h36 = _source438.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _8780___mcc_h37 = _source438.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8781___mcc_h38 = _source438.dtor_outs;
        } else if (_source438.is_Return) {
          DAST._IExpression _8782___mcc_h44 = _source438.dtor_expr;
        } else if (_source438.is_EarlyReturn) {
        } else if (_source438.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8783___mcc_h46 = _source438.dtor_toLabel;
        } else if (_source438.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _8784___mcc_h48 = _source438.dtor_body;
        } else if (_source438.is_JumpTailCallStart) {
        } else if (_source438.is_Halt) {
        } else {
          DAST._IExpression _8785___mcc_h50 = _source438.dtor_Print_a0;
        }
        RAST._IExpr _8786_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8787_recIdents;
        DCOMPUTF16._IEnvironment _8788_newEnv2;
        RAST._IExpr _out3972;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3973;
        DCOMPUTF16._IEnvironment _out3974;
        DCOMPUTF16.COMP.GenStmt(_8724_stmt, selfIdent, newEnv, (isLast) && ((_8722_i) == ((new BigInteger((_8723_stmts).Count)) - (BigInteger.One))), earlyReturn, out _out3972, out _out3973, out _out3974);
        _8786_stmtExpr = _out3972;
        _8787_recIdents = _out3973;
        _8788_newEnv2 = _out3974;
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_8787_recIdents, _8721_declarations));
        newEnv = _8788_newEnv2;
        DAST._IStatement _source443 = _8724_stmt;
        if (_source443.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _8789___mcc_h114 = _source443.dtor_name;
          DAST._IType _8790___mcc_h115 = _source443.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _8791___mcc_h116 = _source443.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _8792_name = _8789___mcc_h114;
          {
            _8721_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8721_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8792_name));
          }
        } else if (_source443.is_Assign) {
          DAST._IAssignLhs _8793___mcc_h120 = _source443.dtor_lhs;
          DAST._IExpression _8794___mcc_h121 = _source443.dtor_value;
        } else if (_source443.is_If) {
          DAST._IExpression _8795___mcc_h124 = _source443.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8796___mcc_h125 = _source443.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _8797___mcc_h126 = _source443.dtor_els;
        } else if (_source443.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _8798___mcc_h130 = _source443.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _8799___mcc_h131 = _source443.dtor_body;
        } else if (_source443.is_While) {
          DAST._IExpression _8800___mcc_h134 = _source443.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8801___mcc_h135 = _source443.dtor_body;
        } else if (_source443.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _8802___mcc_h138 = _source443.dtor_boundName;
          DAST._IType _8803___mcc_h139 = _source443.dtor_boundType;
          DAST._IExpression _8804___mcc_h140 = _source443.dtor_over;
          Dafny.ISequence<DAST._IStatement> _8805___mcc_h141 = _source443.dtor_body;
        } else if (_source443.is_Call) {
          DAST._IExpression _8806___mcc_h146 = _source443.dtor_on;
          DAST._ICallName _8807___mcc_h147 = _source443.dtor_callName;
          Dafny.ISequence<DAST._IType> _8808___mcc_h148 = _source443.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _8809___mcc_h149 = _source443.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8810___mcc_h150 = _source443.dtor_outs;
        } else if (_source443.is_Return) {
          DAST._IExpression _8811___mcc_h156 = _source443.dtor_expr;
        } else if (_source443.is_EarlyReturn) {
        } else if (_source443.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8812___mcc_h158 = _source443.dtor_toLabel;
        } else if (_source443.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _8813___mcc_h160 = _source443.dtor_body;
        } else if (_source443.is_JumpTailCallStart) {
        } else if (_source443.is_Halt) {
        } else {
          DAST._IExpression _8814___mcc_h162 = _source443.dtor_Print_a0;
        }
        generated = (generated).Then(_8786_stmtExpr);
        _8722_i = (_8722_i) + (BigInteger.One);
      }
    }
    public static void GenAssignLhs(DAST._IAssignLhs lhs, Dafny.ISequence<Dafny.Rune> rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, out Dafny.ISequence<Dafny.Rune> generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      generated = Dafny.Sequence<Dafny.Rune>.Empty;
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IAssignLhs _source444 = lhs;
      if (_source444.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _8815___mcc_h0 = _source444.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source445 = _8815___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _8816___mcc_h1 = _source445;
        Dafny.ISequence<Dafny.Rune> _8817_id = _8816___mcc_h1;
        {
          if (((env).IsBorrowed(_8817_id)) || ((env).IsBorrowedMut(_8817_id))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), DCOMPUTF16.__default.escapeIdent(_8817_id));
          } else {
            generated = DCOMPUTF16.__default.escapeIdent(_8817_id);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8817_id);
          needsIIFE = false;
        }
      } else if (_source444.is_Select) {
        DAST._IExpression _8818___mcc_h2 = _source444.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _8819___mcc_h3 = _source444.dtor_field;
        Dafny.ISequence<Dafny.Rune> _8820_field = _8819___mcc_h3;
        DAST._IExpression _8821_on = _8818___mcc_h2;
        {
          RAST._IExpr _8822_onExpr;
          DCOMPUTF16._IOwnership _8823_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8824_recIdents;
          RAST._IExpr _out3975;
          DCOMPUTF16._IOwnership _out3976;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3977;
          DCOMPUTF16.COMP.GenExpr(_8821_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3975, out _out3976, out _out3977);
          _8822_onExpr = _out3975;
          _8823_onOwned = _out3976;
          _8824_recIdents = _out3977;
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*("), (_8822_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _8820_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()) = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
          readIdents = _8824_recIdents;
          needsIIFE = true;
        }
      } else {
        DAST._IExpression _8825___mcc_h4 = _source444.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _8826___mcc_h5 = _source444.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _8827_indices = _8826___mcc_h5;
        DAST._IExpression _8828_on = _8825___mcc_h4;
        {
          RAST._IExpr _8829_onExpr;
          DCOMPUTF16._IOwnership _8830_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8831_recIdents;
          RAST._IExpr _out3978;
          DCOMPUTF16._IOwnership _out3979;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3980;
          DCOMPUTF16.COMP.GenExpr(_8828_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3978, out _out3979, out _out3980);
          _8829_onExpr = _out3978;
          _8830_onOwned = _out3979;
          _8831_recIdents = _out3980;
          readIdents = _8831_recIdents;
          generated = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          BigInteger _8832_i;
          _8832_i = BigInteger.Zero;
          while ((_8832_i) < (new BigInteger((_8827_indices).Count))) {
            RAST._IExpr _8833_idx;
            DCOMPUTF16._IOwnership _8834___v61;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8835_recIdentsIdx;
            RAST._IExpr _out3981;
            DCOMPUTF16._IOwnership _out3982;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3983;
            DCOMPUTF16.COMP.GenExpr((_8827_indices).Select(_8832_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3981, out _out3982, out _out3983);
            _8833_idx = _out3981;
            _8834___v61 = _out3982;
            _8835_recIdentsIdx = _out3983;
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let __idx")), Std.Strings.__default.OfNat(_8832_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = <usize as ::dafny_runtime::NumCast>::from(")), (_8833_idx)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap();\n"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8835_recIdentsIdx);
            _8832_i = (_8832_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, (_8829_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()"));
          _8832_i = BigInteger.Zero;
          while ((_8832_i) < (new BigInteger((_8827_indices).Count))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[__idx")), Std.Strings.__default.OfNat(_8832_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            _8832_i = (_8832_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n}"));
          needsIIFE = true;
        }
      }
    }
    public static void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMPUTF16._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMPUTF16.Environment.Default();
      DAST._IStatement _source446 = stmt;
      if (_source446.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _8836___mcc_h0 = _source446.dtor_name;
        DAST._IType _8837___mcc_h1 = _source446.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _8838___mcc_h2 = _source446.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source447 = _8838___mcc_h2;
        if (_source447.is_None) {
          DAST._IType _8839_typ = _8837___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _8840_name = _8836___mcc_h0;
          {
            DAST._IStatement _8841_newStmt;
            _8841_newStmt = DAST.Statement.create_DeclareVar(_8840_name, _8839_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_8839_typ)));
            RAST._IExpr _out3984;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3985;
            DCOMPUTF16._IEnvironment _out3986;
            DCOMPUTF16.COMP.GenStmt(_8841_newStmt, selfIdent, env, isLast, earlyReturn, out _out3984, out _out3985, out _out3986);
            generated = _out3984;
            readIdents = _out3985;
            newEnv = _out3986;
          }
        } else {
          DAST._IExpression _8842___mcc_h3 = _source447.dtor_value;
          DAST._IExpression _8843_expression = _8842___mcc_h3;
          DAST._IType _8844_typ = _8837___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _8845_name = _8836___mcc_h0;
          {
            RAST._IType _8846_tpe;
            RAST._IType _out3987;
            _out3987 = DCOMPUTF16.COMP.GenType(_8844_typ, true, false);
            _8846_tpe = _out3987;
            Dafny.ISequence<Dafny.Rune> _8847_varName;
            _8847_varName = DCOMPUTF16.__default.escapeIdent(_8845_name);
            bool _8848_hasCopySemantics;
            _8848_hasCopySemantics = (_8846_tpe).HasCopySemantics();
            if (((_8843_expression).is_InitializationValue) && (!(_8848_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _8847_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_8846_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_8847_varName, RAST.__default.MaybePlaceboType(_8846_tpe));
            } else {
              RAST._IExpr _8849_expr = RAST.Expr.Default();
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8850_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
              if (((_8843_expression).is_InitializationValue) && (((_8846_tpe).is_Pointer) || ((_8846_tpe).is_PointerMut))) {
                _8849_expr = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ptr"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("null_mut"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                _8850_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              } else {
                DCOMPUTF16._IOwnership _8851_exprOwnership = DCOMPUTF16.Ownership.Default();
                RAST._IExpr _out3988;
                DCOMPUTF16._IOwnership _out3989;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3990;
                DCOMPUTF16.COMP.GenExpr(_8843_expression, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3988, out _out3989, out _out3990);
                _8849_expr = _out3988;
                _8851_exprOwnership = _out3989;
                _8850_recIdents = _out3990;
              }
              readIdents = _8850_recIdents;
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMPUTF16.__default.escapeIdent(_8845_name), Std.Wrappers.Option<RAST._IType>.create_Some(_8846_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8849_expr));
              newEnv = (env).AddAssigned(DCOMPUTF16.__default.escapeIdent(_8845_name), _8846_tpe);
            }
          }
        }
      } else if (_source446.is_Assign) {
        DAST._IAssignLhs _8852___mcc_h4 = _source446.dtor_lhs;
        DAST._IExpression _8853___mcc_h5 = _source446.dtor_value;
        DAST._IExpression _8854_expression = _8853___mcc_h5;
        DAST._IAssignLhs _8855_lhs = _8852___mcc_h4;
        {
          Dafny.ISequence<Dafny.Rune> _8856_lhsGen;
          bool _8857_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8858_recIdents;
          Dafny.ISequence<Dafny.Rune> _out3991;
          bool _out3992;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3993;
          DCOMPUTF16.COMP.GenAssignLhs(_8855_lhs, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), selfIdent, env, out _out3991, out _out3992, out _out3993);
          _8856_lhsGen = _out3991;
          _8857_needsIIFE = _out3992;
          _8858_recIdents = _out3993;
          RAST._IExpr _8859_exprGen;
          DCOMPUTF16._IOwnership _8860___v62;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8861_exprIdents;
          RAST._IExpr _out3994;
          DCOMPUTF16._IOwnership _out3995;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3996;
          DCOMPUTF16.COMP.GenExpr(_8854_expression, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3994, out _out3995, out _out3996);
          _8859_exprGen = _out3994;
          _8860___v62 = _out3995;
          _8861_exprIdents = _out3996;
          if (_8857_needsIIFE) {
            newEnv = env;
            generated = RAST.Expr.create_Block(RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8859_exprGen)), RAST.Expr.create_RawExpr(_8856_lhsGen)));
          } else {
            if ((_8855_lhs).is_Ident) {
              Dafny.ISequence<Dafny.Rune> _8862_rustId;
              _8862_rustId = DCOMPUTF16.__default.escapeIdent(((_8855_lhs).dtor_ident));
              Std.Wrappers._IOption<RAST._IType> _8863_tpe;
              _8863_tpe = (env).GetType(_8862_rustId);
              if (((_8863_tpe).is_Some) && ((((_8863_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
                _8859_exprGen = RAST.__default.MaybePlacebo(_8859_exprGen);
              }
            }
            generated = RAST.__default.AssignVar(_8856_lhsGen, _8859_exprGen);
            newEnv = env;
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8858_recIdents, _8861_exprIdents);
        }
      } else if (_source446.is_If) {
        DAST._IExpression _8864___mcc_h6 = _source446.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _8865___mcc_h7 = _source446.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _8866___mcc_h8 = _source446.dtor_els;
        Dafny.ISequence<DAST._IStatement> _8867_elsDafny = _8866___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _8868_thnDafny = _8865___mcc_h7;
        DAST._IExpression _8869_cond = _8864___mcc_h6;
        {
          RAST._IExpr _8870_cond;
          DCOMPUTF16._IOwnership _8871___v63;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8872_recIdents;
          RAST._IExpr _out3997;
          DCOMPUTF16._IOwnership _out3998;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3999;
          DCOMPUTF16.COMP.GenExpr(_8869_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3997, out _out3998, out _out3999);
          _8870_cond = _out3997;
          _8871___v63 = _out3998;
          _8872_recIdents = _out3999;
          Dafny.ISequence<Dafny.Rune> _8873_condString;
          _8873_condString = (_8870_cond)._ToString(DCOMPUTF16.__default.IND);
          readIdents = _8872_recIdents;
          RAST._IExpr _8874_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8875_thnIdents;
          DCOMPUTF16._IEnvironment _8876_thnEnv;
          RAST._IExpr _out4000;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4001;
          DCOMPUTF16._IEnvironment _out4002;
          DCOMPUTF16.COMP.GenStmts(_8868_thnDafny, selfIdent, env, isLast, earlyReturn, out _out4000, out _out4001, out _out4002);
          _8874_thn = _out4000;
          _8875_thnIdents = _out4001;
          _8876_thnEnv = _out4002;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8875_thnIdents);
          RAST._IExpr _8877_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8878_elsIdents;
          DCOMPUTF16._IEnvironment _8879_elsEnv;
          RAST._IExpr _out4003;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4004;
          DCOMPUTF16._IEnvironment _out4005;
          DCOMPUTF16.COMP.GenStmts(_8867_elsDafny, selfIdent, env, isLast, earlyReturn, out _out4003, out _out4004, out _out4005);
          _8877_els = _out4003;
          _8878_elsIdents = _out4004;
          _8879_elsEnv = _out4005;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8878_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_8870_cond, _8874_thn, _8877_els);
        }
      } else if (_source446.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _8880___mcc_h9 = _source446.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _8881___mcc_h10 = _source446.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8882_body = _8881___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _8883_lbl = _8880___mcc_h9;
        {
          RAST._IExpr _8884_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8885_bodyIdents;
          DCOMPUTF16._IEnvironment _8886_env2;
          RAST._IExpr _out4006;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4007;
          DCOMPUTF16._IEnvironment _out4008;
          DCOMPUTF16.COMP.GenStmts(_8882_body, selfIdent, env, isLast, earlyReturn, out _out4006, out _out4007, out _out4008);
          _8884_body = _out4006;
          _8885_bodyIdents = _out4007;
          _8886_env2 = _out4008;
          readIdents = _8885_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _8883_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_8884_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source446.is_While) {
        DAST._IExpression _8887___mcc_h11 = _source446.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _8888___mcc_h12 = _source446.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8889_body = _8888___mcc_h12;
        DAST._IExpression _8890_cond = _8887___mcc_h11;
        {
          RAST._IExpr _8891_cond;
          DCOMPUTF16._IOwnership _8892___v64;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8893_recIdents;
          RAST._IExpr _out4009;
          DCOMPUTF16._IOwnership _out4010;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4011;
          DCOMPUTF16.COMP.GenExpr(_8890_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4009, out _out4010, out _out4011);
          _8891_cond = _out4009;
          _8892___v64 = _out4010;
          _8893_recIdents = _out4011;
          readIdents = _8893_recIdents;
          RAST._IExpr _8894_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8895_bodyIdents;
          DCOMPUTF16._IEnvironment _8896_bodyEnv;
          RAST._IExpr _out4012;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4013;
          DCOMPUTF16._IEnvironment _out4014;
          DCOMPUTF16.COMP.GenStmts(_8889_body, selfIdent, env, false, earlyReturn, out _out4012, out _out4013, out _out4014);
          _8894_bodyExpr = _out4012;
          _8895_bodyIdents = _out4013;
          _8896_bodyEnv = _out4014;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8895_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_8891_cond), _8894_bodyExpr);
        }
      } else if (_source446.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _8897___mcc_h13 = _source446.dtor_boundName;
        DAST._IType _8898___mcc_h14 = _source446.dtor_boundType;
        DAST._IExpression _8899___mcc_h15 = _source446.dtor_over;
        Dafny.ISequence<DAST._IStatement> _8900___mcc_h16 = _source446.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8901_body = _8900___mcc_h16;
        DAST._IExpression _8902_over = _8899___mcc_h15;
        DAST._IType _8903_boundType = _8898___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _8904_boundName = _8897___mcc_h13;
        {
          RAST._IExpr _8905_over;
          DCOMPUTF16._IOwnership _8906___v65;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8907_recIdents;
          RAST._IExpr _out4015;
          DCOMPUTF16._IOwnership _out4016;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4017;
          DCOMPUTF16.COMP.GenExpr(_8902_over, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4015, out _out4016, out _out4017);
          _8905_over = _out4015;
          _8906___v65 = _out4016;
          _8907_recIdents = _out4017;
          RAST._IType _8908_boundTpe;
          RAST._IType _out4018;
          _out4018 = DCOMPUTF16.COMP.GenType(_8903_boundType, false, false);
          _8908_boundTpe = _out4018;
          readIdents = _8907_recIdents;
          RAST._IExpr _8909_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8910_bodyIdents;
          DCOMPUTF16._IEnvironment _8911_bodyEnv;
          RAST._IExpr _out4019;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4020;
          DCOMPUTF16._IEnvironment _out4021;
          DCOMPUTF16.COMP.GenStmts(_8901_body, selfIdent, (env).AddAssigned(_8904_boundName, RAST.Type.create_Borrowed(_8908_boundTpe)), false, earlyReturn, out _out4019, out _out4020, out _out4021);
          _8909_bodyExpr = _out4019;
          _8910_bodyIdents = _out4020;
          _8911_bodyEnv = _out4021;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8910_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8904_boundName));
          newEnv = env;
          generated = RAST.Expr.create_For(DCOMPUTF16.__default.escapeIdent(_8904_boundName), _8905_over, _8909_bodyExpr);
        }
      } else if (_source446.is_Call) {
        DAST._IExpression _8912___mcc_h17 = _source446.dtor_on;
        DAST._ICallName _8913___mcc_h18 = _source446.dtor_callName;
        Dafny.ISequence<DAST._IType> _8914___mcc_h19 = _source446.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _8915___mcc_h20 = _source446.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8916___mcc_h21 = _source446.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8917_maybeOutVars = _8916___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _8918_args = _8915___mcc_h20;
        Dafny.ISequence<DAST._IType> _8919_typeArgs = _8914___mcc_h19;
        DAST._ICallName _8920_name = _8913___mcc_h18;
        DAST._IExpression _8921_on = _8912___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _8922_onExpr;
          DCOMPUTF16._IOwnership _8923___v68;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8924_enclosingIdents;
          RAST._IExpr _out4022;
          DCOMPUTF16._IOwnership _out4023;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4024;
          DCOMPUTF16.COMP.GenExpr(_8921_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out4022, out _out4023, out _out4024);
          _8922_onExpr = _out4022;
          _8923___v68 = _out4023;
          _8924_enclosingIdents = _out4024;
          Dafny.ISequence<RAST._IType> _8925_typeExprs;
          _8925_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_8919_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _8926_typeI;
            _8926_typeI = BigInteger.Zero;
            Dafny.ISequence<RAST._IType> _8927_typeArgsR;
            _8927_typeArgsR = Dafny.Sequence<RAST._IType>.FromElements();
            while ((_8926_typeI) < (new BigInteger((_8919_typeArgs).Count))) {
              RAST._IType _8928_tpe;
              RAST._IType _out4025;
              _out4025 = DCOMPUTF16.COMP.GenType((_8919_typeArgs).Select(_8926_typeI), false, false);
              _8928_tpe = _out4025;
              _8927_typeArgsR = Dafny.Sequence<RAST._IType>.Concat(_8927_typeArgsR, Dafny.Sequence<RAST._IType>.FromElements(_8928_tpe));
              _8926_typeI = (_8926_typeI) + (BigInteger.One);
            }
          }
          Dafny.ISequence<RAST._IExpr> _8929_argExprs;
          _8929_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi29 = new BigInteger((_8918_args).Count);
          for (BigInteger _8930_i = BigInteger.Zero; _8930_i < _hi29; _8930_i++) {
            DCOMPUTF16._IOwnership _8931_argOwnership;
            _8931_argOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
            if (((_8920_name).is_Name) && ((_8930_i) < (new BigInteger((((_8920_name).dtor_signature)).Count)))) {
              RAST._IType _8932_tpe;
              RAST._IType _out4026;
              _out4026 = DCOMPUTF16.COMP.GenType(((((_8920_name).dtor_signature)).Select(_8930_i)).dtor_typ, false, false);
              _8932_tpe = _out4026;
              if ((_8932_tpe).HasCopySemantics()) {
                _8931_argOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _8933_argExpr;
            DCOMPUTF16._IOwnership _8934_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8935_argIdents;
            RAST._IExpr _out4027;
            DCOMPUTF16._IOwnership _out4028;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4029;
            DCOMPUTF16.COMP.GenExpr((_8918_args).Select(_8930_i), selfIdent, env, _8931_argOwnership, out _out4027, out _out4028, out _out4029);
            _8933_argExpr = _out4027;
            _8934_ownership = _out4028;
            _8935_argIdents = _out4029;
            _8929_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_8929_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_8933_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8935_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8924_enclosingIdents);
          Dafny.ISequence<Dafny.Rune> _8936_renderedName;
          _8936_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source448) => {
            if (_source448.is_Name) {
              Dafny.ISequence<Dafny.Rune> _8937___mcc_h26 = _source448.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _8938___mcc_h27 = _source448.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _8939___mcc_h28 = _source448.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _8940_name = _8937___mcc_h26;
              return DCOMPUTF16.__default.escapeIdent(_8940_name);
            } else if (_source448.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source448.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source448.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_8920_name);
          DAST._IExpression _source449 = _8921_on;
          if (_source449.is_Literal) {
            DAST._ILiteral _8941___mcc_h29 = _source449.dtor_Literal_a0;
            {
              DAST._ICallName _source450 = _8920_name;
              if (_source450.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8942___mcc_h211 = _source450.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8943___mcc_h212 = _source450.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8944___mcc_h213 = _source450.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source451 = _8943___mcc_h212;
                if (_source451.is_None) {
                } else {
                  DAST._IType _8945___mcc_h217 = _source451.dtor_value;
                  DAST._IType _8946_tpe = _8945___mcc_h217;
                  RAST._IType _8947_typ;
                  RAST._IType _out4030;
                  _out4030 = DCOMPUTF16.COMP.GenType(_8946_tpe, false, false);
                  _8947_typ = _out4030;
                  if (((_8947_typ).is_Pointer) || ((_8947_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source450.is_MapBuilderAdd) {
              } else if (_source450.is_MapBuilderBuild) {
              } else if (_source450.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _8948___mcc_h31 = _source449.dtor_Ident_a0;
            {
              DAST._ICallName _source452 = _8920_name;
              if (_source452.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8949___mcc_h219 = _source452.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8950___mcc_h220 = _source452.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8951___mcc_h221 = _source452.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source453 = _8950___mcc_h220;
                if (_source453.is_None) {
                } else {
                  DAST._IType _8952___mcc_h225 = _source453.dtor_value;
                  DAST._IType _8953_tpe = _8952___mcc_h225;
                  RAST._IType _8954_typ;
                  RAST._IType _out4031;
                  _out4031 = DCOMPUTF16.COMP.GenType(_8953_tpe, false, false);
                  _8954_typ = _out4031;
                  if (((_8954_typ).is_Pointer) || ((_8954_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source452.is_MapBuilderAdd) {
              } else if (_source452.is_MapBuilderBuild) {
              } else if (_source452.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8955___mcc_h33 = _source449.dtor_Companion_a0;
            {
              _8922_onExpr = (_8922_onExpr).MSel(_8936_renderedName);
            }
          } else if (_source449.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _8956___mcc_h35 = _source449.dtor_Tuple_a0;
            {
              DAST._ICallName _source454 = _8920_name;
              if (_source454.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8957___mcc_h227 = _source454.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8958___mcc_h228 = _source454.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8959___mcc_h229 = _source454.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source455 = _8958___mcc_h228;
                if (_source455.is_None) {
                } else {
                  DAST._IType _8960___mcc_h233 = _source455.dtor_value;
                  DAST._IType _8961_tpe = _8960___mcc_h233;
                  RAST._IType _8962_typ;
                  RAST._IType _out4032;
                  _out4032 = DCOMPUTF16.COMP.GenType(_8961_tpe, false, false);
                  _8962_typ = _out4032;
                  if (((_8962_typ).is_Pointer) || ((_8962_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source454.is_MapBuilderAdd) {
              } else if (_source454.is_MapBuilderBuild) {
              } else if (_source454.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8963___mcc_h37 = _source449.dtor_path;
            Dafny.ISequence<DAST._IType> _8964___mcc_h38 = _source449.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _8965___mcc_h39 = _source449.dtor_args;
            {
              DAST._ICallName _source456 = _8920_name;
              if (_source456.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8966___mcc_h235 = _source456.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8967___mcc_h236 = _source456.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8968___mcc_h237 = _source456.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source457 = _8967___mcc_h236;
                if (_source457.is_None) {
                } else {
                  DAST._IType _8969___mcc_h241 = _source457.dtor_value;
                  DAST._IType _8970_tpe = _8969___mcc_h241;
                  RAST._IType _8971_typ;
                  RAST._IType _out4033;
                  _out4033 = DCOMPUTF16.COMP.GenType(_8970_tpe, false, false);
                  _8971_typ = _out4033;
                  if (((_8971_typ).is_Pointer) || ((_8971_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source456.is_MapBuilderAdd) {
              } else if (_source456.is_MapBuilderBuild) {
              } else if (_source456.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _8972___mcc_h43 = _source449.dtor_dims;
            DAST._IType _8973___mcc_h44 = _source449.dtor_typ;
            {
              DAST._ICallName _source458 = _8920_name;
              if (_source458.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8974___mcc_h243 = _source458.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8975___mcc_h244 = _source458.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8976___mcc_h245 = _source458.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source459 = _8975___mcc_h244;
                if (_source459.is_None) {
                } else {
                  DAST._IType _8977___mcc_h249 = _source459.dtor_value;
                  DAST._IType _8978_tpe = _8977___mcc_h249;
                  RAST._IType _8979_typ;
                  RAST._IType _out4034;
                  _out4034 = DCOMPUTF16.COMP.GenType(_8978_tpe, false, false);
                  _8979_typ = _out4034;
                  if (((_8979_typ).is_Pointer) || ((_8979_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source458.is_MapBuilderAdd) {
              } else if (_source458.is_MapBuilderBuild) {
              } else if (_source458.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_DatatypeValue) {
            DAST._IDatatypeType _8980___mcc_h47 = _source449.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _8981___mcc_h48 = _source449.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _8982___mcc_h49 = _source449.dtor_variant;
            bool _8983___mcc_h50 = _source449.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _8984___mcc_h51 = _source449.dtor_contents;
            {
              DAST._ICallName _source460 = _8920_name;
              if (_source460.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8985___mcc_h251 = _source460.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8986___mcc_h252 = _source460.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8987___mcc_h253 = _source460.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source461 = _8986___mcc_h252;
                if (_source461.is_None) {
                } else {
                  DAST._IType _8988___mcc_h257 = _source461.dtor_value;
                  DAST._IType _8989_tpe = _8988___mcc_h257;
                  RAST._IType _8990_typ;
                  RAST._IType _out4035;
                  _out4035 = DCOMPUTF16.COMP.GenType(_8989_tpe, false, false);
                  _8990_typ = _out4035;
                  if (((_8990_typ).is_Pointer) || ((_8990_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source460.is_MapBuilderAdd) {
              } else if (_source460.is_MapBuilderBuild) {
              } else if (_source460.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_Convert) {
            DAST._IExpression _8991___mcc_h57 = _source449.dtor_value;
            DAST._IType _8992___mcc_h58 = _source449.dtor_from;
            DAST._IType _8993___mcc_h59 = _source449.dtor_typ;
            {
              DAST._ICallName _source462 = _8920_name;
              if (_source462.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8994___mcc_h259 = _source462.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8995___mcc_h260 = _source462.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8996___mcc_h261 = _source462.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source463 = _8995___mcc_h260;
                if (_source463.is_None) {
                } else {
                  DAST._IType _8997___mcc_h265 = _source463.dtor_value;
                  DAST._IType _8998_tpe = _8997___mcc_h265;
                  RAST._IType _8999_typ;
                  RAST._IType _out4036;
                  _out4036 = DCOMPUTF16.COMP.GenType(_8998_tpe, false, false);
                  _8999_typ = _out4036;
                  if (((_8999_typ).is_Pointer) || ((_8999_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source462.is_MapBuilderAdd) {
              } else if (_source462.is_MapBuilderBuild) {
              } else if (_source462.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_SeqConstruct) {
            DAST._IExpression _9000___mcc_h63 = _source449.dtor_length;
            DAST._IExpression _9001___mcc_h64 = _source449.dtor_elem;
            {
              DAST._ICallName _source464 = _8920_name;
              if (_source464.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9002___mcc_h267 = _source464.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9003___mcc_h268 = _source464.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9004___mcc_h269 = _source464.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source465 = _9003___mcc_h268;
                if (_source465.is_None) {
                } else {
                  DAST._IType _9005___mcc_h273 = _source465.dtor_value;
                  DAST._IType _9006_tpe = _9005___mcc_h273;
                  RAST._IType _9007_typ;
                  RAST._IType _out4037;
                  _out4037 = DCOMPUTF16.COMP.GenType(_9006_tpe, false, false);
                  _9007_typ = _out4037;
                  if (((_9007_typ).is_Pointer) || ((_9007_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source464.is_MapBuilderAdd) {
              } else if (_source464.is_MapBuilderBuild) {
              } else if (_source464.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _9008___mcc_h67 = _source449.dtor_elements;
            DAST._IType _9009___mcc_h68 = _source449.dtor_typ;
            {
              DAST._ICallName _source466 = _8920_name;
              if (_source466.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9010___mcc_h275 = _source466.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9011___mcc_h276 = _source466.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9012___mcc_h277 = _source466.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source467 = _9011___mcc_h276;
                if (_source467.is_None) {
                } else {
                  DAST._IType _9013___mcc_h281 = _source467.dtor_value;
                  DAST._IType _9014_tpe = _9013___mcc_h281;
                  RAST._IType _9015_typ;
                  RAST._IType _out4038;
                  _out4038 = DCOMPUTF16.COMP.GenType(_9014_tpe, false, false);
                  _9015_typ = _out4038;
                  if (((_9015_typ).is_Pointer) || ((_9015_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source466.is_MapBuilderAdd) {
              } else if (_source466.is_MapBuilderBuild) {
              } else if (_source466.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _9016___mcc_h71 = _source449.dtor_elements;
            {
              DAST._ICallName _source468 = _8920_name;
              if (_source468.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9017___mcc_h283 = _source468.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9018___mcc_h284 = _source468.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9019___mcc_h285 = _source468.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source469 = _9018___mcc_h284;
                if (_source469.is_None) {
                } else {
                  DAST._IType _9020___mcc_h289 = _source469.dtor_value;
                  DAST._IType _9021_tpe = _9020___mcc_h289;
                  RAST._IType _9022_typ;
                  RAST._IType _out4039;
                  _out4039 = DCOMPUTF16.COMP.GenType(_9021_tpe, false, false);
                  _9022_typ = _out4039;
                  if (((_9022_typ).is_Pointer) || ((_9022_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source468.is_MapBuilderAdd) {
              } else if (_source468.is_MapBuilderBuild) {
              } else if (_source468.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _9023___mcc_h73 = _source449.dtor_elements;
            {
              DAST._ICallName _source470 = _8920_name;
              if (_source470.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9024___mcc_h291 = _source470.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9025___mcc_h292 = _source470.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9026___mcc_h293 = _source470.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source471 = _9025___mcc_h292;
                if (_source471.is_None) {
                } else {
                  DAST._IType _9027___mcc_h297 = _source471.dtor_value;
                  DAST._IType _9028_tpe = _9027___mcc_h297;
                  RAST._IType _9029_typ;
                  RAST._IType _out4040;
                  _out4040 = DCOMPUTF16.COMP.GenType(_9028_tpe, false, false);
                  _9029_typ = _out4040;
                  if (((_9029_typ).is_Pointer) || ((_9029_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source470.is_MapBuilderAdd) {
              } else if (_source470.is_MapBuilderBuild) {
              } else if (_source470.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _9030___mcc_h75 = _source449.dtor_mapElems;
            {
              DAST._ICallName _source472 = _8920_name;
              if (_source472.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9031___mcc_h299 = _source472.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9032___mcc_h300 = _source472.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9033___mcc_h301 = _source472.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source473 = _9032___mcc_h300;
                if (_source473.is_None) {
                } else {
                  DAST._IType _9034___mcc_h305 = _source473.dtor_value;
                  DAST._IType _9035_tpe = _9034___mcc_h305;
                  RAST._IType _9036_typ;
                  RAST._IType _out4041;
                  _out4041 = DCOMPUTF16.COMP.GenType(_9035_tpe, false, false);
                  _9036_typ = _out4041;
                  if (((_9036_typ).is_Pointer) || ((_9036_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source472.is_MapBuilderAdd) {
              } else if (_source472.is_MapBuilderBuild) {
              } else if (_source472.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_MapBuilder) {
            DAST._IType _9037___mcc_h77 = _source449.dtor_keyType;
            DAST._IType _9038___mcc_h78 = _source449.dtor_valueType;
            {
              DAST._ICallName _source474 = _8920_name;
              if (_source474.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9039___mcc_h307 = _source474.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9040___mcc_h308 = _source474.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9041___mcc_h309 = _source474.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source475 = _9040___mcc_h308;
                if (_source475.is_None) {
                } else {
                  DAST._IType _9042___mcc_h313 = _source475.dtor_value;
                  DAST._IType _9043_tpe = _9042___mcc_h313;
                  RAST._IType _9044_typ;
                  RAST._IType _out4042;
                  _out4042 = DCOMPUTF16.COMP.GenType(_9043_tpe, false, false);
                  _9044_typ = _out4042;
                  if (((_9044_typ).is_Pointer) || ((_9044_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source474.is_MapBuilderAdd) {
              } else if (_source474.is_MapBuilderBuild) {
              } else if (_source474.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_SeqUpdate) {
            DAST._IExpression _9045___mcc_h81 = _source449.dtor_expr;
            DAST._IExpression _9046___mcc_h82 = _source449.dtor_indexExpr;
            DAST._IExpression _9047___mcc_h83 = _source449.dtor_value;
            {
              DAST._ICallName _source476 = _8920_name;
              if (_source476.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9048___mcc_h315 = _source476.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9049___mcc_h316 = _source476.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9050___mcc_h317 = _source476.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source477 = _9049___mcc_h316;
                if (_source477.is_None) {
                } else {
                  DAST._IType _9051___mcc_h321 = _source477.dtor_value;
                  DAST._IType _9052_tpe = _9051___mcc_h321;
                  RAST._IType _9053_typ;
                  RAST._IType _out4043;
                  _out4043 = DCOMPUTF16.COMP.GenType(_9052_tpe, false, false);
                  _9053_typ = _out4043;
                  if (((_9053_typ).is_Pointer) || ((_9053_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source476.is_MapBuilderAdd) {
              } else if (_source476.is_MapBuilderBuild) {
              } else if (_source476.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_MapUpdate) {
            DAST._IExpression _9054___mcc_h87 = _source449.dtor_expr;
            DAST._IExpression _9055___mcc_h88 = _source449.dtor_indexExpr;
            DAST._IExpression _9056___mcc_h89 = _source449.dtor_value;
            {
              DAST._ICallName _source478 = _8920_name;
              if (_source478.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9057___mcc_h323 = _source478.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9058___mcc_h324 = _source478.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9059___mcc_h325 = _source478.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source479 = _9058___mcc_h324;
                if (_source479.is_None) {
                } else {
                  DAST._IType _9060___mcc_h329 = _source479.dtor_value;
                  DAST._IType _9061_tpe = _9060___mcc_h329;
                  RAST._IType _9062_typ;
                  RAST._IType _out4044;
                  _out4044 = DCOMPUTF16.COMP.GenType(_9061_tpe, false, false);
                  _9062_typ = _out4044;
                  if (((_9062_typ).is_Pointer) || ((_9062_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source478.is_MapBuilderAdd) {
              } else if (_source478.is_MapBuilderBuild) {
              } else if (_source478.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_SetBuilder) {
            DAST._IType _9063___mcc_h93 = _source449.dtor_elemType;
            {
              DAST._ICallName _source480 = _8920_name;
              if (_source480.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9064___mcc_h331 = _source480.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9065___mcc_h332 = _source480.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9066___mcc_h333 = _source480.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source481 = _9065___mcc_h332;
                if (_source481.is_None) {
                } else {
                  DAST._IType _9067___mcc_h337 = _source481.dtor_value;
                  DAST._IType _9068_tpe = _9067___mcc_h337;
                  RAST._IType _9069_typ;
                  RAST._IType _out4045;
                  _out4045 = DCOMPUTF16.COMP.GenType(_9068_tpe, false, false);
                  _9069_typ = _out4045;
                  if (((_9069_typ).is_Pointer) || ((_9069_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source480.is_MapBuilderAdd) {
              } else if (_source480.is_MapBuilderBuild) {
              } else if (_source480.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_ToMultiset) {
            DAST._IExpression _9070___mcc_h95 = _source449.dtor_ToMultiset_a0;
            {
              DAST._ICallName _source482 = _8920_name;
              if (_source482.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9071___mcc_h339 = _source482.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9072___mcc_h340 = _source482.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9073___mcc_h341 = _source482.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source483 = _9072___mcc_h340;
                if (_source483.is_None) {
                } else {
                  DAST._IType _9074___mcc_h345 = _source483.dtor_value;
                  DAST._IType _9075_tpe = _9074___mcc_h345;
                  RAST._IType _9076_typ;
                  RAST._IType _out4046;
                  _out4046 = DCOMPUTF16.COMP.GenType(_9075_tpe, false, false);
                  _9076_typ = _out4046;
                  if (((_9076_typ).is_Pointer) || ((_9076_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source482.is_MapBuilderAdd) {
              } else if (_source482.is_MapBuilderBuild) {
              } else if (_source482.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_This) {
            {
              DAST._ICallName _source484 = _8920_name;
              if (_source484.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9077___mcc_h347 = _source484.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9078___mcc_h348 = _source484.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9079___mcc_h349 = _source484.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source485 = _9078___mcc_h348;
                if (_source485.is_None) {
                } else {
                  DAST._IType _9080___mcc_h353 = _source485.dtor_value;
                  DAST._IType _9081_tpe = _9080___mcc_h353;
                  RAST._IType _9082_typ;
                  RAST._IType _out4047;
                  _out4047 = DCOMPUTF16.COMP.GenType(_9081_tpe, false, false);
                  _9082_typ = _out4047;
                  if (((_9082_typ).is_Pointer) || ((_9082_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source484.is_MapBuilderAdd) {
              } else if (_source484.is_MapBuilderBuild) {
              } else if (_source484.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_Ite) {
            DAST._IExpression _9083___mcc_h97 = _source449.dtor_cond;
            DAST._IExpression _9084___mcc_h98 = _source449.dtor_thn;
            DAST._IExpression _9085___mcc_h99 = _source449.dtor_els;
            {
              DAST._ICallName _source486 = _8920_name;
              if (_source486.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9086___mcc_h355 = _source486.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9087___mcc_h356 = _source486.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9088___mcc_h357 = _source486.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source487 = _9087___mcc_h356;
                if (_source487.is_None) {
                } else {
                  DAST._IType _9089___mcc_h361 = _source487.dtor_value;
                  DAST._IType _9090_tpe = _9089___mcc_h361;
                  RAST._IType _9091_typ;
                  RAST._IType _out4048;
                  _out4048 = DCOMPUTF16.COMP.GenType(_9090_tpe, false, false);
                  _9091_typ = _out4048;
                  if (((_9091_typ).is_Pointer) || ((_9091_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source486.is_MapBuilderAdd) {
              } else if (_source486.is_MapBuilderBuild) {
              } else if (_source486.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_UnOp) {
            DAST._IUnaryOp _9092___mcc_h103 = _source449.dtor_unOp;
            DAST._IExpression _9093___mcc_h104 = _source449.dtor_expr;
            DAST.Format._IUnOpFormat _9094___mcc_h105 = _source449.dtor_format1;
            {
              DAST._ICallName _source488 = _8920_name;
              if (_source488.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9095___mcc_h363 = _source488.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9096___mcc_h364 = _source488.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9097___mcc_h365 = _source488.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source489 = _9096___mcc_h364;
                if (_source489.is_None) {
                } else {
                  DAST._IType _9098___mcc_h369 = _source489.dtor_value;
                  DAST._IType _9099_tpe = _9098___mcc_h369;
                  RAST._IType _9100_typ;
                  RAST._IType _out4049;
                  _out4049 = DCOMPUTF16.COMP.GenType(_9099_tpe, false, false);
                  _9100_typ = _out4049;
                  if (((_9100_typ).is_Pointer) || ((_9100_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source488.is_MapBuilderAdd) {
              } else if (_source488.is_MapBuilderBuild) {
              } else if (_source488.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_BinOp) {
            DAST._IBinOp _9101___mcc_h109 = _source449.dtor_op;
            DAST._IExpression _9102___mcc_h110 = _source449.dtor_left;
            DAST._IExpression _9103___mcc_h111 = _source449.dtor_right;
            DAST.Format._IBinOpFormat _9104___mcc_h112 = _source449.dtor_format2;
            {
              DAST._ICallName _source490 = _8920_name;
              if (_source490.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9105___mcc_h371 = _source490.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9106___mcc_h372 = _source490.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9107___mcc_h373 = _source490.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source491 = _9106___mcc_h372;
                if (_source491.is_None) {
                } else {
                  DAST._IType _9108___mcc_h377 = _source491.dtor_value;
                  DAST._IType _9109_tpe = _9108___mcc_h377;
                  RAST._IType _9110_typ;
                  RAST._IType _out4050;
                  _out4050 = DCOMPUTF16.COMP.GenType(_9109_tpe, false, false);
                  _9110_typ = _out4050;
                  if (((_9110_typ).is_Pointer) || ((_9110_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source490.is_MapBuilderAdd) {
              } else if (_source490.is_MapBuilderBuild) {
              } else if (_source490.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_ArrayLen) {
            DAST._IExpression _9111___mcc_h117 = _source449.dtor_expr;
            BigInteger _9112___mcc_h118 = _source449.dtor_dim;
            {
              DAST._ICallName _source492 = _8920_name;
              if (_source492.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9113___mcc_h379 = _source492.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9114___mcc_h380 = _source492.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9115___mcc_h381 = _source492.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source493 = _9114___mcc_h380;
                if (_source493.is_None) {
                } else {
                  DAST._IType _9116___mcc_h385 = _source493.dtor_value;
                  DAST._IType _9117_tpe = _9116___mcc_h385;
                  RAST._IType _9118_typ;
                  RAST._IType _out4051;
                  _out4051 = DCOMPUTF16.COMP.GenType(_9117_tpe, false, false);
                  _9118_typ = _out4051;
                  if (((_9118_typ).is_Pointer) || ((_9118_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source492.is_MapBuilderAdd) {
              } else if (_source492.is_MapBuilderBuild) {
              } else if (_source492.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_MapKeys) {
            DAST._IExpression _9119___mcc_h121 = _source449.dtor_expr;
            {
              DAST._ICallName _source494 = _8920_name;
              if (_source494.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9120___mcc_h387 = _source494.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9121___mcc_h388 = _source494.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9122___mcc_h389 = _source494.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source495 = _9121___mcc_h388;
                if (_source495.is_None) {
                } else {
                  DAST._IType _9123___mcc_h393 = _source495.dtor_value;
                  DAST._IType _9124_tpe = _9123___mcc_h393;
                  RAST._IType _9125_typ;
                  RAST._IType _out4052;
                  _out4052 = DCOMPUTF16.COMP.GenType(_9124_tpe, false, false);
                  _9125_typ = _out4052;
                  if (((_9125_typ).is_Pointer) || ((_9125_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source494.is_MapBuilderAdd) {
              } else if (_source494.is_MapBuilderBuild) {
              } else if (_source494.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_MapValues) {
            DAST._IExpression _9126___mcc_h123 = _source449.dtor_expr;
            {
              DAST._ICallName _source496 = _8920_name;
              if (_source496.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9127___mcc_h395 = _source496.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9128___mcc_h396 = _source496.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9129___mcc_h397 = _source496.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source497 = _9128___mcc_h396;
                if (_source497.is_None) {
                } else {
                  DAST._IType _9130___mcc_h401 = _source497.dtor_value;
                  DAST._IType _9131_tpe = _9130___mcc_h401;
                  RAST._IType _9132_typ;
                  RAST._IType _out4053;
                  _out4053 = DCOMPUTF16.COMP.GenType(_9131_tpe, false, false);
                  _9132_typ = _out4053;
                  if (((_9132_typ).is_Pointer) || ((_9132_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source496.is_MapBuilderAdd) {
              } else if (_source496.is_MapBuilderBuild) {
              } else if (_source496.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_Select) {
            DAST._IExpression _9133___mcc_h125 = _source449.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _9134___mcc_h126 = _source449.dtor_field;
            bool _9135___mcc_h127 = _source449.dtor_isConstant;
            bool _9136___mcc_h128 = _source449.dtor_onDatatype;
            {
              DAST._ICallName _source498 = _8920_name;
              if (_source498.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9137___mcc_h403 = _source498.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9138___mcc_h404 = _source498.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9139___mcc_h405 = _source498.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source499 = _9138___mcc_h404;
                if (_source499.is_None) {
                } else {
                  DAST._IType _9140___mcc_h409 = _source499.dtor_value;
                  DAST._IType _9141_tpe = _9140___mcc_h409;
                  RAST._IType _9142_typ;
                  RAST._IType _out4054;
                  _out4054 = DCOMPUTF16.COMP.GenType(_9141_tpe, false, false);
                  _9142_typ = _out4054;
                  if (((_9142_typ).is_Pointer) || ((_9142_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source498.is_MapBuilderAdd) {
              } else if (_source498.is_MapBuilderBuild) {
              } else if (_source498.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_SelectFn) {
            DAST._IExpression _9143___mcc_h133 = _source449.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _9144___mcc_h134 = _source449.dtor_field;
            bool _9145___mcc_h135 = _source449.dtor_onDatatype;
            bool _9146___mcc_h136 = _source449.dtor_isStatic;
            BigInteger _9147___mcc_h137 = _source449.dtor_arity;
            {
              DAST._ICallName _source500 = _8920_name;
              if (_source500.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9148___mcc_h411 = _source500.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9149___mcc_h412 = _source500.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9150___mcc_h413 = _source500.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source501 = _9149___mcc_h412;
                if (_source501.is_None) {
                } else {
                  DAST._IType _9151___mcc_h417 = _source501.dtor_value;
                  DAST._IType _9152_tpe = _9151___mcc_h417;
                  RAST._IType _9153_typ;
                  RAST._IType _out4055;
                  _out4055 = DCOMPUTF16.COMP.GenType(_9152_tpe, false, false);
                  _9153_typ = _out4055;
                  if (((_9153_typ).is_Pointer) || ((_9153_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source500.is_MapBuilderAdd) {
              } else if (_source500.is_MapBuilderBuild) {
              } else if (_source500.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_Index) {
            DAST._IExpression _9154___mcc_h143 = _source449.dtor_expr;
            DAST._ICollKind _9155___mcc_h144 = _source449.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _9156___mcc_h145 = _source449.dtor_indices;
            {
              DAST._ICallName _source502 = _8920_name;
              if (_source502.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9157___mcc_h419 = _source502.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9158___mcc_h420 = _source502.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9159___mcc_h421 = _source502.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source503 = _9158___mcc_h420;
                if (_source503.is_None) {
                } else {
                  DAST._IType _9160___mcc_h425 = _source503.dtor_value;
                  DAST._IType _9161_tpe = _9160___mcc_h425;
                  RAST._IType _9162_typ;
                  RAST._IType _out4056;
                  _out4056 = DCOMPUTF16.COMP.GenType(_9161_tpe, false, false);
                  _9162_typ = _out4056;
                  if (((_9162_typ).is_Pointer) || ((_9162_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source502.is_MapBuilderAdd) {
              } else if (_source502.is_MapBuilderBuild) {
              } else if (_source502.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_IndexRange) {
            DAST._IExpression _9163___mcc_h149 = _source449.dtor_expr;
            bool _9164___mcc_h150 = _source449.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _9165___mcc_h151 = _source449.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _9166___mcc_h152 = _source449.dtor_high;
            {
              DAST._ICallName _source504 = _8920_name;
              if (_source504.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9167___mcc_h427 = _source504.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9168___mcc_h428 = _source504.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9169___mcc_h429 = _source504.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source505 = _9168___mcc_h428;
                if (_source505.is_None) {
                } else {
                  DAST._IType _9170___mcc_h433 = _source505.dtor_value;
                  DAST._IType _9171_tpe = _9170___mcc_h433;
                  RAST._IType _9172_typ;
                  RAST._IType _out4057;
                  _out4057 = DCOMPUTF16.COMP.GenType(_9171_tpe, false, false);
                  _9172_typ = _out4057;
                  if (((_9172_typ).is_Pointer) || ((_9172_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source504.is_MapBuilderAdd) {
              } else if (_source504.is_MapBuilderBuild) {
              } else if (_source504.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_TupleSelect) {
            DAST._IExpression _9173___mcc_h157 = _source449.dtor_expr;
            BigInteger _9174___mcc_h158 = _source449.dtor_index;
            {
              DAST._ICallName _source506 = _8920_name;
              if (_source506.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9175___mcc_h435 = _source506.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9176___mcc_h436 = _source506.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9177___mcc_h437 = _source506.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source507 = _9176___mcc_h436;
                if (_source507.is_None) {
                } else {
                  DAST._IType _9178___mcc_h441 = _source507.dtor_value;
                  DAST._IType _9179_tpe = _9178___mcc_h441;
                  RAST._IType _9180_typ;
                  RAST._IType _out4058;
                  _out4058 = DCOMPUTF16.COMP.GenType(_9179_tpe, false, false);
                  _9180_typ = _out4058;
                  if (((_9180_typ).is_Pointer) || ((_9180_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source506.is_MapBuilderAdd) {
              } else if (_source506.is_MapBuilderBuild) {
              } else if (_source506.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_Call) {
            DAST._IExpression _9181___mcc_h161 = _source449.dtor_on;
            DAST._ICallName _9182___mcc_h162 = _source449.dtor_callName;
            Dafny.ISequence<DAST._IType> _9183___mcc_h163 = _source449.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _9184___mcc_h164 = _source449.dtor_args;
            {
              DAST._ICallName _source508 = _8920_name;
              if (_source508.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9185___mcc_h443 = _source508.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9186___mcc_h444 = _source508.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9187___mcc_h445 = _source508.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source509 = _9186___mcc_h444;
                if (_source509.is_None) {
                } else {
                  DAST._IType _9188___mcc_h449 = _source509.dtor_value;
                  DAST._IType _9189_tpe = _9188___mcc_h449;
                  RAST._IType _9190_typ;
                  RAST._IType _out4059;
                  _out4059 = DCOMPUTF16.COMP.GenType(_9189_tpe, false, false);
                  _9190_typ = _out4059;
                  if (((_9190_typ).is_Pointer) || ((_9190_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source508.is_MapBuilderAdd) {
              } else if (_source508.is_MapBuilderBuild) {
              } else if (_source508.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _9191___mcc_h169 = _source449.dtor_params;
            DAST._IType _9192___mcc_h170 = _source449.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _9193___mcc_h171 = _source449.dtor_body;
            {
              DAST._ICallName _source510 = _8920_name;
              if (_source510.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9194___mcc_h451 = _source510.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9195___mcc_h452 = _source510.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9196___mcc_h453 = _source510.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source511 = _9195___mcc_h452;
                if (_source511.is_None) {
                } else {
                  DAST._IType _9197___mcc_h457 = _source511.dtor_value;
                  DAST._IType _9198_tpe = _9197___mcc_h457;
                  RAST._IType _9199_typ;
                  RAST._IType _out4060;
                  _out4060 = DCOMPUTF16.COMP.GenType(_9198_tpe, false, false);
                  _9199_typ = _out4060;
                  if (((_9199_typ).is_Pointer) || ((_9199_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source510.is_MapBuilderAdd) {
              } else if (_source510.is_MapBuilderBuild) {
              } else if (_source510.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _9200___mcc_h175 = _source449.dtor_values;
            DAST._IType _9201___mcc_h176 = _source449.dtor_retType;
            DAST._IExpression _9202___mcc_h177 = _source449.dtor_expr;
            {
              DAST._ICallName _source512 = _8920_name;
              if (_source512.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9203___mcc_h459 = _source512.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9204___mcc_h460 = _source512.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9205___mcc_h461 = _source512.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source513 = _9204___mcc_h460;
                if (_source513.is_None) {
                } else {
                  DAST._IType _9206___mcc_h465 = _source513.dtor_value;
                  DAST._IType _9207_tpe = _9206___mcc_h465;
                  RAST._IType _9208_typ;
                  RAST._IType _out4061;
                  _out4061 = DCOMPUTF16.COMP.GenType(_9207_tpe, false, false);
                  _9208_typ = _out4061;
                  if (((_9208_typ).is_Pointer) || ((_9208_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source512.is_MapBuilderAdd) {
              } else if (_source512.is_MapBuilderBuild) {
              } else if (_source512.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _9209___mcc_h181 = _source449.dtor_name;
            DAST._IType _9210___mcc_h182 = _source449.dtor_typ;
            DAST._IExpression _9211___mcc_h183 = _source449.dtor_value;
            DAST._IExpression _9212___mcc_h184 = _source449.dtor_iifeBody;
            {
              DAST._ICallName _source514 = _8920_name;
              if (_source514.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9213___mcc_h467 = _source514.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9214___mcc_h468 = _source514.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9215___mcc_h469 = _source514.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source515 = _9214___mcc_h468;
                if (_source515.is_None) {
                } else {
                  DAST._IType _9216___mcc_h473 = _source515.dtor_value;
                  DAST._IType _9217_tpe = _9216___mcc_h473;
                  RAST._IType _9218_typ;
                  RAST._IType _out4062;
                  _out4062 = DCOMPUTF16.COMP.GenType(_9217_tpe, false, false);
                  _9218_typ = _out4062;
                  if (((_9218_typ).is_Pointer) || ((_9218_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source514.is_MapBuilderAdd) {
              } else if (_source514.is_MapBuilderBuild) {
              } else if (_source514.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_Apply) {
            DAST._IExpression _9219___mcc_h189 = _source449.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _9220___mcc_h190 = _source449.dtor_args;
            {
              DAST._ICallName _source516 = _8920_name;
              if (_source516.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9221___mcc_h475 = _source516.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9222___mcc_h476 = _source516.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9223___mcc_h477 = _source516.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source517 = _9222___mcc_h476;
                if (_source517.is_None) {
                } else {
                  DAST._IType _9224___mcc_h481 = _source517.dtor_value;
                  DAST._IType _9225_tpe = _9224___mcc_h481;
                  RAST._IType _9226_typ;
                  RAST._IType _out4063;
                  _out4063 = DCOMPUTF16.COMP.GenType(_9225_tpe, false, false);
                  _9226_typ = _out4063;
                  if (((_9226_typ).is_Pointer) || ((_9226_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source516.is_MapBuilderAdd) {
              } else if (_source516.is_MapBuilderBuild) {
              } else if (_source516.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_TypeTest) {
            DAST._IExpression _9227___mcc_h193 = _source449.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9228___mcc_h194 = _source449.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _9229___mcc_h195 = _source449.dtor_variant;
            {
              DAST._ICallName _source518 = _8920_name;
              if (_source518.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9230___mcc_h483 = _source518.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9231___mcc_h484 = _source518.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9232___mcc_h485 = _source518.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source519 = _9231___mcc_h484;
                if (_source519.is_None) {
                } else {
                  DAST._IType _9233___mcc_h489 = _source519.dtor_value;
                  DAST._IType _9234_tpe = _9233___mcc_h489;
                  RAST._IType _9235_typ;
                  RAST._IType _out4064;
                  _out4064 = DCOMPUTF16.COMP.GenType(_9234_tpe, false, false);
                  _9235_typ = _out4064;
                  if (((_9235_typ).is_Pointer) || ((_9235_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source518.is_MapBuilderAdd) {
              } else if (_source518.is_MapBuilderBuild) {
              } else if (_source518.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_InitializationValue) {
            DAST._IType _9236___mcc_h199 = _source449.dtor_typ;
            {
              DAST._ICallName _source520 = _8920_name;
              if (_source520.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9237___mcc_h491 = _source520.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9238___mcc_h492 = _source520.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9239___mcc_h493 = _source520.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source521 = _9238___mcc_h492;
                if (_source521.is_None) {
                } else {
                  DAST._IType _9240___mcc_h497 = _source521.dtor_value;
                  DAST._IType _9241_tpe = _9240___mcc_h497;
                  RAST._IType _9242_typ;
                  RAST._IType _out4065;
                  _out4065 = DCOMPUTF16.COMP.GenType(_9241_tpe, false, false);
                  _9242_typ = _out4065;
                  if (((_9242_typ).is_Pointer) || ((_9242_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source520.is_MapBuilderAdd) {
              } else if (_source520.is_MapBuilderBuild) {
              } else if (_source520.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_BoolBoundedPool) {
            {
              DAST._ICallName _source522 = _8920_name;
              if (_source522.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9243___mcc_h499 = _source522.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9244___mcc_h500 = _source522.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9245___mcc_h501 = _source522.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source523 = _9244___mcc_h500;
                if (_source523.is_None) {
                } else {
                  DAST._IType _9246___mcc_h505 = _source523.dtor_value;
                  DAST._IType _9247_tpe = _9246___mcc_h505;
                  RAST._IType _9248_typ;
                  RAST._IType _out4066;
                  _out4066 = DCOMPUTF16.COMP.GenType(_9247_tpe, false, false);
                  _9248_typ = _out4066;
                  if (((_9248_typ).is_Pointer) || ((_9248_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source522.is_MapBuilderAdd) {
              } else if (_source522.is_MapBuilderBuild) {
              } else if (_source522.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_SetBoundedPool) {
            DAST._IExpression _9249___mcc_h201 = _source449.dtor_of;
            {
              DAST._ICallName _source524 = _8920_name;
              if (_source524.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9250___mcc_h507 = _source524.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9251___mcc_h508 = _source524.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9252___mcc_h509 = _source524.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source525 = _9251___mcc_h508;
                if (_source525.is_None) {
                } else {
                  DAST._IType _9253___mcc_h513 = _source525.dtor_value;
                  DAST._IType _9254_tpe = _9253___mcc_h513;
                  RAST._IType _9255_typ;
                  RAST._IType _out4067;
                  _out4067 = DCOMPUTF16.COMP.GenType(_9254_tpe, false, false);
                  _9255_typ = _out4067;
                  if (((_9255_typ).is_Pointer) || ((_9255_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source524.is_MapBuilderAdd) {
              } else if (_source524.is_MapBuilderBuild) {
              } else if (_source524.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else if (_source449.is_SeqBoundedPool) {
            DAST._IExpression _9256___mcc_h203 = _source449.dtor_of;
            bool _9257___mcc_h204 = _source449.dtor_includeDuplicates;
            {
              DAST._ICallName _source526 = _8920_name;
              if (_source526.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9258___mcc_h515 = _source526.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9259___mcc_h516 = _source526.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9260___mcc_h517 = _source526.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source527 = _9259___mcc_h516;
                if (_source527.is_None) {
                } else {
                  DAST._IType _9261___mcc_h521 = _source527.dtor_value;
                  DAST._IType _9262_tpe = _9261___mcc_h521;
                  RAST._IType _9263_typ;
                  RAST._IType _out4068;
                  _out4068 = DCOMPUTF16.COMP.GenType(_9262_tpe, false, false);
                  _9263_typ = _out4068;
                  if (((_9263_typ).is_Pointer) || ((_9263_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source526.is_MapBuilderAdd) {
              } else if (_source526.is_MapBuilderBuild) {
              } else if (_source526.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          } else {
            DAST._IExpression _9264___mcc_h207 = _source449.dtor_lo;
            DAST._IExpression _9265___mcc_h208 = _source449.dtor_hi;
            {
              DAST._ICallName _source528 = _8920_name;
              if (_source528.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9266___mcc_h523 = _source528.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9267___mcc_h524 = _source528.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9268___mcc_h525 = _source528.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source529 = _9267___mcc_h524;
                if (_source529.is_None) {
                } else {
                  DAST._IType _9269___mcc_h529 = _source529.dtor_value;
                  DAST._IType _9270_tpe = _9269___mcc_h529;
                  RAST._IType _9271_typ;
                  RAST._IType _out4069;
                  _out4069 = DCOMPUTF16.COMP.GenType(_9270_tpe, false, false);
                  _9271_typ = _out4069;
                  if (((_9271_typ).is_Pointer) || ((_9271_typ).is_PointerMut)) {
                    _8922_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8922_onExpr);
                  }
                }
              } else if (_source528.is_MapBuilderAdd) {
              } else if (_source528.is_MapBuilderBuild) {
              } else if (_source528.is_SetBuilderAdd) {
              } else {
              }
              _8922_onExpr = (_8922_onExpr).Sel(_8936_renderedName);
            }
          }
          generated = _8922_onExpr;
          if ((new BigInteger((_8925_typeExprs).Count)).Sign == 1) {
            generated = (generated).ApplyType(_8925_typeExprs);
          }
          generated = (generated).Apply(_8929_argExprs);
          if (((_8917_maybeOutVars).is_Some) && ((new BigInteger(((_8917_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _9272_outVar;
            _9272_outVar = (((_8917_maybeOutVars).dtor_value).Select(BigInteger.Zero));
            if (!((env).HasCopySemantics(_9272_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_9272_outVar, generated);
          } else if (((_8917_maybeOutVars).is_None) || ((new BigInteger(((_8917_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _9273_tmpVar;
            _9273_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _9274_tmpId;
            _9274_tmpId = RAST.Expr.create_Identifier(_9273_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _9273_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9275_outVars;
            _9275_outVars = (_8917_maybeOutVars).dtor_value;
            BigInteger _hi30 = new BigInteger((_9275_outVars).Count);
            for (BigInteger _9276_outI = BigInteger.Zero; _9276_outI < _hi30; _9276_outI++) {
              Dafny.ISequence<Dafny.Rune> _9277_outVar;
              _9277_outVar = ((_9275_outVars).Select(_9276_outI));
              RAST._IExpr _9278_rhs;
              _9278_rhs = (_9274_tmpId).Sel(Std.Strings.__default.OfNat(_9276_outI));
              if (!((env).HasCopySemantics(_9277_outVar))) {
                _9278_rhs = RAST.__default.MaybePlacebo(_9278_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_9277_outVar, _9278_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source446.is_Return) {
        DAST._IExpression _9279___mcc_h22 = _source446.dtor_expr;
        DAST._IExpression _9280_exprDafny = _9279___mcc_h22;
        {
          RAST._IExpr _9281_expr;
          DCOMPUTF16._IOwnership _9282___v76;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9283_recIdents;
          RAST._IExpr _out4070;
          DCOMPUTF16._IOwnership _out4071;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4072;
          DCOMPUTF16.COMP.GenExpr(_9280_exprDafny, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4070, out _out4071, out _out4072);
          _9281_expr = _out4070;
          _9282___v76 = _out4071;
          _9283_recIdents = _out4072;
          readIdents = _9283_recIdents;
          if (isLast) {
            generated = _9281_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_9281_expr));
          }
          newEnv = env;
        }
      } else if (_source446.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source446.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9284___mcc_h23 = _source446.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9285_toLabel = _9284___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source530 = _9285_toLabel;
          if (_source530.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9286___mcc_h531 = _source530.dtor_value;
            Dafny.ISequence<Dafny.Rune> _9287_lbl = _9286___mcc_h531;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _9287_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source446.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _9288___mcc_h24 = _source446.dtor_body;
        Dafny.ISequence<DAST._IStatement> _9289_body = _9288___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          BigInteger _hi31 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _9290_paramI = BigInteger.Zero; _9290_paramI < _hi31; _9290_paramI++) {
            Dafny.ISequence<Dafny.Rune> _9291_param;
            _9291_param = ((env).dtor_names).Select(_9290_paramI);
            RAST._IExpr _9292_paramInit;
            DCOMPUTF16._IOwnership _9293___v66;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9294___v67;
            RAST._IExpr _out4073;
            DCOMPUTF16._IOwnership _out4074;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4075;
            DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Ident(_9291_param), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4073, out _out4074, out _out4075);
            _9292_paramInit = _out4073;
            _9293___v66 = _out4074;
            _9294___v67 = _out4075;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMPUTF16.__default.escapeIdent(_9291_param), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_9292_paramInit)));
          }
          RAST._IExpr _9295_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9296_bodyIdents;
          DCOMPUTF16._IEnvironment _9297_bodyEnv;
          RAST._IExpr _out4076;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4077;
          DCOMPUTF16._IEnvironment _out4078;
          DCOMPUTF16.COMP.GenStmts(_9289_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), env, false, earlyReturn, out _out4076, out _out4077, out _out4078);
          _9295_bodyExpr = _out4076;
          _9296_bodyIdents = _out4077;
          _9297_bodyEnv = _out4078;
          newEnv = env;
          readIdents = _9296_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _9295_bodyExpr)));
        }
      } else if (_source446.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source446.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else {
        DAST._IExpression _9298___mcc_h25 = _source446.dtor_Print_a0;
        DAST._IExpression _9299_e = _9298___mcc_h25;
        {
          RAST._IExpr _9300_printedExpr;
          DCOMPUTF16._IOwnership _9301_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9302_recIdents;
          RAST._IExpr _out4079;
          DCOMPUTF16._IOwnership _out4080;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4081;
          DCOMPUTF16.COMP.GenExpr(_9299_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out4079, out _out4080, out _out4081);
          _9300_printedExpr = _out4079;
          _9301_recOwnership = _out4080;
          _9302_recIdents = _out4081;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_9300_printedExpr)));
          readIdents = _9302_recIdents;
          newEnv = env;
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source531 = range;
      if (_source531.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source531.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source531.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source531.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source531.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source531.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source531.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source531.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source531.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source531.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source531.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public static void FromOwned(RAST._IExpr r, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMPUTF16._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
      } else {
        @out = RAST.__default.BorrowMut(r);
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public static void FromOwnership(RAST._IExpr r, DCOMPUTF16._IOwnership ownership, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMPUTF16._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      if (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out4082;
        DCOMPUTF16._IOwnership _out4083;
        DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4082, out _out4083);
        @out = _out4082;
        resultingOwnership = _out4083;
        return ;
      } else if ((object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          @out = RAST.__default.Clone(r);
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMPUTF16._IOwnership expectedOwnership, DCOMPUTF16._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()));
    }
    public static void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source532 = e;
      DAST._ILiteral _9303___mcc_h0 = _source532.dtor_Literal_a0;
      DAST._ILiteral _source533 = _9303___mcc_h0;
      if (_source533.is_BoolLiteral) {
        bool _9304___mcc_h1 = _source533.dtor_BoolLiteral_a0;
        bool _9305_b = _9304___mcc_h1;
        {
          RAST._IExpr _out4084;
          DCOMPUTF16._IOwnership _out4085;
          DCOMPUTF16.COMP.FromOwned(RAST.Expr.create_LiteralBool(_9305_b), expectedOwnership, out _out4084, out _out4085);
          r = _out4084;
          resultingOwnership = _out4085;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source533.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _9306___mcc_h2 = _source533.dtor_IntLiteral_a0;
        DAST._IType _9307___mcc_h3 = _source533.dtor_IntLiteral_a1;
        DAST._IType _9308_t = _9307___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _9309_i = _9306___mcc_h2;
        {
          DAST._IType _source534 = _9308_t;
          if (_source534.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9310___mcc_h100 = _source534.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9311___mcc_h101 = _source534.dtor_typeArgs;
            DAST._IResolvedType _9312___mcc_h102 = _source534.dtor_resolved;
            DAST._IType _9313_o = _9308_t;
            {
              RAST._IType _9314_genType;
              RAST._IType _out4086;
              _out4086 = DCOMPUTF16.COMP.GenType(_9313_o, false, false);
              _9314_genType = _out4086;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9314_genType);
            }
          } else if (_source534.is_Nullable) {
            DAST._IType _9315___mcc_h106 = _source534.dtor_Nullable_a0;
            DAST._IType _9316_o = _9308_t;
            {
              RAST._IType _9317_genType;
              RAST._IType _out4087;
              _out4087 = DCOMPUTF16.COMP.GenType(_9316_o, false, false);
              _9317_genType = _out4087;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9317_genType);
            }
          } else if (_source534.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9318___mcc_h108 = _source534.dtor_Tuple_a0;
            DAST._IType _9319_o = _9308_t;
            {
              RAST._IType _9320_genType;
              RAST._IType _out4088;
              _out4088 = DCOMPUTF16.COMP.GenType(_9319_o, false, false);
              _9320_genType = _out4088;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9320_genType);
            }
          } else if (_source534.is_Array) {
            DAST._IType _9321___mcc_h110 = _source534.dtor_element;
            BigInteger _9322___mcc_h111 = _source534.dtor_dims;
            DAST._IType _9323_o = _9308_t;
            {
              RAST._IType _9324_genType;
              RAST._IType _out4089;
              _out4089 = DCOMPUTF16.COMP.GenType(_9323_o, false, false);
              _9324_genType = _out4089;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9324_genType);
            }
          } else if (_source534.is_Seq) {
            DAST._IType _9325___mcc_h114 = _source534.dtor_element;
            DAST._IType _9326_o = _9308_t;
            {
              RAST._IType _9327_genType;
              RAST._IType _out4090;
              _out4090 = DCOMPUTF16.COMP.GenType(_9326_o, false, false);
              _9327_genType = _out4090;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9327_genType);
            }
          } else if (_source534.is_Set) {
            DAST._IType _9328___mcc_h116 = _source534.dtor_element;
            DAST._IType _9329_o = _9308_t;
            {
              RAST._IType _9330_genType;
              RAST._IType _out4091;
              _out4091 = DCOMPUTF16.COMP.GenType(_9329_o, false, false);
              _9330_genType = _out4091;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9330_genType);
            }
          } else if (_source534.is_Multiset) {
            DAST._IType _9331___mcc_h118 = _source534.dtor_element;
            DAST._IType _9332_o = _9308_t;
            {
              RAST._IType _9333_genType;
              RAST._IType _out4092;
              _out4092 = DCOMPUTF16.COMP.GenType(_9332_o, false, false);
              _9333_genType = _out4092;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9333_genType);
            }
          } else if (_source534.is_Map) {
            DAST._IType _9334___mcc_h120 = _source534.dtor_key;
            DAST._IType _9335___mcc_h121 = _source534.dtor_value;
            DAST._IType _9336_o = _9308_t;
            {
              RAST._IType _9337_genType;
              RAST._IType _out4093;
              _out4093 = DCOMPUTF16.COMP.GenType(_9336_o, false, false);
              _9337_genType = _out4093;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9337_genType);
            }
          } else if (_source534.is_SetBuilder) {
            DAST._IType _9338___mcc_h124 = _source534.dtor_element;
            DAST._IType _9339_o = _9308_t;
            {
              RAST._IType _9340_genType;
              RAST._IType _out4094;
              _out4094 = DCOMPUTF16.COMP.GenType(_9339_o, false, false);
              _9340_genType = _out4094;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9340_genType);
            }
          } else if (_source534.is_MapBuilder) {
            DAST._IType _9341___mcc_h126 = _source534.dtor_key;
            DAST._IType _9342___mcc_h127 = _source534.dtor_value;
            DAST._IType _9343_o = _9308_t;
            {
              RAST._IType _9344_genType;
              RAST._IType _out4095;
              _out4095 = DCOMPUTF16.COMP.GenType(_9343_o, false, false);
              _9344_genType = _out4095;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9344_genType);
            }
          } else if (_source534.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9345___mcc_h130 = _source534.dtor_args;
            DAST._IType _9346___mcc_h131 = _source534.dtor_result;
            DAST._IType _9347_o = _9308_t;
            {
              RAST._IType _9348_genType;
              RAST._IType _out4096;
              _out4096 = DCOMPUTF16.COMP.GenType(_9347_o, false, false);
              _9348_genType = _out4096;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9348_genType);
            }
          } else if (_source534.is_Primitive) {
            DAST._IPrimitive _9349___mcc_h134 = _source534.dtor_Primitive_a0;
            DAST._IPrimitive _source535 = _9349___mcc_h134;
            if (_source535.is_Int) {
              {
                if ((new BigInteger((_9309_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_9309_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_9309_i, true));
                }
              }
            } else if (_source535.is_Real) {
              DAST._IType _9350_o = _9308_t;
              {
                RAST._IType _9351_genType;
                RAST._IType _out4097;
                _out4097 = DCOMPUTF16.COMP.GenType(_9350_o, false, false);
                _9351_genType = _out4097;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9351_genType);
              }
            } else if (_source535.is_String) {
              DAST._IType _9352_o = _9308_t;
              {
                RAST._IType _9353_genType;
                RAST._IType _out4098;
                _out4098 = DCOMPUTF16.COMP.GenType(_9352_o, false, false);
                _9353_genType = _out4098;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9353_genType);
              }
            } else if (_source535.is_Bool) {
              DAST._IType _9354_o = _9308_t;
              {
                RAST._IType _9355_genType;
                RAST._IType _out4099;
                _out4099 = DCOMPUTF16.COMP.GenType(_9354_o, false, false);
                _9355_genType = _out4099;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9355_genType);
              }
            } else {
              DAST._IType _9356_o = _9308_t;
              {
                RAST._IType _9357_genType;
                RAST._IType _out4100;
                _out4100 = DCOMPUTF16.COMP.GenType(_9356_o, false, false);
                _9357_genType = _out4100;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9357_genType);
              }
            }
          } else if (_source534.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9358___mcc_h136 = _source534.dtor_Passthrough_a0;
            DAST._IType _9359_o = _9308_t;
            {
              RAST._IType _9360_genType;
              RAST._IType _out4101;
              _out4101 = DCOMPUTF16.COMP.GenType(_9359_o, false, false);
              _9360_genType = _out4101;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9360_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9361___mcc_h138 = _source534.dtor_TypeArg_a0;
            DAST._IType _9362_o = _9308_t;
            {
              RAST._IType _9363_genType;
              RAST._IType _out4102;
              _out4102 = DCOMPUTF16.COMP.GenType(_9362_o, false, false);
              _9363_genType = _out4102;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9309_i), _9363_genType);
            }
          }
          RAST._IExpr _out4103;
          DCOMPUTF16._IOwnership _out4104;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4103, out _out4104);
          r = _out4103;
          resultingOwnership = _out4104;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source533.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _9364___mcc_h4 = _source533.dtor_DecLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _9365___mcc_h5 = _source533.dtor_DecLiteral_a1;
        DAST._IType _9366___mcc_h6 = _source533.dtor_DecLiteral_a2;
        DAST._IType _9367_t = _9366___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _9368_d = _9365___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _9369_n = _9364___mcc_h4;
        {
          DAST._IType _source536 = _9367_t;
          if (_source536.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9370___mcc_h140 = _source536.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9371___mcc_h141 = _source536.dtor_typeArgs;
            DAST._IResolvedType _9372___mcc_h142 = _source536.dtor_resolved;
            DAST._IType _9373_o = _9367_t;
            {
              RAST._IType _9374_genType;
              RAST._IType _out4105;
              _out4105 = DCOMPUTF16.COMP.GenType(_9373_o, false, false);
              _9374_genType = _out4105;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9374_genType);
            }
          } else if (_source536.is_Nullable) {
            DAST._IType _9375___mcc_h146 = _source536.dtor_Nullable_a0;
            DAST._IType _9376_o = _9367_t;
            {
              RAST._IType _9377_genType;
              RAST._IType _out4106;
              _out4106 = DCOMPUTF16.COMP.GenType(_9376_o, false, false);
              _9377_genType = _out4106;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9377_genType);
            }
          } else if (_source536.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9378___mcc_h148 = _source536.dtor_Tuple_a0;
            DAST._IType _9379_o = _9367_t;
            {
              RAST._IType _9380_genType;
              RAST._IType _out4107;
              _out4107 = DCOMPUTF16.COMP.GenType(_9379_o, false, false);
              _9380_genType = _out4107;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9380_genType);
            }
          } else if (_source536.is_Array) {
            DAST._IType _9381___mcc_h150 = _source536.dtor_element;
            BigInteger _9382___mcc_h151 = _source536.dtor_dims;
            DAST._IType _9383_o = _9367_t;
            {
              RAST._IType _9384_genType;
              RAST._IType _out4108;
              _out4108 = DCOMPUTF16.COMP.GenType(_9383_o, false, false);
              _9384_genType = _out4108;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9384_genType);
            }
          } else if (_source536.is_Seq) {
            DAST._IType _9385___mcc_h154 = _source536.dtor_element;
            DAST._IType _9386_o = _9367_t;
            {
              RAST._IType _9387_genType;
              RAST._IType _out4109;
              _out4109 = DCOMPUTF16.COMP.GenType(_9386_o, false, false);
              _9387_genType = _out4109;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9387_genType);
            }
          } else if (_source536.is_Set) {
            DAST._IType _9388___mcc_h156 = _source536.dtor_element;
            DAST._IType _9389_o = _9367_t;
            {
              RAST._IType _9390_genType;
              RAST._IType _out4110;
              _out4110 = DCOMPUTF16.COMP.GenType(_9389_o, false, false);
              _9390_genType = _out4110;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9390_genType);
            }
          } else if (_source536.is_Multiset) {
            DAST._IType _9391___mcc_h158 = _source536.dtor_element;
            DAST._IType _9392_o = _9367_t;
            {
              RAST._IType _9393_genType;
              RAST._IType _out4111;
              _out4111 = DCOMPUTF16.COMP.GenType(_9392_o, false, false);
              _9393_genType = _out4111;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9393_genType);
            }
          } else if (_source536.is_Map) {
            DAST._IType _9394___mcc_h160 = _source536.dtor_key;
            DAST._IType _9395___mcc_h161 = _source536.dtor_value;
            DAST._IType _9396_o = _9367_t;
            {
              RAST._IType _9397_genType;
              RAST._IType _out4112;
              _out4112 = DCOMPUTF16.COMP.GenType(_9396_o, false, false);
              _9397_genType = _out4112;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9397_genType);
            }
          } else if (_source536.is_SetBuilder) {
            DAST._IType _9398___mcc_h164 = _source536.dtor_element;
            DAST._IType _9399_o = _9367_t;
            {
              RAST._IType _9400_genType;
              RAST._IType _out4113;
              _out4113 = DCOMPUTF16.COMP.GenType(_9399_o, false, false);
              _9400_genType = _out4113;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9400_genType);
            }
          } else if (_source536.is_MapBuilder) {
            DAST._IType _9401___mcc_h166 = _source536.dtor_key;
            DAST._IType _9402___mcc_h167 = _source536.dtor_value;
            DAST._IType _9403_o = _9367_t;
            {
              RAST._IType _9404_genType;
              RAST._IType _out4114;
              _out4114 = DCOMPUTF16.COMP.GenType(_9403_o, false, false);
              _9404_genType = _out4114;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9404_genType);
            }
          } else if (_source536.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9405___mcc_h170 = _source536.dtor_args;
            DAST._IType _9406___mcc_h171 = _source536.dtor_result;
            DAST._IType _9407_o = _9367_t;
            {
              RAST._IType _9408_genType;
              RAST._IType _out4115;
              _out4115 = DCOMPUTF16.COMP.GenType(_9407_o, false, false);
              _9408_genType = _out4115;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9408_genType);
            }
          } else if (_source536.is_Primitive) {
            DAST._IPrimitive _9409___mcc_h174 = _source536.dtor_Primitive_a0;
            DAST._IPrimitive _source537 = _9409___mcc_h174;
            if (_source537.is_Int) {
              DAST._IType _9410_o = _9367_t;
              {
                RAST._IType _9411_genType;
                RAST._IType _out4116;
                _out4116 = DCOMPUTF16.COMP.GenType(_9410_o, false, false);
                _9411_genType = _out4116;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9411_genType);
              }
            } else if (_source537.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source537.is_String) {
              DAST._IType _9412_o = _9367_t;
              {
                RAST._IType _9413_genType;
                RAST._IType _out4117;
                _out4117 = DCOMPUTF16.COMP.GenType(_9412_o, false, false);
                _9413_genType = _out4117;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9413_genType);
              }
            } else if (_source537.is_Bool) {
              DAST._IType _9414_o = _9367_t;
              {
                RAST._IType _9415_genType;
                RAST._IType _out4118;
                _out4118 = DCOMPUTF16.COMP.GenType(_9414_o, false, false);
                _9415_genType = _out4118;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9415_genType);
              }
            } else {
              DAST._IType _9416_o = _9367_t;
              {
                RAST._IType _9417_genType;
                RAST._IType _out4119;
                _out4119 = DCOMPUTF16.COMP.GenType(_9416_o, false, false);
                _9417_genType = _out4119;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9417_genType);
              }
            }
          } else if (_source536.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9418___mcc_h176 = _source536.dtor_Passthrough_a0;
            DAST._IType _9419_o = _9367_t;
            {
              RAST._IType _9420_genType;
              RAST._IType _out4120;
              _out4120 = DCOMPUTF16.COMP.GenType(_9419_o, false, false);
              _9420_genType = _out4120;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9420_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9421___mcc_h178 = _source536.dtor_TypeArg_a0;
            DAST._IType _9422_o = _9367_t;
            {
              RAST._IType _9423_genType;
              RAST._IType _out4121;
              _out4121 = DCOMPUTF16.COMP.GenType(_9422_o, false, false);
              _9423_genType = _out4121;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9369_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9368_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9423_genType);
            }
          }
          RAST._IExpr _out4122;
          DCOMPUTF16._IOwnership _out4123;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4122, out _out4123);
          r = _out4122;
          resultingOwnership = _out4123;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source533.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _9424___mcc_h7 = _source533.dtor_StringLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _9425_l = _9424___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of"))).Apply1(RAST.Expr.create_LiteralString(_9425_l, false));
          RAST._IExpr _out4124;
          DCOMPUTF16._IOwnership _out4125;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4124, out _out4125);
          r = _out4124;
          resultingOwnership = _out4125;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source533.is_CharLiteral) {
        Dafny.Rune _9426___mcc_h8 = _source533.dtor_CharLiteral_a0;
        Dafny.Rune _9427_c = _9426___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_9427_c).Value)));
          r = RAST.Expr.create_TypeAscription(r, DCOMPUTF16.__default.DafnyCharUnderlying);
          r = ((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(r);
          RAST._IExpr _out4126;
          DCOMPUTF16._IOwnership _out4127;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4126, out _out4127);
          r = _out4126;
          resultingOwnership = _out4127;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _9428___mcc_h9 = _source533.dtor_Null_a0;
        DAST._IType _9429_tpe = _9428___mcc_h9;
        {
          RAST._IType _9430_tpeGen;
          RAST._IType _out4128;
          _out4128 = DCOMPUTF16.COMP.GenType(_9429_tpe, false, false);
          _9430_tpeGen = _out4128;
          r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None")), _9430_tpeGen);
          RAST._IExpr _out4129;
          DCOMPUTF16._IOwnership _out4130;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4129, out _out4130);
          r = _out4129;
          resultingOwnership = _out4130;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public static void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs53 = e;
      DAST._IBinOp _9431_op = _let_tmp_rhs53.dtor_op;
      DAST._IExpression _9432_lExpr = _let_tmp_rhs53.dtor_left;
      DAST._IExpression _9433_rExpr = _let_tmp_rhs53.dtor_right;
      DAST.Format._IBinOpFormat _9434_format = _let_tmp_rhs53.dtor_format2;
      bool _9435_becomesLeftCallsRight;
      _9435_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source538) => {
        if (_source538.is_Eq) {
          bool _9436___mcc_h0 = _source538.dtor_referential;
          bool _9437___mcc_h1 = _source538.dtor_nullable;
          return false;
        } else if (_source538.is_Div) {
          return false;
        } else if (_source538.is_EuclidianDiv) {
          return false;
        } else if (_source538.is_Mod) {
          return false;
        } else if (_source538.is_EuclidianMod) {
          return false;
        } else if (_source538.is_Lt) {
          return false;
        } else if (_source538.is_LtChar) {
          return false;
        } else if (_source538.is_Plus) {
          return false;
        } else if (_source538.is_Minus) {
          return false;
        } else if (_source538.is_Times) {
          return false;
        } else if (_source538.is_BitwiseAnd) {
          return false;
        } else if (_source538.is_BitwiseOr) {
          return false;
        } else if (_source538.is_BitwiseXor) {
          return false;
        } else if (_source538.is_BitwiseShiftRight) {
          return false;
        } else if (_source538.is_BitwiseShiftLeft) {
          return false;
        } else if (_source538.is_And) {
          return false;
        } else if (_source538.is_Or) {
          return false;
        } else if (_source538.is_In) {
          return false;
        } else if (_source538.is_SeqProperPrefix) {
          return false;
        } else if (_source538.is_SeqPrefix) {
          return false;
        } else if (_source538.is_SetMerge) {
          return true;
        } else if (_source538.is_SetSubtraction) {
          return true;
        } else if (_source538.is_SetIntersection) {
          return true;
        } else if (_source538.is_Subset) {
          return false;
        } else if (_source538.is_ProperSubset) {
          return false;
        } else if (_source538.is_SetDisjoint) {
          return true;
        } else if (_source538.is_MapMerge) {
          return true;
        } else if (_source538.is_MapSubtraction) {
          return true;
        } else if (_source538.is_MultisetMerge) {
          return true;
        } else if (_source538.is_MultisetSubtraction) {
          return true;
        } else if (_source538.is_MultisetIntersection) {
          return true;
        } else if (_source538.is_Submultiset) {
          return false;
        } else if (_source538.is_ProperSubmultiset) {
          return false;
        } else if (_source538.is_MultisetDisjoint) {
          return true;
        } else if (_source538.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _9438___mcc_h4 = _source538.dtor_Passthrough_a0;
          return false;
        }
      }))(_9431_op);
      bool _9439_becomesRightCallsLeft;
      _9439_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source539) => {
        if (_source539.is_Eq) {
          bool _9440___mcc_h6 = _source539.dtor_referential;
          bool _9441___mcc_h7 = _source539.dtor_nullable;
          return false;
        } else if (_source539.is_Div) {
          return false;
        } else if (_source539.is_EuclidianDiv) {
          return false;
        } else if (_source539.is_Mod) {
          return false;
        } else if (_source539.is_EuclidianMod) {
          return false;
        } else if (_source539.is_Lt) {
          return false;
        } else if (_source539.is_LtChar) {
          return false;
        } else if (_source539.is_Plus) {
          return false;
        } else if (_source539.is_Minus) {
          return false;
        } else if (_source539.is_Times) {
          return false;
        } else if (_source539.is_BitwiseAnd) {
          return false;
        } else if (_source539.is_BitwiseOr) {
          return false;
        } else if (_source539.is_BitwiseXor) {
          return false;
        } else if (_source539.is_BitwiseShiftRight) {
          return false;
        } else if (_source539.is_BitwiseShiftLeft) {
          return false;
        } else if (_source539.is_And) {
          return false;
        } else if (_source539.is_Or) {
          return false;
        } else if (_source539.is_In) {
          return true;
        } else if (_source539.is_SeqProperPrefix) {
          return false;
        } else if (_source539.is_SeqPrefix) {
          return false;
        } else if (_source539.is_SetMerge) {
          return false;
        } else if (_source539.is_SetSubtraction) {
          return false;
        } else if (_source539.is_SetIntersection) {
          return false;
        } else if (_source539.is_Subset) {
          return false;
        } else if (_source539.is_ProperSubset) {
          return false;
        } else if (_source539.is_SetDisjoint) {
          return false;
        } else if (_source539.is_MapMerge) {
          return false;
        } else if (_source539.is_MapSubtraction) {
          return false;
        } else if (_source539.is_MultisetMerge) {
          return false;
        } else if (_source539.is_MultisetSubtraction) {
          return false;
        } else if (_source539.is_MultisetIntersection) {
          return false;
        } else if (_source539.is_Submultiset) {
          return false;
        } else if (_source539.is_ProperSubmultiset) {
          return false;
        } else if (_source539.is_MultisetDisjoint) {
          return false;
        } else if (_source539.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _9442___mcc_h10 = _source539.dtor_Passthrough_a0;
          return false;
        }
      }))(_9431_op);
      bool _9443_becomesCallLeftRight;
      _9443_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source540) => {
        if (_source540.is_Eq) {
          bool _9444___mcc_h12 = _source540.dtor_referential;
          bool _9445___mcc_h13 = _source540.dtor_nullable;
          if ((_9444___mcc_h12) == (true)) {
            if ((_9445___mcc_h13) == (false)) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else if (_source540.is_Div) {
          return false;
        } else if (_source540.is_EuclidianDiv) {
          return false;
        } else if (_source540.is_Mod) {
          return false;
        } else if (_source540.is_EuclidianMod) {
          return false;
        } else if (_source540.is_Lt) {
          return false;
        } else if (_source540.is_LtChar) {
          return false;
        } else if (_source540.is_Plus) {
          return false;
        } else if (_source540.is_Minus) {
          return false;
        } else if (_source540.is_Times) {
          return false;
        } else if (_source540.is_BitwiseAnd) {
          return false;
        } else if (_source540.is_BitwiseOr) {
          return false;
        } else if (_source540.is_BitwiseXor) {
          return false;
        } else if (_source540.is_BitwiseShiftRight) {
          return false;
        } else if (_source540.is_BitwiseShiftLeft) {
          return false;
        } else if (_source540.is_And) {
          return false;
        } else if (_source540.is_Or) {
          return false;
        } else if (_source540.is_In) {
          return false;
        } else if (_source540.is_SeqProperPrefix) {
          return false;
        } else if (_source540.is_SeqPrefix) {
          return false;
        } else if (_source540.is_SetMerge) {
          return false;
        } else if (_source540.is_SetSubtraction) {
          return false;
        } else if (_source540.is_SetIntersection) {
          return false;
        } else if (_source540.is_Subset) {
          return false;
        } else if (_source540.is_ProperSubset) {
          return false;
        } else if (_source540.is_SetDisjoint) {
          return false;
        } else if (_source540.is_MapMerge) {
          return false;
        } else if (_source540.is_MapSubtraction) {
          return false;
        } else if (_source540.is_MultisetMerge) {
          return false;
        } else if (_source540.is_MultisetSubtraction) {
          return false;
        } else if (_source540.is_MultisetIntersection) {
          return false;
        } else if (_source540.is_Submultiset) {
          return false;
        } else if (_source540.is_ProperSubmultiset) {
          return false;
        } else if (_source540.is_MultisetDisjoint) {
          return false;
        } else if (_source540.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _9446___mcc_h16 = _source540.dtor_Passthrough_a0;
          return false;
        }
      }))(_9431_op);
      DCOMPUTF16._IOwnership _9447_expectedLeftOwnership;
      _9447_expectedLeftOwnership = ((_9435_becomesLeftCallsRight) ? (DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()) : ((((_9439_becomesRightCallsLeft) || (_9443_becomesCallLeftRight)) ? (DCOMPUTF16.Ownership.create_OwnershipBorrowed()) : (DCOMPUTF16.Ownership.create_OwnershipOwned()))));
      DCOMPUTF16._IOwnership _9448_expectedRightOwnership;
      _9448_expectedRightOwnership = (((_9435_becomesLeftCallsRight) || (_9443_becomesCallLeftRight)) ? (DCOMPUTF16.Ownership.create_OwnershipBorrowed()) : (((_9439_becomesRightCallsLeft) ? (DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()) : (DCOMPUTF16.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _9449_left;
      DCOMPUTF16._IOwnership _9450___v81;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9451_recIdentsL;
      RAST._IExpr _out4131;
      DCOMPUTF16._IOwnership _out4132;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4133;
      DCOMPUTF16.COMP.GenExpr(_9432_lExpr, selfIdent, env, _9447_expectedLeftOwnership, out _out4131, out _out4132, out _out4133);
      _9449_left = _out4131;
      _9450___v81 = _out4132;
      _9451_recIdentsL = _out4133;
      RAST._IExpr _9452_right;
      DCOMPUTF16._IOwnership _9453___v82;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9454_recIdentsR;
      RAST._IExpr _out4134;
      DCOMPUTF16._IOwnership _out4135;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4136;
      DCOMPUTF16.COMP.GenExpr(_9433_rExpr, selfIdent, env, _9448_expectedRightOwnership, out _out4134, out _out4135, out _out4136);
      _9452_right = _out4134;
      _9453___v82 = _out4135;
      _9454_recIdentsR = _out4136;
      DAST._IBinOp _source541 = _9431_op;
      if (_source541.is_Eq) {
        bool _9455___mcc_h18 = _source541.dtor_referential;
        bool _9456___mcc_h19 = _source541.dtor_nullable;
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source542 = _9431_op;
            if (_source542.is_Eq) {
              bool _9457___mcc_h24 = _source542.dtor_referential;
              bool _9458___mcc_h25 = _source542.dtor_nullable;
              bool _9459_nullable = _9458___mcc_h25;
              bool _9460_referential = _9457___mcc_h24;
              {
                if (_9460_referential) {
                  if (_9459_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source542.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source542.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9461___mcc_h26 = _source542.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9462_op = _9461___mcc_h26;
              {
                r = RAST.Expr.create_BinaryOp(_9462_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_Div) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source543 = _9431_op;
            if (_source543.is_Eq) {
              bool _9463___mcc_h27 = _source543.dtor_referential;
              bool _9464___mcc_h28 = _source543.dtor_nullable;
              bool _9465_nullable = _9464___mcc_h28;
              bool _9466_referential = _9463___mcc_h27;
              {
                if (_9466_referential) {
                  if (_9465_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source543.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source543.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9467___mcc_h29 = _source543.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9468_op = _9467___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_9468_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_EuclidianDiv) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source544 = _9431_op;
            if (_source544.is_Eq) {
              bool _9469___mcc_h30 = _source544.dtor_referential;
              bool _9470___mcc_h31 = _source544.dtor_nullable;
              bool _9471_nullable = _9470___mcc_h31;
              bool _9472_referential = _9469___mcc_h30;
              {
                if (_9472_referential) {
                  if (_9471_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source544.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source544.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9473___mcc_h32 = _source544.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9474_op = _9473___mcc_h32;
              {
                r = RAST.Expr.create_BinaryOp(_9474_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_Mod) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source545 = _9431_op;
            if (_source545.is_Eq) {
              bool _9475___mcc_h33 = _source545.dtor_referential;
              bool _9476___mcc_h34 = _source545.dtor_nullable;
              bool _9477_nullable = _9476___mcc_h34;
              bool _9478_referential = _9475___mcc_h33;
              {
                if (_9478_referential) {
                  if (_9477_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source545.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source545.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9479___mcc_h35 = _source545.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9480_op = _9479___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_9480_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_EuclidianMod) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source546 = _9431_op;
            if (_source546.is_Eq) {
              bool _9481___mcc_h36 = _source546.dtor_referential;
              bool _9482___mcc_h37 = _source546.dtor_nullable;
              bool _9483_nullable = _9482___mcc_h37;
              bool _9484_referential = _9481___mcc_h36;
              {
                if (_9484_referential) {
                  if (_9483_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source546.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source546.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9485___mcc_h38 = _source546.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9486_op = _9485___mcc_h38;
              {
                r = RAST.Expr.create_BinaryOp(_9486_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_Lt) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source547 = _9431_op;
            if (_source547.is_Eq) {
              bool _9487___mcc_h39 = _source547.dtor_referential;
              bool _9488___mcc_h40 = _source547.dtor_nullable;
              bool _9489_nullable = _9488___mcc_h40;
              bool _9490_referential = _9487___mcc_h39;
              {
                if (_9490_referential) {
                  if (_9489_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source547.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source547.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9491___mcc_h41 = _source547.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9492_op = _9491___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_9492_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_LtChar) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source548 = _9431_op;
            if (_source548.is_Eq) {
              bool _9493___mcc_h42 = _source548.dtor_referential;
              bool _9494___mcc_h43 = _source548.dtor_nullable;
              bool _9495_nullable = _9494___mcc_h43;
              bool _9496_referential = _9493___mcc_h42;
              {
                if (_9496_referential) {
                  if (_9495_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source548.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source548.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9497___mcc_h44 = _source548.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9498_op = _9497___mcc_h44;
              {
                r = RAST.Expr.create_BinaryOp(_9498_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_Plus) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source549 = _9431_op;
            if (_source549.is_Eq) {
              bool _9499___mcc_h45 = _source549.dtor_referential;
              bool _9500___mcc_h46 = _source549.dtor_nullable;
              bool _9501_nullable = _9500___mcc_h46;
              bool _9502_referential = _9499___mcc_h45;
              {
                if (_9502_referential) {
                  if (_9501_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source549.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source549.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9503___mcc_h47 = _source549.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9504_op = _9503___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_9504_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_Minus) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source550 = _9431_op;
            if (_source550.is_Eq) {
              bool _9505___mcc_h48 = _source550.dtor_referential;
              bool _9506___mcc_h49 = _source550.dtor_nullable;
              bool _9507_nullable = _9506___mcc_h49;
              bool _9508_referential = _9505___mcc_h48;
              {
                if (_9508_referential) {
                  if (_9507_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source550.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source550.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9509___mcc_h50 = _source550.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9510_op = _9509___mcc_h50;
              {
                r = RAST.Expr.create_BinaryOp(_9510_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_Times) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source551 = _9431_op;
            if (_source551.is_Eq) {
              bool _9511___mcc_h51 = _source551.dtor_referential;
              bool _9512___mcc_h52 = _source551.dtor_nullable;
              bool _9513_nullable = _9512___mcc_h52;
              bool _9514_referential = _9511___mcc_h51;
              {
                if (_9514_referential) {
                  if (_9513_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source551.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source551.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9515___mcc_h53 = _source551.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9516_op = _9515___mcc_h53;
              {
                r = RAST.Expr.create_BinaryOp(_9516_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_BitwiseAnd) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source552 = _9431_op;
            if (_source552.is_Eq) {
              bool _9517___mcc_h54 = _source552.dtor_referential;
              bool _9518___mcc_h55 = _source552.dtor_nullable;
              bool _9519_nullable = _9518___mcc_h55;
              bool _9520_referential = _9517___mcc_h54;
              {
                if (_9520_referential) {
                  if (_9519_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source552.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source552.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9521___mcc_h56 = _source552.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9522_op = _9521___mcc_h56;
              {
                r = RAST.Expr.create_BinaryOp(_9522_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_BitwiseOr) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source553 = _9431_op;
            if (_source553.is_Eq) {
              bool _9523___mcc_h57 = _source553.dtor_referential;
              bool _9524___mcc_h58 = _source553.dtor_nullable;
              bool _9525_nullable = _9524___mcc_h58;
              bool _9526_referential = _9523___mcc_h57;
              {
                if (_9526_referential) {
                  if (_9525_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source553.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source553.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9527___mcc_h59 = _source553.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9528_op = _9527___mcc_h59;
              {
                r = RAST.Expr.create_BinaryOp(_9528_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_BitwiseXor) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source554 = _9431_op;
            if (_source554.is_Eq) {
              bool _9529___mcc_h60 = _source554.dtor_referential;
              bool _9530___mcc_h61 = _source554.dtor_nullable;
              bool _9531_nullable = _9530___mcc_h61;
              bool _9532_referential = _9529___mcc_h60;
              {
                if (_9532_referential) {
                  if (_9531_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source554.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source554.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9533___mcc_h62 = _source554.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9534_op = _9533___mcc_h62;
              {
                r = RAST.Expr.create_BinaryOp(_9534_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_BitwiseShiftRight) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source555 = _9431_op;
            if (_source555.is_Eq) {
              bool _9535___mcc_h63 = _source555.dtor_referential;
              bool _9536___mcc_h64 = _source555.dtor_nullable;
              bool _9537_nullable = _9536___mcc_h64;
              bool _9538_referential = _9535___mcc_h63;
              {
                if (_9538_referential) {
                  if (_9537_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source555.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source555.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9539___mcc_h65 = _source555.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9540_op = _9539___mcc_h65;
              {
                r = RAST.Expr.create_BinaryOp(_9540_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_BitwiseShiftLeft) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source556 = _9431_op;
            if (_source556.is_Eq) {
              bool _9541___mcc_h66 = _source556.dtor_referential;
              bool _9542___mcc_h67 = _source556.dtor_nullable;
              bool _9543_nullable = _9542___mcc_h67;
              bool _9544_referential = _9541___mcc_h66;
              {
                if (_9544_referential) {
                  if (_9543_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source556.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source556.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9545___mcc_h68 = _source556.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9546_op = _9545___mcc_h68;
              {
                r = RAST.Expr.create_BinaryOp(_9546_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_And) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source557 = _9431_op;
            if (_source557.is_Eq) {
              bool _9547___mcc_h69 = _source557.dtor_referential;
              bool _9548___mcc_h70 = _source557.dtor_nullable;
              bool _9549_nullable = _9548___mcc_h70;
              bool _9550_referential = _9547___mcc_h69;
              {
                if (_9550_referential) {
                  if (_9549_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source557.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source557.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9551___mcc_h71 = _source557.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9552_op = _9551___mcc_h71;
              {
                r = RAST.Expr.create_BinaryOp(_9552_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_Or) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source558 = _9431_op;
            if (_source558.is_Eq) {
              bool _9553___mcc_h72 = _source558.dtor_referential;
              bool _9554___mcc_h73 = _source558.dtor_nullable;
              bool _9555_nullable = _9554___mcc_h73;
              bool _9556_referential = _9553___mcc_h72;
              {
                if (_9556_referential) {
                  if (_9555_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source558.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source558.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9557___mcc_h74 = _source558.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9558_op = _9557___mcc_h74;
              {
                r = RAST.Expr.create_BinaryOp(_9558_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      } else if (_source541.is_In) {
        {
          r = ((_9452_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_9449_left);
        }
      } else if (_source541.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _9449_left, _9452_right, _9434_format);
      } else if (_source541.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _9449_left, _9452_right, _9434_format);
      } else if (_source541.is_SetMerge) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_9452_right);
        }
      } else if (_source541.is_SetSubtraction) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_9452_right);
        }
      } else if (_source541.is_SetIntersection) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_9452_right);
        }
      } else if (_source541.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _9449_left, _9452_right, _9434_format);
        }
      } else if (_source541.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _9449_left, _9452_right, _9434_format);
        }
      } else if (_source541.is_SetDisjoint) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_9452_right);
        }
      } else if (_source541.is_MapMerge) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_9452_right);
        }
      } else if (_source541.is_MapSubtraction) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_9452_right);
        }
      } else if (_source541.is_MultisetMerge) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_9452_right);
        }
      } else if (_source541.is_MultisetSubtraction) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_9452_right);
        }
      } else if (_source541.is_MultisetIntersection) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_9452_right);
        }
      } else if (_source541.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _9449_left, _9452_right, _9434_format);
        }
      } else if (_source541.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _9449_left, _9452_right, _9434_format);
        }
      } else if (_source541.is_MultisetDisjoint) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_9452_right);
        }
      } else if (_source541.is_Concat) {
        {
          r = ((_9449_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_9452_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _9559___mcc_h22 = _source541.dtor_Passthrough_a0;
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9431_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9431_op), _9449_left, _9452_right, _9434_format);
          } else {
            DAST._IBinOp _source559 = _9431_op;
            if (_source559.is_Eq) {
              bool _9560___mcc_h75 = _source559.dtor_referential;
              bool _9561___mcc_h76 = _source559.dtor_nullable;
              bool _9562_nullable = _9561___mcc_h76;
              bool _9563_referential = _9560___mcc_h75;
              {
                if (_9563_referential) {
                  if (_9562_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9449_left, _9452_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source559.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else if (_source559.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9449_left, _9452_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9564___mcc_h77 = _source559.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9565_op = _9564___mcc_h77;
              {
                r = RAST.Expr.create_BinaryOp(_9565_op, _9449_left, _9452_right, _9434_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out4137;
      DCOMPUTF16._IOwnership _out4138;
      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4137, out _out4138);
      r = _out4137;
      resultingOwnership = _out4138;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_9451_recIdentsL, _9454_recIdentsR);
      return ;
    }
    public static void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs54 = e;
      DAST._IExpression _9566_expr = _let_tmp_rhs54.dtor_value;
      DAST._IType _9567_fromTpe = _let_tmp_rhs54.dtor_from;
      DAST._IType _9568_toTpe = _let_tmp_rhs54.dtor_typ;
      if (object.Equals(_9567_fromTpe, _9568_toTpe)) {
        RAST._IExpr _9569_recursiveGen;
        DCOMPUTF16._IOwnership _9570_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9571_recIdents;
        RAST._IExpr _out4139;
        DCOMPUTF16._IOwnership _out4140;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4141;
        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4139, out _out4140, out _out4141);
        _9569_recursiveGen = _out4139;
        _9570_recOwned = _out4140;
        _9571_recIdents = _out4141;
        r = _9569_recursiveGen;
        RAST._IExpr _out4142;
        DCOMPUTF16._IOwnership _out4143;
        DCOMPUTF16.COMP.FromOwnership(r, _9570_recOwned, expectedOwnership, out _out4142, out _out4143);
        r = _out4142;
        resultingOwnership = _out4143;
        readIdents = _9571_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source560 = _System.Tuple2<DAST._IType, DAST._IType>.create(_9567_fromTpe, _9568_toTpe);
        DAST._IType _9572___mcc_h0 = _source560.dtor__0;
        DAST._IType _9573___mcc_h1 = _source560.dtor__1;
        DAST._IType _source561 = _9572___mcc_h0;
        if (_source561.is_Path) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9574___mcc_h4 = _source561.dtor_Path_a0;
          Dafny.ISequence<DAST._IType> _9575___mcc_h5 = _source561.dtor_typeArgs;
          DAST._IResolvedType _9576___mcc_h6 = _source561.dtor_resolved;
          DAST._IResolvedType _source562 = _9576___mcc_h6;
          if (_source562.is_AllocatedDatatype) {
            DAST._IDatatypeType _9577___mcc_h16 = _source562.dtor_datatypeType;
            DAST._IType _source563 = _9573___mcc_h1;
            if (_source563.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9578___mcc_h20 = _source563.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _9579___mcc_h21 = _source563.dtor_typeArgs;
              DAST._IResolvedType _9580___mcc_h22 = _source563.dtor_resolved;
              DAST._IResolvedType _source564 = _9580___mcc_h22;
              if (_source564.is_AllocatedDatatype) {
                DAST._IDatatypeType _9581___mcc_h26 = _source564.dtor_datatypeType;
                {
                  RAST._IType _9582_fromTpeGen;
                  RAST._IType _out4144;
                  _out4144 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _9582_fromTpeGen = _out4144;
                  RAST._IType _9583_toTpeGen;
                  RAST._IType _out4145;
                  _out4145 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _9583_toTpeGen = _out4145;
                  RAST._IExpr _9584_recursiveGen;
                  DCOMPUTF16._IOwnership _9585_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9586_recIdents;
                  RAST._IExpr _out4146;
                  DCOMPUTF16._IOwnership _out4147;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4148;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4146, out _out4147, out _out4148);
                  _9584_recursiveGen = _out4146;
                  _9585_recOwned = _out4147;
                  _9586_recIdents = _out4148;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9584_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9582_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9583_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4149;
                  DCOMPUTF16._IOwnership _out4150;
                  DCOMPUTF16.COMP.FromOwnership(r, _9585_recOwned, expectedOwnership, out _out4149, out _out4150);
                  r = _out4149;
                  resultingOwnership = _out4150;
                  readIdents = _9586_recIdents;
                }
              } else if (_source564.is_Datatype) {
                DAST._IDatatypeType _9587___mcc_h28 = _source564.dtor_datatypeType;
                {
                  RAST._IType _9588_fromTpeGen;
                  RAST._IType _out4151;
                  _out4151 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _9588_fromTpeGen = _out4151;
                  RAST._IType _9589_toTpeGen;
                  RAST._IType _out4152;
                  _out4152 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _9589_toTpeGen = _out4152;
                  RAST._IExpr _9590_recursiveGen;
                  DCOMPUTF16._IOwnership _9591_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9592_recIdents;
                  RAST._IExpr _out4153;
                  DCOMPUTF16._IOwnership _out4154;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4155;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4153, out _out4154, out _out4155);
                  _9590_recursiveGen = _out4153;
                  _9591_recOwned = _out4154;
                  _9592_recIdents = _out4155;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9590_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9588_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9589_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4156;
                  DCOMPUTF16._IOwnership _out4157;
                  DCOMPUTF16.COMP.FromOwnership(r, _9591_recOwned, expectedOwnership, out _out4156, out _out4157);
                  r = _out4156;
                  resultingOwnership = _out4157;
                  readIdents = _9592_recIdents;
                }
              } else if (_source564.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9593___mcc_h30 = _source564.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _9594___mcc_h31 = _source564.dtor_attributes;
                {
                  RAST._IType _9595_fromTpeGen;
                  RAST._IType _out4158;
                  _out4158 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _9595_fromTpeGen = _out4158;
                  RAST._IType _9596_toTpeGen;
                  RAST._IType _out4159;
                  _out4159 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _9596_toTpeGen = _out4159;
                  RAST._IExpr _9597_recursiveGen;
                  DCOMPUTF16._IOwnership _9598_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9599_recIdents;
                  RAST._IExpr _out4160;
                  DCOMPUTF16._IOwnership _out4161;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4162;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4160, out _out4161, out _out4162);
                  _9597_recursiveGen = _out4160;
                  _9598_recOwned = _out4161;
                  _9599_recIdents = _out4162;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9597_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9595_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9596_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4163;
                  DCOMPUTF16._IOwnership _out4164;
                  DCOMPUTF16.COMP.FromOwnership(r, _9598_recOwned, expectedOwnership, out _out4163, out _out4164);
                  r = _out4163;
                  resultingOwnership = _out4164;
                  readIdents = _9599_recIdents;
                }
              } else {
                DAST._IType _9600___mcc_h34 = _source564.dtor_baseType;
                DAST._INewtypeRange _9601___mcc_h35 = _source564.dtor_range;
                bool _9602___mcc_h36 = _source564.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _9603___mcc_h37 = _source564.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _9604_attributes = _9603___mcc_h37;
                bool _9605_erase = _9602___mcc_h36;
                DAST._INewtypeRange _9606_range = _9601___mcc_h35;
                DAST._IType _9607_b = _9600___mcc_h34;
                {
                  Std.Wrappers._IOption<RAST._IType> _9608_nativeToType;
                  _9608_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9607_b, _9606_range);
                  if (object.Equals(_9567_fromTpe, _9607_b)) {
                    RAST._IExpr _9609_recursiveGen;
                    DCOMPUTF16._IOwnership _9610_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9611_recIdents;
                    RAST._IExpr _out4165;
                    DCOMPUTF16._IOwnership _out4166;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4167;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4165, out _out4166, out _out4167);
                    _9609_recursiveGen = _out4165;
                    _9610_recOwned = _out4166;
                    _9611_recIdents = _out4167;
                    readIdents = _9611_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source565 = _9608_nativeToType;
                    if (_source565.is_None) {
                      if (_9605_erase) {
                        r = _9609_recursiveGen;
                      } else {
                        RAST._IType _9612_rhsType;
                        RAST._IType _out4168;
                        _out4168 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                        _9612_rhsType = _out4168;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9612_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9609_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4169;
                      DCOMPUTF16._IOwnership _out4170;
                      DCOMPUTF16.COMP.FromOwnership(r, _9610_recOwned, expectedOwnership, out _out4169, out _out4170);
                      r = _out4169;
                      resultingOwnership = _out4170;
                    } else {
                      RAST._IType _9613___mcc_h1348 = _source565.dtor_value;
                      RAST._IType _9614_v = _9613___mcc_h1348;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9609_recursiveGen, RAST.Expr.create_ExprFromType(_9614_v)));
                      RAST._IExpr _out4171;
                      DCOMPUTF16._IOwnership _out4172;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4171, out _out4172);
                      r = _out4171;
                      resultingOwnership = _out4172;
                    }
                  } else {
                    if ((_9608_nativeToType).is_Some) {
                      DAST._IType _source566 = _9567_fromTpe;
                      if (_source566.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9615___mcc_h1349 = _source566.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _9616___mcc_h1350 = _source566.dtor_typeArgs;
                        DAST._IResolvedType _9617___mcc_h1351 = _source566.dtor_resolved;
                        DAST._IResolvedType _source567 = _9617___mcc_h1351;
                        if (_source567.is_AllocatedDatatype) {
                          DAST._IDatatypeType _9618___mcc_h1355 = _source567.dtor_datatypeType;
                        } else if (_source567.is_Datatype) {
                          DAST._IDatatypeType _9619___mcc_h1357 = _source567.dtor_datatypeType;
                        } else if (_source567.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9620___mcc_h1359 = _source567.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _9621___mcc_h1360 = _source567.dtor_attributes;
                        } else {
                          DAST._IType _9622___mcc_h1363 = _source567.dtor_baseType;
                          DAST._INewtypeRange _9623___mcc_h1364 = _source567.dtor_range;
                          bool _9624___mcc_h1365 = _source567.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _9625___mcc_h1366 = _source567.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _9626_attributes0 = _9625___mcc_h1366;
                          bool _9627_erase0 = _9624___mcc_h1365;
                          DAST._INewtypeRange _9628_range0 = _9623___mcc_h1364;
                          DAST._IType _9629_b0 = _9622___mcc_h1363;
                          {
                            Std.Wrappers._IOption<RAST._IType> _9630_nativeFromType;
                            _9630_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9629_b0, _9628_range0);
                            if ((_9630_nativeFromType).is_Some) {
                              RAST._IExpr _9631_recursiveGen;
                              DCOMPUTF16._IOwnership _9632_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9633_recIdents;
                              RAST._IExpr _out4173;
                              DCOMPUTF16._IOwnership _out4174;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4175;
                              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4173, out _out4174, out _out4175);
                              _9631_recursiveGen = _out4173;
                              _9632_recOwned = _out4174;
                              _9633_recIdents = _out4175;
                              RAST._IExpr _out4176;
                              DCOMPUTF16._IOwnership _out4177;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9631_recursiveGen, (_9608_nativeToType).dtor_value), _9632_recOwned, expectedOwnership, out _out4176, out _out4177);
                              r = _out4176;
                              resultingOwnership = _out4177;
                              readIdents = _9633_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source566.is_Nullable) {
                        DAST._IType _9634___mcc_h1371 = _source566.dtor_Nullable_a0;
                      } else if (_source566.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _9635___mcc_h1373 = _source566.dtor_Tuple_a0;
                      } else if (_source566.is_Array) {
                        DAST._IType _9636___mcc_h1375 = _source566.dtor_element;
                        BigInteger _9637___mcc_h1376 = _source566.dtor_dims;
                      } else if (_source566.is_Seq) {
                        DAST._IType _9638___mcc_h1379 = _source566.dtor_element;
                      } else if (_source566.is_Set) {
                        DAST._IType _9639___mcc_h1381 = _source566.dtor_element;
                      } else if (_source566.is_Multiset) {
                        DAST._IType _9640___mcc_h1383 = _source566.dtor_element;
                      } else if (_source566.is_Map) {
                        DAST._IType _9641___mcc_h1385 = _source566.dtor_key;
                        DAST._IType _9642___mcc_h1386 = _source566.dtor_value;
                      } else if (_source566.is_SetBuilder) {
                        DAST._IType _9643___mcc_h1389 = _source566.dtor_element;
                      } else if (_source566.is_MapBuilder) {
                        DAST._IType _9644___mcc_h1391 = _source566.dtor_key;
                        DAST._IType _9645___mcc_h1392 = _source566.dtor_value;
                      } else if (_source566.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _9646___mcc_h1395 = _source566.dtor_args;
                        DAST._IType _9647___mcc_h1396 = _source566.dtor_result;
                      } else if (_source566.is_Primitive) {
                        DAST._IPrimitive _9648___mcc_h1399 = _source566.dtor_Primitive_a0;
                      } else if (_source566.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _9649___mcc_h1401 = _source566.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _9650___mcc_h1403 = _source566.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9651_recursiveGen;
                        DCOMPUTF16._IOwnership _9652_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9653_recIdents;
                        RAST._IExpr _out4178;
                        DCOMPUTF16._IOwnership _out4179;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4180;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4178, out _out4179, out _out4180);
                        _9651_recursiveGen = _out4178;
                        _9652_recOwned = _out4179;
                        _9653_recIdents = _out4180;
                        RAST._IExpr _out4181;
                        DCOMPUTF16._IOwnership _out4182;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9651_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9608_nativeToType).dtor_value), _9652_recOwned, expectedOwnership, out _out4181, out _out4182);
                        r = _out4181;
                        resultingOwnership = _out4182;
                        readIdents = _9653_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4183;
                    DCOMPUTF16._IOwnership _out4184;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4185;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _9607_b), _9607_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4183, out _out4184, out _out4185);
                    r = _out4183;
                    resultingOwnership = _out4184;
                    readIdents = _out4185;
                  }
                }
              }
            } else if (_source563.is_Nullable) {
              DAST._IType _9654___mcc_h42 = _source563.dtor_Nullable_a0;
              {
                RAST._IExpr _9655_recursiveGen;
                DCOMPUTF16._IOwnership _9656_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9657_recIdents;
                RAST._IExpr _out4186;
                DCOMPUTF16._IOwnership _out4187;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4188;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4186, out _out4187, out _out4188);
                _9655_recursiveGen = _out4186;
                _9656_recOwned = _out4187;
                _9657_recIdents = _out4188;
                r = _9655_recursiveGen;
                if (object.Equals(_9656_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4189;
                DCOMPUTF16._IOwnership _out4190;
                DCOMPUTF16.COMP.FromOwnership(r, _9656_recOwned, expectedOwnership, out _out4189, out _out4190);
                r = _out4189;
                resultingOwnership = _out4190;
                readIdents = _9657_recIdents;
              }
            } else if (_source563.is_Tuple) {
              Dafny.ISequence<DAST._IType> _9658___mcc_h44 = _source563.dtor_Tuple_a0;
              {
                RAST._IType _9659_fromTpeGen;
                RAST._IType _out4191;
                _out4191 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9659_fromTpeGen = _out4191;
                RAST._IType _9660_toTpeGen;
                RAST._IType _out4192;
                _out4192 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9660_toTpeGen = _out4192;
                RAST._IExpr _9661_recursiveGen;
                DCOMPUTF16._IOwnership _9662_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9663_recIdents;
                RAST._IExpr _out4193;
                DCOMPUTF16._IOwnership _out4194;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4195;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4193, out _out4194, out _out4195);
                _9661_recursiveGen = _out4193;
                _9662_recOwned = _out4194;
                _9663_recIdents = _out4195;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9661_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9659_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9660_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4196;
                DCOMPUTF16._IOwnership _out4197;
                DCOMPUTF16.COMP.FromOwnership(r, _9662_recOwned, expectedOwnership, out _out4196, out _out4197);
                r = _out4196;
                resultingOwnership = _out4197;
                readIdents = _9663_recIdents;
              }
            } else if (_source563.is_Array) {
              DAST._IType _9664___mcc_h46 = _source563.dtor_element;
              BigInteger _9665___mcc_h47 = _source563.dtor_dims;
              {
                RAST._IType _9666_fromTpeGen;
                RAST._IType _out4198;
                _out4198 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9666_fromTpeGen = _out4198;
                RAST._IType _9667_toTpeGen;
                RAST._IType _out4199;
                _out4199 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9667_toTpeGen = _out4199;
                RAST._IExpr _9668_recursiveGen;
                DCOMPUTF16._IOwnership _9669_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9670_recIdents;
                RAST._IExpr _out4200;
                DCOMPUTF16._IOwnership _out4201;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4202;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4200, out _out4201, out _out4202);
                _9668_recursiveGen = _out4200;
                _9669_recOwned = _out4201;
                _9670_recIdents = _out4202;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9668_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9666_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9667_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4203;
                DCOMPUTF16._IOwnership _out4204;
                DCOMPUTF16.COMP.FromOwnership(r, _9669_recOwned, expectedOwnership, out _out4203, out _out4204);
                r = _out4203;
                resultingOwnership = _out4204;
                readIdents = _9670_recIdents;
              }
            } else if (_source563.is_Seq) {
              DAST._IType _9671___mcc_h50 = _source563.dtor_element;
              {
                RAST._IType _9672_fromTpeGen;
                RAST._IType _out4205;
                _out4205 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9672_fromTpeGen = _out4205;
                RAST._IType _9673_toTpeGen;
                RAST._IType _out4206;
                _out4206 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9673_toTpeGen = _out4206;
                RAST._IExpr _9674_recursiveGen;
                DCOMPUTF16._IOwnership _9675_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9676_recIdents;
                RAST._IExpr _out4207;
                DCOMPUTF16._IOwnership _out4208;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4209;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4207, out _out4208, out _out4209);
                _9674_recursiveGen = _out4207;
                _9675_recOwned = _out4208;
                _9676_recIdents = _out4209;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9674_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9672_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9673_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4210;
                DCOMPUTF16._IOwnership _out4211;
                DCOMPUTF16.COMP.FromOwnership(r, _9675_recOwned, expectedOwnership, out _out4210, out _out4211);
                r = _out4210;
                resultingOwnership = _out4211;
                readIdents = _9676_recIdents;
              }
            } else if (_source563.is_Set) {
              DAST._IType _9677___mcc_h52 = _source563.dtor_element;
              {
                RAST._IType _9678_fromTpeGen;
                RAST._IType _out4212;
                _out4212 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9678_fromTpeGen = _out4212;
                RAST._IType _9679_toTpeGen;
                RAST._IType _out4213;
                _out4213 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9679_toTpeGen = _out4213;
                RAST._IExpr _9680_recursiveGen;
                DCOMPUTF16._IOwnership _9681_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9682_recIdents;
                RAST._IExpr _out4214;
                DCOMPUTF16._IOwnership _out4215;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4216;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4214, out _out4215, out _out4216);
                _9680_recursiveGen = _out4214;
                _9681_recOwned = _out4215;
                _9682_recIdents = _out4216;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9680_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9678_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9679_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4217;
                DCOMPUTF16._IOwnership _out4218;
                DCOMPUTF16.COMP.FromOwnership(r, _9681_recOwned, expectedOwnership, out _out4217, out _out4218);
                r = _out4217;
                resultingOwnership = _out4218;
                readIdents = _9682_recIdents;
              }
            } else if (_source563.is_Multiset) {
              DAST._IType _9683___mcc_h54 = _source563.dtor_element;
              {
                RAST._IType _9684_fromTpeGen;
                RAST._IType _out4219;
                _out4219 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9684_fromTpeGen = _out4219;
                RAST._IType _9685_toTpeGen;
                RAST._IType _out4220;
                _out4220 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9685_toTpeGen = _out4220;
                RAST._IExpr _9686_recursiveGen;
                DCOMPUTF16._IOwnership _9687_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9688_recIdents;
                RAST._IExpr _out4221;
                DCOMPUTF16._IOwnership _out4222;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4223;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4221, out _out4222, out _out4223);
                _9686_recursiveGen = _out4221;
                _9687_recOwned = _out4222;
                _9688_recIdents = _out4223;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9686_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9684_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9685_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4224;
                DCOMPUTF16._IOwnership _out4225;
                DCOMPUTF16.COMP.FromOwnership(r, _9687_recOwned, expectedOwnership, out _out4224, out _out4225);
                r = _out4224;
                resultingOwnership = _out4225;
                readIdents = _9688_recIdents;
              }
            } else if (_source563.is_Map) {
              DAST._IType _9689___mcc_h56 = _source563.dtor_key;
              DAST._IType _9690___mcc_h57 = _source563.dtor_value;
              {
                RAST._IType _9691_fromTpeGen;
                RAST._IType _out4226;
                _out4226 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9691_fromTpeGen = _out4226;
                RAST._IType _9692_toTpeGen;
                RAST._IType _out4227;
                _out4227 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9692_toTpeGen = _out4227;
                RAST._IExpr _9693_recursiveGen;
                DCOMPUTF16._IOwnership _9694_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9695_recIdents;
                RAST._IExpr _out4228;
                DCOMPUTF16._IOwnership _out4229;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4230;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4228, out _out4229, out _out4230);
                _9693_recursiveGen = _out4228;
                _9694_recOwned = _out4229;
                _9695_recIdents = _out4230;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9693_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9691_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9692_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4231;
                DCOMPUTF16._IOwnership _out4232;
                DCOMPUTF16.COMP.FromOwnership(r, _9694_recOwned, expectedOwnership, out _out4231, out _out4232);
                r = _out4231;
                resultingOwnership = _out4232;
                readIdents = _9695_recIdents;
              }
            } else if (_source563.is_SetBuilder) {
              DAST._IType _9696___mcc_h60 = _source563.dtor_element;
              {
                RAST._IType _9697_fromTpeGen;
                RAST._IType _out4233;
                _out4233 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9697_fromTpeGen = _out4233;
                RAST._IType _9698_toTpeGen;
                RAST._IType _out4234;
                _out4234 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9698_toTpeGen = _out4234;
                RAST._IExpr _9699_recursiveGen;
                DCOMPUTF16._IOwnership _9700_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9701_recIdents;
                RAST._IExpr _out4235;
                DCOMPUTF16._IOwnership _out4236;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4237;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4235, out _out4236, out _out4237);
                _9699_recursiveGen = _out4235;
                _9700_recOwned = _out4236;
                _9701_recIdents = _out4237;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9699_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9697_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9698_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4238;
                DCOMPUTF16._IOwnership _out4239;
                DCOMPUTF16.COMP.FromOwnership(r, _9700_recOwned, expectedOwnership, out _out4238, out _out4239);
                r = _out4238;
                resultingOwnership = _out4239;
                readIdents = _9701_recIdents;
              }
            } else if (_source563.is_MapBuilder) {
              DAST._IType _9702___mcc_h62 = _source563.dtor_key;
              DAST._IType _9703___mcc_h63 = _source563.dtor_value;
              {
                RAST._IType _9704_fromTpeGen;
                RAST._IType _out4240;
                _out4240 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9704_fromTpeGen = _out4240;
                RAST._IType _9705_toTpeGen;
                RAST._IType _out4241;
                _out4241 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9705_toTpeGen = _out4241;
                RAST._IExpr _9706_recursiveGen;
                DCOMPUTF16._IOwnership _9707_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9708_recIdents;
                RAST._IExpr _out4242;
                DCOMPUTF16._IOwnership _out4243;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4244;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4242, out _out4243, out _out4244);
                _9706_recursiveGen = _out4242;
                _9707_recOwned = _out4243;
                _9708_recIdents = _out4244;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9706_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9704_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9705_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4245;
                DCOMPUTF16._IOwnership _out4246;
                DCOMPUTF16.COMP.FromOwnership(r, _9707_recOwned, expectedOwnership, out _out4245, out _out4246);
                r = _out4245;
                resultingOwnership = _out4246;
                readIdents = _9708_recIdents;
              }
            } else if (_source563.is_Arrow) {
              Dafny.ISequence<DAST._IType> _9709___mcc_h66 = _source563.dtor_args;
              DAST._IType _9710___mcc_h67 = _source563.dtor_result;
              {
                RAST._IType _9711_fromTpeGen;
                RAST._IType _out4247;
                _out4247 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9711_fromTpeGen = _out4247;
                RAST._IType _9712_toTpeGen;
                RAST._IType _out4248;
                _out4248 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9712_toTpeGen = _out4248;
                RAST._IExpr _9713_recursiveGen;
                DCOMPUTF16._IOwnership _9714_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9715_recIdents;
                RAST._IExpr _out4249;
                DCOMPUTF16._IOwnership _out4250;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4251;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4249, out _out4250, out _out4251);
                _9713_recursiveGen = _out4249;
                _9714_recOwned = _out4250;
                _9715_recIdents = _out4251;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9713_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9711_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9712_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4252;
                DCOMPUTF16._IOwnership _out4253;
                DCOMPUTF16.COMP.FromOwnership(r, _9714_recOwned, expectedOwnership, out _out4252, out _out4253);
                r = _out4252;
                resultingOwnership = _out4253;
                readIdents = _9715_recIdents;
              }
            } else if (_source563.is_Primitive) {
              DAST._IPrimitive _9716___mcc_h70 = _source563.dtor_Primitive_a0;
              {
                RAST._IType _9717_fromTpeGen;
                RAST._IType _out4254;
                _out4254 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9717_fromTpeGen = _out4254;
                RAST._IType _9718_toTpeGen;
                RAST._IType _out4255;
                _out4255 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9718_toTpeGen = _out4255;
                RAST._IExpr _9719_recursiveGen;
                DCOMPUTF16._IOwnership _9720_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9721_recIdents;
                RAST._IExpr _out4256;
                DCOMPUTF16._IOwnership _out4257;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4258;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4256, out _out4257, out _out4258);
                _9719_recursiveGen = _out4256;
                _9720_recOwned = _out4257;
                _9721_recIdents = _out4258;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9719_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9717_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9718_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4259;
                DCOMPUTF16._IOwnership _out4260;
                DCOMPUTF16.COMP.FromOwnership(r, _9720_recOwned, expectedOwnership, out _out4259, out _out4260);
                r = _out4259;
                resultingOwnership = _out4260;
                readIdents = _9721_recIdents;
              }
            } else if (_source563.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _9722___mcc_h72 = _source563.dtor_Passthrough_a0;
              {
                RAST._IType _9723_fromTpeGen;
                RAST._IType _out4261;
                _out4261 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9723_fromTpeGen = _out4261;
                RAST._IType _9724_toTpeGen;
                RAST._IType _out4262;
                _out4262 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9724_toTpeGen = _out4262;
                RAST._IExpr _9725_recursiveGen;
                DCOMPUTF16._IOwnership _9726_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9727_recIdents;
                RAST._IExpr _out4263;
                DCOMPUTF16._IOwnership _out4264;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4265;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4263, out _out4264, out _out4265);
                _9725_recursiveGen = _out4263;
                _9726_recOwned = _out4264;
                _9727_recIdents = _out4265;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9725_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9723_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9724_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4266;
                DCOMPUTF16._IOwnership _out4267;
                DCOMPUTF16.COMP.FromOwnership(r, _9726_recOwned, expectedOwnership, out _out4266, out _out4267);
                r = _out4266;
                resultingOwnership = _out4267;
                readIdents = _9727_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9728___mcc_h74 = _source563.dtor_TypeArg_a0;
              {
                RAST._IType _9729_fromTpeGen;
                RAST._IType _out4268;
                _out4268 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9729_fromTpeGen = _out4268;
                RAST._IType _9730_toTpeGen;
                RAST._IType _out4269;
                _out4269 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9730_toTpeGen = _out4269;
                RAST._IExpr _9731_recursiveGen;
                DCOMPUTF16._IOwnership _9732_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9733_recIdents;
                RAST._IExpr _out4270;
                DCOMPUTF16._IOwnership _out4271;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4272;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4270, out _out4271, out _out4272);
                _9731_recursiveGen = _out4270;
                _9732_recOwned = _out4271;
                _9733_recIdents = _out4272;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9731_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9729_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9730_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4273;
                DCOMPUTF16._IOwnership _out4274;
                DCOMPUTF16.COMP.FromOwnership(r, _9732_recOwned, expectedOwnership, out _out4273, out _out4274);
                r = _out4273;
                resultingOwnership = _out4274;
                readIdents = _9733_recIdents;
              }
            }
          } else if (_source562.is_Datatype) {
            DAST._IDatatypeType _9734___mcc_h76 = _source562.dtor_datatypeType;
            DAST._IType _source568 = _9573___mcc_h1;
            if (_source568.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9735___mcc_h80 = _source568.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _9736___mcc_h81 = _source568.dtor_typeArgs;
              DAST._IResolvedType _9737___mcc_h82 = _source568.dtor_resolved;
              DAST._IResolvedType _source569 = _9737___mcc_h82;
              if (_source569.is_AllocatedDatatype) {
                DAST._IDatatypeType _9738___mcc_h86 = _source569.dtor_datatypeType;
                {
                  RAST._IType _9739_fromTpeGen;
                  RAST._IType _out4275;
                  _out4275 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _9739_fromTpeGen = _out4275;
                  RAST._IType _9740_toTpeGen;
                  RAST._IType _out4276;
                  _out4276 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _9740_toTpeGen = _out4276;
                  RAST._IExpr _9741_recursiveGen;
                  DCOMPUTF16._IOwnership _9742_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9743_recIdents;
                  RAST._IExpr _out4277;
                  DCOMPUTF16._IOwnership _out4278;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4279;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4277, out _out4278, out _out4279);
                  _9741_recursiveGen = _out4277;
                  _9742_recOwned = _out4278;
                  _9743_recIdents = _out4279;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9741_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9739_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9740_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4280;
                  DCOMPUTF16._IOwnership _out4281;
                  DCOMPUTF16.COMP.FromOwnership(r, _9742_recOwned, expectedOwnership, out _out4280, out _out4281);
                  r = _out4280;
                  resultingOwnership = _out4281;
                  readIdents = _9743_recIdents;
                }
              } else if (_source569.is_Datatype) {
                DAST._IDatatypeType _9744___mcc_h88 = _source569.dtor_datatypeType;
                {
                  RAST._IType _9745_fromTpeGen;
                  RAST._IType _out4282;
                  _out4282 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _9745_fromTpeGen = _out4282;
                  RAST._IType _9746_toTpeGen;
                  RAST._IType _out4283;
                  _out4283 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _9746_toTpeGen = _out4283;
                  RAST._IExpr _9747_recursiveGen;
                  DCOMPUTF16._IOwnership _9748_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9749_recIdents;
                  RAST._IExpr _out4284;
                  DCOMPUTF16._IOwnership _out4285;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4286;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4284, out _out4285, out _out4286);
                  _9747_recursiveGen = _out4284;
                  _9748_recOwned = _out4285;
                  _9749_recIdents = _out4286;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9747_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9745_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9746_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4287;
                  DCOMPUTF16._IOwnership _out4288;
                  DCOMPUTF16.COMP.FromOwnership(r, _9748_recOwned, expectedOwnership, out _out4287, out _out4288);
                  r = _out4287;
                  resultingOwnership = _out4288;
                  readIdents = _9749_recIdents;
                }
              } else if (_source569.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9750___mcc_h90 = _source569.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _9751___mcc_h91 = _source569.dtor_attributes;
                {
                  RAST._IType _9752_fromTpeGen;
                  RAST._IType _out4289;
                  _out4289 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _9752_fromTpeGen = _out4289;
                  RAST._IType _9753_toTpeGen;
                  RAST._IType _out4290;
                  _out4290 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _9753_toTpeGen = _out4290;
                  RAST._IExpr _9754_recursiveGen;
                  DCOMPUTF16._IOwnership _9755_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9756_recIdents;
                  RAST._IExpr _out4291;
                  DCOMPUTF16._IOwnership _out4292;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4293;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4291, out _out4292, out _out4293);
                  _9754_recursiveGen = _out4291;
                  _9755_recOwned = _out4292;
                  _9756_recIdents = _out4293;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9754_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9752_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9753_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4294;
                  DCOMPUTF16._IOwnership _out4295;
                  DCOMPUTF16.COMP.FromOwnership(r, _9755_recOwned, expectedOwnership, out _out4294, out _out4295);
                  r = _out4294;
                  resultingOwnership = _out4295;
                  readIdents = _9756_recIdents;
                }
              } else {
                DAST._IType _9757___mcc_h94 = _source569.dtor_baseType;
                DAST._INewtypeRange _9758___mcc_h95 = _source569.dtor_range;
                bool _9759___mcc_h96 = _source569.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _9760___mcc_h97 = _source569.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _9761_attributes = _9760___mcc_h97;
                bool _9762_erase = _9759___mcc_h96;
                DAST._INewtypeRange _9763_range = _9758___mcc_h95;
                DAST._IType _9764_b = _9757___mcc_h94;
                {
                  Std.Wrappers._IOption<RAST._IType> _9765_nativeToType;
                  _9765_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9764_b, _9763_range);
                  if (object.Equals(_9567_fromTpe, _9764_b)) {
                    RAST._IExpr _9766_recursiveGen;
                    DCOMPUTF16._IOwnership _9767_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9768_recIdents;
                    RAST._IExpr _out4296;
                    DCOMPUTF16._IOwnership _out4297;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4298;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4296, out _out4297, out _out4298);
                    _9766_recursiveGen = _out4296;
                    _9767_recOwned = _out4297;
                    _9768_recIdents = _out4298;
                    readIdents = _9768_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source570 = _9765_nativeToType;
                    if (_source570.is_None) {
                      if (_9762_erase) {
                        r = _9766_recursiveGen;
                      } else {
                        RAST._IType _9769_rhsType;
                        RAST._IType _out4299;
                        _out4299 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                        _9769_rhsType = _out4299;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9769_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9766_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4300;
                      DCOMPUTF16._IOwnership _out4301;
                      DCOMPUTF16.COMP.FromOwnership(r, _9767_recOwned, expectedOwnership, out _out4300, out _out4301);
                      r = _out4300;
                      resultingOwnership = _out4301;
                    } else {
                      RAST._IType _9770___mcc_h1405 = _source570.dtor_value;
                      RAST._IType _9771_v = _9770___mcc_h1405;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9766_recursiveGen, RAST.Expr.create_ExprFromType(_9771_v)));
                      RAST._IExpr _out4302;
                      DCOMPUTF16._IOwnership _out4303;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4302, out _out4303);
                      r = _out4302;
                      resultingOwnership = _out4303;
                    }
                  } else {
                    if ((_9765_nativeToType).is_Some) {
                      DAST._IType _source571 = _9567_fromTpe;
                      if (_source571.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9772___mcc_h1406 = _source571.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _9773___mcc_h1407 = _source571.dtor_typeArgs;
                        DAST._IResolvedType _9774___mcc_h1408 = _source571.dtor_resolved;
                        DAST._IResolvedType _source572 = _9774___mcc_h1408;
                        if (_source572.is_AllocatedDatatype) {
                          DAST._IDatatypeType _9775___mcc_h1412 = _source572.dtor_datatypeType;
                        } else if (_source572.is_Datatype) {
                          DAST._IDatatypeType _9776___mcc_h1414 = _source572.dtor_datatypeType;
                        } else if (_source572.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9777___mcc_h1416 = _source572.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _9778___mcc_h1417 = _source572.dtor_attributes;
                        } else {
                          DAST._IType _9779___mcc_h1420 = _source572.dtor_baseType;
                          DAST._INewtypeRange _9780___mcc_h1421 = _source572.dtor_range;
                          bool _9781___mcc_h1422 = _source572.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _9782___mcc_h1423 = _source572.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _9783_attributes0 = _9782___mcc_h1423;
                          bool _9784_erase0 = _9781___mcc_h1422;
                          DAST._INewtypeRange _9785_range0 = _9780___mcc_h1421;
                          DAST._IType _9786_b0 = _9779___mcc_h1420;
                          {
                            Std.Wrappers._IOption<RAST._IType> _9787_nativeFromType;
                            _9787_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9786_b0, _9785_range0);
                            if ((_9787_nativeFromType).is_Some) {
                              RAST._IExpr _9788_recursiveGen;
                              DCOMPUTF16._IOwnership _9789_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9790_recIdents;
                              RAST._IExpr _out4304;
                              DCOMPUTF16._IOwnership _out4305;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4306;
                              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4304, out _out4305, out _out4306);
                              _9788_recursiveGen = _out4304;
                              _9789_recOwned = _out4305;
                              _9790_recIdents = _out4306;
                              RAST._IExpr _out4307;
                              DCOMPUTF16._IOwnership _out4308;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9788_recursiveGen, (_9765_nativeToType).dtor_value), _9789_recOwned, expectedOwnership, out _out4307, out _out4308);
                              r = _out4307;
                              resultingOwnership = _out4308;
                              readIdents = _9790_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source571.is_Nullable) {
                        DAST._IType _9791___mcc_h1428 = _source571.dtor_Nullable_a0;
                      } else if (_source571.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _9792___mcc_h1430 = _source571.dtor_Tuple_a0;
                      } else if (_source571.is_Array) {
                        DAST._IType _9793___mcc_h1432 = _source571.dtor_element;
                        BigInteger _9794___mcc_h1433 = _source571.dtor_dims;
                      } else if (_source571.is_Seq) {
                        DAST._IType _9795___mcc_h1436 = _source571.dtor_element;
                      } else if (_source571.is_Set) {
                        DAST._IType _9796___mcc_h1438 = _source571.dtor_element;
                      } else if (_source571.is_Multiset) {
                        DAST._IType _9797___mcc_h1440 = _source571.dtor_element;
                      } else if (_source571.is_Map) {
                        DAST._IType _9798___mcc_h1442 = _source571.dtor_key;
                        DAST._IType _9799___mcc_h1443 = _source571.dtor_value;
                      } else if (_source571.is_SetBuilder) {
                        DAST._IType _9800___mcc_h1446 = _source571.dtor_element;
                      } else if (_source571.is_MapBuilder) {
                        DAST._IType _9801___mcc_h1448 = _source571.dtor_key;
                        DAST._IType _9802___mcc_h1449 = _source571.dtor_value;
                      } else if (_source571.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _9803___mcc_h1452 = _source571.dtor_args;
                        DAST._IType _9804___mcc_h1453 = _source571.dtor_result;
                      } else if (_source571.is_Primitive) {
                        DAST._IPrimitive _9805___mcc_h1456 = _source571.dtor_Primitive_a0;
                      } else if (_source571.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _9806___mcc_h1458 = _source571.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _9807___mcc_h1460 = _source571.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9808_recursiveGen;
                        DCOMPUTF16._IOwnership _9809_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9810_recIdents;
                        RAST._IExpr _out4309;
                        DCOMPUTF16._IOwnership _out4310;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4311;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4309, out _out4310, out _out4311);
                        _9808_recursiveGen = _out4309;
                        _9809_recOwned = _out4310;
                        _9810_recIdents = _out4311;
                        RAST._IExpr _out4312;
                        DCOMPUTF16._IOwnership _out4313;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9808_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9765_nativeToType).dtor_value), _9809_recOwned, expectedOwnership, out _out4312, out _out4313);
                        r = _out4312;
                        resultingOwnership = _out4313;
                        readIdents = _9810_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4314;
                    DCOMPUTF16._IOwnership _out4315;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4316;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _9764_b), _9764_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4314, out _out4315, out _out4316);
                    r = _out4314;
                    resultingOwnership = _out4315;
                    readIdents = _out4316;
                  }
                }
              }
            } else if (_source568.is_Nullable) {
              DAST._IType _9811___mcc_h102 = _source568.dtor_Nullable_a0;
              {
                RAST._IExpr _9812_recursiveGen;
                DCOMPUTF16._IOwnership _9813_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9814_recIdents;
                RAST._IExpr _out4317;
                DCOMPUTF16._IOwnership _out4318;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4319;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4317, out _out4318, out _out4319);
                _9812_recursiveGen = _out4317;
                _9813_recOwned = _out4318;
                _9814_recIdents = _out4319;
                r = _9812_recursiveGen;
                if (object.Equals(_9813_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4320;
                DCOMPUTF16._IOwnership _out4321;
                DCOMPUTF16.COMP.FromOwnership(r, _9813_recOwned, expectedOwnership, out _out4320, out _out4321);
                r = _out4320;
                resultingOwnership = _out4321;
                readIdents = _9814_recIdents;
              }
            } else if (_source568.is_Tuple) {
              Dafny.ISequence<DAST._IType> _9815___mcc_h104 = _source568.dtor_Tuple_a0;
              {
                RAST._IType _9816_fromTpeGen;
                RAST._IType _out4322;
                _out4322 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9816_fromTpeGen = _out4322;
                RAST._IType _9817_toTpeGen;
                RAST._IType _out4323;
                _out4323 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9817_toTpeGen = _out4323;
                RAST._IExpr _9818_recursiveGen;
                DCOMPUTF16._IOwnership _9819_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9820_recIdents;
                RAST._IExpr _out4324;
                DCOMPUTF16._IOwnership _out4325;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4326;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4324, out _out4325, out _out4326);
                _9818_recursiveGen = _out4324;
                _9819_recOwned = _out4325;
                _9820_recIdents = _out4326;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9818_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9816_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9817_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4327;
                DCOMPUTF16._IOwnership _out4328;
                DCOMPUTF16.COMP.FromOwnership(r, _9819_recOwned, expectedOwnership, out _out4327, out _out4328);
                r = _out4327;
                resultingOwnership = _out4328;
                readIdents = _9820_recIdents;
              }
            } else if (_source568.is_Array) {
              DAST._IType _9821___mcc_h106 = _source568.dtor_element;
              BigInteger _9822___mcc_h107 = _source568.dtor_dims;
              {
                RAST._IType _9823_fromTpeGen;
                RAST._IType _out4329;
                _out4329 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9823_fromTpeGen = _out4329;
                RAST._IType _9824_toTpeGen;
                RAST._IType _out4330;
                _out4330 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9824_toTpeGen = _out4330;
                RAST._IExpr _9825_recursiveGen;
                DCOMPUTF16._IOwnership _9826_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9827_recIdents;
                RAST._IExpr _out4331;
                DCOMPUTF16._IOwnership _out4332;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4333;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4331, out _out4332, out _out4333);
                _9825_recursiveGen = _out4331;
                _9826_recOwned = _out4332;
                _9827_recIdents = _out4333;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9825_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9823_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9824_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4334;
                DCOMPUTF16._IOwnership _out4335;
                DCOMPUTF16.COMP.FromOwnership(r, _9826_recOwned, expectedOwnership, out _out4334, out _out4335);
                r = _out4334;
                resultingOwnership = _out4335;
                readIdents = _9827_recIdents;
              }
            } else if (_source568.is_Seq) {
              DAST._IType _9828___mcc_h110 = _source568.dtor_element;
              {
                RAST._IType _9829_fromTpeGen;
                RAST._IType _out4336;
                _out4336 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9829_fromTpeGen = _out4336;
                RAST._IType _9830_toTpeGen;
                RAST._IType _out4337;
                _out4337 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9830_toTpeGen = _out4337;
                RAST._IExpr _9831_recursiveGen;
                DCOMPUTF16._IOwnership _9832_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9833_recIdents;
                RAST._IExpr _out4338;
                DCOMPUTF16._IOwnership _out4339;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4340;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4338, out _out4339, out _out4340);
                _9831_recursiveGen = _out4338;
                _9832_recOwned = _out4339;
                _9833_recIdents = _out4340;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9831_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9829_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9830_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4341;
                DCOMPUTF16._IOwnership _out4342;
                DCOMPUTF16.COMP.FromOwnership(r, _9832_recOwned, expectedOwnership, out _out4341, out _out4342);
                r = _out4341;
                resultingOwnership = _out4342;
                readIdents = _9833_recIdents;
              }
            } else if (_source568.is_Set) {
              DAST._IType _9834___mcc_h112 = _source568.dtor_element;
              {
                RAST._IType _9835_fromTpeGen;
                RAST._IType _out4343;
                _out4343 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9835_fromTpeGen = _out4343;
                RAST._IType _9836_toTpeGen;
                RAST._IType _out4344;
                _out4344 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9836_toTpeGen = _out4344;
                RAST._IExpr _9837_recursiveGen;
                DCOMPUTF16._IOwnership _9838_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9839_recIdents;
                RAST._IExpr _out4345;
                DCOMPUTF16._IOwnership _out4346;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4347;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4345, out _out4346, out _out4347);
                _9837_recursiveGen = _out4345;
                _9838_recOwned = _out4346;
                _9839_recIdents = _out4347;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9837_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9835_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9836_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4348;
                DCOMPUTF16._IOwnership _out4349;
                DCOMPUTF16.COMP.FromOwnership(r, _9838_recOwned, expectedOwnership, out _out4348, out _out4349);
                r = _out4348;
                resultingOwnership = _out4349;
                readIdents = _9839_recIdents;
              }
            } else if (_source568.is_Multiset) {
              DAST._IType _9840___mcc_h114 = _source568.dtor_element;
              {
                RAST._IType _9841_fromTpeGen;
                RAST._IType _out4350;
                _out4350 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9841_fromTpeGen = _out4350;
                RAST._IType _9842_toTpeGen;
                RAST._IType _out4351;
                _out4351 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9842_toTpeGen = _out4351;
                RAST._IExpr _9843_recursiveGen;
                DCOMPUTF16._IOwnership _9844_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9845_recIdents;
                RAST._IExpr _out4352;
                DCOMPUTF16._IOwnership _out4353;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4354;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4352, out _out4353, out _out4354);
                _9843_recursiveGen = _out4352;
                _9844_recOwned = _out4353;
                _9845_recIdents = _out4354;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9843_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9841_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9842_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4355;
                DCOMPUTF16._IOwnership _out4356;
                DCOMPUTF16.COMP.FromOwnership(r, _9844_recOwned, expectedOwnership, out _out4355, out _out4356);
                r = _out4355;
                resultingOwnership = _out4356;
                readIdents = _9845_recIdents;
              }
            } else if (_source568.is_Map) {
              DAST._IType _9846___mcc_h116 = _source568.dtor_key;
              DAST._IType _9847___mcc_h117 = _source568.dtor_value;
              {
                RAST._IType _9848_fromTpeGen;
                RAST._IType _out4357;
                _out4357 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9848_fromTpeGen = _out4357;
                RAST._IType _9849_toTpeGen;
                RAST._IType _out4358;
                _out4358 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9849_toTpeGen = _out4358;
                RAST._IExpr _9850_recursiveGen;
                DCOMPUTF16._IOwnership _9851_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9852_recIdents;
                RAST._IExpr _out4359;
                DCOMPUTF16._IOwnership _out4360;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4361;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4359, out _out4360, out _out4361);
                _9850_recursiveGen = _out4359;
                _9851_recOwned = _out4360;
                _9852_recIdents = _out4361;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9850_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9848_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9849_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4362;
                DCOMPUTF16._IOwnership _out4363;
                DCOMPUTF16.COMP.FromOwnership(r, _9851_recOwned, expectedOwnership, out _out4362, out _out4363);
                r = _out4362;
                resultingOwnership = _out4363;
                readIdents = _9852_recIdents;
              }
            } else if (_source568.is_SetBuilder) {
              DAST._IType _9853___mcc_h120 = _source568.dtor_element;
              {
                RAST._IType _9854_fromTpeGen;
                RAST._IType _out4364;
                _out4364 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9854_fromTpeGen = _out4364;
                RAST._IType _9855_toTpeGen;
                RAST._IType _out4365;
                _out4365 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9855_toTpeGen = _out4365;
                RAST._IExpr _9856_recursiveGen;
                DCOMPUTF16._IOwnership _9857_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9858_recIdents;
                RAST._IExpr _out4366;
                DCOMPUTF16._IOwnership _out4367;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4368;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4366, out _out4367, out _out4368);
                _9856_recursiveGen = _out4366;
                _9857_recOwned = _out4367;
                _9858_recIdents = _out4368;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9856_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9854_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9855_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4369;
                DCOMPUTF16._IOwnership _out4370;
                DCOMPUTF16.COMP.FromOwnership(r, _9857_recOwned, expectedOwnership, out _out4369, out _out4370);
                r = _out4369;
                resultingOwnership = _out4370;
                readIdents = _9858_recIdents;
              }
            } else if (_source568.is_MapBuilder) {
              DAST._IType _9859___mcc_h122 = _source568.dtor_key;
              DAST._IType _9860___mcc_h123 = _source568.dtor_value;
              {
                RAST._IType _9861_fromTpeGen;
                RAST._IType _out4371;
                _out4371 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9861_fromTpeGen = _out4371;
                RAST._IType _9862_toTpeGen;
                RAST._IType _out4372;
                _out4372 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9862_toTpeGen = _out4372;
                RAST._IExpr _9863_recursiveGen;
                DCOMPUTF16._IOwnership _9864_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9865_recIdents;
                RAST._IExpr _out4373;
                DCOMPUTF16._IOwnership _out4374;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4375;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4373, out _out4374, out _out4375);
                _9863_recursiveGen = _out4373;
                _9864_recOwned = _out4374;
                _9865_recIdents = _out4375;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9863_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9861_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9862_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4376;
                DCOMPUTF16._IOwnership _out4377;
                DCOMPUTF16.COMP.FromOwnership(r, _9864_recOwned, expectedOwnership, out _out4376, out _out4377);
                r = _out4376;
                resultingOwnership = _out4377;
                readIdents = _9865_recIdents;
              }
            } else if (_source568.is_Arrow) {
              Dafny.ISequence<DAST._IType> _9866___mcc_h126 = _source568.dtor_args;
              DAST._IType _9867___mcc_h127 = _source568.dtor_result;
              {
                RAST._IType _9868_fromTpeGen;
                RAST._IType _out4378;
                _out4378 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9868_fromTpeGen = _out4378;
                RAST._IType _9869_toTpeGen;
                RAST._IType _out4379;
                _out4379 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9869_toTpeGen = _out4379;
                RAST._IExpr _9870_recursiveGen;
                DCOMPUTF16._IOwnership _9871_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9872_recIdents;
                RAST._IExpr _out4380;
                DCOMPUTF16._IOwnership _out4381;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4382;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4380, out _out4381, out _out4382);
                _9870_recursiveGen = _out4380;
                _9871_recOwned = _out4381;
                _9872_recIdents = _out4382;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9870_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9868_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9869_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4383;
                DCOMPUTF16._IOwnership _out4384;
                DCOMPUTF16.COMP.FromOwnership(r, _9871_recOwned, expectedOwnership, out _out4383, out _out4384);
                r = _out4383;
                resultingOwnership = _out4384;
                readIdents = _9872_recIdents;
              }
            } else if (_source568.is_Primitive) {
              DAST._IPrimitive _9873___mcc_h130 = _source568.dtor_Primitive_a0;
              {
                RAST._IType _9874_fromTpeGen;
                RAST._IType _out4385;
                _out4385 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9874_fromTpeGen = _out4385;
                RAST._IType _9875_toTpeGen;
                RAST._IType _out4386;
                _out4386 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9875_toTpeGen = _out4386;
                RAST._IExpr _9876_recursiveGen;
                DCOMPUTF16._IOwnership _9877_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9878_recIdents;
                RAST._IExpr _out4387;
                DCOMPUTF16._IOwnership _out4388;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4389;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4387, out _out4388, out _out4389);
                _9876_recursiveGen = _out4387;
                _9877_recOwned = _out4388;
                _9878_recIdents = _out4389;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9876_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9874_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9875_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4390;
                DCOMPUTF16._IOwnership _out4391;
                DCOMPUTF16.COMP.FromOwnership(r, _9877_recOwned, expectedOwnership, out _out4390, out _out4391);
                r = _out4390;
                resultingOwnership = _out4391;
                readIdents = _9878_recIdents;
              }
            } else if (_source568.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _9879___mcc_h132 = _source568.dtor_Passthrough_a0;
              {
                RAST._IType _9880_fromTpeGen;
                RAST._IType _out4392;
                _out4392 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9880_fromTpeGen = _out4392;
                RAST._IType _9881_toTpeGen;
                RAST._IType _out4393;
                _out4393 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9881_toTpeGen = _out4393;
                RAST._IExpr _9882_recursiveGen;
                DCOMPUTF16._IOwnership _9883_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9884_recIdents;
                RAST._IExpr _out4394;
                DCOMPUTF16._IOwnership _out4395;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4396;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4394, out _out4395, out _out4396);
                _9882_recursiveGen = _out4394;
                _9883_recOwned = _out4395;
                _9884_recIdents = _out4396;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9882_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9880_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9881_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4397;
                DCOMPUTF16._IOwnership _out4398;
                DCOMPUTF16.COMP.FromOwnership(r, _9883_recOwned, expectedOwnership, out _out4397, out _out4398);
                r = _out4397;
                resultingOwnership = _out4398;
                readIdents = _9884_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9885___mcc_h134 = _source568.dtor_TypeArg_a0;
              {
                RAST._IType _9886_fromTpeGen;
                RAST._IType _out4399;
                _out4399 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9886_fromTpeGen = _out4399;
                RAST._IType _9887_toTpeGen;
                RAST._IType _out4400;
                _out4400 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9887_toTpeGen = _out4400;
                RAST._IExpr _9888_recursiveGen;
                DCOMPUTF16._IOwnership _9889_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9890_recIdents;
                RAST._IExpr _out4401;
                DCOMPUTF16._IOwnership _out4402;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4403;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4401, out _out4402, out _out4403);
                _9888_recursiveGen = _out4401;
                _9889_recOwned = _out4402;
                _9890_recIdents = _out4403;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9888_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9886_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9887_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4404;
                DCOMPUTF16._IOwnership _out4405;
                DCOMPUTF16.COMP.FromOwnership(r, _9889_recOwned, expectedOwnership, out _out4404, out _out4405);
                r = _out4404;
                resultingOwnership = _out4405;
                readIdents = _9890_recIdents;
              }
            }
          } else if (_source562.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9891___mcc_h136 = _source562.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _9892___mcc_h137 = _source562.dtor_attributes;
            DAST._IType _source573 = _9573___mcc_h1;
            if (_source573.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9893___mcc_h144 = _source573.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _9894___mcc_h145 = _source573.dtor_typeArgs;
              DAST._IResolvedType _9895___mcc_h146 = _source573.dtor_resolved;
              DAST._IResolvedType _source574 = _9895___mcc_h146;
              if (_source574.is_AllocatedDatatype) {
                DAST._IDatatypeType _9896___mcc_h150 = _source574.dtor_datatypeType;
                {
                  RAST._IType _9897_fromTpeGen;
                  RAST._IType _out4406;
                  _out4406 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _9897_fromTpeGen = _out4406;
                  RAST._IType _9898_toTpeGen;
                  RAST._IType _out4407;
                  _out4407 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _9898_toTpeGen = _out4407;
                  RAST._IExpr _9899_recursiveGen;
                  DCOMPUTF16._IOwnership _9900_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9901_recIdents;
                  RAST._IExpr _out4408;
                  DCOMPUTF16._IOwnership _out4409;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4410;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4408, out _out4409, out _out4410);
                  _9899_recursiveGen = _out4408;
                  _9900_recOwned = _out4409;
                  _9901_recIdents = _out4410;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9899_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9897_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9898_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4411;
                  DCOMPUTF16._IOwnership _out4412;
                  DCOMPUTF16.COMP.FromOwnership(r, _9900_recOwned, expectedOwnership, out _out4411, out _out4412);
                  r = _out4411;
                  resultingOwnership = _out4412;
                  readIdents = _9901_recIdents;
                }
              } else if (_source574.is_Datatype) {
                DAST._IDatatypeType _9902___mcc_h152 = _source574.dtor_datatypeType;
                {
                  RAST._IType _9903_fromTpeGen;
                  RAST._IType _out4413;
                  _out4413 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _9903_fromTpeGen = _out4413;
                  RAST._IType _9904_toTpeGen;
                  RAST._IType _out4414;
                  _out4414 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _9904_toTpeGen = _out4414;
                  RAST._IExpr _9905_recursiveGen;
                  DCOMPUTF16._IOwnership _9906_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9907_recIdents;
                  RAST._IExpr _out4415;
                  DCOMPUTF16._IOwnership _out4416;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4417;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4415, out _out4416, out _out4417);
                  _9905_recursiveGen = _out4415;
                  _9906_recOwned = _out4416;
                  _9907_recIdents = _out4417;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9905_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9903_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9904_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4418;
                  DCOMPUTF16._IOwnership _out4419;
                  DCOMPUTF16.COMP.FromOwnership(r, _9906_recOwned, expectedOwnership, out _out4418, out _out4419);
                  r = _out4418;
                  resultingOwnership = _out4419;
                  readIdents = _9907_recIdents;
                }
              } else if (_source574.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9908___mcc_h154 = _source574.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _9909___mcc_h155 = _source574.dtor_attributes;
                {
                  RAST._IType _9910_fromTpeGen;
                  RAST._IType _out4420;
                  _out4420 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _9910_fromTpeGen = _out4420;
                  RAST._IType _9911_toTpeGen;
                  RAST._IType _out4421;
                  _out4421 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _9911_toTpeGen = _out4421;
                  RAST._IExpr _9912_recursiveGen;
                  DCOMPUTF16._IOwnership _9913_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9914_recIdents;
                  RAST._IExpr _out4422;
                  DCOMPUTF16._IOwnership _out4423;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4424;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4422, out _out4423, out _out4424);
                  _9912_recursiveGen = _out4422;
                  _9913_recOwned = _out4423;
                  _9914_recIdents = _out4424;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9912_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9910_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9911_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4425;
                  DCOMPUTF16._IOwnership _out4426;
                  DCOMPUTF16.COMP.FromOwnership(r, _9913_recOwned, expectedOwnership, out _out4425, out _out4426);
                  r = _out4425;
                  resultingOwnership = _out4426;
                  readIdents = _9914_recIdents;
                }
              } else {
                DAST._IType _9915___mcc_h158 = _source574.dtor_baseType;
                DAST._INewtypeRange _9916___mcc_h159 = _source574.dtor_range;
                bool _9917___mcc_h160 = _source574.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _9918___mcc_h161 = _source574.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _9919_attributes = _9918___mcc_h161;
                bool _9920_erase = _9917___mcc_h160;
                DAST._INewtypeRange _9921_range = _9916___mcc_h159;
                DAST._IType _9922_b = _9915___mcc_h158;
                {
                  Std.Wrappers._IOption<RAST._IType> _9923_nativeToType;
                  _9923_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9922_b, _9921_range);
                  if (object.Equals(_9567_fromTpe, _9922_b)) {
                    RAST._IExpr _9924_recursiveGen;
                    DCOMPUTF16._IOwnership _9925_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9926_recIdents;
                    RAST._IExpr _out4427;
                    DCOMPUTF16._IOwnership _out4428;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4429;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4427, out _out4428, out _out4429);
                    _9924_recursiveGen = _out4427;
                    _9925_recOwned = _out4428;
                    _9926_recIdents = _out4429;
                    readIdents = _9926_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source575 = _9923_nativeToType;
                    if (_source575.is_None) {
                      if (_9920_erase) {
                        r = _9924_recursiveGen;
                      } else {
                        RAST._IType _9927_rhsType;
                        RAST._IType _out4430;
                        _out4430 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                        _9927_rhsType = _out4430;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9927_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9924_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4431;
                      DCOMPUTF16._IOwnership _out4432;
                      DCOMPUTF16.COMP.FromOwnership(r, _9925_recOwned, expectedOwnership, out _out4431, out _out4432);
                      r = _out4431;
                      resultingOwnership = _out4432;
                    } else {
                      RAST._IType _9928___mcc_h1462 = _source575.dtor_value;
                      RAST._IType _9929_v = _9928___mcc_h1462;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9924_recursiveGen, RAST.Expr.create_ExprFromType(_9929_v)));
                      RAST._IExpr _out4433;
                      DCOMPUTF16._IOwnership _out4434;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4433, out _out4434);
                      r = _out4433;
                      resultingOwnership = _out4434;
                    }
                  } else {
                    if ((_9923_nativeToType).is_Some) {
                      DAST._IType _source576 = _9567_fromTpe;
                      if (_source576.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9930___mcc_h1463 = _source576.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _9931___mcc_h1464 = _source576.dtor_typeArgs;
                        DAST._IResolvedType _9932___mcc_h1465 = _source576.dtor_resolved;
                        DAST._IResolvedType _source577 = _9932___mcc_h1465;
                        if (_source577.is_AllocatedDatatype) {
                          DAST._IDatatypeType _9933___mcc_h1469 = _source577.dtor_datatypeType;
                        } else if (_source577.is_Datatype) {
                          DAST._IDatatypeType _9934___mcc_h1471 = _source577.dtor_datatypeType;
                        } else if (_source577.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9935___mcc_h1473 = _source577.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _9936___mcc_h1474 = _source577.dtor_attributes;
                        } else {
                          DAST._IType _9937___mcc_h1477 = _source577.dtor_baseType;
                          DAST._INewtypeRange _9938___mcc_h1478 = _source577.dtor_range;
                          bool _9939___mcc_h1479 = _source577.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _9940___mcc_h1480 = _source577.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _9941_attributes0 = _9940___mcc_h1480;
                          bool _9942_erase0 = _9939___mcc_h1479;
                          DAST._INewtypeRange _9943_range0 = _9938___mcc_h1478;
                          DAST._IType _9944_b0 = _9937___mcc_h1477;
                          {
                            Std.Wrappers._IOption<RAST._IType> _9945_nativeFromType;
                            _9945_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9944_b0, _9943_range0);
                            if ((_9945_nativeFromType).is_Some) {
                              RAST._IExpr _9946_recursiveGen;
                              DCOMPUTF16._IOwnership _9947_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9948_recIdents;
                              RAST._IExpr _out4435;
                              DCOMPUTF16._IOwnership _out4436;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4437;
                              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4435, out _out4436, out _out4437);
                              _9946_recursiveGen = _out4435;
                              _9947_recOwned = _out4436;
                              _9948_recIdents = _out4437;
                              RAST._IExpr _out4438;
                              DCOMPUTF16._IOwnership _out4439;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9946_recursiveGen, (_9923_nativeToType).dtor_value), _9947_recOwned, expectedOwnership, out _out4438, out _out4439);
                              r = _out4438;
                              resultingOwnership = _out4439;
                              readIdents = _9948_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source576.is_Nullable) {
                        DAST._IType _9949___mcc_h1485 = _source576.dtor_Nullable_a0;
                      } else if (_source576.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _9950___mcc_h1487 = _source576.dtor_Tuple_a0;
                      } else if (_source576.is_Array) {
                        DAST._IType _9951___mcc_h1489 = _source576.dtor_element;
                        BigInteger _9952___mcc_h1490 = _source576.dtor_dims;
                      } else if (_source576.is_Seq) {
                        DAST._IType _9953___mcc_h1493 = _source576.dtor_element;
                      } else if (_source576.is_Set) {
                        DAST._IType _9954___mcc_h1495 = _source576.dtor_element;
                      } else if (_source576.is_Multiset) {
                        DAST._IType _9955___mcc_h1497 = _source576.dtor_element;
                      } else if (_source576.is_Map) {
                        DAST._IType _9956___mcc_h1499 = _source576.dtor_key;
                        DAST._IType _9957___mcc_h1500 = _source576.dtor_value;
                      } else if (_source576.is_SetBuilder) {
                        DAST._IType _9958___mcc_h1503 = _source576.dtor_element;
                      } else if (_source576.is_MapBuilder) {
                        DAST._IType _9959___mcc_h1505 = _source576.dtor_key;
                        DAST._IType _9960___mcc_h1506 = _source576.dtor_value;
                      } else if (_source576.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _9961___mcc_h1509 = _source576.dtor_args;
                        DAST._IType _9962___mcc_h1510 = _source576.dtor_result;
                      } else if (_source576.is_Primitive) {
                        DAST._IPrimitive _9963___mcc_h1513 = _source576.dtor_Primitive_a0;
                      } else if (_source576.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _9964___mcc_h1515 = _source576.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _9965___mcc_h1517 = _source576.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9966_recursiveGen;
                        DCOMPUTF16._IOwnership _9967_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9968_recIdents;
                        RAST._IExpr _out4440;
                        DCOMPUTF16._IOwnership _out4441;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4442;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4440, out _out4441, out _out4442);
                        _9966_recursiveGen = _out4440;
                        _9967_recOwned = _out4441;
                        _9968_recIdents = _out4442;
                        RAST._IExpr _out4443;
                        DCOMPUTF16._IOwnership _out4444;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9966_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9923_nativeToType).dtor_value), _9967_recOwned, expectedOwnership, out _out4443, out _out4444);
                        r = _out4443;
                        resultingOwnership = _out4444;
                        readIdents = _9968_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4445;
                    DCOMPUTF16._IOwnership _out4446;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4447;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _9922_b), _9922_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4445, out _out4446, out _out4447);
                    r = _out4445;
                    resultingOwnership = _out4446;
                    readIdents = _out4447;
                  }
                }
              }
            } else if (_source573.is_Nullable) {
              DAST._IType _9969___mcc_h166 = _source573.dtor_Nullable_a0;
              {
                RAST._IExpr _9970_recursiveGen;
                DCOMPUTF16._IOwnership _9971_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9972_recIdents;
                RAST._IExpr _out4448;
                DCOMPUTF16._IOwnership _out4449;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4450;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4448, out _out4449, out _out4450);
                _9970_recursiveGen = _out4448;
                _9971_recOwned = _out4449;
                _9972_recIdents = _out4450;
                r = _9970_recursiveGen;
                if (object.Equals(_9971_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4451;
                DCOMPUTF16._IOwnership _out4452;
                DCOMPUTF16.COMP.FromOwnership(r, _9971_recOwned, expectedOwnership, out _out4451, out _out4452);
                r = _out4451;
                resultingOwnership = _out4452;
                readIdents = _9972_recIdents;
              }
            } else if (_source573.is_Tuple) {
              Dafny.ISequence<DAST._IType> _9973___mcc_h168 = _source573.dtor_Tuple_a0;
              {
                RAST._IType _9974_fromTpeGen;
                RAST._IType _out4453;
                _out4453 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9974_fromTpeGen = _out4453;
                RAST._IType _9975_toTpeGen;
                RAST._IType _out4454;
                _out4454 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9975_toTpeGen = _out4454;
                RAST._IExpr _9976_recursiveGen;
                DCOMPUTF16._IOwnership _9977_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9978_recIdents;
                RAST._IExpr _out4455;
                DCOMPUTF16._IOwnership _out4456;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4457;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4455, out _out4456, out _out4457);
                _9976_recursiveGen = _out4455;
                _9977_recOwned = _out4456;
                _9978_recIdents = _out4457;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9976_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9974_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9975_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4458;
                DCOMPUTF16._IOwnership _out4459;
                DCOMPUTF16.COMP.FromOwnership(r, _9977_recOwned, expectedOwnership, out _out4458, out _out4459);
                r = _out4458;
                resultingOwnership = _out4459;
                readIdents = _9978_recIdents;
              }
            } else if (_source573.is_Array) {
              DAST._IType _9979___mcc_h170 = _source573.dtor_element;
              BigInteger _9980___mcc_h171 = _source573.dtor_dims;
              {
                RAST._IType _9981_fromTpeGen;
                RAST._IType _out4460;
                _out4460 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9981_fromTpeGen = _out4460;
                RAST._IType _9982_toTpeGen;
                RAST._IType _out4461;
                _out4461 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9982_toTpeGen = _out4461;
                RAST._IExpr _9983_recursiveGen;
                DCOMPUTF16._IOwnership _9984_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9985_recIdents;
                RAST._IExpr _out4462;
                DCOMPUTF16._IOwnership _out4463;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4464;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4462, out _out4463, out _out4464);
                _9983_recursiveGen = _out4462;
                _9984_recOwned = _out4463;
                _9985_recIdents = _out4464;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9983_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9981_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9982_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4465;
                DCOMPUTF16._IOwnership _out4466;
                DCOMPUTF16.COMP.FromOwnership(r, _9984_recOwned, expectedOwnership, out _out4465, out _out4466);
                r = _out4465;
                resultingOwnership = _out4466;
                readIdents = _9985_recIdents;
              }
            } else if (_source573.is_Seq) {
              DAST._IType _9986___mcc_h174 = _source573.dtor_element;
              {
                RAST._IType _9987_fromTpeGen;
                RAST._IType _out4467;
                _out4467 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9987_fromTpeGen = _out4467;
                RAST._IType _9988_toTpeGen;
                RAST._IType _out4468;
                _out4468 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9988_toTpeGen = _out4468;
                RAST._IExpr _9989_recursiveGen;
                DCOMPUTF16._IOwnership _9990_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9991_recIdents;
                RAST._IExpr _out4469;
                DCOMPUTF16._IOwnership _out4470;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4471;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4469, out _out4470, out _out4471);
                _9989_recursiveGen = _out4469;
                _9990_recOwned = _out4470;
                _9991_recIdents = _out4471;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9989_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9987_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9988_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4472;
                DCOMPUTF16._IOwnership _out4473;
                DCOMPUTF16.COMP.FromOwnership(r, _9990_recOwned, expectedOwnership, out _out4472, out _out4473);
                r = _out4472;
                resultingOwnership = _out4473;
                readIdents = _9991_recIdents;
              }
            } else if (_source573.is_Set) {
              DAST._IType _9992___mcc_h176 = _source573.dtor_element;
              {
                RAST._IType _9993_fromTpeGen;
                RAST._IType _out4474;
                _out4474 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9993_fromTpeGen = _out4474;
                RAST._IType _9994_toTpeGen;
                RAST._IType _out4475;
                _out4475 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _9994_toTpeGen = _out4475;
                RAST._IExpr _9995_recursiveGen;
                DCOMPUTF16._IOwnership _9996_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9997_recIdents;
                RAST._IExpr _out4476;
                DCOMPUTF16._IOwnership _out4477;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4478;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4476, out _out4477, out _out4478);
                _9995_recursiveGen = _out4476;
                _9996_recOwned = _out4477;
                _9997_recIdents = _out4478;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9995_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9993_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9994_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4479;
                DCOMPUTF16._IOwnership _out4480;
                DCOMPUTF16.COMP.FromOwnership(r, _9996_recOwned, expectedOwnership, out _out4479, out _out4480);
                r = _out4479;
                resultingOwnership = _out4480;
                readIdents = _9997_recIdents;
              }
            } else if (_source573.is_Multiset) {
              DAST._IType _9998___mcc_h178 = _source573.dtor_element;
              {
                RAST._IType _9999_fromTpeGen;
                RAST._IType _out4481;
                _out4481 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _9999_fromTpeGen = _out4481;
                RAST._IType _10000_toTpeGen;
                RAST._IType _out4482;
                _out4482 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10000_toTpeGen = _out4482;
                RAST._IExpr _10001_recursiveGen;
                DCOMPUTF16._IOwnership _10002_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10003_recIdents;
                RAST._IExpr _out4483;
                DCOMPUTF16._IOwnership _out4484;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4485;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4483, out _out4484, out _out4485);
                _10001_recursiveGen = _out4483;
                _10002_recOwned = _out4484;
                _10003_recIdents = _out4485;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10001_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9999_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10000_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4486;
                DCOMPUTF16._IOwnership _out4487;
                DCOMPUTF16.COMP.FromOwnership(r, _10002_recOwned, expectedOwnership, out _out4486, out _out4487);
                r = _out4486;
                resultingOwnership = _out4487;
                readIdents = _10003_recIdents;
              }
            } else if (_source573.is_Map) {
              DAST._IType _10004___mcc_h180 = _source573.dtor_key;
              DAST._IType _10005___mcc_h181 = _source573.dtor_value;
              {
                RAST._IType _10006_fromTpeGen;
                RAST._IType _out4488;
                _out4488 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10006_fromTpeGen = _out4488;
                RAST._IType _10007_toTpeGen;
                RAST._IType _out4489;
                _out4489 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10007_toTpeGen = _out4489;
                RAST._IExpr _10008_recursiveGen;
                DCOMPUTF16._IOwnership _10009_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10010_recIdents;
                RAST._IExpr _out4490;
                DCOMPUTF16._IOwnership _out4491;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4492;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4490, out _out4491, out _out4492);
                _10008_recursiveGen = _out4490;
                _10009_recOwned = _out4491;
                _10010_recIdents = _out4492;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10008_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10006_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10007_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4493;
                DCOMPUTF16._IOwnership _out4494;
                DCOMPUTF16.COMP.FromOwnership(r, _10009_recOwned, expectedOwnership, out _out4493, out _out4494);
                r = _out4493;
                resultingOwnership = _out4494;
                readIdents = _10010_recIdents;
              }
            } else if (_source573.is_SetBuilder) {
              DAST._IType _10011___mcc_h184 = _source573.dtor_element;
              {
                RAST._IType _10012_fromTpeGen;
                RAST._IType _out4495;
                _out4495 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10012_fromTpeGen = _out4495;
                RAST._IType _10013_toTpeGen;
                RAST._IType _out4496;
                _out4496 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10013_toTpeGen = _out4496;
                RAST._IExpr _10014_recursiveGen;
                DCOMPUTF16._IOwnership _10015_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10016_recIdents;
                RAST._IExpr _out4497;
                DCOMPUTF16._IOwnership _out4498;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4499;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4497, out _out4498, out _out4499);
                _10014_recursiveGen = _out4497;
                _10015_recOwned = _out4498;
                _10016_recIdents = _out4499;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10014_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10012_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10013_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4500;
                DCOMPUTF16._IOwnership _out4501;
                DCOMPUTF16.COMP.FromOwnership(r, _10015_recOwned, expectedOwnership, out _out4500, out _out4501);
                r = _out4500;
                resultingOwnership = _out4501;
                readIdents = _10016_recIdents;
              }
            } else if (_source573.is_MapBuilder) {
              DAST._IType _10017___mcc_h186 = _source573.dtor_key;
              DAST._IType _10018___mcc_h187 = _source573.dtor_value;
              {
                RAST._IType _10019_fromTpeGen;
                RAST._IType _out4502;
                _out4502 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10019_fromTpeGen = _out4502;
                RAST._IType _10020_toTpeGen;
                RAST._IType _out4503;
                _out4503 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10020_toTpeGen = _out4503;
                RAST._IExpr _10021_recursiveGen;
                DCOMPUTF16._IOwnership _10022_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10023_recIdents;
                RAST._IExpr _out4504;
                DCOMPUTF16._IOwnership _out4505;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4506;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4504, out _out4505, out _out4506);
                _10021_recursiveGen = _out4504;
                _10022_recOwned = _out4505;
                _10023_recIdents = _out4506;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10021_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10019_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10020_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4507;
                DCOMPUTF16._IOwnership _out4508;
                DCOMPUTF16.COMP.FromOwnership(r, _10022_recOwned, expectedOwnership, out _out4507, out _out4508);
                r = _out4507;
                resultingOwnership = _out4508;
                readIdents = _10023_recIdents;
              }
            } else if (_source573.is_Arrow) {
              Dafny.ISequence<DAST._IType> _10024___mcc_h190 = _source573.dtor_args;
              DAST._IType _10025___mcc_h191 = _source573.dtor_result;
              {
                RAST._IType _10026_fromTpeGen;
                RAST._IType _out4509;
                _out4509 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10026_fromTpeGen = _out4509;
                RAST._IType _10027_toTpeGen;
                RAST._IType _out4510;
                _out4510 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10027_toTpeGen = _out4510;
                RAST._IExpr _10028_recursiveGen;
                DCOMPUTF16._IOwnership _10029_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10030_recIdents;
                RAST._IExpr _out4511;
                DCOMPUTF16._IOwnership _out4512;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4513;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4511, out _out4512, out _out4513);
                _10028_recursiveGen = _out4511;
                _10029_recOwned = _out4512;
                _10030_recIdents = _out4513;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10028_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10026_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10027_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4514;
                DCOMPUTF16._IOwnership _out4515;
                DCOMPUTF16.COMP.FromOwnership(r, _10029_recOwned, expectedOwnership, out _out4514, out _out4515);
                r = _out4514;
                resultingOwnership = _out4515;
                readIdents = _10030_recIdents;
              }
            } else if (_source573.is_Primitive) {
              DAST._IPrimitive _10031___mcc_h194 = _source573.dtor_Primitive_a0;
              {
                RAST._IType _10032_fromTpeGen;
                RAST._IType _out4516;
                _out4516 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10032_fromTpeGen = _out4516;
                RAST._IType _10033_toTpeGen;
                RAST._IType _out4517;
                _out4517 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10033_toTpeGen = _out4517;
                RAST._IExpr _10034_recursiveGen;
                DCOMPUTF16._IOwnership _10035_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10036_recIdents;
                RAST._IExpr _out4518;
                DCOMPUTF16._IOwnership _out4519;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4520;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4518, out _out4519, out _out4520);
                _10034_recursiveGen = _out4518;
                _10035_recOwned = _out4519;
                _10036_recIdents = _out4520;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10034_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10032_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10033_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4521;
                DCOMPUTF16._IOwnership _out4522;
                DCOMPUTF16.COMP.FromOwnership(r, _10035_recOwned, expectedOwnership, out _out4521, out _out4522);
                r = _out4521;
                resultingOwnership = _out4522;
                readIdents = _10036_recIdents;
              }
            } else if (_source573.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _10037___mcc_h196 = _source573.dtor_Passthrough_a0;
              {
                RAST._IType _10038_fromTpeGen;
                RAST._IType _out4523;
                _out4523 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10038_fromTpeGen = _out4523;
                RAST._IType _10039_toTpeGen;
                RAST._IType _out4524;
                _out4524 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10039_toTpeGen = _out4524;
                RAST._IExpr _10040_recursiveGen;
                DCOMPUTF16._IOwnership _10041_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10042_recIdents;
                RAST._IExpr _out4525;
                DCOMPUTF16._IOwnership _out4526;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4527;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4525, out _out4526, out _out4527);
                _10040_recursiveGen = _out4525;
                _10041_recOwned = _out4526;
                _10042_recIdents = _out4527;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10040_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10038_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10039_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4528;
                DCOMPUTF16._IOwnership _out4529;
                DCOMPUTF16.COMP.FromOwnership(r, _10041_recOwned, expectedOwnership, out _out4528, out _out4529);
                r = _out4528;
                resultingOwnership = _out4529;
                readIdents = _10042_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _10043___mcc_h198 = _source573.dtor_TypeArg_a0;
              {
                RAST._IType _10044_fromTpeGen;
                RAST._IType _out4530;
                _out4530 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10044_fromTpeGen = _out4530;
                RAST._IType _10045_toTpeGen;
                RAST._IType _out4531;
                _out4531 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10045_toTpeGen = _out4531;
                RAST._IExpr _10046_recursiveGen;
                DCOMPUTF16._IOwnership _10047_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10048_recIdents;
                RAST._IExpr _out4532;
                DCOMPUTF16._IOwnership _out4533;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4534;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4532, out _out4533, out _out4534);
                _10046_recursiveGen = _out4532;
                _10047_recOwned = _out4533;
                _10048_recIdents = _out4534;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10046_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10044_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10045_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4535;
                DCOMPUTF16._IOwnership _out4536;
                DCOMPUTF16.COMP.FromOwnership(r, _10047_recOwned, expectedOwnership, out _out4535, out _out4536);
                r = _out4535;
                resultingOwnership = _out4536;
                readIdents = _10048_recIdents;
              }
            }
          } else {
            DAST._IType _10049___mcc_h200 = _source562.dtor_baseType;
            DAST._INewtypeRange _10050___mcc_h201 = _source562.dtor_range;
            bool _10051___mcc_h202 = _source562.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _10052___mcc_h203 = _source562.dtor_attributes;
            DAST._IType _source578 = _9573___mcc_h1;
            if (_source578.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10053___mcc_h216 = _source578.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _10054___mcc_h217 = _source578.dtor_typeArgs;
              DAST._IResolvedType _10055___mcc_h218 = _source578.dtor_resolved;
              DAST._IResolvedType _source579 = _10055___mcc_h218;
              if (_source579.is_AllocatedDatatype) {
                DAST._IDatatypeType _10056___mcc_h225 = _source579.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _10057_attributes = _10052___mcc_h203;
                bool _10058_erase = _10051___mcc_h202;
                DAST._INewtypeRange _10059_range = _10050___mcc_h201;
                DAST._IType _10060_b = _10049___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _10061_nativeFromType;
                  _10061_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10060_b, _10059_range);
                  if (object.Equals(_10060_b, _9568_toTpe)) {
                    RAST._IExpr _10062_recursiveGen;
                    DCOMPUTF16._IOwnership _10063_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10064_recIdents;
                    RAST._IExpr _out4537;
                    DCOMPUTF16._IOwnership _out4538;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4539;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4537, out _out4538, out _out4539);
                    _10062_recursiveGen = _out4537;
                    _10063_recOwned = _out4538;
                    _10064_recIdents = _out4539;
                    readIdents = _10064_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source580 = _10061_nativeFromType;
                    if (_source580.is_None) {
                      if (_10058_erase) {
                        r = _10062_recursiveGen;
                      } else {
                        r = (_10062_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out4540;
                      DCOMPUTF16._IOwnership _out4541;
                      DCOMPUTF16.COMP.FromOwnership(r, _10063_recOwned, expectedOwnership, out _out4540, out _out4541);
                      r = _out4540;
                      resultingOwnership = _out4541;
                    } else {
                      RAST._IType _10065___mcc_h1519 = _source580.dtor_value;
                      RAST._IType _10066_v = _10065___mcc_h1519;
                      RAST._IType _10067_toTpeRust;
                      RAST._IType _out4542;
                      _out4542 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                      _10067_toTpeRust = _out4542;
                      r = (((_10062_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10067_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out4543;
                      DCOMPUTF16._IOwnership _out4544;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4543, out _out4544);
                      r = _out4543;
                      resultingOwnership = _out4544;
                    }
                  } else {
                    if ((_10061_nativeFromType).is_Some) {
                      if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10068_recursiveGen;
                        DCOMPUTF16._IOwnership _10069_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10070_recIdents;
                        RAST._IExpr _out4545;
                        DCOMPUTF16._IOwnership _out4546;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4547;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4545, out _out4546, out _out4547);
                        _10068_recursiveGen = _out4545;
                        _10069_recOwned = _out4546;
                        _10070_recIdents = _out4547;
                        RAST._IExpr _out4548;
                        DCOMPUTF16._IOwnership _out4549;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10068_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10069_recOwned, expectedOwnership, out _out4548, out _out4549);
                        r = _out4548;
                        resultingOwnership = _out4549;
                        readIdents = _10070_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4550;
                    DCOMPUTF16._IOwnership _out4551;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4552;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10060_b), _10060_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4550, out _out4551, out _out4552);
                    r = _out4550;
                    resultingOwnership = _out4551;
                    readIdents = _out4552;
                  }
                }
              } else if (_source579.is_Datatype) {
                DAST._IDatatypeType _10071___mcc_h228 = _source579.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _10072_attributes = _10052___mcc_h203;
                bool _10073_erase = _10051___mcc_h202;
                DAST._INewtypeRange _10074_range = _10050___mcc_h201;
                DAST._IType _10075_b = _10049___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _10076_nativeFromType;
                  _10076_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10075_b, _10074_range);
                  if (object.Equals(_10075_b, _9568_toTpe)) {
                    RAST._IExpr _10077_recursiveGen;
                    DCOMPUTF16._IOwnership _10078_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10079_recIdents;
                    RAST._IExpr _out4553;
                    DCOMPUTF16._IOwnership _out4554;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4555;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4553, out _out4554, out _out4555);
                    _10077_recursiveGen = _out4553;
                    _10078_recOwned = _out4554;
                    _10079_recIdents = _out4555;
                    readIdents = _10079_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source581 = _10076_nativeFromType;
                    if (_source581.is_None) {
                      if (_10073_erase) {
                        r = _10077_recursiveGen;
                      } else {
                        r = (_10077_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out4556;
                      DCOMPUTF16._IOwnership _out4557;
                      DCOMPUTF16.COMP.FromOwnership(r, _10078_recOwned, expectedOwnership, out _out4556, out _out4557);
                      r = _out4556;
                      resultingOwnership = _out4557;
                    } else {
                      RAST._IType _10080___mcc_h1520 = _source581.dtor_value;
                      RAST._IType _10081_v = _10080___mcc_h1520;
                      RAST._IType _10082_toTpeRust;
                      RAST._IType _out4558;
                      _out4558 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                      _10082_toTpeRust = _out4558;
                      r = (((_10077_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10082_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out4559;
                      DCOMPUTF16._IOwnership _out4560;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4559, out _out4560);
                      r = _out4559;
                      resultingOwnership = _out4560;
                    }
                  } else {
                    if ((_10076_nativeFromType).is_Some) {
                      if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10083_recursiveGen;
                        DCOMPUTF16._IOwnership _10084_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10085_recIdents;
                        RAST._IExpr _out4561;
                        DCOMPUTF16._IOwnership _out4562;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4563;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4561, out _out4562, out _out4563);
                        _10083_recursiveGen = _out4561;
                        _10084_recOwned = _out4562;
                        _10085_recIdents = _out4563;
                        RAST._IExpr _out4564;
                        DCOMPUTF16._IOwnership _out4565;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10083_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10084_recOwned, expectedOwnership, out _out4564, out _out4565);
                        r = _out4564;
                        resultingOwnership = _out4565;
                        readIdents = _10085_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4566;
                    DCOMPUTF16._IOwnership _out4567;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4568;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10075_b), _10075_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4566, out _out4567, out _out4568);
                    r = _out4566;
                    resultingOwnership = _out4567;
                    readIdents = _out4568;
                  }
                }
              } else if (_source579.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10086___mcc_h231 = _source579.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _10087___mcc_h232 = _source579.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _10088_attributes = _10052___mcc_h203;
                bool _10089_erase = _10051___mcc_h202;
                DAST._INewtypeRange _10090_range = _10050___mcc_h201;
                DAST._IType _10091_b = _10049___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _10092_nativeFromType;
                  _10092_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10091_b, _10090_range);
                  if (object.Equals(_10091_b, _9568_toTpe)) {
                    RAST._IExpr _10093_recursiveGen;
                    DCOMPUTF16._IOwnership _10094_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10095_recIdents;
                    RAST._IExpr _out4569;
                    DCOMPUTF16._IOwnership _out4570;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4571;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4569, out _out4570, out _out4571);
                    _10093_recursiveGen = _out4569;
                    _10094_recOwned = _out4570;
                    _10095_recIdents = _out4571;
                    readIdents = _10095_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source582 = _10092_nativeFromType;
                    if (_source582.is_None) {
                      if (_10089_erase) {
                        r = _10093_recursiveGen;
                      } else {
                        r = (_10093_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out4572;
                      DCOMPUTF16._IOwnership _out4573;
                      DCOMPUTF16.COMP.FromOwnership(r, _10094_recOwned, expectedOwnership, out _out4572, out _out4573);
                      r = _out4572;
                      resultingOwnership = _out4573;
                    } else {
                      RAST._IType _10096___mcc_h1521 = _source582.dtor_value;
                      RAST._IType _10097_v = _10096___mcc_h1521;
                      RAST._IType _10098_toTpeRust;
                      RAST._IType _out4574;
                      _out4574 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                      _10098_toTpeRust = _out4574;
                      r = (((_10093_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10098_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out4575;
                      DCOMPUTF16._IOwnership _out4576;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4575, out _out4576);
                      r = _out4575;
                      resultingOwnership = _out4576;
                    }
                  } else {
                    if ((_10092_nativeFromType).is_Some) {
                      if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10099_recursiveGen;
                        DCOMPUTF16._IOwnership _10100_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10101_recIdents;
                        RAST._IExpr _out4577;
                        DCOMPUTF16._IOwnership _out4578;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4579;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4577, out _out4578, out _out4579);
                        _10099_recursiveGen = _out4577;
                        _10100_recOwned = _out4578;
                        _10101_recIdents = _out4579;
                        RAST._IExpr _out4580;
                        DCOMPUTF16._IOwnership _out4581;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10099_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10100_recOwned, expectedOwnership, out _out4580, out _out4581);
                        r = _out4580;
                        resultingOwnership = _out4581;
                        readIdents = _10101_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4582;
                    DCOMPUTF16._IOwnership _out4583;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4584;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10091_b), _10091_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4582, out _out4583, out _out4584);
                    r = _out4582;
                    resultingOwnership = _out4583;
                    readIdents = _out4584;
                  }
                }
              } else {
                DAST._IType _10102___mcc_h237 = _source579.dtor_baseType;
                DAST._INewtypeRange _10103___mcc_h238 = _source579.dtor_range;
                bool _10104___mcc_h239 = _source579.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _10105___mcc_h240 = _source579.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _10106_attributes = _10105___mcc_h240;
                bool _10107_erase = _10104___mcc_h239;
                DAST._INewtypeRange _10108_range = _10103___mcc_h238;
                DAST._IType _10109_b = _10102___mcc_h237;
                {
                  Std.Wrappers._IOption<RAST._IType> _10110_nativeToType;
                  _10110_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10109_b, _10108_range);
                  if (object.Equals(_9567_fromTpe, _10109_b)) {
                    RAST._IExpr _10111_recursiveGen;
                    DCOMPUTF16._IOwnership _10112_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10113_recIdents;
                    RAST._IExpr _out4585;
                    DCOMPUTF16._IOwnership _out4586;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4587;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4585, out _out4586, out _out4587);
                    _10111_recursiveGen = _out4585;
                    _10112_recOwned = _out4586;
                    _10113_recIdents = _out4587;
                    readIdents = _10113_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source583 = _10110_nativeToType;
                    if (_source583.is_None) {
                      if (_10107_erase) {
                        r = _10111_recursiveGen;
                      } else {
                        RAST._IType _10114_rhsType;
                        RAST._IType _out4588;
                        _out4588 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                        _10114_rhsType = _out4588;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10114_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10111_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4589;
                      DCOMPUTF16._IOwnership _out4590;
                      DCOMPUTF16.COMP.FromOwnership(r, _10112_recOwned, expectedOwnership, out _out4589, out _out4590);
                      r = _out4589;
                      resultingOwnership = _out4590;
                    } else {
                      RAST._IType _10115___mcc_h1522 = _source583.dtor_value;
                      RAST._IType _10116_v = _10115___mcc_h1522;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10111_recursiveGen, RAST.Expr.create_ExprFromType(_10116_v)));
                      RAST._IExpr _out4591;
                      DCOMPUTF16._IOwnership _out4592;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4591, out _out4592);
                      r = _out4591;
                      resultingOwnership = _out4592;
                    }
                  } else {
                    if ((_10110_nativeToType).is_Some) {
                      DAST._IType _source584 = _9567_fromTpe;
                      if (_source584.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10117___mcc_h1523 = _source584.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _10118___mcc_h1524 = _source584.dtor_typeArgs;
                        DAST._IResolvedType _10119___mcc_h1525 = _source584.dtor_resolved;
                        DAST._IResolvedType _source585 = _10119___mcc_h1525;
                        if (_source585.is_AllocatedDatatype) {
                          DAST._IDatatypeType _10120___mcc_h1529 = _source585.dtor_datatypeType;
                        } else if (_source585.is_Datatype) {
                          DAST._IDatatypeType _10121___mcc_h1531 = _source585.dtor_datatypeType;
                        } else if (_source585.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10122___mcc_h1533 = _source585.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _10123___mcc_h1534 = _source585.dtor_attributes;
                        } else {
                          DAST._IType _10124___mcc_h1537 = _source585.dtor_baseType;
                          DAST._INewtypeRange _10125___mcc_h1538 = _source585.dtor_range;
                          bool _10126___mcc_h1539 = _source585.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _10127___mcc_h1540 = _source585.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _10128_attributes0 = _10127___mcc_h1540;
                          bool _10129_erase0 = _10126___mcc_h1539;
                          DAST._INewtypeRange _10130_range0 = _10125___mcc_h1538;
                          DAST._IType _10131_b0 = _10124___mcc_h1537;
                          {
                            Std.Wrappers._IOption<RAST._IType> _10132_nativeFromType;
                            _10132_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10131_b0, _10130_range0);
                            if ((_10132_nativeFromType).is_Some) {
                              RAST._IExpr _10133_recursiveGen;
                              DCOMPUTF16._IOwnership _10134_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10135_recIdents;
                              RAST._IExpr _out4593;
                              DCOMPUTF16._IOwnership _out4594;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4595;
                              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4593, out _out4594, out _out4595);
                              _10133_recursiveGen = _out4593;
                              _10134_recOwned = _out4594;
                              _10135_recIdents = _out4595;
                              RAST._IExpr _out4596;
                              DCOMPUTF16._IOwnership _out4597;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10133_recursiveGen, (_10110_nativeToType).dtor_value), _10134_recOwned, expectedOwnership, out _out4596, out _out4597);
                              r = _out4596;
                              resultingOwnership = _out4597;
                              readIdents = _10135_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source584.is_Nullable) {
                        DAST._IType _10136___mcc_h1545 = _source584.dtor_Nullable_a0;
                      } else if (_source584.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _10137___mcc_h1547 = _source584.dtor_Tuple_a0;
                      } else if (_source584.is_Array) {
                        DAST._IType _10138___mcc_h1549 = _source584.dtor_element;
                        BigInteger _10139___mcc_h1550 = _source584.dtor_dims;
                      } else if (_source584.is_Seq) {
                        DAST._IType _10140___mcc_h1553 = _source584.dtor_element;
                      } else if (_source584.is_Set) {
                        DAST._IType _10141___mcc_h1555 = _source584.dtor_element;
                      } else if (_source584.is_Multiset) {
                        DAST._IType _10142___mcc_h1557 = _source584.dtor_element;
                      } else if (_source584.is_Map) {
                        DAST._IType _10143___mcc_h1559 = _source584.dtor_key;
                        DAST._IType _10144___mcc_h1560 = _source584.dtor_value;
                      } else if (_source584.is_SetBuilder) {
                        DAST._IType _10145___mcc_h1563 = _source584.dtor_element;
                      } else if (_source584.is_MapBuilder) {
                        DAST._IType _10146___mcc_h1565 = _source584.dtor_key;
                        DAST._IType _10147___mcc_h1566 = _source584.dtor_value;
                      } else if (_source584.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _10148___mcc_h1569 = _source584.dtor_args;
                        DAST._IType _10149___mcc_h1570 = _source584.dtor_result;
                      } else if (_source584.is_Primitive) {
                        DAST._IPrimitive _10150___mcc_h1573 = _source584.dtor_Primitive_a0;
                      } else if (_source584.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _10151___mcc_h1575 = _source584.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _10152___mcc_h1577 = _source584.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10153_recursiveGen;
                        DCOMPUTF16._IOwnership _10154_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10155_recIdents;
                        RAST._IExpr _out4598;
                        DCOMPUTF16._IOwnership _out4599;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4600;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4598, out _out4599, out _out4600);
                        _10153_recursiveGen = _out4598;
                        _10154_recOwned = _out4599;
                        _10155_recIdents = _out4600;
                        RAST._IExpr _out4601;
                        DCOMPUTF16._IOwnership _out4602;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10153_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10110_nativeToType).dtor_value), _10154_recOwned, expectedOwnership, out _out4601, out _out4602);
                        r = _out4601;
                        resultingOwnership = _out4602;
                        readIdents = _10155_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4603;
                    DCOMPUTF16._IOwnership _out4604;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4605;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10109_b), _10109_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4603, out _out4604, out _out4605);
                    r = _out4603;
                    resultingOwnership = _out4604;
                    readIdents = _out4605;
                  }
                }
              }
            } else if (_source578.is_Nullable) {
              DAST._IType _10156___mcc_h249 = _source578.dtor_Nullable_a0;
              {
                RAST._IExpr _10157_recursiveGen;
                DCOMPUTF16._IOwnership _10158_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10159_recIdents;
                RAST._IExpr _out4606;
                DCOMPUTF16._IOwnership _out4607;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4608;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4606, out _out4607, out _out4608);
                _10157_recursiveGen = _out4606;
                _10158_recOwned = _out4607;
                _10159_recIdents = _out4608;
                r = _10157_recursiveGen;
                if (object.Equals(_10158_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4609;
                DCOMPUTF16._IOwnership _out4610;
                DCOMPUTF16.COMP.FromOwnership(r, _10158_recOwned, expectedOwnership, out _out4609, out _out4610);
                r = _out4609;
                resultingOwnership = _out4610;
                readIdents = _10159_recIdents;
              }
            } else if (_source578.is_Tuple) {
              Dafny.ISequence<DAST._IType> _10160___mcc_h252 = _source578.dtor_Tuple_a0;
              Dafny.ISequence<DAST._IAttribute> _10161_attributes = _10052___mcc_h203;
              bool _10162_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10163_range = _10050___mcc_h201;
              DAST._IType _10164_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10165_nativeFromType;
                _10165_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10164_b, _10163_range);
                if (object.Equals(_10164_b, _9568_toTpe)) {
                  RAST._IExpr _10166_recursiveGen;
                  DCOMPUTF16._IOwnership _10167_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10168_recIdents;
                  RAST._IExpr _out4611;
                  DCOMPUTF16._IOwnership _out4612;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4613;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4611, out _out4612, out _out4613);
                  _10166_recursiveGen = _out4611;
                  _10167_recOwned = _out4612;
                  _10168_recIdents = _out4613;
                  readIdents = _10168_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source586 = _10165_nativeFromType;
                  if (_source586.is_None) {
                    if (_10162_erase) {
                      r = _10166_recursiveGen;
                    } else {
                      r = (_10166_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4614;
                    DCOMPUTF16._IOwnership _out4615;
                    DCOMPUTF16.COMP.FromOwnership(r, _10167_recOwned, expectedOwnership, out _out4614, out _out4615);
                    r = _out4614;
                    resultingOwnership = _out4615;
                  } else {
                    RAST._IType _10169___mcc_h1579 = _source586.dtor_value;
                    RAST._IType _10170_v = _10169___mcc_h1579;
                    RAST._IType _10171_toTpeRust;
                    RAST._IType _out4616;
                    _out4616 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10171_toTpeRust = _out4616;
                    r = (((_10166_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10171_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4617;
                    DCOMPUTF16._IOwnership _out4618;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4617, out _out4618);
                    r = _out4617;
                    resultingOwnership = _out4618;
                  }
                } else {
                  if ((_10165_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10172_recursiveGen;
                      DCOMPUTF16._IOwnership _10173_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10174_recIdents;
                      RAST._IExpr _out4619;
                      DCOMPUTF16._IOwnership _out4620;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4621;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4619, out _out4620, out _out4621);
                      _10172_recursiveGen = _out4619;
                      _10173_recOwned = _out4620;
                      _10174_recIdents = _out4621;
                      RAST._IExpr _out4622;
                      DCOMPUTF16._IOwnership _out4623;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10172_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10173_recOwned, expectedOwnership, out _out4622, out _out4623);
                      r = _out4622;
                      resultingOwnership = _out4623;
                      readIdents = _10174_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4624;
                  DCOMPUTF16._IOwnership _out4625;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4626;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10164_b), _10164_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4624, out _out4625, out _out4626);
                  r = _out4624;
                  resultingOwnership = _out4625;
                  readIdents = _out4626;
                }
              }
            } else if (_source578.is_Array) {
              DAST._IType _10175___mcc_h255 = _source578.dtor_element;
              BigInteger _10176___mcc_h256 = _source578.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _10177_attributes = _10052___mcc_h203;
              bool _10178_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10179_range = _10050___mcc_h201;
              DAST._IType _10180_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10181_nativeFromType;
                _10181_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10180_b, _10179_range);
                if (object.Equals(_10180_b, _9568_toTpe)) {
                  RAST._IExpr _10182_recursiveGen;
                  DCOMPUTF16._IOwnership _10183_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10184_recIdents;
                  RAST._IExpr _out4627;
                  DCOMPUTF16._IOwnership _out4628;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4629;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4627, out _out4628, out _out4629);
                  _10182_recursiveGen = _out4627;
                  _10183_recOwned = _out4628;
                  _10184_recIdents = _out4629;
                  readIdents = _10184_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source587 = _10181_nativeFromType;
                  if (_source587.is_None) {
                    if (_10178_erase) {
                      r = _10182_recursiveGen;
                    } else {
                      r = (_10182_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4630;
                    DCOMPUTF16._IOwnership _out4631;
                    DCOMPUTF16.COMP.FromOwnership(r, _10183_recOwned, expectedOwnership, out _out4630, out _out4631);
                    r = _out4630;
                    resultingOwnership = _out4631;
                  } else {
                    RAST._IType _10185___mcc_h1580 = _source587.dtor_value;
                    RAST._IType _10186_v = _10185___mcc_h1580;
                    RAST._IType _10187_toTpeRust;
                    RAST._IType _out4632;
                    _out4632 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10187_toTpeRust = _out4632;
                    r = (((_10182_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10187_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4633;
                    DCOMPUTF16._IOwnership _out4634;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4633, out _out4634);
                    r = _out4633;
                    resultingOwnership = _out4634;
                  }
                } else {
                  if ((_10181_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10188_recursiveGen;
                      DCOMPUTF16._IOwnership _10189_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10190_recIdents;
                      RAST._IExpr _out4635;
                      DCOMPUTF16._IOwnership _out4636;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4637;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4635, out _out4636, out _out4637);
                      _10188_recursiveGen = _out4635;
                      _10189_recOwned = _out4636;
                      _10190_recIdents = _out4637;
                      RAST._IExpr _out4638;
                      DCOMPUTF16._IOwnership _out4639;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10188_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10189_recOwned, expectedOwnership, out _out4638, out _out4639);
                      r = _out4638;
                      resultingOwnership = _out4639;
                      readIdents = _10190_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4640;
                  DCOMPUTF16._IOwnership _out4641;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4642;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10180_b), _10180_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4640, out _out4641, out _out4642);
                  r = _out4640;
                  resultingOwnership = _out4641;
                  readIdents = _out4642;
                }
              }
            } else if (_source578.is_Seq) {
              DAST._IType _10191___mcc_h261 = _source578.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _10192_attributes = _10052___mcc_h203;
              bool _10193_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10194_range = _10050___mcc_h201;
              DAST._IType _10195_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10196_nativeFromType;
                _10196_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10195_b, _10194_range);
                if (object.Equals(_10195_b, _9568_toTpe)) {
                  RAST._IExpr _10197_recursiveGen;
                  DCOMPUTF16._IOwnership _10198_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10199_recIdents;
                  RAST._IExpr _out4643;
                  DCOMPUTF16._IOwnership _out4644;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4645;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4643, out _out4644, out _out4645);
                  _10197_recursiveGen = _out4643;
                  _10198_recOwned = _out4644;
                  _10199_recIdents = _out4645;
                  readIdents = _10199_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source588 = _10196_nativeFromType;
                  if (_source588.is_None) {
                    if (_10193_erase) {
                      r = _10197_recursiveGen;
                    } else {
                      r = (_10197_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4646;
                    DCOMPUTF16._IOwnership _out4647;
                    DCOMPUTF16.COMP.FromOwnership(r, _10198_recOwned, expectedOwnership, out _out4646, out _out4647);
                    r = _out4646;
                    resultingOwnership = _out4647;
                  } else {
                    RAST._IType _10200___mcc_h1581 = _source588.dtor_value;
                    RAST._IType _10201_v = _10200___mcc_h1581;
                    RAST._IType _10202_toTpeRust;
                    RAST._IType _out4648;
                    _out4648 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10202_toTpeRust = _out4648;
                    r = (((_10197_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10202_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4649;
                    DCOMPUTF16._IOwnership _out4650;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4649, out _out4650);
                    r = _out4649;
                    resultingOwnership = _out4650;
                  }
                } else {
                  if ((_10196_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10203_recursiveGen;
                      DCOMPUTF16._IOwnership _10204_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10205_recIdents;
                      RAST._IExpr _out4651;
                      DCOMPUTF16._IOwnership _out4652;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4653;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4651, out _out4652, out _out4653);
                      _10203_recursiveGen = _out4651;
                      _10204_recOwned = _out4652;
                      _10205_recIdents = _out4653;
                      RAST._IExpr _out4654;
                      DCOMPUTF16._IOwnership _out4655;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10203_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10204_recOwned, expectedOwnership, out _out4654, out _out4655);
                      r = _out4654;
                      resultingOwnership = _out4655;
                      readIdents = _10205_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4656;
                  DCOMPUTF16._IOwnership _out4657;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4658;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10195_b), _10195_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4656, out _out4657, out _out4658);
                  r = _out4656;
                  resultingOwnership = _out4657;
                  readIdents = _out4658;
                }
              }
            } else if (_source578.is_Set) {
              DAST._IType _10206___mcc_h264 = _source578.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _10207_attributes = _10052___mcc_h203;
              bool _10208_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10209_range = _10050___mcc_h201;
              DAST._IType _10210_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10211_nativeFromType;
                _10211_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10210_b, _10209_range);
                if (object.Equals(_10210_b, _9568_toTpe)) {
                  RAST._IExpr _10212_recursiveGen;
                  DCOMPUTF16._IOwnership _10213_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10214_recIdents;
                  RAST._IExpr _out4659;
                  DCOMPUTF16._IOwnership _out4660;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4661;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4659, out _out4660, out _out4661);
                  _10212_recursiveGen = _out4659;
                  _10213_recOwned = _out4660;
                  _10214_recIdents = _out4661;
                  readIdents = _10214_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source589 = _10211_nativeFromType;
                  if (_source589.is_None) {
                    if (_10208_erase) {
                      r = _10212_recursiveGen;
                    } else {
                      r = (_10212_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4662;
                    DCOMPUTF16._IOwnership _out4663;
                    DCOMPUTF16.COMP.FromOwnership(r, _10213_recOwned, expectedOwnership, out _out4662, out _out4663);
                    r = _out4662;
                    resultingOwnership = _out4663;
                  } else {
                    RAST._IType _10215___mcc_h1582 = _source589.dtor_value;
                    RAST._IType _10216_v = _10215___mcc_h1582;
                    RAST._IType _10217_toTpeRust;
                    RAST._IType _out4664;
                    _out4664 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10217_toTpeRust = _out4664;
                    r = (((_10212_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10217_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4665;
                    DCOMPUTF16._IOwnership _out4666;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4665, out _out4666);
                    r = _out4665;
                    resultingOwnership = _out4666;
                  }
                } else {
                  if ((_10211_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10218_recursiveGen;
                      DCOMPUTF16._IOwnership _10219_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10220_recIdents;
                      RAST._IExpr _out4667;
                      DCOMPUTF16._IOwnership _out4668;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4669;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4667, out _out4668, out _out4669);
                      _10218_recursiveGen = _out4667;
                      _10219_recOwned = _out4668;
                      _10220_recIdents = _out4669;
                      RAST._IExpr _out4670;
                      DCOMPUTF16._IOwnership _out4671;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10218_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10219_recOwned, expectedOwnership, out _out4670, out _out4671);
                      r = _out4670;
                      resultingOwnership = _out4671;
                      readIdents = _10220_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4672;
                  DCOMPUTF16._IOwnership _out4673;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4674;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10210_b), _10210_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4672, out _out4673, out _out4674);
                  r = _out4672;
                  resultingOwnership = _out4673;
                  readIdents = _out4674;
                }
              }
            } else if (_source578.is_Multiset) {
              DAST._IType _10221___mcc_h267 = _source578.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _10222_attributes = _10052___mcc_h203;
              bool _10223_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10224_range = _10050___mcc_h201;
              DAST._IType _10225_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10226_nativeFromType;
                _10226_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10225_b, _10224_range);
                if (object.Equals(_10225_b, _9568_toTpe)) {
                  RAST._IExpr _10227_recursiveGen;
                  DCOMPUTF16._IOwnership _10228_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10229_recIdents;
                  RAST._IExpr _out4675;
                  DCOMPUTF16._IOwnership _out4676;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4677;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4675, out _out4676, out _out4677);
                  _10227_recursiveGen = _out4675;
                  _10228_recOwned = _out4676;
                  _10229_recIdents = _out4677;
                  readIdents = _10229_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source590 = _10226_nativeFromType;
                  if (_source590.is_None) {
                    if (_10223_erase) {
                      r = _10227_recursiveGen;
                    } else {
                      r = (_10227_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4678;
                    DCOMPUTF16._IOwnership _out4679;
                    DCOMPUTF16.COMP.FromOwnership(r, _10228_recOwned, expectedOwnership, out _out4678, out _out4679);
                    r = _out4678;
                    resultingOwnership = _out4679;
                  } else {
                    RAST._IType _10230___mcc_h1583 = _source590.dtor_value;
                    RAST._IType _10231_v = _10230___mcc_h1583;
                    RAST._IType _10232_toTpeRust;
                    RAST._IType _out4680;
                    _out4680 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10232_toTpeRust = _out4680;
                    r = (((_10227_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10232_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4681;
                    DCOMPUTF16._IOwnership _out4682;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4681, out _out4682);
                    r = _out4681;
                    resultingOwnership = _out4682;
                  }
                } else {
                  if ((_10226_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10233_recursiveGen;
                      DCOMPUTF16._IOwnership _10234_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10235_recIdents;
                      RAST._IExpr _out4683;
                      DCOMPUTF16._IOwnership _out4684;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4685;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4683, out _out4684, out _out4685);
                      _10233_recursiveGen = _out4683;
                      _10234_recOwned = _out4684;
                      _10235_recIdents = _out4685;
                      RAST._IExpr _out4686;
                      DCOMPUTF16._IOwnership _out4687;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10233_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10234_recOwned, expectedOwnership, out _out4686, out _out4687);
                      r = _out4686;
                      resultingOwnership = _out4687;
                      readIdents = _10235_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4688;
                  DCOMPUTF16._IOwnership _out4689;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4690;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10225_b), _10225_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4688, out _out4689, out _out4690);
                  r = _out4688;
                  resultingOwnership = _out4689;
                  readIdents = _out4690;
                }
              }
            } else if (_source578.is_Map) {
              DAST._IType _10236___mcc_h270 = _source578.dtor_key;
              DAST._IType _10237___mcc_h271 = _source578.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _10238_attributes = _10052___mcc_h203;
              bool _10239_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10240_range = _10050___mcc_h201;
              DAST._IType _10241_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10242_nativeFromType;
                _10242_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10241_b, _10240_range);
                if (object.Equals(_10241_b, _9568_toTpe)) {
                  RAST._IExpr _10243_recursiveGen;
                  DCOMPUTF16._IOwnership _10244_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10245_recIdents;
                  RAST._IExpr _out4691;
                  DCOMPUTF16._IOwnership _out4692;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4693;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4691, out _out4692, out _out4693);
                  _10243_recursiveGen = _out4691;
                  _10244_recOwned = _out4692;
                  _10245_recIdents = _out4693;
                  readIdents = _10245_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source591 = _10242_nativeFromType;
                  if (_source591.is_None) {
                    if (_10239_erase) {
                      r = _10243_recursiveGen;
                    } else {
                      r = (_10243_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4694;
                    DCOMPUTF16._IOwnership _out4695;
                    DCOMPUTF16.COMP.FromOwnership(r, _10244_recOwned, expectedOwnership, out _out4694, out _out4695);
                    r = _out4694;
                    resultingOwnership = _out4695;
                  } else {
                    RAST._IType _10246___mcc_h1584 = _source591.dtor_value;
                    RAST._IType _10247_v = _10246___mcc_h1584;
                    RAST._IType _10248_toTpeRust;
                    RAST._IType _out4696;
                    _out4696 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10248_toTpeRust = _out4696;
                    r = (((_10243_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10248_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4697;
                    DCOMPUTF16._IOwnership _out4698;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4697, out _out4698);
                    r = _out4697;
                    resultingOwnership = _out4698;
                  }
                } else {
                  if ((_10242_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10249_recursiveGen;
                      DCOMPUTF16._IOwnership _10250_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10251_recIdents;
                      RAST._IExpr _out4699;
                      DCOMPUTF16._IOwnership _out4700;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4701;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4699, out _out4700, out _out4701);
                      _10249_recursiveGen = _out4699;
                      _10250_recOwned = _out4700;
                      _10251_recIdents = _out4701;
                      RAST._IExpr _out4702;
                      DCOMPUTF16._IOwnership _out4703;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10249_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10250_recOwned, expectedOwnership, out _out4702, out _out4703);
                      r = _out4702;
                      resultingOwnership = _out4703;
                      readIdents = _10251_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4704;
                  DCOMPUTF16._IOwnership _out4705;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4706;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10241_b), _10241_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4704, out _out4705, out _out4706);
                  r = _out4704;
                  resultingOwnership = _out4705;
                  readIdents = _out4706;
                }
              }
            } else if (_source578.is_SetBuilder) {
              DAST._IType _10252___mcc_h276 = _source578.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _10253_attributes = _10052___mcc_h203;
              bool _10254_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10255_range = _10050___mcc_h201;
              DAST._IType _10256_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10257_nativeFromType;
                _10257_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10256_b, _10255_range);
                if (object.Equals(_10256_b, _9568_toTpe)) {
                  RAST._IExpr _10258_recursiveGen;
                  DCOMPUTF16._IOwnership _10259_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10260_recIdents;
                  RAST._IExpr _out4707;
                  DCOMPUTF16._IOwnership _out4708;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4709;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4707, out _out4708, out _out4709);
                  _10258_recursiveGen = _out4707;
                  _10259_recOwned = _out4708;
                  _10260_recIdents = _out4709;
                  readIdents = _10260_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source592 = _10257_nativeFromType;
                  if (_source592.is_None) {
                    if (_10254_erase) {
                      r = _10258_recursiveGen;
                    } else {
                      r = (_10258_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4710;
                    DCOMPUTF16._IOwnership _out4711;
                    DCOMPUTF16.COMP.FromOwnership(r, _10259_recOwned, expectedOwnership, out _out4710, out _out4711);
                    r = _out4710;
                    resultingOwnership = _out4711;
                  } else {
                    RAST._IType _10261___mcc_h1585 = _source592.dtor_value;
                    RAST._IType _10262_v = _10261___mcc_h1585;
                    RAST._IType _10263_toTpeRust;
                    RAST._IType _out4712;
                    _out4712 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10263_toTpeRust = _out4712;
                    r = (((_10258_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10263_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4713;
                    DCOMPUTF16._IOwnership _out4714;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4713, out _out4714);
                    r = _out4713;
                    resultingOwnership = _out4714;
                  }
                } else {
                  if ((_10257_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10264_recursiveGen;
                      DCOMPUTF16._IOwnership _10265_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10266_recIdents;
                      RAST._IExpr _out4715;
                      DCOMPUTF16._IOwnership _out4716;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4717;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4715, out _out4716, out _out4717);
                      _10264_recursiveGen = _out4715;
                      _10265_recOwned = _out4716;
                      _10266_recIdents = _out4717;
                      RAST._IExpr _out4718;
                      DCOMPUTF16._IOwnership _out4719;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10264_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10265_recOwned, expectedOwnership, out _out4718, out _out4719);
                      r = _out4718;
                      resultingOwnership = _out4719;
                      readIdents = _10266_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4720;
                  DCOMPUTF16._IOwnership _out4721;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4722;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10256_b), _10256_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4720, out _out4721, out _out4722);
                  r = _out4720;
                  resultingOwnership = _out4721;
                  readIdents = _out4722;
                }
              }
            } else if (_source578.is_MapBuilder) {
              DAST._IType _10267___mcc_h279 = _source578.dtor_key;
              DAST._IType _10268___mcc_h280 = _source578.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _10269_attributes = _10052___mcc_h203;
              bool _10270_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10271_range = _10050___mcc_h201;
              DAST._IType _10272_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10273_nativeFromType;
                _10273_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10272_b, _10271_range);
                if (object.Equals(_10272_b, _9568_toTpe)) {
                  RAST._IExpr _10274_recursiveGen;
                  DCOMPUTF16._IOwnership _10275_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10276_recIdents;
                  RAST._IExpr _out4723;
                  DCOMPUTF16._IOwnership _out4724;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4725;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4723, out _out4724, out _out4725);
                  _10274_recursiveGen = _out4723;
                  _10275_recOwned = _out4724;
                  _10276_recIdents = _out4725;
                  readIdents = _10276_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source593 = _10273_nativeFromType;
                  if (_source593.is_None) {
                    if (_10270_erase) {
                      r = _10274_recursiveGen;
                    } else {
                      r = (_10274_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4726;
                    DCOMPUTF16._IOwnership _out4727;
                    DCOMPUTF16.COMP.FromOwnership(r, _10275_recOwned, expectedOwnership, out _out4726, out _out4727);
                    r = _out4726;
                    resultingOwnership = _out4727;
                  } else {
                    RAST._IType _10277___mcc_h1586 = _source593.dtor_value;
                    RAST._IType _10278_v = _10277___mcc_h1586;
                    RAST._IType _10279_toTpeRust;
                    RAST._IType _out4728;
                    _out4728 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10279_toTpeRust = _out4728;
                    r = (((_10274_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10279_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4729;
                    DCOMPUTF16._IOwnership _out4730;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4729, out _out4730);
                    r = _out4729;
                    resultingOwnership = _out4730;
                  }
                } else {
                  if ((_10273_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10280_recursiveGen;
                      DCOMPUTF16._IOwnership _10281_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10282_recIdents;
                      RAST._IExpr _out4731;
                      DCOMPUTF16._IOwnership _out4732;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4733;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4731, out _out4732, out _out4733);
                      _10280_recursiveGen = _out4731;
                      _10281_recOwned = _out4732;
                      _10282_recIdents = _out4733;
                      RAST._IExpr _out4734;
                      DCOMPUTF16._IOwnership _out4735;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10280_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10281_recOwned, expectedOwnership, out _out4734, out _out4735);
                      r = _out4734;
                      resultingOwnership = _out4735;
                      readIdents = _10282_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4736;
                  DCOMPUTF16._IOwnership _out4737;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4738;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10272_b), _10272_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4736, out _out4737, out _out4738);
                  r = _out4736;
                  resultingOwnership = _out4737;
                  readIdents = _out4738;
                }
              }
            } else if (_source578.is_Arrow) {
              Dafny.ISequence<DAST._IType> _10283___mcc_h285 = _source578.dtor_args;
              DAST._IType _10284___mcc_h286 = _source578.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _10285_attributes = _10052___mcc_h203;
              bool _10286_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10287_range = _10050___mcc_h201;
              DAST._IType _10288_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10289_nativeFromType;
                _10289_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10288_b, _10287_range);
                if (object.Equals(_10288_b, _9568_toTpe)) {
                  RAST._IExpr _10290_recursiveGen;
                  DCOMPUTF16._IOwnership _10291_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10292_recIdents;
                  RAST._IExpr _out4739;
                  DCOMPUTF16._IOwnership _out4740;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4741;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4739, out _out4740, out _out4741);
                  _10290_recursiveGen = _out4739;
                  _10291_recOwned = _out4740;
                  _10292_recIdents = _out4741;
                  readIdents = _10292_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source594 = _10289_nativeFromType;
                  if (_source594.is_None) {
                    if (_10286_erase) {
                      r = _10290_recursiveGen;
                    } else {
                      r = (_10290_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4742;
                    DCOMPUTF16._IOwnership _out4743;
                    DCOMPUTF16.COMP.FromOwnership(r, _10291_recOwned, expectedOwnership, out _out4742, out _out4743);
                    r = _out4742;
                    resultingOwnership = _out4743;
                  } else {
                    RAST._IType _10293___mcc_h1587 = _source594.dtor_value;
                    RAST._IType _10294_v = _10293___mcc_h1587;
                    RAST._IType _10295_toTpeRust;
                    RAST._IType _out4744;
                    _out4744 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10295_toTpeRust = _out4744;
                    r = (((_10290_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10295_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4745;
                    DCOMPUTF16._IOwnership _out4746;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4745, out _out4746);
                    r = _out4745;
                    resultingOwnership = _out4746;
                  }
                } else {
                  if ((_10289_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10296_recursiveGen;
                      DCOMPUTF16._IOwnership _10297_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10298_recIdents;
                      RAST._IExpr _out4747;
                      DCOMPUTF16._IOwnership _out4748;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4749;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4747, out _out4748, out _out4749);
                      _10296_recursiveGen = _out4747;
                      _10297_recOwned = _out4748;
                      _10298_recIdents = _out4749;
                      RAST._IExpr _out4750;
                      DCOMPUTF16._IOwnership _out4751;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10296_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10297_recOwned, expectedOwnership, out _out4750, out _out4751);
                      r = _out4750;
                      resultingOwnership = _out4751;
                      readIdents = _10298_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4752;
                  DCOMPUTF16._IOwnership _out4753;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4754;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10288_b), _10288_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4752, out _out4753, out _out4754);
                  r = _out4752;
                  resultingOwnership = _out4753;
                  readIdents = _out4754;
                }
              }
            } else if (_source578.is_Primitive) {
              DAST._IPrimitive _10299___mcc_h291 = _source578.dtor_Primitive_a0;
              Dafny.ISequence<DAST._IAttribute> _10300_attributes = _10052___mcc_h203;
              bool _10301_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10302_range = _10050___mcc_h201;
              DAST._IType _10303_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10304_nativeFromType;
                _10304_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10303_b, _10302_range);
                if (object.Equals(_10303_b, _9568_toTpe)) {
                  RAST._IExpr _10305_recursiveGen;
                  DCOMPUTF16._IOwnership _10306_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10307_recIdents;
                  RAST._IExpr _out4755;
                  DCOMPUTF16._IOwnership _out4756;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4757;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4755, out _out4756, out _out4757);
                  _10305_recursiveGen = _out4755;
                  _10306_recOwned = _out4756;
                  _10307_recIdents = _out4757;
                  readIdents = _10307_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source595 = _10304_nativeFromType;
                  if (_source595.is_None) {
                    if (_10301_erase) {
                      r = _10305_recursiveGen;
                    } else {
                      r = (_10305_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4758;
                    DCOMPUTF16._IOwnership _out4759;
                    DCOMPUTF16.COMP.FromOwnership(r, _10306_recOwned, expectedOwnership, out _out4758, out _out4759);
                    r = _out4758;
                    resultingOwnership = _out4759;
                  } else {
                    RAST._IType _10308___mcc_h1588 = _source595.dtor_value;
                    RAST._IType _10309_v = _10308___mcc_h1588;
                    RAST._IType _10310_toTpeRust;
                    RAST._IType _out4760;
                    _out4760 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10310_toTpeRust = _out4760;
                    r = (((_10305_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10310_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4761;
                    DCOMPUTF16._IOwnership _out4762;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4761, out _out4762);
                    r = _out4761;
                    resultingOwnership = _out4762;
                  }
                } else {
                  if ((_10304_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10311_recursiveGen;
                      DCOMPUTF16._IOwnership _10312_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10313_recIdents;
                      RAST._IExpr _out4763;
                      DCOMPUTF16._IOwnership _out4764;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4765;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4763, out _out4764, out _out4765);
                      _10311_recursiveGen = _out4763;
                      _10312_recOwned = _out4764;
                      _10313_recIdents = _out4765;
                      RAST._IExpr _out4766;
                      DCOMPUTF16._IOwnership _out4767;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10311_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10312_recOwned, expectedOwnership, out _out4766, out _out4767);
                      r = _out4766;
                      resultingOwnership = _out4767;
                      readIdents = _10313_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4768;
                  DCOMPUTF16._IOwnership _out4769;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4770;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10303_b), _10303_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4768, out _out4769, out _out4770);
                  r = _out4768;
                  resultingOwnership = _out4769;
                  readIdents = _out4770;
                }
              }
            } else if (_source578.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _10314___mcc_h294 = _source578.dtor_Passthrough_a0;
              Dafny.ISequence<DAST._IAttribute> _10315_attributes = _10052___mcc_h203;
              bool _10316_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10317_range = _10050___mcc_h201;
              DAST._IType _10318_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10319_nativeFromType;
                _10319_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10318_b, _10317_range);
                if (object.Equals(_10318_b, _9568_toTpe)) {
                  RAST._IExpr _10320_recursiveGen;
                  DCOMPUTF16._IOwnership _10321_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10322_recIdents;
                  RAST._IExpr _out4771;
                  DCOMPUTF16._IOwnership _out4772;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4773;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4771, out _out4772, out _out4773);
                  _10320_recursiveGen = _out4771;
                  _10321_recOwned = _out4772;
                  _10322_recIdents = _out4773;
                  readIdents = _10322_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source596 = _10319_nativeFromType;
                  if (_source596.is_None) {
                    if (_10316_erase) {
                      r = _10320_recursiveGen;
                    } else {
                      r = (_10320_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4774;
                    DCOMPUTF16._IOwnership _out4775;
                    DCOMPUTF16.COMP.FromOwnership(r, _10321_recOwned, expectedOwnership, out _out4774, out _out4775);
                    r = _out4774;
                    resultingOwnership = _out4775;
                  } else {
                    RAST._IType _10323___mcc_h1589 = _source596.dtor_value;
                    RAST._IType _10324_v = _10323___mcc_h1589;
                    RAST._IType _10325_toTpeRust;
                    RAST._IType _out4776;
                    _out4776 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10325_toTpeRust = _out4776;
                    r = (((_10320_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10325_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4777;
                    DCOMPUTF16._IOwnership _out4778;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4777, out _out4778);
                    r = _out4777;
                    resultingOwnership = _out4778;
                  }
                } else {
                  if ((_10319_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10326_recursiveGen;
                      DCOMPUTF16._IOwnership _10327_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10328_recIdents;
                      RAST._IExpr _out4779;
                      DCOMPUTF16._IOwnership _out4780;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4781;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4779, out _out4780, out _out4781);
                      _10326_recursiveGen = _out4779;
                      _10327_recOwned = _out4780;
                      _10328_recIdents = _out4781;
                      RAST._IExpr _out4782;
                      DCOMPUTF16._IOwnership _out4783;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10326_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10327_recOwned, expectedOwnership, out _out4782, out _out4783);
                      r = _out4782;
                      resultingOwnership = _out4783;
                      readIdents = _10328_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4784;
                  DCOMPUTF16._IOwnership _out4785;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4786;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10318_b), _10318_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4784, out _out4785, out _out4786);
                  r = _out4784;
                  resultingOwnership = _out4785;
                  readIdents = _out4786;
                }
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _10329___mcc_h297 = _source578.dtor_TypeArg_a0;
              Dafny.ISequence<DAST._IAttribute> _10330_attributes = _10052___mcc_h203;
              bool _10331_erase = _10051___mcc_h202;
              DAST._INewtypeRange _10332_range = _10050___mcc_h201;
              DAST._IType _10333_b = _10049___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10334_nativeFromType;
                _10334_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10333_b, _10332_range);
                if (object.Equals(_10333_b, _9568_toTpe)) {
                  RAST._IExpr _10335_recursiveGen;
                  DCOMPUTF16._IOwnership _10336_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10337_recIdents;
                  RAST._IExpr _out4787;
                  DCOMPUTF16._IOwnership _out4788;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4789;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4787, out _out4788, out _out4789);
                  _10335_recursiveGen = _out4787;
                  _10336_recOwned = _out4788;
                  _10337_recIdents = _out4789;
                  readIdents = _10337_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source597 = _10334_nativeFromType;
                  if (_source597.is_None) {
                    if (_10331_erase) {
                      r = _10335_recursiveGen;
                    } else {
                      r = (_10335_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4790;
                    DCOMPUTF16._IOwnership _out4791;
                    DCOMPUTF16.COMP.FromOwnership(r, _10336_recOwned, expectedOwnership, out _out4790, out _out4791);
                    r = _out4790;
                    resultingOwnership = _out4791;
                  } else {
                    RAST._IType _10338___mcc_h1590 = _source597.dtor_value;
                    RAST._IType _10339_v = _10338___mcc_h1590;
                    RAST._IType _10340_toTpeRust;
                    RAST._IType _out4792;
                    _out4792 = DCOMPUTF16.COMP.GenType(_9568_toTpe, false, false);
                    _10340_toTpeRust = _out4792;
                    r = (((_10335_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10340_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4793;
                    DCOMPUTF16._IOwnership _out4794;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4793, out _out4794);
                    r = _out4793;
                    resultingOwnership = _out4794;
                  }
                } else {
                  if ((_10334_nativeFromType).is_Some) {
                    if (object.Equals(_9568_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10341_recursiveGen;
                      DCOMPUTF16._IOwnership _10342_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10343_recIdents;
                      RAST._IExpr _out4795;
                      DCOMPUTF16._IOwnership _out4796;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4797;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4795, out _out4796, out _out4797);
                      _10341_recursiveGen = _out4795;
                      _10342_recOwned = _out4796;
                      _10343_recIdents = _out4797;
                      RAST._IExpr _out4798;
                      DCOMPUTF16._IOwnership _out4799;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10341_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10342_recOwned, expectedOwnership, out _out4798, out _out4799);
                      r = _out4798;
                      resultingOwnership = _out4799;
                      readIdents = _10343_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4800;
                  DCOMPUTF16._IOwnership _out4801;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4802;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10333_b), _10333_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4800, out _out4801, out _out4802);
                  r = _out4800;
                  resultingOwnership = _out4801;
                  readIdents = _out4802;
                }
              }
            }
          }
        } else if (_source561.is_Nullable) {
          DAST._IType _10344___mcc_h300 = _source561.dtor_Nullable_a0;
          DAST._IType _source598 = _9573___mcc_h1;
          if (_source598.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10345___mcc_h304 = _source598.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10346___mcc_h305 = _source598.dtor_typeArgs;
            DAST._IResolvedType _10347___mcc_h306 = _source598.dtor_resolved;
            DAST._IResolvedType _source599 = _10347___mcc_h306;
            if (_source599.is_AllocatedDatatype) {
              DAST._IDatatypeType _10348___mcc_h313 = _source599.dtor_datatypeType;
              {
                RAST._IExpr _10349_recursiveGen;
                DCOMPUTF16._IOwnership _10350_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10351_recIdents;
                RAST._IExpr _out4803;
                DCOMPUTF16._IOwnership _out4804;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4805;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4803, out _out4804, out _out4805);
                _10349_recursiveGen = _out4803;
                _10350_recOwned = _out4804;
                _10351_recIdents = _out4805;
                r = _10349_recursiveGen;
                if (object.Equals(_10350_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4806;
                DCOMPUTF16._IOwnership _out4807;
                DCOMPUTF16.COMP.FromOwnership(r, _10350_recOwned, expectedOwnership, out _out4806, out _out4807);
                r = _out4806;
                resultingOwnership = _out4807;
                readIdents = _10351_recIdents;
              }
            } else if (_source599.is_Datatype) {
              DAST._IDatatypeType _10352___mcc_h316 = _source599.dtor_datatypeType;
              {
                RAST._IExpr _10353_recursiveGen;
                DCOMPUTF16._IOwnership _10354_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10355_recIdents;
                RAST._IExpr _out4808;
                DCOMPUTF16._IOwnership _out4809;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4810;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4808, out _out4809, out _out4810);
                _10353_recursiveGen = _out4808;
                _10354_recOwned = _out4809;
                _10355_recIdents = _out4810;
                r = _10353_recursiveGen;
                if (object.Equals(_10354_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4811;
                DCOMPUTF16._IOwnership _out4812;
                DCOMPUTF16.COMP.FromOwnership(r, _10354_recOwned, expectedOwnership, out _out4811, out _out4812);
                r = _out4811;
                resultingOwnership = _out4812;
                readIdents = _10355_recIdents;
              }
            } else if (_source599.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10356___mcc_h319 = _source599.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10357___mcc_h320 = _source599.dtor_attributes;
              {
                RAST._IExpr _10358_recursiveGen;
                DCOMPUTF16._IOwnership _10359_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10360_recIdents;
                RAST._IExpr _out4813;
                DCOMPUTF16._IOwnership _out4814;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4815;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4813, out _out4814, out _out4815);
                _10358_recursiveGen = _out4813;
                _10359_recOwned = _out4814;
                _10360_recIdents = _out4815;
                r = _10358_recursiveGen;
                if (object.Equals(_10359_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4816;
                DCOMPUTF16._IOwnership _out4817;
                DCOMPUTF16.COMP.FromOwnership(r, _10359_recOwned, expectedOwnership, out _out4816, out _out4817);
                r = _out4816;
                resultingOwnership = _out4817;
                readIdents = _10360_recIdents;
              }
            } else {
              DAST._IType _10361___mcc_h325 = _source599.dtor_baseType;
              DAST._INewtypeRange _10362___mcc_h326 = _source599.dtor_range;
              bool _10363___mcc_h327 = _source599.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10364___mcc_h328 = _source599.dtor_attributes;
              {
                RAST._IExpr _10365_recursiveGen;
                DCOMPUTF16._IOwnership _10366_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10367_recIdents;
                RAST._IExpr _out4818;
                DCOMPUTF16._IOwnership _out4819;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4820;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4818, out _out4819, out _out4820);
                _10365_recursiveGen = _out4818;
                _10366_recOwned = _out4819;
                _10367_recIdents = _out4820;
                r = _10365_recursiveGen;
                if (object.Equals(_10366_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4821;
                DCOMPUTF16._IOwnership _out4822;
                DCOMPUTF16.COMP.FromOwnership(r, _10366_recOwned, expectedOwnership, out _out4821, out _out4822);
                r = _out4821;
                resultingOwnership = _out4822;
                readIdents = _10367_recIdents;
              }
            }
          } else if (_source598.is_Nullable) {
            DAST._IType _10368___mcc_h337 = _source598.dtor_Nullable_a0;
            {
              RAST._IExpr _10369_recursiveGen;
              DCOMPUTF16._IOwnership _10370_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10371_recIdents;
              RAST._IExpr _out4823;
              DCOMPUTF16._IOwnership _out4824;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4825;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4823, out _out4824, out _out4825);
              _10369_recursiveGen = _out4823;
              _10370_recOwned = _out4824;
              _10371_recIdents = _out4825;
              r = _10369_recursiveGen;
              if (object.Equals(_10370_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4826;
              DCOMPUTF16._IOwnership _out4827;
              DCOMPUTF16.COMP.FromOwnership(r, _10370_recOwned, expectedOwnership, out _out4826, out _out4827);
              r = _out4826;
              resultingOwnership = _out4827;
              readIdents = _10371_recIdents;
            }
          } else if (_source598.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10372___mcc_h340 = _source598.dtor_Tuple_a0;
            {
              RAST._IExpr _10373_recursiveGen;
              DCOMPUTF16._IOwnership _10374_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10375_recIdents;
              RAST._IExpr _out4828;
              DCOMPUTF16._IOwnership _out4829;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4830;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4828, out _out4829, out _out4830);
              _10373_recursiveGen = _out4828;
              _10374_recOwned = _out4829;
              _10375_recIdents = _out4830;
              r = _10373_recursiveGen;
              if (object.Equals(_10374_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4831;
              DCOMPUTF16._IOwnership _out4832;
              DCOMPUTF16.COMP.FromOwnership(r, _10374_recOwned, expectedOwnership, out _out4831, out _out4832);
              r = _out4831;
              resultingOwnership = _out4832;
              readIdents = _10375_recIdents;
            }
          } else if (_source598.is_Array) {
            DAST._IType _10376___mcc_h343 = _source598.dtor_element;
            BigInteger _10377___mcc_h344 = _source598.dtor_dims;
            {
              RAST._IExpr _10378_recursiveGen;
              DCOMPUTF16._IOwnership _10379_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10380_recIdents;
              RAST._IExpr _out4833;
              DCOMPUTF16._IOwnership _out4834;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4835;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4833, out _out4834, out _out4835);
              _10378_recursiveGen = _out4833;
              _10379_recOwned = _out4834;
              _10380_recIdents = _out4835;
              r = _10378_recursiveGen;
              if (object.Equals(_10379_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4836;
              DCOMPUTF16._IOwnership _out4837;
              DCOMPUTF16.COMP.FromOwnership(r, _10379_recOwned, expectedOwnership, out _out4836, out _out4837);
              r = _out4836;
              resultingOwnership = _out4837;
              readIdents = _10380_recIdents;
            }
          } else if (_source598.is_Seq) {
            DAST._IType _10381___mcc_h349 = _source598.dtor_element;
            {
              RAST._IExpr _10382_recursiveGen;
              DCOMPUTF16._IOwnership _10383_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10384_recIdents;
              RAST._IExpr _out4838;
              DCOMPUTF16._IOwnership _out4839;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4840;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4838, out _out4839, out _out4840);
              _10382_recursiveGen = _out4838;
              _10383_recOwned = _out4839;
              _10384_recIdents = _out4840;
              r = _10382_recursiveGen;
              if (object.Equals(_10383_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4841;
              DCOMPUTF16._IOwnership _out4842;
              DCOMPUTF16.COMP.FromOwnership(r, _10383_recOwned, expectedOwnership, out _out4841, out _out4842);
              r = _out4841;
              resultingOwnership = _out4842;
              readIdents = _10384_recIdents;
            }
          } else if (_source598.is_Set) {
            DAST._IType _10385___mcc_h352 = _source598.dtor_element;
            {
              RAST._IExpr _10386_recursiveGen;
              DCOMPUTF16._IOwnership _10387_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10388_recIdents;
              RAST._IExpr _out4843;
              DCOMPUTF16._IOwnership _out4844;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4845;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4843, out _out4844, out _out4845);
              _10386_recursiveGen = _out4843;
              _10387_recOwned = _out4844;
              _10388_recIdents = _out4845;
              r = _10386_recursiveGen;
              if (object.Equals(_10387_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4846;
              DCOMPUTF16._IOwnership _out4847;
              DCOMPUTF16.COMP.FromOwnership(r, _10387_recOwned, expectedOwnership, out _out4846, out _out4847);
              r = _out4846;
              resultingOwnership = _out4847;
              readIdents = _10388_recIdents;
            }
          } else if (_source598.is_Multiset) {
            DAST._IType _10389___mcc_h355 = _source598.dtor_element;
            {
              RAST._IExpr _10390_recursiveGen;
              DCOMPUTF16._IOwnership _10391_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10392_recIdents;
              RAST._IExpr _out4848;
              DCOMPUTF16._IOwnership _out4849;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4850;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4848, out _out4849, out _out4850);
              _10390_recursiveGen = _out4848;
              _10391_recOwned = _out4849;
              _10392_recIdents = _out4850;
              r = _10390_recursiveGen;
              if (object.Equals(_10391_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4851;
              DCOMPUTF16._IOwnership _out4852;
              DCOMPUTF16.COMP.FromOwnership(r, _10391_recOwned, expectedOwnership, out _out4851, out _out4852);
              r = _out4851;
              resultingOwnership = _out4852;
              readIdents = _10392_recIdents;
            }
          } else if (_source598.is_Map) {
            DAST._IType _10393___mcc_h358 = _source598.dtor_key;
            DAST._IType _10394___mcc_h359 = _source598.dtor_value;
            {
              RAST._IExpr _10395_recursiveGen;
              DCOMPUTF16._IOwnership _10396_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10397_recIdents;
              RAST._IExpr _out4853;
              DCOMPUTF16._IOwnership _out4854;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4855;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4853, out _out4854, out _out4855);
              _10395_recursiveGen = _out4853;
              _10396_recOwned = _out4854;
              _10397_recIdents = _out4855;
              r = _10395_recursiveGen;
              if (object.Equals(_10396_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4856;
              DCOMPUTF16._IOwnership _out4857;
              DCOMPUTF16.COMP.FromOwnership(r, _10396_recOwned, expectedOwnership, out _out4856, out _out4857);
              r = _out4856;
              resultingOwnership = _out4857;
              readIdents = _10397_recIdents;
            }
          } else if (_source598.is_SetBuilder) {
            DAST._IType _10398___mcc_h364 = _source598.dtor_element;
            {
              RAST._IExpr _10399_recursiveGen;
              DCOMPUTF16._IOwnership _10400_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10401_recIdents;
              RAST._IExpr _out4858;
              DCOMPUTF16._IOwnership _out4859;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4860;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4858, out _out4859, out _out4860);
              _10399_recursiveGen = _out4858;
              _10400_recOwned = _out4859;
              _10401_recIdents = _out4860;
              r = _10399_recursiveGen;
              if (object.Equals(_10400_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4861;
              DCOMPUTF16._IOwnership _out4862;
              DCOMPUTF16.COMP.FromOwnership(r, _10400_recOwned, expectedOwnership, out _out4861, out _out4862);
              r = _out4861;
              resultingOwnership = _out4862;
              readIdents = _10401_recIdents;
            }
          } else if (_source598.is_MapBuilder) {
            DAST._IType _10402___mcc_h367 = _source598.dtor_key;
            DAST._IType _10403___mcc_h368 = _source598.dtor_value;
            {
              RAST._IExpr _10404_recursiveGen;
              DCOMPUTF16._IOwnership _10405_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10406_recIdents;
              RAST._IExpr _out4863;
              DCOMPUTF16._IOwnership _out4864;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4865;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4863, out _out4864, out _out4865);
              _10404_recursiveGen = _out4863;
              _10405_recOwned = _out4864;
              _10406_recIdents = _out4865;
              r = _10404_recursiveGen;
              if (object.Equals(_10405_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4866;
              DCOMPUTF16._IOwnership _out4867;
              DCOMPUTF16.COMP.FromOwnership(r, _10405_recOwned, expectedOwnership, out _out4866, out _out4867);
              r = _out4866;
              resultingOwnership = _out4867;
              readIdents = _10406_recIdents;
            }
          } else if (_source598.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10407___mcc_h373 = _source598.dtor_args;
            DAST._IType _10408___mcc_h374 = _source598.dtor_result;
            {
              RAST._IExpr _10409_recursiveGen;
              DCOMPUTF16._IOwnership _10410_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10411_recIdents;
              RAST._IExpr _out4868;
              DCOMPUTF16._IOwnership _out4869;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4870;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4868, out _out4869, out _out4870);
              _10409_recursiveGen = _out4868;
              _10410_recOwned = _out4869;
              _10411_recIdents = _out4870;
              r = _10409_recursiveGen;
              if (object.Equals(_10410_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4871;
              DCOMPUTF16._IOwnership _out4872;
              DCOMPUTF16.COMP.FromOwnership(r, _10410_recOwned, expectedOwnership, out _out4871, out _out4872);
              r = _out4871;
              resultingOwnership = _out4872;
              readIdents = _10411_recIdents;
            }
          } else if (_source598.is_Primitive) {
            DAST._IPrimitive _10412___mcc_h379 = _source598.dtor_Primitive_a0;
            {
              RAST._IExpr _10413_recursiveGen;
              DCOMPUTF16._IOwnership _10414_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10415_recIdents;
              RAST._IExpr _out4873;
              DCOMPUTF16._IOwnership _out4874;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4875;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4873, out _out4874, out _out4875);
              _10413_recursiveGen = _out4873;
              _10414_recOwned = _out4874;
              _10415_recIdents = _out4875;
              r = _10413_recursiveGen;
              if (object.Equals(_10414_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4876;
              DCOMPUTF16._IOwnership _out4877;
              DCOMPUTF16.COMP.FromOwnership(r, _10414_recOwned, expectedOwnership, out _out4876, out _out4877);
              r = _out4876;
              resultingOwnership = _out4877;
              readIdents = _10415_recIdents;
            }
          } else if (_source598.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10416___mcc_h382 = _source598.dtor_Passthrough_a0;
            {
              RAST._IExpr _10417_recursiveGen;
              DCOMPUTF16._IOwnership _10418_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10419_recIdents;
              RAST._IExpr _out4878;
              DCOMPUTF16._IOwnership _out4879;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4880;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4878, out _out4879, out _out4880);
              _10417_recursiveGen = _out4878;
              _10418_recOwned = _out4879;
              _10419_recIdents = _out4880;
              r = _10417_recursiveGen;
              if (object.Equals(_10418_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4881;
              DCOMPUTF16._IOwnership _out4882;
              DCOMPUTF16.COMP.FromOwnership(r, _10418_recOwned, expectedOwnership, out _out4881, out _out4882);
              r = _out4881;
              resultingOwnership = _out4882;
              readIdents = _10419_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10420___mcc_h385 = _source598.dtor_TypeArg_a0;
            {
              RAST._IExpr _10421_recursiveGen;
              DCOMPUTF16._IOwnership _10422_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10423_recIdents;
              RAST._IExpr _out4883;
              DCOMPUTF16._IOwnership _out4884;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4885;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4883, out _out4884, out _out4885);
              _10421_recursiveGen = _out4883;
              _10422_recOwned = _out4884;
              _10423_recIdents = _out4885;
              r = _10421_recursiveGen;
              if (object.Equals(_10422_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4886;
              DCOMPUTF16._IOwnership _out4887;
              DCOMPUTF16.COMP.FromOwnership(r, _10422_recOwned, expectedOwnership, out _out4886, out _out4887);
              r = _out4886;
              resultingOwnership = _out4887;
              readIdents = _10423_recIdents;
            }
          }
        } else if (_source561.is_Tuple) {
          Dafny.ISequence<DAST._IType> _10424___mcc_h388 = _source561.dtor_Tuple_a0;
          DAST._IType _source600 = _9573___mcc_h1;
          if (_source600.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10425___mcc_h392 = _source600.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10426___mcc_h393 = _source600.dtor_typeArgs;
            DAST._IResolvedType _10427___mcc_h394 = _source600.dtor_resolved;
            DAST._IResolvedType _source601 = _10427___mcc_h394;
            if (_source601.is_AllocatedDatatype) {
              DAST._IDatatypeType _10428___mcc_h398 = _source601.dtor_datatypeType;
              {
                RAST._IType _10429_fromTpeGen;
                RAST._IType _out4888;
                _out4888 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10429_fromTpeGen = _out4888;
                RAST._IType _10430_toTpeGen;
                RAST._IType _out4889;
                _out4889 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10430_toTpeGen = _out4889;
                RAST._IExpr _10431_recursiveGen;
                DCOMPUTF16._IOwnership _10432_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10433_recIdents;
                RAST._IExpr _out4890;
                DCOMPUTF16._IOwnership _out4891;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4892;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4890, out _out4891, out _out4892);
                _10431_recursiveGen = _out4890;
                _10432_recOwned = _out4891;
                _10433_recIdents = _out4892;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10431_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10429_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10430_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4893;
                DCOMPUTF16._IOwnership _out4894;
                DCOMPUTF16.COMP.FromOwnership(r, _10432_recOwned, expectedOwnership, out _out4893, out _out4894);
                r = _out4893;
                resultingOwnership = _out4894;
                readIdents = _10433_recIdents;
              }
            } else if (_source601.is_Datatype) {
              DAST._IDatatypeType _10434___mcc_h400 = _source601.dtor_datatypeType;
              {
                RAST._IType _10435_fromTpeGen;
                RAST._IType _out4895;
                _out4895 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10435_fromTpeGen = _out4895;
                RAST._IType _10436_toTpeGen;
                RAST._IType _out4896;
                _out4896 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10436_toTpeGen = _out4896;
                RAST._IExpr _10437_recursiveGen;
                DCOMPUTF16._IOwnership _10438_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10439_recIdents;
                RAST._IExpr _out4897;
                DCOMPUTF16._IOwnership _out4898;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4899;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4897, out _out4898, out _out4899);
                _10437_recursiveGen = _out4897;
                _10438_recOwned = _out4898;
                _10439_recIdents = _out4899;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10437_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10435_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10436_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4900;
                DCOMPUTF16._IOwnership _out4901;
                DCOMPUTF16.COMP.FromOwnership(r, _10438_recOwned, expectedOwnership, out _out4900, out _out4901);
                r = _out4900;
                resultingOwnership = _out4901;
                readIdents = _10439_recIdents;
              }
            } else if (_source601.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10440___mcc_h402 = _source601.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10441___mcc_h403 = _source601.dtor_attributes;
              {
                RAST._IType _10442_fromTpeGen;
                RAST._IType _out4902;
                _out4902 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10442_fromTpeGen = _out4902;
                RAST._IType _10443_toTpeGen;
                RAST._IType _out4903;
                _out4903 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10443_toTpeGen = _out4903;
                RAST._IExpr _10444_recursiveGen;
                DCOMPUTF16._IOwnership _10445_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10446_recIdents;
                RAST._IExpr _out4904;
                DCOMPUTF16._IOwnership _out4905;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4906;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4904, out _out4905, out _out4906);
                _10444_recursiveGen = _out4904;
                _10445_recOwned = _out4905;
                _10446_recIdents = _out4906;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10444_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10442_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10443_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4907;
                DCOMPUTF16._IOwnership _out4908;
                DCOMPUTF16.COMP.FromOwnership(r, _10445_recOwned, expectedOwnership, out _out4907, out _out4908);
                r = _out4907;
                resultingOwnership = _out4908;
                readIdents = _10446_recIdents;
              }
            } else {
              DAST._IType _10447___mcc_h406 = _source601.dtor_baseType;
              DAST._INewtypeRange _10448___mcc_h407 = _source601.dtor_range;
              bool _10449___mcc_h408 = _source601.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10450___mcc_h409 = _source601.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10451_attributes = _10450___mcc_h409;
              bool _10452_erase = _10449___mcc_h408;
              DAST._INewtypeRange _10453_range = _10448___mcc_h407;
              DAST._IType _10454_b = _10447___mcc_h406;
              {
                Std.Wrappers._IOption<RAST._IType> _10455_nativeToType;
                _10455_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10454_b, _10453_range);
                if (object.Equals(_9567_fromTpe, _10454_b)) {
                  RAST._IExpr _10456_recursiveGen;
                  DCOMPUTF16._IOwnership _10457_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10458_recIdents;
                  RAST._IExpr _out4909;
                  DCOMPUTF16._IOwnership _out4910;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4911;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4909, out _out4910, out _out4911);
                  _10456_recursiveGen = _out4909;
                  _10457_recOwned = _out4910;
                  _10458_recIdents = _out4911;
                  readIdents = _10458_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source602 = _10455_nativeToType;
                  if (_source602.is_None) {
                    if (_10452_erase) {
                      r = _10456_recursiveGen;
                    } else {
                      RAST._IType _10459_rhsType;
                      RAST._IType _out4912;
                      _out4912 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _10459_rhsType = _out4912;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10459_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10456_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4913;
                    DCOMPUTF16._IOwnership _out4914;
                    DCOMPUTF16.COMP.FromOwnership(r, _10457_recOwned, expectedOwnership, out _out4913, out _out4914);
                    r = _out4913;
                    resultingOwnership = _out4914;
                  } else {
                    RAST._IType _10460___mcc_h1591 = _source602.dtor_value;
                    RAST._IType _10461_v = _10460___mcc_h1591;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10456_recursiveGen, RAST.Expr.create_ExprFromType(_10461_v)));
                    RAST._IExpr _out4915;
                    DCOMPUTF16._IOwnership _out4916;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4915, out _out4916);
                    r = _out4915;
                    resultingOwnership = _out4916;
                  }
                } else {
                  if ((_10455_nativeToType).is_Some) {
                    DAST._IType _source603 = _9567_fromTpe;
                    if (_source603.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10462___mcc_h1592 = _source603.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10463___mcc_h1593 = _source603.dtor_typeArgs;
                      DAST._IResolvedType _10464___mcc_h1594 = _source603.dtor_resolved;
                      DAST._IResolvedType _source604 = _10464___mcc_h1594;
                      if (_source604.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10465___mcc_h1598 = _source604.dtor_datatypeType;
                      } else if (_source604.is_Datatype) {
                        DAST._IDatatypeType _10466___mcc_h1600 = _source604.dtor_datatypeType;
                      } else if (_source604.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10467___mcc_h1602 = _source604.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10468___mcc_h1603 = _source604.dtor_attributes;
                      } else {
                        DAST._IType _10469___mcc_h1606 = _source604.dtor_baseType;
                        DAST._INewtypeRange _10470___mcc_h1607 = _source604.dtor_range;
                        bool _10471___mcc_h1608 = _source604.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10472___mcc_h1609 = _source604.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10473_attributes0 = _10472___mcc_h1609;
                        bool _10474_erase0 = _10471___mcc_h1608;
                        DAST._INewtypeRange _10475_range0 = _10470___mcc_h1607;
                        DAST._IType _10476_b0 = _10469___mcc_h1606;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10477_nativeFromType;
                          _10477_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10476_b0, _10475_range0);
                          if ((_10477_nativeFromType).is_Some) {
                            RAST._IExpr _10478_recursiveGen;
                            DCOMPUTF16._IOwnership _10479_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10480_recIdents;
                            RAST._IExpr _out4917;
                            DCOMPUTF16._IOwnership _out4918;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4919;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4917, out _out4918, out _out4919);
                            _10478_recursiveGen = _out4917;
                            _10479_recOwned = _out4918;
                            _10480_recIdents = _out4919;
                            RAST._IExpr _out4920;
                            DCOMPUTF16._IOwnership _out4921;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10478_recursiveGen, (_10455_nativeToType).dtor_value), _10479_recOwned, expectedOwnership, out _out4920, out _out4921);
                            r = _out4920;
                            resultingOwnership = _out4921;
                            readIdents = _10480_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source603.is_Nullable) {
                      DAST._IType _10481___mcc_h1614 = _source603.dtor_Nullable_a0;
                    } else if (_source603.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10482___mcc_h1616 = _source603.dtor_Tuple_a0;
                    } else if (_source603.is_Array) {
                      DAST._IType _10483___mcc_h1618 = _source603.dtor_element;
                      BigInteger _10484___mcc_h1619 = _source603.dtor_dims;
                    } else if (_source603.is_Seq) {
                      DAST._IType _10485___mcc_h1622 = _source603.dtor_element;
                    } else if (_source603.is_Set) {
                      DAST._IType _10486___mcc_h1624 = _source603.dtor_element;
                    } else if (_source603.is_Multiset) {
                      DAST._IType _10487___mcc_h1626 = _source603.dtor_element;
                    } else if (_source603.is_Map) {
                      DAST._IType _10488___mcc_h1628 = _source603.dtor_key;
                      DAST._IType _10489___mcc_h1629 = _source603.dtor_value;
                    } else if (_source603.is_SetBuilder) {
                      DAST._IType _10490___mcc_h1632 = _source603.dtor_element;
                    } else if (_source603.is_MapBuilder) {
                      DAST._IType _10491___mcc_h1634 = _source603.dtor_key;
                      DAST._IType _10492___mcc_h1635 = _source603.dtor_value;
                    } else if (_source603.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10493___mcc_h1638 = _source603.dtor_args;
                      DAST._IType _10494___mcc_h1639 = _source603.dtor_result;
                    } else if (_source603.is_Primitive) {
                      DAST._IPrimitive _10495___mcc_h1642 = _source603.dtor_Primitive_a0;
                    } else if (_source603.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10496___mcc_h1644 = _source603.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10497___mcc_h1646 = _source603.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10498_recursiveGen;
                      DCOMPUTF16._IOwnership _10499_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10500_recIdents;
                      RAST._IExpr _out4922;
                      DCOMPUTF16._IOwnership _out4923;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4924;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4922, out _out4923, out _out4924);
                      _10498_recursiveGen = _out4922;
                      _10499_recOwned = _out4923;
                      _10500_recIdents = _out4924;
                      RAST._IExpr _out4925;
                      DCOMPUTF16._IOwnership _out4926;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10498_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10455_nativeToType).dtor_value), _10499_recOwned, expectedOwnership, out _out4925, out _out4926);
                      r = _out4925;
                      resultingOwnership = _out4926;
                      readIdents = _10500_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4927;
                  DCOMPUTF16._IOwnership _out4928;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4929;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10454_b), _10454_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out4927, out _out4928, out _out4929);
                  r = _out4927;
                  resultingOwnership = _out4928;
                  readIdents = _out4929;
                }
              }
            }
          } else if (_source600.is_Nullable) {
            DAST._IType _10501___mcc_h414 = _source600.dtor_Nullable_a0;
            {
              RAST._IExpr _10502_recursiveGen;
              DCOMPUTF16._IOwnership _10503_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10504_recIdents;
              RAST._IExpr _out4930;
              DCOMPUTF16._IOwnership _out4931;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4932;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4930, out _out4931, out _out4932);
              _10502_recursiveGen = _out4930;
              _10503_recOwned = _out4931;
              _10504_recIdents = _out4932;
              r = _10502_recursiveGen;
              if (object.Equals(_10503_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4933;
              DCOMPUTF16._IOwnership _out4934;
              DCOMPUTF16.COMP.FromOwnership(r, _10503_recOwned, expectedOwnership, out _out4933, out _out4934);
              r = _out4933;
              resultingOwnership = _out4934;
              readIdents = _10504_recIdents;
            }
          } else if (_source600.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10505___mcc_h416 = _source600.dtor_Tuple_a0;
            {
              RAST._IType _10506_fromTpeGen;
              RAST._IType _out4935;
              _out4935 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10506_fromTpeGen = _out4935;
              RAST._IType _10507_toTpeGen;
              RAST._IType _out4936;
              _out4936 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10507_toTpeGen = _out4936;
              RAST._IExpr _10508_recursiveGen;
              DCOMPUTF16._IOwnership _10509_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10510_recIdents;
              RAST._IExpr _out4937;
              DCOMPUTF16._IOwnership _out4938;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4939;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4937, out _out4938, out _out4939);
              _10508_recursiveGen = _out4937;
              _10509_recOwned = _out4938;
              _10510_recIdents = _out4939;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10508_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10506_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10507_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4940;
              DCOMPUTF16._IOwnership _out4941;
              DCOMPUTF16.COMP.FromOwnership(r, _10509_recOwned, expectedOwnership, out _out4940, out _out4941);
              r = _out4940;
              resultingOwnership = _out4941;
              readIdents = _10510_recIdents;
            }
          } else if (_source600.is_Array) {
            DAST._IType _10511___mcc_h418 = _source600.dtor_element;
            BigInteger _10512___mcc_h419 = _source600.dtor_dims;
            {
              RAST._IType _10513_fromTpeGen;
              RAST._IType _out4942;
              _out4942 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10513_fromTpeGen = _out4942;
              RAST._IType _10514_toTpeGen;
              RAST._IType _out4943;
              _out4943 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10514_toTpeGen = _out4943;
              RAST._IExpr _10515_recursiveGen;
              DCOMPUTF16._IOwnership _10516_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10517_recIdents;
              RAST._IExpr _out4944;
              DCOMPUTF16._IOwnership _out4945;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4946;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4944, out _out4945, out _out4946);
              _10515_recursiveGen = _out4944;
              _10516_recOwned = _out4945;
              _10517_recIdents = _out4946;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10515_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10513_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10514_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4947;
              DCOMPUTF16._IOwnership _out4948;
              DCOMPUTF16.COMP.FromOwnership(r, _10516_recOwned, expectedOwnership, out _out4947, out _out4948);
              r = _out4947;
              resultingOwnership = _out4948;
              readIdents = _10517_recIdents;
            }
          } else if (_source600.is_Seq) {
            DAST._IType _10518___mcc_h422 = _source600.dtor_element;
            {
              RAST._IType _10519_fromTpeGen;
              RAST._IType _out4949;
              _out4949 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10519_fromTpeGen = _out4949;
              RAST._IType _10520_toTpeGen;
              RAST._IType _out4950;
              _out4950 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10520_toTpeGen = _out4950;
              RAST._IExpr _10521_recursiveGen;
              DCOMPUTF16._IOwnership _10522_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10523_recIdents;
              RAST._IExpr _out4951;
              DCOMPUTF16._IOwnership _out4952;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4953;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4951, out _out4952, out _out4953);
              _10521_recursiveGen = _out4951;
              _10522_recOwned = _out4952;
              _10523_recIdents = _out4953;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10521_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10519_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10520_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4954;
              DCOMPUTF16._IOwnership _out4955;
              DCOMPUTF16.COMP.FromOwnership(r, _10522_recOwned, expectedOwnership, out _out4954, out _out4955);
              r = _out4954;
              resultingOwnership = _out4955;
              readIdents = _10523_recIdents;
            }
          } else if (_source600.is_Set) {
            DAST._IType _10524___mcc_h424 = _source600.dtor_element;
            {
              RAST._IType _10525_fromTpeGen;
              RAST._IType _out4956;
              _out4956 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10525_fromTpeGen = _out4956;
              RAST._IType _10526_toTpeGen;
              RAST._IType _out4957;
              _out4957 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10526_toTpeGen = _out4957;
              RAST._IExpr _10527_recursiveGen;
              DCOMPUTF16._IOwnership _10528_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10529_recIdents;
              RAST._IExpr _out4958;
              DCOMPUTF16._IOwnership _out4959;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4960;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4958, out _out4959, out _out4960);
              _10527_recursiveGen = _out4958;
              _10528_recOwned = _out4959;
              _10529_recIdents = _out4960;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10527_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10525_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10526_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4961;
              DCOMPUTF16._IOwnership _out4962;
              DCOMPUTF16.COMP.FromOwnership(r, _10528_recOwned, expectedOwnership, out _out4961, out _out4962);
              r = _out4961;
              resultingOwnership = _out4962;
              readIdents = _10529_recIdents;
            }
          } else if (_source600.is_Multiset) {
            DAST._IType _10530___mcc_h426 = _source600.dtor_element;
            {
              RAST._IType _10531_fromTpeGen;
              RAST._IType _out4963;
              _out4963 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10531_fromTpeGen = _out4963;
              RAST._IType _10532_toTpeGen;
              RAST._IType _out4964;
              _out4964 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10532_toTpeGen = _out4964;
              RAST._IExpr _10533_recursiveGen;
              DCOMPUTF16._IOwnership _10534_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10535_recIdents;
              RAST._IExpr _out4965;
              DCOMPUTF16._IOwnership _out4966;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4967;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4965, out _out4966, out _out4967);
              _10533_recursiveGen = _out4965;
              _10534_recOwned = _out4966;
              _10535_recIdents = _out4967;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10533_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10531_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10532_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4968;
              DCOMPUTF16._IOwnership _out4969;
              DCOMPUTF16.COMP.FromOwnership(r, _10534_recOwned, expectedOwnership, out _out4968, out _out4969);
              r = _out4968;
              resultingOwnership = _out4969;
              readIdents = _10535_recIdents;
            }
          } else if (_source600.is_Map) {
            DAST._IType _10536___mcc_h428 = _source600.dtor_key;
            DAST._IType _10537___mcc_h429 = _source600.dtor_value;
            {
              RAST._IType _10538_fromTpeGen;
              RAST._IType _out4970;
              _out4970 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10538_fromTpeGen = _out4970;
              RAST._IType _10539_toTpeGen;
              RAST._IType _out4971;
              _out4971 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10539_toTpeGen = _out4971;
              RAST._IExpr _10540_recursiveGen;
              DCOMPUTF16._IOwnership _10541_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10542_recIdents;
              RAST._IExpr _out4972;
              DCOMPUTF16._IOwnership _out4973;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4974;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4972, out _out4973, out _out4974);
              _10540_recursiveGen = _out4972;
              _10541_recOwned = _out4973;
              _10542_recIdents = _out4974;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10540_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10538_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10539_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4975;
              DCOMPUTF16._IOwnership _out4976;
              DCOMPUTF16.COMP.FromOwnership(r, _10541_recOwned, expectedOwnership, out _out4975, out _out4976);
              r = _out4975;
              resultingOwnership = _out4976;
              readIdents = _10542_recIdents;
            }
          } else if (_source600.is_SetBuilder) {
            DAST._IType _10543___mcc_h432 = _source600.dtor_element;
            {
              RAST._IType _10544_fromTpeGen;
              RAST._IType _out4977;
              _out4977 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10544_fromTpeGen = _out4977;
              RAST._IType _10545_toTpeGen;
              RAST._IType _out4978;
              _out4978 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10545_toTpeGen = _out4978;
              RAST._IExpr _10546_recursiveGen;
              DCOMPUTF16._IOwnership _10547_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10548_recIdents;
              RAST._IExpr _out4979;
              DCOMPUTF16._IOwnership _out4980;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4981;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4979, out _out4980, out _out4981);
              _10546_recursiveGen = _out4979;
              _10547_recOwned = _out4980;
              _10548_recIdents = _out4981;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10546_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10544_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10545_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4982;
              DCOMPUTF16._IOwnership _out4983;
              DCOMPUTF16.COMP.FromOwnership(r, _10547_recOwned, expectedOwnership, out _out4982, out _out4983);
              r = _out4982;
              resultingOwnership = _out4983;
              readIdents = _10548_recIdents;
            }
          } else if (_source600.is_MapBuilder) {
            DAST._IType _10549___mcc_h434 = _source600.dtor_key;
            DAST._IType _10550___mcc_h435 = _source600.dtor_value;
            {
              RAST._IType _10551_fromTpeGen;
              RAST._IType _out4984;
              _out4984 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10551_fromTpeGen = _out4984;
              RAST._IType _10552_toTpeGen;
              RAST._IType _out4985;
              _out4985 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10552_toTpeGen = _out4985;
              RAST._IExpr _10553_recursiveGen;
              DCOMPUTF16._IOwnership _10554_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10555_recIdents;
              RAST._IExpr _out4986;
              DCOMPUTF16._IOwnership _out4987;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4988;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4986, out _out4987, out _out4988);
              _10553_recursiveGen = _out4986;
              _10554_recOwned = _out4987;
              _10555_recIdents = _out4988;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10553_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10551_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10552_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4989;
              DCOMPUTF16._IOwnership _out4990;
              DCOMPUTF16.COMP.FromOwnership(r, _10554_recOwned, expectedOwnership, out _out4989, out _out4990);
              r = _out4989;
              resultingOwnership = _out4990;
              readIdents = _10555_recIdents;
            }
          } else if (_source600.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10556___mcc_h438 = _source600.dtor_args;
            DAST._IType _10557___mcc_h439 = _source600.dtor_result;
            {
              RAST._IType _10558_fromTpeGen;
              RAST._IType _out4991;
              _out4991 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10558_fromTpeGen = _out4991;
              RAST._IType _10559_toTpeGen;
              RAST._IType _out4992;
              _out4992 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10559_toTpeGen = _out4992;
              RAST._IExpr _10560_recursiveGen;
              DCOMPUTF16._IOwnership _10561_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10562_recIdents;
              RAST._IExpr _out4993;
              DCOMPUTF16._IOwnership _out4994;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4995;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out4993, out _out4994, out _out4995);
              _10560_recursiveGen = _out4993;
              _10561_recOwned = _out4994;
              _10562_recIdents = _out4995;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10560_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10558_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10559_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4996;
              DCOMPUTF16._IOwnership _out4997;
              DCOMPUTF16.COMP.FromOwnership(r, _10561_recOwned, expectedOwnership, out _out4996, out _out4997);
              r = _out4996;
              resultingOwnership = _out4997;
              readIdents = _10562_recIdents;
            }
          } else if (_source600.is_Primitive) {
            DAST._IPrimitive _10563___mcc_h442 = _source600.dtor_Primitive_a0;
            {
              RAST._IType _10564_fromTpeGen;
              RAST._IType _out4998;
              _out4998 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10564_fromTpeGen = _out4998;
              RAST._IType _10565_toTpeGen;
              RAST._IType _out4999;
              _out4999 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10565_toTpeGen = _out4999;
              RAST._IExpr _10566_recursiveGen;
              DCOMPUTF16._IOwnership _10567_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10568_recIdents;
              RAST._IExpr _out5000;
              DCOMPUTF16._IOwnership _out5001;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5002;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5000, out _out5001, out _out5002);
              _10566_recursiveGen = _out5000;
              _10567_recOwned = _out5001;
              _10568_recIdents = _out5002;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10566_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10564_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10565_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5003;
              DCOMPUTF16._IOwnership _out5004;
              DCOMPUTF16.COMP.FromOwnership(r, _10567_recOwned, expectedOwnership, out _out5003, out _out5004);
              r = _out5003;
              resultingOwnership = _out5004;
              readIdents = _10568_recIdents;
            }
          } else if (_source600.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10569___mcc_h444 = _source600.dtor_Passthrough_a0;
            {
              RAST._IType _10570_fromTpeGen;
              RAST._IType _out5005;
              _out5005 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10570_fromTpeGen = _out5005;
              RAST._IType _10571_toTpeGen;
              RAST._IType _out5006;
              _out5006 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10571_toTpeGen = _out5006;
              RAST._IExpr _10572_recursiveGen;
              DCOMPUTF16._IOwnership _10573_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10574_recIdents;
              RAST._IExpr _out5007;
              DCOMPUTF16._IOwnership _out5008;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5009;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5007, out _out5008, out _out5009);
              _10572_recursiveGen = _out5007;
              _10573_recOwned = _out5008;
              _10574_recIdents = _out5009;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10572_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10570_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10571_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5010;
              DCOMPUTF16._IOwnership _out5011;
              DCOMPUTF16.COMP.FromOwnership(r, _10573_recOwned, expectedOwnership, out _out5010, out _out5011);
              r = _out5010;
              resultingOwnership = _out5011;
              readIdents = _10574_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10575___mcc_h446 = _source600.dtor_TypeArg_a0;
            {
              RAST._IType _10576_fromTpeGen;
              RAST._IType _out5012;
              _out5012 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10576_fromTpeGen = _out5012;
              RAST._IType _10577_toTpeGen;
              RAST._IType _out5013;
              _out5013 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10577_toTpeGen = _out5013;
              RAST._IExpr _10578_recursiveGen;
              DCOMPUTF16._IOwnership _10579_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10580_recIdents;
              RAST._IExpr _out5014;
              DCOMPUTF16._IOwnership _out5015;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5016;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5014, out _out5015, out _out5016);
              _10578_recursiveGen = _out5014;
              _10579_recOwned = _out5015;
              _10580_recIdents = _out5016;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10578_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10576_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10577_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5017;
              DCOMPUTF16._IOwnership _out5018;
              DCOMPUTF16.COMP.FromOwnership(r, _10579_recOwned, expectedOwnership, out _out5017, out _out5018);
              r = _out5017;
              resultingOwnership = _out5018;
              readIdents = _10580_recIdents;
            }
          }
        } else if (_source561.is_Array) {
          DAST._IType _10581___mcc_h448 = _source561.dtor_element;
          BigInteger _10582___mcc_h449 = _source561.dtor_dims;
          DAST._IType _source605 = _9573___mcc_h1;
          if (_source605.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10583___mcc_h456 = _source605.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10584___mcc_h457 = _source605.dtor_typeArgs;
            DAST._IResolvedType _10585___mcc_h458 = _source605.dtor_resolved;
            DAST._IResolvedType _source606 = _10585___mcc_h458;
            if (_source606.is_AllocatedDatatype) {
              DAST._IDatatypeType _10586___mcc_h462 = _source606.dtor_datatypeType;
              {
                RAST._IType _10587_fromTpeGen;
                RAST._IType _out5019;
                _out5019 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10587_fromTpeGen = _out5019;
                RAST._IType _10588_toTpeGen;
                RAST._IType _out5020;
                _out5020 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10588_toTpeGen = _out5020;
                RAST._IExpr _10589_recursiveGen;
                DCOMPUTF16._IOwnership _10590_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10591_recIdents;
                RAST._IExpr _out5021;
                DCOMPUTF16._IOwnership _out5022;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5023;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5021, out _out5022, out _out5023);
                _10589_recursiveGen = _out5021;
                _10590_recOwned = _out5022;
                _10591_recIdents = _out5023;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10589_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10587_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10588_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5024;
                DCOMPUTF16._IOwnership _out5025;
                DCOMPUTF16.COMP.FromOwnership(r, _10590_recOwned, expectedOwnership, out _out5024, out _out5025);
                r = _out5024;
                resultingOwnership = _out5025;
                readIdents = _10591_recIdents;
              }
            } else if (_source606.is_Datatype) {
              DAST._IDatatypeType _10592___mcc_h464 = _source606.dtor_datatypeType;
              {
                RAST._IType _10593_fromTpeGen;
                RAST._IType _out5026;
                _out5026 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10593_fromTpeGen = _out5026;
                RAST._IType _10594_toTpeGen;
                RAST._IType _out5027;
                _out5027 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10594_toTpeGen = _out5027;
                RAST._IExpr _10595_recursiveGen;
                DCOMPUTF16._IOwnership _10596_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10597_recIdents;
                RAST._IExpr _out5028;
                DCOMPUTF16._IOwnership _out5029;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5030;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5028, out _out5029, out _out5030);
                _10595_recursiveGen = _out5028;
                _10596_recOwned = _out5029;
                _10597_recIdents = _out5030;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10595_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10593_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10594_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5031;
                DCOMPUTF16._IOwnership _out5032;
                DCOMPUTF16.COMP.FromOwnership(r, _10596_recOwned, expectedOwnership, out _out5031, out _out5032);
                r = _out5031;
                resultingOwnership = _out5032;
                readIdents = _10597_recIdents;
              }
            } else if (_source606.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10598___mcc_h466 = _source606.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10599___mcc_h467 = _source606.dtor_attributes;
              {
                RAST._IType _10600_fromTpeGen;
                RAST._IType _out5033;
                _out5033 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10600_fromTpeGen = _out5033;
                RAST._IType _10601_toTpeGen;
                RAST._IType _out5034;
                _out5034 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10601_toTpeGen = _out5034;
                RAST._IExpr _10602_recursiveGen;
                DCOMPUTF16._IOwnership _10603_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10604_recIdents;
                RAST._IExpr _out5035;
                DCOMPUTF16._IOwnership _out5036;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5037;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5035, out _out5036, out _out5037);
                _10602_recursiveGen = _out5035;
                _10603_recOwned = _out5036;
                _10604_recIdents = _out5037;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10602_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10600_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10601_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5038;
                DCOMPUTF16._IOwnership _out5039;
                DCOMPUTF16.COMP.FromOwnership(r, _10603_recOwned, expectedOwnership, out _out5038, out _out5039);
                r = _out5038;
                resultingOwnership = _out5039;
                readIdents = _10604_recIdents;
              }
            } else {
              DAST._IType _10605___mcc_h470 = _source606.dtor_baseType;
              DAST._INewtypeRange _10606___mcc_h471 = _source606.dtor_range;
              bool _10607___mcc_h472 = _source606.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10608___mcc_h473 = _source606.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10609_attributes = _10608___mcc_h473;
              bool _10610_erase = _10607___mcc_h472;
              DAST._INewtypeRange _10611_range = _10606___mcc_h471;
              DAST._IType _10612_b = _10605___mcc_h470;
              {
                Std.Wrappers._IOption<RAST._IType> _10613_nativeToType;
                _10613_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10612_b, _10611_range);
                if (object.Equals(_9567_fromTpe, _10612_b)) {
                  RAST._IExpr _10614_recursiveGen;
                  DCOMPUTF16._IOwnership _10615_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10616_recIdents;
                  RAST._IExpr _out5040;
                  DCOMPUTF16._IOwnership _out5041;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5042;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5040, out _out5041, out _out5042);
                  _10614_recursiveGen = _out5040;
                  _10615_recOwned = _out5041;
                  _10616_recIdents = _out5042;
                  readIdents = _10616_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source607 = _10613_nativeToType;
                  if (_source607.is_None) {
                    if (_10610_erase) {
                      r = _10614_recursiveGen;
                    } else {
                      RAST._IType _10617_rhsType;
                      RAST._IType _out5043;
                      _out5043 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _10617_rhsType = _out5043;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10617_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10614_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5044;
                    DCOMPUTF16._IOwnership _out5045;
                    DCOMPUTF16.COMP.FromOwnership(r, _10615_recOwned, expectedOwnership, out _out5044, out _out5045);
                    r = _out5044;
                    resultingOwnership = _out5045;
                  } else {
                    RAST._IType _10618___mcc_h1648 = _source607.dtor_value;
                    RAST._IType _10619_v = _10618___mcc_h1648;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10614_recursiveGen, RAST.Expr.create_ExprFromType(_10619_v)));
                    RAST._IExpr _out5046;
                    DCOMPUTF16._IOwnership _out5047;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5046, out _out5047);
                    r = _out5046;
                    resultingOwnership = _out5047;
                  }
                } else {
                  if ((_10613_nativeToType).is_Some) {
                    DAST._IType _source608 = _9567_fromTpe;
                    if (_source608.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10620___mcc_h1649 = _source608.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10621___mcc_h1650 = _source608.dtor_typeArgs;
                      DAST._IResolvedType _10622___mcc_h1651 = _source608.dtor_resolved;
                      DAST._IResolvedType _source609 = _10622___mcc_h1651;
                      if (_source609.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10623___mcc_h1655 = _source609.dtor_datatypeType;
                      } else if (_source609.is_Datatype) {
                        DAST._IDatatypeType _10624___mcc_h1657 = _source609.dtor_datatypeType;
                      } else if (_source609.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10625___mcc_h1659 = _source609.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10626___mcc_h1660 = _source609.dtor_attributes;
                      } else {
                        DAST._IType _10627___mcc_h1663 = _source609.dtor_baseType;
                        DAST._INewtypeRange _10628___mcc_h1664 = _source609.dtor_range;
                        bool _10629___mcc_h1665 = _source609.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10630___mcc_h1666 = _source609.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10631_attributes0 = _10630___mcc_h1666;
                        bool _10632_erase0 = _10629___mcc_h1665;
                        DAST._INewtypeRange _10633_range0 = _10628___mcc_h1664;
                        DAST._IType _10634_b0 = _10627___mcc_h1663;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10635_nativeFromType;
                          _10635_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10634_b0, _10633_range0);
                          if ((_10635_nativeFromType).is_Some) {
                            RAST._IExpr _10636_recursiveGen;
                            DCOMPUTF16._IOwnership _10637_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10638_recIdents;
                            RAST._IExpr _out5048;
                            DCOMPUTF16._IOwnership _out5049;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5050;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5048, out _out5049, out _out5050);
                            _10636_recursiveGen = _out5048;
                            _10637_recOwned = _out5049;
                            _10638_recIdents = _out5050;
                            RAST._IExpr _out5051;
                            DCOMPUTF16._IOwnership _out5052;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10636_recursiveGen, (_10613_nativeToType).dtor_value), _10637_recOwned, expectedOwnership, out _out5051, out _out5052);
                            r = _out5051;
                            resultingOwnership = _out5052;
                            readIdents = _10638_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source608.is_Nullable) {
                      DAST._IType _10639___mcc_h1671 = _source608.dtor_Nullable_a0;
                    } else if (_source608.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10640___mcc_h1673 = _source608.dtor_Tuple_a0;
                    } else if (_source608.is_Array) {
                      DAST._IType _10641___mcc_h1675 = _source608.dtor_element;
                      BigInteger _10642___mcc_h1676 = _source608.dtor_dims;
                    } else if (_source608.is_Seq) {
                      DAST._IType _10643___mcc_h1679 = _source608.dtor_element;
                    } else if (_source608.is_Set) {
                      DAST._IType _10644___mcc_h1681 = _source608.dtor_element;
                    } else if (_source608.is_Multiset) {
                      DAST._IType _10645___mcc_h1683 = _source608.dtor_element;
                    } else if (_source608.is_Map) {
                      DAST._IType _10646___mcc_h1685 = _source608.dtor_key;
                      DAST._IType _10647___mcc_h1686 = _source608.dtor_value;
                    } else if (_source608.is_SetBuilder) {
                      DAST._IType _10648___mcc_h1689 = _source608.dtor_element;
                    } else if (_source608.is_MapBuilder) {
                      DAST._IType _10649___mcc_h1691 = _source608.dtor_key;
                      DAST._IType _10650___mcc_h1692 = _source608.dtor_value;
                    } else if (_source608.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10651___mcc_h1695 = _source608.dtor_args;
                      DAST._IType _10652___mcc_h1696 = _source608.dtor_result;
                    } else if (_source608.is_Primitive) {
                      DAST._IPrimitive _10653___mcc_h1699 = _source608.dtor_Primitive_a0;
                    } else if (_source608.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10654___mcc_h1701 = _source608.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10655___mcc_h1703 = _source608.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10656_recursiveGen;
                      DCOMPUTF16._IOwnership _10657_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10658_recIdents;
                      RAST._IExpr _out5053;
                      DCOMPUTF16._IOwnership _out5054;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5055;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5053, out _out5054, out _out5055);
                      _10656_recursiveGen = _out5053;
                      _10657_recOwned = _out5054;
                      _10658_recIdents = _out5055;
                      RAST._IExpr _out5056;
                      DCOMPUTF16._IOwnership _out5057;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10656_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10613_nativeToType).dtor_value), _10657_recOwned, expectedOwnership, out _out5056, out _out5057);
                      r = _out5056;
                      resultingOwnership = _out5057;
                      readIdents = _10658_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5058;
                  DCOMPUTF16._IOwnership _out5059;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5060;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10612_b), _10612_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out5058, out _out5059, out _out5060);
                  r = _out5058;
                  resultingOwnership = _out5059;
                  readIdents = _out5060;
                }
              }
            }
          } else if (_source605.is_Nullable) {
            DAST._IType _10659___mcc_h478 = _source605.dtor_Nullable_a0;
            {
              RAST._IExpr _10660_recursiveGen;
              DCOMPUTF16._IOwnership _10661_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10662_recIdents;
              RAST._IExpr _out5061;
              DCOMPUTF16._IOwnership _out5062;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5063;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5061, out _out5062, out _out5063);
              _10660_recursiveGen = _out5061;
              _10661_recOwned = _out5062;
              _10662_recIdents = _out5063;
              r = _10660_recursiveGen;
              if (object.Equals(_10661_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5064;
              DCOMPUTF16._IOwnership _out5065;
              DCOMPUTF16.COMP.FromOwnership(r, _10661_recOwned, expectedOwnership, out _out5064, out _out5065);
              r = _out5064;
              resultingOwnership = _out5065;
              readIdents = _10662_recIdents;
            }
          } else if (_source605.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10663___mcc_h480 = _source605.dtor_Tuple_a0;
            {
              RAST._IType _10664_fromTpeGen;
              RAST._IType _out5066;
              _out5066 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10664_fromTpeGen = _out5066;
              RAST._IType _10665_toTpeGen;
              RAST._IType _out5067;
              _out5067 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10665_toTpeGen = _out5067;
              RAST._IExpr _10666_recursiveGen;
              DCOMPUTF16._IOwnership _10667_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10668_recIdents;
              RAST._IExpr _out5068;
              DCOMPUTF16._IOwnership _out5069;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5070;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5068, out _out5069, out _out5070);
              _10666_recursiveGen = _out5068;
              _10667_recOwned = _out5069;
              _10668_recIdents = _out5070;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10666_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10664_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10665_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5071;
              DCOMPUTF16._IOwnership _out5072;
              DCOMPUTF16.COMP.FromOwnership(r, _10667_recOwned, expectedOwnership, out _out5071, out _out5072);
              r = _out5071;
              resultingOwnership = _out5072;
              readIdents = _10668_recIdents;
            }
          } else if (_source605.is_Array) {
            DAST._IType _10669___mcc_h482 = _source605.dtor_element;
            BigInteger _10670___mcc_h483 = _source605.dtor_dims;
            {
              RAST._IType _10671_fromTpeGen;
              RAST._IType _out5073;
              _out5073 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10671_fromTpeGen = _out5073;
              RAST._IType _10672_toTpeGen;
              RAST._IType _out5074;
              _out5074 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10672_toTpeGen = _out5074;
              RAST._IExpr _10673_recursiveGen;
              DCOMPUTF16._IOwnership _10674_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10675_recIdents;
              RAST._IExpr _out5075;
              DCOMPUTF16._IOwnership _out5076;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5077;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5075, out _out5076, out _out5077);
              _10673_recursiveGen = _out5075;
              _10674_recOwned = _out5076;
              _10675_recIdents = _out5077;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10673_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10671_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10672_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5078;
              DCOMPUTF16._IOwnership _out5079;
              DCOMPUTF16.COMP.FromOwnership(r, _10674_recOwned, expectedOwnership, out _out5078, out _out5079);
              r = _out5078;
              resultingOwnership = _out5079;
              readIdents = _10675_recIdents;
            }
          } else if (_source605.is_Seq) {
            DAST._IType _10676___mcc_h486 = _source605.dtor_element;
            {
              RAST._IType _10677_fromTpeGen;
              RAST._IType _out5080;
              _out5080 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10677_fromTpeGen = _out5080;
              RAST._IType _10678_toTpeGen;
              RAST._IType _out5081;
              _out5081 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10678_toTpeGen = _out5081;
              RAST._IExpr _10679_recursiveGen;
              DCOMPUTF16._IOwnership _10680_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10681_recIdents;
              RAST._IExpr _out5082;
              DCOMPUTF16._IOwnership _out5083;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5084;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5082, out _out5083, out _out5084);
              _10679_recursiveGen = _out5082;
              _10680_recOwned = _out5083;
              _10681_recIdents = _out5084;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10679_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10677_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10678_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5085;
              DCOMPUTF16._IOwnership _out5086;
              DCOMPUTF16.COMP.FromOwnership(r, _10680_recOwned, expectedOwnership, out _out5085, out _out5086);
              r = _out5085;
              resultingOwnership = _out5086;
              readIdents = _10681_recIdents;
            }
          } else if (_source605.is_Set) {
            DAST._IType _10682___mcc_h488 = _source605.dtor_element;
            {
              RAST._IType _10683_fromTpeGen;
              RAST._IType _out5087;
              _out5087 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10683_fromTpeGen = _out5087;
              RAST._IType _10684_toTpeGen;
              RAST._IType _out5088;
              _out5088 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10684_toTpeGen = _out5088;
              RAST._IExpr _10685_recursiveGen;
              DCOMPUTF16._IOwnership _10686_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10687_recIdents;
              RAST._IExpr _out5089;
              DCOMPUTF16._IOwnership _out5090;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5091;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5089, out _out5090, out _out5091);
              _10685_recursiveGen = _out5089;
              _10686_recOwned = _out5090;
              _10687_recIdents = _out5091;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10685_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10683_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10684_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5092;
              DCOMPUTF16._IOwnership _out5093;
              DCOMPUTF16.COMP.FromOwnership(r, _10686_recOwned, expectedOwnership, out _out5092, out _out5093);
              r = _out5092;
              resultingOwnership = _out5093;
              readIdents = _10687_recIdents;
            }
          } else if (_source605.is_Multiset) {
            DAST._IType _10688___mcc_h490 = _source605.dtor_element;
            {
              RAST._IType _10689_fromTpeGen;
              RAST._IType _out5094;
              _out5094 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10689_fromTpeGen = _out5094;
              RAST._IType _10690_toTpeGen;
              RAST._IType _out5095;
              _out5095 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10690_toTpeGen = _out5095;
              RAST._IExpr _10691_recursiveGen;
              DCOMPUTF16._IOwnership _10692_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10693_recIdents;
              RAST._IExpr _out5096;
              DCOMPUTF16._IOwnership _out5097;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5098;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5096, out _out5097, out _out5098);
              _10691_recursiveGen = _out5096;
              _10692_recOwned = _out5097;
              _10693_recIdents = _out5098;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10691_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10689_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10690_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5099;
              DCOMPUTF16._IOwnership _out5100;
              DCOMPUTF16.COMP.FromOwnership(r, _10692_recOwned, expectedOwnership, out _out5099, out _out5100);
              r = _out5099;
              resultingOwnership = _out5100;
              readIdents = _10693_recIdents;
            }
          } else if (_source605.is_Map) {
            DAST._IType _10694___mcc_h492 = _source605.dtor_key;
            DAST._IType _10695___mcc_h493 = _source605.dtor_value;
            {
              RAST._IType _10696_fromTpeGen;
              RAST._IType _out5101;
              _out5101 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10696_fromTpeGen = _out5101;
              RAST._IType _10697_toTpeGen;
              RAST._IType _out5102;
              _out5102 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10697_toTpeGen = _out5102;
              RAST._IExpr _10698_recursiveGen;
              DCOMPUTF16._IOwnership _10699_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10700_recIdents;
              RAST._IExpr _out5103;
              DCOMPUTF16._IOwnership _out5104;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5105;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5103, out _out5104, out _out5105);
              _10698_recursiveGen = _out5103;
              _10699_recOwned = _out5104;
              _10700_recIdents = _out5105;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10698_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10696_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10697_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5106;
              DCOMPUTF16._IOwnership _out5107;
              DCOMPUTF16.COMP.FromOwnership(r, _10699_recOwned, expectedOwnership, out _out5106, out _out5107);
              r = _out5106;
              resultingOwnership = _out5107;
              readIdents = _10700_recIdents;
            }
          } else if (_source605.is_SetBuilder) {
            DAST._IType _10701___mcc_h496 = _source605.dtor_element;
            {
              RAST._IType _10702_fromTpeGen;
              RAST._IType _out5108;
              _out5108 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10702_fromTpeGen = _out5108;
              RAST._IType _10703_toTpeGen;
              RAST._IType _out5109;
              _out5109 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10703_toTpeGen = _out5109;
              RAST._IExpr _10704_recursiveGen;
              DCOMPUTF16._IOwnership _10705_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10706_recIdents;
              RAST._IExpr _out5110;
              DCOMPUTF16._IOwnership _out5111;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5112;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5110, out _out5111, out _out5112);
              _10704_recursiveGen = _out5110;
              _10705_recOwned = _out5111;
              _10706_recIdents = _out5112;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10704_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10702_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10703_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5113;
              DCOMPUTF16._IOwnership _out5114;
              DCOMPUTF16.COMP.FromOwnership(r, _10705_recOwned, expectedOwnership, out _out5113, out _out5114);
              r = _out5113;
              resultingOwnership = _out5114;
              readIdents = _10706_recIdents;
            }
          } else if (_source605.is_MapBuilder) {
            DAST._IType _10707___mcc_h498 = _source605.dtor_key;
            DAST._IType _10708___mcc_h499 = _source605.dtor_value;
            {
              RAST._IType _10709_fromTpeGen;
              RAST._IType _out5115;
              _out5115 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10709_fromTpeGen = _out5115;
              RAST._IType _10710_toTpeGen;
              RAST._IType _out5116;
              _out5116 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10710_toTpeGen = _out5116;
              RAST._IExpr _10711_recursiveGen;
              DCOMPUTF16._IOwnership _10712_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10713_recIdents;
              RAST._IExpr _out5117;
              DCOMPUTF16._IOwnership _out5118;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5119;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5117, out _out5118, out _out5119);
              _10711_recursiveGen = _out5117;
              _10712_recOwned = _out5118;
              _10713_recIdents = _out5119;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10711_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10709_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10710_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5120;
              DCOMPUTF16._IOwnership _out5121;
              DCOMPUTF16.COMP.FromOwnership(r, _10712_recOwned, expectedOwnership, out _out5120, out _out5121);
              r = _out5120;
              resultingOwnership = _out5121;
              readIdents = _10713_recIdents;
            }
          } else if (_source605.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10714___mcc_h502 = _source605.dtor_args;
            DAST._IType _10715___mcc_h503 = _source605.dtor_result;
            {
              RAST._IType _10716_fromTpeGen;
              RAST._IType _out5122;
              _out5122 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10716_fromTpeGen = _out5122;
              RAST._IType _10717_toTpeGen;
              RAST._IType _out5123;
              _out5123 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10717_toTpeGen = _out5123;
              RAST._IExpr _10718_recursiveGen;
              DCOMPUTF16._IOwnership _10719_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10720_recIdents;
              RAST._IExpr _out5124;
              DCOMPUTF16._IOwnership _out5125;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5126;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5124, out _out5125, out _out5126);
              _10718_recursiveGen = _out5124;
              _10719_recOwned = _out5125;
              _10720_recIdents = _out5126;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10718_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10716_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10717_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5127;
              DCOMPUTF16._IOwnership _out5128;
              DCOMPUTF16.COMP.FromOwnership(r, _10719_recOwned, expectedOwnership, out _out5127, out _out5128);
              r = _out5127;
              resultingOwnership = _out5128;
              readIdents = _10720_recIdents;
            }
          } else if (_source605.is_Primitive) {
            DAST._IPrimitive _10721___mcc_h506 = _source605.dtor_Primitive_a0;
            {
              RAST._IType _10722_fromTpeGen;
              RAST._IType _out5129;
              _out5129 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10722_fromTpeGen = _out5129;
              RAST._IType _10723_toTpeGen;
              RAST._IType _out5130;
              _out5130 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10723_toTpeGen = _out5130;
              RAST._IExpr _10724_recursiveGen;
              DCOMPUTF16._IOwnership _10725_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10726_recIdents;
              RAST._IExpr _out5131;
              DCOMPUTF16._IOwnership _out5132;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5133;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5131, out _out5132, out _out5133);
              _10724_recursiveGen = _out5131;
              _10725_recOwned = _out5132;
              _10726_recIdents = _out5133;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10724_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10722_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10723_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5134;
              DCOMPUTF16._IOwnership _out5135;
              DCOMPUTF16.COMP.FromOwnership(r, _10725_recOwned, expectedOwnership, out _out5134, out _out5135);
              r = _out5134;
              resultingOwnership = _out5135;
              readIdents = _10726_recIdents;
            }
          } else if (_source605.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10727___mcc_h508 = _source605.dtor_Passthrough_a0;
            {
              RAST._IType _10728_fromTpeGen;
              RAST._IType _out5136;
              _out5136 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10728_fromTpeGen = _out5136;
              RAST._IType _10729_toTpeGen;
              RAST._IType _out5137;
              _out5137 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10729_toTpeGen = _out5137;
              RAST._IExpr _10730_recursiveGen;
              DCOMPUTF16._IOwnership _10731_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10732_recIdents;
              RAST._IExpr _out5138;
              DCOMPUTF16._IOwnership _out5139;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5140;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5138, out _out5139, out _out5140);
              _10730_recursiveGen = _out5138;
              _10731_recOwned = _out5139;
              _10732_recIdents = _out5140;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10730_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10728_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10729_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5141;
              DCOMPUTF16._IOwnership _out5142;
              DCOMPUTF16.COMP.FromOwnership(r, _10731_recOwned, expectedOwnership, out _out5141, out _out5142);
              r = _out5141;
              resultingOwnership = _out5142;
              readIdents = _10732_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10733___mcc_h510 = _source605.dtor_TypeArg_a0;
            {
              RAST._IType _10734_fromTpeGen;
              RAST._IType _out5143;
              _out5143 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10734_fromTpeGen = _out5143;
              RAST._IType _10735_toTpeGen;
              RAST._IType _out5144;
              _out5144 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10735_toTpeGen = _out5144;
              RAST._IExpr _10736_recursiveGen;
              DCOMPUTF16._IOwnership _10737_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10738_recIdents;
              RAST._IExpr _out5145;
              DCOMPUTF16._IOwnership _out5146;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5147;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5145, out _out5146, out _out5147);
              _10736_recursiveGen = _out5145;
              _10737_recOwned = _out5146;
              _10738_recIdents = _out5147;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10736_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10734_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10735_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5148;
              DCOMPUTF16._IOwnership _out5149;
              DCOMPUTF16.COMP.FromOwnership(r, _10737_recOwned, expectedOwnership, out _out5148, out _out5149);
              r = _out5148;
              resultingOwnership = _out5149;
              readIdents = _10738_recIdents;
            }
          }
        } else if (_source561.is_Seq) {
          DAST._IType _10739___mcc_h512 = _source561.dtor_element;
          DAST._IType _source610 = _9573___mcc_h1;
          if (_source610.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10740___mcc_h516 = _source610.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10741___mcc_h517 = _source610.dtor_typeArgs;
            DAST._IResolvedType _10742___mcc_h518 = _source610.dtor_resolved;
            DAST._IResolvedType _source611 = _10742___mcc_h518;
            if (_source611.is_AllocatedDatatype) {
              DAST._IDatatypeType _10743___mcc_h522 = _source611.dtor_datatypeType;
              {
                RAST._IType _10744_fromTpeGen;
                RAST._IType _out5150;
                _out5150 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10744_fromTpeGen = _out5150;
                RAST._IType _10745_toTpeGen;
                RAST._IType _out5151;
                _out5151 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10745_toTpeGen = _out5151;
                RAST._IExpr _10746_recursiveGen;
                DCOMPUTF16._IOwnership _10747_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10748_recIdents;
                RAST._IExpr _out5152;
                DCOMPUTF16._IOwnership _out5153;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5154;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5152, out _out5153, out _out5154);
                _10746_recursiveGen = _out5152;
                _10747_recOwned = _out5153;
                _10748_recIdents = _out5154;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10746_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10744_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10745_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5155;
                DCOMPUTF16._IOwnership _out5156;
                DCOMPUTF16.COMP.FromOwnership(r, _10747_recOwned, expectedOwnership, out _out5155, out _out5156);
                r = _out5155;
                resultingOwnership = _out5156;
                readIdents = _10748_recIdents;
              }
            } else if (_source611.is_Datatype) {
              DAST._IDatatypeType _10749___mcc_h524 = _source611.dtor_datatypeType;
              {
                RAST._IType _10750_fromTpeGen;
                RAST._IType _out5157;
                _out5157 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10750_fromTpeGen = _out5157;
                RAST._IType _10751_toTpeGen;
                RAST._IType _out5158;
                _out5158 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10751_toTpeGen = _out5158;
                RAST._IExpr _10752_recursiveGen;
                DCOMPUTF16._IOwnership _10753_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10754_recIdents;
                RAST._IExpr _out5159;
                DCOMPUTF16._IOwnership _out5160;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5161;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5159, out _out5160, out _out5161);
                _10752_recursiveGen = _out5159;
                _10753_recOwned = _out5160;
                _10754_recIdents = _out5161;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10752_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10750_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10751_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5162;
                DCOMPUTF16._IOwnership _out5163;
                DCOMPUTF16.COMP.FromOwnership(r, _10753_recOwned, expectedOwnership, out _out5162, out _out5163);
                r = _out5162;
                resultingOwnership = _out5163;
                readIdents = _10754_recIdents;
              }
            } else if (_source611.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10755___mcc_h526 = _source611.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10756___mcc_h527 = _source611.dtor_attributes;
              {
                RAST._IType _10757_fromTpeGen;
                RAST._IType _out5164;
                _out5164 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10757_fromTpeGen = _out5164;
                RAST._IType _10758_toTpeGen;
                RAST._IType _out5165;
                _out5165 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10758_toTpeGen = _out5165;
                RAST._IExpr _10759_recursiveGen;
                DCOMPUTF16._IOwnership _10760_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10761_recIdents;
                RAST._IExpr _out5166;
                DCOMPUTF16._IOwnership _out5167;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5168;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5166, out _out5167, out _out5168);
                _10759_recursiveGen = _out5166;
                _10760_recOwned = _out5167;
                _10761_recIdents = _out5168;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10759_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10757_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10758_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5169;
                DCOMPUTF16._IOwnership _out5170;
                DCOMPUTF16.COMP.FromOwnership(r, _10760_recOwned, expectedOwnership, out _out5169, out _out5170);
                r = _out5169;
                resultingOwnership = _out5170;
                readIdents = _10761_recIdents;
              }
            } else {
              DAST._IType _10762___mcc_h530 = _source611.dtor_baseType;
              DAST._INewtypeRange _10763___mcc_h531 = _source611.dtor_range;
              bool _10764___mcc_h532 = _source611.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10765___mcc_h533 = _source611.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10766_attributes = _10765___mcc_h533;
              bool _10767_erase = _10764___mcc_h532;
              DAST._INewtypeRange _10768_range = _10763___mcc_h531;
              DAST._IType _10769_b = _10762___mcc_h530;
              {
                Std.Wrappers._IOption<RAST._IType> _10770_nativeToType;
                _10770_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10769_b, _10768_range);
                if (object.Equals(_9567_fromTpe, _10769_b)) {
                  RAST._IExpr _10771_recursiveGen;
                  DCOMPUTF16._IOwnership _10772_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10773_recIdents;
                  RAST._IExpr _out5171;
                  DCOMPUTF16._IOwnership _out5172;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5173;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5171, out _out5172, out _out5173);
                  _10771_recursiveGen = _out5171;
                  _10772_recOwned = _out5172;
                  _10773_recIdents = _out5173;
                  readIdents = _10773_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source612 = _10770_nativeToType;
                  if (_source612.is_None) {
                    if (_10767_erase) {
                      r = _10771_recursiveGen;
                    } else {
                      RAST._IType _10774_rhsType;
                      RAST._IType _out5174;
                      _out5174 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _10774_rhsType = _out5174;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10774_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10771_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5175;
                    DCOMPUTF16._IOwnership _out5176;
                    DCOMPUTF16.COMP.FromOwnership(r, _10772_recOwned, expectedOwnership, out _out5175, out _out5176);
                    r = _out5175;
                    resultingOwnership = _out5176;
                  } else {
                    RAST._IType _10775___mcc_h1705 = _source612.dtor_value;
                    RAST._IType _10776_v = _10775___mcc_h1705;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10771_recursiveGen, RAST.Expr.create_ExprFromType(_10776_v)));
                    RAST._IExpr _out5177;
                    DCOMPUTF16._IOwnership _out5178;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5177, out _out5178);
                    r = _out5177;
                    resultingOwnership = _out5178;
                  }
                } else {
                  if ((_10770_nativeToType).is_Some) {
                    DAST._IType _source613 = _9567_fromTpe;
                    if (_source613.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10777___mcc_h1706 = _source613.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10778___mcc_h1707 = _source613.dtor_typeArgs;
                      DAST._IResolvedType _10779___mcc_h1708 = _source613.dtor_resolved;
                      DAST._IResolvedType _source614 = _10779___mcc_h1708;
                      if (_source614.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10780___mcc_h1712 = _source614.dtor_datatypeType;
                      } else if (_source614.is_Datatype) {
                        DAST._IDatatypeType _10781___mcc_h1714 = _source614.dtor_datatypeType;
                      } else if (_source614.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10782___mcc_h1716 = _source614.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10783___mcc_h1717 = _source614.dtor_attributes;
                      } else {
                        DAST._IType _10784___mcc_h1720 = _source614.dtor_baseType;
                        DAST._INewtypeRange _10785___mcc_h1721 = _source614.dtor_range;
                        bool _10786___mcc_h1722 = _source614.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10787___mcc_h1723 = _source614.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10788_attributes0 = _10787___mcc_h1723;
                        bool _10789_erase0 = _10786___mcc_h1722;
                        DAST._INewtypeRange _10790_range0 = _10785___mcc_h1721;
                        DAST._IType _10791_b0 = _10784___mcc_h1720;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10792_nativeFromType;
                          _10792_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10791_b0, _10790_range0);
                          if ((_10792_nativeFromType).is_Some) {
                            RAST._IExpr _10793_recursiveGen;
                            DCOMPUTF16._IOwnership _10794_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10795_recIdents;
                            RAST._IExpr _out5179;
                            DCOMPUTF16._IOwnership _out5180;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5181;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5179, out _out5180, out _out5181);
                            _10793_recursiveGen = _out5179;
                            _10794_recOwned = _out5180;
                            _10795_recIdents = _out5181;
                            RAST._IExpr _out5182;
                            DCOMPUTF16._IOwnership _out5183;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10793_recursiveGen, (_10770_nativeToType).dtor_value), _10794_recOwned, expectedOwnership, out _out5182, out _out5183);
                            r = _out5182;
                            resultingOwnership = _out5183;
                            readIdents = _10795_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source613.is_Nullable) {
                      DAST._IType _10796___mcc_h1728 = _source613.dtor_Nullable_a0;
                    } else if (_source613.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10797___mcc_h1730 = _source613.dtor_Tuple_a0;
                    } else if (_source613.is_Array) {
                      DAST._IType _10798___mcc_h1732 = _source613.dtor_element;
                      BigInteger _10799___mcc_h1733 = _source613.dtor_dims;
                    } else if (_source613.is_Seq) {
                      DAST._IType _10800___mcc_h1736 = _source613.dtor_element;
                    } else if (_source613.is_Set) {
                      DAST._IType _10801___mcc_h1738 = _source613.dtor_element;
                    } else if (_source613.is_Multiset) {
                      DAST._IType _10802___mcc_h1740 = _source613.dtor_element;
                    } else if (_source613.is_Map) {
                      DAST._IType _10803___mcc_h1742 = _source613.dtor_key;
                      DAST._IType _10804___mcc_h1743 = _source613.dtor_value;
                    } else if (_source613.is_SetBuilder) {
                      DAST._IType _10805___mcc_h1746 = _source613.dtor_element;
                    } else if (_source613.is_MapBuilder) {
                      DAST._IType _10806___mcc_h1748 = _source613.dtor_key;
                      DAST._IType _10807___mcc_h1749 = _source613.dtor_value;
                    } else if (_source613.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10808___mcc_h1752 = _source613.dtor_args;
                      DAST._IType _10809___mcc_h1753 = _source613.dtor_result;
                    } else if (_source613.is_Primitive) {
                      DAST._IPrimitive _10810___mcc_h1756 = _source613.dtor_Primitive_a0;
                    } else if (_source613.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10811___mcc_h1758 = _source613.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10812___mcc_h1760 = _source613.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10813_recursiveGen;
                      DCOMPUTF16._IOwnership _10814_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10815_recIdents;
                      RAST._IExpr _out5184;
                      DCOMPUTF16._IOwnership _out5185;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5186;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5184, out _out5185, out _out5186);
                      _10813_recursiveGen = _out5184;
                      _10814_recOwned = _out5185;
                      _10815_recIdents = _out5186;
                      RAST._IExpr _out5187;
                      DCOMPUTF16._IOwnership _out5188;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10813_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10770_nativeToType).dtor_value), _10814_recOwned, expectedOwnership, out _out5187, out _out5188);
                      r = _out5187;
                      resultingOwnership = _out5188;
                      readIdents = _10815_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5189;
                  DCOMPUTF16._IOwnership _out5190;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5191;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10769_b), _10769_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out5189, out _out5190, out _out5191);
                  r = _out5189;
                  resultingOwnership = _out5190;
                  readIdents = _out5191;
                }
              }
            }
          } else if (_source610.is_Nullable) {
            DAST._IType _10816___mcc_h538 = _source610.dtor_Nullable_a0;
            {
              RAST._IExpr _10817_recursiveGen;
              DCOMPUTF16._IOwnership _10818_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10819_recIdents;
              RAST._IExpr _out5192;
              DCOMPUTF16._IOwnership _out5193;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5194;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5192, out _out5193, out _out5194);
              _10817_recursiveGen = _out5192;
              _10818_recOwned = _out5193;
              _10819_recIdents = _out5194;
              r = _10817_recursiveGen;
              if (object.Equals(_10818_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5195;
              DCOMPUTF16._IOwnership _out5196;
              DCOMPUTF16.COMP.FromOwnership(r, _10818_recOwned, expectedOwnership, out _out5195, out _out5196);
              r = _out5195;
              resultingOwnership = _out5196;
              readIdents = _10819_recIdents;
            }
          } else if (_source610.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10820___mcc_h540 = _source610.dtor_Tuple_a0;
            {
              RAST._IType _10821_fromTpeGen;
              RAST._IType _out5197;
              _out5197 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10821_fromTpeGen = _out5197;
              RAST._IType _10822_toTpeGen;
              RAST._IType _out5198;
              _out5198 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10822_toTpeGen = _out5198;
              RAST._IExpr _10823_recursiveGen;
              DCOMPUTF16._IOwnership _10824_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10825_recIdents;
              RAST._IExpr _out5199;
              DCOMPUTF16._IOwnership _out5200;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5201;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5199, out _out5200, out _out5201);
              _10823_recursiveGen = _out5199;
              _10824_recOwned = _out5200;
              _10825_recIdents = _out5201;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10823_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10821_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10822_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5202;
              DCOMPUTF16._IOwnership _out5203;
              DCOMPUTF16.COMP.FromOwnership(r, _10824_recOwned, expectedOwnership, out _out5202, out _out5203);
              r = _out5202;
              resultingOwnership = _out5203;
              readIdents = _10825_recIdents;
            }
          } else if (_source610.is_Array) {
            DAST._IType _10826___mcc_h542 = _source610.dtor_element;
            BigInteger _10827___mcc_h543 = _source610.dtor_dims;
            {
              RAST._IType _10828_fromTpeGen;
              RAST._IType _out5204;
              _out5204 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10828_fromTpeGen = _out5204;
              RAST._IType _10829_toTpeGen;
              RAST._IType _out5205;
              _out5205 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10829_toTpeGen = _out5205;
              RAST._IExpr _10830_recursiveGen;
              DCOMPUTF16._IOwnership _10831_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10832_recIdents;
              RAST._IExpr _out5206;
              DCOMPUTF16._IOwnership _out5207;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5208;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5206, out _out5207, out _out5208);
              _10830_recursiveGen = _out5206;
              _10831_recOwned = _out5207;
              _10832_recIdents = _out5208;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10830_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10828_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10829_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5209;
              DCOMPUTF16._IOwnership _out5210;
              DCOMPUTF16.COMP.FromOwnership(r, _10831_recOwned, expectedOwnership, out _out5209, out _out5210);
              r = _out5209;
              resultingOwnership = _out5210;
              readIdents = _10832_recIdents;
            }
          } else if (_source610.is_Seq) {
            DAST._IType _10833___mcc_h546 = _source610.dtor_element;
            {
              RAST._IType _10834_fromTpeGen;
              RAST._IType _out5211;
              _out5211 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10834_fromTpeGen = _out5211;
              RAST._IType _10835_toTpeGen;
              RAST._IType _out5212;
              _out5212 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10835_toTpeGen = _out5212;
              RAST._IExpr _10836_recursiveGen;
              DCOMPUTF16._IOwnership _10837_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10838_recIdents;
              RAST._IExpr _out5213;
              DCOMPUTF16._IOwnership _out5214;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5215;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5213, out _out5214, out _out5215);
              _10836_recursiveGen = _out5213;
              _10837_recOwned = _out5214;
              _10838_recIdents = _out5215;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10836_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10834_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10835_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5216;
              DCOMPUTF16._IOwnership _out5217;
              DCOMPUTF16.COMP.FromOwnership(r, _10837_recOwned, expectedOwnership, out _out5216, out _out5217);
              r = _out5216;
              resultingOwnership = _out5217;
              readIdents = _10838_recIdents;
            }
          } else if (_source610.is_Set) {
            DAST._IType _10839___mcc_h548 = _source610.dtor_element;
            {
              RAST._IType _10840_fromTpeGen;
              RAST._IType _out5218;
              _out5218 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10840_fromTpeGen = _out5218;
              RAST._IType _10841_toTpeGen;
              RAST._IType _out5219;
              _out5219 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10841_toTpeGen = _out5219;
              RAST._IExpr _10842_recursiveGen;
              DCOMPUTF16._IOwnership _10843_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10844_recIdents;
              RAST._IExpr _out5220;
              DCOMPUTF16._IOwnership _out5221;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5222;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5220, out _out5221, out _out5222);
              _10842_recursiveGen = _out5220;
              _10843_recOwned = _out5221;
              _10844_recIdents = _out5222;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10842_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10840_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10841_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5223;
              DCOMPUTF16._IOwnership _out5224;
              DCOMPUTF16.COMP.FromOwnership(r, _10843_recOwned, expectedOwnership, out _out5223, out _out5224);
              r = _out5223;
              resultingOwnership = _out5224;
              readIdents = _10844_recIdents;
            }
          } else if (_source610.is_Multiset) {
            DAST._IType _10845___mcc_h550 = _source610.dtor_element;
            {
              RAST._IType _10846_fromTpeGen;
              RAST._IType _out5225;
              _out5225 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10846_fromTpeGen = _out5225;
              RAST._IType _10847_toTpeGen;
              RAST._IType _out5226;
              _out5226 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10847_toTpeGen = _out5226;
              RAST._IExpr _10848_recursiveGen;
              DCOMPUTF16._IOwnership _10849_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10850_recIdents;
              RAST._IExpr _out5227;
              DCOMPUTF16._IOwnership _out5228;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5229;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5227, out _out5228, out _out5229);
              _10848_recursiveGen = _out5227;
              _10849_recOwned = _out5228;
              _10850_recIdents = _out5229;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10848_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10846_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10847_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5230;
              DCOMPUTF16._IOwnership _out5231;
              DCOMPUTF16.COMP.FromOwnership(r, _10849_recOwned, expectedOwnership, out _out5230, out _out5231);
              r = _out5230;
              resultingOwnership = _out5231;
              readIdents = _10850_recIdents;
            }
          } else if (_source610.is_Map) {
            DAST._IType _10851___mcc_h552 = _source610.dtor_key;
            DAST._IType _10852___mcc_h553 = _source610.dtor_value;
            {
              RAST._IType _10853_fromTpeGen;
              RAST._IType _out5232;
              _out5232 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10853_fromTpeGen = _out5232;
              RAST._IType _10854_toTpeGen;
              RAST._IType _out5233;
              _out5233 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10854_toTpeGen = _out5233;
              RAST._IExpr _10855_recursiveGen;
              DCOMPUTF16._IOwnership _10856_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10857_recIdents;
              RAST._IExpr _out5234;
              DCOMPUTF16._IOwnership _out5235;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5236;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5234, out _out5235, out _out5236);
              _10855_recursiveGen = _out5234;
              _10856_recOwned = _out5235;
              _10857_recIdents = _out5236;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10855_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10853_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10854_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5237;
              DCOMPUTF16._IOwnership _out5238;
              DCOMPUTF16.COMP.FromOwnership(r, _10856_recOwned, expectedOwnership, out _out5237, out _out5238);
              r = _out5237;
              resultingOwnership = _out5238;
              readIdents = _10857_recIdents;
            }
          } else if (_source610.is_SetBuilder) {
            DAST._IType _10858___mcc_h556 = _source610.dtor_element;
            {
              RAST._IType _10859_fromTpeGen;
              RAST._IType _out5239;
              _out5239 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10859_fromTpeGen = _out5239;
              RAST._IType _10860_toTpeGen;
              RAST._IType _out5240;
              _out5240 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10860_toTpeGen = _out5240;
              RAST._IExpr _10861_recursiveGen;
              DCOMPUTF16._IOwnership _10862_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10863_recIdents;
              RAST._IExpr _out5241;
              DCOMPUTF16._IOwnership _out5242;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5243;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5241, out _out5242, out _out5243);
              _10861_recursiveGen = _out5241;
              _10862_recOwned = _out5242;
              _10863_recIdents = _out5243;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10861_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10859_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10860_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5244;
              DCOMPUTF16._IOwnership _out5245;
              DCOMPUTF16.COMP.FromOwnership(r, _10862_recOwned, expectedOwnership, out _out5244, out _out5245);
              r = _out5244;
              resultingOwnership = _out5245;
              readIdents = _10863_recIdents;
            }
          } else if (_source610.is_MapBuilder) {
            DAST._IType _10864___mcc_h558 = _source610.dtor_key;
            DAST._IType _10865___mcc_h559 = _source610.dtor_value;
            {
              RAST._IType _10866_fromTpeGen;
              RAST._IType _out5246;
              _out5246 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10866_fromTpeGen = _out5246;
              RAST._IType _10867_toTpeGen;
              RAST._IType _out5247;
              _out5247 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10867_toTpeGen = _out5247;
              RAST._IExpr _10868_recursiveGen;
              DCOMPUTF16._IOwnership _10869_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10870_recIdents;
              RAST._IExpr _out5248;
              DCOMPUTF16._IOwnership _out5249;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5250;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5248, out _out5249, out _out5250);
              _10868_recursiveGen = _out5248;
              _10869_recOwned = _out5249;
              _10870_recIdents = _out5250;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10868_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10866_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10867_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5251;
              DCOMPUTF16._IOwnership _out5252;
              DCOMPUTF16.COMP.FromOwnership(r, _10869_recOwned, expectedOwnership, out _out5251, out _out5252);
              r = _out5251;
              resultingOwnership = _out5252;
              readIdents = _10870_recIdents;
            }
          } else if (_source610.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10871___mcc_h562 = _source610.dtor_args;
            DAST._IType _10872___mcc_h563 = _source610.dtor_result;
            {
              RAST._IType _10873_fromTpeGen;
              RAST._IType _out5253;
              _out5253 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10873_fromTpeGen = _out5253;
              RAST._IType _10874_toTpeGen;
              RAST._IType _out5254;
              _out5254 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10874_toTpeGen = _out5254;
              RAST._IExpr _10875_recursiveGen;
              DCOMPUTF16._IOwnership _10876_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10877_recIdents;
              RAST._IExpr _out5255;
              DCOMPUTF16._IOwnership _out5256;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5257;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5255, out _out5256, out _out5257);
              _10875_recursiveGen = _out5255;
              _10876_recOwned = _out5256;
              _10877_recIdents = _out5257;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10875_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10873_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10874_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5258;
              DCOMPUTF16._IOwnership _out5259;
              DCOMPUTF16.COMP.FromOwnership(r, _10876_recOwned, expectedOwnership, out _out5258, out _out5259);
              r = _out5258;
              resultingOwnership = _out5259;
              readIdents = _10877_recIdents;
            }
          } else if (_source610.is_Primitive) {
            DAST._IPrimitive _10878___mcc_h566 = _source610.dtor_Primitive_a0;
            {
              RAST._IType _10879_fromTpeGen;
              RAST._IType _out5260;
              _out5260 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10879_fromTpeGen = _out5260;
              RAST._IType _10880_toTpeGen;
              RAST._IType _out5261;
              _out5261 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10880_toTpeGen = _out5261;
              RAST._IExpr _10881_recursiveGen;
              DCOMPUTF16._IOwnership _10882_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10883_recIdents;
              RAST._IExpr _out5262;
              DCOMPUTF16._IOwnership _out5263;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5264;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5262, out _out5263, out _out5264);
              _10881_recursiveGen = _out5262;
              _10882_recOwned = _out5263;
              _10883_recIdents = _out5264;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10881_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10879_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10880_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5265;
              DCOMPUTF16._IOwnership _out5266;
              DCOMPUTF16.COMP.FromOwnership(r, _10882_recOwned, expectedOwnership, out _out5265, out _out5266);
              r = _out5265;
              resultingOwnership = _out5266;
              readIdents = _10883_recIdents;
            }
          } else if (_source610.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10884___mcc_h568 = _source610.dtor_Passthrough_a0;
            {
              RAST._IType _10885_fromTpeGen;
              RAST._IType _out5267;
              _out5267 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10885_fromTpeGen = _out5267;
              RAST._IType _10886_toTpeGen;
              RAST._IType _out5268;
              _out5268 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10886_toTpeGen = _out5268;
              RAST._IExpr _10887_recursiveGen;
              DCOMPUTF16._IOwnership _10888_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10889_recIdents;
              RAST._IExpr _out5269;
              DCOMPUTF16._IOwnership _out5270;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5271;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5269, out _out5270, out _out5271);
              _10887_recursiveGen = _out5269;
              _10888_recOwned = _out5270;
              _10889_recIdents = _out5271;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10887_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10885_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10886_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5272;
              DCOMPUTF16._IOwnership _out5273;
              DCOMPUTF16.COMP.FromOwnership(r, _10888_recOwned, expectedOwnership, out _out5272, out _out5273);
              r = _out5272;
              resultingOwnership = _out5273;
              readIdents = _10889_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10890___mcc_h570 = _source610.dtor_TypeArg_a0;
            {
              RAST._IType _10891_fromTpeGen;
              RAST._IType _out5274;
              _out5274 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10891_fromTpeGen = _out5274;
              RAST._IType _10892_toTpeGen;
              RAST._IType _out5275;
              _out5275 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10892_toTpeGen = _out5275;
              RAST._IExpr _10893_recursiveGen;
              DCOMPUTF16._IOwnership _10894_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10895_recIdents;
              RAST._IExpr _out5276;
              DCOMPUTF16._IOwnership _out5277;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5278;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5276, out _out5277, out _out5278);
              _10893_recursiveGen = _out5276;
              _10894_recOwned = _out5277;
              _10895_recIdents = _out5278;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10893_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10891_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10892_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5279;
              DCOMPUTF16._IOwnership _out5280;
              DCOMPUTF16.COMP.FromOwnership(r, _10894_recOwned, expectedOwnership, out _out5279, out _out5280);
              r = _out5279;
              resultingOwnership = _out5280;
              readIdents = _10895_recIdents;
            }
          }
        } else if (_source561.is_Set) {
          DAST._IType _10896___mcc_h572 = _source561.dtor_element;
          DAST._IType _source615 = _9573___mcc_h1;
          if (_source615.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10897___mcc_h576 = _source615.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10898___mcc_h577 = _source615.dtor_typeArgs;
            DAST._IResolvedType _10899___mcc_h578 = _source615.dtor_resolved;
            DAST._IResolvedType _source616 = _10899___mcc_h578;
            if (_source616.is_AllocatedDatatype) {
              DAST._IDatatypeType _10900___mcc_h582 = _source616.dtor_datatypeType;
              {
                RAST._IType _10901_fromTpeGen;
                RAST._IType _out5281;
                _out5281 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10901_fromTpeGen = _out5281;
                RAST._IType _10902_toTpeGen;
                RAST._IType _out5282;
                _out5282 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10902_toTpeGen = _out5282;
                RAST._IExpr _10903_recursiveGen;
                DCOMPUTF16._IOwnership _10904_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10905_recIdents;
                RAST._IExpr _out5283;
                DCOMPUTF16._IOwnership _out5284;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5285;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5283, out _out5284, out _out5285);
                _10903_recursiveGen = _out5283;
                _10904_recOwned = _out5284;
                _10905_recIdents = _out5285;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10903_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10901_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10902_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5286;
                DCOMPUTF16._IOwnership _out5287;
                DCOMPUTF16.COMP.FromOwnership(r, _10904_recOwned, expectedOwnership, out _out5286, out _out5287);
                r = _out5286;
                resultingOwnership = _out5287;
                readIdents = _10905_recIdents;
              }
            } else if (_source616.is_Datatype) {
              DAST._IDatatypeType _10906___mcc_h584 = _source616.dtor_datatypeType;
              {
                RAST._IType _10907_fromTpeGen;
                RAST._IType _out5288;
                _out5288 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10907_fromTpeGen = _out5288;
                RAST._IType _10908_toTpeGen;
                RAST._IType _out5289;
                _out5289 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10908_toTpeGen = _out5289;
                RAST._IExpr _10909_recursiveGen;
                DCOMPUTF16._IOwnership _10910_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10911_recIdents;
                RAST._IExpr _out5290;
                DCOMPUTF16._IOwnership _out5291;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5292;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5290, out _out5291, out _out5292);
                _10909_recursiveGen = _out5290;
                _10910_recOwned = _out5291;
                _10911_recIdents = _out5292;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10909_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10907_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10908_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5293;
                DCOMPUTF16._IOwnership _out5294;
                DCOMPUTF16.COMP.FromOwnership(r, _10910_recOwned, expectedOwnership, out _out5293, out _out5294);
                r = _out5293;
                resultingOwnership = _out5294;
                readIdents = _10911_recIdents;
              }
            } else if (_source616.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10912___mcc_h586 = _source616.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10913___mcc_h587 = _source616.dtor_attributes;
              {
                RAST._IType _10914_fromTpeGen;
                RAST._IType _out5295;
                _out5295 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _10914_fromTpeGen = _out5295;
                RAST._IType _10915_toTpeGen;
                RAST._IType _out5296;
                _out5296 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _10915_toTpeGen = _out5296;
                RAST._IExpr _10916_recursiveGen;
                DCOMPUTF16._IOwnership _10917_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10918_recIdents;
                RAST._IExpr _out5297;
                DCOMPUTF16._IOwnership _out5298;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5299;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5297, out _out5298, out _out5299);
                _10916_recursiveGen = _out5297;
                _10917_recOwned = _out5298;
                _10918_recIdents = _out5299;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10916_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10914_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10915_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5300;
                DCOMPUTF16._IOwnership _out5301;
                DCOMPUTF16.COMP.FromOwnership(r, _10917_recOwned, expectedOwnership, out _out5300, out _out5301);
                r = _out5300;
                resultingOwnership = _out5301;
                readIdents = _10918_recIdents;
              }
            } else {
              DAST._IType _10919___mcc_h590 = _source616.dtor_baseType;
              DAST._INewtypeRange _10920___mcc_h591 = _source616.dtor_range;
              bool _10921___mcc_h592 = _source616.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10922___mcc_h593 = _source616.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10923_attributes = _10922___mcc_h593;
              bool _10924_erase = _10921___mcc_h592;
              DAST._INewtypeRange _10925_range = _10920___mcc_h591;
              DAST._IType _10926_b = _10919___mcc_h590;
              {
                Std.Wrappers._IOption<RAST._IType> _10927_nativeToType;
                _10927_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10926_b, _10925_range);
                if (object.Equals(_9567_fromTpe, _10926_b)) {
                  RAST._IExpr _10928_recursiveGen;
                  DCOMPUTF16._IOwnership _10929_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10930_recIdents;
                  RAST._IExpr _out5302;
                  DCOMPUTF16._IOwnership _out5303;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5304;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5302, out _out5303, out _out5304);
                  _10928_recursiveGen = _out5302;
                  _10929_recOwned = _out5303;
                  _10930_recIdents = _out5304;
                  readIdents = _10930_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source617 = _10927_nativeToType;
                  if (_source617.is_None) {
                    if (_10924_erase) {
                      r = _10928_recursiveGen;
                    } else {
                      RAST._IType _10931_rhsType;
                      RAST._IType _out5305;
                      _out5305 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _10931_rhsType = _out5305;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10931_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10928_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5306;
                    DCOMPUTF16._IOwnership _out5307;
                    DCOMPUTF16.COMP.FromOwnership(r, _10929_recOwned, expectedOwnership, out _out5306, out _out5307);
                    r = _out5306;
                    resultingOwnership = _out5307;
                  } else {
                    RAST._IType _10932___mcc_h1762 = _source617.dtor_value;
                    RAST._IType _10933_v = _10932___mcc_h1762;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10928_recursiveGen, RAST.Expr.create_ExprFromType(_10933_v)));
                    RAST._IExpr _out5308;
                    DCOMPUTF16._IOwnership _out5309;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5308, out _out5309);
                    r = _out5308;
                    resultingOwnership = _out5309;
                  }
                } else {
                  if ((_10927_nativeToType).is_Some) {
                    DAST._IType _source618 = _9567_fromTpe;
                    if (_source618.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10934___mcc_h1763 = _source618.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10935___mcc_h1764 = _source618.dtor_typeArgs;
                      DAST._IResolvedType _10936___mcc_h1765 = _source618.dtor_resolved;
                      DAST._IResolvedType _source619 = _10936___mcc_h1765;
                      if (_source619.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10937___mcc_h1769 = _source619.dtor_datatypeType;
                      } else if (_source619.is_Datatype) {
                        DAST._IDatatypeType _10938___mcc_h1771 = _source619.dtor_datatypeType;
                      } else if (_source619.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10939___mcc_h1773 = _source619.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10940___mcc_h1774 = _source619.dtor_attributes;
                      } else {
                        DAST._IType _10941___mcc_h1777 = _source619.dtor_baseType;
                        DAST._INewtypeRange _10942___mcc_h1778 = _source619.dtor_range;
                        bool _10943___mcc_h1779 = _source619.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10944___mcc_h1780 = _source619.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10945_attributes0 = _10944___mcc_h1780;
                        bool _10946_erase0 = _10943___mcc_h1779;
                        DAST._INewtypeRange _10947_range0 = _10942___mcc_h1778;
                        DAST._IType _10948_b0 = _10941___mcc_h1777;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10949_nativeFromType;
                          _10949_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10948_b0, _10947_range0);
                          if ((_10949_nativeFromType).is_Some) {
                            RAST._IExpr _10950_recursiveGen;
                            DCOMPUTF16._IOwnership _10951_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10952_recIdents;
                            RAST._IExpr _out5310;
                            DCOMPUTF16._IOwnership _out5311;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5312;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5310, out _out5311, out _out5312);
                            _10950_recursiveGen = _out5310;
                            _10951_recOwned = _out5311;
                            _10952_recIdents = _out5312;
                            RAST._IExpr _out5313;
                            DCOMPUTF16._IOwnership _out5314;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10950_recursiveGen, (_10927_nativeToType).dtor_value), _10951_recOwned, expectedOwnership, out _out5313, out _out5314);
                            r = _out5313;
                            resultingOwnership = _out5314;
                            readIdents = _10952_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source618.is_Nullable) {
                      DAST._IType _10953___mcc_h1785 = _source618.dtor_Nullable_a0;
                    } else if (_source618.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10954___mcc_h1787 = _source618.dtor_Tuple_a0;
                    } else if (_source618.is_Array) {
                      DAST._IType _10955___mcc_h1789 = _source618.dtor_element;
                      BigInteger _10956___mcc_h1790 = _source618.dtor_dims;
                    } else if (_source618.is_Seq) {
                      DAST._IType _10957___mcc_h1793 = _source618.dtor_element;
                    } else if (_source618.is_Set) {
                      DAST._IType _10958___mcc_h1795 = _source618.dtor_element;
                    } else if (_source618.is_Multiset) {
                      DAST._IType _10959___mcc_h1797 = _source618.dtor_element;
                    } else if (_source618.is_Map) {
                      DAST._IType _10960___mcc_h1799 = _source618.dtor_key;
                      DAST._IType _10961___mcc_h1800 = _source618.dtor_value;
                    } else if (_source618.is_SetBuilder) {
                      DAST._IType _10962___mcc_h1803 = _source618.dtor_element;
                    } else if (_source618.is_MapBuilder) {
                      DAST._IType _10963___mcc_h1805 = _source618.dtor_key;
                      DAST._IType _10964___mcc_h1806 = _source618.dtor_value;
                    } else if (_source618.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10965___mcc_h1809 = _source618.dtor_args;
                      DAST._IType _10966___mcc_h1810 = _source618.dtor_result;
                    } else if (_source618.is_Primitive) {
                      DAST._IPrimitive _10967___mcc_h1813 = _source618.dtor_Primitive_a0;
                    } else if (_source618.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10968___mcc_h1815 = _source618.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10969___mcc_h1817 = _source618.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10970_recursiveGen;
                      DCOMPUTF16._IOwnership _10971_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10972_recIdents;
                      RAST._IExpr _out5315;
                      DCOMPUTF16._IOwnership _out5316;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5317;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5315, out _out5316, out _out5317);
                      _10970_recursiveGen = _out5315;
                      _10971_recOwned = _out5316;
                      _10972_recIdents = _out5317;
                      RAST._IExpr _out5318;
                      DCOMPUTF16._IOwnership _out5319;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10970_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10927_nativeToType).dtor_value), _10971_recOwned, expectedOwnership, out _out5318, out _out5319);
                      r = _out5318;
                      resultingOwnership = _out5319;
                      readIdents = _10972_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5320;
                  DCOMPUTF16._IOwnership _out5321;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5322;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _10926_b), _10926_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out5320, out _out5321, out _out5322);
                  r = _out5320;
                  resultingOwnership = _out5321;
                  readIdents = _out5322;
                }
              }
            }
          } else if (_source615.is_Nullable) {
            DAST._IType _10973___mcc_h598 = _source615.dtor_Nullable_a0;
            {
              RAST._IExpr _10974_recursiveGen;
              DCOMPUTF16._IOwnership _10975_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10976_recIdents;
              RAST._IExpr _out5323;
              DCOMPUTF16._IOwnership _out5324;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5325;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5323, out _out5324, out _out5325);
              _10974_recursiveGen = _out5323;
              _10975_recOwned = _out5324;
              _10976_recIdents = _out5325;
              r = _10974_recursiveGen;
              if (object.Equals(_10975_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5326;
              DCOMPUTF16._IOwnership _out5327;
              DCOMPUTF16.COMP.FromOwnership(r, _10975_recOwned, expectedOwnership, out _out5326, out _out5327);
              r = _out5326;
              resultingOwnership = _out5327;
              readIdents = _10976_recIdents;
            }
          } else if (_source615.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10977___mcc_h600 = _source615.dtor_Tuple_a0;
            {
              RAST._IType _10978_fromTpeGen;
              RAST._IType _out5328;
              _out5328 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10978_fromTpeGen = _out5328;
              RAST._IType _10979_toTpeGen;
              RAST._IType _out5329;
              _out5329 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10979_toTpeGen = _out5329;
              RAST._IExpr _10980_recursiveGen;
              DCOMPUTF16._IOwnership _10981_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10982_recIdents;
              RAST._IExpr _out5330;
              DCOMPUTF16._IOwnership _out5331;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5332;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5330, out _out5331, out _out5332);
              _10980_recursiveGen = _out5330;
              _10981_recOwned = _out5331;
              _10982_recIdents = _out5332;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10980_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10978_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10979_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5333;
              DCOMPUTF16._IOwnership _out5334;
              DCOMPUTF16.COMP.FromOwnership(r, _10981_recOwned, expectedOwnership, out _out5333, out _out5334);
              r = _out5333;
              resultingOwnership = _out5334;
              readIdents = _10982_recIdents;
            }
          } else if (_source615.is_Array) {
            DAST._IType _10983___mcc_h602 = _source615.dtor_element;
            BigInteger _10984___mcc_h603 = _source615.dtor_dims;
            {
              RAST._IType _10985_fromTpeGen;
              RAST._IType _out5335;
              _out5335 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10985_fromTpeGen = _out5335;
              RAST._IType _10986_toTpeGen;
              RAST._IType _out5336;
              _out5336 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10986_toTpeGen = _out5336;
              RAST._IExpr _10987_recursiveGen;
              DCOMPUTF16._IOwnership _10988_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10989_recIdents;
              RAST._IExpr _out5337;
              DCOMPUTF16._IOwnership _out5338;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5339;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5337, out _out5338, out _out5339);
              _10987_recursiveGen = _out5337;
              _10988_recOwned = _out5338;
              _10989_recIdents = _out5339;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10987_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10985_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10986_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5340;
              DCOMPUTF16._IOwnership _out5341;
              DCOMPUTF16.COMP.FromOwnership(r, _10988_recOwned, expectedOwnership, out _out5340, out _out5341);
              r = _out5340;
              resultingOwnership = _out5341;
              readIdents = _10989_recIdents;
            }
          } else if (_source615.is_Seq) {
            DAST._IType _10990___mcc_h606 = _source615.dtor_element;
            {
              RAST._IType _10991_fromTpeGen;
              RAST._IType _out5342;
              _out5342 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10991_fromTpeGen = _out5342;
              RAST._IType _10992_toTpeGen;
              RAST._IType _out5343;
              _out5343 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10992_toTpeGen = _out5343;
              RAST._IExpr _10993_recursiveGen;
              DCOMPUTF16._IOwnership _10994_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10995_recIdents;
              RAST._IExpr _out5344;
              DCOMPUTF16._IOwnership _out5345;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5346;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5344, out _out5345, out _out5346);
              _10993_recursiveGen = _out5344;
              _10994_recOwned = _out5345;
              _10995_recIdents = _out5346;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10993_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10991_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10992_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5347;
              DCOMPUTF16._IOwnership _out5348;
              DCOMPUTF16.COMP.FromOwnership(r, _10994_recOwned, expectedOwnership, out _out5347, out _out5348);
              r = _out5347;
              resultingOwnership = _out5348;
              readIdents = _10995_recIdents;
            }
          } else if (_source615.is_Set) {
            DAST._IType _10996___mcc_h608 = _source615.dtor_element;
            {
              RAST._IType _10997_fromTpeGen;
              RAST._IType _out5349;
              _out5349 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _10997_fromTpeGen = _out5349;
              RAST._IType _10998_toTpeGen;
              RAST._IType _out5350;
              _out5350 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _10998_toTpeGen = _out5350;
              RAST._IExpr _10999_recursiveGen;
              DCOMPUTF16._IOwnership _11000_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11001_recIdents;
              RAST._IExpr _out5351;
              DCOMPUTF16._IOwnership _out5352;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5353;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5351, out _out5352, out _out5353);
              _10999_recursiveGen = _out5351;
              _11000_recOwned = _out5352;
              _11001_recIdents = _out5353;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10999_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10997_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10998_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5354;
              DCOMPUTF16._IOwnership _out5355;
              DCOMPUTF16.COMP.FromOwnership(r, _11000_recOwned, expectedOwnership, out _out5354, out _out5355);
              r = _out5354;
              resultingOwnership = _out5355;
              readIdents = _11001_recIdents;
            }
          } else if (_source615.is_Multiset) {
            DAST._IType _11002___mcc_h610 = _source615.dtor_element;
            {
              RAST._IType _11003_fromTpeGen;
              RAST._IType _out5356;
              _out5356 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11003_fromTpeGen = _out5356;
              RAST._IType _11004_toTpeGen;
              RAST._IType _out5357;
              _out5357 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11004_toTpeGen = _out5357;
              RAST._IExpr _11005_recursiveGen;
              DCOMPUTF16._IOwnership _11006_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11007_recIdents;
              RAST._IExpr _out5358;
              DCOMPUTF16._IOwnership _out5359;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5360;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5358, out _out5359, out _out5360);
              _11005_recursiveGen = _out5358;
              _11006_recOwned = _out5359;
              _11007_recIdents = _out5360;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11005_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11003_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11004_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5361;
              DCOMPUTF16._IOwnership _out5362;
              DCOMPUTF16.COMP.FromOwnership(r, _11006_recOwned, expectedOwnership, out _out5361, out _out5362);
              r = _out5361;
              resultingOwnership = _out5362;
              readIdents = _11007_recIdents;
            }
          } else if (_source615.is_Map) {
            DAST._IType _11008___mcc_h612 = _source615.dtor_key;
            DAST._IType _11009___mcc_h613 = _source615.dtor_value;
            {
              RAST._IType _11010_fromTpeGen;
              RAST._IType _out5363;
              _out5363 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11010_fromTpeGen = _out5363;
              RAST._IType _11011_toTpeGen;
              RAST._IType _out5364;
              _out5364 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11011_toTpeGen = _out5364;
              RAST._IExpr _11012_recursiveGen;
              DCOMPUTF16._IOwnership _11013_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11014_recIdents;
              RAST._IExpr _out5365;
              DCOMPUTF16._IOwnership _out5366;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5367;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5365, out _out5366, out _out5367);
              _11012_recursiveGen = _out5365;
              _11013_recOwned = _out5366;
              _11014_recIdents = _out5367;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11012_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11010_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11011_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5368;
              DCOMPUTF16._IOwnership _out5369;
              DCOMPUTF16.COMP.FromOwnership(r, _11013_recOwned, expectedOwnership, out _out5368, out _out5369);
              r = _out5368;
              resultingOwnership = _out5369;
              readIdents = _11014_recIdents;
            }
          } else if (_source615.is_SetBuilder) {
            DAST._IType _11015___mcc_h616 = _source615.dtor_element;
            {
              RAST._IType _11016_fromTpeGen;
              RAST._IType _out5370;
              _out5370 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11016_fromTpeGen = _out5370;
              RAST._IType _11017_toTpeGen;
              RAST._IType _out5371;
              _out5371 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11017_toTpeGen = _out5371;
              RAST._IExpr _11018_recursiveGen;
              DCOMPUTF16._IOwnership _11019_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11020_recIdents;
              RAST._IExpr _out5372;
              DCOMPUTF16._IOwnership _out5373;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5374;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5372, out _out5373, out _out5374);
              _11018_recursiveGen = _out5372;
              _11019_recOwned = _out5373;
              _11020_recIdents = _out5374;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11018_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11016_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11017_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5375;
              DCOMPUTF16._IOwnership _out5376;
              DCOMPUTF16.COMP.FromOwnership(r, _11019_recOwned, expectedOwnership, out _out5375, out _out5376);
              r = _out5375;
              resultingOwnership = _out5376;
              readIdents = _11020_recIdents;
            }
          } else if (_source615.is_MapBuilder) {
            DAST._IType _11021___mcc_h618 = _source615.dtor_key;
            DAST._IType _11022___mcc_h619 = _source615.dtor_value;
            {
              RAST._IType _11023_fromTpeGen;
              RAST._IType _out5377;
              _out5377 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11023_fromTpeGen = _out5377;
              RAST._IType _11024_toTpeGen;
              RAST._IType _out5378;
              _out5378 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11024_toTpeGen = _out5378;
              RAST._IExpr _11025_recursiveGen;
              DCOMPUTF16._IOwnership _11026_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11027_recIdents;
              RAST._IExpr _out5379;
              DCOMPUTF16._IOwnership _out5380;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5381;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5379, out _out5380, out _out5381);
              _11025_recursiveGen = _out5379;
              _11026_recOwned = _out5380;
              _11027_recIdents = _out5381;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11025_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11023_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11024_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5382;
              DCOMPUTF16._IOwnership _out5383;
              DCOMPUTF16.COMP.FromOwnership(r, _11026_recOwned, expectedOwnership, out _out5382, out _out5383);
              r = _out5382;
              resultingOwnership = _out5383;
              readIdents = _11027_recIdents;
            }
          } else if (_source615.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11028___mcc_h622 = _source615.dtor_args;
            DAST._IType _11029___mcc_h623 = _source615.dtor_result;
            {
              RAST._IType _11030_fromTpeGen;
              RAST._IType _out5384;
              _out5384 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11030_fromTpeGen = _out5384;
              RAST._IType _11031_toTpeGen;
              RAST._IType _out5385;
              _out5385 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11031_toTpeGen = _out5385;
              RAST._IExpr _11032_recursiveGen;
              DCOMPUTF16._IOwnership _11033_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11034_recIdents;
              RAST._IExpr _out5386;
              DCOMPUTF16._IOwnership _out5387;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5388;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5386, out _out5387, out _out5388);
              _11032_recursiveGen = _out5386;
              _11033_recOwned = _out5387;
              _11034_recIdents = _out5388;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11032_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11030_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11031_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5389;
              DCOMPUTF16._IOwnership _out5390;
              DCOMPUTF16.COMP.FromOwnership(r, _11033_recOwned, expectedOwnership, out _out5389, out _out5390);
              r = _out5389;
              resultingOwnership = _out5390;
              readIdents = _11034_recIdents;
            }
          } else if (_source615.is_Primitive) {
            DAST._IPrimitive _11035___mcc_h626 = _source615.dtor_Primitive_a0;
            {
              RAST._IType _11036_fromTpeGen;
              RAST._IType _out5391;
              _out5391 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11036_fromTpeGen = _out5391;
              RAST._IType _11037_toTpeGen;
              RAST._IType _out5392;
              _out5392 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11037_toTpeGen = _out5392;
              RAST._IExpr _11038_recursiveGen;
              DCOMPUTF16._IOwnership _11039_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11040_recIdents;
              RAST._IExpr _out5393;
              DCOMPUTF16._IOwnership _out5394;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5395;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5393, out _out5394, out _out5395);
              _11038_recursiveGen = _out5393;
              _11039_recOwned = _out5394;
              _11040_recIdents = _out5395;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11038_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11036_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11037_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5396;
              DCOMPUTF16._IOwnership _out5397;
              DCOMPUTF16.COMP.FromOwnership(r, _11039_recOwned, expectedOwnership, out _out5396, out _out5397);
              r = _out5396;
              resultingOwnership = _out5397;
              readIdents = _11040_recIdents;
            }
          } else if (_source615.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11041___mcc_h628 = _source615.dtor_Passthrough_a0;
            {
              RAST._IType _11042_fromTpeGen;
              RAST._IType _out5398;
              _out5398 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11042_fromTpeGen = _out5398;
              RAST._IType _11043_toTpeGen;
              RAST._IType _out5399;
              _out5399 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11043_toTpeGen = _out5399;
              RAST._IExpr _11044_recursiveGen;
              DCOMPUTF16._IOwnership _11045_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11046_recIdents;
              RAST._IExpr _out5400;
              DCOMPUTF16._IOwnership _out5401;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5402;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5400, out _out5401, out _out5402);
              _11044_recursiveGen = _out5400;
              _11045_recOwned = _out5401;
              _11046_recIdents = _out5402;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11044_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11042_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11043_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5403;
              DCOMPUTF16._IOwnership _out5404;
              DCOMPUTF16.COMP.FromOwnership(r, _11045_recOwned, expectedOwnership, out _out5403, out _out5404);
              r = _out5403;
              resultingOwnership = _out5404;
              readIdents = _11046_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11047___mcc_h630 = _source615.dtor_TypeArg_a0;
            {
              RAST._IType _11048_fromTpeGen;
              RAST._IType _out5405;
              _out5405 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11048_fromTpeGen = _out5405;
              RAST._IType _11049_toTpeGen;
              RAST._IType _out5406;
              _out5406 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11049_toTpeGen = _out5406;
              RAST._IExpr _11050_recursiveGen;
              DCOMPUTF16._IOwnership _11051_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11052_recIdents;
              RAST._IExpr _out5407;
              DCOMPUTF16._IOwnership _out5408;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5409;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5407, out _out5408, out _out5409);
              _11050_recursiveGen = _out5407;
              _11051_recOwned = _out5408;
              _11052_recIdents = _out5409;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11050_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11048_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11049_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5410;
              DCOMPUTF16._IOwnership _out5411;
              DCOMPUTF16.COMP.FromOwnership(r, _11051_recOwned, expectedOwnership, out _out5410, out _out5411);
              r = _out5410;
              resultingOwnership = _out5411;
              readIdents = _11052_recIdents;
            }
          }
        } else if (_source561.is_Multiset) {
          DAST._IType _11053___mcc_h632 = _source561.dtor_element;
          DAST._IType _source620 = _9573___mcc_h1;
          if (_source620.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11054___mcc_h636 = _source620.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11055___mcc_h637 = _source620.dtor_typeArgs;
            DAST._IResolvedType _11056___mcc_h638 = _source620.dtor_resolved;
            DAST._IResolvedType _source621 = _11056___mcc_h638;
            if (_source621.is_AllocatedDatatype) {
              DAST._IDatatypeType _11057___mcc_h642 = _source621.dtor_datatypeType;
              {
                RAST._IType _11058_fromTpeGen;
                RAST._IType _out5412;
                _out5412 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11058_fromTpeGen = _out5412;
                RAST._IType _11059_toTpeGen;
                RAST._IType _out5413;
                _out5413 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11059_toTpeGen = _out5413;
                RAST._IExpr _11060_recursiveGen;
                DCOMPUTF16._IOwnership _11061_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11062_recIdents;
                RAST._IExpr _out5414;
                DCOMPUTF16._IOwnership _out5415;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5416;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5414, out _out5415, out _out5416);
                _11060_recursiveGen = _out5414;
                _11061_recOwned = _out5415;
                _11062_recIdents = _out5416;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11060_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11058_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11059_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5417;
                DCOMPUTF16._IOwnership _out5418;
                DCOMPUTF16.COMP.FromOwnership(r, _11061_recOwned, expectedOwnership, out _out5417, out _out5418);
                r = _out5417;
                resultingOwnership = _out5418;
                readIdents = _11062_recIdents;
              }
            } else if (_source621.is_Datatype) {
              DAST._IDatatypeType _11063___mcc_h644 = _source621.dtor_datatypeType;
              {
                RAST._IType _11064_fromTpeGen;
                RAST._IType _out5419;
                _out5419 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11064_fromTpeGen = _out5419;
                RAST._IType _11065_toTpeGen;
                RAST._IType _out5420;
                _out5420 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11065_toTpeGen = _out5420;
                RAST._IExpr _11066_recursiveGen;
                DCOMPUTF16._IOwnership _11067_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11068_recIdents;
                RAST._IExpr _out5421;
                DCOMPUTF16._IOwnership _out5422;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5423;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5421, out _out5422, out _out5423);
                _11066_recursiveGen = _out5421;
                _11067_recOwned = _out5422;
                _11068_recIdents = _out5423;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11066_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11064_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11065_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5424;
                DCOMPUTF16._IOwnership _out5425;
                DCOMPUTF16.COMP.FromOwnership(r, _11067_recOwned, expectedOwnership, out _out5424, out _out5425);
                r = _out5424;
                resultingOwnership = _out5425;
                readIdents = _11068_recIdents;
              }
            } else if (_source621.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11069___mcc_h646 = _source621.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11070___mcc_h647 = _source621.dtor_attributes;
              {
                RAST._IType _11071_fromTpeGen;
                RAST._IType _out5426;
                _out5426 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11071_fromTpeGen = _out5426;
                RAST._IType _11072_toTpeGen;
                RAST._IType _out5427;
                _out5427 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11072_toTpeGen = _out5427;
                RAST._IExpr _11073_recursiveGen;
                DCOMPUTF16._IOwnership _11074_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11075_recIdents;
                RAST._IExpr _out5428;
                DCOMPUTF16._IOwnership _out5429;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5430;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5428, out _out5429, out _out5430);
                _11073_recursiveGen = _out5428;
                _11074_recOwned = _out5429;
                _11075_recIdents = _out5430;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11073_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11071_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11072_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5431;
                DCOMPUTF16._IOwnership _out5432;
                DCOMPUTF16.COMP.FromOwnership(r, _11074_recOwned, expectedOwnership, out _out5431, out _out5432);
                r = _out5431;
                resultingOwnership = _out5432;
                readIdents = _11075_recIdents;
              }
            } else {
              DAST._IType _11076___mcc_h650 = _source621.dtor_baseType;
              DAST._INewtypeRange _11077___mcc_h651 = _source621.dtor_range;
              bool _11078___mcc_h652 = _source621.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11079___mcc_h653 = _source621.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11080_attributes = _11079___mcc_h653;
              bool _11081_erase = _11078___mcc_h652;
              DAST._INewtypeRange _11082_range = _11077___mcc_h651;
              DAST._IType _11083_b = _11076___mcc_h650;
              {
                Std.Wrappers._IOption<RAST._IType> _11084_nativeToType;
                _11084_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11083_b, _11082_range);
                if (object.Equals(_9567_fromTpe, _11083_b)) {
                  RAST._IExpr _11085_recursiveGen;
                  DCOMPUTF16._IOwnership _11086_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11087_recIdents;
                  RAST._IExpr _out5433;
                  DCOMPUTF16._IOwnership _out5434;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5435;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5433, out _out5434, out _out5435);
                  _11085_recursiveGen = _out5433;
                  _11086_recOwned = _out5434;
                  _11087_recIdents = _out5435;
                  readIdents = _11087_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source622 = _11084_nativeToType;
                  if (_source622.is_None) {
                    if (_11081_erase) {
                      r = _11085_recursiveGen;
                    } else {
                      RAST._IType _11088_rhsType;
                      RAST._IType _out5436;
                      _out5436 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _11088_rhsType = _out5436;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11088_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11085_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5437;
                    DCOMPUTF16._IOwnership _out5438;
                    DCOMPUTF16.COMP.FromOwnership(r, _11086_recOwned, expectedOwnership, out _out5437, out _out5438);
                    r = _out5437;
                    resultingOwnership = _out5438;
                  } else {
                    RAST._IType _11089___mcc_h1819 = _source622.dtor_value;
                    RAST._IType _11090_v = _11089___mcc_h1819;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11085_recursiveGen, RAST.Expr.create_ExprFromType(_11090_v)));
                    RAST._IExpr _out5439;
                    DCOMPUTF16._IOwnership _out5440;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5439, out _out5440);
                    r = _out5439;
                    resultingOwnership = _out5440;
                  }
                } else {
                  if ((_11084_nativeToType).is_Some) {
                    DAST._IType _source623 = _9567_fromTpe;
                    if (_source623.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11091___mcc_h1820 = _source623.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11092___mcc_h1821 = _source623.dtor_typeArgs;
                      DAST._IResolvedType _11093___mcc_h1822 = _source623.dtor_resolved;
                      DAST._IResolvedType _source624 = _11093___mcc_h1822;
                      if (_source624.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11094___mcc_h1826 = _source624.dtor_datatypeType;
                      } else if (_source624.is_Datatype) {
                        DAST._IDatatypeType _11095___mcc_h1828 = _source624.dtor_datatypeType;
                      } else if (_source624.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11096___mcc_h1830 = _source624.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11097___mcc_h1831 = _source624.dtor_attributes;
                      } else {
                        DAST._IType _11098___mcc_h1834 = _source624.dtor_baseType;
                        DAST._INewtypeRange _11099___mcc_h1835 = _source624.dtor_range;
                        bool _11100___mcc_h1836 = _source624.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11101___mcc_h1837 = _source624.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11102_attributes0 = _11101___mcc_h1837;
                        bool _11103_erase0 = _11100___mcc_h1836;
                        DAST._INewtypeRange _11104_range0 = _11099___mcc_h1835;
                        DAST._IType _11105_b0 = _11098___mcc_h1834;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11106_nativeFromType;
                          _11106_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11105_b0, _11104_range0);
                          if ((_11106_nativeFromType).is_Some) {
                            RAST._IExpr _11107_recursiveGen;
                            DCOMPUTF16._IOwnership _11108_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11109_recIdents;
                            RAST._IExpr _out5441;
                            DCOMPUTF16._IOwnership _out5442;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5443;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5441, out _out5442, out _out5443);
                            _11107_recursiveGen = _out5441;
                            _11108_recOwned = _out5442;
                            _11109_recIdents = _out5443;
                            RAST._IExpr _out5444;
                            DCOMPUTF16._IOwnership _out5445;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11107_recursiveGen, (_11084_nativeToType).dtor_value), _11108_recOwned, expectedOwnership, out _out5444, out _out5445);
                            r = _out5444;
                            resultingOwnership = _out5445;
                            readIdents = _11109_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source623.is_Nullable) {
                      DAST._IType _11110___mcc_h1842 = _source623.dtor_Nullable_a0;
                    } else if (_source623.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11111___mcc_h1844 = _source623.dtor_Tuple_a0;
                    } else if (_source623.is_Array) {
                      DAST._IType _11112___mcc_h1846 = _source623.dtor_element;
                      BigInteger _11113___mcc_h1847 = _source623.dtor_dims;
                    } else if (_source623.is_Seq) {
                      DAST._IType _11114___mcc_h1850 = _source623.dtor_element;
                    } else if (_source623.is_Set) {
                      DAST._IType _11115___mcc_h1852 = _source623.dtor_element;
                    } else if (_source623.is_Multiset) {
                      DAST._IType _11116___mcc_h1854 = _source623.dtor_element;
                    } else if (_source623.is_Map) {
                      DAST._IType _11117___mcc_h1856 = _source623.dtor_key;
                      DAST._IType _11118___mcc_h1857 = _source623.dtor_value;
                    } else if (_source623.is_SetBuilder) {
                      DAST._IType _11119___mcc_h1860 = _source623.dtor_element;
                    } else if (_source623.is_MapBuilder) {
                      DAST._IType _11120___mcc_h1862 = _source623.dtor_key;
                      DAST._IType _11121___mcc_h1863 = _source623.dtor_value;
                    } else if (_source623.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11122___mcc_h1866 = _source623.dtor_args;
                      DAST._IType _11123___mcc_h1867 = _source623.dtor_result;
                    } else if (_source623.is_Primitive) {
                      DAST._IPrimitive _11124___mcc_h1870 = _source623.dtor_Primitive_a0;
                    } else if (_source623.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11125___mcc_h1872 = _source623.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11126___mcc_h1874 = _source623.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11127_recursiveGen;
                      DCOMPUTF16._IOwnership _11128_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11129_recIdents;
                      RAST._IExpr _out5446;
                      DCOMPUTF16._IOwnership _out5447;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5448;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5446, out _out5447, out _out5448);
                      _11127_recursiveGen = _out5446;
                      _11128_recOwned = _out5447;
                      _11129_recIdents = _out5448;
                      RAST._IExpr _out5449;
                      DCOMPUTF16._IOwnership _out5450;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11127_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11084_nativeToType).dtor_value), _11128_recOwned, expectedOwnership, out _out5449, out _out5450);
                      r = _out5449;
                      resultingOwnership = _out5450;
                      readIdents = _11129_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5451;
                  DCOMPUTF16._IOwnership _out5452;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5453;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _11083_b), _11083_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out5451, out _out5452, out _out5453);
                  r = _out5451;
                  resultingOwnership = _out5452;
                  readIdents = _out5453;
                }
              }
            }
          } else if (_source620.is_Nullable) {
            DAST._IType _11130___mcc_h658 = _source620.dtor_Nullable_a0;
            {
              RAST._IExpr _11131_recursiveGen;
              DCOMPUTF16._IOwnership _11132_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11133_recIdents;
              RAST._IExpr _out5454;
              DCOMPUTF16._IOwnership _out5455;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5456;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5454, out _out5455, out _out5456);
              _11131_recursiveGen = _out5454;
              _11132_recOwned = _out5455;
              _11133_recIdents = _out5456;
              r = _11131_recursiveGen;
              if (object.Equals(_11132_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5457;
              DCOMPUTF16._IOwnership _out5458;
              DCOMPUTF16.COMP.FromOwnership(r, _11132_recOwned, expectedOwnership, out _out5457, out _out5458);
              r = _out5457;
              resultingOwnership = _out5458;
              readIdents = _11133_recIdents;
            }
          } else if (_source620.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11134___mcc_h660 = _source620.dtor_Tuple_a0;
            {
              RAST._IType _11135_fromTpeGen;
              RAST._IType _out5459;
              _out5459 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11135_fromTpeGen = _out5459;
              RAST._IType _11136_toTpeGen;
              RAST._IType _out5460;
              _out5460 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11136_toTpeGen = _out5460;
              RAST._IExpr _11137_recursiveGen;
              DCOMPUTF16._IOwnership _11138_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11139_recIdents;
              RAST._IExpr _out5461;
              DCOMPUTF16._IOwnership _out5462;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5463;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5461, out _out5462, out _out5463);
              _11137_recursiveGen = _out5461;
              _11138_recOwned = _out5462;
              _11139_recIdents = _out5463;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11137_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11135_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11136_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5464;
              DCOMPUTF16._IOwnership _out5465;
              DCOMPUTF16.COMP.FromOwnership(r, _11138_recOwned, expectedOwnership, out _out5464, out _out5465);
              r = _out5464;
              resultingOwnership = _out5465;
              readIdents = _11139_recIdents;
            }
          } else if (_source620.is_Array) {
            DAST._IType _11140___mcc_h662 = _source620.dtor_element;
            BigInteger _11141___mcc_h663 = _source620.dtor_dims;
            {
              RAST._IType _11142_fromTpeGen;
              RAST._IType _out5466;
              _out5466 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11142_fromTpeGen = _out5466;
              RAST._IType _11143_toTpeGen;
              RAST._IType _out5467;
              _out5467 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11143_toTpeGen = _out5467;
              RAST._IExpr _11144_recursiveGen;
              DCOMPUTF16._IOwnership _11145_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11146_recIdents;
              RAST._IExpr _out5468;
              DCOMPUTF16._IOwnership _out5469;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5470;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5468, out _out5469, out _out5470);
              _11144_recursiveGen = _out5468;
              _11145_recOwned = _out5469;
              _11146_recIdents = _out5470;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11144_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11142_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11143_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5471;
              DCOMPUTF16._IOwnership _out5472;
              DCOMPUTF16.COMP.FromOwnership(r, _11145_recOwned, expectedOwnership, out _out5471, out _out5472);
              r = _out5471;
              resultingOwnership = _out5472;
              readIdents = _11146_recIdents;
            }
          } else if (_source620.is_Seq) {
            DAST._IType _11147___mcc_h666 = _source620.dtor_element;
            {
              RAST._IType _11148_fromTpeGen;
              RAST._IType _out5473;
              _out5473 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11148_fromTpeGen = _out5473;
              RAST._IType _11149_toTpeGen;
              RAST._IType _out5474;
              _out5474 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11149_toTpeGen = _out5474;
              RAST._IExpr _11150_recursiveGen;
              DCOMPUTF16._IOwnership _11151_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11152_recIdents;
              RAST._IExpr _out5475;
              DCOMPUTF16._IOwnership _out5476;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5477;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5475, out _out5476, out _out5477);
              _11150_recursiveGen = _out5475;
              _11151_recOwned = _out5476;
              _11152_recIdents = _out5477;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11150_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11148_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11149_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5478;
              DCOMPUTF16._IOwnership _out5479;
              DCOMPUTF16.COMP.FromOwnership(r, _11151_recOwned, expectedOwnership, out _out5478, out _out5479);
              r = _out5478;
              resultingOwnership = _out5479;
              readIdents = _11152_recIdents;
            }
          } else if (_source620.is_Set) {
            DAST._IType _11153___mcc_h668 = _source620.dtor_element;
            {
              RAST._IType _11154_fromTpeGen;
              RAST._IType _out5480;
              _out5480 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11154_fromTpeGen = _out5480;
              RAST._IType _11155_toTpeGen;
              RAST._IType _out5481;
              _out5481 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11155_toTpeGen = _out5481;
              RAST._IExpr _11156_recursiveGen;
              DCOMPUTF16._IOwnership _11157_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11158_recIdents;
              RAST._IExpr _out5482;
              DCOMPUTF16._IOwnership _out5483;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5484;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5482, out _out5483, out _out5484);
              _11156_recursiveGen = _out5482;
              _11157_recOwned = _out5483;
              _11158_recIdents = _out5484;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11156_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11154_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11155_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5485;
              DCOMPUTF16._IOwnership _out5486;
              DCOMPUTF16.COMP.FromOwnership(r, _11157_recOwned, expectedOwnership, out _out5485, out _out5486);
              r = _out5485;
              resultingOwnership = _out5486;
              readIdents = _11158_recIdents;
            }
          } else if (_source620.is_Multiset) {
            DAST._IType _11159___mcc_h670 = _source620.dtor_element;
            {
              RAST._IType _11160_fromTpeGen;
              RAST._IType _out5487;
              _out5487 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11160_fromTpeGen = _out5487;
              RAST._IType _11161_toTpeGen;
              RAST._IType _out5488;
              _out5488 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11161_toTpeGen = _out5488;
              RAST._IExpr _11162_recursiveGen;
              DCOMPUTF16._IOwnership _11163_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11164_recIdents;
              RAST._IExpr _out5489;
              DCOMPUTF16._IOwnership _out5490;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5491;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5489, out _out5490, out _out5491);
              _11162_recursiveGen = _out5489;
              _11163_recOwned = _out5490;
              _11164_recIdents = _out5491;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11162_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11160_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11161_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5492;
              DCOMPUTF16._IOwnership _out5493;
              DCOMPUTF16.COMP.FromOwnership(r, _11163_recOwned, expectedOwnership, out _out5492, out _out5493);
              r = _out5492;
              resultingOwnership = _out5493;
              readIdents = _11164_recIdents;
            }
          } else if (_source620.is_Map) {
            DAST._IType _11165___mcc_h672 = _source620.dtor_key;
            DAST._IType _11166___mcc_h673 = _source620.dtor_value;
            {
              RAST._IType _11167_fromTpeGen;
              RAST._IType _out5494;
              _out5494 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11167_fromTpeGen = _out5494;
              RAST._IType _11168_toTpeGen;
              RAST._IType _out5495;
              _out5495 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11168_toTpeGen = _out5495;
              RAST._IExpr _11169_recursiveGen;
              DCOMPUTF16._IOwnership _11170_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11171_recIdents;
              RAST._IExpr _out5496;
              DCOMPUTF16._IOwnership _out5497;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5498;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5496, out _out5497, out _out5498);
              _11169_recursiveGen = _out5496;
              _11170_recOwned = _out5497;
              _11171_recIdents = _out5498;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11169_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11167_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11168_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5499;
              DCOMPUTF16._IOwnership _out5500;
              DCOMPUTF16.COMP.FromOwnership(r, _11170_recOwned, expectedOwnership, out _out5499, out _out5500);
              r = _out5499;
              resultingOwnership = _out5500;
              readIdents = _11171_recIdents;
            }
          } else if (_source620.is_SetBuilder) {
            DAST._IType _11172___mcc_h676 = _source620.dtor_element;
            {
              RAST._IType _11173_fromTpeGen;
              RAST._IType _out5501;
              _out5501 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11173_fromTpeGen = _out5501;
              RAST._IType _11174_toTpeGen;
              RAST._IType _out5502;
              _out5502 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11174_toTpeGen = _out5502;
              RAST._IExpr _11175_recursiveGen;
              DCOMPUTF16._IOwnership _11176_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11177_recIdents;
              RAST._IExpr _out5503;
              DCOMPUTF16._IOwnership _out5504;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5505;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5503, out _out5504, out _out5505);
              _11175_recursiveGen = _out5503;
              _11176_recOwned = _out5504;
              _11177_recIdents = _out5505;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11175_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11173_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11174_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5506;
              DCOMPUTF16._IOwnership _out5507;
              DCOMPUTF16.COMP.FromOwnership(r, _11176_recOwned, expectedOwnership, out _out5506, out _out5507);
              r = _out5506;
              resultingOwnership = _out5507;
              readIdents = _11177_recIdents;
            }
          } else if (_source620.is_MapBuilder) {
            DAST._IType _11178___mcc_h678 = _source620.dtor_key;
            DAST._IType _11179___mcc_h679 = _source620.dtor_value;
            {
              RAST._IType _11180_fromTpeGen;
              RAST._IType _out5508;
              _out5508 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11180_fromTpeGen = _out5508;
              RAST._IType _11181_toTpeGen;
              RAST._IType _out5509;
              _out5509 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11181_toTpeGen = _out5509;
              RAST._IExpr _11182_recursiveGen;
              DCOMPUTF16._IOwnership _11183_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11184_recIdents;
              RAST._IExpr _out5510;
              DCOMPUTF16._IOwnership _out5511;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5512;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5510, out _out5511, out _out5512);
              _11182_recursiveGen = _out5510;
              _11183_recOwned = _out5511;
              _11184_recIdents = _out5512;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11182_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11180_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11181_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5513;
              DCOMPUTF16._IOwnership _out5514;
              DCOMPUTF16.COMP.FromOwnership(r, _11183_recOwned, expectedOwnership, out _out5513, out _out5514);
              r = _out5513;
              resultingOwnership = _out5514;
              readIdents = _11184_recIdents;
            }
          } else if (_source620.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11185___mcc_h682 = _source620.dtor_args;
            DAST._IType _11186___mcc_h683 = _source620.dtor_result;
            {
              RAST._IType _11187_fromTpeGen;
              RAST._IType _out5515;
              _out5515 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11187_fromTpeGen = _out5515;
              RAST._IType _11188_toTpeGen;
              RAST._IType _out5516;
              _out5516 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11188_toTpeGen = _out5516;
              RAST._IExpr _11189_recursiveGen;
              DCOMPUTF16._IOwnership _11190_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11191_recIdents;
              RAST._IExpr _out5517;
              DCOMPUTF16._IOwnership _out5518;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5519;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5517, out _out5518, out _out5519);
              _11189_recursiveGen = _out5517;
              _11190_recOwned = _out5518;
              _11191_recIdents = _out5519;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11189_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11187_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11188_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5520;
              DCOMPUTF16._IOwnership _out5521;
              DCOMPUTF16.COMP.FromOwnership(r, _11190_recOwned, expectedOwnership, out _out5520, out _out5521);
              r = _out5520;
              resultingOwnership = _out5521;
              readIdents = _11191_recIdents;
            }
          } else if (_source620.is_Primitive) {
            DAST._IPrimitive _11192___mcc_h686 = _source620.dtor_Primitive_a0;
            {
              RAST._IType _11193_fromTpeGen;
              RAST._IType _out5522;
              _out5522 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11193_fromTpeGen = _out5522;
              RAST._IType _11194_toTpeGen;
              RAST._IType _out5523;
              _out5523 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11194_toTpeGen = _out5523;
              RAST._IExpr _11195_recursiveGen;
              DCOMPUTF16._IOwnership _11196_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11197_recIdents;
              RAST._IExpr _out5524;
              DCOMPUTF16._IOwnership _out5525;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5526;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5524, out _out5525, out _out5526);
              _11195_recursiveGen = _out5524;
              _11196_recOwned = _out5525;
              _11197_recIdents = _out5526;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11195_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11193_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11194_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5527;
              DCOMPUTF16._IOwnership _out5528;
              DCOMPUTF16.COMP.FromOwnership(r, _11196_recOwned, expectedOwnership, out _out5527, out _out5528);
              r = _out5527;
              resultingOwnership = _out5528;
              readIdents = _11197_recIdents;
            }
          } else if (_source620.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11198___mcc_h688 = _source620.dtor_Passthrough_a0;
            {
              RAST._IType _11199_fromTpeGen;
              RAST._IType _out5529;
              _out5529 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11199_fromTpeGen = _out5529;
              RAST._IType _11200_toTpeGen;
              RAST._IType _out5530;
              _out5530 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11200_toTpeGen = _out5530;
              RAST._IExpr _11201_recursiveGen;
              DCOMPUTF16._IOwnership _11202_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11203_recIdents;
              RAST._IExpr _out5531;
              DCOMPUTF16._IOwnership _out5532;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5533;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5531, out _out5532, out _out5533);
              _11201_recursiveGen = _out5531;
              _11202_recOwned = _out5532;
              _11203_recIdents = _out5533;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11201_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11199_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11200_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5534;
              DCOMPUTF16._IOwnership _out5535;
              DCOMPUTF16.COMP.FromOwnership(r, _11202_recOwned, expectedOwnership, out _out5534, out _out5535);
              r = _out5534;
              resultingOwnership = _out5535;
              readIdents = _11203_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11204___mcc_h690 = _source620.dtor_TypeArg_a0;
            {
              RAST._IType _11205_fromTpeGen;
              RAST._IType _out5536;
              _out5536 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11205_fromTpeGen = _out5536;
              RAST._IType _11206_toTpeGen;
              RAST._IType _out5537;
              _out5537 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11206_toTpeGen = _out5537;
              RAST._IExpr _11207_recursiveGen;
              DCOMPUTF16._IOwnership _11208_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11209_recIdents;
              RAST._IExpr _out5538;
              DCOMPUTF16._IOwnership _out5539;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5540;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5538, out _out5539, out _out5540);
              _11207_recursiveGen = _out5538;
              _11208_recOwned = _out5539;
              _11209_recIdents = _out5540;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11207_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11205_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11206_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5541;
              DCOMPUTF16._IOwnership _out5542;
              DCOMPUTF16.COMP.FromOwnership(r, _11208_recOwned, expectedOwnership, out _out5541, out _out5542);
              r = _out5541;
              resultingOwnership = _out5542;
              readIdents = _11209_recIdents;
            }
          }
        } else if (_source561.is_Map) {
          DAST._IType _11210___mcc_h692 = _source561.dtor_key;
          DAST._IType _11211___mcc_h693 = _source561.dtor_value;
          DAST._IType _source625 = _9573___mcc_h1;
          if (_source625.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11212___mcc_h700 = _source625.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11213___mcc_h701 = _source625.dtor_typeArgs;
            DAST._IResolvedType _11214___mcc_h702 = _source625.dtor_resolved;
            DAST._IResolvedType _source626 = _11214___mcc_h702;
            if (_source626.is_AllocatedDatatype) {
              DAST._IDatatypeType _11215___mcc_h706 = _source626.dtor_datatypeType;
              {
                RAST._IType _11216_fromTpeGen;
                RAST._IType _out5543;
                _out5543 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11216_fromTpeGen = _out5543;
                RAST._IType _11217_toTpeGen;
                RAST._IType _out5544;
                _out5544 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11217_toTpeGen = _out5544;
                RAST._IExpr _11218_recursiveGen;
                DCOMPUTF16._IOwnership _11219_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11220_recIdents;
                RAST._IExpr _out5545;
                DCOMPUTF16._IOwnership _out5546;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5547;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5545, out _out5546, out _out5547);
                _11218_recursiveGen = _out5545;
                _11219_recOwned = _out5546;
                _11220_recIdents = _out5547;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11218_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11216_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11217_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5548;
                DCOMPUTF16._IOwnership _out5549;
                DCOMPUTF16.COMP.FromOwnership(r, _11219_recOwned, expectedOwnership, out _out5548, out _out5549);
                r = _out5548;
                resultingOwnership = _out5549;
                readIdents = _11220_recIdents;
              }
            } else if (_source626.is_Datatype) {
              DAST._IDatatypeType _11221___mcc_h708 = _source626.dtor_datatypeType;
              {
                RAST._IType _11222_fromTpeGen;
                RAST._IType _out5550;
                _out5550 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11222_fromTpeGen = _out5550;
                RAST._IType _11223_toTpeGen;
                RAST._IType _out5551;
                _out5551 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11223_toTpeGen = _out5551;
                RAST._IExpr _11224_recursiveGen;
                DCOMPUTF16._IOwnership _11225_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11226_recIdents;
                RAST._IExpr _out5552;
                DCOMPUTF16._IOwnership _out5553;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5554;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5552, out _out5553, out _out5554);
                _11224_recursiveGen = _out5552;
                _11225_recOwned = _out5553;
                _11226_recIdents = _out5554;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11224_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11222_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11223_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5555;
                DCOMPUTF16._IOwnership _out5556;
                DCOMPUTF16.COMP.FromOwnership(r, _11225_recOwned, expectedOwnership, out _out5555, out _out5556);
                r = _out5555;
                resultingOwnership = _out5556;
                readIdents = _11226_recIdents;
              }
            } else if (_source626.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11227___mcc_h710 = _source626.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11228___mcc_h711 = _source626.dtor_attributes;
              {
                RAST._IType _11229_fromTpeGen;
                RAST._IType _out5557;
                _out5557 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11229_fromTpeGen = _out5557;
                RAST._IType _11230_toTpeGen;
                RAST._IType _out5558;
                _out5558 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11230_toTpeGen = _out5558;
                RAST._IExpr _11231_recursiveGen;
                DCOMPUTF16._IOwnership _11232_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11233_recIdents;
                RAST._IExpr _out5559;
                DCOMPUTF16._IOwnership _out5560;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5561;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5559, out _out5560, out _out5561);
                _11231_recursiveGen = _out5559;
                _11232_recOwned = _out5560;
                _11233_recIdents = _out5561;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11231_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11229_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11230_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5562;
                DCOMPUTF16._IOwnership _out5563;
                DCOMPUTF16.COMP.FromOwnership(r, _11232_recOwned, expectedOwnership, out _out5562, out _out5563);
                r = _out5562;
                resultingOwnership = _out5563;
                readIdents = _11233_recIdents;
              }
            } else {
              DAST._IType _11234___mcc_h714 = _source626.dtor_baseType;
              DAST._INewtypeRange _11235___mcc_h715 = _source626.dtor_range;
              bool _11236___mcc_h716 = _source626.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11237___mcc_h717 = _source626.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11238_attributes = _11237___mcc_h717;
              bool _11239_erase = _11236___mcc_h716;
              DAST._INewtypeRange _11240_range = _11235___mcc_h715;
              DAST._IType _11241_b = _11234___mcc_h714;
              {
                Std.Wrappers._IOption<RAST._IType> _11242_nativeToType;
                _11242_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11241_b, _11240_range);
                if (object.Equals(_9567_fromTpe, _11241_b)) {
                  RAST._IExpr _11243_recursiveGen;
                  DCOMPUTF16._IOwnership _11244_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11245_recIdents;
                  RAST._IExpr _out5564;
                  DCOMPUTF16._IOwnership _out5565;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5566;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5564, out _out5565, out _out5566);
                  _11243_recursiveGen = _out5564;
                  _11244_recOwned = _out5565;
                  _11245_recIdents = _out5566;
                  readIdents = _11245_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source627 = _11242_nativeToType;
                  if (_source627.is_None) {
                    if (_11239_erase) {
                      r = _11243_recursiveGen;
                    } else {
                      RAST._IType _11246_rhsType;
                      RAST._IType _out5567;
                      _out5567 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _11246_rhsType = _out5567;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11246_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11243_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5568;
                    DCOMPUTF16._IOwnership _out5569;
                    DCOMPUTF16.COMP.FromOwnership(r, _11244_recOwned, expectedOwnership, out _out5568, out _out5569);
                    r = _out5568;
                    resultingOwnership = _out5569;
                  } else {
                    RAST._IType _11247___mcc_h1876 = _source627.dtor_value;
                    RAST._IType _11248_v = _11247___mcc_h1876;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11243_recursiveGen, RAST.Expr.create_ExprFromType(_11248_v)));
                    RAST._IExpr _out5570;
                    DCOMPUTF16._IOwnership _out5571;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5570, out _out5571);
                    r = _out5570;
                    resultingOwnership = _out5571;
                  }
                } else {
                  if ((_11242_nativeToType).is_Some) {
                    DAST._IType _source628 = _9567_fromTpe;
                    if (_source628.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11249___mcc_h1877 = _source628.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11250___mcc_h1878 = _source628.dtor_typeArgs;
                      DAST._IResolvedType _11251___mcc_h1879 = _source628.dtor_resolved;
                      DAST._IResolvedType _source629 = _11251___mcc_h1879;
                      if (_source629.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11252___mcc_h1883 = _source629.dtor_datatypeType;
                      } else if (_source629.is_Datatype) {
                        DAST._IDatatypeType _11253___mcc_h1885 = _source629.dtor_datatypeType;
                      } else if (_source629.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11254___mcc_h1887 = _source629.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11255___mcc_h1888 = _source629.dtor_attributes;
                      } else {
                        DAST._IType _11256___mcc_h1891 = _source629.dtor_baseType;
                        DAST._INewtypeRange _11257___mcc_h1892 = _source629.dtor_range;
                        bool _11258___mcc_h1893 = _source629.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11259___mcc_h1894 = _source629.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11260_attributes0 = _11259___mcc_h1894;
                        bool _11261_erase0 = _11258___mcc_h1893;
                        DAST._INewtypeRange _11262_range0 = _11257___mcc_h1892;
                        DAST._IType _11263_b0 = _11256___mcc_h1891;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11264_nativeFromType;
                          _11264_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11263_b0, _11262_range0);
                          if ((_11264_nativeFromType).is_Some) {
                            RAST._IExpr _11265_recursiveGen;
                            DCOMPUTF16._IOwnership _11266_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11267_recIdents;
                            RAST._IExpr _out5572;
                            DCOMPUTF16._IOwnership _out5573;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5574;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5572, out _out5573, out _out5574);
                            _11265_recursiveGen = _out5572;
                            _11266_recOwned = _out5573;
                            _11267_recIdents = _out5574;
                            RAST._IExpr _out5575;
                            DCOMPUTF16._IOwnership _out5576;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11265_recursiveGen, (_11242_nativeToType).dtor_value), _11266_recOwned, expectedOwnership, out _out5575, out _out5576);
                            r = _out5575;
                            resultingOwnership = _out5576;
                            readIdents = _11267_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source628.is_Nullable) {
                      DAST._IType _11268___mcc_h1899 = _source628.dtor_Nullable_a0;
                    } else if (_source628.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11269___mcc_h1901 = _source628.dtor_Tuple_a0;
                    } else if (_source628.is_Array) {
                      DAST._IType _11270___mcc_h1903 = _source628.dtor_element;
                      BigInteger _11271___mcc_h1904 = _source628.dtor_dims;
                    } else if (_source628.is_Seq) {
                      DAST._IType _11272___mcc_h1907 = _source628.dtor_element;
                    } else if (_source628.is_Set) {
                      DAST._IType _11273___mcc_h1909 = _source628.dtor_element;
                    } else if (_source628.is_Multiset) {
                      DAST._IType _11274___mcc_h1911 = _source628.dtor_element;
                    } else if (_source628.is_Map) {
                      DAST._IType _11275___mcc_h1913 = _source628.dtor_key;
                      DAST._IType _11276___mcc_h1914 = _source628.dtor_value;
                    } else if (_source628.is_SetBuilder) {
                      DAST._IType _11277___mcc_h1917 = _source628.dtor_element;
                    } else if (_source628.is_MapBuilder) {
                      DAST._IType _11278___mcc_h1919 = _source628.dtor_key;
                      DAST._IType _11279___mcc_h1920 = _source628.dtor_value;
                    } else if (_source628.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11280___mcc_h1923 = _source628.dtor_args;
                      DAST._IType _11281___mcc_h1924 = _source628.dtor_result;
                    } else if (_source628.is_Primitive) {
                      DAST._IPrimitive _11282___mcc_h1927 = _source628.dtor_Primitive_a0;
                    } else if (_source628.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11283___mcc_h1929 = _source628.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11284___mcc_h1931 = _source628.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11285_recursiveGen;
                      DCOMPUTF16._IOwnership _11286_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11287_recIdents;
                      RAST._IExpr _out5577;
                      DCOMPUTF16._IOwnership _out5578;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5579;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5577, out _out5578, out _out5579);
                      _11285_recursiveGen = _out5577;
                      _11286_recOwned = _out5578;
                      _11287_recIdents = _out5579;
                      RAST._IExpr _out5580;
                      DCOMPUTF16._IOwnership _out5581;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11285_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11242_nativeToType).dtor_value), _11286_recOwned, expectedOwnership, out _out5580, out _out5581);
                      r = _out5580;
                      resultingOwnership = _out5581;
                      readIdents = _11287_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5582;
                  DCOMPUTF16._IOwnership _out5583;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5584;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _11241_b), _11241_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out5582, out _out5583, out _out5584);
                  r = _out5582;
                  resultingOwnership = _out5583;
                  readIdents = _out5584;
                }
              }
            }
          } else if (_source625.is_Nullable) {
            DAST._IType _11288___mcc_h722 = _source625.dtor_Nullable_a0;
            {
              RAST._IExpr _11289_recursiveGen;
              DCOMPUTF16._IOwnership _11290_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11291_recIdents;
              RAST._IExpr _out5585;
              DCOMPUTF16._IOwnership _out5586;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5587;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5585, out _out5586, out _out5587);
              _11289_recursiveGen = _out5585;
              _11290_recOwned = _out5586;
              _11291_recIdents = _out5587;
              r = _11289_recursiveGen;
              if (object.Equals(_11290_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5588;
              DCOMPUTF16._IOwnership _out5589;
              DCOMPUTF16.COMP.FromOwnership(r, _11290_recOwned, expectedOwnership, out _out5588, out _out5589);
              r = _out5588;
              resultingOwnership = _out5589;
              readIdents = _11291_recIdents;
            }
          } else if (_source625.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11292___mcc_h724 = _source625.dtor_Tuple_a0;
            {
              RAST._IType _11293_fromTpeGen;
              RAST._IType _out5590;
              _out5590 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11293_fromTpeGen = _out5590;
              RAST._IType _11294_toTpeGen;
              RAST._IType _out5591;
              _out5591 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11294_toTpeGen = _out5591;
              RAST._IExpr _11295_recursiveGen;
              DCOMPUTF16._IOwnership _11296_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11297_recIdents;
              RAST._IExpr _out5592;
              DCOMPUTF16._IOwnership _out5593;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5594;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5592, out _out5593, out _out5594);
              _11295_recursiveGen = _out5592;
              _11296_recOwned = _out5593;
              _11297_recIdents = _out5594;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11295_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11293_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11294_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5595;
              DCOMPUTF16._IOwnership _out5596;
              DCOMPUTF16.COMP.FromOwnership(r, _11296_recOwned, expectedOwnership, out _out5595, out _out5596);
              r = _out5595;
              resultingOwnership = _out5596;
              readIdents = _11297_recIdents;
            }
          } else if (_source625.is_Array) {
            DAST._IType _11298___mcc_h726 = _source625.dtor_element;
            BigInteger _11299___mcc_h727 = _source625.dtor_dims;
            {
              RAST._IType _11300_fromTpeGen;
              RAST._IType _out5597;
              _out5597 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11300_fromTpeGen = _out5597;
              RAST._IType _11301_toTpeGen;
              RAST._IType _out5598;
              _out5598 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11301_toTpeGen = _out5598;
              RAST._IExpr _11302_recursiveGen;
              DCOMPUTF16._IOwnership _11303_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11304_recIdents;
              RAST._IExpr _out5599;
              DCOMPUTF16._IOwnership _out5600;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5601;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5599, out _out5600, out _out5601);
              _11302_recursiveGen = _out5599;
              _11303_recOwned = _out5600;
              _11304_recIdents = _out5601;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11302_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11300_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11301_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5602;
              DCOMPUTF16._IOwnership _out5603;
              DCOMPUTF16.COMP.FromOwnership(r, _11303_recOwned, expectedOwnership, out _out5602, out _out5603);
              r = _out5602;
              resultingOwnership = _out5603;
              readIdents = _11304_recIdents;
            }
          } else if (_source625.is_Seq) {
            DAST._IType _11305___mcc_h730 = _source625.dtor_element;
            {
              RAST._IType _11306_fromTpeGen;
              RAST._IType _out5604;
              _out5604 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11306_fromTpeGen = _out5604;
              RAST._IType _11307_toTpeGen;
              RAST._IType _out5605;
              _out5605 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11307_toTpeGen = _out5605;
              RAST._IExpr _11308_recursiveGen;
              DCOMPUTF16._IOwnership _11309_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11310_recIdents;
              RAST._IExpr _out5606;
              DCOMPUTF16._IOwnership _out5607;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5608;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5606, out _out5607, out _out5608);
              _11308_recursiveGen = _out5606;
              _11309_recOwned = _out5607;
              _11310_recIdents = _out5608;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11308_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11306_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11307_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5609;
              DCOMPUTF16._IOwnership _out5610;
              DCOMPUTF16.COMP.FromOwnership(r, _11309_recOwned, expectedOwnership, out _out5609, out _out5610);
              r = _out5609;
              resultingOwnership = _out5610;
              readIdents = _11310_recIdents;
            }
          } else if (_source625.is_Set) {
            DAST._IType _11311___mcc_h732 = _source625.dtor_element;
            {
              RAST._IType _11312_fromTpeGen;
              RAST._IType _out5611;
              _out5611 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11312_fromTpeGen = _out5611;
              RAST._IType _11313_toTpeGen;
              RAST._IType _out5612;
              _out5612 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11313_toTpeGen = _out5612;
              RAST._IExpr _11314_recursiveGen;
              DCOMPUTF16._IOwnership _11315_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11316_recIdents;
              RAST._IExpr _out5613;
              DCOMPUTF16._IOwnership _out5614;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5615;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5613, out _out5614, out _out5615);
              _11314_recursiveGen = _out5613;
              _11315_recOwned = _out5614;
              _11316_recIdents = _out5615;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11314_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11312_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11313_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5616;
              DCOMPUTF16._IOwnership _out5617;
              DCOMPUTF16.COMP.FromOwnership(r, _11315_recOwned, expectedOwnership, out _out5616, out _out5617);
              r = _out5616;
              resultingOwnership = _out5617;
              readIdents = _11316_recIdents;
            }
          } else if (_source625.is_Multiset) {
            DAST._IType _11317___mcc_h734 = _source625.dtor_element;
            {
              RAST._IType _11318_fromTpeGen;
              RAST._IType _out5618;
              _out5618 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11318_fromTpeGen = _out5618;
              RAST._IType _11319_toTpeGen;
              RAST._IType _out5619;
              _out5619 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11319_toTpeGen = _out5619;
              RAST._IExpr _11320_recursiveGen;
              DCOMPUTF16._IOwnership _11321_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11322_recIdents;
              RAST._IExpr _out5620;
              DCOMPUTF16._IOwnership _out5621;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5622;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5620, out _out5621, out _out5622);
              _11320_recursiveGen = _out5620;
              _11321_recOwned = _out5621;
              _11322_recIdents = _out5622;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11320_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11318_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11319_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5623;
              DCOMPUTF16._IOwnership _out5624;
              DCOMPUTF16.COMP.FromOwnership(r, _11321_recOwned, expectedOwnership, out _out5623, out _out5624);
              r = _out5623;
              resultingOwnership = _out5624;
              readIdents = _11322_recIdents;
            }
          } else if (_source625.is_Map) {
            DAST._IType _11323___mcc_h736 = _source625.dtor_key;
            DAST._IType _11324___mcc_h737 = _source625.dtor_value;
            {
              RAST._IType _11325_fromTpeGen;
              RAST._IType _out5625;
              _out5625 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11325_fromTpeGen = _out5625;
              RAST._IType _11326_toTpeGen;
              RAST._IType _out5626;
              _out5626 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11326_toTpeGen = _out5626;
              RAST._IExpr _11327_recursiveGen;
              DCOMPUTF16._IOwnership _11328_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11329_recIdents;
              RAST._IExpr _out5627;
              DCOMPUTF16._IOwnership _out5628;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5629;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5627, out _out5628, out _out5629);
              _11327_recursiveGen = _out5627;
              _11328_recOwned = _out5628;
              _11329_recIdents = _out5629;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11327_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11325_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11326_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5630;
              DCOMPUTF16._IOwnership _out5631;
              DCOMPUTF16.COMP.FromOwnership(r, _11328_recOwned, expectedOwnership, out _out5630, out _out5631);
              r = _out5630;
              resultingOwnership = _out5631;
              readIdents = _11329_recIdents;
            }
          } else if (_source625.is_SetBuilder) {
            DAST._IType _11330___mcc_h740 = _source625.dtor_element;
            {
              RAST._IType _11331_fromTpeGen;
              RAST._IType _out5632;
              _out5632 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11331_fromTpeGen = _out5632;
              RAST._IType _11332_toTpeGen;
              RAST._IType _out5633;
              _out5633 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11332_toTpeGen = _out5633;
              RAST._IExpr _11333_recursiveGen;
              DCOMPUTF16._IOwnership _11334_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11335_recIdents;
              RAST._IExpr _out5634;
              DCOMPUTF16._IOwnership _out5635;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5636;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5634, out _out5635, out _out5636);
              _11333_recursiveGen = _out5634;
              _11334_recOwned = _out5635;
              _11335_recIdents = _out5636;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11333_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11331_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11332_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5637;
              DCOMPUTF16._IOwnership _out5638;
              DCOMPUTF16.COMP.FromOwnership(r, _11334_recOwned, expectedOwnership, out _out5637, out _out5638);
              r = _out5637;
              resultingOwnership = _out5638;
              readIdents = _11335_recIdents;
            }
          } else if (_source625.is_MapBuilder) {
            DAST._IType _11336___mcc_h742 = _source625.dtor_key;
            DAST._IType _11337___mcc_h743 = _source625.dtor_value;
            {
              RAST._IType _11338_fromTpeGen;
              RAST._IType _out5639;
              _out5639 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11338_fromTpeGen = _out5639;
              RAST._IType _11339_toTpeGen;
              RAST._IType _out5640;
              _out5640 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11339_toTpeGen = _out5640;
              RAST._IExpr _11340_recursiveGen;
              DCOMPUTF16._IOwnership _11341_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11342_recIdents;
              RAST._IExpr _out5641;
              DCOMPUTF16._IOwnership _out5642;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5643;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5641, out _out5642, out _out5643);
              _11340_recursiveGen = _out5641;
              _11341_recOwned = _out5642;
              _11342_recIdents = _out5643;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11340_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11338_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11339_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5644;
              DCOMPUTF16._IOwnership _out5645;
              DCOMPUTF16.COMP.FromOwnership(r, _11341_recOwned, expectedOwnership, out _out5644, out _out5645);
              r = _out5644;
              resultingOwnership = _out5645;
              readIdents = _11342_recIdents;
            }
          } else if (_source625.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11343___mcc_h746 = _source625.dtor_args;
            DAST._IType _11344___mcc_h747 = _source625.dtor_result;
            {
              RAST._IType _11345_fromTpeGen;
              RAST._IType _out5646;
              _out5646 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11345_fromTpeGen = _out5646;
              RAST._IType _11346_toTpeGen;
              RAST._IType _out5647;
              _out5647 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11346_toTpeGen = _out5647;
              RAST._IExpr _11347_recursiveGen;
              DCOMPUTF16._IOwnership _11348_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11349_recIdents;
              RAST._IExpr _out5648;
              DCOMPUTF16._IOwnership _out5649;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5650;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5648, out _out5649, out _out5650);
              _11347_recursiveGen = _out5648;
              _11348_recOwned = _out5649;
              _11349_recIdents = _out5650;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11347_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11345_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11346_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5651;
              DCOMPUTF16._IOwnership _out5652;
              DCOMPUTF16.COMP.FromOwnership(r, _11348_recOwned, expectedOwnership, out _out5651, out _out5652);
              r = _out5651;
              resultingOwnership = _out5652;
              readIdents = _11349_recIdents;
            }
          } else if (_source625.is_Primitive) {
            DAST._IPrimitive _11350___mcc_h750 = _source625.dtor_Primitive_a0;
            {
              RAST._IType _11351_fromTpeGen;
              RAST._IType _out5653;
              _out5653 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11351_fromTpeGen = _out5653;
              RAST._IType _11352_toTpeGen;
              RAST._IType _out5654;
              _out5654 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11352_toTpeGen = _out5654;
              RAST._IExpr _11353_recursiveGen;
              DCOMPUTF16._IOwnership _11354_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11355_recIdents;
              RAST._IExpr _out5655;
              DCOMPUTF16._IOwnership _out5656;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5657;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5655, out _out5656, out _out5657);
              _11353_recursiveGen = _out5655;
              _11354_recOwned = _out5656;
              _11355_recIdents = _out5657;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11353_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11351_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11352_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5658;
              DCOMPUTF16._IOwnership _out5659;
              DCOMPUTF16.COMP.FromOwnership(r, _11354_recOwned, expectedOwnership, out _out5658, out _out5659);
              r = _out5658;
              resultingOwnership = _out5659;
              readIdents = _11355_recIdents;
            }
          } else if (_source625.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11356___mcc_h752 = _source625.dtor_Passthrough_a0;
            {
              RAST._IType _11357_fromTpeGen;
              RAST._IType _out5660;
              _out5660 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11357_fromTpeGen = _out5660;
              RAST._IType _11358_toTpeGen;
              RAST._IType _out5661;
              _out5661 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11358_toTpeGen = _out5661;
              RAST._IExpr _11359_recursiveGen;
              DCOMPUTF16._IOwnership _11360_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11361_recIdents;
              RAST._IExpr _out5662;
              DCOMPUTF16._IOwnership _out5663;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5664;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5662, out _out5663, out _out5664);
              _11359_recursiveGen = _out5662;
              _11360_recOwned = _out5663;
              _11361_recIdents = _out5664;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11359_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11357_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11358_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5665;
              DCOMPUTF16._IOwnership _out5666;
              DCOMPUTF16.COMP.FromOwnership(r, _11360_recOwned, expectedOwnership, out _out5665, out _out5666);
              r = _out5665;
              resultingOwnership = _out5666;
              readIdents = _11361_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11362___mcc_h754 = _source625.dtor_TypeArg_a0;
            {
              RAST._IType _11363_fromTpeGen;
              RAST._IType _out5667;
              _out5667 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11363_fromTpeGen = _out5667;
              RAST._IType _11364_toTpeGen;
              RAST._IType _out5668;
              _out5668 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11364_toTpeGen = _out5668;
              RAST._IExpr _11365_recursiveGen;
              DCOMPUTF16._IOwnership _11366_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11367_recIdents;
              RAST._IExpr _out5669;
              DCOMPUTF16._IOwnership _out5670;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5671;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5669, out _out5670, out _out5671);
              _11365_recursiveGen = _out5669;
              _11366_recOwned = _out5670;
              _11367_recIdents = _out5671;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11365_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11363_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11364_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5672;
              DCOMPUTF16._IOwnership _out5673;
              DCOMPUTF16.COMP.FromOwnership(r, _11366_recOwned, expectedOwnership, out _out5672, out _out5673);
              r = _out5672;
              resultingOwnership = _out5673;
              readIdents = _11367_recIdents;
            }
          }
        } else if (_source561.is_SetBuilder) {
          DAST._IType _11368___mcc_h756 = _source561.dtor_element;
          DAST._IType _source630 = _9573___mcc_h1;
          if (_source630.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11369___mcc_h760 = _source630.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11370___mcc_h761 = _source630.dtor_typeArgs;
            DAST._IResolvedType _11371___mcc_h762 = _source630.dtor_resolved;
            DAST._IResolvedType _source631 = _11371___mcc_h762;
            if (_source631.is_AllocatedDatatype) {
              DAST._IDatatypeType _11372___mcc_h766 = _source631.dtor_datatypeType;
              {
                RAST._IType _11373_fromTpeGen;
                RAST._IType _out5674;
                _out5674 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11373_fromTpeGen = _out5674;
                RAST._IType _11374_toTpeGen;
                RAST._IType _out5675;
                _out5675 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11374_toTpeGen = _out5675;
                RAST._IExpr _11375_recursiveGen;
                DCOMPUTF16._IOwnership _11376_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11377_recIdents;
                RAST._IExpr _out5676;
                DCOMPUTF16._IOwnership _out5677;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5678;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5676, out _out5677, out _out5678);
                _11375_recursiveGen = _out5676;
                _11376_recOwned = _out5677;
                _11377_recIdents = _out5678;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11375_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11373_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11374_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5679;
                DCOMPUTF16._IOwnership _out5680;
                DCOMPUTF16.COMP.FromOwnership(r, _11376_recOwned, expectedOwnership, out _out5679, out _out5680);
                r = _out5679;
                resultingOwnership = _out5680;
                readIdents = _11377_recIdents;
              }
            } else if (_source631.is_Datatype) {
              DAST._IDatatypeType _11378___mcc_h768 = _source631.dtor_datatypeType;
              {
                RAST._IType _11379_fromTpeGen;
                RAST._IType _out5681;
                _out5681 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11379_fromTpeGen = _out5681;
                RAST._IType _11380_toTpeGen;
                RAST._IType _out5682;
                _out5682 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11380_toTpeGen = _out5682;
                RAST._IExpr _11381_recursiveGen;
                DCOMPUTF16._IOwnership _11382_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11383_recIdents;
                RAST._IExpr _out5683;
                DCOMPUTF16._IOwnership _out5684;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5685;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5683, out _out5684, out _out5685);
                _11381_recursiveGen = _out5683;
                _11382_recOwned = _out5684;
                _11383_recIdents = _out5685;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11381_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11379_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11380_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5686;
                DCOMPUTF16._IOwnership _out5687;
                DCOMPUTF16.COMP.FromOwnership(r, _11382_recOwned, expectedOwnership, out _out5686, out _out5687);
                r = _out5686;
                resultingOwnership = _out5687;
                readIdents = _11383_recIdents;
              }
            } else if (_source631.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11384___mcc_h770 = _source631.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11385___mcc_h771 = _source631.dtor_attributes;
              {
                RAST._IType _11386_fromTpeGen;
                RAST._IType _out5688;
                _out5688 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11386_fromTpeGen = _out5688;
                RAST._IType _11387_toTpeGen;
                RAST._IType _out5689;
                _out5689 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11387_toTpeGen = _out5689;
                RAST._IExpr _11388_recursiveGen;
                DCOMPUTF16._IOwnership _11389_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11390_recIdents;
                RAST._IExpr _out5690;
                DCOMPUTF16._IOwnership _out5691;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5692;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5690, out _out5691, out _out5692);
                _11388_recursiveGen = _out5690;
                _11389_recOwned = _out5691;
                _11390_recIdents = _out5692;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11388_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11386_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11387_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5693;
                DCOMPUTF16._IOwnership _out5694;
                DCOMPUTF16.COMP.FromOwnership(r, _11389_recOwned, expectedOwnership, out _out5693, out _out5694);
                r = _out5693;
                resultingOwnership = _out5694;
                readIdents = _11390_recIdents;
              }
            } else {
              DAST._IType _11391___mcc_h774 = _source631.dtor_baseType;
              DAST._INewtypeRange _11392___mcc_h775 = _source631.dtor_range;
              bool _11393___mcc_h776 = _source631.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11394___mcc_h777 = _source631.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11395_attributes = _11394___mcc_h777;
              bool _11396_erase = _11393___mcc_h776;
              DAST._INewtypeRange _11397_range = _11392___mcc_h775;
              DAST._IType _11398_b = _11391___mcc_h774;
              {
                Std.Wrappers._IOption<RAST._IType> _11399_nativeToType;
                _11399_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11398_b, _11397_range);
                if (object.Equals(_9567_fromTpe, _11398_b)) {
                  RAST._IExpr _11400_recursiveGen;
                  DCOMPUTF16._IOwnership _11401_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11402_recIdents;
                  RAST._IExpr _out5695;
                  DCOMPUTF16._IOwnership _out5696;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5697;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5695, out _out5696, out _out5697);
                  _11400_recursiveGen = _out5695;
                  _11401_recOwned = _out5696;
                  _11402_recIdents = _out5697;
                  readIdents = _11402_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source632 = _11399_nativeToType;
                  if (_source632.is_None) {
                    if (_11396_erase) {
                      r = _11400_recursiveGen;
                    } else {
                      RAST._IType _11403_rhsType;
                      RAST._IType _out5698;
                      _out5698 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _11403_rhsType = _out5698;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11403_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11400_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5699;
                    DCOMPUTF16._IOwnership _out5700;
                    DCOMPUTF16.COMP.FromOwnership(r, _11401_recOwned, expectedOwnership, out _out5699, out _out5700);
                    r = _out5699;
                    resultingOwnership = _out5700;
                  } else {
                    RAST._IType _11404___mcc_h1933 = _source632.dtor_value;
                    RAST._IType _11405_v = _11404___mcc_h1933;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11400_recursiveGen, RAST.Expr.create_ExprFromType(_11405_v)));
                    RAST._IExpr _out5701;
                    DCOMPUTF16._IOwnership _out5702;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5701, out _out5702);
                    r = _out5701;
                    resultingOwnership = _out5702;
                  }
                } else {
                  if ((_11399_nativeToType).is_Some) {
                    DAST._IType _source633 = _9567_fromTpe;
                    if (_source633.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11406___mcc_h1934 = _source633.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11407___mcc_h1935 = _source633.dtor_typeArgs;
                      DAST._IResolvedType _11408___mcc_h1936 = _source633.dtor_resolved;
                      DAST._IResolvedType _source634 = _11408___mcc_h1936;
                      if (_source634.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11409___mcc_h1940 = _source634.dtor_datatypeType;
                      } else if (_source634.is_Datatype) {
                        DAST._IDatatypeType _11410___mcc_h1942 = _source634.dtor_datatypeType;
                      } else if (_source634.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11411___mcc_h1944 = _source634.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11412___mcc_h1945 = _source634.dtor_attributes;
                      } else {
                        DAST._IType _11413___mcc_h1948 = _source634.dtor_baseType;
                        DAST._INewtypeRange _11414___mcc_h1949 = _source634.dtor_range;
                        bool _11415___mcc_h1950 = _source634.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11416___mcc_h1951 = _source634.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11417_attributes0 = _11416___mcc_h1951;
                        bool _11418_erase0 = _11415___mcc_h1950;
                        DAST._INewtypeRange _11419_range0 = _11414___mcc_h1949;
                        DAST._IType _11420_b0 = _11413___mcc_h1948;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11421_nativeFromType;
                          _11421_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11420_b0, _11419_range0);
                          if ((_11421_nativeFromType).is_Some) {
                            RAST._IExpr _11422_recursiveGen;
                            DCOMPUTF16._IOwnership _11423_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11424_recIdents;
                            RAST._IExpr _out5703;
                            DCOMPUTF16._IOwnership _out5704;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5705;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5703, out _out5704, out _out5705);
                            _11422_recursiveGen = _out5703;
                            _11423_recOwned = _out5704;
                            _11424_recIdents = _out5705;
                            RAST._IExpr _out5706;
                            DCOMPUTF16._IOwnership _out5707;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11422_recursiveGen, (_11399_nativeToType).dtor_value), _11423_recOwned, expectedOwnership, out _out5706, out _out5707);
                            r = _out5706;
                            resultingOwnership = _out5707;
                            readIdents = _11424_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source633.is_Nullable) {
                      DAST._IType _11425___mcc_h1956 = _source633.dtor_Nullable_a0;
                    } else if (_source633.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11426___mcc_h1958 = _source633.dtor_Tuple_a0;
                    } else if (_source633.is_Array) {
                      DAST._IType _11427___mcc_h1960 = _source633.dtor_element;
                      BigInteger _11428___mcc_h1961 = _source633.dtor_dims;
                    } else if (_source633.is_Seq) {
                      DAST._IType _11429___mcc_h1964 = _source633.dtor_element;
                    } else if (_source633.is_Set) {
                      DAST._IType _11430___mcc_h1966 = _source633.dtor_element;
                    } else if (_source633.is_Multiset) {
                      DAST._IType _11431___mcc_h1968 = _source633.dtor_element;
                    } else if (_source633.is_Map) {
                      DAST._IType _11432___mcc_h1970 = _source633.dtor_key;
                      DAST._IType _11433___mcc_h1971 = _source633.dtor_value;
                    } else if (_source633.is_SetBuilder) {
                      DAST._IType _11434___mcc_h1974 = _source633.dtor_element;
                    } else if (_source633.is_MapBuilder) {
                      DAST._IType _11435___mcc_h1976 = _source633.dtor_key;
                      DAST._IType _11436___mcc_h1977 = _source633.dtor_value;
                    } else if (_source633.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11437___mcc_h1980 = _source633.dtor_args;
                      DAST._IType _11438___mcc_h1981 = _source633.dtor_result;
                    } else if (_source633.is_Primitive) {
                      DAST._IPrimitive _11439___mcc_h1984 = _source633.dtor_Primitive_a0;
                    } else if (_source633.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11440___mcc_h1986 = _source633.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11441___mcc_h1988 = _source633.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11442_recursiveGen;
                      DCOMPUTF16._IOwnership _11443_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11444_recIdents;
                      RAST._IExpr _out5708;
                      DCOMPUTF16._IOwnership _out5709;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5710;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5708, out _out5709, out _out5710);
                      _11442_recursiveGen = _out5708;
                      _11443_recOwned = _out5709;
                      _11444_recIdents = _out5710;
                      RAST._IExpr _out5711;
                      DCOMPUTF16._IOwnership _out5712;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11442_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11399_nativeToType).dtor_value), _11443_recOwned, expectedOwnership, out _out5711, out _out5712);
                      r = _out5711;
                      resultingOwnership = _out5712;
                      readIdents = _11444_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5713;
                  DCOMPUTF16._IOwnership _out5714;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5715;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _11398_b), _11398_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out5713, out _out5714, out _out5715);
                  r = _out5713;
                  resultingOwnership = _out5714;
                  readIdents = _out5715;
                }
              }
            }
          } else if (_source630.is_Nullable) {
            DAST._IType _11445___mcc_h782 = _source630.dtor_Nullable_a0;
            {
              RAST._IExpr _11446_recursiveGen;
              DCOMPUTF16._IOwnership _11447_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11448_recIdents;
              RAST._IExpr _out5716;
              DCOMPUTF16._IOwnership _out5717;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5718;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5716, out _out5717, out _out5718);
              _11446_recursiveGen = _out5716;
              _11447_recOwned = _out5717;
              _11448_recIdents = _out5718;
              r = _11446_recursiveGen;
              if (object.Equals(_11447_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5719;
              DCOMPUTF16._IOwnership _out5720;
              DCOMPUTF16.COMP.FromOwnership(r, _11447_recOwned, expectedOwnership, out _out5719, out _out5720);
              r = _out5719;
              resultingOwnership = _out5720;
              readIdents = _11448_recIdents;
            }
          } else if (_source630.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11449___mcc_h784 = _source630.dtor_Tuple_a0;
            {
              RAST._IType _11450_fromTpeGen;
              RAST._IType _out5721;
              _out5721 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11450_fromTpeGen = _out5721;
              RAST._IType _11451_toTpeGen;
              RAST._IType _out5722;
              _out5722 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11451_toTpeGen = _out5722;
              RAST._IExpr _11452_recursiveGen;
              DCOMPUTF16._IOwnership _11453_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11454_recIdents;
              RAST._IExpr _out5723;
              DCOMPUTF16._IOwnership _out5724;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5725;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5723, out _out5724, out _out5725);
              _11452_recursiveGen = _out5723;
              _11453_recOwned = _out5724;
              _11454_recIdents = _out5725;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11452_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11450_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11451_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5726;
              DCOMPUTF16._IOwnership _out5727;
              DCOMPUTF16.COMP.FromOwnership(r, _11453_recOwned, expectedOwnership, out _out5726, out _out5727);
              r = _out5726;
              resultingOwnership = _out5727;
              readIdents = _11454_recIdents;
            }
          } else if (_source630.is_Array) {
            DAST._IType _11455___mcc_h786 = _source630.dtor_element;
            BigInteger _11456___mcc_h787 = _source630.dtor_dims;
            {
              RAST._IType _11457_fromTpeGen;
              RAST._IType _out5728;
              _out5728 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11457_fromTpeGen = _out5728;
              RAST._IType _11458_toTpeGen;
              RAST._IType _out5729;
              _out5729 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11458_toTpeGen = _out5729;
              RAST._IExpr _11459_recursiveGen;
              DCOMPUTF16._IOwnership _11460_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11461_recIdents;
              RAST._IExpr _out5730;
              DCOMPUTF16._IOwnership _out5731;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5732;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5730, out _out5731, out _out5732);
              _11459_recursiveGen = _out5730;
              _11460_recOwned = _out5731;
              _11461_recIdents = _out5732;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11459_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11457_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11458_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5733;
              DCOMPUTF16._IOwnership _out5734;
              DCOMPUTF16.COMP.FromOwnership(r, _11460_recOwned, expectedOwnership, out _out5733, out _out5734);
              r = _out5733;
              resultingOwnership = _out5734;
              readIdents = _11461_recIdents;
            }
          } else if (_source630.is_Seq) {
            DAST._IType _11462___mcc_h790 = _source630.dtor_element;
            {
              RAST._IType _11463_fromTpeGen;
              RAST._IType _out5735;
              _out5735 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11463_fromTpeGen = _out5735;
              RAST._IType _11464_toTpeGen;
              RAST._IType _out5736;
              _out5736 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11464_toTpeGen = _out5736;
              RAST._IExpr _11465_recursiveGen;
              DCOMPUTF16._IOwnership _11466_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11467_recIdents;
              RAST._IExpr _out5737;
              DCOMPUTF16._IOwnership _out5738;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5739;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5737, out _out5738, out _out5739);
              _11465_recursiveGen = _out5737;
              _11466_recOwned = _out5738;
              _11467_recIdents = _out5739;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11465_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11463_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11464_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5740;
              DCOMPUTF16._IOwnership _out5741;
              DCOMPUTF16.COMP.FromOwnership(r, _11466_recOwned, expectedOwnership, out _out5740, out _out5741);
              r = _out5740;
              resultingOwnership = _out5741;
              readIdents = _11467_recIdents;
            }
          } else if (_source630.is_Set) {
            DAST._IType _11468___mcc_h792 = _source630.dtor_element;
            {
              RAST._IType _11469_fromTpeGen;
              RAST._IType _out5742;
              _out5742 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11469_fromTpeGen = _out5742;
              RAST._IType _11470_toTpeGen;
              RAST._IType _out5743;
              _out5743 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11470_toTpeGen = _out5743;
              RAST._IExpr _11471_recursiveGen;
              DCOMPUTF16._IOwnership _11472_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11473_recIdents;
              RAST._IExpr _out5744;
              DCOMPUTF16._IOwnership _out5745;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5746;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5744, out _out5745, out _out5746);
              _11471_recursiveGen = _out5744;
              _11472_recOwned = _out5745;
              _11473_recIdents = _out5746;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11471_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11469_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11470_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5747;
              DCOMPUTF16._IOwnership _out5748;
              DCOMPUTF16.COMP.FromOwnership(r, _11472_recOwned, expectedOwnership, out _out5747, out _out5748);
              r = _out5747;
              resultingOwnership = _out5748;
              readIdents = _11473_recIdents;
            }
          } else if (_source630.is_Multiset) {
            DAST._IType _11474___mcc_h794 = _source630.dtor_element;
            {
              RAST._IType _11475_fromTpeGen;
              RAST._IType _out5749;
              _out5749 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11475_fromTpeGen = _out5749;
              RAST._IType _11476_toTpeGen;
              RAST._IType _out5750;
              _out5750 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11476_toTpeGen = _out5750;
              RAST._IExpr _11477_recursiveGen;
              DCOMPUTF16._IOwnership _11478_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11479_recIdents;
              RAST._IExpr _out5751;
              DCOMPUTF16._IOwnership _out5752;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5753;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5751, out _out5752, out _out5753);
              _11477_recursiveGen = _out5751;
              _11478_recOwned = _out5752;
              _11479_recIdents = _out5753;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11477_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11475_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11476_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5754;
              DCOMPUTF16._IOwnership _out5755;
              DCOMPUTF16.COMP.FromOwnership(r, _11478_recOwned, expectedOwnership, out _out5754, out _out5755);
              r = _out5754;
              resultingOwnership = _out5755;
              readIdents = _11479_recIdents;
            }
          } else if (_source630.is_Map) {
            DAST._IType _11480___mcc_h796 = _source630.dtor_key;
            DAST._IType _11481___mcc_h797 = _source630.dtor_value;
            {
              RAST._IType _11482_fromTpeGen;
              RAST._IType _out5756;
              _out5756 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11482_fromTpeGen = _out5756;
              RAST._IType _11483_toTpeGen;
              RAST._IType _out5757;
              _out5757 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11483_toTpeGen = _out5757;
              RAST._IExpr _11484_recursiveGen;
              DCOMPUTF16._IOwnership _11485_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11486_recIdents;
              RAST._IExpr _out5758;
              DCOMPUTF16._IOwnership _out5759;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5760;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5758, out _out5759, out _out5760);
              _11484_recursiveGen = _out5758;
              _11485_recOwned = _out5759;
              _11486_recIdents = _out5760;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11484_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11482_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11483_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5761;
              DCOMPUTF16._IOwnership _out5762;
              DCOMPUTF16.COMP.FromOwnership(r, _11485_recOwned, expectedOwnership, out _out5761, out _out5762);
              r = _out5761;
              resultingOwnership = _out5762;
              readIdents = _11486_recIdents;
            }
          } else if (_source630.is_SetBuilder) {
            DAST._IType _11487___mcc_h800 = _source630.dtor_element;
            {
              RAST._IType _11488_fromTpeGen;
              RAST._IType _out5763;
              _out5763 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11488_fromTpeGen = _out5763;
              RAST._IType _11489_toTpeGen;
              RAST._IType _out5764;
              _out5764 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11489_toTpeGen = _out5764;
              RAST._IExpr _11490_recursiveGen;
              DCOMPUTF16._IOwnership _11491_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11492_recIdents;
              RAST._IExpr _out5765;
              DCOMPUTF16._IOwnership _out5766;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5767;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5765, out _out5766, out _out5767);
              _11490_recursiveGen = _out5765;
              _11491_recOwned = _out5766;
              _11492_recIdents = _out5767;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11490_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11488_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11489_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5768;
              DCOMPUTF16._IOwnership _out5769;
              DCOMPUTF16.COMP.FromOwnership(r, _11491_recOwned, expectedOwnership, out _out5768, out _out5769);
              r = _out5768;
              resultingOwnership = _out5769;
              readIdents = _11492_recIdents;
            }
          } else if (_source630.is_MapBuilder) {
            DAST._IType _11493___mcc_h802 = _source630.dtor_key;
            DAST._IType _11494___mcc_h803 = _source630.dtor_value;
            {
              RAST._IType _11495_fromTpeGen;
              RAST._IType _out5770;
              _out5770 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11495_fromTpeGen = _out5770;
              RAST._IType _11496_toTpeGen;
              RAST._IType _out5771;
              _out5771 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11496_toTpeGen = _out5771;
              RAST._IExpr _11497_recursiveGen;
              DCOMPUTF16._IOwnership _11498_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11499_recIdents;
              RAST._IExpr _out5772;
              DCOMPUTF16._IOwnership _out5773;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5774;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5772, out _out5773, out _out5774);
              _11497_recursiveGen = _out5772;
              _11498_recOwned = _out5773;
              _11499_recIdents = _out5774;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11497_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11495_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11496_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5775;
              DCOMPUTF16._IOwnership _out5776;
              DCOMPUTF16.COMP.FromOwnership(r, _11498_recOwned, expectedOwnership, out _out5775, out _out5776);
              r = _out5775;
              resultingOwnership = _out5776;
              readIdents = _11499_recIdents;
            }
          } else if (_source630.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11500___mcc_h806 = _source630.dtor_args;
            DAST._IType _11501___mcc_h807 = _source630.dtor_result;
            {
              RAST._IType _11502_fromTpeGen;
              RAST._IType _out5777;
              _out5777 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11502_fromTpeGen = _out5777;
              RAST._IType _11503_toTpeGen;
              RAST._IType _out5778;
              _out5778 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11503_toTpeGen = _out5778;
              RAST._IExpr _11504_recursiveGen;
              DCOMPUTF16._IOwnership _11505_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11506_recIdents;
              RAST._IExpr _out5779;
              DCOMPUTF16._IOwnership _out5780;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5781;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5779, out _out5780, out _out5781);
              _11504_recursiveGen = _out5779;
              _11505_recOwned = _out5780;
              _11506_recIdents = _out5781;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11504_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11502_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11503_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5782;
              DCOMPUTF16._IOwnership _out5783;
              DCOMPUTF16.COMP.FromOwnership(r, _11505_recOwned, expectedOwnership, out _out5782, out _out5783);
              r = _out5782;
              resultingOwnership = _out5783;
              readIdents = _11506_recIdents;
            }
          } else if (_source630.is_Primitive) {
            DAST._IPrimitive _11507___mcc_h810 = _source630.dtor_Primitive_a0;
            {
              RAST._IType _11508_fromTpeGen;
              RAST._IType _out5784;
              _out5784 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11508_fromTpeGen = _out5784;
              RAST._IType _11509_toTpeGen;
              RAST._IType _out5785;
              _out5785 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11509_toTpeGen = _out5785;
              RAST._IExpr _11510_recursiveGen;
              DCOMPUTF16._IOwnership _11511_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11512_recIdents;
              RAST._IExpr _out5786;
              DCOMPUTF16._IOwnership _out5787;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5788;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5786, out _out5787, out _out5788);
              _11510_recursiveGen = _out5786;
              _11511_recOwned = _out5787;
              _11512_recIdents = _out5788;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11510_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11508_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11509_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5789;
              DCOMPUTF16._IOwnership _out5790;
              DCOMPUTF16.COMP.FromOwnership(r, _11511_recOwned, expectedOwnership, out _out5789, out _out5790);
              r = _out5789;
              resultingOwnership = _out5790;
              readIdents = _11512_recIdents;
            }
          } else if (_source630.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11513___mcc_h812 = _source630.dtor_Passthrough_a0;
            {
              RAST._IType _11514_fromTpeGen;
              RAST._IType _out5791;
              _out5791 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11514_fromTpeGen = _out5791;
              RAST._IType _11515_toTpeGen;
              RAST._IType _out5792;
              _out5792 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11515_toTpeGen = _out5792;
              RAST._IExpr _11516_recursiveGen;
              DCOMPUTF16._IOwnership _11517_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11518_recIdents;
              RAST._IExpr _out5793;
              DCOMPUTF16._IOwnership _out5794;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5795;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5793, out _out5794, out _out5795);
              _11516_recursiveGen = _out5793;
              _11517_recOwned = _out5794;
              _11518_recIdents = _out5795;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11516_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11514_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11515_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5796;
              DCOMPUTF16._IOwnership _out5797;
              DCOMPUTF16.COMP.FromOwnership(r, _11517_recOwned, expectedOwnership, out _out5796, out _out5797);
              r = _out5796;
              resultingOwnership = _out5797;
              readIdents = _11518_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11519___mcc_h814 = _source630.dtor_TypeArg_a0;
            {
              RAST._IType _11520_fromTpeGen;
              RAST._IType _out5798;
              _out5798 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11520_fromTpeGen = _out5798;
              RAST._IType _11521_toTpeGen;
              RAST._IType _out5799;
              _out5799 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11521_toTpeGen = _out5799;
              RAST._IExpr _11522_recursiveGen;
              DCOMPUTF16._IOwnership _11523_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11524_recIdents;
              RAST._IExpr _out5800;
              DCOMPUTF16._IOwnership _out5801;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5802;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5800, out _out5801, out _out5802);
              _11522_recursiveGen = _out5800;
              _11523_recOwned = _out5801;
              _11524_recIdents = _out5802;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11522_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11520_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11521_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5803;
              DCOMPUTF16._IOwnership _out5804;
              DCOMPUTF16.COMP.FromOwnership(r, _11523_recOwned, expectedOwnership, out _out5803, out _out5804);
              r = _out5803;
              resultingOwnership = _out5804;
              readIdents = _11524_recIdents;
            }
          }
        } else if (_source561.is_MapBuilder) {
          DAST._IType _11525___mcc_h816 = _source561.dtor_key;
          DAST._IType _11526___mcc_h817 = _source561.dtor_value;
          DAST._IType _source635 = _9573___mcc_h1;
          if (_source635.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11527___mcc_h824 = _source635.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11528___mcc_h825 = _source635.dtor_typeArgs;
            DAST._IResolvedType _11529___mcc_h826 = _source635.dtor_resolved;
            DAST._IResolvedType _source636 = _11529___mcc_h826;
            if (_source636.is_AllocatedDatatype) {
              DAST._IDatatypeType _11530___mcc_h830 = _source636.dtor_datatypeType;
              {
                RAST._IType _11531_fromTpeGen;
                RAST._IType _out5805;
                _out5805 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11531_fromTpeGen = _out5805;
                RAST._IType _11532_toTpeGen;
                RAST._IType _out5806;
                _out5806 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11532_toTpeGen = _out5806;
                RAST._IExpr _11533_recursiveGen;
                DCOMPUTF16._IOwnership _11534_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11535_recIdents;
                RAST._IExpr _out5807;
                DCOMPUTF16._IOwnership _out5808;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5809;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5807, out _out5808, out _out5809);
                _11533_recursiveGen = _out5807;
                _11534_recOwned = _out5808;
                _11535_recIdents = _out5809;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11533_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11531_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11532_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5810;
                DCOMPUTF16._IOwnership _out5811;
                DCOMPUTF16.COMP.FromOwnership(r, _11534_recOwned, expectedOwnership, out _out5810, out _out5811);
                r = _out5810;
                resultingOwnership = _out5811;
                readIdents = _11535_recIdents;
              }
            } else if (_source636.is_Datatype) {
              DAST._IDatatypeType _11536___mcc_h832 = _source636.dtor_datatypeType;
              {
                RAST._IType _11537_fromTpeGen;
                RAST._IType _out5812;
                _out5812 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11537_fromTpeGen = _out5812;
                RAST._IType _11538_toTpeGen;
                RAST._IType _out5813;
                _out5813 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11538_toTpeGen = _out5813;
                RAST._IExpr _11539_recursiveGen;
                DCOMPUTF16._IOwnership _11540_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11541_recIdents;
                RAST._IExpr _out5814;
                DCOMPUTF16._IOwnership _out5815;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5816;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5814, out _out5815, out _out5816);
                _11539_recursiveGen = _out5814;
                _11540_recOwned = _out5815;
                _11541_recIdents = _out5816;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11539_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11537_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11538_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5817;
                DCOMPUTF16._IOwnership _out5818;
                DCOMPUTF16.COMP.FromOwnership(r, _11540_recOwned, expectedOwnership, out _out5817, out _out5818);
                r = _out5817;
                resultingOwnership = _out5818;
                readIdents = _11541_recIdents;
              }
            } else if (_source636.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11542___mcc_h834 = _source636.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11543___mcc_h835 = _source636.dtor_attributes;
              {
                RAST._IType _11544_fromTpeGen;
                RAST._IType _out5819;
                _out5819 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11544_fromTpeGen = _out5819;
                RAST._IType _11545_toTpeGen;
                RAST._IType _out5820;
                _out5820 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11545_toTpeGen = _out5820;
                RAST._IExpr _11546_recursiveGen;
                DCOMPUTF16._IOwnership _11547_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11548_recIdents;
                RAST._IExpr _out5821;
                DCOMPUTF16._IOwnership _out5822;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5823;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5821, out _out5822, out _out5823);
                _11546_recursiveGen = _out5821;
                _11547_recOwned = _out5822;
                _11548_recIdents = _out5823;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11546_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11544_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11545_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5824;
                DCOMPUTF16._IOwnership _out5825;
                DCOMPUTF16.COMP.FromOwnership(r, _11547_recOwned, expectedOwnership, out _out5824, out _out5825);
                r = _out5824;
                resultingOwnership = _out5825;
                readIdents = _11548_recIdents;
              }
            } else {
              DAST._IType _11549___mcc_h838 = _source636.dtor_baseType;
              DAST._INewtypeRange _11550___mcc_h839 = _source636.dtor_range;
              bool _11551___mcc_h840 = _source636.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11552___mcc_h841 = _source636.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11553_attributes = _11552___mcc_h841;
              bool _11554_erase = _11551___mcc_h840;
              DAST._INewtypeRange _11555_range = _11550___mcc_h839;
              DAST._IType _11556_b = _11549___mcc_h838;
              {
                Std.Wrappers._IOption<RAST._IType> _11557_nativeToType;
                _11557_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11556_b, _11555_range);
                if (object.Equals(_9567_fromTpe, _11556_b)) {
                  RAST._IExpr _11558_recursiveGen;
                  DCOMPUTF16._IOwnership _11559_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11560_recIdents;
                  RAST._IExpr _out5826;
                  DCOMPUTF16._IOwnership _out5827;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5828;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5826, out _out5827, out _out5828);
                  _11558_recursiveGen = _out5826;
                  _11559_recOwned = _out5827;
                  _11560_recIdents = _out5828;
                  readIdents = _11560_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source637 = _11557_nativeToType;
                  if (_source637.is_None) {
                    if (_11554_erase) {
                      r = _11558_recursiveGen;
                    } else {
                      RAST._IType _11561_rhsType;
                      RAST._IType _out5829;
                      _out5829 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _11561_rhsType = _out5829;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11561_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11558_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5830;
                    DCOMPUTF16._IOwnership _out5831;
                    DCOMPUTF16.COMP.FromOwnership(r, _11559_recOwned, expectedOwnership, out _out5830, out _out5831);
                    r = _out5830;
                    resultingOwnership = _out5831;
                  } else {
                    RAST._IType _11562___mcc_h1990 = _source637.dtor_value;
                    RAST._IType _11563_v = _11562___mcc_h1990;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11558_recursiveGen, RAST.Expr.create_ExprFromType(_11563_v)));
                    RAST._IExpr _out5832;
                    DCOMPUTF16._IOwnership _out5833;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5832, out _out5833);
                    r = _out5832;
                    resultingOwnership = _out5833;
                  }
                } else {
                  if ((_11557_nativeToType).is_Some) {
                    DAST._IType _source638 = _9567_fromTpe;
                    if (_source638.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11564___mcc_h1991 = _source638.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11565___mcc_h1992 = _source638.dtor_typeArgs;
                      DAST._IResolvedType _11566___mcc_h1993 = _source638.dtor_resolved;
                      DAST._IResolvedType _source639 = _11566___mcc_h1993;
                      if (_source639.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11567___mcc_h1997 = _source639.dtor_datatypeType;
                      } else if (_source639.is_Datatype) {
                        DAST._IDatatypeType _11568___mcc_h1999 = _source639.dtor_datatypeType;
                      } else if (_source639.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11569___mcc_h2001 = _source639.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11570___mcc_h2002 = _source639.dtor_attributes;
                      } else {
                        DAST._IType _11571___mcc_h2005 = _source639.dtor_baseType;
                        DAST._INewtypeRange _11572___mcc_h2006 = _source639.dtor_range;
                        bool _11573___mcc_h2007 = _source639.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11574___mcc_h2008 = _source639.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11575_attributes0 = _11574___mcc_h2008;
                        bool _11576_erase0 = _11573___mcc_h2007;
                        DAST._INewtypeRange _11577_range0 = _11572___mcc_h2006;
                        DAST._IType _11578_b0 = _11571___mcc_h2005;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11579_nativeFromType;
                          _11579_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11578_b0, _11577_range0);
                          if ((_11579_nativeFromType).is_Some) {
                            RAST._IExpr _11580_recursiveGen;
                            DCOMPUTF16._IOwnership _11581_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11582_recIdents;
                            RAST._IExpr _out5834;
                            DCOMPUTF16._IOwnership _out5835;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5836;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5834, out _out5835, out _out5836);
                            _11580_recursiveGen = _out5834;
                            _11581_recOwned = _out5835;
                            _11582_recIdents = _out5836;
                            RAST._IExpr _out5837;
                            DCOMPUTF16._IOwnership _out5838;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11580_recursiveGen, (_11557_nativeToType).dtor_value), _11581_recOwned, expectedOwnership, out _out5837, out _out5838);
                            r = _out5837;
                            resultingOwnership = _out5838;
                            readIdents = _11582_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source638.is_Nullable) {
                      DAST._IType _11583___mcc_h2013 = _source638.dtor_Nullable_a0;
                    } else if (_source638.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11584___mcc_h2015 = _source638.dtor_Tuple_a0;
                    } else if (_source638.is_Array) {
                      DAST._IType _11585___mcc_h2017 = _source638.dtor_element;
                      BigInteger _11586___mcc_h2018 = _source638.dtor_dims;
                    } else if (_source638.is_Seq) {
                      DAST._IType _11587___mcc_h2021 = _source638.dtor_element;
                    } else if (_source638.is_Set) {
                      DAST._IType _11588___mcc_h2023 = _source638.dtor_element;
                    } else if (_source638.is_Multiset) {
                      DAST._IType _11589___mcc_h2025 = _source638.dtor_element;
                    } else if (_source638.is_Map) {
                      DAST._IType _11590___mcc_h2027 = _source638.dtor_key;
                      DAST._IType _11591___mcc_h2028 = _source638.dtor_value;
                    } else if (_source638.is_SetBuilder) {
                      DAST._IType _11592___mcc_h2031 = _source638.dtor_element;
                    } else if (_source638.is_MapBuilder) {
                      DAST._IType _11593___mcc_h2033 = _source638.dtor_key;
                      DAST._IType _11594___mcc_h2034 = _source638.dtor_value;
                    } else if (_source638.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11595___mcc_h2037 = _source638.dtor_args;
                      DAST._IType _11596___mcc_h2038 = _source638.dtor_result;
                    } else if (_source638.is_Primitive) {
                      DAST._IPrimitive _11597___mcc_h2041 = _source638.dtor_Primitive_a0;
                    } else if (_source638.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11598___mcc_h2043 = _source638.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11599___mcc_h2045 = _source638.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11600_recursiveGen;
                      DCOMPUTF16._IOwnership _11601_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11602_recIdents;
                      RAST._IExpr _out5839;
                      DCOMPUTF16._IOwnership _out5840;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5841;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5839, out _out5840, out _out5841);
                      _11600_recursiveGen = _out5839;
                      _11601_recOwned = _out5840;
                      _11602_recIdents = _out5841;
                      RAST._IExpr _out5842;
                      DCOMPUTF16._IOwnership _out5843;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11600_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11557_nativeToType).dtor_value), _11601_recOwned, expectedOwnership, out _out5842, out _out5843);
                      r = _out5842;
                      resultingOwnership = _out5843;
                      readIdents = _11602_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5844;
                  DCOMPUTF16._IOwnership _out5845;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5846;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _11556_b), _11556_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out5844, out _out5845, out _out5846);
                  r = _out5844;
                  resultingOwnership = _out5845;
                  readIdents = _out5846;
                }
              }
            }
          } else if (_source635.is_Nullable) {
            DAST._IType _11603___mcc_h846 = _source635.dtor_Nullable_a0;
            {
              RAST._IExpr _11604_recursiveGen;
              DCOMPUTF16._IOwnership _11605_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11606_recIdents;
              RAST._IExpr _out5847;
              DCOMPUTF16._IOwnership _out5848;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5849;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5847, out _out5848, out _out5849);
              _11604_recursiveGen = _out5847;
              _11605_recOwned = _out5848;
              _11606_recIdents = _out5849;
              r = _11604_recursiveGen;
              if (object.Equals(_11605_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5850;
              DCOMPUTF16._IOwnership _out5851;
              DCOMPUTF16.COMP.FromOwnership(r, _11605_recOwned, expectedOwnership, out _out5850, out _out5851);
              r = _out5850;
              resultingOwnership = _out5851;
              readIdents = _11606_recIdents;
            }
          } else if (_source635.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11607___mcc_h848 = _source635.dtor_Tuple_a0;
            {
              RAST._IType _11608_fromTpeGen;
              RAST._IType _out5852;
              _out5852 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11608_fromTpeGen = _out5852;
              RAST._IType _11609_toTpeGen;
              RAST._IType _out5853;
              _out5853 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11609_toTpeGen = _out5853;
              RAST._IExpr _11610_recursiveGen;
              DCOMPUTF16._IOwnership _11611_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11612_recIdents;
              RAST._IExpr _out5854;
              DCOMPUTF16._IOwnership _out5855;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5856;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5854, out _out5855, out _out5856);
              _11610_recursiveGen = _out5854;
              _11611_recOwned = _out5855;
              _11612_recIdents = _out5856;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11610_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11608_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11609_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5857;
              DCOMPUTF16._IOwnership _out5858;
              DCOMPUTF16.COMP.FromOwnership(r, _11611_recOwned, expectedOwnership, out _out5857, out _out5858);
              r = _out5857;
              resultingOwnership = _out5858;
              readIdents = _11612_recIdents;
            }
          } else if (_source635.is_Array) {
            DAST._IType _11613___mcc_h850 = _source635.dtor_element;
            BigInteger _11614___mcc_h851 = _source635.dtor_dims;
            {
              RAST._IType _11615_fromTpeGen;
              RAST._IType _out5859;
              _out5859 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11615_fromTpeGen = _out5859;
              RAST._IType _11616_toTpeGen;
              RAST._IType _out5860;
              _out5860 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11616_toTpeGen = _out5860;
              RAST._IExpr _11617_recursiveGen;
              DCOMPUTF16._IOwnership _11618_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11619_recIdents;
              RAST._IExpr _out5861;
              DCOMPUTF16._IOwnership _out5862;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5863;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5861, out _out5862, out _out5863);
              _11617_recursiveGen = _out5861;
              _11618_recOwned = _out5862;
              _11619_recIdents = _out5863;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11617_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11615_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11616_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5864;
              DCOMPUTF16._IOwnership _out5865;
              DCOMPUTF16.COMP.FromOwnership(r, _11618_recOwned, expectedOwnership, out _out5864, out _out5865);
              r = _out5864;
              resultingOwnership = _out5865;
              readIdents = _11619_recIdents;
            }
          } else if (_source635.is_Seq) {
            DAST._IType _11620___mcc_h854 = _source635.dtor_element;
            {
              RAST._IType _11621_fromTpeGen;
              RAST._IType _out5866;
              _out5866 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11621_fromTpeGen = _out5866;
              RAST._IType _11622_toTpeGen;
              RAST._IType _out5867;
              _out5867 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11622_toTpeGen = _out5867;
              RAST._IExpr _11623_recursiveGen;
              DCOMPUTF16._IOwnership _11624_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11625_recIdents;
              RAST._IExpr _out5868;
              DCOMPUTF16._IOwnership _out5869;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5870;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5868, out _out5869, out _out5870);
              _11623_recursiveGen = _out5868;
              _11624_recOwned = _out5869;
              _11625_recIdents = _out5870;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11623_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11621_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11622_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5871;
              DCOMPUTF16._IOwnership _out5872;
              DCOMPUTF16.COMP.FromOwnership(r, _11624_recOwned, expectedOwnership, out _out5871, out _out5872);
              r = _out5871;
              resultingOwnership = _out5872;
              readIdents = _11625_recIdents;
            }
          } else if (_source635.is_Set) {
            DAST._IType _11626___mcc_h856 = _source635.dtor_element;
            {
              RAST._IType _11627_fromTpeGen;
              RAST._IType _out5873;
              _out5873 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11627_fromTpeGen = _out5873;
              RAST._IType _11628_toTpeGen;
              RAST._IType _out5874;
              _out5874 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11628_toTpeGen = _out5874;
              RAST._IExpr _11629_recursiveGen;
              DCOMPUTF16._IOwnership _11630_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11631_recIdents;
              RAST._IExpr _out5875;
              DCOMPUTF16._IOwnership _out5876;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5877;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5875, out _out5876, out _out5877);
              _11629_recursiveGen = _out5875;
              _11630_recOwned = _out5876;
              _11631_recIdents = _out5877;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11629_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11627_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11628_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5878;
              DCOMPUTF16._IOwnership _out5879;
              DCOMPUTF16.COMP.FromOwnership(r, _11630_recOwned, expectedOwnership, out _out5878, out _out5879);
              r = _out5878;
              resultingOwnership = _out5879;
              readIdents = _11631_recIdents;
            }
          } else if (_source635.is_Multiset) {
            DAST._IType _11632___mcc_h858 = _source635.dtor_element;
            {
              RAST._IType _11633_fromTpeGen;
              RAST._IType _out5880;
              _out5880 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11633_fromTpeGen = _out5880;
              RAST._IType _11634_toTpeGen;
              RAST._IType _out5881;
              _out5881 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11634_toTpeGen = _out5881;
              RAST._IExpr _11635_recursiveGen;
              DCOMPUTF16._IOwnership _11636_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11637_recIdents;
              RAST._IExpr _out5882;
              DCOMPUTF16._IOwnership _out5883;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5884;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5882, out _out5883, out _out5884);
              _11635_recursiveGen = _out5882;
              _11636_recOwned = _out5883;
              _11637_recIdents = _out5884;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11635_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11633_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11634_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5885;
              DCOMPUTF16._IOwnership _out5886;
              DCOMPUTF16.COMP.FromOwnership(r, _11636_recOwned, expectedOwnership, out _out5885, out _out5886);
              r = _out5885;
              resultingOwnership = _out5886;
              readIdents = _11637_recIdents;
            }
          } else if (_source635.is_Map) {
            DAST._IType _11638___mcc_h860 = _source635.dtor_key;
            DAST._IType _11639___mcc_h861 = _source635.dtor_value;
            {
              RAST._IType _11640_fromTpeGen;
              RAST._IType _out5887;
              _out5887 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11640_fromTpeGen = _out5887;
              RAST._IType _11641_toTpeGen;
              RAST._IType _out5888;
              _out5888 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11641_toTpeGen = _out5888;
              RAST._IExpr _11642_recursiveGen;
              DCOMPUTF16._IOwnership _11643_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11644_recIdents;
              RAST._IExpr _out5889;
              DCOMPUTF16._IOwnership _out5890;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5891;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5889, out _out5890, out _out5891);
              _11642_recursiveGen = _out5889;
              _11643_recOwned = _out5890;
              _11644_recIdents = _out5891;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11642_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11640_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11641_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5892;
              DCOMPUTF16._IOwnership _out5893;
              DCOMPUTF16.COMP.FromOwnership(r, _11643_recOwned, expectedOwnership, out _out5892, out _out5893);
              r = _out5892;
              resultingOwnership = _out5893;
              readIdents = _11644_recIdents;
            }
          } else if (_source635.is_SetBuilder) {
            DAST._IType _11645___mcc_h864 = _source635.dtor_element;
            {
              RAST._IType _11646_fromTpeGen;
              RAST._IType _out5894;
              _out5894 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11646_fromTpeGen = _out5894;
              RAST._IType _11647_toTpeGen;
              RAST._IType _out5895;
              _out5895 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11647_toTpeGen = _out5895;
              RAST._IExpr _11648_recursiveGen;
              DCOMPUTF16._IOwnership _11649_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11650_recIdents;
              RAST._IExpr _out5896;
              DCOMPUTF16._IOwnership _out5897;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5898;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5896, out _out5897, out _out5898);
              _11648_recursiveGen = _out5896;
              _11649_recOwned = _out5897;
              _11650_recIdents = _out5898;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11648_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11646_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11647_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5899;
              DCOMPUTF16._IOwnership _out5900;
              DCOMPUTF16.COMP.FromOwnership(r, _11649_recOwned, expectedOwnership, out _out5899, out _out5900);
              r = _out5899;
              resultingOwnership = _out5900;
              readIdents = _11650_recIdents;
            }
          } else if (_source635.is_MapBuilder) {
            DAST._IType _11651___mcc_h866 = _source635.dtor_key;
            DAST._IType _11652___mcc_h867 = _source635.dtor_value;
            {
              RAST._IType _11653_fromTpeGen;
              RAST._IType _out5901;
              _out5901 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11653_fromTpeGen = _out5901;
              RAST._IType _11654_toTpeGen;
              RAST._IType _out5902;
              _out5902 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11654_toTpeGen = _out5902;
              RAST._IExpr _11655_recursiveGen;
              DCOMPUTF16._IOwnership _11656_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11657_recIdents;
              RAST._IExpr _out5903;
              DCOMPUTF16._IOwnership _out5904;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5905;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5903, out _out5904, out _out5905);
              _11655_recursiveGen = _out5903;
              _11656_recOwned = _out5904;
              _11657_recIdents = _out5905;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11655_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11653_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11654_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5906;
              DCOMPUTF16._IOwnership _out5907;
              DCOMPUTF16.COMP.FromOwnership(r, _11656_recOwned, expectedOwnership, out _out5906, out _out5907);
              r = _out5906;
              resultingOwnership = _out5907;
              readIdents = _11657_recIdents;
            }
          } else if (_source635.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11658___mcc_h870 = _source635.dtor_args;
            DAST._IType _11659___mcc_h871 = _source635.dtor_result;
            {
              RAST._IType _11660_fromTpeGen;
              RAST._IType _out5908;
              _out5908 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11660_fromTpeGen = _out5908;
              RAST._IType _11661_toTpeGen;
              RAST._IType _out5909;
              _out5909 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11661_toTpeGen = _out5909;
              RAST._IExpr _11662_recursiveGen;
              DCOMPUTF16._IOwnership _11663_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11664_recIdents;
              RAST._IExpr _out5910;
              DCOMPUTF16._IOwnership _out5911;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5912;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5910, out _out5911, out _out5912);
              _11662_recursiveGen = _out5910;
              _11663_recOwned = _out5911;
              _11664_recIdents = _out5912;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11662_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11660_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11661_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5913;
              DCOMPUTF16._IOwnership _out5914;
              DCOMPUTF16.COMP.FromOwnership(r, _11663_recOwned, expectedOwnership, out _out5913, out _out5914);
              r = _out5913;
              resultingOwnership = _out5914;
              readIdents = _11664_recIdents;
            }
          } else if (_source635.is_Primitive) {
            DAST._IPrimitive _11665___mcc_h874 = _source635.dtor_Primitive_a0;
            {
              RAST._IType _11666_fromTpeGen;
              RAST._IType _out5915;
              _out5915 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11666_fromTpeGen = _out5915;
              RAST._IType _11667_toTpeGen;
              RAST._IType _out5916;
              _out5916 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11667_toTpeGen = _out5916;
              RAST._IExpr _11668_recursiveGen;
              DCOMPUTF16._IOwnership _11669_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11670_recIdents;
              RAST._IExpr _out5917;
              DCOMPUTF16._IOwnership _out5918;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5919;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5917, out _out5918, out _out5919);
              _11668_recursiveGen = _out5917;
              _11669_recOwned = _out5918;
              _11670_recIdents = _out5919;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11668_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11666_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11667_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5920;
              DCOMPUTF16._IOwnership _out5921;
              DCOMPUTF16.COMP.FromOwnership(r, _11669_recOwned, expectedOwnership, out _out5920, out _out5921);
              r = _out5920;
              resultingOwnership = _out5921;
              readIdents = _11670_recIdents;
            }
          } else if (_source635.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11671___mcc_h876 = _source635.dtor_Passthrough_a0;
            {
              RAST._IType _11672_fromTpeGen;
              RAST._IType _out5922;
              _out5922 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11672_fromTpeGen = _out5922;
              RAST._IType _11673_toTpeGen;
              RAST._IType _out5923;
              _out5923 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11673_toTpeGen = _out5923;
              RAST._IExpr _11674_recursiveGen;
              DCOMPUTF16._IOwnership _11675_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11676_recIdents;
              RAST._IExpr _out5924;
              DCOMPUTF16._IOwnership _out5925;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5926;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5924, out _out5925, out _out5926);
              _11674_recursiveGen = _out5924;
              _11675_recOwned = _out5925;
              _11676_recIdents = _out5926;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11674_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11672_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11673_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5927;
              DCOMPUTF16._IOwnership _out5928;
              DCOMPUTF16.COMP.FromOwnership(r, _11675_recOwned, expectedOwnership, out _out5927, out _out5928);
              r = _out5927;
              resultingOwnership = _out5928;
              readIdents = _11676_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11677___mcc_h878 = _source635.dtor_TypeArg_a0;
            {
              RAST._IType _11678_fromTpeGen;
              RAST._IType _out5929;
              _out5929 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11678_fromTpeGen = _out5929;
              RAST._IType _11679_toTpeGen;
              RAST._IType _out5930;
              _out5930 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11679_toTpeGen = _out5930;
              RAST._IExpr _11680_recursiveGen;
              DCOMPUTF16._IOwnership _11681_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11682_recIdents;
              RAST._IExpr _out5931;
              DCOMPUTF16._IOwnership _out5932;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5933;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5931, out _out5932, out _out5933);
              _11680_recursiveGen = _out5931;
              _11681_recOwned = _out5932;
              _11682_recIdents = _out5933;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11680_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11678_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11679_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5934;
              DCOMPUTF16._IOwnership _out5935;
              DCOMPUTF16.COMP.FromOwnership(r, _11681_recOwned, expectedOwnership, out _out5934, out _out5935);
              r = _out5934;
              resultingOwnership = _out5935;
              readIdents = _11682_recIdents;
            }
          }
        } else if (_source561.is_Arrow) {
          Dafny.ISequence<DAST._IType> _11683___mcc_h880 = _source561.dtor_args;
          DAST._IType _11684___mcc_h881 = _source561.dtor_result;
          DAST._IType _source640 = _9573___mcc_h1;
          if (_source640.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11685___mcc_h888 = _source640.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11686___mcc_h889 = _source640.dtor_typeArgs;
            DAST._IResolvedType _11687___mcc_h890 = _source640.dtor_resolved;
            DAST._IResolvedType _source641 = _11687___mcc_h890;
            if (_source641.is_AllocatedDatatype) {
              DAST._IDatatypeType _11688___mcc_h894 = _source641.dtor_datatypeType;
              {
                RAST._IType _11689_fromTpeGen;
                RAST._IType _out5936;
                _out5936 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11689_fromTpeGen = _out5936;
                RAST._IType _11690_toTpeGen;
                RAST._IType _out5937;
                _out5937 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11690_toTpeGen = _out5937;
                RAST._IExpr _11691_recursiveGen;
                DCOMPUTF16._IOwnership _11692_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11693_recIdents;
                RAST._IExpr _out5938;
                DCOMPUTF16._IOwnership _out5939;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5940;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5938, out _out5939, out _out5940);
                _11691_recursiveGen = _out5938;
                _11692_recOwned = _out5939;
                _11693_recIdents = _out5940;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11691_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11689_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11690_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5941;
                DCOMPUTF16._IOwnership _out5942;
                DCOMPUTF16.COMP.FromOwnership(r, _11692_recOwned, expectedOwnership, out _out5941, out _out5942);
                r = _out5941;
                resultingOwnership = _out5942;
                readIdents = _11693_recIdents;
              }
            } else if (_source641.is_Datatype) {
              DAST._IDatatypeType _11694___mcc_h896 = _source641.dtor_datatypeType;
              {
                RAST._IType _11695_fromTpeGen;
                RAST._IType _out5943;
                _out5943 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11695_fromTpeGen = _out5943;
                RAST._IType _11696_toTpeGen;
                RAST._IType _out5944;
                _out5944 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11696_toTpeGen = _out5944;
                RAST._IExpr _11697_recursiveGen;
                DCOMPUTF16._IOwnership _11698_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11699_recIdents;
                RAST._IExpr _out5945;
                DCOMPUTF16._IOwnership _out5946;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5947;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5945, out _out5946, out _out5947);
                _11697_recursiveGen = _out5945;
                _11698_recOwned = _out5946;
                _11699_recIdents = _out5947;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11697_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11695_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11696_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5948;
                DCOMPUTF16._IOwnership _out5949;
                DCOMPUTF16.COMP.FromOwnership(r, _11698_recOwned, expectedOwnership, out _out5948, out _out5949);
                r = _out5948;
                resultingOwnership = _out5949;
                readIdents = _11699_recIdents;
              }
            } else if (_source641.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11700___mcc_h898 = _source641.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11701___mcc_h899 = _source641.dtor_attributes;
              {
                RAST._IType _11702_fromTpeGen;
                RAST._IType _out5950;
                _out5950 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11702_fromTpeGen = _out5950;
                RAST._IType _11703_toTpeGen;
                RAST._IType _out5951;
                _out5951 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11703_toTpeGen = _out5951;
                RAST._IExpr _11704_recursiveGen;
                DCOMPUTF16._IOwnership _11705_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11706_recIdents;
                RAST._IExpr _out5952;
                DCOMPUTF16._IOwnership _out5953;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5954;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5952, out _out5953, out _out5954);
                _11704_recursiveGen = _out5952;
                _11705_recOwned = _out5953;
                _11706_recIdents = _out5954;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11704_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11702_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11703_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5955;
                DCOMPUTF16._IOwnership _out5956;
                DCOMPUTF16.COMP.FromOwnership(r, _11705_recOwned, expectedOwnership, out _out5955, out _out5956);
                r = _out5955;
                resultingOwnership = _out5956;
                readIdents = _11706_recIdents;
              }
            } else {
              DAST._IType _11707___mcc_h902 = _source641.dtor_baseType;
              DAST._INewtypeRange _11708___mcc_h903 = _source641.dtor_range;
              bool _11709___mcc_h904 = _source641.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11710___mcc_h905 = _source641.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11711_attributes = _11710___mcc_h905;
              bool _11712_erase = _11709___mcc_h904;
              DAST._INewtypeRange _11713_range = _11708___mcc_h903;
              DAST._IType _11714_b = _11707___mcc_h902;
              {
                Std.Wrappers._IOption<RAST._IType> _11715_nativeToType;
                _11715_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11714_b, _11713_range);
                if (object.Equals(_9567_fromTpe, _11714_b)) {
                  RAST._IExpr _11716_recursiveGen;
                  DCOMPUTF16._IOwnership _11717_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11718_recIdents;
                  RAST._IExpr _out5957;
                  DCOMPUTF16._IOwnership _out5958;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5959;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5957, out _out5958, out _out5959);
                  _11716_recursiveGen = _out5957;
                  _11717_recOwned = _out5958;
                  _11718_recIdents = _out5959;
                  readIdents = _11718_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source642 = _11715_nativeToType;
                  if (_source642.is_None) {
                    if (_11712_erase) {
                      r = _11716_recursiveGen;
                    } else {
                      RAST._IType _11719_rhsType;
                      RAST._IType _out5960;
                      _out5960 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _11719_rhsType = _out5960;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11719_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11716_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5961;
                    DCOMPUTF16._IOwnership _out5962;
                    DCOMPUTF16.COMP.FromOwnership(r, _11717_recOwned, expectedOwnership, out _out5961, out _out5962);
                    r = _out5961;
                    resultingOwnership = _out5962;
                  } else {
                    RAST._IType _11720___mcc_h2047 = _source642.dtor_value;
                    RAST._IType _11721_v = _11720___mcc_h2047;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11716_recursiveGen, RAST.Expr.create_ExprFromType(_11721_v)));
                    RAST._IExpr _out5963;
                    DCOMPUTF16._IOwnership _out5964;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5963, out _out5964);
                    r = _out5963;
                    resultingOwnership = _out5964;
                  }
                } else {
                  if ((_11715_nativeToType).is_Some) {
                    DAST._IType _source643 = _9567_fromTpe;
                    if (_source643.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11722___mcc_h2048 = _source643.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11723___mcc_h2049 = _source643.dtor_typeArgs;
                      DAST._IResolvedType _11724___mcc_h2050 = _source643.dtor_resolved;
                      DAST._IResolvedType _source644 = _11724___mcc_h2050;
                      if (_source644.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11725___mcc_h2054 = _source644.dtor_datatypeType;
                      } else if (_source644.is_Datatype) {
                        DAST._IDatatypeType _11726___mcc_h2056 = _source644.dtor_datatypeType;
                      } else if (_source644.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11727___mcc_h2058 = _source644.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11728___mcc_h2059 = _source644.dtor_attributes;
                      } else {
                        DAST._IType _11729___mcc_h2062 = _source644.dtor_baseType;
                        DAST._INewtypeRange _11730___mcc_h2063 = _source644.dtor_range;
                        bool _11731___mcc_h2064 = _source644.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11732___mcc_h2065 = _source644.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11733_attributes0 = _11732___mcc_h2065;
                        bool _11734_erase0 = _11731___mcc_h2064;
                        DAST._INewtypeRange _11735_range0 = _11730___mcc_h2063;
                        DAST._IType _11736_b0 = _11729___mcc_h2062;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11737_nativeFromType;
                          _11737_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11736_b0, _11735_range0);
                          if ((_11737_nativeFromType).is_Some) {
                            RAST._IExpr _11738_recursiveGen;
                            DCOMPUTF16._IOwnership _11739_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11740_recIdents;
                            RAST._IExpr _out5965;
                            DCOMPUTF16._IOwnership _out5966;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5967;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5965, out _out5966, out _out5967);
                            _11738_recursiveGen = _out5965;
                            _11739_recOwned = _out5966;
                            _11740_recIdents = _out5967;
                            RAST._IExpr _out5968;
                            DCOMPUTF16._IOwnership _out5969;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11738_recursiveGen, (_11715_nativeToType).dtor_value), _11739_recOwned, expectedOwnership, out _out5968, out _out5969);
                            r = _out5968;
                            resultingOwnership = _out5969;
                            readIdents = _11740_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source643.is_Nullable) {
                      DAST._IType _11741___mcc_h2070 = _source643.dtor_Nullable_a0;
                    } else if (_source643.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11742___mcc_h2072 = _source643.dtor_Tuple_a0;
                    } else if (_source643.is_Array) {
                      DAST._IType _11743___mcc_h2074 = _source643.dtor_element;
                      BigInteger _11744___mcc_h2075 = _source643.dtor_dims;
                    } else if (_source643.is_Seq) {
                      DAST._IType _11745___mcc_h2078 = _source643.dtor_element;
                    } else if (_source643.is_Set) {
                      DAST._IType _11746___mcc_h2080 = _source643.dtor_element;
                    } else if (_source643.is_Multiset) {
                      DAST._IType _11747___mcc_h2082 = _source643.dtor_element;
                    } else if (_source643.is_Map) {
                      DAST._IType _11748___mcc_h2084 = _source643.dtor_key;
                      DAST._IType _11749___mcc_h2085 = _source643.dtor_value;
                    } else if (_source643.is_SetBuilder) {
                      DAST._IType _11750___mcc_h2088 = _source643.dtor_element;
                    } else if (_source643.is_MapBuilder) {
                      DAST._IType _11751___mcc_h2090 = _source643.dtor_key;
                      DAST._IType _11752___mcc_h2091 = _source643.dtor_value;
                    } else if (_source643.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11753___mcc_h2094 = _source643.dtor_args;
                      DAST._IType _11754___mcc_h2095 = _source643.dtor_result;
                    } else if (_source643.is_Primitive) {
                      DAST._IPrimitive _11755___mcc_h2098 = _source643.dtor_Primitive_a0;
                    } else if (_source643.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11756___mcc_h2100 = _source643.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11757___mcc_h2102 = _source643.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11758_recursiveGen;
                      DCOMPUTF16._IOwnership _11759_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11760_recIdents;
                      RAST._IExpr _out5970;
                      DCOMPUTF16._IOwnership _out5971;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5972;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5970, out _out5971, out _out5972);
                      _11758_recursiveGen = _out5970;
                      _11759_recOwned = _out5971;
                      _11760_recIdents = _out5972;
                      RAST._IExpr _out5973;
                      DCOMPUTF16._IOwnership _out5974;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11758_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11715_nativeToType).dtor_value), _11759_recOwned, expectedOwnership, out _out5973, out _out5974);
                      r = _out5973;
                      resultingOwnership = _out5974;
                      readIdents = _11760_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5975;
                  DCOMPUTF16._IOwnership _out5976;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5977;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _11714_b), _11714_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out5975, out _out5976, out _out5977);
                  r = _out5975;
                  resultingOwnership = _out5976;
                  readIdents = _out5977;
                }
              }
            }
          } else if (_source640.is_Nullable) {
            DAST._IType _11761___mcc_h910 = _source640.dtor_Nullable_a0;
            {
              RAST._IExpr _11762_recursiveGen;
              DCOMPUTF16._IOwnership _11763_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11764_recIdents;
              RAST._IExpr _out5978;
              DCOMPUTF16._IOwnership _out5979;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5980;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5978, out _out5979, out _out5980);
              _11762_recursiveGen = _out5978;
              _11763_recOwned = _out5979;
              _11764_recIdents = _out5980;
              r = _11762_recursiveGen;
              if (object.Equals(_11763_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5981;
              DCOMPUTF16._IOwnership _out5982;
              DCOMPUTF16.COMP.FromOwnership(r, _11763_recOwned, expectedOwnership, out _out5981, out _out5982);
              r = _out5981;
              resultingOwnership = _out5982;
              readIdents = _11764_recIdents;
            }
          } else if (_source640.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11765___mcc_h912 = _source640.dtor_Tuple_a0;
            {
              RAST._IType _11766_fromTpeGen;
              RAST._IType _out5983;
              _out5983 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11766_fromTpeGen = _out5983;
              RAST._IType _11767_toTpeGen;
              RAST._IType _out5984;
              _out5984 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11767_toTpeGen = _out5984;
              RAST._IExpr _11768_recursiveGen;
              DCOMPUTF16._IOwnership _11769_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11770_recIdents;
              RAST._IExpr _out5985;
              DCOMPUTF16._IOwnership _out5986;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5987;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5985, out _out5986, out _out5987);
              _11768_recursiveGen = _out5985;
              _11769_recOwned = _out5986;
              _11770_recIdents = _out5987;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11768_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11766_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11767_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5988;
              DCOMPUTF16._IOwnership _out5989;
              DCOMPUTF16.COMP.FromOwnership(r, _11769_recOwned, expectedOwnership, out _out5988, out _out5989);
              r = _out5988;
              resultingOwnership = _out5989;
              readIdents = _11770_recIdents;
            }
          } else if (_source640.is_Array) {
            DAST._IType _11771___mcc_h914 = _source640.dtor_element;
            BigInteger _11772___mcc_h915 = _source640.dtor_dims;
            {
              RAST._IType _11773_fromTpeGen;
              RAST._IType _out5990;
              _out5990 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11773_fromTpeGen = _out5990;
              RAST._IType _11774_toTpeGen;
              RAST._IType _out5991;
              _out5991 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11774_toTpeGen = _out5991;
              RAST._IExpr _11775_recursiveGen;
              DCOMPUTF16._IOwnership _11776_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11777_recIdents;
              RAST._IExpr _out5992;
              DCOMPUTF16._IOwnership _out5993;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5994;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5992, out _out5993, out _out5994);
              _11775_recursiveGen = _out5992;
              _11776_recOwned = _out5993;
              _11777_recIdents = _out5994;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11775_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11773_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11774_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5995;
              DCOMPUTF16._IOwnership _out5996;
              DCOMPUTF16.COMP.FromOwnership(r, _11776_recOwned, expectedOwnership, out _out5995, out _out5996);
              r = _out5995;
              resultingOwnership = _out5996;
              readIdents = _11777_recIdents;
            }
          } else if (_source640.is_Seq) {
            DAST._IType _11778___mcc_h918 = _source640.dtor_element;
            {
              RAST._IType _11779_fromTpeGen;
              RAST._IType _out5997;
              _out5997 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11779_fromTpeGen = _out5997;
              RAST._IType _11780_toTpeGen;
              RAST._IType _out5998;
              _out5998 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11780_toTpeGen = _out5998;
              RAST._IExpr _11781_recursiveGen;
              DCOMPUTF16._IOwnership _11782_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11783_recIdents;
              RAST._IExpr _out5999;
              DCOMPUTF16._IOwnership _out6000;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6001;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out5999, out _out6000, out _out6001);
              _11781_recursiveGen = _out5999;
              _11782_recOwned = _out6000;
              _11783_recIdents = _out6001;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11781_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11779_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11780_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6002;
              DCOMPUTF16._IOwnership _out6003;
              DCOMPUTF16.COMP.FromOwnership(r, _11782_recOwned, expectedOwnership, out _out6002, out _out6003);
              r = _out6002;
              resultingOwnership = _out6003;
              readIdents = _11783_recIdents;
            }
          } else if (_source640.is_Set) {
            DAST._IType _11784___mcc_h920 = _source640.dtor_element;
            {
              RAST._IType _11785_fromTpeGen;
              RAST._IType _out6004;
              _out6004 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11785_fromTpeGen = _out6004;
              RAST._IType _11786_toTpeGen;
              RAST._IType _out6005;
              _out6005 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11786_toTpeGen = _out6005;
              RAST._IExpr _11787_recursiveGen;
              DCOMPUTF16._IOwnership _11788_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11789_recIdents;
              RAST._IExpr _out6006;
              DCOMPUTF16._IOwnership _out6007;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6008;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6006, out _out6007, out _out6008);
              _11787_recursiveGen = _out6006;
              _11788_recOwned = _out6007;
              _11789_recIdents = _out6008;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11787_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11785_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11786_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6009;
              DCOMPUTF16._IOwnership _out6010;
              DCOMPUTF16.COMP.FromOwnership(r, _11788_recOwned, expectedOwnership, out _out6009, out _out6010);
              r = _out6009;
              resultingOwnership = _out6010;
              readIdents = _11789_recIdents;
            }
          } else if (_source640.is_Multiset) {
            DAST._IType _11790___mcc_h922 = _source640.dtor_element;
            {
              RAST._IType _11791_fromTpeGen;
              RAST._IType _out6011;
              _out6011 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11791_fromTpeGen = _out6011;
              RAST._IType _11792_toTpeGen;
              RAST._IType _out6012;
              _out6012 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11792_toTpeGen = _out6012;
              RAST._IExpr _11793_recursiveGen;
              DCOMPUTF16._IOwnership _11794_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11795_recIdents;
              RAST._IExpr _out6013;
              DCOMPUTF16._IOwnership _out6014;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6015;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6013, out _out6014, out _out6015);
              _11793_recursiveGen = _out6013;
              _11794_recOwned = _out6014;
              _11795_recIdents = _out6015;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11793_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11791_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11792_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6016;
              DCOMPUTF16._IOwnership _out6017;
              DCOMPUTF16.COMP.FromOwnership(r, _11794_recOwned, expectedOwnership, out _out6016, out _out6017);
              r = _out6016;
              resultingOwnership = _out6017;
              readIdents = _11795_recIdents;
            }
          } else if (_source640.is_Map) {
            DAST._IType _11796___mcc_h924 = _source640.dtor_key;
            DAST._IType _11797___mcc_h925 = _source640.dtor_value;
            {
              RAST._IType _11798_fromTpeGen;
              RAST._IType _out6018;
              _out6018 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11798_fromTpeGen = _out6018;
              RAST._IType _11799_toTpeGen;
              RAST._IType _out6019;
              _out6019 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11799_toTpeGen = _out6019;
              RAST._IExpr _11800_recursiveGen;
              DCOMPUTF16._IOwnership _11801_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11802_recIdents;
              RAST._IExpr _out6020;
              DCOMPUTF16._IOwnership _out6021;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6022;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6020, out _out6021, out _out6022);
              _11800_recursiveGen = _out6020;
              _11801_recOwned = _out6021;
              _11802_recIdents = _out6022;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11800_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11798_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11799_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6023;
              DCOMPUTF16._IOwnership _out6024;
              DCOMPUTF16.COMP.FromOwnership(r, _11801_recOwned, expectedOwnership, out _out6023, out _out6024);
              r = _out6023;
              resultingOwnership = _out6024;
              readIdents = _11802_recIdents;
            }
          } else if (_source640.is_SetBuilder) {
            DAST._IType _11803___mcc_h928 = _source640.dtor_element;
            {
              RAST._IType _11804_fromTpeGen;
              RAST._IType _out6025;
              _out6025 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11804_fromTpeGen = _out6025;
              RAST._IType _11805_toTpeGen;
              RAST._IType _out6026;
              _out6026 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11805_toTpeGen = _out6026;
              RAST._IExpr _11806_recursiveGen;
              DCOMPUTF16._IOwnership _11807_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11808_recIdents;
              RAST._IExpr _out6027;
              DCOMPUTF16._IOwnership _out6028;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6029;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6027, out _out6028, out _out6029);
              _11806_recursiveGen = _out6027;
              _11807_recOwned = _out6028;
              _11808_recIdents = _out6029;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11806_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11804_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11805_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6030;
              DCOMPUTF16._IOwnership _out6031;
              DCOMPUTF16.COMP.FromOwnership(r, _11807_recOwned, expectedOwnership, out _out6030, out _out6031);
              r = _out6030;
              resultingOwnership = _out6031;
              readIdents = _11808_recIdents;
            }
          } else if (_source640.is_MapBuilder) {
            DAST._IType _11809___mcc_h930 = _source640.dtor_key;
            DAST._IType _11810___mcc_h931 = _source640.dtor_value;
            {
              RAST._IType _11811_fromTpeGen;
              RAST._IType _out6032;
              _out6032 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11811_fromTpeGen = _out6032;
              RAST._IType _11812_toTpeGen;
              RAST._IType _out6033;
              _out6033 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11812_toTpeGen = _out6033;
              RAST._IExpr _11813_recursiveGen;
              DCOMPUTF16._IOwnership _11814_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11815_recIdents;
              RAST._IExpr _out6034;
              DCOMPUTF16._IOwnership _out6035;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6036;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6034, out _out6035, out _out6036);
              _11813_recursiveGen = _out6034;
              _11814_recOwned = _out6035;
              _11815_recIdents = _out6036;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11813_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11811_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11812_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6037;
              DCOMPUTF16._IOwnership _out6038;
              DCOMPUTF16.COMP.FromOwnership(r, _11814_recOwned, expectedOwnership, out _out6037, out _out6038);
              r = _out6037;
              resultingOwnership = _out6038;
              readIdents = _11815_recIdents;
            }
          } else if (_source640.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11816___mcc_h934 = _source640.dtor_args;
            DAST._IType _11817___mcc_h935 = _source640.dtor_result;
            {
              RAST._IType _11818_fromTpeGen;
              RAST._IType _out6039;
              _out6039 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11818_fromTpeGen = _out6039;
              RAST._IType _11819_toTpeGen;
              RAST._IType _out6040;
              _out6040 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11819_toTpeGen = _out6040;
              RAST._IExpr _11820_recursiveGen;
              DCOMPUTF16._IOwnership _11821_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11822_recIdents;
              RAST._IExpr _out6041;
              DCOMPUTF16._IOwnership _out6042;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6043;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6041, out _out6042, out _out6043);
              _11820_recursiveGen = _out6041;
              _11821_recOwned = _out6042;
              _11822_recIdents = _out6043;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11820_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11818_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11819_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6044;
              DCOMPUTF16._IOwnership _out6045;
              DCOMPUTF16.COMP.FromOwnership(r, _11821_recOwned, expectedOwnership, out _out6044, out _out6045);
              r = _out6044;
              resultingOwnership = _out6045;
              readIdents = _11822_recIdents;
            }
          } else if (_source640.is_Primitive) {
            DAST._IPrimitive _11823___mcc_h938 = _source640.dtor_Primitive_a0;
            {
              RAST._IType _11824_fromTpeGen;
              RAST._IType _out6046;
              _out6046 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11824_fromTpeGen = _out6046;
              RAST._IType _11825_toTpeGen;
              RAST._IType _out6047;
              _out6047 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11825_toTpeGen = _out6047;
              RAST._IExpr _11826_recursiveGen;
              DCOMPUTF16._IOwnership _11827_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11828_recIdents;
              RAST._IExpr _out6048;
              DCOMPUTF16._IOwnership _out6049;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6050;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6048, out _out6049, out _out6050);
              _11826_recursiveGen = _out6048;
              _11827_recOwned = _out6049;
              _11828_recIdents = _out6050;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11826_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11824_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11825_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6051;
              DCOMPUTF16._IOwnership _out6052;
              DCOMPUTF16.COMP.FromOwnership(r, _11827_recOwned, expectedOwnership, out _out6051, out _out6052);
              r = _out6051;
              resultingOwnership = _out6052;
              readIdents = _11828_recIdents;
            }
          } else if (_source640.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11829___mcc_h940 = _source640.dtor_Passthrough_a0;
            {
              RAST._IType _11830_fromTpeGen;
              RAST._IType _out6053;
              _out6053 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11830_fromTpeGen = _out6053;
              RAST._IType _11831_toTpeGen;
              RAST._IType _out6054;
              _out6054 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11831_toTpeGen = _out6054;
              RAST._IExpr _11832_recursiveGen;
              DCOMPUTF16._IOwnership _11833_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11834_recIdents;
              RAST._IExpr _out6055;
              DCOMPUTF16._IOwnership _out6056;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6057;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6055, out _out6056, out _out6057);
              _11832_recursiveGen = _out6055;
              _11833_recOwned = _out6056;
              _11834_recIdents = _out6057;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11832_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11830_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11831_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6058;
              DCOMPUTF16._IOwnership _out6059;
              DCOMPUTF16.COMP.FromOwnership(r, _11833_recOwned, expectedOwnership, out _out6058, out _out6059);
              r = _out6058;
              resultingOwnership = _out6059;
              readIdents = _11834_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11835___mcc_h942 = _source640.dtor_TypeArg_a0;
            {
              RAST._IType _11836_fromTpeGen;
              RAST._IType _out6060;
              _out6060 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _11836_fromTpeGen = _out6060;
              RAST._IType _11837_toTpeGen;
              RAST._IType _out6061;
              _out6061 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _11837_toTpeGen = _out6061;
              RAST._IExpr _11838_recursiveGen;
              DCOMPUTF16._IOwnership _11839_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11840_recIdents;
              RAST._IExpr _out6062;
              DCOMPUTF16._IOwnership _out6063;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6064;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6062, out _out6063, out _out6064);
              _11838_recursiveGen = _out6062;
              _11839_recOwned = _out6063;
              _11840_recIdents = _out6064;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11838_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11836_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11837_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6065;
              DCOMPUTF16._IOwnership _out6066;
              DCOMPUTF16.COMP.FromOwnership(r, _11839_recOwned, expectedOwnership, out _out6065, out _out6066);
              r = _out6065;
              resultingOwnership = _out6066;
              readIdents = _11840_recIdents;
            }
          }
        } else if (_source561.is_Primitive) {
          DAST._IPrimitive _11841___mcc_h944 = _source561.dtor_Primitive_a0;
          DAST._IPrimitive _source645 = _11841___mcc_h944;
          if (_source645.is_Int) {
            DAST._IType _source646 = _9573___mcc_h1;
            if (_source646.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11842___mcc_h948 = _source646.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _11843___mcc_h949 = _source646.dtor_typeArgs;
              DAST._IResolvedType _11844___mcc_h950 = _source646.dtor_resolved;
              DAST._IResolvedType _source647 = _11844___mcc_h950;
              if (_source647.is_AllocatedDatatype) {
                DAST._IDatatypeType _11845___mcc_h954 = _source647.dtor_datatypeType;
                {
                  RAST._IType _11846_fromTpeGen;
                  RAST._IType _out6067;
                  _out6067 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _11846_fromTpeGen = _out6067;
                  RAST._IType _11847_toTpeGen;
                  RAST._IType _out6068;
                  _out6068 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _11847_toTpeGen = _out6068;
                  RAST._IExpr _11848_recursiveGen;
                  DCOMPUTF16._IOwnership _11849_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11850_recIdents;
                  RAST._IExpr _out6069;
                  DCOMPUTF16._IOwnership _out6070;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6071;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6069, out _out6070, out _out6071);
                  _11848_recursiveGen = _out6069;
                  _11849_recOwned = _out6070;
                  _11850_recIdents = _out6071;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11848_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11846_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11847_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6072;
                  DCOMPUTF16._IOwnership _out6073;
                  DCOMPUTF16.COMP.FromOwnership(r, _11849_recOwned, expectedOwnership, out _out6072, out _out6073);
                  r = _out6072;
                  resultingOwnership = _out6073;
                  readIdents = _11850_recIdents;
                }
              } else if (_source647.is_Datatype) {
                DAST._IDatatypeType _11851___mcc_h956 = _source647.dtor_datatypeType;
                {
                  RAST._IType _11852_fromTpeGen;
                  RAST._IType _out6074;
                  _out6074 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _11852_fromTpeGen = _out6074;
                  RAST._IType _11853_toTpeGen;
                  RAST._IType _out6075;
                  _out6075 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _11853_toTpeGen = _out6075;
                  RAST._IExpr _11854_recursiveGen;
                  DCOMPUTF16._IOwnership _11855_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11856_recIdents;
                  RAST._IExpr _out6076;
                  DCOMPUTF16._IOwnership _out6077;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6078;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6076, out _out6077, out _out6078);
                  _11854_recursiveGen = _out6076;
                  _11855_recOwned = _out6077;
                  _11856_recIdents = _out6078;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11854_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11852_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11853_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6079;
                  DCOMPUTF16._IOwnership _out6080;
                  DCOMPUTF16.COMP.FromOwnership(r, _11855_recOwned, expectedOwnership, out _out6079, out _out6080);
                  r = _out6079;
                  resultingOwnership = _out6080;
                  readIdents = _11856_recIdents;
                }
              } else if (_source647.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11857___mcc_h958 = _source647.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _11858___mcc_h959 = _source647.dtor_attributes;
                {
                  RAST._IType _11859_fromTpeGen;
                  RAST._IType _out6081;
                  _out6081 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _11859_fromTpeGen = _out6081;
                  RAST._IType _11860_toTpeGen;
                  RAST._IType _out6082;
                  _out6082 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _11860_toTpeGen = _out6082;
                  RAST._IExpr _11861_recursiveGen;
                  DCOMPUTF16._IOwnership _11862_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11863_recIdents;
                  RAST._IExpr _out6083;
                  DCOMPUTF16._IOwnership _out6084;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6085;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6083, out _out6084, out _out6085);
                  _11861_recursiveGen = _out6083;
                  _11862_recOwned = _out6084;
                  _11863_recIdents = _out6085;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11861_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11859_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11860_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6086;
                  DCOMPUTF16._IOwnership _out6087;
                  DCOMPUTF16.COMP.FromOwnership(r, _11862_recOwned, expectedOwnership, out _out6086, out _out6087);
                  r = _out6086;
                  resultingOwnership = _out6087;
                  readIdents = _11863_recIdents;
                }
              } else {
                DAST._IType _11864___mcc_h962 = _source647.dtor_baseType;
                DAST._INewtypeRange _11865___mcc_h963 = _source647.dtor_range;
                bool _11866___mcc_h964 = _source647.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _11867___mcc_h965 = _source647.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _11868_attributes = _11867___mcc_h965;
                bool _11869_erase = _11866___mcc_h964;
                DAST._INewtypeRange _11870_range = _11865___mcc_h963;
                DAST._IType _11871_b = _11864___mcc_h962;
                {
                  Std.Wrappers._IOption<RAST._IType> _11872_nativeToType;
                  _11872_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11871_b, _11870_range);
                  if (object.Equals(_9567_fromTpe, _11871_b)) {
                    RAST._IExpr _11873_recursiveGen;
                    DCOMPUTF16._IOwnership _11874_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11875_recIdents;
                    RAST._IExpr _out6088;
                    DCOMPUTF16._IOwnership _out6089;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6090;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6088, out _out6089, out _out6090);
                    _11873_recursiveGen = _out6088;
                    _11874_recOwned = _out6089;
                    _11875_recIdents = _out6090;
                    readIdents = _11875_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source648 = _11872_nativeToType;
                    if (_source648.is_None) {
                      if (_11869_erase) {
                        r = _11873_recursiveGen;
                      } else {
                        RAST._IType _11876_rhsType;
                        RAST._IType _out6091;
                        _out6091 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                        _11876_rhsType = _out6091;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11876_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11873_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6092;
                      DCOMPUTF16._IOwnership _out6093;
                      DCOMPUTF16.COMP.FromOwnership(r, _11874_recOwned, expectedOwnership, out _out6092, out _out6093);
                      r = _out6092;
                      resultingOwnership = _out6093;
                    } else {
                      RAST._IType _11877___mcc_h2104 = _source648.dtor_value;
                      RAST._IType _11878_v = _11877___mcc_h2104;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11873_recursiveGen, RAST.Expr.create_ExprFromType(_11878_v)));
                      RAST._IExpr _out6094;
                      DCOMPUTF16._IOwnership _out6095;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6094, out _out6095);
                      r = _out6094;
                      resultingOwnership = _out6095;
                    }
                  } else {
                    if ((_11872_nativeToType).is_Some) {
                      DAST._IType _source649 = _9567_fromTpe;
                      if (_source649.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11879___mcc_h2105 = _source649.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _11880___mcc_h2106 = _source649.dtor_typeArgs;
                        DAST._IResolvedType _11881___mcc_h2107 = _source649.dtor_resolved;
                        DAST._IResolvedType _source650 = _11881___mcc_h2107;
                        if (_source650.is_AllocatedDatatype) {
                          DAST._IDatatypeType _11882___mcc_h2111 = _source650.dtor_datatypeType;
                        } else if (_source650.is_Datatype) {
                          DAST._IDatatypeType _11883___mcc_h2113 = _source650.dtor_datatypeType;
                        } else if (_source650.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11884___mcc_h2115 = _source650.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _11885___mcc_h2116 = _source650.dtor_attributes;
                        } else {
                          DAST._IType _11886___mcc_h2119 = _source650.dtor_baseType;
                          DAST._INewtypeRange _11887___mcc_h2120 = _source650.dtor_range;
                          bool _11888___mcc_h2121 = _source650.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _11889___mcc_h2122 = _source650.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _11890_attributes0 = _11889___mcc_h2122;
                          bool _11891_erase0 = _11888___mcc_h2121;
                          DAST._INewtypeRange _11892_range0 = _11887___mcc_h2120;
                          DAST._IType _11893_b0 = _11886___mcc_h2119;
                          {
                            Std.Wrappers._IOption<RAST._IType> _11894_nativeFromType;
                            _11894_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11893_b0, _11892_range0);
                            if ((_11894_nativeFromType).is_Some) {
                              RAST._IExpr _11895_recursiveGen;
                              DCOMPUTF16._IOwnership _11896_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11897_recIdents;
                              RAST._IExpr _out6096;
                              DCOMPUTF16._IOwnership _out6097;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6098;
                              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6096, out _out6097, out _out6098);
                              _11895_recursiveGen = _out6096;
                              _11896_recOwned = _out6097;
                              _11897_recIdents = _out6098;
                              RAST._IExpr _out6099;
                              DCOMPUTF16._IOwnership _out6100;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11895_recursiveGen, (_11872_nativeToType).dtor_value), _11896_recOwned, expectedOwnership, out _out6099, out _out6100);
                              r = _out6099;
                              resultingOwnership = _out6100;
                              readIdents = _11897_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source649.is_Nullable) {
                        DAST._IType _11898___mcc_h2127 = _source649.dtor_Nullable_a0;
                      } else if (_source649.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _11899___mcc_h2129 = _source649.dtor_Tuple_a0;
                      } else if (_source649.is_Array) {
                        DAST._IType _11900___mcc_h2131 = _source649.dtor_element;
                        BigInteger _11901___mcc_h2132 = _source649.dtor_dims;
                      } else if (_source649.is_Seq) {
                        DAST._IType _11902___mcc_h2135 = _source649.dtor_element;
                      } else if (_source649.is_Set) {
                        DAST._IType _11903___mcc_h2137 = _source649.dtor_element;
                      } else if (_source649.is_Multiset) {
                        DAST._IType _11904___mcc_h2139 = _source649.dtor_element;
                      } else if (_source649.is_Map) {
                        DAST._IType _11905___mcc_h2141 = _source649.dtor_key;
                        DAST._IType _11906___mcc_h2142 = _source649.dtor_value;
                      } else if (_source649.is_SetBuilder) {
                        DAST._IType _11907___mcc_h2145 = _source649.dtor_element;
                      } else if (_source649.is_MapBuilder) {
                        DAST._IType _11908___mcc_h2147 = _source649.dtor_key;
                        DAST._IType _11909___mcc_h2148 = _source649.dtor_value;
                      } else if (_source649.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _11910___mcc_h2151 = _source649.dtor_args;
                        DAST._IType _11911___mcc_h2152 = _source649.dtor_result;
                      } else if (_source649.is_Primitive) {
                        DAST._IPrimitive _11912___mcc_h2155 = _source649.dtor_Primitive_a0;
                      } else if (_source649.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _11913___mcc_h2157 = _source649.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _11914___mcc_h2159 = _source649.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _11915_recursiveGen;
                        DCOMPUTF16._IOwnership _11916_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11917_recIdents;
                        RAST._IExpr _out6101;
                        DCOMPUTF16._IOwnership _out6102;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6103;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6101, out _out6102, out _out6103);
                        _11915_recursiveGen = _out6101;
                        _11916_recOwned = _out6102;
                        _11917_recIdents = _out6103;
                        RAST._IExpr _out6104;
                        DCOMPUTF16._IOwnership _out6105;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11915_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11872_nativeToType).dtor_value), _11916_recOwned, expectedOwnership, out _out6104, out _out6105);
                        r = _out6104;
                        resultingOwnership = _out6105;
                        readIdents = _11917_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6106;
                    DCOMPUTF16._IOwnership _out6107;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6108;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _11871_b), _11871_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out6106, out _out6107, out _out6108);
                    r = _out6106;
                    resultingOwnership = _out6107;
                    readIdents = _out6108;
                  }
                }
              }
            } else if (_source646.is_Nullable) {
              DAST._IType _11918___mcc_h970 = _source646.dtor_Nullable_a0;
              {
                RAST._IExpr _11919_recursiveGen;
                DCOMPUTF16._IOwnership _11920_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11921_recIdents;
                RAST._IExpr _out6109;
                DCOMPUTF16._IOwnership _out6110;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6111;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6109, out _out6110, out _out6111);
                _11919_recursiveGen = _out6109;
                _11920_recOwned = _out6110;
                _11921_recIdents = _out6111;
                r = _11919_recursiveGen;
                if (object.Equals(_11920_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6112;
                DCOMPUTF16._IOwnership _out6113;
                DCOMPUTF16.COMP.FromOwnership(r, _11920_recOwned, expectedOwnership, out _out6112, out _out6113);
                r = _out6112;
                resultingOwnership = _out6113;
                readIdents = _11921_recIdents;
              }
            } else if (_source646.is_Tuple) {
              Dafny.ISequence<DAST._IType> _11922___mcc_h972 = _source646.dtor_Tuple_a0;
              {
                RAST._IType _11923_fromTpeGen;
                RAST._IType _out6114;
                _out6114 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11923_fromTpeGen = _out6114;
                RAST._IType _11924_toTpeGen;
                RAST._IType _out6115;
                _out6115 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11924_toTpeGen = _out6115;
                RAST._IExpr _11925_recursiveGen;
                DCOMPUTF16._IOwnership _11926_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11927_recIdents;
                RAST._IExpr _out6116;
                DCOMPUTF16._IOwnership _out6117;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6118;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6116, out _out6117, out _out6118);
                _11925_recursiveGen = _out6116;
                _11926_recOwned = _out6117;
                _11927_recIdents = _out6118;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11925_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11923_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11924_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6119;
                DCOMPUTF16._IOwnership _out6120;
                DCOMPUTF16.COMP.FromOwnership(r, _11926_recOwned, expectedOwnership, out _out6119, out _out6120);
                r = _out6119;
                resultingOwnership = _out6120;
                readIdents = _11927_recIdents;
              }
            } else if (_source646.is_Array) {
              DAST._IType _11928___mcc_h974 = _source646.dtor_element;
              BigInteger _11929___mcc_h975 = _source646.dtor_dims;
              {
                RAST._IType _11930_fromTpeGen;
                RAST._IType _out6121;
                _out6121 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11930_fromTpeGen = _out6121;
                RAST._IType _11931_toTpeGen;
                RAST._IType _out6122;
                _out6122 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11931_toTpeGen = _out6122;
                RAST._IExpr _11932_recursiveGen;
                DCOMPUTF16._IOwnership _11933_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11934_recIdents;
                RAST._IExpr _out6123;
                DCOMPUTF16._IOwnership _out6124;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6125;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6123, out _out6124, out _out6125);
                _11932_recursiveGen = _out6123;
                _11933_recOwned = _out6124;
                _11934_recIdents = _out6125;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11932_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11930_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11931_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6126;
                DCOMPUTF16._IOwnership _out6127;
                DCOMPUTF16.COMP.FromOwnership(r, _11933_recOwned, expectedOwnership, out _out6126, out _out6127);
                r = _out6126;
                resultingOwnership = _out6127;
                readIdents = _11934_recIdents;
              }
            } else if (_source646.is_Seq) {
              DAST._IType _11935___mcc_h978 = _source646.dtor_element;
              {
                RAST._IType _11936_fromTpeGen;
                RAST._IType _out6128;
                _out6128 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11936_fromTpeGen = _out6128;
                RAST._IType _11937_toTpeGen;
                RAST._IType _out6129;
                _out6129 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11937_toTpeGen = _out6129;
                RAST._IExpr _11938_recursiveGen;
                DCOMPUTF16._IOwnership _11939_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11940_recIdents;
                RAST._IExpr _out6130;
                DCOMPUTF16._IOwnership _out6131;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6132;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6130, out _out6131, out _out6132);
                _11938_recursiveGen = _out6130;
                _11939_recOwned = _out6131;
                _11940_recIdents = _out6132;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11938_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11936_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11937_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6133;
                DCOMPUTF16._IOwnership _out6134;
                DCOMPUTF16.COMP.FromOwnership(r, _11939_recOwned, expectedOwnership, out _out6133, out _out6134);
                r = _out6133;
                resultingOwnership = _out6134;
                readIdents = _11940_recIdents;
              }
            } else if (_source646.is_Set) {
              DAST._IType _11941___mcc_h980 = _source646.dtor_element;
              {
                RAST._IType _11942_fromTpeGen;
                RAST._IType _out6135;
                _out6135 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11942_fromTpeGen = _out6135;
                RAST._IType _11943_toTpeGen;
                RAST._IType _out6136;
                _out6136 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11943_toTpeGen = _out6136;
                RAST._IExpr _11944_recursiveGen;
                DCOMPUTF16._IOwnership _11945_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11946_recIdents;
                RAST._IExpr _out6137;
                DCOMPUTF16._IOwnership _out6138;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6139;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6137, out _out6138, out _out6139);
                _11944_recursiveGen = _out6137;
                _11945_recOwned = _out6138;
                _11946_recIdents = _out6139;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11944_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11942_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11943_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6140;
                DCOMPUTF16._IOwnership _out6141;
                DCOMPUTF16.COMP.FromOwnership(r, _11945_recOwned, expectedOwnership, out _out6140, out _out6141);
                r = _out6140;
                resultingOwnership = _out6141;
                readIdents = _11946_recIdents;
              }
            } else if (_source646.is_Multiset) {
              DAST._IType _11947___mcc_h982 = _source646.dtor_element;
              {
                RAST._IType _11948_fromTpeGen;
                RAST._IType _out6142;
                _out6142 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11948_fromTpeGen = _out6142;
                RAST._IType _11949_toTpeGen;
                RAST._IType _out6143;
                _out6143 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11949_toTpeGen = _out6143;
                RAST._IExpr _11950_recursiveGen;
                DCOMPUTF16._IOwnership _11951_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11952_recIdents;
                RAST._IExpr _out6144;
                DCOMPUTF16._IOwnership _out6145;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6146;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6144, out _out6145, out _out6146);
                _11950_recursiveGen = _out6144;
                _11951_recOwned = _out6145;
                _11952_recIdents = _out6146;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11950_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11948_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11949_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6147;
                DCOMPUTF16._IOwnership _out6148;
                DCOMPUTF16.COMP.FromOwnership(r, _11951_recOwned, expectedOwnership, out _out6147, out _out6148);
                r = _out6147;
                resultingOwnership = _out6148;
                readIdents = _11952_recIdents;
              }
            } else if (_source646.is_Map) {
              DAST._IType _11953___mcc_h984 = _source646.dtor_key;
              DAST._IType _11954___mcc_h985 = _source646.dtor_value;
              {
                RAST._IType _11955_fromTpeGen;
                RAST._IType _out6149;
                _out6149 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11955_fromTpeGen = _out6149;
                RAST._IType _11956_toTpeGen;
                RAST._IType _out6150;
                _out6150 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11956_toTpeGen = _out6150;
                RAST._IExpr _11957_recursiveGen;
                DCOMPUTF16._IOwnership _11958_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11959_recIdents;
                RAST._IExpr _out6151;
                DCOMPUTF16._IOwnership _out6152;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6153;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6151, out _out6152, out _out6153);
                _11957_recursiveGen = _out6151;
                _11958_recOwned = _out6152;
                _11959_recIdents = _out6153;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11957_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11955_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11956_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6154;
                DCOMPUTF16._IOwnership _out6155;
                DCOMPUTF16.COMP.FromOwnership(r, _11958_recOwned, expectedOwnership, out _out6154, out _out6155);
                r = _out6154;
                resultingOwnership = _out6155;
                readIdents = _11959_recIdents;
              }
            } else if (_source646.is_SetBuilder) {
              DAST._IType _11960___mcc_h988 = _source646.dtor_element;
              {
                RAST._IType _11961_fromTpeGen;
                RAST._IType _out6156;
                _out6156 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11961_fromTpeGen = _out6156;
                RAST._IType _11962_toTpeGen;
                RAST._IType _out6157;
                _out6157 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11962_toTpeGen = _out6157;
                RAST._IExpr _11963_recursiveGen;
                DCOMPUTF16._IOwnership _11964_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11965_recIdents;
                RAST._IExpr _out6158;
                DCOMPUTF16._IOwnership _out6159;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6160;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6158, out _out6159, out _out6160);
                _11963_recursiveGen = _out6158;
                _11964_recOwned = _out6159;
                _11965_recIdents = _out6160;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11963_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11961_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11962_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6161;
                DCOMPUTF16._IOwnership _out6162;
                DCOMPUTF16.COMP.FromOwnership(r, _11964_recOwned, expectedOwnership, out _out6161, out _out6162);
                r = _out6161;
                resultingOwnership = _out6162;
                readIdents = _11965_recIdents;
              }
            } else if (_source646.is_MapBuilder) {
              DAST._IType _11966___mcc_h990 = _source646.dtor_key;
              DAST._IType _11967___mcc_h991 = _source646.dtor_value;
              {
                RAST._IType _11968_fromTpeGen;
                RAST._IType _out6163;
                _out6163 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11968_fromTpeGen = _out6163;
                RAST._IType _11969_toTpeGen;
                RAST._IType _out6164;
                _out6164 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11969_toTpeGen = _out6164;
                RAST._IExpr _11970_recursiveGen;
                DCOMPUTF16._IOwnership _11971_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11972_recIdents;
                RAST._IExpr _out6165;
                DCOMPUTF16._IOwnership _out6166;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6167;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6165, out _out6166, out _out6167);
                _11970_recursiveGen = _out6165;
                _11971_recOwned = _out6166;
                _11972_recIdents = _out6167;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11970_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11968_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11969_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6168;
                DCOMPUTF16._IOwnership _out6169;
                DCOMPUTF16.COMP.FromOwnership(r, _11971_recOwned, expectedOwnership, out _out6168, out _out6169);
                r = _out6168;
                resultingOwnership = _out6169;
                readIdents = _11972_recIdents;
              }
            } else if (_source646.is_Arrow) {
              Dafny.ISequence<DAST._IType> _11973___mcc_h994 = _source646.dtor_args;
              DAST._IType _11974___mcc_h995 = _source646.dtor_result;
              {
                RAST._IType _11975_fromTpeGen;
                RAST._IType _out6170;
                _out6170 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _11975_fromTpeGen = _out6170;
                RAST._IType _11976_toTpeGen;
                RAST._IType _out6171;
                _out6171 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _11976_toTpeGen = _out6171;
                RAST._IExpr _11977_recursiveGen;
                DCOMPUTF16._IOwnership _11978_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11979_recIdents;
                RAST._IExpr _out6172;
                DCOMPUTF16._IOwnership _out6173;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6174;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6172, out _out6173, out _out6174);
                _11977_recursiveGen = _out6172;
                _11978_recOwned = _out6173;
                _11979_recIdents = _out6174;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11977_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11975_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11976_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6175;
                DCOMPUTF16._IOwnership _out6176;
                DCOMPUTF16.COMP.FromOwnership(r, _11978_recOwned, expectedOwnership, out _out6175, out _out6176);
                r = _out6175;
                resultingOwnership = _out6176;
                readIdents = _11979_recIdents;
              }
            } else if (_source646.is_Primitive) {
              DAST._IPrimitive _11980___mcc_h998 = _source646.dtor_Primitive_a0;
              DAST._IPrimitive _source651 = _11980___mcc_h998;
              if (_source651.is_Int) {
                {
                  RAST._IType _11981_fromTpeGen;
                  RAST._IType _out6177;
                  _out6177 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _11981_fromTpeGen = _out6177;
                  RAST._IType _11982_toTpeGen;
                  RAST._IType _out6178;
                  _out6178 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _11982_toTpeGen = _out6178;
                  RAST._IExpr _11983_recursiveGen;
                  DCOMPUTF16._IOwnership _11984_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11985_recIdents;
                  RAST._IExpr _out6179;
                  DCOMPUTF16._IOwnership _out6180;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6181;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6179, out _out6180, out _out6181);
                  _11983_recursiveGen = _out6179;
                  _11984_recOwned = _out6180;
                  _11985_recIdents = _out6181;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11983_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11981_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11982_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6182;
                  DCOMPUTF16._IOwnership _out6183;
                  DCOMPUTF16.COMP.FromOwnership(r, _11984_recOwned, expectedOwnership, out _out6182, out _out6183);
                  r = _out6182;
                  resultingOwnership = _out6183;
                  readIdents = _11985_recIdents;
                }
              } else if (_source651.is_Real) {
                {
                  RAST._IExpr _11986_recursiveGen;
                  DCOMPUTF16._IOwnership _11987___v97;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11988_recIdents;
                  RAST._IExpr _out6184;
                  DCOMPUTF16._IOwnership _out6185;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6186;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6184, out _out6185, out _out6186);
                  _11986_recursiveGen = _out6184;
                  _11987___v97 = _out6185;
                  _11988_recIdents = _out6186;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_11986_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out6187;
                  DCOMPUTF16._IOwnership _out6188;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6187, out _out6188);
                  r = _out6187;
                  resultingOwnership = _out6188;
                  readIdents = _11988_recIdents;
                }
              } else if (_source651.is_String) {
                {
                  RAST._IType _11989_fromTpeGen;
                  RAST._IType _out6189;
                  _out6189 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _11989_fromTpeGen = _out6189;
                  RAST._IType _11990_toTpeGen;
                  RAST._IType _out6190;
                  _out6190 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _11990_toTpeGen = _out6190;
                  RAST._IExpr _11991_recursiveGen;
                  DCOMPUTF16._IOwnership _11992_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11993_recIdents;
                  RAST._IExpr _out6191;
                  DCOMPUTF16._IOwnership _out6192;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6193;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6191, out _out6192, out _out6193);
                  _11991_recursiveGen = _out6191;
                  _11992_recOwned = _out6192;
                  _11993_recIdents = _out6193;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11991_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11989_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11990_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6194;
                  DCOMPUTF16._IOwnership _out6195;
                  DCOMPUTF16.COMP.FromOwnership(r, _11992_recOwned, expectedOwnership, out _out6194, out _out6195);
                  r = _out6194;
                  resultingOwnership = _out6195;
                  readIdents = _11993_recIdents;
                }
              } else if (_source651.is_Bool) {
                {
                  RAST._IType _11994_fromTpeGen;
                  RAST._IType _out6196;
                  _out6196 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _11994_fromTpeGen = _out6196;
                  RAST._IType _11995_toTpeGen;
                  RAST._IType _out6197;
                  _out6197 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _11995_toTpeGen = _out6197;
                  RAST._IExpr _11996_recursiveGen;
                  DCOMPUTF16._IOwnership _11997_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11998_recIdents;
                  RAST._IExpr _out6198;
                  DCOMPUTF16._IOwnership _out6199;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6200;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6198, out _out6199, out _out6200);
                  _11996_recursiveGen = _out6198;
                  _11997_recOwned = _out6199;
                  _11998_recIdents = _out6200;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11996_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11994_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11995_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6201;
                  DCOMPUTF16._IOwnership _out6202;
                  DCOMPUTF16.COMP.FromOwnership(r, _11997_recOwned, expectedOwnership, out _out6201, out _out6202);
                  r = _out6201;
                  resultingOwnership = _out6202;
                  readIdents = _11998_recIdents;
                }
              } else {
                {
                  RAST._IType _11999_rhsType;
                  RAST._IType _out6203;
                  _out6203 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _11999_rhsType = _out6203;
                  RAST._IExpr _12000_recursiveGen;
                  DCOMPUTF16._IOwnership _12001___v103;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12002_recIdents;
                  RAST._IExpr _out6204;
                  DCOMPUTF16._IOwnership _out6205;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6206;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6204, out _out6205, out _out6206);
                  _12000_recursiveGen = _out6204;
                  _12001___v103 = _out6205;
                  _12002_recIdents = _out6206;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_12000_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out6207;
                  DCOMPUTF16._IOwnership _out6208;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6207, out _out6208);
                  r = _out6207;
                  resultingOwnership = _out6208;
                  readIdents = _12002_recIdents;
                }
              }
            } else if (_source646.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12003___mcc_h1000 = _source646.dtor_Passthrough_a0;
              {
                RAST._IType _12004_rhsType;
                RAST._IType _out6209;
                _out6209 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12004_rhsType = _out6209;
                RAST._IExpr _12005_recursiveGen;
                DCOMPUTF16._IOwnership _12006___v100;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12007_recIdents;
                RAST._IExpr _out6210;
                DCOMPUTF16._IOwnership _out6211;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6212;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6210, out _out6211, out _out6212);
                _12005_recursiveGen = _out6210;
                _12006___v100 = _out6211;
                _12007_recIdents = _out6212;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_12004_rhsType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_12005_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out6213;
                DCOMPUTF16._IOwnership _out6214;
                DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6213, out _out6214);
                r = _out6213;
                resultingOwnership = _out6214;
                readIdents = _12007_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12008___mcc_h1002 = _source646.dtor_TypeArg_a0;
              {
                RAST._IType _12009_fromTpeGen;
                RAST._IType _out6215;
                _out6215 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12009_fromTpeGen = _out6215;
                RAST._IType _12010_toTpeGen;
                RAST._IType _out6216;
                _out6216 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12010_toTpeGen = _out6216;
                RAST._IExpr _12011_recursiveGen;
                DCOMPUTF16._IOwnership _12012_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12013_recIdents;
                RAST._IExpr _out6217;
                DCOMPUTF16._IOwnership _out6218;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6219;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6217, out _out6218, out _out6219);
                _12011_recursiveGen = _out6217;
                _12012_recOwned = _out6218;
                _12013_recIdents = _out6219;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12011_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12009_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12010_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6220;
                DCOMPUTF16._IOwnership _out6221;
                DCOMPUTF16.COMP.FromOwnership(r, _12012_recOwned, expectedOwnership, out _out6220, out _out6221);
                r = _out6220;
                resultingOwnership = _out6221;
                readIdents = _12013_recIdents;
              }
            }
          } else if (_source645.is_Real) {
            DAST._IType _source652 = _9573___mcc_h1;
            if (_source652.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12014___mcc_h1004 = _source652.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _12015___mcc_h1005 = _source652.dtor_typeArgs;
              DAST._IResolvedType _12016___mcc_h1006 = _source652.dtor_resolved;
              DAST._IResolvedType _source653 = _12016___mcc_h1006;
              if (_source653.is_AllocatedDatatype) {
                DAST._IDatatypeType _12017___mcc_h1010 = _source653.dtor_datatypeType;
                {
                  RAST._IType _12018_fromTpeGen;
                  RAST._IType _out6222;
                  _out6222 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12018_fromTpeGen = _out6222;
                  RAST._IType _12019_toTpeGen;
                  RAST._IType _out6223;
                  _out6223 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12019_toTpeGen = _out6223;
                  RAST._IExpr _12020_recursiveGen;
                  DCOMPUTF16._IOwnership _12021_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12022_recIdents;
                  RAST._IExpr _out6224;
                  DCOMPUTF16._IOwnership _out6225;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6226;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6224, out _out6225, out _out6226);
                  _12020_recursiveGen = _out6224;
                  _12021_recOwned = _out6225;
                  _12022_recIdents = _out6226;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12020_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12018_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12019_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6227;
                  DCOMPUTF16._IOwnership _out6228;
                  DCOMPUTF16.COMP.FromOwnership(r, _12021_recOwned, expectedOwnership, out _out6227, out _out6228);
                  r = _out6227;
                  resultingOwnership = _out6228;
                  readIdents = _12022_recIdents;
                }
              } else if (_source653.is_Datatype) {
                DAST._IDatatypeType _12023___mcc_h1012 = _source653.dtor_datatypeType;
                {
                  RAST._IType _12024_fromTpeGen;
                  RAST._IType _out6229;
                  _out6229 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12024_fromTpeGen = _out6229;
                  RAST._IType _12025_toTpeGen;
                  RAST._IType _out6230;
                  _out6230 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12025_toTpeGen = _out6230;
                  RAST._IExpr _12026_recursiveGen;
                  DCOMPUTF16._IOwnership _12027_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12028_recIdents;
                  RAST._IExpr _out6231;
                  DCOMPUTF16._IOwnership _out6232;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6233;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6231, out _out6232, out _out6233);
                  _12026_recursiveGen = _out6231;
                  _12027_recOwned = _out6232;
                  _12028_recIdents = _out6233;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12026_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12024_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12025_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6234;
                  DCOMPUTF16._IOwnership _out6235;
                  DCOMPUTF16.COMP.FromOwnership(r, _12027_recOwned, expectedOwnership, out _out6234, out _out6235);
                  r = _out6234;
                  resultingOwnership = _out6235;
                  readIdents = _12028_recIdents;
                }
              } else if (_source653.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12029___mcc_h1014 = _source653.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _12030___mcc_h1015 = _source653.dtor_attributes;
                {
                  RAST._IType _12031_fromTpeGen;
                  RAST._IType _out6236;
                  _out6236 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12031_fromTpeGen = _out6236;
                  RAST._IType _12032_toTpeGen;
                  RAST._IType _out6237;
                  _out6237 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12032_toTpeGen = _out6237;
                  RAST._IExpr _12033_recursiveGen;
                  DCOMPUTF16._IOwnership _12034_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12035_recIdents;
                  RAST._IExpr _out6238;
                  DCOMPUTF16._IOwnership _out6239;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6240;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6238, out _out6239, out _out6240);
                  _12033_recursiveGen = _out6238;
                  _12034_recOwned = _out6239;
                  _12035_recIdents = _out6240;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12033_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12031_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12032_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6241;
                  DCOMPUTF16._IOwnership _out6242;
                  DCOMPUTF16.COMP.FromOwnership(r, _12034_recOwned, expectedOwnership, out _out6241, out _out6242);
                  r = _out6241;
                  resultingOwnership = _out6242;
                  readIdents = _12035_recIdents;
                }
              } else {
                DAST._IType _12036___mcc_h1018 = _source653.dtor_baseType;
                DAST._INewtypeRange _12037___mcc_h1019 = _source653.dtor_range;
                bool _12038___mcc_h1020 = _source653.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _12039___mcc_h1021 = _source653.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _12040_attributes = _12039___mcc_h1021;
                bool _12041_erase = _12038___mcc_h1020;
                DAST._INewtypeRange _12042_range = _12037___mcc_h1019;
                DAST._IType _12043_b = _12036___mcc_h1018;
                {
                  Std.Wrappers._IOption<RAST._IType> _12044_nativeToType;
                  _12044_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12043_b, _12042_range);
                  if (object.Equals(_9567_fromTpe, _12043_b)) {
                    RAST._IExpr _12045_recursiveGen;
                    DCOMPUTF16._IOwnership _12046_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12047_recIdents;
                    RAST._IExpr _out6243;
                    DCOMPUTF16._IOwnership _out6244;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6245;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6243, out _out6244, out _out6245);
                    _12045_recursiveGen = _out6243;
                    _12046_recOwned = _out6244;
                    _12047_recIdents = _out6245;
                    readIdents = _12047_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source654 = _12044_nativeToType;
                    if (_source654.is_None) {
                      if (_12041_erase) {
                        r = _12045_recursiveGen;
                      } else {
                        RAST._IType _12048_rhsType;
                        RAST._IType _out6246;
                        _out6246 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                        _12048_rhsType = _out6246;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12048_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12045_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6247;
                      DCOMPUTF16._IOwnership _out6248;
                      DCOMPUTF16.COMP.FromOwnership(r, _12046_recOwned, expectedOwnership, out _out6247, out _out6248);
                      r = _out6247;
                      resultingOwnership = _out6248;
                    } else {
                      RAST._IType _12049___mcc_h2161 = _source654.dtor_value;
                      RAST._IType _12050_v = _12049___mcc_h2161;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12045_recursiveGen, RAST.Expr.create_ExprFromType(_12050_v)));
                      RAST._IExpr _out6249;
                      DCOMPUTF16._IOwnership _out6250;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6249, out _out6250);
                      r = _out6249;
                      resultingOwnership = _out6250;
                    }
                  } else {
                    if ((_12044_nativeToType).is_Some) {
                      DAST._IType _source655 = _9567_fromTpe;
                      if (_source655.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12051___mcc_h2162 = _source655.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _12052___mcc_h2163 = _source655.dtor_typeArgs;
                        DAST._IResolvedType _12053___mcc_h2164 = _source655.dtor_resolved;
                        DAST._IResolvedType _source656 = _12053___mcc_h2164;
                        if (_source656.is_AllocatedDatatype) {
                          DAST._IDatatypeType _12054___mcc_h2168 = _source656.dtor_datatypeType;
                        } else if (_source656.is_Datatype) {
                          DAST._IDatatypeType _12055___mcc_h2170 = _source656.dtor_datatypeType;
                        } else if (_source656.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12056___mcc_h2172 = _source656.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _12057___mcc_h2173 = _source656.dtor_attributes;
                        } else {
                          DAST._IType _12058___mcc_h2176 = _source656.dtor_baseType;
                          DAST._INewtypeRange _12059___mcc_h2177 = _source656.dtor_range;
                          bool _12060___mcc_h2178 = _source656.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _12061___mcc_h2179 = _source656.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _12062_attributes0 = _12061___mcc_h2179;
                          bool _12063_erase0 = _12060___mcc_h2178;
                          DAST._INewtypeRange _12064_range0 = _12059___mcc_h2177;
                          DAST._IType _12065_b0 = _12058___mcc_h2176;
                          {
                            Std.Wrappers._IOption<RAST._IType> _12066_nativeFromType;
                            _12066_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12065_b0, _12064_range0);
                            if ((_12066_nativeFromType).is_Some) {
                              RAST._IExpr _12067_recursiveGen;
                              DCOMPUTF16._IOwnership _12068_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12069_recIdents;
                              RAST._IExpr _out6251;
                              DCOMPUTF16._IOwnership _out6252;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6253;
                              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6251, out _out6252, out _out6253);
                              _12067_recursiveGen = _out6251;
                              _12068_recOwned = _out6252;
                              _12069_recIdents = _out6253;
                              RAST._IExpr _out6254;
                              DCOMPUTF16._IOwnership _out6255;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12067_recursiveGen, (_12044_nativeToType).dtor_value), _12068_recOwned, expectedOwnership, out _out6254, out _out6255);
                              r = _out6254;
                              resultingOwnership = _out6255;
                              readIdents = _12069_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source655.is_Nullable) {
                        DAST._IType _12070___mcc_h2184 = _source655.dtor_Nullable_a0;
                      } else if (_source655.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _12071___mcc_h2186 = _source655.dtor_Tuple_a0;
                      } else if (_source655.is_Array) {
                        DAST._IType _12072___mcc_h2188 = _source655.dtor_element;
                        BigInteger _12073___mcc_h2189 = _source655.dtor_dims;
                      } else if (_source655.is_Seq) {
                        DAST._IType _12074___mcc_h2192 = _source655.dtor_element;
                      } else if (_source655.is_Set) {
                        DAST._IType _12075___mcc_h2194 = _source655.dtor_element;
                      } else if (_source655.is_Multiset) {
                        DAST._IType _12076___mcc_h2196 = _source655.dtor_element;
                      } else if (_source655.is_Map) {
                        DAST._IType _12077___mcc_h2198 = _source655.dtor_key;
                        DAST._IType _12078___mcc_h2199 = _source655.dtor_value;
                      } else if (_source655.is_SetBuilder) {
                        DAST._IType _12079___mcc_h2202 = _source655.dtor_element;
                      } else if (_source655.is_MapBuilder) {
                        DAST._IType _12080___mcc_h2204 = _source655.dtor_key;
                        DAST._IType _12081___mcc_h2205 = _source655.dtor_value;
                      } else if (_source655.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _12082___mcc_h2208 = _source655.dtor_args;
                        DAST._IType _12083___mcc_h2209 = _source655.dtor_result;
                      } else if (_source655.is_Primitive) {
                        DAST._IPrimitive _12084___mcc_h2212 = _source655.dtor_Primitive_a0;
                      } else if (_source655.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _12085___mcc_h2214 = _source655.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _12086___mcc_h2216 = _source655.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _12087_recursiveGen;
                        DCOMPUTF16._IOwnership _12088_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12089_recIdents;
                        RAST._IExpr _out6256;
                        DCOMPUTF16._IOwnership _out6257;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6258;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6256, out _out6257, out _out6258);
                        _12087_recursiveGen = _out6256;
                        _12088_recOwned = _out6257;
                        _12089_recIdents = _out6258;
                        RAST._IExpr _out6259;
                        DCOMPUTF16._IOwnership _out6260;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12087_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12044_nativeToType).dtor_value), _12088_recOwned, expectedOwnership, out _out6259, out _out6260);
                        r = _out6259;
                        resultingOwnership = _out6260;
                        readIdents = _12089_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6261;
                    DCOMPUTF16._IOwnership _out6262;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6263;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _12043_b), _12043_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out6261, out _out6262, out _out6263);
                    r = _out6261;
                    resultingOwnership = _out6262;
                    readIdents = _out6263;
                  }
                }
              }
            } else if (_source652.is_Nullable) {
              DAST._IType _12090___mcc_h1026 = _source652.dtor_Nullable_a0;
              {
                RAST._IExpr _12091_recursiveGen;
                DCOMPUTF16._IOwnership _12092_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12093_recIdents;
                RAST._IExpr _out6264;
                DCOMPUTF16._IOwnership _out6265;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6266;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6264, out _out6265, out _out6266);
                _12091_recursiveGen = _out6264;
                _12092_recOwned = _out6265;
                _12093_recIdents = _out6266;
                r = _12091_recursiveGen;
                if (object.Equals(_12092_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6267;
                DCOMPUTF16._IOwnership _out6268;
                DCOMPUTF16.COMP.FromOwnership(r, _12092_recOwned, expectedOwnership, out _out6267, out _out6268);
                r = _out6267;
                resultingOwnership = _out6268;
                readIdents = _12093_recIdents;
              }
            } else if (_source652.is_Tuple) {
              Dafny.ISequence<DAST._IType> _12094___mcc_h1028 = _source652.dtor_Tuple_a0;
              {
                RAST._IType _12095_fromTpeGen;
                RAST._IType _out6269;
                _out6269 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12095_fromTpeGen = _out6269;
                RAST._IType _12096_toTpeGen;
                RAST._IType _out6270;
                _out6270 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12096_toTpeGen = _out6270;
                RAST._IExpr _12097_recursiveGen;
                DCOMPUTF16._IOwnership _12098_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12099_recIdents;
                RAST._IExpr _out6271;
                DCOMPUTF16._IOwnership _out6272;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6273;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6271, out _out6272, out _out6273);
                _12097_recursiveGen = _out6271;
                _12098_recOwned = _out6272;
                _12099_recIdents = _out6273;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12097_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12095_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12096_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6274;
                DCOMPUTF16._IOwnership _out6275;
                DCOMPUTF16.COMP.FromOwnership(r, _12098_recOwned, expectedOwnership, out _out6274, out _out6275);
                r = _out6274;
                resultingOwnership = _out6275;
                readIdents = _12099_recIdents;
              }
            } else if (_source652.is_Array) {
              DAST._IType _12100___mcc_h1030 = _source652.dtor_element;
              BigInteger _12101___mcc_h1031 = _source652.dtor_dims;
              {
                RAST._IType _12102_fromTpeGen;
                RAST._IType _out6276;
                _out6276 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12102_fromTpeGen = _out6276;
                RAST._IType _12103_toTpeGen;
                RAST._IType _out6277;
                _out6277 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12103_toTpeGen = _out6277;
                RAST._IExpr _12104_recursiveGen;
                DCOMPUTF16._IOwnership _12105_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12106_recIdents;
                RAST._IExpr _out6278;
                DCOMPUTF16._IOwnership _out6279;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6280;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6278, out _out6279, out _out6280);
                _12104_recursiveGen = _out6278;
                _12105_recOwned = _out6279;
                _12106_recIdents = _out6280;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12104_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12102_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12103_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6281;
                DCOMPUTF16._IOwnership _out6282;
                DCOMPUTF16.COMP.FromOwnership(r, _12105_recOwned, expectedOwnership, out _out6281, out _out6282);
                r = _out6281;
                resultingOwnership = _out6282;
                readIdents = _12106_recIdents;
              }
            } else if (_source652.is_Seq) {
              DAST._IType _12107___mcc_h1034 = _source652.dtor_element;
              {
                RAST._IType _12108_fromTpeGen;
                RAST._IType _out6283;
                _out6283 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12108_fromTpeGen = _out6283;
                RAST._IType _12109_toTpeGen;
                RAST._IType _out6284;
                _out6284 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12109_toTpeGen = _out6284;
                RAST._IExpr _12110_recursiveGen;
                DCOMPUTF16._IOwnership _12111_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12112_recIdents;
                RAST._IExpr _out6285;
                DCOMPUTF16._IOwnership _out6286;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6287;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6285, out _out6286, out _out6287);
                _12110_recursiveGen = _out6285;
                _12111_recOwned = _out6286;
                _12112_recIdents = _out6287;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12110_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12108_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12109_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6288;
                DCOMPUTF16._IOwnership _out6289;
                DCOMPUTF16.COMP.FromOwnership(r, _12111_recOwned, expectedOwnership, out _out6288, out _out6289);
                r = _out6288;
                resultingOwnership = _out6289;
                readIdents = _12112_recIdents;
              }
            } else if (_source652.is_Set) {
              DAST._IType _12113___mcc_h1036 = _source652.dtor_element;
              {
                RAST._IType _12114_fromTpeGen;
                RAST._IType _out6290;
                _out6290 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12114_fromTpeGen = _out6290;
                RAST._IType _12115_toTpeGen;
                RAST._IType _out6291;
                _out6291 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12115_toTpeGen = _out6291;
                RAST._IExpr _12116_recursiveGen;
                DCOMPUTF16._IOwnership _12117_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12118_recIdents;
                RAST._IExpr _out6292;
                DCOMPUTF16._IOwnership _out6293;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6294;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6292, out _out6293, out _out6294);
                _12116_recursiveGen = _out6292;
                _12117_recOwned = _out6293;
                _12118_recIdents = _out6294;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12116_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12114_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12115_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6295;
                DCOMPUTF16._IOwnership _out6296;
                DCOMPUTF16.COMP.FromOwnership(r, _12117_recOwned, expectedOwnership, out _out6295, out _out6296);
                r = _out6295;
                resultingOwnership = _out6296;
                readIdents = _12118_recIdents;
              }
            } else if (_source652.is_Multiset) {
              DAST._IType _12119___mcc_h1038 = _source652.dtor_element;
              {
                RAST._IType _12120_fromTpeGen;
                RAST._IType _out6297;
                _out6297 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12120_fromTpeGen = _out6297;
                RAST._IType _12121_toTpeGen;
                RAST._IType _out6298;
                _out6298 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12121_toTpeGen = _out6298;
                RAST._IExpr _12122_recursiveGen;
                DCOMPUTF16._IOwnership _12123_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12124_recIdents;
                RAST._IExpr _out6299;
                DCOMPUTF16._IOwnership _out6300;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6301;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6299, out _out6300, out _out6301);
                _12122_recursiveGen = _out6299;
                _12123_recOwned = _out6300;
                _12124_recIdents = _out6301;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12122_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12120_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12121_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6302;
                DCOMPUTF16._IOwnership _out6303;
                DCOMPUTF16.COMP.FromOwnership(r, _12123_recOwned, expectedOwnership, out _out6302, out _out6303);
                r = _out6302;
                resultingOwnership = _out6303;
                readIdents = _12124_recIdents;
              }
            } else if (_source652.is_Map) {
              DAST._IType _12125___mcc_h1040 = _source652.dtor_key;
              DAST._IType _12126___mcc_h1041 = _source652.dtor_value;
              {
                RAST._IType _12127_fromTpeGen;
                RAST._IType _out6304;
                _out6304 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12127_fromTpeGen = _out6304;
                RAST._IType _12128_toTpeGen;
                RAST._IType _out6305;
                _out6305 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12128_toTpeGen = _out6305;
                RAST._IExpr _12129_recursiveGen;
                DCOMPUTF16._IOwnership _12130_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12131_recIdents;
                RAST._IExpr _out6306;
                DCOMPUTF16._IOwnership _out6307;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6308;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6306, out _out6307, out _out6308);
                _12129_recursiveGen = _out6306;
                _12130_recOwned = _out6307;
                _12131_recIdents = _out6308;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12129_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12127_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12128_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6309;
                DCOMPUTF16._IOwnership _out6310;
                DCOMPUTF16.COMP.FromOwnership(r, _12130_recOwned, expectedOwnership, out _out6309, out _out6310);
                r = _out6309;
                resultingOwnership = _out6310;
                readIdents = _12131_recIdents;
              }
            } else if (_source652.is_SetBuilder) {
              DAST._IType _12132___mcc_h1044 = _source652.dtor_element;
              {
                RAST._IType _12133_fromTpeGen;
                RAST._IType _out6311;
                _out6311 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12133_fromTpeGen = _out6311;
                RAST._IType _12134_toTpeGen;
                RAST._IType _out6312;
                _out6312 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12134_toTpeGen = _out6312;
                RAST._IExpr _12135_recursiveGen;
                DCOMPUTF16._IOwnership _12136_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12137_recIdents;
                RAST._IExpr _out6313;
                DCOMPUTF16._IOwnership _out6314;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6315;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6313, out _out6314, out _out6315);
                _12135_recursiveGen = _out6313;
                _12136_recOwned = _out6314;
                _12137_recIdents = _out6315;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12135_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12133_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12134_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6316;
                DCOMPUTF16._IOwnership _out6317;
                DCOMPUTF16.COMP.FromOwnership(r, _12136_recOwned, expectedOwnership, out _out6316, out _out6317);
                r = _out6316;
                resultingOwnership = _out6317;
                readIdents = _12137_recIdents;
              }
            } else if (_source652.is_MapBuilder) {
              DAST._IType _12138___mcc_h1046 = _source652.dtor_key;
              DAST._IType _12139___mcc_h1047 = _source652.dtor_value;
              {
                RAST._IType _12140_fromTpeGen;
                RAST._IType _out6318;
                _out6318 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12140_fromTpeGen = _out6318;
                RAST._IType _12141_toTpeGen;
                RAST._IType _out6319;
                _out6319 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12141_toTpeGen = _out6319;
                RAST._IExpr _12142_recursiveGen;
                DCOMPUTF16._IOwnership _12143_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12144_recIdents;
                RAST._IExpr _out6320;
                DCOMPUTF16._IOwnership _out6321;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6322;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6320, out _out6321, out _out6322);
                _12142_recursiveGen = _out6320;
                _12143_recOwned = _out6321;
                _12144_recIdents = _out6322;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12142_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12140_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12141_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6323;
                DCOMPUTF16._IOwnership _out6324;
                DCOMPUTF16.COMP.FromOwnership(r, _12143_recOwned, expectedOwnership, out _out6323, out _out6324);
                r = _out6323;
                resultingOwnership = _out6324;
                readIdents = _12144_recIdents;
              }
            } else if (_source652.is_Arrow) {
              Dafny.ISequence<DAST._IType> _12145___mcc_h1050 = _source652.dtor_args;
              DAST._IType _12146___mcc_h1051 = _source652.dtor_result;
              {
                RAST._IType _12147_fromTpeGen;
                RAST._IType _out6325;
                _out6325 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12147_fromTpeGen = _out6325;
                RAST._IType _12148_toTpeGen;
                RAST._IType _out6326;
                _out6326 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12148_toTpeGen = _out6326;
                RAST._IExpr _12149_recursiveGen;
                DCOMPUTF16._IOwnership _12150_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12151_recIdents;
                RAST._IExpr _out6327;
                DCOMPUTF16._IOwnership _out6328;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6329;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6327, out _out6328, out _out6329);
                _12149_recursiveGen = _out6327;
                _12150_recOwned = _out6328;
                _12151_recIdents = _out6329;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12149_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12147_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12148_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6330;
                DCOMPUTF16._IOwnership _out6331;
                DCOMPUTF16.COMP.FromOwnership(r, _12150_recOwned, expectedOwnership, out _out6330, out _out6331);
                r = _out6330;
                resultingOwnership = _out6331;
                readIdents = _12151_recIdents;
              }
            } else if (_source652.is_Primitive) {
              DAST._IPrimitive _12152___mcc_h1054 = _source652.dtor_Primitive_a0;
              DAST._IPrimitive _source657 = _12152___mcc_h1054;
              if (_source657.is_Int) {
                {
                  RAST._IExpr _12153_recursiveGen;
                  DCOMPUTF16._IOwnership _12154___v98;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12155_recIdents;
                  RAST._IExpr _out6332;
                  DCOMPUTF16._IOwnership _out6333;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6334;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6332, out _out6333, out _out6334);
                  _12153_recursiveGen = _out6332;
                  _12154___v98 = _out6333;
                  _12155_recIdents = _out6334;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_12153_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out6335;
                  DCOMPUTF16._IOwnership _out6336;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6335, out _out6336);
                  r = _out6335;
                  resultingOwnership = _out6336;
                  readIdents = _12155_recIdents;
                }
              } else if (_source657.is_Real) {
                {
                  RAST._IType _12156_fromTpeGen;
                  RAST._IType _out6337;
                  _out6337 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12156_fromTpeGen = _out6337;
                  RAST._IType _12157_toTpeGen;
                  RAST._IType _out6338;
                  _out6338 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12157_toTpeGen = _out6338;
                  RAST._IExpr _12158_recursiveGen;
                  DCOMPUTF16._IOwnership _12159_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12160_recIdents;
                  RAST._IExpr _out6339;
                  DCOMPUTF16._IOwnership _out6340;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6341;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6339, out _out6340, out _out6341);
                  _12158_recursiveGen = _out6339;
                  _12159_recOwned = _out6340;
                  _12160_recIdents = _out6341;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12158_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12156_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12157_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6342;
                  DCOMPUTF16._IOwnership _out6343;
                  DCOMPUTF16.COMP.FromOwnership(r, _12159_recOwned, expectedOwnership, out _out6342, out _out6343);
                  r = _out6342;
                  resultingOwnership = _out6343;
                  readIdents = _12160_recIdents;
                }
              } else if (_source657.is_String) {
                {
                  RAST._IType _12161_fromTpeGen;
                  RAST._IType _out6344;
                  _out6344 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12161_fromTpeGen = _out6344;
                  RAST._IType _12162_toTpeGen;
                  RAST._IType _out6345;
                  _out6345 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12162_toTpeGen = _out6345;
                  RAST._IExpr _12163_recursiveGen;
                  DCOMPUTF16._IOwnership _12164_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12165_recIdents;
                  RAST._IExpr _out6346;
                  DCOMPUTF16._IOwnership _out6347;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6348;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6346, out _out6347, out _out6348);
                  _12163_recursiveGen = _out6346;
                  _12164_recOwned = _out6347;
                  _12165_recIdents = _out6348;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12163_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12161_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12162_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6349;
                  DCOMPUTF16._IOwnership _out6350;
                  DCOMPUTF16.COMP.FromOwnership(r, _12164_recOwned, expectedOwnership, out _out6349, out _out6350);
                  r = _out6349;
                  resultingOwnership = _out6350;
                  readIdents = _12165_recIdents;
                }
              } else if (_source657.is_Bool) {
                {
                  RAST._IType _12166_fromTpeGen;
                  RAST._IType _out6351;
                  _out6351 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12166_fromTpeGen = _out6351;
                  RAST._IType _12167_toTpeGen;
                  RAST._IType _out6352;
                  _out6352 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12167_toTpeGen = _out6352;
                  RAST._IExpr _12168_recursiveGen;
                  DCOMPUTF16._IOwnership _12169_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12170_recIdents;
                  RAST._IExpr _out6353;
                  DCOMPUTF16._IOwnership _out6354;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6355;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6353, out _out6354, out _out6355);
                  _12168_recursiveGen = _out6353;
                  _12169_recOwned = _out6354;
                  _12170_recIdents = _out6355;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12168_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12166_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12167_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6356;
                  DCOMPUTF16._IOwnership _out6357;
                  DCOMPUTF16.COMP.FromOwnership(r, _12169_recOwned, expectedOwnership, out _out6356, out _out6357);
                  r = _out6356;
                  resultingOwnership = _out6357;
                  readIdents = _12170_recIdents;
                }
              } else {
                {
                  RAST._IType _12171_fromTpeGen;
                  RAST._IType _out6358;
                  _out6358 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12171_fromTpeGen = _out6358;
                  RAST._IType _12172_toTpeGen;
                  RAST._IType _out6359;
                  _out6359 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12172_toTpeGen = _out6359;
                  RAST._IExpr _12173_recursiveGen;
                  DCOMPUTF16._IOwnership _12174_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12175_recIdents;
                  RAST._IExpr _out6360;
                  DCOMPUTF16._IOwnership _out6361;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6362;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6360, out _out6361, out _out6362);
                  _12173_recursiveGen = _out6360;
                  _12174_recOwned = _out6361;
                  _12175_recIdents = _out6362;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12173_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12171_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12172_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6363;
                  DCOMPUTF16._IOwnership _out6364;
                  DCOMPUTF16.COMP.FromOwnership(r, _12174_recOwned, expectedOwnership, out _out6363, out _out6364);
                  r = _out6363;
                  resultingOwnership = _out6364;
                  readIdents = _12175_recIdents;
                }
              }
            } else if (_source652.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12176___mcc_h1056 = _source652.dtor_Passthrough_a0;
              {
                RAST._IType _12177_fromTpeGen;
                RAST._IType _out6365;
                _out6365 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12177_fromTpeGen = _out6365;
                RAST._IType _12178_toTpeGen;
                RAST._IType _out6366;
                _out6366 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12178_toTpeGen = _out6366;
                RAST._IExpr _12179_recursiveGen;
                DCOMPUTF16._IOwnership _12180_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12181_recIdents;
                RAST._IExpr _out6367;
                DCOMPUTF16._IOwnership _out6368;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6369;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6367, out _out6368, out _out6369);
                _12179_recursiveGen = _out6367;
                _12180_recOwned = _out6368;
                _12181_recIdents = _out6369;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12179_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12177_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12178_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6370;
                DCOMPUTF16._IOwnership _out6371;
                DCOMPUTF16.COMP.FromOwnership(r, _12180_recOwned, expectedOwnership, out _out6370, out _out6371);
                r = _out6370;
                resultingOwnership = _out6371;
                readIdents = _12181_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12182___mcc_h1058 = _source652.dtor_TypeArg_a0;
              {
                RAST._IType _12183_fromTpeGen;
                RAST._IType _out6372;
                _out6372 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12183_fromTpeGen = _out6372;
                RAST._IType _12184_toTpeGen;
                RAST._IType _out6373;
                _out6373 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12184_toTpeGen = _out6373;
                RAST._IExpr _12185_recursiveGen;
                DCOMPUTF16._IOwnership _12186_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12187_recIdents;
                RAST._IExpr _out6374;
                DCOMPUTF16._IOwnership _out6375;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6376;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6374, out _out6375, out _out6376);
                _12185_recursiveGen = _out6374;
                _12186_recOwned = _out6375;
                _12187_recIdents = _out6376;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12185_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12183_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12184_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6377;
                DCOMPUTF16._IOwnership _out6378;
                DCOMPUTF16.COMP.FromOwnership(r, _12186_recOwned, expectedOwnership, out _out6377, out _out6378);
                r = _out6377;
                resultingOwnership = _out6378;
                readIdents = _12187_recIdents;
              }
            }
          } else if (_source645.is_String) {
            DAST._IType _source658 = _9573___mcc_h1;
            if (_source658.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12188___mcc_h1060 = _source658.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _12189___mcc_h1061 = _source658.dtor_typeArgs;
              DAST._IResolvedType _12190___mcc_h1062 = _source658.dtor_resolved;
              DAST._IResolvedType _source659 = _12190___mcc_h1062;
              if (_source659.is_AllocatedDatatype) {
                DAST._IDatatypeType _12191___mcc_h1066 = _source659.dtor_datatypeType;
                {
                  RAST._IType _12192_fromTpeGen;
                  RAST._IType _out6379;
                  _out6379 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12192_fromTpeGen = _out6379;
                  RAST._IType _12193_toTpeGen;
                  RAST._IType _out6380;
                  _out6380 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12193_toTpeGen = _out6380;
                  RAST._IExpr _12194_recursiveGen;
                  DCOMPUTF16._IOwnership _12195_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12196_recIdents;
                  RAST._IExpr _out6381;
                  DCOMPUTF16._IOwnership _out6382;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6383;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6381, out _out6382, out _out6383);
                  _12194_recursiveGen = _out6381;
                  _12195_recOwned = _out6382;
                  _12196_recIdents = _out6383;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12194_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12192_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12193_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6384;
                  DCOMPUTF16._IOwnership _out6385;
                  DCOMPUTF16.COMP.FromOwnership(r, _12195_recOwned, expectedOwnership, out _out6384, out _out6385);
                  r = _out6384;
                  resultingOwnership = _out6385;
                  readIdents = _12196_recIdents;
                }
              } else if (_source659.is_Datatype) {
                DAST._IDatatypeType _12197___mcc_h1068 = _source659.dtor_datatypeType;
                {
                  RAST._IType _12198_fromTpeGen;
                  RAST._IType _out6386;
                  _out6386 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12198_fromTpeGen = _out6386;
                  RAST._IType _12199_toTpeGen;
                  RAST._IType _out6387;
                  _out6387 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12199_toTpeGen = _out6387;
                  RAST._IExpr _12200_recursiveGen;
                  DCOMPUTF16._IOwnership _12201_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12202_recIdents;
                  RAST._IExpr _out6388;
                  DCOMPUTF16._IOwnership _out6389;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6390;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6388, out _out6389, out _out6390);
                  _12200_recursiveGen = _out6388;
                  _12201_recOwned = _out6389;
                  _12202_recIdents = _out6390;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12200_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12198_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12199_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6391;
                  DCOMPUTF16._IOwnership _out6392;
                  DCOMPUTF16.COMP.FromOwnership(r, _12201_recOwned, expectedOwnership, out _out6391, out _out6392);
                  r = _out6391;
                  resultingOwnership = _out6392;
                  readIdents = _12202_recIdents;
                }
              } else if (_source659.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12203___mcc_h1070 = _source659.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _12204___mcc_h1071 = _source659.dtor_attributes;
                {
                  RAST._IType _12205_fromTpeGen;
                  RAST._IType _out6393;
                  _out6393 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12205_fromTpeGen = _out6393;
                  RAST._IType _12206_toTpeGen;
                  RAST._IType _out6394;
                  _out6394 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12206_toTpeGen = _out6394;
                  RAST._IExpr _12207_recursiveGen;
                  DCOMPUTF16._IOwnership _12208_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12209_recIdents;
                  RAST._IExpr _out6395;
                  DCOMPUTF16._IOwnership _out6396;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6397;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6395, out _out6396, out _out6397);
                  _12207_recursiveGen = _out6395;
                  _12208_recOwned = _out6396;
                  _12209_recIdents = _out6397;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12207_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12205_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12206_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6398;
                  DCOMPUTF16._IOwnership _out6399;
                  DCOMPUTF16.COMP.FromOwnership(r, _12208_recOwned, expectedOwnership, out _out6398, out _out6399);
                  r = _out6398;
                  resultingOwnership = _out6399;
                  readIdents = _12209_recIdents;
                }
              } else {
                DAST._IType _12210___mcc_h1074 = _source659.dtor_baseType;
                DAST._INewtypeRange _12211___mcc_h1075 = _source659.dtor_range;
                bool _12212___mcc_h1076 = _source659.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _12213___mcc_h1077 = _source659.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _12214_attributes = _12213___mcc_h1077;
                bool _12215_erase = _12212___mcc_h1076;
                DAST._INewtypeRange _12216_range = _12211___mcc_h1075;
                DAST._IType _12217_b = _12210___mcc_h1074;
                {
                  Std.Wrappers._IOption<RAST._IType> _12218_nativeToType;
                  _12218_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12217_b, _12216_range);
                  if (object.Equals(_9567_fromTpe, _12217_b)) {
                    RAST._IExpr _12219_recursiveGen;
                    DCOMPUTF16._IOwnership _12220_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12221_recIdents;
                    RAST._IExpr _out6400;
                    DCOMPUTF16._IOwnership _out6401;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6402;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6400, out _out6401, out _out6402);
                    _12219_recursiveGen = _out6400;
                    _12220_recOwned = _out6401;
                    _12221_recIdents = _out6402;
                    readIdents = _12221_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source660 = _12218_nativeToType;
                    if (_source660.is_None) {
                      if (_12215_erase) {
                        r = _12219_recursiveGen;
                      } else {
                        RAST._IType _12222_rhsType;
                        RAST._IType _out6403;
                        _out6403 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                        _12222_rhsType = _out6403;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12222_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12219_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6404;
                      DCOMPUTF16._IOwnership _out6405;
                      DCOMPUTF16.COMP.FromOwnership(r, _12220_recOwned, expectedOwnership, out _out6404, out _out6405);
                      r = _out6404;
                      resultingOwnership = _out6405;
                    } else {
                      RAST._IType _12223___mcc_h2218 = _source660.dtor_value;
                      RAST._IType _12224_v = _12223___mcc_h2218;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12219_recursiveGen, RAST.Expr.create_ExprFromType(_12224_v)));
                      RAST._IExpr _out6406;
                      DCOMPUTF16._IOwnership _out6407;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6406, out _out6407);
                      r = _out6406;
                      resultingOwnership = _out6407;
                    }
                  } else {
                    if ((_12218_nativeToType).is_Some) {
                      DAST._IType _source661 = _9567_fromTpe;
                      if (_source661.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12225___mcc_h2219 = _source661.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _12226___mcc_h2220 = _source661.dtor_typeArgs;
                        DAST._IResolvedType _12227___mcc_h2221 = _source661.dtor_resolved;
                        DAST._IResolvedType _source662 = _12227___mcc_h2221;
                        if (_source662.is_AllocatedDatatype) {
                          DAST._IDatatypeType _12228___mcc_h2225 = _source662.dtor_datatypeType;
                        } else if (_source662.is_Datatype) {
                          DAST._IDatatypeType _12229___mcc_h2227 = _source662.dtor_datatypeType;
                        } else if (_source662.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12230___mcc_h2229 = _source662.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _12231___mcc_h2230 = _source662.dtor_attributes;
                        } else {
                          DAST._IType _12232___mcc_h2233 = _source662.dtor_baseType;
                          DAST._INewtypeRange _12233___mcc_h2234 = _source662.dtor_range;
                          bool _12234___mcc_h2235 = _source662.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _12235___mcc_h2236 = _source662.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _12236_attributes0 = _12235___mcc_h2236;
                          bool _12237_erase0 = _12234___mcc_h2235;
                          DAST._INewtypeRange _12238_range0 = _12233___mcc_h2234;
                          DAST._IType _12239_b0 = _12232___mcc_h2233;
                          {
                            Std.Wrappers._IOption<RAST._IType> _12240_nativeFromType;
                            _12240_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12239_b0, _12238_range0);
                            if ((_12240_nativeFromType).is_Some) {
                              RAST._IExpr _12241_recursiveGen;
                              DCOMPUTF16._IOwnership _12242_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12243_recIdents;
                              RAST._IExpr _out6408;
                              DCOMPUTF16._IOwnership _out6409;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6410;
                              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6408, out _out6409, out _out6410);
                              _12241_recursiveGen = _out6408;
                              _12242_recOwned = _out6409;
                              _12243_recIdents = _out6410;
                              RAST._IExpr _out6411;
                              DCOMPUTF16._IOwnership _out6412;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12241_recursiveGen, (_12218_nativeToType).dtor_value), _12242_recOwned, expectedOwnership, out _out6411, out _out6412);
                              r = _out6411;
                              resultingOwnership = _out6412;
                              readIdents = _12243_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source661.is_Nullable) {
                        DAST._IType _12244___mcc_h2241 = _source661.dtor_Nullable_a0;
                      } else if (_source661.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _12245___mcc_h2243 = _source661.dtor_Tuple_a0;
                      } else if (_source661.is_Array) {
                        DAST._IType _12246___mcc_h2245 = _source661.dtor_element;
                        BigInteger _12247___mcc_h2246 = _source661.dtor_dims;
                      } else if (_source661.is_Seq) {
                        DAST._IType _12248___mcc_h2249 = _source661.dtor_element;
                      } else if (_source661.is_Set) {
                        DAST._IType _12249___mcc_h2251 = _source661.dtor_element;
                      } else if (_source661.is_Multiset) {
                        DAST._IType _12250___mcc_h2253 = _source661.dtor_element;
                      } else if (_source661.is_Map) {
                        DAST._IType _12251___mcc_h2255 = _source661.dtor_key;
                        DAST._IType _12252___mcc_h2256 = _source661.dtor_value;
                      } else if (_source661.is_SetBuilder) {
                        DAST._IType _12253___mcc_h2259 = _source661.dtor_element;
                      } else if (_source661.is_MapBuilder) {
                        DAST._IType _12254___mcc_h2261 = _source661.dtor_key;
                        DAST._IType _12255___mcc_h2262 = _source661.dtor_value;
                      } else if (_source661.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _12256___mcc_h2265 = _source661.dtor_args;
                        DAST._IType _12257___mcc_h2266 = _source661.dtor_result;
                      } else if (_source661.is_Primitive) {
                        DAST._IPrimitive _12258___mcc_h2269 = _source661.dtor_Primitive_a0;
                      } else if (_source661.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _12259___mcc_h2271 = _source661.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _12260___mcc_h2273 = _source661.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _12261_recursiveGen;
                        DCOMPUTF16._IOwnership _12262_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12263_recIdents;
                        RAST._IExpr _out6413;
                        DCOMPUTF16._IOwnership _out6414;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6415;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6413, out _out6414, out _out6415);
                        _12261_recursiveGen = _out6413;
                        _12262_recOwned = _out6414;
                        _12263_recIdents = _out6415;
                        RAST._IExpr _out6416;
                        DCOMPUTF16._IOwnership _out6417;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12261_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12218_nativeToType).dtor_value), _12262_recOwned, expectedOwnership, out _out6416, out _out6417);
                        r = _out6416;
                        resultingOwnership = _out6417;
                        readIdents = _12263_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6418;
                    DCOMPUTF16._IOwnership _out6419;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6420;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _12217_b), _12217_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out6418, out _out6419, out _out6420);
                    r = _out6418;
                    resultingOwnership = _out6419;
                    readIdents = _out6420;
                  }
                }
              }
            } else if (_source658.is_Nullable) {
              DAST._IType _12264___mcc_h1082 = _source658.dtor_Nullable_a0;
              {
                RAST._IExpr _12265_recursiveGen;
                DCOMPUTF16._IOwnership _12266_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12267_recIdents;
                RAST._IExpr _out6421;
                DCOMPUTF16._IOwnership _out6422;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6423;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6421, out _out6422, out _out6423);
                _12265_recursiveGen = _out6421;
                _12266_recOwned = _out6422;
                _12267_recIdents = _out6423;
                r = _12265_recursiveGen;
                if (object.Equals(_12266_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6424;
                DCOMPUTF16._IOwnership _out6425;
                DCOMPUTF16.COMP.FromOwnership(r, _12266_recOwned, expectedOwnership, out _out6424, out _out6425);
                r = _out6424;
                resultingOwnership = _out6425;
                readIdents = _12267_recIdents;
              }
            } else if (_source658.is_Tuple) {
              Dafny.ISequence<DAST._IType> _12268___mcc_h1084 = _source658.dtor_Tuple_a0;
              {
                RAST._IType _12269_fromTpeGen;
                RAST._IType _out6426;
                _out6426 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12269_fromTpeGen = _out6426;
                RAST._IType _12270_toTpeGen;
                RAST._IType _out6427;
                _out6427 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12270_toTpeGen = _out6427;
                RAST._IExpr _12271_recursiveGen;
                DCOMPUTF16._IOwnership _12272_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12273_recIdents;
                RAST._IExpr _out6428;
                DCOMPUTF16._IOwnership _out6429;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6430;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6428, out _out6429, out _out6430);
                _12271_recursiveGen = _out6428;
                _12272_recOwned = _out6429;
                _12273_recIdents = _out6430;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12271_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12269_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12270_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6431;
                DCOMPUTF16._IOwnership _out6432;
                DCOMPUTF16.COMP.FromOwnership(r, _12272_recOwned, expectedOwnership, out _out6431, out _out6432);
                r = _out6431;
                resultingOwnership = _out6432;
                readIdents = _12273_recIdents;
              }
            } else if (_source658.is_Array) {
              DAST._IType _12274___mcc_h1086 = _source658.dtor_element;
              BigInteger _12275___mcc_h1087 = _source658.dtor_dims;
              {
                RAST._IType _12276_fromTpeGen;
                RAST._IType _out6433;
                _out6433 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12276_fromTpeGen = _out6433;
                RAST._IType _12277_toTpeGen;
                RAST._IType _out6434;
                _out6434 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12277_toTpeGen = _out6434;
                RAST._IExpr _12278_recursiveGen;
                DCOMPUTF16._IOwnership _12279_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12280_recIdents;
                RAST._IExpr _out6435;
                DCOMPUTF16._IOwnership _out6436;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6437;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6435, out _out6436, out _out6437);
                _12278_recursiveGen = _out6435;
                _12279_recOwned = _out6436;
                _12280_recIdents = _out6437;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12278_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12276_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12277_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6438;
                DCOMPUTF16._IOwnership _out6439;
                DCOMPUTF16.COMP.FromOwnership(r, _12279_recOwned, expectedOwnership, out _out6438, out _out6439);
                r = _out6438;
                resultingOwnership = _out6439;
                readIdents = _12280_recIdents;
              }
            } else if (_source658.is_Seq) {
              DAST._IType _12281___mcc_h1090 = _source658.dtor_element;
              {
                RAST._IType _12282_fromTpeGen;
                RAST._IType _out6440;
                _out6440 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12282_fromTpeGen = _out6440;
                RAST._IType _12283_toTpeGen;
                RAST._IType _out6441;
                _out6441 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12283_toTpeGen = _out6441;
                RAST._IExpr _12284_recursiveGen;
                DCOMPUTF16._IOwnership _12285_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12286_recIdents;
                RAST._IExpr _out6442;
                DCOMPUTF16._IOwnership _out6443;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6444;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6442, out _out6443, out _out6444);
                _12284_recursiveGen = _out6442;
                _12285_recOwned = _out6443;
                _12286_recIdents = _out6444;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12284_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12282_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12283_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6445;
                DCOMPUTF16._IOwnership _out6446;
                DCOMPUTF16.COMP.FromOwnership(r, _12285_recOwned, expectedOwnership, out _out6445, out _out6446);
                r = _out6445;
                resultingOwnership = _out6446;
                readIdents = _12286_recIdents;
              }
            } else if (_source658.is_Set) {
              DAST._IType _12287___mcc_h1092 = _source658.dtor_element;
              {
                RAST._IType _12288_fromTpeGen;
                RAST._IType _out6447;
                _out6447 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12288_fromTpeGen = _out6447;
                RAST._IType _12289_toTpeGen;
                RAST._IType _out6448;
                _out6448 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12289_toTpeGen = _out6448;
                RAST._IExpr _12290_recursiveGen;
                DCOMPUTF16._IOwnership _12291_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12292_recIdents;
                RAST._IExpr _out6449;
                DCOMPUTF16._IOwnership _out6450;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6451;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6449, out _out6450, out _out6451);
                _12290_recursiveGen = _out6449;
                _12291_recOwned = _out6450;
                _12292_recIdents = _out6451;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12290_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12288_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12289_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6452;
                DCOMPUTF16._IOwnership _out6453;
                DCOMPUTF16.COMP.FromOwnership(r, _12291_recOwned, expectedOwnership, out _out6452, out _out6453);
                r = _out6452;
                resultingOwnership = _out6453;
                readIdents = _12292_recIdents;
              }
            } else if (_source658.is_Multiset) {
              DAST._IType _12293___mcc_h1094 = _source658.dtor_element;
              {
                RAST._IType _12294_fromTpeGen;
                RAST._IType _out6454;
                _out6454 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12294_fromTpeGen = _out6454;
                RAST._IType _12295_toTpeGen;
                RAST._IType _out6455;
                _out6455 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12295_toTpeGen = _out6455;
                RAST._IExpr _12296_recursiveGen;
                DCOMPUTF16._IOwnership _12297_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12298_recIdents;
                RAST._IExpr _out6456;
                DCOMPUTF16._IOwnership _out6457;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6458;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6456, out _out6457, out _out6458);
                _12296_recursiveGen = _out6456;
                _12297_recOwned = _out6457;
                _12298_recIdents = _out6458;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12296_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12294_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12295_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6459;
                DCOMPUTF16._IOwnership _out6460;
                DCOMPUTF16.COMP.FromOwnership(r, _12297_recOwned, expectedOwnership, out _out6459, out _out6460);
                r = _out6459;
                resultingOwnership = _out6460;
                readIdents = _12298_recIdents;
              }
            } else if (_source658.is_Map) {
              DAST._IType _12299___mcc_h1096 = _source658.dtor_key;
              DAST._IType _12300___mcc_h1097 = _source658.dtor_value;
              {
                RAST._IType _12301_fromTpeGen;
                RAST._IType _out6461;
                _out6461 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12301_fromTpeGen = _out6461;
                RAST._IType _12302_toTpeGen;
                RAST._IType _out6462;
                _out6462 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12302_toTpeGen = _out6462;
                RAST._IExpr _12303_recursiveGen;
                DCOMPUTF16._IOwnership _12304_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12305_recIdents;
                RAST._IExpr _out6463;
                DCOMPUTF16._IOwnership _out6464;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6465;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6463, out _out6464, out _out6465);
                _12303_recursiveGen = _out6463;
                _12304_recOwned = _out6464;
                _12305_recIdents = _out6465;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12303_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12301_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12302_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6466;
                DCOMPUTF16._IOwnership _out6467;
                DCOMPUTF16.COMP.FromOwnership(r, _12304_recOwned, expectedOwnership, out _out6466, out _out6467);
                r = _out6466;
                resultingOwnership = _out6467;
                readIdents = _12305_recIdents;
              }
            } else if (_source658.is_SetBuilder) {
              DAST._IType _12306___mcc_h1100 = _source658.dtor_element;
              {
                RAST._IType _12307_fromTpeGen;
                RAST._IType _out6468;
                _out6468 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12307_fromTpeGen = _out6468;
                RAST._IType _12308_toTpeGen;
                RAST._IType _out6469;
                _out6469 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12308_toTpeGen = _out6469;
                RAST._IExpr _12309_recursiveGen;
                DCOMPUTF16._IOwnership _12310_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12311_recIdents;
                RAST._IExpr _out6470;
                DCOMPUTF16._IOwnership _out6471;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6472;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6470, out _out6471, out _out6472);
                _12309_recursiveGen = _out6470;
                _12310_recOwned = _out6471;
                _12311_recIdents = _out6472;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12309_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12307_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12308_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6473;
                DCOMPUTF16._IOwnership _out6474;
                DCOMPUTF16.COMP.FromOwnership(r, _12310_recOwned, expectedOwnership, out _out6473, out _out6474);
                r = _out6473;
                resultingOwnership = _out6474;
                readIdents = _12311_recIdents;
              }
            } else if (_source658.is_MapBuilder) {
              DAST._IType _12312___mcc_h1102 = _source658.dtor_key;
              DAST._IType _12313___mcc_h1103 = _source658.dtor_value;
              {
                RAST._IType _12314_fromTpeGen;
                RAST._IType _out6475;
                _out6475 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12314_fromTpeGen = _out6475;
                RAST._IType _12315_toTpeGen;
                RAST._IType _out6476;
                _out6476 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12315_toTpeGen = _out6476;
                RAST._IExpr _12316_recursiveGen;
                DCOMPUTF16._IOwnership _12317_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12318_recIdents;
                RAST._IExpr _out6477;
                DCOMPUTF16._IOwnership _out6478;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6479;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6477, out _out6478, out _out6479);
                _12316_recursiveGen = _out6477;
                _12317_recOwned = _out6478;
                _12318_recIdents = _out6479;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12316_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12314_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12315_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6480;
                DCOMPUTF16._IOwnership _out6481;
                DCOMPUTF16.COMP.FromOwnership(r, _12317_recOwned, expectedOwnership, out _out6480, out _out6481);
                r = _out6480;
                resultingOwnership = _out6481;
                readIdents = _12318_recIdents;
              }
            } else if (_source658.is_Arrow) {
              Dafny.ISequence<DAST._IType> _12319___mcc_h1106 = _source658.dtor_args;
              DAST._IType _12320___mcc_h1107 = _source658.dtor_result;
              {
                RAST._IType _12321_fromTpeGen;
                RAST._IType _out6482;
                _out6482 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12321_fromTpeGen = _out6482;
                RAST._IType _12322_toTpeGen;
                RAST._IType _out6483;
                _out6483 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12322_toTpeGen = _out6483;
                RAST._IExpr _12323_recursiveGen;
                DCOMPUTF16._IOwnership _12324_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12325_recIdents;
                RAST._IExpr _out6484;
                DCOMPUTF16._IOwnership _out6485;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6486;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6484, out _out6485, out _out6486);
                _12323_recursiveGen = _out6484;
                _12324_recOwned = _out6485;
                _12325_recIdents = _out6486;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12323_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12321_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12322_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6487;
                DCOMPUTF16._IOwnership _out6488;
                DCOMPUTF16.COMP.FromOwnership(r, _12324_recOwned, expectedOwnership, out _out6487, out _out6488);
                r = _out6487;
                resultingOwnership = _out6488;
                readIdents = _12325_recIdents;
              }
            } else if (_source658.is_Primitive) {
              DAST._IPrimitive _12326___mcc_h1110 = _source658.dtor_Primitive_a0;
              {
                RAST._IType _12327_fromTpeGen;
                RAST._IType _out6489;
                _out6489 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12327_fromTpeGen = _out6489;
                RAST._IType _12328_toTpeGen;
                RAST._IType _out6490;
                _out6490 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12328_toTpeGen = _out6490;
                RAST._IExpr _12329_recursiveGen;
                DCOMPUTF16._IOwnership _12330_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12331_recIdents;
                RAST._IExpr _out6491;
                DCOMPUTF16._IOwnership _out6492;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6493;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6491, out _out6492, out _out6493);
                _12329_recursiveGen = _out6491;
                _12330_recOwned = _out6492;
                _12331_recIdents = _out6493;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12329_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12327_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12328_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6494;
                DCOMPUTF16._IOwnership _out6495;
                DCOMPUTF16.COMP.FromOwnership(r, _12330_recOwned, expectedOwnership, out _out6494, out _out6495);
                r = _out6494;
                resultingOwnership = _out6495;
                readIdents = _12331_recIdents;
              }
            } else if (_source658.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12332___mcc_h1112 = _source658.dtor_Passthrough_a0;
              {
                RAST._IType _12333_fromTpeGen;
                RAST._IType _out6496;
                _out6496 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12333_fromTpeGen = _out6496;
                RAST._IType _12334_toTpeGen;
                RAST._IType _out6497;
                _out6497 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12334_toTpeGen = _out6497;
                RAST._IExpr _12335_recursiveGen;
                DCOMPUTF16._IOwnership _12336_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12337_recIdents;
                RAST._IExpr _out6498;
                DCOMPUTF16._IOwnership _out6499;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6500;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6498, out _out6499, out _out6500);
                _12335_recursiveGen = _out6498;
                _12336_recOwned = _out6499;
                _12337_recIdents = _out6500;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12335_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12333_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12334_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6501;
                DCOMPUTF16._IOwnership _out6502;
                DCOMPUTF16.COMP.FromOwnership(r, _12336_recOwned, expectedOwnership, out _out6501, out _out6502);
                r = _out6501;
                resultingOwnership = _out6502;
                readIdents = _12337_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12338___mcc_h1114 = _source658.dtor_TypeArg_a0;
              {
                RAST._IType _12339_fromTpeGen;
                RAST._IType _out6503;
                _out6503 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12339_fromTpeGen = _out6503;
                RAST._IType _12340_toTpeGen;
                RAST._IType _out6504;
                _out6504 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12340_toTpeGen = _out6504;
                RAST._IExpr _12341_recursiveGen;
                DCOMPUTF16._IOwnership _12342_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12343_recIdents;
                RAST._IExpr _out6505;
                DCOMPUTF16._IOwnership _out6506;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6507;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6505, out _out6506, out _out6507);
                _12341_recursiveGen = _out6505;
                _12342_recOwned = _out6506;
                _12343_recIdents = _out6507;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12341_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12339_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12340_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6508;
                DCOMPUTF16._IOwnership _out6509;
                DCOMPUTF16.COMP.FromOwnership(r, _12342_recOwned, expectedOwnership, out _out6508, out _out6509);
                r = _out6508;
                resultingOwnership = _out6509;
                readIdents = _12343_recIdents;
              }
            }
          } else if (_source645.is_Bool) {
            DAST._IType _source663 = _9573___mcc_h1;
            if (_source663.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12344___mcc_h1116 = _source663.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _12345___mcc_h1117 = _source663.dtor_typeArgs;
              DAST._IResolvedType _12346___mcc_h1118 = _source663.dtor_resolved;
              DAST._IResolvedType _source664 = _12346___mcc_h1118;
              if (_source664.is_AllocatedDatatype) {
                DAST._IDatatypeType _12347___mcc_h1122 = _source664.dtor_datatypeType;
                {
                  RAST._IType _12348_fromTpeGen;
                  RAST._IType _out6510;
                  _out6510 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12348_fromTpeGen = _out6510;
                  RAST._IType _12349_toTpeGen;
                  RAST._IType _out6511;
                  _out6511 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12349_toTpeGen = _out6511;
                  RAST._IExpr _12350_recursiveGen;
                  DCOMPUTF16._IOwnership _12351_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12352_recIdents;
                  RAST._IExpr _out6512;
                  DCOMPUTF16._IOwnership _out6513;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6514;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6512, out _out6513, out _out6514);
                  _12350_recursiveGen = _out6512;
                  _12351_recOwned = _out6513;
                  _12352_recIdents = _out6514;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12350_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12348_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12349_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6515;
                  DCOMPUTF16._IOwnership _out6516;
                  DCOMPUTF16.COMP.FromOwnership(r, _12351_recOwned, expectedOwnership, out _out6515, out _out6516);
                  r = _out6515;
                  resultingOwnership = _out6516;
                  readIdents = _12352_recIdents;
                }
              } else if (_source664.is_Datatype) {
                DAST._IDatatypeType _12353___mcc_h1124 = _source664.dtor_datatypeType;
                {
                  RAST._IType _12354_fromTpeGen;
                  RAST._IType _out6517;
                  _out6517 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12354_fromTpeGen = _out6517;
                  RAST._IType _12355_toTpeGen;
                  RAST._IType _out6518;
                  _out6518 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12355_toTpeGen = _out6518;
                  RAST._IExpr _12356_recursiveGen;
                  DCOMPUTF16._IOwnership _12357_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12358_recIdents;
                  RAST._IExpr _out6519;
                  DCOMPUTF16._IOwnership _out6520;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6521;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6519, out _out6520, out _out6521);
                  _12356_recursiveGen = _out6519;
                  _12357_recOwned = _out6520;
                  _12358_recIdents = _out6521;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12356_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12354_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12355_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6522;
                  DCOMPUTF16._IOwnership _out6523;
                  DCOMPUTF16.COMP.FromOwnership(r, _12357_recOwned, expectedOwnership, out _out6522, out _out6523);
                  r = _out6522;
                  resultingOwnership = _out6523;
                  readIdents = _12358_recIdents;
                }
              } else if (_source664.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12359___mcc_h1126 = _source664.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _12360___mcc_h1127 = _source664.dtor_attributes;
                {
                  RAST._IType _12361_fromTpeGen;
                  RAST._IType _out6524;
                  _out6524 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12361_fromTpeGen = _out6524;
                  RAST._IType _12362_toTpeGen;
                  RAST._IType _out6525;
                  _out6525 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12362_toTpeGen = _out6525;
                  RAST._IExpr _12363_recursiveGen;
                  DCOMPUTF16._IOwnership _12364_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12365_recIdents;
                  RAST._IExpr _out6526;
                  DCOMPUTF16._IOwnership _out6527;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6528;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6526, out _out6527, out _out6528);
                  _12363_recursiveGen = _out6526;
                  _12364_recOwned = _out6527;
                  _12365_recIdents = _out6528;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12363_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12361_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12362_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6529;
                  DCOMPUTF16._IOwnership _out6530;
                  DCOMPUTF16.COMP.FromOwnership(r, _12364_recOwned, expectedOwnership, out _out6529, out _out6530);
                  r = _out6529;
                  resultingOwnership = _out6530;
                  readIdents = _12365_recIdents;
                }
              } else {
                DAST._IType _12366___mcc_h1130 = _source664.dtor_baseType;
                DAST._INewtypeRange _12367___mcc_h1131 = _source664.dtor_range;
                bool _12368___mcc_h1132 = _source664.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _12369___mcc_h1133 = _source664.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _12370_attributes = _12369___mcc_h1133;
                bool _12371_erase = _12368___mcc_h1132;
                DAST._INewtypeRange _12372_range = _12367___mcc_h1131;
                DAST._IType _12373_b = _12366___mcc_h1130;
                {
                  Std.Wrappers._IOption<RAST._IType> _12374_nativeToType;
                  _12374_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12373_b, _12372_range);
                  if (object.Equals(_9567_fromTpe, _12373_b)) {
                    RAST._IExpr _12375_recursiveGen;
                    DCOMPUTF16._IOwnership _12376_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12377_recIdents;
                    RAST._IExpr _out6531;
                    DCOMPUTF16._IOwnership _out6532;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6533;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6531, out _out6532, out _out6533);
                    _12375_recursiveGen = _out6531;
                    _12376_recOwned = _out6532;
                    _12377_recIdents = _out6533;
                    readIdents = _12377_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source665 = _12374_nativeToType;
                    if (_source665.is_None) {
                      if (_12371_erase) {
                        r = _12375_recursiveGen;
                      } else {
                        RAST._IType _12378_rhsType;
                        RAST._IType _out6534;
                        _out6534 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                        _12378_rhsType = _out6534;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12378_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12375_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6535;
                      DCOMPUTF16._IOwnership _out6536;
                      DCOMPUTF16.COMP.FromOwnership(r, _12376_recOwned, expectedOwnership, out _out6535, out _out6536);
                      r = _out6535;
                      resultingOwnership = _out6536;
                    } else {
                      RAST._IType _12379___mcc_h2275 = _source665.dtor_value;
                      RAST._IType _12380_v = _12379___mcc_h2275;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12375_recursiveGen, RAST.Expr.create_ExprFromType(_12380_v)));
                      RAST._IExpr _out6537;
                      DCOMPUTF16._IOwnership _out6538;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6537, out _out6538);
                      r = _out6537;
                      resultingOwnership = _out6538;
                    }
                  } else {
                    if ((_12374_nativeToType).is_Some) {
                      DAST._IType _source666 = _9567_fromTpe;
                      if (_source666.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12381___mcc_h2276 = _source666.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _12382___mcc_h2277 = _source666.dtor_typeArgs;
                        DAST._IResolvedType _12383___mcc_h2278 = _source666.dtor_resolved;
                        DAST._IResolvedType _source667 = _12383___mcc_h2278;
                        if (_source667.is_AllocatedDatatype) {
                          DAST._IDatatypeType _12384___mcc_h2282 = _source667.dtor_datatypeType;
                        } else if (_source667.is_Datatype) {
                          DAST._IDatatypeType _12385___mcc_h2284 = _source667.dtor_datatypeType;
                        } else if (_source667.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12386___mcc_h2286 = _source667.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _12387___mcc_h2287 = _source667.dtor_attributes;
                        } else {
                          DAST._IType _12388___mcc_h2290 = _source667.dtor_baseType;
                          DAST._INewtypeRange _12389___mcc_h2291 = _source667.dtor_range;
                          bool _12390___mcc_h2292 = _source667.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _12391___mcc_h2293 = _source667.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _12392_attributes0 = _12391___mcc_h2293;
                          bool _12393_erase0 = _12390___mcc_h2292;
                          DAST._INewtypeRange _12394_range0 = _12389___mcc_h2291;
                          DAST._IType _12395_b0 = _12388___mcc_h2290;
                          {
                            Std.Wrappers._IOption<RAST._IType> _12396_nativeFromType;
                            _12396_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12395_b0, _12394_range0);
                            if ((_12396_nativeFromType).is_Some) {
                              RAST._IExpr _12397_recursiveGen;
                              DCOMPUTF16._IOwnership _12398_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12399_recIdents;
                              RAST._IExpr _out6539;
                              DCOMPUTF16._IOwnership _out6540;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6541;
                              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6539, out _out6540, out _out6541);
                              _12397_recursiveGen = _out6539;
                              _12398_recOwned = _out6540;
                              _12399_recIdents = _out6541;
                              RAST._IExpr _out6542;
                              DCOMPUTF16._IOwnership _out6543;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12397_recursiveGen, (_12374_nativeToType).dtor_value), _12398_recOwned, expectedOwnership, out _out6542, out _out6543);
                              r = _out6542;
                              resultingOwnership = _out6543;
                              readIdents = _12399_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source666.is_Nullable) {
                        DAST._IType _12400___mcc_h2298 = _source666.dtor_Nullable_a0;
                      } else if (_source666.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _12401___mcc_h2300 = _source666.dtor_Tuple_a0;
                      } else if (_source666.is_Array) {
                        DAST._IType _12402___mcc_h2302 = _source666.dtor_element;
                        BigInteger _12403___mcc_h2303 = _source666.dtor_dims;
                      } else if (_source666.is_Seq) {
                        DAST._IType _12404___mcc_h2306 = _source666.dtor_element;
                      } else if (_source666.is_Set) {
                        DAST._IType _12405___mcc_h2308 = _source666.dtor_element;
                      } else if (_source666.is_Multiset) {
                        DAST._IType _12406___mcc_h2310 = _source666.dtor_element;
                      } else if (_source666.is_Map) {
                        DAST._IType _12407___mcc_h2312 = _source666.dtor_key;
                        DAST._IType _12408___mcc_h2313 = _source666.dtor_value;
                      } else if (_source666.is_SetBuilder) {
                        DAST._IType _12409___mcc_h2316 = _source666.dtor_element;
                      } else if (_source666.is_MapBuilder) {
                        DAST._IType _12410___mcc_h2318 = _source666.dtor_key;
                        DAST._IType _12411___mcc_h2319 = _source666.dtor_value;
                      } else if (_source666.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _12412___mcc_h2322 = _source666.dtor_args;
                        DAST._IType _12413___mcc_h2323 = _source666.dtor_result;
                      } else if (_source666.is_Primitive) {
                        DAST._IPrimitive _12414___mcc_h2326 = _source666.dtor_Primitive_a0;
                      } else if (_source666.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _12415___mcc_h2328 = _source666.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _12416___mcc_h2330 = _source666.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _12417_recursiveGen;
                        DCOMPUTF16._IOwnership _12418_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12419_recIdents;
                        RAST._IExpr _out6544;
                        DCOMPUTF16._IOwnership _out6545;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6546;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6544, out _out6545, out _out6546);
                        _12417_recursiveGen = _out6544;
                        _12418_recOwned = _out6545;
                        _12419_recIdents = _out6546;
                        RAST._IExpr _out6547;
                        DCOMPUTF16._IOwnership _out6548;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12417_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12374_nativeToType).dtor_value), _12418_recOwned, expectedOwnership, out _out6547, out _out6548);
                        r = _out6547;
                        resultingOwnership = _out6548;
                        readIdents = _12419_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6549;
                    DCOMPUTF16._IOwnership _out6550;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6551;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _12373_b), _12373_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out6549, out _out6550, out _out6551);
                    r = _out6549;
                    resultingOwnership = _out6550;
                    readIdents = _out6551;
                  }
                }
              }
            } else if (_source663.is_Nullable) {
              DAST._IType _12420___mcc_h1138 = _source663.dtor_Nullable_a0;
              {
                RAST._IExpr _12421_recursiveGen;
                DCOMPUTF16._IOwnership _12422_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12423_recIdents;
                RAST._IExpr _out6552;
                DCOMPUTF16._IOwnership _out6553;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6554;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6552, out _out6553, out _out6554);
                _12421_recursiveGen = _out6552;
                _12422_recOwned = _out6553;
                _12423_recIdents = _out6554;
                r = _12421_recursiveGen;
                if (object.Equals(_12422_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6555;
                DCOMPUTF16._IOwnership _out6556;
                DCOMPUTF16.COMP.FromOwnership(r, _12422_recOwned, expectedOwnership, out _out6555, out _out6556);
                r = _out6555;
                resultingOwnership = _out6556;
                readIdents = _12423_recIdents;
              }
            } else if (_source663.is_Tuple) {
              Dafny.ISequence<DAST._IType> _12424___mcc_h1140 = _source663.dtor_Tuple_a0;
              {
                RAST._IType _12425_fromTpeGen;
                RAST._IType _out6557;
                _out6557 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12425_fromTpeGen = _out6557;
                RAST._IType _12426_toTpeGen;
                RAST._IType _out6558;
                _out6558 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12426_toTpeGen = _out6558;
                RAST._IExpr _12427_recursiveGen;
                DCOMPUTF16._IOwnership _12428_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12429_recIdents;
                RAST._IExpr _out6559;
                DCOMPUTF16._IOwnership _out6560;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6561;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6559, out _out6560, out _out6561);
                _12427_recursiveGen = _out6559;
                _12428_recOwned = _out6560;
                _12429_recIdents = _out6561;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12427_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12425_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12426_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6562;
                DCOMPUTF16._IOwnership _out6563;
                DCOMPUTF16.COMP.FromOwnership(r, _12428_recOwned, expectedOwnership, out _out6562, out _out6563);
                r = _out6562;
                resultingOwnership = _out6563;
                readIdents = _12429_recIdents;
              }
            } else if (_source663.is_Array) {
              DAST._IType _12430___mcc_h1142 = _source663.dtor_element;
              BigInteger _12431___mcc_h1143 = _source663.dtor_dims;
              {
                RAST._IType _12432_fromTpeGen;
                RAST._IType _out6564;
                _out6564 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12432_fromTpeGen = _out6564;
                RAST._IType _12433_toTpeGen;
                RAST._IType _out6565;
                _out6565 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12433_toTpeGen = _out6565;
                RAST._IExpr _12434_recursiveGen;
                DCOMPUTF16._IOwnership _12435_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12436_recIdents;
                RAST._IExpr _out6566;
                DCOMPUTF16._IOwnership _out6567;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6568;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6566, out _out6567, out _out6568);
                _12434_recursiveGen = _out6566;
                _12435_recOwned = _out6567;
                _12436_recIdents = _out6568;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12434_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12432_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12433_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6569;
                DCOMPUTF16._IOwnership _out6570;
                DCOMPUTF16.COMP.FromOwnership(r, _12435_recOwned, expectedOwnership, out _out6569, out _out6570);
                r = _out6569;
                resultingOwnership = _out6570;
                readIdents = _12436_recIdents;
              }
            } else if (_source663.is_Seq) {
              DAST._IType _12437___mcc_h1146 = _source663.dtor_element;
              {
                RAST._IType _12438_fromTpeGen;
                RAST._IType _out6571;
                _out6571 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12438_fromTpeGen = _out6571;
                RAST._IType _12439_toTpeGen;
                RAST._IType _out6572;
                _out6572 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12439_toTpeGen = _out6572;
                RAST._IExpr _12440_recursiveGen;
                DCOMPUTF16._IOwnership _12441_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12442_recIdents;
                RAST._IExpr _out6573;
                DCOMPUTF16._IOwnership _out6574;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6575;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6573, out _out6574, out _out6575);
                _12440_recursiveGen = _out6573;
                _12441_recOwned = _out6574;
                _12442_recIdents = _out6575;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12440_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12438_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12439_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6576;
                DCOMPUTF16._IOwnership _out6577;
                DCOMPUTF16.COMP.FromOwnership(r, _12441_recOwned, expectedOwnership, out _out6576, out _out6577);
                r = _out6576;
                resultingOwnership = _out6577;
                readIdents = _12442_recIdents;
              }
            } else if (_source663.is_Set) {
              DAST._IType _12443___mcc_h1148 = _source663.dtor_element;
              {
                RAST._IType _12444_fromTpeGen;
                RAST._IType _out6578;
                _out6578 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12444_fromTpeGen = _out6578;
                RAST._IType _12445_toTpeGen;
                RAST._IType _out6579;
                _out6579 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12445_toTpeGen = _out6579;
                RAST._IExpr _12446_recursiveGen;
                DCOMPUTF16._IOwnership _12447_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12448_recIdents;
                RAST._IExpr _out6580;
                DCOMPUTF16._IOwnership _out6581;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6582;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6580, out _out6581, out _out6582);
                _12446_recursiveGen = _out6580;
                _12447_recOwned = _out6581;
                _12448_recIdents = _out6582;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12446_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12444_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12445_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6583;
                DCOMPUTF16._IOwnership _out6584;
                DCOMPUTF16.COMP.FromOwnership(r, _12447_recOwned, expectedOwnership, out _out6583, out _out6584);
                r = _out6583;
                resultingOwnership = _out6584;
                readIdents = _12448_recIdents;
              }
            } else if (_source663.is_Multiset) {
              DAST._IType _12449___mcc_h1150 = _source663.dtor_element;
              {
                RAST._IType _12450_fromTpeGen;
                RAST._IType _out6585;
                _out6585 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12450_fromTpeGen = _out6585;
                RAST._IType _12451_toTpeGen;
                RAST._IType _out6586;
                _out6586 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12451_toTpeGen = _out6586;
                RAST._IExpr _12452_recursiveGen;
                DCOMPUTF16._IOwnership _12453_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12454_recIdents;
                RAST._IExpr _out6587;
                DCOMPUTF16._IOwnership _out6588;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6589;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6587, out _out6588, out _out6589);
                _12452_recursiveGen = _out6587;
                _12453_recOwned = _out6588;
                _12454_recIdents = _out6589;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12452_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12450_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12451_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6590;
                DCOMPUTF16._IOwnership _out6591;
                DCOMPUTF16.COMP.FromOwnership(r, _12453_recOwned, expectedOwnership, out _out6590, out _out6591);
                r = _out6590;
                resultingOwnership = _out6591;
                readIdents = _12454_recIdents;
              }
            } else if (_source663.is_Map) {
              DAST._IType _12455___mcc_h1152 = _source663.dtor_key;
              DAST._IType _12456___mcc_h1153 = _source663.dtor_value;
              {
                RAST._IType _12457_fromTpeGen;
                RAST._IType _out6592;
                _out6592 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12457_fromTpeGen = _out6592;
                RAST._IType _12458_toTpeGen;
                RAST._IType _out6593;
                _out6593 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12458_toTpeGen = _out6593;
                RAST._IExpr _12459_recursiveGen;
                DCOMPUTF16._IOwnership _12460_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12461_recIdents;
                RAST._IExpr _out6594;
                DCOMPUTF16._IOwnership _out6595;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6596;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6594, out _out6595, out _out6596);
                _12459_recursiveGen = _out6594;
                _12460_recOwned = _out6595;
                _12461_recIdents = _out6596;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12459_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12457_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12458_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6597;
                DCOMPUTF16._IOwnership _out6598;
                DCOMPUTF16.COMP.FromOwnership(r, _12460_recOwned, expectedOwnership, out _out6597, out _out6598);
                r = _out6597;
                resultingOwnership = _out6598;
                readIdents = _12461_recIdents;
              }
            } else if (_source663.is_SetBuilder) {
              DAST._IType _12462___mcc_h1156 = _source663.dtor_element;
              {
                RAST._IType _12463_fromTpeGen;
                RAST._IType _out6599;
                _out6599 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12463_fromTpeGen = _out6599;
                RAST._IType _12464_toTpeGen;
                RAST._IType _out6600;
                _out6600 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12464_toTpeGen = _out6600;
                RAST._IExpr _12465_recursiveGen;
                DCOMPUTF16._IOwnership _12466_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12467_recIdents;
                RAST._IExpr _out6601;
                DCOMPUTF16._IOwnership _out6602;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6603;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6601, out _out6602, out _out6603);
                _12465_recursiveGen = _out6601;
                _12466_recOwned = _out6602;
                _12467_recIdents = _out6603;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12465_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12463_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12464_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6604;
                DCOMPUTF16._IOwnership _out6605;
                DCOMPUTF16.COMP.FromOwnership(r, _12466_recOwned, expectedOwnership, out _out6604, out _out6605);
                r = _out6604;
                resultingOwnership = _out6605;
                readIdents = _12467_recIdents;
              }
            } else if (_source663.is_MapBuilder) {
              DAST._IType _12468___mcc_h1158 = _source663.dtor_key;
              DAST._IType _12469___mcc_h1159 = _source663.dtor_value;
              {
                RAST._IType _12470_fromTpeGen;
                RAST._IType _out6606;
                _out6606 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12470_fromTpeGen = _out6606;
                RAST._IType _12471_toTpeGen;
                RAST._IType _out6607;
                _out6607 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12471_toTpeGen = _out6607;
                RAST._IExpr _12472_recursiveGen;
                DCOMPUTF16._IOwnership _12473_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12474_recIdents;
                RAST._IExpr _out6608;
                DCOMPUTF16._IOwnership _out6609;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6610;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6608, out _out6609, out _out6610);
                _12472_recursiveGen = _out6608;
                _12473_recOwned = _out6609;
                _12474_recIdents = _out6610;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12472_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12470_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12471_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6611;
                DCOMPUTF16._IOwnership _out6612;
                DCOMPUTF16.COMP.FromOwnership(r, _12473_recOwned, expectedOwnership, out _out6611, out _out6612);
                r = _out6611;
                resultingOwnership = _out6612;
                readIdents = _12474_recIdents;
              }
            } else if (_source663.is_Arrow) {
              Dafny.ISequence<DAST._IType> _12475___mcc_h1162 = _source663.dtor_args;
              DAST._IType _12476___mcc_h1163 = _source663.dtor_result;
              {
                RAST._IType _12477_fromTpeGen;
                RAST._IType _out6613;
                _out6613 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12477_fromTpeGen = _out6613;
                RAST._IType _12478_toTpeGen;
                RAST._IType _out6614;
                _out6614 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12478_toTpeGen = _out6614;
                RAST._IExpr _12479_recursiveGen;
                DCOMPUTF16._IOwnership _12480_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12481_recIdents;
                RAST._IExpr _out6615;
                DCOMPUTF16._IOwnership _out6616;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6617;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6615, out _out6616, out _out6617);
                _12479_recursiveGen = _out6615;
                _12480_recOwned = _out6616;
                _12481_recIdents = _out6617;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12479_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12477_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12478_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6618;
                DCOMPUTF16._IOwnership _out6619;
                DCOMPUTF16.COMP.FromOwnership(r, _12480_recOwned, expectedOwnership, out _out6618, out _out6619);
                r = _out6618;
                resultingOwnership = _out6619;
                readIdents = _12481_recIdents;
              }
            } else if (_source663.is_Primitive) {
              DAST._IPrimitive _12482___mcc_h1166 = _source663.dtor_Primitive_a0;
              {
                RAST._IType _12483_fromTpeGen;
                RAST._IType _out6620;
                _out6620 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12483_fromTpeGen = _out6620;
                RAST._IType _12484_toTpeGen;
                RAST._IType _out6621;
                _out6621 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12484_toTpeGen = _out6621;
                RAST._IExpr _12485_recursiveGen;
                DCOMPUTF16._IOwnership _12486_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12487_recIdents;
                RAST._IExpr _out6622;
                DCOMPUTF16._IOwnership _out6623;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6624;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6622, out _out6623, out _out6624);
                _12485_recursiveGen = _out6622;
                _12486_recOwned = _out6623;
                _12487_recIdents = _out6624;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12485_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12483_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12484_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6625;
                DCOMPUTF16._IOwnership _out6626;
                DCOMPUTF16.COMP.FromOwnership(r, _12486_recOwned, expectedOwnership, out _out6625, out _out6626);
                r = _out6625;
                resultingOwnership = _out6626;
                readIdents = _12487_recIdents;
              }
            } else if (_source663.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12488___mcc_h1168 = _source663.dtor_Passthrough_a0;
              {
                RAST._IType _12489_fromTpeGen;
                RAST._IType _out6627;
                _out6627 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12489_fromTpeGen = _out6627;
                RAST._IType _12490_toTpeGen;
                RAST._IType _out6628;
                _out6628 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12490_toTpeGen = _out6628;
                RAST._IExpr _12491_recursiveGen;
                DCOMPUTF16._IOwnership _12492_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12493_recIdents;
                RAST._IExpr _out6629;
                DCOMPUTF16._IOwnership _out6630;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6631;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6629, out _out6630, out _out6631);
                _12491_recursiveGen = _out6629;
                _12492_recOwned = _out6630;
                _12493_recIdents = _out6631;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12491_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12489_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12490_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6632;
                DCOMPUTF16._IOwnership _out6633;
                DCOMPUTF16.COMP.FromOwnership(r, _12492_recOwned, expectedOwnership, out _out6632, out _out6633);
                r = _out6632;
                resultingOwnership = _out6633;
                readIdents = _12493_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12494___mcc_h1170 = _source663.dtor_TypeArg_a0;
              {
                RAST._IType _12495_fromTpeGen;
                RAST._IType _out6634;
                _out6634 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12495_fromTpeGen = _out6634;
                RAST._IType _12496_toTpeGen;
                RAST._IType _out6635;
                _out6635 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12496_toTpeGen = _out6635;
                RAST._IExpr _12497_recursiveGen;
                DCOMPUTF16._IOwnership _12498_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12499_recIdents;
                RAST._IExpr _out6636;
                DCOMPUTF16._IOwnership _out6637;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6638;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6636, out _out6637, out _out6638);
                _12497_recursiveGen = _out6636;
                _12498_recOwned = _out6637;
                _12499_recIdents = _out6638;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12497_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12495_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12496_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6639;
                DCOMPUTF16._IOwnership _out6640;
                DCOMPUTF16.COMP.FromOwnership(r, _12498_recOwned, expectedOwnership, out _out6639, out _out6640);
                r = _out6639;
                resultingOwnership = _out6640;
                readIdents = _12499_recIdents;
              }
            }
          } else {
            DAST._IType _source668 = _9573___mcc_h1;
            if (_source668.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12500___mcc_h1172 = _source668.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _12501___mcc_h1173 = _source668.dtor_typeArgs;
              DAST._IResolvedType _12502___mcc_h1174 = _source668.dtor_resolved;
              DAST._IResolvedType _source669 = _12502___mcc_h1174;
              if (_source669.is_AllocatedDatatype) {
                DAST._IDatatypeType _12503___mcc_h1178 = _source669.dtor_datatypeType;
                {
                  RAST._IType _12504_fromTpeGen;
                  RAST._IType _out6641;
                  _out6641 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12504_fromTpeGen = _out6641;
                  RAST._IType _12505_toTpeGen;
                  RAST._IType _out6642;
                  _out6642 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12505_toTpeGen = _out6642;
                  RAST._IExpr _12506_recursiveGen;
                  DCOMPUTF16._IOwnership _12507_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12508_recIdents;
                  RAST._IExpr _out6643;
                  DCOMPUTF16._IOwnership _out6644;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6645;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6643, out _out6644, out _out6645);
                  _12506_recursiveGen = _out6643;
                  _12507_recOwned = _out6644;
                  _12508_recIdents = _out6645;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12506_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12504_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12505_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6646;
                  DCOMPUTF16._IOwnership _out6647;
                  DCOMPUTF16.COMP.FromOwnership(r, _12507_recOwned, expectedOwnership, out _out6646, out _out6647);
                  r = _out6646;
                  resultingOwnership = _out6647;
                  readIdents = _12508_recIdents;
                }
              } else if (_source669.is_Datatype) {
                DAST._IDatatypeType _12509___mcc_h1180 = _source669.dtor_datatypeType;
                {
                  RAST._IType _12510_fromTpeGen;
                  RAST._IType _out6648;
                  _out6648 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12510_fromTpeGen = _out6648;
                  RAST._IType _12511_toTpeGen;
                  RAST._IType _out6649;
                  _out6649 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12511_toTpeGen = _out6649;
                  RAST._IExpr _12512_recursiveGen;
                  DCOMPUTF16._IOwnership _12513_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12514_recIdents;
                  RAST._IExpr _out6650;
                  DCOMPUTF16._IOwnership _out6651;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6652;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6650, out _out6651, out _out6652);
                  _12512_recursiveGen = _out6650;
                  _12513_recOwned = _out6651;
                  _12514_recIdents = _out6652;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12512_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12510_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12511_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6653;
                  DCOMPUTF16._IOwnership _out6654;
                  DCOMPUTF16.COMP.FromOwnership(r, _12513_recOwned, expectedOwnership, out _out6653, out _out6654);
                  r = _out6653;
                  resultingOwnership = _out6654;
                  readIdents = _12514_recIdents;
                }
              } else if (_source669.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12515___mcc_h1182 = _source669.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _12516___mcc_h1183 = _source669.dtor_attributes;
                {
                  RAST._IType _12517_fromTpeGen;
                  RAST._IType _out6655;
                  _out6655 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12517_fromTpeGen = _out6655;
                  RAST._IType _12518_toTpeGen;
                  RAST._IType _out6656;
                  _out6656 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12518_toTpeGen = _out6656;
                  RAST._IExpr _12519_recursiveGen;
                  DCOMPUTF16._IOwnership _12520_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12521_recIdents;
                  RAST._IExpr _out6657;
                  DCOMPUTF16._IOwnership _out6658;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6659;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6657, out _out6658, out _out6659);
                  _12519_recursiveGen = _out6657;
                  _12520_recOwned = _out6658;
                  _12521_recIdents = _out6659;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12519_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12517_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12518_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6660;
                  DCOMPUTF16._IOwnership _out6661;
                  DCOMPUTF16.COMP.FromOwnership(r, _12520_recOwned, expectedOwnership, out _out6660, out _out6661);
                  r = _out6660;
                  resultingOwnership = _out6661;
                  readIdents = _12521_recIdents;
                }
              } else {
                DAST._IType _12522___mcc_h1186 = _source669.dtor_baseType;
                DAST._INewtypeRange _12523___mcc_h1187 = _source669.dtor_range;
                bool _12524___mcc_h1188 = _source669.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _12525___mcc_h1189 = _source669.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _12526_attributes = _12525___mcc_h1189;
                bool _12527_erase = _12524___mcc_h1188;
                DAST._INewtypeRange _12528_range = _12523___mcc_h1187;
                DAST._IType _12529_b = _12522___mcc_h1186;
                {
                  Std.Wrappers._IOption<RAST._IType> _12530_nativeToType;
                  _12530_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12529_b, _12528_range);
                  if (object.Equals(_9567_fromTpe, _12529_b)) {
                    RAST._IExpr _12531_recursiveGen;
                    DCOMPUTF16._IOwnership _12532_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12533_recIdents;
                    RAST._IExpr _out6662;
                    DCOMPUTF16._IOwnership _out6663;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6664;
                    DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6662, out _out6663, out _out6664);
                    _12531_recursiveGen = _out6662;
                    _12532_recOwned = _out6663;
                    _12533_recIdents = _out6664;
                    readIdents = _12533_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source670 = _12530_nativeToType;
                    if (_source670.is_None) {
                      if (_12527_erase) {
                        r = _12531_recursiveGen;
                      } else {
                        RAST._IType _12534_rhsType;
                        RAST._IType _out6665;
                        _out6665 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                        _12534_rhsType = _out6665;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12534_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12531_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6666;
                      DCOMPUTF16._IOwnership _out6667;
                      DCOMPUTF16.COMP.FromOwnership(r, _12532_recOwned, expectedOwnership, out _out6666, out _out6667);
                      r = _out6666;
                      resultingOwnership = _out6667;
                    } else {
                      RAST._IType _12535___mcc_h2332 = _source670.dtor_value;
                      RAST._IType _12536_v = _12535___mcc_h2332;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12531_recursiveGen, RAST.Expr.create_ExprFromType(_12536_v)));
                      RAST._IExpr _out6668;
                      DCOMPUTF16._IOwnership _out6669;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6668, out _out6669);
                      r = _out6668;
                      resultingOwnership = _out6669;
                    }
                  } else {
                    if ((_12530_nativeToType).is_Some) {
                      DAST._IType _source671 = _9567_fromTpe;
                      if (_source671.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12537___mcc_h2333 = _source671.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _12538___mcc_h2334 = _source671.dtor_typeArgs;
                        DAST._IResolvedType _12539___mcc_h2335 = _source671.dtor_resolved;
                        DAST._IResolvedType _source672 = _12539___mcc_h2335;
                        if (_source672.is_AllocatedDatatype) {
                          DAST._IDatatypeType _12540___mcc_h2339 = _source672.dtor_datatypeType;
                        } else if (_source672.is_Datatype) {
                          DAST._IDatatypeType _12541___mcc_h2341 = _source672.dtor_datatypeType;
                        } else if (_source672.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12542___mcc_h2343 = _source672.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _12543___mcc_h2344 = _source672.dtor_attributes;
                        } else {
                          DAST._IType _12544___mcc_h2347 = _source672.dtor_baseType;
                          DAST._INewtypeRange _12545___mcc_h2348 = _source672.dtor_range;
                          bool _12546___mcc_h2349 = _source672.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _12547___mcc_h2350 = _source672.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _12548_attributes0 = _12547___mcc_h2350;
                          bool _12549_erase0 = _12546___mcc_h2349;
                          DAST._INewtypeRange _12550_range0 = _12545___mcc_h2348;
                          DAST._IType _12551_b0 = _12544___mcc_h2347;
                          {
                            Std.Wrappers._IOption<RAST._IType> _12552_nativeFromType;
                            _12552_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12551_b0, _12550_range0);
                            if ((_12552_nativeFromType).is_Some) {
                              RAST._IExpr _12553_recursiveGen;
                              DCOMPUTF16._IOwnership _12554_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12555_recIdents;
                              RAST._IExpr _out6670;
                              DCOMPUTF16._IOwnership _out6671;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6672;
                              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6670, out _out6671, out _out6672);
                              _12553_recursiveGen = _out6670;
                              _12554_recOwned = _out6671;
                              _12555_recIdents = _out6672;
                              RAST._IExpr _out6673;
                              DCOMPUTF16._IOwnership _out6674;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12553_recursiveGen, (_12530_nativeToType).dtor_value), _12554_recOwned, expectedOwnership, out _out6673, out _out6674);
                              r = _out6673;
                              resultingOwnership = _out6674;
                              readIdents = _12555_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source671.is_Nullable) {
                        DAST._IType _12556___mcc_h2355 = _source671.dtor_Nullable_a0;
                      } else if (_source671.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _12557___mcc_h2357 = _source671.dtor_Tuple_a0;
                      } else if (_source671.is_Array) {
                        DAST._IType _12558___mcc_h2359 = _source671.dtor_element;
                        BigInteger _12559___mcc_h2360 = _source671.dtor_dims;
                      } else if (_source671.is_Seq) {
                        DAST._IType _12560___mcc_h2363 = _source671.dtor_element;
                      } else if (_source671.is_Set) {
                        DAST._IType _12561___mcc_h2365 = _source671.dtor_element;
                      } else if (_source671.is_Multiset) {
                        DAST._IType _12562___mcc_h2367 = _source671.dtor_element;
                      } else if (_source671.is_Map) {
                        DAST._IType _12563___mcc_h2369 = _source671.dtor_key;
                        DAST._IType _12564___mcc_h2370 = _source671.dtor_value;
                      } else if (_source671.is_SetBuilder) {
                        DAST._IType _12565___mcc_h2373 = _source671.dtor_element;
                      } else if (_source671.is_MapBuilder) {
                        DAST._IType _12566___mcc_h2375 = _source671.dtor_key;
                        DAST._IType _12567___mcc_h2376 = _source671.dtor_value;
                      } else if (_source671.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _12568___mcc_h2379 = _source671.dtor_args;
                        DAST._IType _12569___mcc_h2380 = _source671.dtor_result;
                      } else if (_source671.is_Primitive) {
                        DAST._IPrimitive _12570___mcc_h2383 = _source671.dtor_Primitive_a0;
                      } else if (_source671.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _12571___mcc_h2385 = _source671.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _12572___mcc_h2387 = _source671.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _12573_recursiveGen;
                        DCOMPUTF16._IOwnership _12574_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12575_recIdents;
                        RAST._IExpr _out6675;
                        DCOMPUTF16._IOwnership _out6676;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6677;
                        DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6675, out _out6676, out _out6677);
                        _12573_recursiveGen = _out6675;
                        _12574_recOwned = _out6676;
                        _12575_recIdents = _out6677;
                        RAST._IExpr _out6678;
                        DCOMPUTF16._IOwnership _out6679;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12573_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12530_nativeToType).dtor_value), _12574_recOwned, expectedOwnership, out _out6678, out _out6679);
                        r = _out6678;
                        resultingOwnership = _out6679;
                        readIdents = _12575_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6680;
                    DCOMPUTF16._IOwnership _out6681;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6682;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _12529_b), _12529_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out6680, out _out6681, out _out6682);
                    r = _out6680;
                    resultingOwnership = _out6681;
                    readIdents = _out6682;
                  }
                }
              }
            } else if (_source668.is_Nullable) {
              DAST._IType _12576___mcc_h1194 = _source668.dtor_Nullable_a0;
              {
                RAST._IExpr _12577_recursiveGen;
                DCOMPUTF16._IOwnership _12578_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12579_recIdents;
                RAST._IExpr _out6683;
                DCOMPUTF16._IOwnership _out6684;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6685;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6683, out _out6684, out _out6685);
                _12577_recursiveGen = _out6683;
                _12578_recOwned = _out6684;
                _12579_recIdents = _out6685;
                r = _12577_recursiveGen;
                if (object.Equals(_12578_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6686;
                DCOMPUTF16._IOwnership _out6687;
                DCOMPUTF16.COMP.FromOwnership(r, _12578_recOwned, expectedOwnership, out _out6686, out _out6687);
                r = _out6686;
                resultingOwnership = _out6687;
                readIdents = _12579_recIdents;
              }
            } else if (_source668.is_Tuple) {
              Dafny.ISequence<DAST._IType> _12580___mcc_h1196 = _source668.dtor_Tuple_a0;
              {
                RAST._IType _12581_fromTpeGen;
                RAST._IType _out6688;
                _out6688 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12581_fromTpeGen = _out6688;
                RAST._IType _12582_toTpeGen;
                RAST._IType _out6689;
                _out6689 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12582_toTpeGen = _out6689;
                RAST._IExpr _12583_recursiveGen;
                DCOMPUTF16._IOwnership _12584_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12585_recIdents;
                RAST._IExpr _out6690;
                DCOMPUTF16._IOwnership _out6691;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6692;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6690, out _out6691, out _out6692);
                _12583_recursiveGen = _out6690;
                _12584_recOwned = _out6691;
                _12585_recIdents = _out6692;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12583_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12581_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12582_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6693;
                DCOMPUTF16._IOwnership _out6694;
                DCOMPUTF16.COMP.FromOwnership(r, _12584_recOwned, expectedOwnership, out _out6693, out _out6694);
                r = _out6693;
                resultingOwnership = _out6694;
                readIdents = _12585_recIdents;
              }
            } else if (_source668.is_Array) {
              DAST._IType _12586___mcc_h1198 = _source668.dtor_element;
              BigInteger _12587___mcc_h1199 = _source668.dtor_dims;
              {
                RAST._IType _12588_fromTpeGen;
                RAST._IType _out6695;
                _out6695 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12588_fromTpeGen = _out6695;
                RAST._IType _12589_toTpeGen;
                RAST._IType _out6696;
                _out6696 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12589_toTpeGen = _out6696;
                RAST._IExpr _12590_recursiveGen;
                DCOMPUTF16._IOwnership _12591_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12592_recIdents;
                RAST._IExpr _out6697;
                DCOMPUTF16._IOwnership _out6698;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6699;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6697, out _out6698, out _out6699);
                _12590_recursiveGen = _out6697;
                _12591_recOwned = _out6698;
                _12592_recIdents = _out6699;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12590_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12588_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12589_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6700;
                DCOMPUTF16._IOwnership _out6701;
                DCOMPUTF16.COMP.FromOwnership(r, _12591_recOwned, expectedOwnership, out _out6700, out _out6701);
                r = _out6700;
                resultingOwnership = _out6701;
                readIdents = _12592_recIdents;
              }
            } else if (_source668.is_Seq) {
              DAST._IType _12593___mcc_h1202 = _source668.dtor_element;
              {
                RAST._IType _12594_fromTpeGen;
                RAST._IType _out6702;
                _out6702 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12594_fromTpeGen = _out6702;
                RAST._IType _12595_toTpeGen;
                RAST._IType _out6703;
                _out6703 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12595_toTpeGen = _out6703;
                RAST._IExpr _12596_recursiveGen;
                DCOMPUTF16._IOwnership _12597_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12598_recIdents;
                RAST._IExpr _out6704;
                DCOMPUTF16._IOwnership _out6705;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6706;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6704, out _out6705, out _out6706);
                _12596_recursiveGen = _out6704;
                _12597_recOwned = _out6705;
                _12598_recIdents = _out6706;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12596_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12594_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12595_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6707;
                DCOMPUTF16._IOwnership _out6708;
                DCOMPUTF16.COMP.FromOwnership(r, _12597_recOwned, expectedOwnership, out _out6707, out _out6708);
                r = _out6707;
                resultingOwnership = _out6708;
                readIdents = _12598_recIdents;
              }
            } else if (_source668.is_Set) {
              DAST._IType _12599___mcc_h1204 = _source668.dtor_element;
              {
                RAST._IType _12600_fromTpeGen;
                RAST._IType _out6709;
                _out6709 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12600_fromTpeGen = _out6709;
                RAST._IType _12601_toTpeGen;
                RAST._IType _out6710;
                _out6710 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12601_toTpeGen = _out6710;
                RAST._IExpr _12602_recursiveGen;
                DCOMPUTF16._IOwnership _12603_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12604_recIdents;
                RAST._IExpr _out6711;
                DCOMPUTF16._IOwnership _out6712;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6713;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6711, out _out6712, out _out6713);
                _12602_recursiveGen = _out6711;
                _12603_recOwned = _out6712;
                _12604_recIdents = _out6713;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12602_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12600_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12601_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6714;
                DCOMPUTF16._IOwnership _out6715;
                DCOMPUTF16.COMP.FromOwnership(r, _12603_recOwned, expectedOwnership, out _out6714, out _out6715);
                r = _out6714;
                resultingOwnership = _out6715;
                readIdents = _12604_recIdents;
              }
            } else if (_source668.is_Multiset) {
              DAST._IType _12605___mcc_h1206 = _source668.dtor_element;
              {
                RAST._IType _12606_fromTpeGen;
                RAST._IType _out6716;
                _out6716 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12606_fromTpeGen = _out6716;
                RAST._IType _12607_toTpeGen;
                RAST._IType _out6717;
                _out6717 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12607_toTpeGen = _out6717;
                RAST._IExpr _12608_recursiveGen;
                DCOMPUTF16._IOwnership _12609_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12610_recIdents;
                RAST._IExpr _out6718;
                DCOMPUTF16._IOwnership _out6719;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6720;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6718, out _out6719, out _out6720);
                _12608_recursiveGen = _out6718;
                _12609_recOwned = _out6719;
                _12610_recIdents = _out6720;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12608_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12606_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12607_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6721;
                DCOMPUTF16._IOwnership _out6722;
                DCOMPUTF16.COMP.FromOwnership(r, _12609_recOwned, expectedOwnership, out _out6721, out _out6722);
                r = _out6721;
                resultingOwnership = _out6722;
                readIdents = _12610_recIdents;
              }
            } else if (_source668.is_Map) {
              DAST._IType _12611___mcc_h1208 = _source668.dtor_key;
              DAST._IType _12612___mcc_h1209 = _source668.dtor_value;
              {
                RAST._IType _12613_fromTpeGen;
                RAST._IType _out6723;
                _out6723 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12613_fromTpeGen = _out6723;
                RAST._IType _12614_toTpeGen;
                RAST._IType _out6724;
                _out6724 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12614_toTpeGen = _out6724;
                RAST._IExpr _12615_recursiveGen;
                DCOMPUTF16._IOwnership _12616_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12617_recIdents;
                RAST._IExpr _out6725;
                DCOMPUTF16._IOwnership _out6726;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6727;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6725, out _out6726, out _out6727);
                _12615_recursiveGen = _out6725;
                _12616_recOwned = _out6726;
                _12617_recIdents = _out6727;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12615_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12613_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12614_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6728;
                DCOMPUTF16._IOwnership _out6729;
                DCOMPUTF16.COMP.FromOwnership(r, _12616_recOwned, expectedOwnership, out _out6728, out _out6729);
                r = _out6728;
                resultingOwnership = _out6729;
                readIdents = _12617_recIdents;
              }
            } else if (_source668.is_SetBuilder) {
              DAST._IType _12618___mcc_h1212 = _source668.dtor_element;
              {
                RAST._IType _12619_fromTpeGen;
                RAST._IType _out6730;
                _out6730 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12619_fromTpeGen = _out6730;
                RAST._IType _12620_toTpeGen;
                RAST._IType _out6731;
                _out6731 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12620_toTpeGen = _out6731;
                RAST._IExpr _12621_recursiveGen;
                DCOMPUTF16._IOwnership _12622_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12623_recIdents;
                RAST._IExpr _out6732;
                DCOMPUTF16._IOwnership _out6733;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6734;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6732, out _out6733, out _out6734);
                _12621_recursiveGen = _out6732;
                _12622_recOwned = _out6733;
                _12623_recIdents = _out6734;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12621_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12619_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12620_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6735;
                DCOMPUTF16._IOwnership _out6736;
                DCOMPUTF16.COMP.FromOwnership(r, _12622_recOwned, expectedOwnership, out _out6735, out _out6736);
                r = _out6735;
                resultingOwnership = _out6736;
                readIdents = _12623_recIdents;
              }
            } else if (_source668.is_MapBuilder) {
              DAST._IType _12624___mcc_h1214 = _source668.dtor_key;
              DAST._IType _12625___mcc_h1215 = _source668.dtor_value;
              {
                RAST._IType _12626_fromTpeGen;
                RAST._IType _out6737;
                _out6737 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12626_fromTpeGen = _out6737;
                RAST._IType _12627_toTpeGen;
                RAST._IType _out6738;
                _out6738 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12627_toTpeGen = _out6738;
                RAST._IExpr _12628_recursiveGen;
                DCOMPUTF16._IOwnership _12629_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12630_recIdents;
                RAST._IExpr _out6739;
                DCOMPUTF16._IOwnership _out6740;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6741;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6739, out _out6740, out _out6741);
                _12628_recursiveGen = _out6739;
                _12629_recOwned = _out6740;
                _12630_recIdents = _out6741;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12628_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12626_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12627_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6742;
                DCOMPUTF16._IOwnership _out6743;
                DCOMPUTF16.COMP.FromOwnership(r, _12629_recOwned, expectedOwnership, out _out6742, out _out6743);
                r = _out6742;
                resultingOwnership = _out6743;
                readIdents = _12630_recIdents;
              }
            } else if (_source668.is_Arrow) {
              Dafny.ISequence<DAST._IType> _12631___mcc_h1218 = _source668.dtor_args;
              DAST._IType _12632___mcc_h1219 = _source668.dtor_result;
              {
                RAST._IType _12633_fromTpeGen;
                RAST._IType _out6744;
                _out6744 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12633_fromTpeGen = _out6744;
                RAST._IType _12634_toTpeGen;
                RAST._IType _out6745;
                _out6745 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12634_toTpeGen = _out6745;
                RAST._IExpr _12635_recursiveGen;
                DCOMPUTF16._IOwnership _12636_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12637_recIdents;
                RAST._IExpr _out6746;
                DCOMPUTF16._IOwnership _out6747;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6748;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6746, out _out6747, out _out6748);
                _12635_recursiveGen = _out6746;
                _12636_recOwned = _out6747;
                _12637_recIdents = _out6748;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12635_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12633_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12634_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6749;
                DCOMPUTF16._IOwnership _out6750;
                DCOMPUTF16.COMP.FromOwnership(r, _12636_recOwned, expectedOwnership, out _out6749, out _out6750);
                r = _out6749;
                resultingOwnership = _out6750;
                readIdents = _12637_recIdents;
              }
            } else if (_source668.is_Primitive) {
              DAST._IPrimitive _12638___mcc_h1222 = _source668.dtor_Primitive_a0;
              DAST._IPrimitive _source673 = _12638___mcc_h1222;
              if (_source673.is_Int) {
                {
                  RAST._IType _12639_rhsType;
                  RAST._IType _out6751;
                  _out6751 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12639_rhsType = _out6751;
                  RAST._IExpr _12640_recursiveGen;
                  DCOMPUTF16._IOwnership _12641___v104;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12642_recIdents;
                  RAST._IExpr _out6752;
                  DCOMPUTF16._IOwnership _out6753;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6754;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6752, out _out6753, out _out6754);
                  _12640_recursiveGen = _out6752;
                  _12641___v104 = _out6753;
                  _12642_recIdents = _out6754;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_12640_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as u32)}")));
                  RAST._IExpr _out6755;
                  DCOMPUTF16._IOwnership _out6756;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6755, out _out6756);
                  r = _out6755;
                  resultingOwnership = _out6756;
                  readIdents = _12642_recIdents;
                }
              } else if (_source673.is_Real) {
                {
                  RAST._IType _12643_fromTpeGen;
                  RAST._IType _out6757;
                  _out6757 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12643_fromTpeGen = _out6757;
                  RAST._IType _12644_toTpeGen;
                  RAST._IType _out6758;
                  _out6758 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12644_toTpeGen = _out6758;
                  RAST._IExpr _12645_recursiveGen;
                  DCOMPUTF16._IOwnership _12646_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12647_recIdents;
                  RAST._IExpr _out6759;
                  DCOMPUTF16._IOwnership _out6760;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6761;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6759, out _out6760, out _out6761);
                  _12645_recursiveGen = _out6759;
                  _12646_recOwned = _out6760;
                  _12647_recIdents = _out6761;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12645_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12643_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12644_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6762;
                  DCOMPUTF16._IOwnership _out6763;
                  DCOMPUTF16.COMP.FromOwnership(r, _12646_recOwned, expectedOwnership, out _out6762, out _out6763);
                  r = _out6762;
                  resultingOwnership = _out6763;
                  readIdents = _12647_recIdents;
                }
              } else if (_source673.is_String) {
                {
                  RAST._IType _12648_fromTpeGen;
                  RAST._IType _out6764;
                  _out6764 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12648_fromTpeGen = _out6764;
                  RAST._IType _12649_toTpeGen;
                  RAST._IType _out6765;
                  _out6765 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12649_toTpeGen = _out6765;
                  RAST._IExpr _12650_recursiveGen;
                  DCOMPUTF16._IOwnership _12651_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12652_recIdents;
                  RAST._IExpr _out6766;
                  DCOMPUTF16._IOwnership _out6767;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6768;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6766, out _out6767, out _out6768);
                  _12650_recursiveGen = _out6766;
                  _12651_recOwned = _out6767;
                  _12652_recIdents = _out6768;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12650_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12648_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12649_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6769;
                  DCOMPUTF16._IOwnership _out6770;
                  DCOMPUTF16.COMP.FromOwnership(r, _12651_recOwned, expectedOwnership, out _out6769, out _out6770);
                  r = _out6769;
                  resultingOwnership = _out6770;
                  readIdents = _12652_recIdents;
                }
              } else if (_source673.is_Bool) {
                {
                  RAST._IType _12653_fromTpeGen;
                  RAST._IType _out6771;
                  _out6771 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12653_fromTpeGen = _out6771;
                  RAST._IType _12654_toTpeGen;
                  RAST._IType _out6772;
                  _out6772 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12654_toTpeGen = _out6772;
                  RAST._IExpr _12655_recursiveGen;
                  DCOMPUTF16._IOwnership _12656_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12657_recIdents;
                  RAST._IExpr _out6773;
                  DCOMPUTF16._IOwnership _out6774;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6775;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6773, out _out6774, out _out6775);
                  _12655_recursiveGen = _out6773;
                  _12656_recOwned = _out6774;
                  _12657_recIdents = _out6775;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12655_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12653_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12654_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6776;
                  DCOMPUTF16._IOwnership _out6777;
                  DCOMPUTF16.COMP.FromOwnership(r, _12656_recOwned, expectedOwnership, out _out6776, out _out6777);
                  r = _out6776;
                  resultingOwnership = _out6777;
                  readIdents = _12657_recIdents;
                }
              } else {
                {
                  RAST._IType _12658_fromTpeGen;
                  RAST._IType _out6778;
                  _out6778 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                  _12658_fromTpeGen = _out6778;
                  RAST._IType _12659_toTpeGen;
                  RAST._IType _out6779;
                  _out6779 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                  _12659_toTpeGen = _out6779;
                  RAST._IExpr _12660_recursiveGen;
                  DCOMPUTF16._IOwnership _12661_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12662_recIdents;
                  RAST._IExpr _out6780;
                  DCOMPUTF16._IOwnership _out6781;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6782;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6780, out _out6781, out _out6782);
                  _12660_recursiveGen = _out6780;
                  _12661_recOwned = _out6781;
                  _12662_recIdents = _out6782;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12660_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12658_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12659_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6783;
                  DCOMPUTF16._IOwnership _out6784;
                  DCOMPUTF16.COMP.FromOwnership(r, _12661_recOwned, expectedOwnership, out _out6783, out _out6784);
                  r = _out6783;
                  resultingOwnership = _out6784;
                  readIdents = _12662_recIdents;
                }
              }
            } else if (_source668.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12663___mcc_h1224 = _source668.dtor_Passthrough_a0;
              {
                RAST._IType _12664_fromTpeGen;
                RAST._IType _out6785;
                _out6785 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12664_fromTpeGen = _out6785;
                RAST._IType _12665_toTpeGen;
                RAST._IType _out6786;
                _out6786 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12665_toTpeGen = _out6786;
                RAST._IExpr _12666_recursiveGen;
                DCOMPUTF16._IOwnership _12667_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12668_recIdents;
                RAST._IExpr _out6787;
                DCOMPUTF16._IOwnership _out6788;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6789;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6787, out _out6788, out _out6789);
                _12666_recursiveGen = _out6787;
                _12667_recOwned = _out6788;
                _12668_recIdents = _out6789;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12666_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12664_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12665_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6790;
                DCOMPUTF16._IOwnership _out6791;
                DCOMPUTF16.COMP.FromOwnership(r, _12667_recOwned, expectedOwnership, out _out6790, out _out6791);
                r = _out6790;
                resultingOwnership = _out6791;
                readIdents = _12668_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12669___mcc_h1226 = _source668.dtor_TypeArg_a0;
              {
                RAST._IType _12670_fromTpeGen;
                RAST._IType _out6792;
                _out6792 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12670_fromTpeGen = _out6792;
                RAST._IType _12671_toTpeGen;
                RAST._IType _out6793;
                _out6793 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12671_toTpeGen = _out6793;
                RAST._IExpr _12672_recursiveGen;
                DCOMPUTF16._IOwnership _12673_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12674_recIdents;
                RAST._IExpr _out6794;
                DCOMPUTF16._IOwnership _out6795;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6796;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6794, out _out6795, out _out6796);
                _12672_recursiveGen = _out6794;
                _12673_recOwned = _out6795;
                _12674_recIdents = _out6796;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12672_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12670_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12671_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6797;
                DCOMPUTF16._IOwnership _out6798;
                DCOMPUTF16.COMP.FromOwnership(r, _12673_recOwned, expectedOwnership, out _out6797, out _out6798);
                r = _out6797;
                resultingOwnership = _out6798;
                readIdents = _12674_recIdents;
              }
            }
          }
        } else if (_source561.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _12675___mcc_h1228 = _source561.dtor_Passthrough_a0;
          DAST._IType _source674 = _9573___mcc_h1;
          if (_source674.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12676___mcc_h1232 = _source674.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _12677___mcc_h1233 = _source674.dtor_typeArgs;
            DAST._IResolvedType _12678___mcc_h1234 = _source674.dtor_resolved;
            DAST._IResolvedType _source675 = _12678___mcc_h1234;
            if (_source675.is_AllocatedDatatype) {
              DAST._IDatatypeType _12679___mcc_h1238 = _source675.dtor_datatypeType;
              {
                RAST._IType _12680_fromTpeGen;
                RAST._IType _out6799;
                _out6799 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12680_fromTpeGen = _out6799;
                RAST._IType _12681_toTpeGen;
                RAST._IType _out6800;
                _out6800 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12681_toTpeGen = _out6800;
                RAST._IExpr _12682_recursiveGen;
                DCOMPUTF16._IOwnership _12683_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12684_recIdents;
                RAST._IExpr _out6801;
                DCOMPUTF16._IOwnership _out6802;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6803;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6801, out _out6802, out _out6803);
                _12682_recursiveGen = _out6801;
                _12683_recOwned = _out6802;
                _12684_recIdents = _out6803;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12682_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12680_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12681_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6804;
                DCOMPUTF16._IOwnership _out6805;
                DCOMPUTF16.COMP.FromOwnership(r, _12683_recOwned, expectedOwnership, out _out6804, out _out6805);
                r = _out6804;
                resultingOwnership = _out6805;
                readIdents = _12684_recIdents;
              }
            } else if (_source675.is_Datatype) {
              DAST._IDatatypeType _12685___mcc_h1240 = _source675.dtor_datatypeType;
              {
                RAST._IType _12686_fromTpeGen;
                RAST._IType _out6806;
                _out6806 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12686_fromTpeGen = _out6806;
                RAST._IType _12687_toTpeGen;
                RAST._IType _out6807;
                _out6807 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12687_toTpeGen = _out6807;
                RAST._IExpr _12688_recursiveGen;
                DCOMPUTF16._IOwnership _12689_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12690_recIdents;
                RAST._IExpr _out6808;
                DCOMPUTF16._IOwnership _out6809;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6810;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6808, out _out6809, out _out6810);
                _12688_recursiveGen = _out6808;
                _12689_recOwned = _out6809;
                _12690_recIdents = _out6810;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12688_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12686_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12687_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6811;
                DCOMPUTF16._IOwnership _out6812;
                DCOMPUTF16.COMP.FromOwnership(r, _12689_recOwned, expectedOwnership, out _out6811, out _out6812);
                r = _out6811;
                resultingOwnership = _out6812;
                readIdents = _12690_recIdents;
              }
            } else if (_source675.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12691___mcc_h1242 = _source675.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _12692___mcc_h1243 = _source675.dtor_attributes;
              {
                RAST._IType _12693_fromTpeGen;
                RAST._IType _out6813;
                _out6813 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12693_fromTpeGen = _out6813;
                RAST._IType _12694_toTpeGen;
                RAST._IType _out6814;
                _out6814 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12694_toTpeGen = _out6814;
                RAST._IExpr _12695_recursiveGen;
                DCOMPUTF16._IOwnership _12696_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12697_recIdents;
                RAST._IExpr _out6815;
                DCOMPUTF16._IOwnership _out6816;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6817;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6815, out _out6816, out _out6817);
                _12695_recursiveGen = _out6815;
                _12696_recOwned = _out6816;
                _12697_recIdents = _out6817;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12695_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12693_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12694_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6818;
                DCOMPUTF16._IOwnership _out6819;
                DCOMPUTF16.COMP.FromOwnership(r, _12696_recOwned, expectedOwnership, out _out6818, out _out6819);
                r = _out6818;
                resultingOwnership = _out6819;
                readIdents = _12697_recIdents;
              }
            } else {
              DAST._IType _12698___mcc_h1246 = _source675.dtor_baseType;
              DAST._INewtypeRange _12699___mcc_h1247 = _source675.dtor_range;
              bool _12700___mcc_h1248 = _source675.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _12701___mcc_h1249 = _source675.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _12702_attributes = _12701___mcc_h1249;
              bool _12703_erase = _12700___mcc_h1248;
              DAST._INewtypeRange _12704_range = _12699___mcc_h1247;
              DAST._IType _12705_b = _12698___mcc_h1246;
              {
                Std.Wrappers._IOption<RAST._IType> _12706_nativeToType;
                _12706_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12705_b, _12704_range);
                if (object.Equals(_9567_fromTpe, _12705_b)) {
                  RAST._IExpr _12707_recursiveGen;
                  DCOMPUTF16._IOwnership _12708_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12709_recIdents;
                  RAST._IExpr _out6820;
                  DCOMPUTF16._IOwnership _out6821;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6822;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6820, out _out6821, out _out6822);
                  _12707_recursiveGen = _out6820;
                  _12708_recOwned = _out6821;
                  _12709_recIdents = _out6822;
                  readIdents = _12709_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source676 = _12706_nativeToType;
                  if (_source676.is_None) {
                    if (_12703_erase) {
                      r = _12707_recursiveGen;
                    } else {
                      RAST._IType _12710_rhsType;
                      RAST._IType _out6823;
                      _out6823 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _12710_rhsType = _out6823;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12710_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12707_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out6824;
                    DCOMPUTF16._IOwnership _out6825;
                    DCOMPUTF16.COMP.FromOwnership(r, _12708_recOwned, expectedOwnership, out _out6824, out _out6825);
                    r = _out6824;
                    resultingOwnership = _out6825;
                  } else {
                    RAST._IType _12711___mcc_h2389 = _source676.dtor_value;
                    RAST._IType _12712_v = _12711___mcc_h2389;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12707_recursiveGen, RAST.Expr.create_ExprFromType(_12712_v)));
                    RAST._IExpr _out6826;
                    DCOMPUTF16._IOwnership _out6827;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6826, out _out6827);
                    r = _out6826;
                    resultingOwnership = _out6827;
                  }
                } else {
                  if ((_12706_nativeToType).is_Some) {
                    DAST._IType _source677 = _9567_fromTpe;
                    if (_source677.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12713___mcc_h2390 = _source677.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _12714___mcc_h2391 = _source677.dtor_typeArgs;
                      DAST._IResolvedType _12715___mcc_h2392 = _source677.dtor_resolved;
                      DAST._IResolvedType _source678 = _12715___mcc_h2392;
                      if (_source678.is_AllocatedDatatype) {
                        DAST._IDatatypeType _12716___mcc_h2396 = _source678.dtor_datatypeType;
                      } else if (_source678.is_Datatype) {
                        DAST._IDatatypeType _12717___mcc_h2398 = _source678.dtor_datatypeType;
                      } else if (_source678.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12718___mcc_h2400 = _source678.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _12719___mcc_h2401 = _source678.dtor_attributes;
                      } else {
                        DAST._IType _12720___mcc_h2404 = _source678.dtor_baseType;
                        DAST._INewtypeRange _12721___mcc_h2405 = _source678.dtor_range;
                        bool _12722___mcc_h2406 = _source678.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _12723___mcc_h2407 = _source678.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _12724_attributes0 = _12723___mcc_h2407;
                        bool _12725_erase0 = _12722___mcc_h2406;
                        DAST._INewtypeRange _12726_range0 = _12721___mcc_h2405;
                        DAST._IType _12727_b0 = _12720___mcc_h2404;
                        {
                          Std.Wrappers._IOption<RAST._IType> _12728_nativeFromType;
                          _12728_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12727_b0, _12726_range0);
                          if ((_12728_nativeFromType).is_Some) {
                            RAST._IExpr _12729_recursiveGen;
                            DCOMPUTF16._IOwnership _12730_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12731_recIdents;
                            RAST._IExpr _out6828;
                            DCOMPUTF16._IOwnership _out6829;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6830;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6828, out _out6829, out _out6830);
                            _12729_recursiveGen = _out6828;
                            _12730_recOwned = _out6829;
                            _12731_recIdents = _out6830;
                            RAST._IExpr _out6831;
                            DCOMPUTF16._IOwnership _out6832;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12729_recursiveGen, (_12706_nativeToType).dtor_value), _12730_recOwned, expectedOwnership, out _out6831, out _out6832);
                            r = _out6831;
                            resultingOwnership = _out6832;
                            readIdents = _12731_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source677.is_Nullable) {
                      DAST._IType _12732___mcc_h2412 = _source677.dtor_Nullable_a0;
                    } else if (_source677.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _12733___mcc_h2414 = _source677.dtor_Tuple_a0;
                    } else if (_source677.is_Array) {
                      DAST._IType _12734___mcc_h2416 = _source677.dtor_element;
                      BigInteger _12735___mcc_h2417 = _source677.dtor_dims;
                    } else if (_source677.is_Seq) {
                      DAST._IType _12736___mcc_h2420 = _source677.dtor_element;
                    } else if (_source677.is_Set) {
                      DAST._IType _12737___mcc_h2422 = _source677.dtor_element;
                    } else if (_source677.is_Multiset) {
                      DAST._IType _12738___mcc_h2424 = _source677.dtor_element;
                    } else if (_source677.is_Map) {
                      DAST._IType _12739___mcc_h2426 = _source677.dtor_key;
                      DAST._IType _12740___mcc_h2427 = _source677.dtor_value;
                    } else if (_source677.is_SetBuilder) {
                      DAST._IType _12741___mcc_h2430 = _source677.dtor_element;
                    } else if (_source677.is_MapBuilder) {
                      DAST._IType _12742___mcc_h2432 = _source677.dtor_key;
                      DAST._IType _12743___mcc_h2433 = _source677.dtor_value;
                    } else if (_source677.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _12744___mcc_h2436 = _source677.dtor_args;
                      DAST._IType _12745___mcc_h2437 = _source677.dtor_result;
                    } else if (_source677.is_Primitive) {
                      DAST._IPrimitive _12746___mcc_h2440 = _source677.dtor_Primitive_a0;
                    } else if (_source677.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _12747___mcc_h2442 = _source677.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _12748___mcc_h2444 = _source677.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _12749_recursiveGen;
                      DCOMPUTF16._IOwnership _12750_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12751_recIdents;
                      RAST._IExpr _out6833;
                      DCOMPUTF16._IOwnership _out6834;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6835;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6833, out _out6834, out _out6835);
                      _12749_recursiveGen = _out6833;
                      _12750_recOwned = _out6834;
                      _12751_recIdents = _out6835;
                      RAST._IExpr _out6836;
                      DCOMPUTF16._IOwnership _out6837;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12749_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12706_nativeToType).dtor_value), _12750_recOwned, expectedOwnership, out _out6836, out _out6837);
                      r = _out6836;
                      resultingOwnership = _out6837;
                      readIdents = _12751_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out6838;
                  DCOMPUTF16._IOwnership _out6839;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6840;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _12705_b), _12705_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out6838, out _out6839, out _out6840);
                  r = _out6838;
                  resultingOwnership = _out6839;
                  readIdents = _out6840;
                }
              }
            }
          } else if (_source674.is_Nullable) {
            DAST._IType _12752___mcc_h1254 = _source674.dtor_Nullable_a0;
            {
              RAST._IExpr _12753_recursiveGen;
              DCOMPUTF16._IOwnership _12754_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12755_recIdents;
              RAST._IExpr _out6841;
              DCOMPUTF16._IOwnership _out6842;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6843;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6841, out _out6842, out _out6843);
              _12753_recursiveGen = _out6841;
              _12754_recOwned = _out6842;
              _12755_recIdents = _out6843;
              r = _12753_recursiveGen;
              if (object.Equals(_12754_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out6844;
              DCOMPUTF16._IOwnership _out6845;
              DCOMPUTF16.COMP.FromOwnership(r, _12754_recOwned, expectedOwnership, out _out6844, out _out6845);
              r = _out6844;
              resultingOwnership = _out6845;
              readIdents = _12755_recIdents;
            }
          } else if (_source674.is_Tuple) {
            Dafny.ISequence<DAST._IType> _12756___mcc_h1256 = _source674.dtor_Tuple_a0;
            {
              RAST._IType _12757_fromTpeGen;
              RAST._IType _out6846;
              _out6846 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12757_fromTpeGen = _out6846;
              RAST._IType _12758_toTpeGen;
              RAST._IType _out6847;
              _out6847 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12758_toTpeGen = _out6847;
              RAST._IExpr _12759_recursiveGen;
              DCOMPUTF16._IOwnership _12760_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12761_recIdents;
              RAST._IExpr _out6848;
              DCOMPUTF16._IOwnership _out6849;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6850;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6848, out _out6849, out _out6850);
              _12759_recursiveGen = _out6848;
              _12760_recOwned = _out6849;
              _12761_recIdents = _out6850;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12759_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12757_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12758_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6851;
              DCOMPUTF16._IOwnership _out6852;
              DCOMPUTF16.COMP.FromOwnership(r, _12760_recOwned, expectedOwnership, out _out6851, out _out6852);
              r = _out6851;
              resultingOwnership = _out6852;
              readIdents = _12761_recIdents;
            }
          } else if (_source674.is_Array) {
            DAST._IType _12762___mcc_h1258 = _source674.dtor_element;
            BigInteger _12763___mcc_h1259 = _source674.dtor_dims;
            {
              RAST._IType _12764_fromTpeGen;
              RAST._IType _out6853;
              _out6853 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12764_fromTpeGen = _out6853;
              RAST._IType _12765_toTpeGen;
              RAST._IType _out6854;
              _out6854 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12765_toTpeGen = _out6854;
              RAST._IExpr _12766_recursiveGen;
              DCOMPUTF16._IOwnership _12767_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12768_recIdents;
              RAST._IExpr _out6855;
              DCOMPUTF16._IOwnership _out6856;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6857;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6855, out _out6856, out _out6857);
              _12766_recursiveGen = _out6855;
              _12767_recOwned = _out6856;
              _12768_recIdents = _out6857;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12766_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12764_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12765_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6858;
              DCOMPUTF16._IOwnership _out6859;
              DCOMPUTF16.COMP.FromOwnership(r, _12767_recOwned, expectedOwnership, out _out6858, out _out6859);
              r = _out6858;
              resultingOwnership = _out6859;
              readIdents = _12768_recIdents;
            }
          } else if (_source674.is_Seq) {
            DAST._IType _12769___mcc_h1262 = _source674.dtor_element;
            {
              RAST._IType _12770_fromTpeGen;
              RAST._IType _out6860;
              _out6860 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12770_fromTpeGen = _out6860;
              RAST._IType _12771_toTpeGen;
              RAST._IType _out6861;
              _out6861 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12771_toTpeGen = _out6861;
              RAST._IExpr _12772_recursiveGen;
              DCOMPUTF16._IOwnership _12773_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12774_recIdents;
              RAST._IExpr _out6862;
              DCOMPUTF16._IOwnership _out6863;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6864;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6862, out _out6863, out _out6864);
              _12772_recursiveGen = _out6862;
              _12773_recOwned = _out6863;
              _12774_recIdents = _out6864;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12772_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12770_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12771_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6865;
              DCOMPUTF16._IOwnership _out6866;
              DCOMPUTF16.COMP.FromOwnership(r, _12773_recOwned, expectedOwnership, out _out6865, out _out6866);
              r = _out6865;
              resultingOwnership = _out6866;
              readIdents = _12774_recIdents;
            }
          } else if (_source674.is_Set) {
            DAST._IType _12775___mcc_h1264 = _source674.dtor_element;
            {
              RAST._IType _12776_fromTpeGen;
              RAST._IType _out6867;
              _out6867 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12776_fromTpeGen = _out6867;
              RAST._IType _12777_toTpeGen;
              RAST._IType _out6868;
              _out6868 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12777_toTpeGen = _out6868;
              RAST._IExpr _12778_recursiveGen;
              DCOMPUTF16._IOwnership _12779_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12780_recIdents;
              RAST._IExpr _out6869;
              DCOMPUTF16._IOwnership _out6870;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6871;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6869, out _out6870, out _out6871);
              _12778_recursiveGen = _out6869;
              _12779_recOwned = _out6870;
              _12780_recIdents = _out6871;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12778_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12776_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12777_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6872;
              DCOMPUTF16._IOwnership _out6873;
              DCOMPUTF16.COMP.FromOwnership(r, _12779_recOwned, expectedOwnership, out _out6872, out _out6873);
              r = _out6872;
              resultingOwnership = _out6873;
              readIdents = _12780_recIdents;
            }
          } else if (_source674.is_Multiset) {
            DAST._IType _12781___mcc_h1266 = _source674.dtor_element;
            {
              RAST._IType _12782_fromTpeGen;
              RAST._IType _out6874;
              _out6874 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12782_fromTpeGen = _out6874;
              RAST._IType _12783_toTpeGen;
              RAST._IType _out6875;
              _out6875 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12783_toTpeGen = _out6875;
              RAST._IExpr _12784_recursiveGen;
              DCOMPUTF16._IOwnership _12785_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12786_recIdents;
              RAST._IExpr _out6876;
              DCOMPUTF16._IOwnership _out6877;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6878;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6876, out _out6877, out _out6878);
              _12784_recursiveGen = _out6876;
              _12785_recOwned = _out6877;
              _12786_recIdents = _out6878;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12784_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12782_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12783_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6879;
              DCOMPUTF16._IOwnership _out6880;
              DCOMPUTF16.COMP.FromOwnership(r, _12785_recOwned, expectedOwnership, out _out6879, out _out6880);
              r = _out6879;
              resultingOwnership = _out6880;
              readIdents = _12786_recIdents;
            }
          } else if (_source674.is_Map) {
            DAST._IType _12787___mcc_h1268 = _source674.dtor_key;
            DAST._IType _12788___mcc_h1269 = _source674.dtor_value;
            {
              RAST._IType _12789_fromTpeGen;
              RAST._IType _out6881;
              _out6881 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12789_fromTpeGen = _out6881;
              RAST._IType _12790_toTpeGen;
              RAST._IType _out6882;
              _out6882 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12790_toTpeGen = _out6882;
              RAST._IExpr _12791_recursiveGen;
              DCOMPUTF16._IOwnership _12792_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12793_recIdents;
              RAST._IExpr _out6883;
              DCOMPUTF16._IOwnership _out6884;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6885;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6883, out _out6884, out _out6885);
              _12791_recursiveGen = _out6883;
              _12792_recOwned = _out6884;
              _12793_recIdents = _out6885;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12791_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12789_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12790_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6886;
              DCOMPUTF16._IOwnership _out6887;
              DCOMPUTF16.COMP.FromOwnership(r, _12792_recOwned, expectedOwnership, out _out6886, out _out6887);
              r = _out6886;
              resultingOwnership = _out6887;
              readIdents = _12793_recIdents;
            }
          } else if (_source674.is_SetBuilder) {
            DAST._IType _12794___mcc_h1272 = _source674.dtor_element;
            {
              RAST._IType _12795_fromTpeGen;
              RAST._IType _out6888;
              _out6888 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12795_fromTpeGen = _out6888;
              RAST._IType _12796_toTpeGen;
              RAST._IType _out6889;
              _out6889 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12796_toTpeGen = _out6889;
              RAST._IExpr _12797_recursiveGen;
              DCOMPUTF16._IOwnership _12798_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12799_recIdents;
              RAST._IExpr _out6890;
              DCOMPUTF16._IOwnership _out6891;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6892;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6890, out _out6891, out _out6892);
              _12797_recursiveGen = _out6890;
              _12798_recOwned = _out6891;
              _12799_recIdents = _out6892;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12797_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12795_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12796_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6893;
              DCOMPUTF16._IOwnership _out6894;
              DCOMPUTF16.COMP.FromOwnership(r, _12798_recOwned, expectedOwnership, out _out6893, out _out6894);
              r = _out6893;
              resultingOwnership = _out6894;
              readIdents = _12799_recIdents;
            }
          } else if (_source674.is_MapBuilder) {
            DAST._IType _12800___mcc_h1274 = _source674.dtor_key;
            DAST._IType _12801___mcc_h1275 = _source674.dtor_value;
            {
              RAST._IType _12802_fromTpeGen;
              RAST._IType _out6895;
              _out6895 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12802_fromTpeGen = _out6895;
              RAST._IType _12803_toTpeGen;
              RAST._IType _out6896;
              _out6896 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12803_toTpeGen = _out6896;
              RAST._IExpr _12804_recursiveGen;
              DCOMPUTF16._IOwnership _12805_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12806_recIdents;
              RAST._IExpr _out6897;
              DCOMPUTF16._IOwnership _out6898;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6899;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6897, out _out6898, out _out6899);
              _12804_recursiveGen = _out6897;
              _12805_recOwned = _out6898;
              _12806_recIdents = _out6899;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12804_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12802_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12803_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6900;
              DCOMPUTF16._IOwnership _out6901;
              DCOMPUTF16.COMP.FromOwnership(r, _12805_recOwned, expectedOwnership, out _out6900, out _out6901);
              r = _out6900;
              resultingOwnership = _out6901;
              readIdents = _12806_recIdents;
            }
          } else if (_source674.is_Arrow) {
            Dafny.ISequence<DAST._IType> _12807___mcc_h1278 = _source674.dtor_args;
            DAST._IType _12808___mcc_h1279 = _source674.dtor_result;
            {
              RAST._IType _12809_fromTpeGen;
              RAST._IType _out6902;
              _out6902 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12809_fromTpeGen = _out6902;
              RAST._IType _12810_toTpeGen;
              RAST._IType _out6903;
              _out6903 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12810_toTpeGen = _out6903;
              RAST._IExpr _12811_recursiveGen;
              DCOMPUTF16._IOwnership _12812_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12813_recIdents;
              RAST._IExpr _out6904;
              DCOMPUTF16._IOwnership _out6905;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6906;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6904, out _out6905, out _out6906);
              _12811_recursiveGen = _out6904;
              _12812_recOwned = _out6905;
              _12813_recIdents = _out6906;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12811_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12809_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12810_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6907;
              DCOMPUTF16._IOwnership _out6908;
              DCOMPUTF16.COMP.FromOwnership(r, _12812_recOwned, expectedOwnership, out _out6907, out _out6908);
              r = _out6907;
              resultingOwnership = _out6908;
              readIdents = _12813_recIdents;
            }
          } else if (_source674.is_Primitive) {
            DAST._IPrimitive _12814___mcc_h1282 = _source674.dtor_Primitive_a0;
            DAST._IPrimitive _source679 = _12814___mcc_h1282;
            if (_source679.is_Int) {
              {
                RAST._IType _12815_rhsType;
                RAST._IType _out6909;
                _out6909 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12815_rhsType = _out6909;
                RAST._IExpr _12816_recursiveGen;
                DCOMPUTF16._IOwnership _12817___v102;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12818_recIdents;
                RAST._IExpr _out6910;
                DCOMPUTF16._IOwnership _out6911;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6912;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6910, out _out6911, out _out6912);
                _12816_recursiveGen = _out6910;
                _12817___v102 = _out6911;
                _12818_recIdents = _out6912;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_12816_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")}")));
                RAST._IExpr _out6913;
                DCOMPUTF16._IOwnership _out6914;
                DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6913, out _out6914);
                r = _out6913;
                resultingOwnership = _out6914;
                readIdents = _12818_recIdents;
              }
            } else if (_source679.is_Real) {
              {
                RAST._IType _12819_fromTpeGen;
                RAST._IType _out6915;
                _out6915 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12819_fromTpeGen = _out6915;
                RAST._IType _12820_toTpeGen;
                RAST._IType _out6916;
                _out6916 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12820_toTpeGen = _out6916;
                RAST._IExpr _12821_recursiveGen;
                DCOMPUTF16._IOwnership _12822_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12823_recIdents;
                RAST._IExpr _out6917;
                DCOMPUTF16._IOwnership _out6918;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6919;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6917, out _out6918, out _out6919);
                _12821_recursiveGen = _out6917;
                _12822_recOwned = _out6918;
                _12823_recIdents = _out6919;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12821_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12819_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12820_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6920;
                DCOMPUTF16._IOwnership _out6921;
                DCOMPUTF16.COMP.FromOwnership(r, _12822_recOwned, expectedOwnership, out _out6920, out _out6921);
                r = _out6920;
                resultingOwnership = _out6921;
                readIdents = _12823_recIdents;
              }
            } else if (_source679.is_String) {
              {
                RAST._IType _12824_fromTpeGen;
                RAST._IType _out6922;
                _out6922 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12824_fromTpeGen = _out6922;
                RAST._IType _12825_toTpeGen;
                RAST._IType _out6923;
                _out6923 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12825_toTpeGen = _out6923;
                RAST._IExpr _12826_recursiveGen;
                DCOMPUTF16._IOwnership _12827_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12828_recIdents;
                RAST._IExpr _out6924;
                DCOMPUTF16._IOwnership _out6925;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6926;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6924, out _out6925, out _out6926);
                _12826_recursiveGen = _out6924;
                _12827_recOwned = _out6925;
                _12828_recIdents = _out6926;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12826_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12824_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12825_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6927;
                DCOMPUTF16._IOwnership _out6928;
                DCOMPUTF16.COMP.FromOwnership(r, _12827_recOwned, expectedOwnership, out _out6927, out _out6928);
                r = _out6927;
                resultingOwnership = _out6928;
                readIdents = _12828_recIdents;
              }
            } else if (_source679.is_Bool) {
              {
                RAST._IType _12829_fromTpeGen;
                RAST._IType _out6929;
                _out6929 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12829_fromTpeGen = _out6929;
                RAST._IType _12830_toTpeGen;
                RAST._IType _out6930;
                _out6930 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12830_toTpeGen = _out6930;
                RAST._IExpr _12831_recursiveGen;
                DCOMPUTF16._IOwnership _12832_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12833_recIdents;
                RAST._IExpr _out6931;
                DCOMPUTF16._IOwnership _out6932;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6933;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6931, out _out6932, out _out6933);
                _12831_recursiveGen = _out6931;
                _12832_recOwned = _out6932;
                _12833_recIdents = _out6933;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12831_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12829_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12830_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6934;
                DCOMPUTF16._IOwnership _out6935;
                DCOMPUTF16.COMP.FromOwnership(r, _12832_recOwned, expectedOwnership, out _out6934, out _out6935);
                r = _out6934;
                resultingOwnership = _out6935;
                readIdents = _12833_recIdents;
              }
            } else {
              {
                RAST._IType _12834_fromTpeGen;
                RAST._IType _out6936;
                _out6936 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12834_fromTpeGen = _out6936;
                RAST._IType _12835_toTpeGen;
                RAST._IType _out6937;
                _out6937 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12835_toTpeGen = _out6937;
                RAST._IExpr _12836_recursiveGen;
                DCOMPUTF16._IOwnership _12837_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12838_recIdents;
                RAST._IExpr _out6938;
                DCOMPUTF16._IOwnership _out6939;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6940;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6938, out _out6939, out _out6940);
                _12836_recursiveGen = _out6938;
                _12837_recOwned = _out6939;
                _12838_recIdents = _out6940;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12836_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12834_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12835_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6941;
                DCOMPUTF16._IOwnership _out6942;
                DCOMPUTF16.COMP.FromOwnership(r, _12837_recOwned, expectedOwnership, out _out6941, out _out6942);
                r = _out6941;
                resultingOwnership = _out6942;
                readIdents = _12838_recIdents;
              }
            }
          } else if (_source674.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _12839___mcc_h1284 = _source674.dtor_Passthrough_a0;
            {
              RAST._IExpr _12840_recursiveGen;
              DCOMPUTF16._IOwnership _12841___v107;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12842_recIdents;
              RAST._IExpr _out6943;
              DCOMPUTF16._IOwnership _out6944;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6945;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6943, out _out6944, out _out6945);
              _12840_recursiveGen = _out6943;
              _12841___v107 = _out6944;
              _12842_recIdents = _out6945;
              RAST._IType _12843_toTpeGen;
              RAST._IType _out6946;
              _out6946 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12843_toTpeGen = _out6946;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_12840_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_12843_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out6947;
              DCOMPUTF16._IOwnership _out6948;
              DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6947, out _out6948);
              r = _out6947;
              resultingOwnership = _out6948;
              readIdents = _12842_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _12844___mcc_h1286 = _source674.dtor_TypeArg_a0;
            {
              RAST._IType _12845_fromTpeGen;
              RAST._IType _out6949;
              _out6949 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12845_fromTpeGen = _out6949;
              RAST._IType _12846_toTpeGen;
              RAST._IType _out6950;
              _out6950 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12846_toTpeGen = _out6950;
              RAST._IExpr _12847_recursiveGen;
              DCOMPUTF16._IOwnership _12848_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12849_recIdents;
              RAST._IExpr _out6951;
              DCOMPUTF16._IOwnership _out6952;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6953;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6951, out _out6952, out _out6953);
              _12847_recursiveGen = _out6951;
              _12848_recOwned = _out6952;
              _12849_recIdents = _out6953;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12847_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12845_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12846_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6954;
              DCOMPUTF16._IOwnership _out6955;
              DCOMPUTF16.COMP.FromOwnership(r, _12848_recOwned, expectedOwnership, out _out6954, out _out6955);
              r = _out6954;
              resultingOwnership = _out6955;
              readIdents = _12849_recIdents;
            }
          }
        } else {
          Dafny.ISequence<Dafny.Rune> _12850___mcc_h1288 = _source561.dtor_TypeArg_a0;
          DAST._IType _source680 = _9573___mcc_h1;
          if (_source680.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12851___mcc_h1292 = _source680.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _12852___mcc_h1293 = _source680.dtor_typeArgs;
            DAST._IResolvedType _12853___mcc_h1294 = _source680.dtor_resolved;
            DAST._IResolvedType _source681 = _12853___mcc_h1294;
            if (_source681.is_AllocatedDatatype) {
              DAST._IDatatypeType _12854___mcc_h1298 = _source681.dtor_datatypeType;
              {
                RAST._IType _12855_fromTpeGen;
                RAST._IType _out6956;
                _out6956 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12855_fromTpeGen = _out6956;
                RAST._IType _12856_toTpeGen;
                RAST._IType _out6957;
                _out6957 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12856_toTpeGen = _out6957;
                RAST._IExpr _12857_recursiveGen;
                DCOMPUTF16._IOwnership _12858_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12859_recIdents;
                RAST._IExpr _out6958;
                DCOMPUTF16._IOwnership _out6959;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6960;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6958, out _out6959, out _out6960);
                _12857_recursiveGen = _out6958;
                _12858_recOwned = _out6959;
                _12859_recIdents = _out6960;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12857_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12855_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12856_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6961;
                DCOMPUTF16._IOwnership _out6962;
                DCOMPUTF16.COMP.FromOwnership(r, _12858_recOwned, expectedOwnership, out _out6961, out _out6962);
                r = _out6961;
                resultingOwnership = _out6962;
                readIdents = _12859_recIdents;
              }
            } else if (_source681.is_Datatype) {
              DAST._IDatatypeType _12860___mcc_h1300 = _source681.dtor_datatypeType;
              {
                RAST._IType _12861_fromTpeGen;
                RAST._IType _out6963;
                _out6963 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12861_fromTpeGen = _out6963;
                RAST._IType _12862_toTpeGen;
                RAST._IType _out6964;
                _out6964 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12862_toTpeGen = _out6964;
                RAST._IExpr _12863_recursiveGen;
                DCOMPUTF16._IOwnership _12864_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12865_recIdents;
                RAST._IExpr _out6965;
                DCOMPUTF16._IOwnership _out6966;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6967;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6965, out _out6966, out _out6967);
                _12863_recursiveGen = _out6965;
                _12864_recOwned = _out6966;
                _12865_recIdents = _out6967;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12863_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12861_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12862_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6968;
                DCOMPUTF16._IOwnership _out6969;
                DCOMPUTF16.COMP.FromOwnership(r, _12864_recOwned, expectedOwnership, out _out6968, out _out6969);
                r = _out6968;
                resultingOwnership = _out6969;
                readIdents = _12865_recIdents;
              }
            } else if (_source681.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12866___mcc_h1302 = _source681.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _12867___mcc_h1303 = _source681.dtor_attributes;
              {
                RAST._IType _12868_fromTpeGen;
                RAST._IType _out6970;
                _out6970 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
                _12868_fromTpeGen = _out6970;
                RAST._IType _12869_toTpeGen;
                RAST._IType _out6971;
                _out6971 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                _12869_toTpeGen = _out6971;
                RAST._IExpr _12870_recursiveGen;
                DCOMPUTF16._IOwnership _12871_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12872_recIdents;
                RAST._IExpr _out6972;
                DCOMPUTF16._IOwnership _out6973;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6974;
                DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6972, out _out6973, out _out6974);
                _12870_recursiveGen = _out6972;
                _12871_recOwned = _out6973;
                _12872_recIdents = _out6974;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12870_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12868_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12869_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6975;
                DCOMPUTF16._IOwnership _out6976;
                DCOMPUTF16.COMP.FromOwnership(r, _12871_recOwned, expectedOwnership, out _out6975, out _out6976);
                r = _out6975;
                resultingOwnership = _out6976;
                readIdents = _12872_recIdents;
              }
            } else {
              DAST._IType _12873___mcc_h1306 = _source681.dtor_baseType;
              DAST._INewtypeRange _12874___mcc_h1307 = _source681.dtor_range;
              bool _12875___mcc_h1308 = _source681.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _12876___mcc_h1309 = _source681.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _12877_attributes = _12876___mcc_h1309;
              bool _12878_erase = _12875___mcc_h1308;
              DAST._INewtypeRange _12879_range = _12874___mcc_h1307;
              DAST._IType _12880_b = _12873___mcc_h1306;
              {
                Std.Wrappers._IOption<RAST._IType> _12881_nativeToType;
                _12881_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12880_b, _12879_range);
                if (object.Equals(_9567_fromTpe, _12880_b)) {
                  RAST._IExpr _12882_recursiveGen;
                  DCOMPUTF16._IOwnership _12883_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12884_recIdents;
                  RAST._IExpr _out6977;
                  DCOMPUTF16._IOwnership _out6978;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6979;
                  DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6977, out _out6978, out _out6979);
                  _12882_recursiveGen = _out6977;
                  _12883_recOwned = _out6978;
                  _12884_recIdents = _out6979;
                  readIdents = _12884_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source682 = _12881_nativeToType;
                  if (_source682.is_None) {
                    if (_12878_erase) {
                      r = _12882_recursiveGen;
                    } else {
                      RAST._IType _12885_rhsType;
                      RAST._IType _out6980;
                      _out6980 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
                      _12885_rhsType = _out6980;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12885_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12882_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out6981;
                    DCOMPUTF16._IOwnership _out6982;
                    DCOMPUTF16.COMP.FromOwnership(r, _12883_recOwned, expectedOwnership, out _out6981, out _out6982);
                    r = _out6981;
                    resultingOwnership = _out6982;
                  } else {
                    RAST._IType _12886___mcc_h2446 = _source682.dtor_value;
                    RAST._IType _12887_v = _12886___mcc_h2446;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12882_recursiveGen, RAST.Expr.create_ExprFromType(_12887_v)));
                    RAST._IExpr _out6983;
                    DCOMPUTF16._IOwnership _out6984;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6983, out _out6984);
                    r = _out6983;
                    resultingOwnership = _out6984;
                  }
                } else {
                  if ((_12881_nativeToType).is_Some) {
                    DAST._IType _source683 = _9567_fromTpe;
                    if (_source683.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12888___mcc_h2447 = _source683.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _12889___mcc_h2448 = _source683.dtor_typeArgs;
                      DAST._IResolvedType _12890___mcc_h2449 = _source683.dtor_resolved;
                      DAST._IResolvedType _source684 = _12890___mcc_h2449;
                      if (_source684.is_AllocatedDatatype) {
                        DAST._IDatatypeType _12891___mcc_h2453 = _source684.dtor_datatypeType;
                      } else if (_source684.is_Datatype) {
                        DAST._IDatatypeType _12892___mcc_h2455 = _source684.dtor_datatypeType;
                      } else if (_source684.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12893___mcc_h2457 = _source684.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _12894___mcc_h2458 = _source684.dtor_attributes;
                      } else {
                        DAST._IType _12895___mcc_h2461 = _source684.dtor_baseType;
                        DAST._INewtypeRange _12896___mcc_h2462 = _source684.dtor_range;
                        bool _12897___mcc_h2463 = _source684.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _12898___mcc_h2464 = _source684.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _12899_attributes0 = _12898___mcc_h2464;
                        bool _12900_erase0 = _12897___mcc_h2463;
                        DAST._INewtypeRange _12901_range0 = _12896___mcc_h2462;
                        DAST._IType _12902_b0 = _12895___mcc_h2461;
                        {
                          Std.Wrappers._IOption<RAST._IType> _12903_nativeFromType;
                          _12903_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12902_b0, _12901_range0);
                          if ((_12903_nativeFromType).is_Some) {
                            RAST._IExpr _12904_recursiveGen;
                            DCOMPUTF16._IOwnership _12905_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12906_recIdents;
                            RAST._IExpr _out6985;
                            DCOMPUTF16._IOwnership _out6986;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6987;
                            DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6985, out _out6986, out _out6987);
                            _12904_recursiveGen = _out6985;
                            _12905_recOwned = _out6986;
                            _12906_recIdents = _out6987;
                            RAST._IExpr _out6988;
                            DCOMPUTF16._IOwnership _out6989;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12904_recursiveGen, (_12881_nativeToType).dtor_value), _12905_recOwned, expectedOwnership, out _out6988, out _out6989);
                            r = _out6988;
                            resultingOwnership = _out6989;
                            readIdents = _12906_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source683.is_Nullable) {
                      DAST._IType _12907___mcc_h2469 = _source683.dtor_Nullable_a0;
                    } else if (_source683.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _12908___mcc_h2471 = _source683.dtor_Tuple_a0;
                    } else if (_source683.is_Array) {
                      DAST._IType _12909___mcc_h2473 = _source683.dtor_element;
                      BigInteger _12910___mcc_h2474 = _source683.dtor_dims;
                    } else if (_source683.is_Seq) {
                      DAST._IType _12911___mcc_h2477 = _source683.dtor_element;
                    } else if (_source683.is_Set) {
                      DAST._IType _12912___mcc_h2479 = _source683.dtor_element;
                    } else if (_source683.is_Multiset) {
                      DAST._IType _12913___mcc_h2481 = _source683.dtor_element;
                    } else if (_source683.is_Map) {
                      DAST._IType _12914___mcc_h2483 = _source683.dtor_key;
                      DAST._IType _12915___mcc_h2484 = _source683.dtor_value;
                    } else if (_source683.is_SetBuilder) {
                      DAST._IType _12916___mcc_h2487 = _source683.dtor_element;
                    } else if (_source683.is_MapBuilder) {
                      DAST._IType _12917___mcc_h2489 = _source683.dtor_key;
                      DAST._IType _12918___mcc_h2490 = _source683.dtor_value;
                    } else if (_source683.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _12919___mcc_h2493 = _source683.dtor_args;
                      DAST._IType _12920___mcc_h2494 = _source683.dtor_result;
                    } else if (_source683.is_Primitive) {
                      DAST._IPrimitive _12921___mcc_h2497 = _source683.dtor_Primitive_a0;
                    } else if (_source683.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _12922___mcc_h2499 = _source683.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _12923___mcc_h2501 = _source683.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9567_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _12924_recursiveGen;
                      DCOMPUTF16._IOwnership _12925_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12926_recIdents;
                      RAST._IExpr _out6990;
                      DCOMPUTF16._IOwnership _out6991;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6992;
                      DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6990, out _out6991, out _out6992);
                      _12924_recursiveGen = _out6990;
                      _12925_recOwned = _out6991;
                      _12926_recIdents = _out6992;
                      RAST._IExpr _out6993;
                      DCOMPUTF16._IOwnership _out6994;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12924_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12881_nativeToType).dtor_value), _12925_recOwned, expectedOwnership, out _out6993, out _out6994);
                      r = _out6993;
                      resultingOwnership = _out6994;
                      readIdents = _12926_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out6995;
                  DCOMPUTF16._IOwnership _out6996;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6997;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9566_expr, _9567_fromTpe, _12880_b), _12880_b, _9568_toTpe), selfIdent, env, expectedOwnership, out _out6995, out _out6996, out _out6997);
                  r = _out6995;
                  resultingOwnership = _out6996;
                  readIdents = _out6997;
                }
              }
            }
          } else if (_source680.is_Nullable) {
            DAST._IType _12927___mcc_h1314 = _source680.dtor_Nullable_a0;
            {
              RAST._IExpr _12928_recursiveGen;
              DCOMPUTF16._IOwnership _12929_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12930_recIdents;
              RAST._IExpr _out6998;
              DCOMPUTF16._IOwnership _out6999;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7000;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out6998, out _out6999, out _out7000);
              _12928_recursiveGen = _out6998;
              _12929_recOwned = _out6999;
              _12930_recIdents = _out7000;
              r = _12928_recursiveGen;
              if (object.Equals(_12929_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out7001;
              DCOMPUTF16._IOwnership _out7002;
              DCOMPUTF16.COMP.FromOwnership(r, _12929_recOwned, expectedOwnership, out _out7001, out _out7002);
              r = _out7001;
              resultingOwnership = _out7002;
              readIdents = _12930_recIdents;
            }
          } else if (_source680.is_Tuple) {
            Dafny.ISequence<DAST._IType> _12931___mcc_h1316 = _source680.dtor_Tuple_a0;
            {
              RAST._IType _12932_fromTpeGen;
              RAST._IType _out7003;
              _out7003 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12932_fromTpeGen = _out7003;
              RAST._IType _12933_toTpeGen;
              RAST._IType _out7004;
              _out7004 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12933_toTpeGen = _out7004;
              RAST._IExpr _12934_recursiveGen;
              DCOMPUTF16._IOwnership _12935_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12936_recIdents;
              RAST._IExpr _out7005;
              DCOMPUTF16._IOwnership _out7006;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7007;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7005, out _out7006, out _out7007);
              _12934_recursiveGen = _out7005;
              _12935_recOwned = _out7006;
              _12936_recIdents = _out7007;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12934_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12932_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12933_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7008;
              DCOMPUTF16._IOwnership _out7009;
              DCOMPUTF16.COMP.FromOwnership(r, _12935_recOwned, expectedOwnership, out _out7008, out _out7009);
              r = _out7008;
              resultingOwnership = _out7009;
              readIdents = _12936_recIdents;
            }
          } else if (_source680.is_Array) {
            DAST._IType _12937___mcc_h1318 = _source680.dtor_element;
            BigInteger _12938___mcc_h1319 = _source680.dtor_dims;
            {
              RAST._IType _12939_fromTpeGen;
              RAST._IType _out7010;
              _out7010 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12939_fromTpeGen = _out7010;
              RAST._IType _12940_toTpeGen;
              RAST._IType _out7011;
              _out7011 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12940_toTpeGen = _out7011;
              RAST._IExpr _12941_recursiveGen;
              DCOMPUTF16._IOwnership _12942_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12943_recIdents;
              RAST._IExpr _out7012;
              DCOMPUTF16._IOwnership _out7013;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7014;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7012, out _out7013, out _out7014);
              _12941_recursiveGen = _out7012;
              _12942_recOwned = _out7013;
              _12943_recIdents = _out7014;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12941_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12939_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12940_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7015;
              DCOMPUTF16._IOwnership _out7016;
              DCOMPUTF16.COMP.FromOwnership(r, _12942_recOwned, expectedOwnership, out _out7015, out _out7016);
              r = _out7015;
              resultingOwnership = _out7016;
              readIdents = _12943_recIdents;
            }
          } else if (_source680.is_Seq) {
            DAST._IType _12944___mcc_h1322 = _source680.dtor_element;
            {
              RAST._IType _12945_fromTpeGen;
              RAST._IType _out7017;
              _out7017 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12945_fromTpeGen = _out7017;
              RAST._IType _12946_toTpeGen;
              RAST._IType _out7018;
              _out7018 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12946_toTpeGen = _out7018;
              RAST._IExpr _12947_recursiveGen;
              DCOMPUTF16._IOwnership _12948_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12949_recIdents;
              RAST._IExpr _out7019;
              DCOMPUTF16._IOwnership _out7020;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7021;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7019, out _out7020, out _out7021);
              _12947_recursiveGen = _out7019;
              _12948_recOwned = _out7020;
              _12949_recIdents = _out7021;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12947_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12945_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12946_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7022;
              DCOMPUTF16._IOwnership _out7023;
              DCOMPUTF16.COMP.FromOwnership(r, _12948_recOwned, expectedOwnership, out _out7022, out _out7023);
              r = _out7022;
              resultingOwnership = _out7023;
              readIdents = _12949_recIdents;
            }
          } else if (_source680.is_Set) {
            DAST._IType _12950___mcc_h1324 = _source680.dtor_element;
            {
              RAST._IType _12951_fromTpeGen;
              RAST._IType _out7024;
              _out7024 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12951_fromTpeGen = _out7024;
              RAST._IType _12952_toTpeGen;
              RAST._IType _out7025;
              _out7025 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12952_toTpeGen = _out7025;
              RAST._IExpr _12953_recursiveGen;
              DCOMPUTF16._IOwnership _12954_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12955_recIdents;
              RAST._IExpr _out7026;
              DCOMPUTF16._IOwnership _out7027;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7028;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7026, out _out7027, out _out7028);
              _12953_recursiveGen = _out7026;
              _12954_recOwned = _out7027;
              _12955_recIdents = _out7028;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12953_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12951_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12952_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7029;
              DCOMPUTF16._IOwnership _out7030;
              DCOMPUTF16.COMP.FromOwnership(r, _12954_recOwned, expectedOwnership, out _out7029, out _out7030);
              r = _out7029;
              resultingOwnership = _out7030;
              readIdents = _12955_recIdents;
            }
          } else if (_source680.is_Multiset) {
            DAST._IType _12956___mcc_h1326 = _source680.dtor_element;
            {
              RAST._IType _12957_fromTpeGen;
              RAST._IType _out7031;
              _out7031 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12957_fromTpeGen = _out7031;
              RAST._IType _12958_toTpeGen;
              RAST._IType _out7032;
              _out7032 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12958_toTpeGen = _out7032;
              RAST._IExpr _12959_recursiveGen;
              DCOMPUTF16._IOwnership _12960_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12961_recIdents;
              RAST._IExpr _out7033;
              DCOMPUTF16._IOwnership _out7034;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7035;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7033, out _out7034, out _out7035);
              _12959_recursiveGen = _out7033;
              _12960_recOwned = _out7034;
              _12961_recIdents = _out7035;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12959_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12957_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12958_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7036;
              DCOMPUTF16._IOwnership _out7037;
              DCOMPUTF16.COMP.FromOwnership(r, _12960_recOwned, expectedOwnership, out _out7036, out _out7037);
              r = _out7036;
              resultingOwnership = _out7037;
              readIdents = _12961_recIdents;
            }
          } else if (_source680.is_Map) {
            DAST._IType _12962___mcc_h1328 = _source680.dtor_key;
            DAST._IType _12963___mcc_h1329 = _source680.dtor_value;
            {
              RAST._IType _12964_fromTpeGen;
              RAST._IType _out7038;
              _out7038 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12964_fromTpeGen = _out7038;
              RAST._IType _12965_toTpeGen;
              RAST._IType _out7039;
              _out7039 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12965_toTpeGen = _out7039;
              RAST._IExpr _12966_recursiveGen;
              DCOMPUTF16._IOwnership _12967_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12968_recIdents;
              RAST._IExpr _out7040;
              DCOMPUTF16._IOwnership _out7041;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7042;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7040, out _out7041, out _out7042);
              _12966_recursiveGen = _out7040;
              _12967_recOwned = _out7041;
              _12968_recIdents = _out7042;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12966_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12964_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12965_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7043;
              DCOMPUTF16._IOwnership _out7044;
              DCOMPUTF16.COMP.FromOwnership(r, _12967_recOwned, expectedOwnership, out _out7043, out _out7044);
              r = _out7043;
              resultingOwnership = _out7044;
              readIdents = _12968_recIdents;
            }
          } else if (_source680.is_SetBuilder) {
            DAST._IType _12969___mcc_h1332 = _source680.dtor_element;
            {
              RAST._IType _12970_fromTpeGen;
              RAST._IType _out7045;
              _out7045 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12970_fromTpeGen = _out7045;
              RAST._IType _12971_toTpeGen;
              RAST._IType _out7046;
              _out7046 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12971_toTpeGen = _out7046;
              RAST._IExpr _12972_recursiveGen;
              DCOMPUTF16._IOwnership _12973_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12974_recIdents;
              RAST._IExpr _out7047;
              DCOMPUTF16._IOwnership _out7048;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7049;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7047, out _out7048, out _out7049);
              _12972_recursiveGen = _out7047;
              _12973_recOwned = _out7048;
              _12974_recIdents = _out7049;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12972_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12970_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12971_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7050;
              DCOMPUTF16._IOwnership _out7051;
              DCOMPUTF16.COMP.FromOwnership(r, _12973_recOwned, expectedOwnership, out _out7050, out _out7051);
              r = _out7050;
              resultingOwnership = _out7051;
              readIdents = _12974_recIdents;
            }
          } else if (_source680.is_MapBuilder) {
            DAST._IType _12975___mcc_h1334 = _source680.dtor_key;
            DAST._IType _12976___mcc_h1335 = _source680.dtor_value;
            {
              RAST._IType _12977_fromTpeGen;
              RAST._IType _out7052;
              _out7052 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12977_fromTpeGen = _out7052;
              RAST._IType _12978_toTpeGen;
              RAST._IType _out7053;
              _out7053 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12978_toTpeGen = _out7053;
              RAST._IExpr _12979_recursiveGen;
              DCOMPUTF16._IOwnership _12980_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12981_recIdents;
              RAST._IExpr _out7054;
              DCOMPUTF16._IOwnership _out7055;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7056;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7054, out _out7055, out _out7056);
              _12979_recursiveGen = _out7054;
              _12980_recOwned = _out7055;
              _12981_recIdents = _out7056;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12979_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12977_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12978_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7057;
              DCOMPUTF16._IOwnership _out7058;
              DCOMPUTF16.COMP.FromOwnership(r, _12980_recOwned, expectedOwnership, out _out7057, out _out7058);
              r = _out7057;
              resultingOwnership = _out7058;
              readIdents = _12981_recIdents;
            }
          } else if (_source680.is_Arrow) {
            Dafny.ISequence<DAST._IType> _12982___mcc_h1338 = _source680.dtor_args;
            DAST._IType _12983___mcc_h1339 = _source680.dtor_result;
            {
              RAST._IType _12984_fromTpeGen;
              RAST._IType _out7059;
              _out7059 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12984_fromTpeGen = _out7059;
              RAST._IType _12985_toTpeGen;
              RAST._IType _out7060;
              _out7060 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12985_toTpeGen = _out7060;
              RAST._IExpr _12986_recursiveGen;
              DCOMPUTF16._IOwnership _12987_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12988_recIdents;
              RAST._IExpr _out7061;
              DCOMPUTF16._IOwnership _out7062;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7063;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7061, out _out7062, out _out7063);
              _12986_recursiveGen = _out7061;
              _12987_recOwned = _out7062;
              _12988_recIdents = _out7063;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12986_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12984_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12985_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7064;
              DCOMPUTF16._IOwnership _out7065;
              DCOMPUTF16.COMP.FromOwnership(r, _12987_recOwned, expectedOwnership, out _out7064, out _out7065);
              r = _out7064;
              resultingOwnership = _out7065;
              readIdents = _12988_recIdents;
            }
          } else if (_source680.is_Primitive) {
            DAST._IPrimitive _12989___mcc_h1342 = _source680.dtor_Primitive_a0;
            {
              RAST._IType _12990_fromTpeGen;
              RAST._IType _out7066;
              _out7066 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12990_fromTpeGen = _out7066;
              RAST._IType _12991_toTpeGen;
              RAST._IType _out7067;
              _out7067 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12991_toTpeGen = _out7067;
              RAST._IExpr _12992_recursiveGen;
              DCOMPUTF16._IOwnership _12993_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12994_recIdents;
              RAST._IExpr _out7068;
              DCOMPUTF16._IOwnership _out7069;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7070;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7068, out _out7069, out _out7070);
              _12992_recursiveGen = _out7068;
              _12993_recOwned = _out7069;
              _12994_recIdents = _out7070;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12992_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12990_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12991_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7071;
              DCOMPUTF16._IOwnership _out7072;
              DCOMPUTF16.COMP.FromOwnership(r, _12993_recOwned, expectedOwnership, out _out7071, out _out7072);
              r = _out7071;
              resultingOwnership = _out7072;
              readIdents = _12994_recIdents;
            }
          } else if (_source680.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _12995___mcc_h1344 = _source680.dtor_Passthrough_a0;
            {
              RAST._IType _12996_fromTpeGen;
              RAST._IType _out7073;
              _out7073 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _12996_fromTpeGen = _out7073;
              RAST._IType _12997_toTpeGen;
              RAST._IType _out7074;
              _out7074 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _12997_toTpeGen = _out7074;
              RAST._IExpr _12998_recursiveGen;
              DCOMPUTF16._IOwnership _12999_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13000_recIdents;
              RAST._IExpr _out7075;
              DCOMPUTF16._IOwnership _out7076;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7077;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7075, out _out7076, out _out7077);
              _12998_recursiveGen = _out7075;
              _12999_recOwned = _out7076;
              _13000_recIdents = _out7077;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12998_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12996_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12997_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7078;
              DCOMPUTF16._IOwnership _out7079;
              DCOMPUTF16.COMP.FromOwnership(r, _12999_recOwned, expectedOwnership, out _out7078, out _out7079);
              r = _out7078;
              resultingOwnership = _out7079;
              readIdents = _13000_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _13001___mcc_h1346 = _source680.dtor_TypeArg_a0;
            {
              RAST._IType _13002_fromTpeGen;
              RAST._IType _out7080;
              _out7080 = DCOMPUTF16.COMP.GenType(_9567_fromTpe, true, false);
              _13002_fromTpeGen = _out7080;
              RAST._IType _13003_toTpeGen;
              RAST._IType _out7081;
              _out7081 = DCOMPUTF16.COMP.GenType(_9568_toTpe, true, false);
              _13003_toTpeGen = _out7081;
              RAST._IExpr _13004_recursiveGen;
              DCOMPUTF16._IOwnership _13005_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13006_recIdents;
              RAST._IExpr _out7082;
              DCOMPUTF16._IOwnership _out7083;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7084;
              DCOMPUTF16.COMP.GenExpr(_9566_expr, selfIdent, env, expectedOwnership, out _out7082, out _out7083, out _out7084);
              _13004_recursiveGen = _out7082;
              _13005_recOwned = _out7083;
              _13006_recIdents = _out7084;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13004_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_13002_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_13003_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7085;
              DCOMPUTF16._IOwnership _out7086;
              DCOMPUTF16.COMP.FromOwnership(r, _13005_recOwned, expectedOwnership, out _out7085, out _out7086);
              r = _out7085;
              resultingOwnership = _out7086;
              readIdents = _13006_recIdents;
            }
          }
        }
      }
      return ;
    }
    public static void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source685 = e;
      if (_source685.is_Literal) {
        DAST._ILiteral _13007___mcc_h0 = _source685.dtor_Literal_a0;
        RAST._IExpr _out7087;
        DCOMPUTF16._IOwnership _out7088;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7089;
        DCOMPUTF16.COMP.GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out7087, out _out7088, out _out7089);
        r = _out7087;
        resultingOwnership = _out7088;
        readIdents = _out7089;
      } else if (_source685.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _13008___mcc_h1 = _source685.dtor_Ident_a0;
        Dafny.ISequence<Dafny.Rune> _13009_name = _13008___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _13010_rName;
          _13010_rName = DCOMPUTF16.__default.escapeIdent(_13009_name);
          r = RAST.Expr.create_Identifier(_13010_rName);
          Std.Wrappers._IOption<RAST._IType> _13011_tpe;
          _13011_tpe = (env).GetType(_13010_rName);
          Std.Wrappers._IOption<RAST._IType> _13012_placeboOpt;
          _13012_placeboOpt = (((_13011_tpe).is_Some) ? (((_13011_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
          bool _13013_currentlyBorrowed;
          _13013_currentlyBorrowed = (env).IsBorrowed(_13009_name);
          bool _13014_noNeedOfClone;
          _13014_noNeedOfClone = (env).HasCopySemantics(_13009_name);
          if ((_13012_placeboOpt).is_Some) {
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            _13013_currentlyBorrowed = false;
            _13014_noNeedOfClone = true;
          }
          if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed())) {
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut())) {
            r = RAST.__default.BorrowMut(r);
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
          } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
            if (!(_13014_noNeedOfClone)) {
              r = RAST.__default.Clone(r);
            }
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          } else if (_13013_currentlyBorrowed) {
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          } else {
            r = RAST.__default.Borrow(r);
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_13009_name);
          return ;
        }
      } else if (_source685.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13015___mcc_h2 = _source685.dtor_Companion_a0;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13016_path = _13015___mcc_h2;
        {
          RAST._IExpr _out7090;
          _out7090 = DCOMPUTF16.COMP.GenPathExpr(_13016_path);
          r = _out7090;
          RAST._IExpr _out7091;
          DCOMPUTF16._IOwnership _out7092;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7091, out _out7092);
          r = _out7091;
          resultingOwnership = _out7092;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source685.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _13017___mcc_h3 = _source685.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IExpression> _13018_values = _13017___mcc_h3;
        {
          Dafny.ISequence<Dafny.Rune> _13019_s;
          _13019_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(");
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _13020_i;
          _13020_i = BigInteger.Zero;
          while ((_13020_i) < (new BigInteger((_13018_values).Count))) {
            if ((_13020_i).Sign == 1) {
              _13019_s = Dafny.Sequence<Dafny.Rune>.Concat(_13019_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
            }
            RAST._IExpr _13021_recursiveGen;
            DCOMPUTF16._IOwnership _13022___v110;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13023_recIdents;
            RAST._IExpr _out7093;
            DCOMPUTF16._IOwnership _out7094;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7095;
            DCOMPUTF16.COMP.GenExpr((_13018_values).Select(_13020_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7093, out _out7094, out _out7095);
            _13021_recursiveGen = _out7093;
            _13022___v110 = _out7094;
            _13023_recIdents = _out7095;
            _13019_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13019_s, (_13021_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13023_recIdents);
            _13020_i = (_13020_i) + (BigInteger.One);
          }
          _13019_s = Dafny.Sequence<Dafny.Rune>.Concat(_13019_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          r = RAST.Expr.create_RawExpr(_13019_s);
          RAST._IExpr _out7096;
          DCOMPUTF16._IOwnership _out7097;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7096, out _out7097);
          r = _out7096;
          resultingOwnership = _out7097;
          return ;
        }
      } else if (_source685.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13024___mcc_h4 = _source685.dtor_path;
        Dafny.ISequence<DAST._IType> _13025___mcc_h5 = _source685.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _13026___mcc_h6 = _source685.dtor_args;
        Dafny.ISequence<DAST._IExpression> _13027_args = _13026___mcc_h6;
        Dafny.ISequence<DAST._IType> _13028_typeArgs = _13025___mcc_h5;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13029_path = _13024___mcc_h4;
        {
          RAST._IExpr _out7098;
          _out7098 = DCOMPUTF16.COMP.GenPathExpr(_13029_path);
          r = _out7098;
          if ((new BigInteger((_13028_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _13030_typeExprs;
            _13030_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi32 = new BigInteger((_13028_typeArgs).Count);
            for (BigInteger _13031_i = BigInteger.Zero; _13031_i < _hi32; _13031_i++) {
              RAST._IType _13032_typeExpr;
              RAST._IType _out7099;
              _out7099 = DCOMPUTF16.COMP.GenType((_13028_typeArgs).Select(_13031_i), false, false);
              _13032_typeExpr = _out7099;
              _13030_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_13030_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_13032_typeExpr));
            }
            r = (r).ApplyType(_13030_typeExprs);
          }
          r = (r).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _13033_arguments;
          _13033_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi33 = new BigInteger((_13027_args).Count);
          for (BigInteger _13034_i = BigInteger.Zero; _13034_i < _hi33; _13034_i++) {
            RAST._IExpr _13035_recursiveGen;
            DCOMPUTF16._IOwnership _13036___v111;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13037_recIdents;
            RAST._IExpr _out7100;
            DCOMPUTF16._IOwnership _out7101;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7102;
            DCOMPUTF16.COMP.GenExpr((_13027_args).Select(_13034_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7100, out _out7101, out _out7102);
            _13035_recursiveGen = _out7100;
            _13036___v111 = _out7101;
            _13037_recIdents = _out7102;
            _13033_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_13033_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_13035_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13037_recIdents);
          }
          r = (r).Apply(_13033_arguments);
          RAST._IExpr _out7103;
          DCOMPUTF16._IOwnership _out7104;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7103, out _out7104);
          r = _out7103;
          resultingOwnership = _out7104;
          return ;
        }
      } else if (_source685.is_NewArray) {
        Dafny.ISequence<DAST._IExpression> _13038___mcc_h7 = _source685.dtor_dims;
        DAST._IType _13039___mcc_h8 = _source685.dtor_typ;
        DAST._IType _13040_typ = _13039___mcc_h8;
        Dafny.ISequence<DAST._IExpression> _13041_dims = _13038___mcc_h7;
        {
          BigInteger _13042_i;
          _13042_i = (new BigInteger((_13041_dims).Count)) - (BigInteger.One);
          RAST._IType _13043_genTyp;
          RAST._IType _out7105;
          _out7105 = DCOMPUTF16.COMP.GenType(_13040_typ, false, false);
          _13043_genTyp = _out7105;
          Dafny.ISequence<Dafny.Rune> _13044_s;
          _13044_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_13043_genTyp)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::std::default::Default>::default()"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          while ((_13042_i).Sign != -1) {
            RAST._IExpr _13045_recursiveGen;
            DCOMPUTF16._IOwnership _13046___v112;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13047_recIdents;
            RAST._IExpr _out7106;
            DCOMPUTF16._IOwnership _out7107;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7108;
            DCOMPUTF16.COMP.GenExpr((_13041_dims).Select(_13042_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7106, out _out7107, out _out7108);
            _13045_recursiveGen = _out7106;
            _13046___v112 = _out7107;
            _13047_recIdents = _out7108;
            _13044_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(::std::cell::RefCell::new(vec!["), _13044_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("; <usize as ::dafny_runtime::NumCast>::from(")), (_13045_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()]))"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13047_recIdents);
            _13042_i = (_13042_i) - (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(_13044_s);
          RAST._IExpr _out7109;
          DCOMPUTF16._IOwnership _out7110;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7109, out _out7110);
          r = _out7109;
          resultingOwnership = _out7110;
          return ;
        }
      } else if (_source685.is_DatatypeValue) {
        DAST._IDatatypeType _13048___mcc_h9 = _source685.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _13049___mcc_h10 = _source685.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _13050___mcc_h11 = _source685.dtor_variant;
        bool _13051___mcc_h12 = _source685.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _13052___mcc_h13 = _source685.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _13053_values = _13052___mcc_h13;
        bool _13054_isCo = _13051___mcc_h12;
        Dafny.ISequence<Dafny.Rune> _13055_variant = _13050___mcc_h11;
        Dafny.ISequence<DAST._IType> _13056_typeArgs = _13049___mcc_h10;
        DAST._IDatatypeType _13057_datatypeType = _13048___mcc_h9;
        {
          RAST._IExpr _out7111;
          _out7111 = DCOMPUTF16.COMP.GenPathExpr((_13057_datatypeType).dtor_path);
          r = _out7111;
          Dafny.ISequence<RAST._IType> _13058_genTypeArgs;
          _13058_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi34 = new BigInteger((_13056_typeArgs).Count);
          for (BigInteger _13059_i = BigInteger.Zero; _13059_i < _hi34; _13059_i++) {
            RAST._IType _13060_typeExpr;
            RAST._IType _out7112;
            _out7112 = DCOMPUTF16.COMP.GenType((_13056_typeArgs).Select(_13059_i), false, false);
            _13060_typeExpr = _out7112;
            _13058_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_13058_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_13060_typeExpr));
          }
          if ((new BigInteger((_13056_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_13058_genTypeArgs);
          }
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(_13055_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _13061_assignments;
          _13061_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi35 = new BigInteger((_13053_values).Count);
          for (BigInteger _13062_i = BigInteger.Zero; _13062_i < _hi35; _13062_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs55 = (_13053_values).Select(_13062_i);
            Dafny.ISequence<Dafny.Rune> _13063_name = _let_tmp_rhs55.dtor__0;
            DAST._IExpression _13064_value = _let_tmp_rhs55.dtor__1;
            if (_13054_isCo) {
              RAST._IExpr _13065_recursiveGen;
              DCOMPUTF16._IOwnership _13066___v113;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13067_recIdents;
              RAST._IExpr _out7113;
              DCOMPUTF16._IOwnership _out7114;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7115;
              DCOMPUTF16.COMP.GenExpr(_13064_value, selfIdent, DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7113, out _out7114, out _out7115);
              _13065_recursiveGen = _out7113;
              _13066___v113 = _out7114;
              _13067_recIdents = _out7115;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13067_recIdents);
              Dafny.ISequence<Dafny.Rune> _13068_allReadCloned;
              _13068_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_13067_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _13069_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_4 in (_13067_recIdents).Elements) {
                  _13069_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_4;
                  if ((_13067_recIdents).Contains(_13069_next)) {
                    goto after__ASSIGN_SUCH_THAT_4;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 3037)");
              after__ASSIGN_SUCH_THAT_4: ;
                _13068_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13068_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent(_13069_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMPUTF16.__default.escapeIdent(_13069_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _13067_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_13067_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_13069_next));
              }
              Dafny.ISequence<Dafny.Rune> _13070_assigned;
              _13070_assigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _13068_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_13065_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _13061_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_13061_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(_13063_name), RAST.Expr.create_RawExpr(_13070_assigned))));
            } else {
              RAST._IExpr _13071_recursiveGen;
              DCOMPUTF16._IOwnership _13072___v114;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13073_recIdents;
              RAST._IExpr _out7116;
              DCOMPUTF16._IOwnership _out7117;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7118;
              DCOMPUTF16.COMP.GenExpr(_13064_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7116, out _out7117, out _out7118);
              _13071_recursiveGen = _out7116;
              _13072___v114 = _out7117;
              _13073_recIdents = _out7118;
              _13061_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_13061_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(_13063_name), _13071_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13073_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _13061_assignments);
          if (DCOMPUTF16.COMP.IsRcWrapped((_13057_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out7119;
          DCOMPUTF16._IOwnership _out7120;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7119, out _out7120);
          r = _out7119;
          resultingOwnership = _out7120;
          return ;
        }
      } else if (_source685.is_Convert) {
        DAST._IExpression _13074___mcc_h14 = _source685.dtor_value;
        DAST._IType _13075___mcc_h15 = _source685.dtor_from;
        DAST._IType _13076___mcc_h16 = _source685.dtor_typ;
        {
          RAST._IExpr _out7121;
          DCOMPUTF16._IOwnership _out7122;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7123;
          DCOMPUTF16.COMP.GenExprConvert(e, selfIdent, env, expectedOwnership, out _out7121, out _out7122, out _out7123);
          r = _out7121;
          resultingOwnership = _out7122;
          readIdents = _out7123;
        }
      } else if (_source685.is_SeqConstruct) {
        DAST._IExpression _13077___mcc_h17 = _source685.dtor_length;
        DAST._IExpression _13078___mcc_h18 = _source685.dtor_elem;
        DAST._IExpression _13079_expr = _13078___mcc_h18;
        DAST._IExpression _13080_length = _13077___mcc_h17;
        {
          RAST._IExpr _13081_recursiveGen;
          DCOMPUTF16._IOwnership _13082___v118;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13083_recIdents;
          RAST._IExpr _out7124;
          DCOMPUTF16._IOwnership _out7125;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7126;
          DCOMPUTF16.COMP.GenExpr(_13079_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7124, out _out7125, out _out7126);
          _13081_recursiveGen = _out7124;
          _13082___v118 = _out7125;
          _13083_recIdents = _out7126;
          RAST._IExpr _13084_lengthGen;
          DCOMPUTF16._IOwnership _13085___v119;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13086_lengthIdents;
          RAST._IExpr _out7127;
          DCOMPUTF16._IOwnership _out7128;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7129;
          DCOMPUTF16.COMP.GenExpr(_13080_length, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7127, out _out7128, out _out7129);
          _13084_lengthGen = _out7127;
          _13085___v119 = _out7128;
          _13086_lengthIdents = _out7129;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_13081_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_13084_lengthGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer.0(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_13083_recIdents, _13086_lengthIdents);
          RAST._IExpr _out7130;
          DCOMPUTF16._IOwnership _out7131;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7130, out _out7131);
          r = _out7130;
          resultingOwnership = _out7131;
          return ;
        }
      } else if (_source685.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _13087___mcc_h19 = _source685.dtor_elements;
        DAST._IType _13088___mcc_h20 = _source685.dtor_typ;
        DAST._IType _13089_typ = _13088___mcc_h20;
        Dafny.ISequence<DAST._IExpression> _13090_exprs = _13087___mcc_h19;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _13091_genTpe;
          RAST._IType _out7132;
          _out7132 = DCOMPUTF16.COMP.GenType(_13089_typ, false, false);
          _13091_genTpe = _out7132;
          BigInteger _13092_i;
          _13092_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _13093_args;
          _13093_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_13092_i) < (new BigInteger((_13090_exprs).Count))) {
            RAST._IExpr _13094_recursiveGen;
            DCOMPUTF16._IOwnership _13095___v120;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13096_recIdents;
            RAST._IExpr _out7133;
            DCOMPUTF16._IOwnership _out7134;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7135;
            DCOMPUTF16.COMP.GenExpr((_13090_exprs).Select(_13092_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7133, out _out7134, out _out7135);
            _13094_recursiveGen = _out7133;
            _13095___v120 = _out7134;
            _13096_recIdents = _out7135;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13096_recIdents);
            _13093_args = Dafny.Sequence<RAST._IExpr>.Concat(_13093_args, Dafny.Sequence<RAST._IExpr>.FromElements(_13094_recursiveGen));
            _13092_i = (_13092_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_13093_args);
          if ((new BigInteger((_13093_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_13091_genTpe));
          }
          RAST._IExpr _out7136;
          DCOMPUTF16._IOwnership _out7137;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7136, out _out7137);
          r = _out7136;
          resultingOwnership = _out7137;
          return ;
        }
      } else if (_source685.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _13097___mcc_h21 = _source685.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _13098_exprs = _13097___mcc_h21;
        {
          Dafny.ISequence<RAST._IExpr> _13099_generatedValues;
          _13099_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _13100_i;
          _13100_i = BigInteger.Zero;
          while ((_13100_i) < (new BigInteger((_13098_exprs).Count))) {
            RAST._IExpr _13101_recursiveGen;
            DCOMPUTF16._IOwnership _13102___v121;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13103_recIdents;
            RAST._IExpr _out7138;
            DCOMPUTF16._IOwnership _out7139;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7140;
            DCOMPUTF16.COMP.GenExpr((_13098_exprs).Select(_13100_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7138, out _out7139, out _out7140);
            _13101_recursiveGen = _out7138;
            _13102___v121 = _out7139;
            _13103_recIdents = _out7140;
            _13099_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_13099_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_13101_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13103_recIdents);
            _13100_i = (_13100_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_13099_generatedValues);
          RAST._IExpr _out7141;
          DCOMPUTF16._IOwnership _out7142;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7141, out _out7142);
          r = _out7141;
          resultingOwnership = _out7142;
          return ;
        }
      } else if (_source685.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _13104___mcc_h22 = _source685.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _13105_exprs = _13104___mcc_h22;
        {
          Dafny.ISequence<RAST._IExpr> _13106_generatedValues;
          _13106_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _13107_i;
          _13107_i = BigInteger.Zero;
          while ((_13107_i) < (new BigInteger((_13105_exprs).Count))) {
            RAST._IExpr _13108_recursiveGen;
            DCOMPUTF16._IOwnership _13109___v122;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13110_recIdents;
            RAST._IExpr _out7143;
            DCOMPUTF16._IOwnership _out7144;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7145;
            DCOMPUTF16.COMP.GenExpr((_13105_exprs).Select(_13107_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7143, out _out7144, out _out7145);
            _13108_recursiveGen = _out7143;
            _13109___v122 = _out7144;
            _13110_recIdents = _out7145;
            _13106_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_13106_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_13108_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13110_recIdents);
            _13107_i = (_13107_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_13106_generatedValues);
          RAST._IExpr _out7146;
          DCOMPUTF16._IOwnership _out7147;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7146, out _out7147);
          r = _out7146;
          resultingOwnership = _out7147;
          return ;
        }
      } else if (_source685.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _13111___mcc_h23 = _source685.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _13112_mapElems = _13111___mcc_h23;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _13113_generatedValues;
          _13113_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _13114_i;
          _13114_i = BigInteger.Zero;
          while ((_13114_i) < (new BigInteger((_13112_mapElems).Count))) {
            RAST._IExpr _13115_recursiveGenKey;
            DCOMPUTF16._IOwnership _13116___v124;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13117_recIdentsKey;
            RAST._IExpr _out7148;
            DCOMPUTF16._IOwnership _out7149;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7150;
            DCOMPUTF16.COMP.GenExpr(((_13112_mapElems).Select(_13114_i)).dtor__0, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7148, out _out7149, out _out7150);
            _13115_recursiveGenKey = _out7148;
            _13116___v124 = _out7149;
            _13117_recIdentsKey = _out7150;
            RAST._IExpr _13118_recursiveGenValue;
            DCOMPUTF16._IOwnership _13119___v125;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13120_recIdentsValue;
            RAST._IExpr _out7151;
            DCOMPUTF16._IOwnership _out7152;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7153;
            DCOMPUTF16.COMP.GenExpr(((_13112_mapElems).Select(_13114_i)).dtor__1, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7151, out _out7152, out _out7153);
            _13118_recursiveGenValue = _out7151;
            _13119___v125 = _out7152;
            _13120_recIdentsValue = _out7153;
            _13113_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_13113_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_13115_recursiveGenKey, _13118_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13117_recIdentsKey), _13120_recIdentsValue);
            _13114_i = (_13114_i) + (BigInteger.One);
          }
          _13114_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _13121_arguments;
          _13121_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_13114_i) < (new BigInteger((_13113_generatedValues).Count))) {
            RAST._IExpr _13122_genKey;
            _13122_genKey = ((_13113_generatedValues).Select(_13114_i)).dtor__0;
            RAST._IExpr _13123_genValue;
            _13123_genValue = ((_13113_generatedValues).Select(_13114_i)).dtor__1;
            _13121_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_13121_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _13122_genKey, _13123_genValue, DAST.Format.BinOpFormat.create_NoFormat())));
            _13114_i = (_13114_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_13121_arguments);
          RAST._IExpr _out7154;
          DCOMPUTF16._IOwnership _out7155;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7154, out _out7155);
          r = _out7154;
          resultingOwnership = _out7155;
          return ;
        }
      } else if (_source685.is_MapBuilder) {
        DAST._IType _13124___mcc_h24 = _source685.dtor_keyType;
        DAST._IType _13125___mcc_h25 = _source685.dtor_valueType;
        DAST._IType _13126_valueType = _13125___mcc_h25;
        DAST._IType _13127_keyType = _13124___mcc_h24;
        {
          RAST._IType _13128_kType;
          RAST._IType _out7156;
          _out7156 = DCOMPUTF16.COMP.GenType(_13127_keyType, false, false);
          _13128_kType = _out7156;
          RAST._IType _13129_vType;
          RAST._IType _out7157;
          _out7157 = DCOMPUTF16.COMP.GenType(_13126_valueType, false, false);
          _13129_vType = _out7157;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::MapBuilder::<"), (_13128_kType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_13129_vType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out7158;
          DCOMPUTF16._IOwnership _out7159;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7158, out _out7159);
          r = _out7158;
          resultingOwnership = _out7159;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source685.is_SeqUpdate) {
        DAST._IExpression _13130___mcc_h26 = _source685.dtor_expr;
        DAST._IExpression _13131___mcc_h27 = _source685.dtor_indexExpr;
        DAST._IExpression _13132___mcc_h28 = _source685.dtor_value;
        DAST._IExpression _13133_value = _13132___mcc_h28;
        DAST._IExpression _13134_index = _13131___mcc_h27;
        DAST._IExpression _13135_expr = _13130___mcc_h26;
        {
          RAST._IExpr _13136_exprR;
          DCOMPUTF16._IOwnership _13137___v126;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13138_exprIdents;
          RAST._IExpr _out7160;
          DCOMPUTF16._IOwnership _out7161;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7162;
          DCOMPUTF16.COMP.GenExpr(_13135_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7160, out _out7161, out _out7162);
          _13136_exprR = _out7160;
          _13137___v126 = _out7161;
          _13138_exprIdents = _out7162;
          RAST._IExpr _13139_indexR;
          DCOMPUTF16._IOwnership _13140_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13141_indexIdents;
          RAST._IExpr _out7163;
          DCOMPUTF16._IOwnership _out7164;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7165;
          DCOMPUTF16.COMP.GenExpr(_13134_index, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7163, out _out7164, out _out7165);
          _13139_indexR = _out7163;
          _13140_indexOwnership = _out7164;
          _13141_indexIdents = _out7165;
          RAST._IExpr _13142_valueR;
          DCOMPUTF16._IOwnership _13143_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13144_valueIdents;
          RAST._IExpr _out7166;
          DCOMPUTF16._IOwnership _out7167;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7168;
          DCOMPUTF16.COMP.GenExpr(_13133_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7166, out _out7167, out _out7168);
          _13142_valueR = _out7166;
          _13143_valueOwnership = _out7167;
          _13144_valueIdents = _out7168;
          r = ((_13136_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_13139_indexR, _13142_valueR));
          RAST._IExpr _out7169;
          DCOMPUTF16._IOwnership _out7170;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7169, out _out7170);
          r = _out7169;
          resultingOwnership = _out7170;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_13138_exprIdents, _13141_indexIdents), _13144_valueIdents);
          return ;
        }
      } else if (_source685.is_MapUpdate) {
        DAST._IExpression _13145___mcc_h29 = _source685.dtor_expr;
        DAST._IExpression _13146___mcc_h30 = _source685.dtor_indexExpr;
        DAST._IExpression _13147___mcc_h31 = _source685.dtor_value;
        DAST._IExpression _13148_value = _13147___mcc_h31;
        DAST._IExpression _13149_index = _13146___mcc_h30;
        DAST._IExpression _13150_expr = _13145___mcc_h29;
        {
          RAST._IExpr _13151_exprR;
          DCOMPUTF16._IOwnership _13152___v127;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13153_exprIdents;
          RAST._IExpr _out7171;
          DCOMPUTF16._IOwnership _out7172;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7173;
          DCOMPUTF16.COMP.GenExpr(_13150_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7171, out _out7172, out _out7173);
          _13151_exprR = _out7171;
          _13152___v127 = _out7172;
          _13153_exprIdents = _out7173;
          RAST._IExpr _13154_indexR;
          DCOMPUTF16._IOwnership _13155_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13156_indexIdents;
          RAST._IExpr _out7174;
          DCOMPUTF16._IOwnership _out7175;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7176;
          DCOMPUTF16.COMP.GenExpr(_13149_index, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7174, out _out7175, out _out7176);
          _13154_indexR = _out7174;
          _13155_indexOwnership = _out7175;
          _13156_indexIdents = _out7176;
          RAST._IExpr _13157_valueR;
          DCOMPUTF16._IOwnership _13158_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13159_valueIdents;
          RAST._IExpr _out7177;
          DCOMPUTF16._IOwnership _out7178;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7179;
          DCOMPUTF16.COMP.GenExpr(_13148_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7177, out _out7178, out _out7179);
          _13157_valueR = _out7177;
          _13158_valueOwnership = _out7178;
          _13159_valueIdents = _out7179;
          r = ((_13151_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_13154_indexR, _13157_valueR));
          RAST._IExpr _out7180;
          DCOMPUTF16._IOwnership _out7181;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7180, out _out7181);
          r = _out7180;
          resultingOwnership = _out7181;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_13153_exprIdents, _13156_indexIdents), _13159_valueIdents);
          return ;
        }
      } else if (_source685.is_SetBuilder) {
        DAST._IType _13160___mcc_h32 = _source685.dtor_elemType;
        DAST._IType _13161_elemType = _13160___mcc_h32;
        {
          RAST._IType _13162_eType;
          RAST._IType _out7182;
          _out7182 = DCOMPUTF16.COMP.GenType(_13161_elemType, false, false);
          _13162_eType = _out7182;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::SetBuilder::<"), (_13162_eType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out7183;
          DCOMPUTF16._IOwnership _out7184;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7183, out _out7184);
          r = _out7183;
          resultingOwnership = _out7184;
          return ;
        }
      } else if (_source685.is_ToMultiset) {
        DAST._IExpression _13163___mcc_h33 = _source685.dtor_ToMultiset_a0;
        DAST._IExpression _13164_expr = _13163___mcc_h33;
        {
          RAST._IExpr _13165_recursiveGen;
          DCOMPUTF16._IOwnership _13166___v123;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13167_recIdents;
          RAST._IExpr _out7185;
          DCOMPUTF16._IOwnership _out7186;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7187;
          DCOMPUTF16.COMP.GenExpr(_13164_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7185, out _out7186, out _out7187);
          _13165_recursiveGen = _out7185;
          _13166___v123 = _out7186;
          _13167_recIdents = _out7187;
          r = ((_13165_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _13167_recIdents;
          RAST._IExpr _out7188;
          DCOMPUTF16._IOwnership _out7189;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7188, out _out7189);
          r = _out7188;
          resultingOwnership = _out7189;
          return ;
        }
      } else if (_source685.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source686 = selfIdent;
          if (_source686.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out7190;
              DCOMPUTF16._IOwnership _out7191;
              DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7190, out _out7191);
              r = _out7190;
              resultingOwnership = _out7191;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _13168___mcc_h273 = _source686.dtor_value;
            Dafny.ISequence<Dafny.Rune> _13169_id = _13168___mcc_h273;
            {
              r = RAST.Expr.create_RawExpr(_13169_id);
              if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = RAST.__default.Clone(r);
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              } else if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_13169_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_13169_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_13169_id);
            }
          }
          return ;
        }
      } else if (_source685.is_Ite) {
        DAST._IExpression _13170___mcc_h34 = _source685.dtor_cond;
        DAST._IExpression _13171___mcc_h35 = _source685.dtor_thn;
        DAST._IExpression _13172___mcc_h36 = _source685.dtor_els;
        DAST._IExpression _13173_f = _13172___mcc_h36;
        DAST._IExpression _13174_t = _13171___mcc_h35;
        DAST._IExpression _13175_cond = _13170___mcc_h34;
        {
          RAST._IExpr _13176_cond;
          DCOMPUTF16._IOwnership _13177___v128;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13178_recIdentsCond;
          RAST._IExpr _out7192;
          DCOMPUTF16._IOwnership _out7193;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7194;
          DCOMPUTF16.COMP.GenExpr(_13175_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7192, out _out7193, out _out7194);
          _13176_cond = _out7192;
          _13177___v128 = _out7193;
          _13178_recIdentsCond = _out7194;
          Dafny.ISequence<Dafny.Rune> _13179_condString;
          _13179_condString = (_13176_cond)._ToString(DCOMPUTF16.__default.IND);
          RAST._IExpr _13180___v129;
          DCOMPUTF16._IOwnership _13181_tHasToBeOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13182___v130;
          RAST._IExpr _out7195;
          DCOMPUTF16._IOwnership _out7196;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7197;
          DCOMPUTF16.COMP.GenExpr(_13174_t, selfIdent, env, expectedOwnership, out _out7195, out _out7196, out _out7197);
          _13180___v129 = _out7195;
          _13181_tHasToBeOwned = _out7196;
          _13182___v130 = _out7197;
          RAST._IExpr _13183_fExpr;
          DCOMPUTF16._IOwnership _13184_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13185_recIdentsF;
          RAST._IExpr _out7198;
          DCOMPUTF16._IOwnership _out7199;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7200;
          DCOMPUTF16.COMP.GenExpr(_13173_f, selfIdent, env, _13181_tHasToBeOwned, out _out7198, out _out7199, out _out7200);
          _13183_fExpr = _out7198;
          _13184_fOwned = _out7199;
          _13185_recIdentsF = _out7200;
          Dafny.ISequence<Dafny.Rune> _13186_fString;
          _13186_fString = (_13183_fExpr)._ToString(DCOMPUTF16.__default.IND);
          RAST._IExpr _13187_tExpr;
          DCOMPUTF16._IOwnership _13188___v131;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13189_recIdentsT;
          RAST._IExpr _out7201;
          DCOMPUTF16._IOwnership _out7202;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7203;
          DCOMPUTF16.COMP.GenExpr(_13174_t, selfIdent, env, _13184_fOwned, out _out7201, out _out7202, out _out7203);
          _13187_tExpr = _out7201;
          _13188___v131 = _out7202;
          _13189_recIdentsT = _out7203;
          Dafny.ISequence<Dafny.Rune> _13190_tString;
          _13190_tString = (_13187_tExpr)._ToString(DCOMPUTF16.__default.IND);
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(if "), _13179_condString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), _13190_tString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n} else {\n")), _13186_fString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})")));
          RAST._IExpr _out7204;
          DCOMPUTF16._IOwnership _out7205;
          DCOMPUTF16.COMP.FromOwnership(r, _13184_fOwned, expectedOwnership, out _out7204, out _out7205);
          r = _out7204;
          resultingOwnership = _out7205;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_13178_recIdentsCond, _13189_recIdentsT), _13185_recIdentsF);
          return ;
        }
      } else if (_source685.is_UnOp) {
        DAST._IUnaryOp _13191___mcc_h37 = _source685.dtor_unOp;
        DAST._IExpression _13192___mcc_h38 = _source685.dtor_expr;
        DAST.Format._IUnOpFormat _13193___mcc_h39 = _source685.dtor_format1;
        DAST._IUnaryOp _source687 = _13191___mcc_h37;
        if (_source687.is_Not) {
          DAST.Format._IUnOpFormat _13194_format = _13193___mcc_h39;
          DAST._IExpression _13195_e = _13192___mcc_h38;
          {
            RAST._IExpr _13196_recursiveGen;
            DCOMPUTF16._IOwnership _13197___v132;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13198_recIdents;
            RAST._IExpr _out7206;
            DCOMPUTF16._IOwnership _out7207;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7208;
            DCOMPUTF16.COMP.GenExpr(_13195_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7206, out _out7207, out _out7208);
            _13196_recursiveGen = _out7206;
            _13197___v132 = _out7207;
            _13198_recIdents = _out7208;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _13196_recursiveGen, _13194_format);
            RAST._IExpr _out7209;
            DCOMPUTF16._IOwnership _out7210;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7209, out _out7210);
            r = _out7209;
            resultingOwnership = _out7210;
            readIdents = _13198_recIdents;
            return ;
          }
        } else if (_source687.is_BitwiseNot) {
          DAST.Format._IUnOpFormat _13199_format = _13193___mcc_h39;
          DAST._IExpression _13200_e = _13192___mcc_h38;
          {
            RAST._IExpr _13201_recursiveGen;
            DCOMPUTF16._IOwnership _13202___v133;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13203_recIdents;
            RAST._IExpr _out7211;
            DCOMPUTF16._IOwnership _out7212;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7213;
            DCOMPUTF16.COMP.GenExpr(_13200_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7211, out _out7212, out _out7213);
            _13201_recursiveGen = _out7211;
            _13202___v133 = _out7212;
            _13203_recIdents = _out7213;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _13201_recursiveGen, _13199_format);
            RAST._IExpr _out7214;
            DCOMPUTF16._IOwnership _out7215;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7214, out _out7215);
            r = _out7214;
            resultingOwnership = _out7215;
            readIdents = _13203_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnOpFormat _13204_format = _13193___mcc_h39;
          DAST._IExpression _13205_e = _13192___mcc_h38;
          {
            RAST._IExpr _13206_recursiveGen;
            DCOMPUTF16._IOwnership _13207_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13208_recIdents;
            RAST._IExpr _out7216;
            DCOMPUTF16._IOwnership _out7217;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7218;
            DCOMPUTF16.COMP.GenExpr(_13205_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7216, out _out7217, out _out7218);
            _13206_recursiveGen = _out7216;
            _13207_recOwned = _out7217;
            _13208_recIdents = _out7218;
            r = ((_13206_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out7219;
            DCOMPUTF16._IOwnership _out7220;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7219, out _out7220);
            r = _out7219;
            resultingOwnership = _out7220;
            readIdents = _13208_recIdents;
            return ;
          }
        }
      } else if (_source685.is_BinOp) {
        DAST._IBinOp _13209___mcc_h40 = _source685.dtor_op;
        DAST._IExpression _13210___mcc_h41 = _source685.dtor_left;
        DAST._IExpression _13211___mcc_h42 = _source685.dtor_right;
        DAST.Format._IBinOpFormat _13212___mcc_h43 = _source685.dtor_format2;
        RAST._IExpr _out7221;
        DCOMPUTF16._IOwnership _out7222;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7223;
        DCOMPUTF16.COMP.GenExprBinary(e, selfIdent, env, expectedOwnership, out _out7221, out _out7222, out _out7223);
        r = _out7221;
        resultingOwnership = _out7222;
        readIdents = _out7223;
      } else if (_source685.is_ArrayLen) {
        DAST._IExpression _13213___mcc_h44 = _source685.dtor_expr;
        BigInteger _13214___mcc_h45 = _source685.dtor_dim;
        BigInteger _13215_dim = _13214___mcc_h45;
        DAST._IExpression _13216_expr = _13213___mcc_h44;
        {
          RAST._IExpr _13217_recursiveGen;
          DCOMPUTF16._IOwnership _13218___v138;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13219_recIdents;
          RAST._IExpr _out7224;
          DCOMPUTF16._IOwnership _out7225;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7226;
          DCOMPUTF16.COMP.GenExpr(_13216_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7224, out _out7225, out _out7226);
          _13217_recursiveGen = _out7224;
          _13218___v138 = _out7225;
          _13219_recIdents = _out7226;
          if ((_13215_dim).Sign == 0) {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(("), (_13217_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").borrow().len())")));
          } else {
            Dafny.ISequence<Dafny.Rune> _13220_s;
            _13220_s = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(m.borrow().len())")))._ToString(DCOMPUTF16.__default.IND);
            BigInteger _13221_i;
            _13221_i = BigInteger.One;
            while ((_13221_i) < (_13215_dim)) {
              _13220_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("m.borrow().get(0).map(|m| "), _13220_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"));
              _13221_i = (_13221_i) + (BigInteger.One);
            }
            r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13217_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow().get(0).map(|m| ")), _13220_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"))));
          }
          RAST._IExpr _out7227;
          DCOMPUTF16._IOwnership _out7228;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7227, out _out7228);
          r = _out7227;
          resultingOwnership = _out7228;
          readIdents = _13219_recIdents;
          return ;
        }
      } else if (_source685.is_MapKeys) {
        DAST._IExpression _13222___mcc_h46 = _source685.dtor_expr;
        DAST._IExpression _13223_expr = _13222___mcc_h46;
        {
          RAST._IExpr _13224_recursiveGen;
          DCOMPUTF16._IOwnership _13225___v139;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13226_recIdents;
          RAST._IExpr _out7229;
          DCOMPUTF16._IOwnership _out7230;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7231;
          DCOMPUTF16.COMP.GenExpr(_13223_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7229, out _out7230, out _out7231);
          _13224_recursiveGen = _out7229;
          _13225___v139 = _out7230;
          _13226_recIdents = _out7231;
          readIdents = _13226_recIdents;
          r = ((_13224_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out7232;
          DCOMPUTF16._IOwnership _out7233;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7232, out _out7233);
          r = _out7232;
          resultingOwnership = _out7233;
          return ;
        }
      } else if (_source685.is_MapValues) {
        DAST._IExpression _13227___mcc_h47 = _source685.dtor_expr;
        DAST._IExpression _13228_expr = _13227___mcc_h47;
        {
          RAST._IExpr _13229_recursiveGen;
          DCOMPUTF16._IOwnership _13230___v140;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13231_recIdents;
          RAST._IExpr _out7234;
          DCOMPUTF16._IOwnership _out7235;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7236;
          DCOMPUTF16.COMP.GenExpr(_13228_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7234, out _out7235, out _out7236);
          _13229_recursiveGen = _out7234;
          _13230___v140 = _out7235;
          _13231_recIdents = _out7236;
          readIdents = _13231_recIdents;
          r = ((_13229_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out7237;
          DCOMPUTF16._IOwnership _out7238;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7237, out _out7238);
          r = _out7237;
          resultingOwnership = _out7238;
          return ;
        }
      } else if (_source685.is_Select) {
        DAST._IExpression _13232___mcc_h48 = _source685.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _13233___mcc_h49 = _source685.dtor_field;
        bool _13234___mcc_h50 = _source685.dtor_isConstant;
        bool _13235___mcc_h51 = _source685.dtor_onDatatype;
        DAST._IExpression _source688 = _13232___mcc_h48;
        if (_source688.is_Literal) {
          DAST._ILiteral _13236___mcc_h52 = _source688.dtor_Literal_a0;
          bool _13237_isDatatype = _13235___mcc_h51;
          bool _13238_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13239_field = _13233___mcc_h49;
          DAST._IExpression _13240_on = _13232___mcc_h48;
          {
            if ((_13237_isDatatype) || (_13238_isConstant)) {
              RAST._IExpr _13241_onExpr;
              DCOMPUTF16._IOwnership _13242_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13243_recIdents;
              RAST._IExpr _out7239;
              DCOMPUTF16._IOwnership _out7240;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7241;
              DCOMPUTF16.COMP.GenExpr(_13240_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7239, out _out7240, out _out7241);
              _13241_onExpr = _out7239;
              _13242_onOwned = _out7240;
              _13243_recIdents = _out7241;
              r = ((_13241_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13239_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7242;
              DCOMPUTF16._IOwnership _out7243;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7242, out _out7243);
              r = _out7242;
              resultingOwnership = _out7243;
              readIdents = _13243_recIdents;
            } else {
              RAST._IExpr _13244_onExpr;
              DCOMPUTF16._IOwnership _13245_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13246_recIdents;
              RAST._IExpr _out7244;
              DCOMPUTF16._IOwnership _out7245;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7246;
              DCOMPUTF16.COMP.GenExpr(_13240_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7244, out _out7245, out _out7246);
              _13244_onExpr = _out7244;
              _13245_onOwned = _out7245;
              _13246_recIdents = _out7246;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13244_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13239_field));
              RAST._IExpr _out7247;
              DCOMPUTF16._IOwnership _out7248;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7247, out _out7248);
              r = _out7247;
              resultingOwnership = _out7248;
              readIdents = _13246_recIdents;
            }
            return ;
          }
        } else if (_source688.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _13247___mcc_h54 = _source688.dtor_Ident_a0;
          bool _13248_isDatatype = _13235___mcc_h51;
          bool _13249_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13250_field = _13233___mcc_h49;
          DAST._IExpression _13251_on = _13232___mcc_h48;
          {
            if ((_13248_isDatatype) || (_13249_isConstant)) {
              RAST._IExpr _13252_onExpr;
              DCOMPUTF16._IOwnership _13253_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13254_recIdents;
              RAST._IExpr _out7249;
              DCOMPUTF16._IOwnership _out7250;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7251;
              DCOMPUTF16.COMP.GenExpr(_13251_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7249, out _out7250, out _out7251);
              _13252_onExpr = _out7249;
              _13253_onOwned = _out7250;
              _13254_recIdents = _out7251;
              r = ((_13252_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13250_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7252;
              DCOMPUTF16._IOwnership _out7253;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7252, out _out7253);
              r = _out7252;
              resultingOwnership = _out7253;
              readIdents = _13254_recIdents;
            } else {
              RAST._IExpr _13255_onExpr;
              DCOMPUTF16._IOwnership _13256_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13257_recIdents;
              RAST._IExpr _out7254;
              DCOMPUTF16._IOwnership _out7255;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7256;
              DCOMPUTF16.COMP.GenExpr(_13251_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7254, out _out7255, out _out7256);
              _13255_onExpr = _out7254;
              _13256_onOwned = _out7255;
              _13257_recIdents = _out7256;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13255_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13250_field));
              RAST._IExpr _out7257;
              DCOMPUTF16._IOwnership _out7258;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7257, out _out7258);
              r = _out7257;
              resultingOwnership = _out7258;
              readIdents = _13257_recIdents;
            }
            return ;
          }
        } else if (_source688.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13258___mcc_h56 = _source688.dtor_Companion_a0;
          bool _13259_isDatatype = _13235___mcc_h51;
          bool _13260_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13261_field = _13233___mcc_h49;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13262_c = _13258___mcc_h56;
          {
            RAST._IExpr _13263_onExpr;
            DCOMPUTF16._IOwnership _13264_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13265_recIdents;
            RAST._IExpr _out7259;
            DCOMPUTF16._IOwnership _out7260;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7261;
            DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Companion(_13262_c), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7259, out _out7260, out _out7261);
            _13263_onExpr = _out7259;
            _13264_onOwned = _out7260;
            _13265_recIdents = _out7261;
            r = ((_13263_onExpr).MSel(DCOMPUTF16.__default.escapeIdent(_13261_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out7262;
            DCOMPUTF16._IOwnership _out7263;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7262, out _out7263);
            r = _out7262;
            resultingOwnership = _out7263;
            readIdents = _13265_recIdents;
            return ;
          }
        } else if (_source688.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _13266___mcc_h58 = _source688.dtor_Tuple_a0;
          bool _13267_isDatatype = _13235___mcc_h51;
          bool _13268_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13269_field = _13233___mcc_h49;
          DAST._IExpression _13270_on = _13232___mcc_h48;
          {
            if ((_13267_isDatatype) || (_13268_isConstant)) {
              RAST._IExpr _13271_onExpr;
              DCOMPUTF16._IOwnership _13272_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13273_recIdents;
              RAST._IExpr _out7264;
              DCOMPUTF16._IOwnership _out7265;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7266;
              DCOMPUTF16.COMP.GenExpr(_13270_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7264, out _out7265, out _out7266);
              _13271_onExpr = _out7264;
              _13272_onOwned = _out7265;
              _13273_recIdents = _out7266;
              r = ((_13271_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13269_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7267;
              DCOMPUTF16._IOwnership _out7268;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7267, out _out7268);
              r = _out7267;
              resultingOwnership = _out7268;
              readIdents = _13273_recIdents;
            } else {
              RAST._IExpr _13274_onExpr;
              DCOMPUTF16._IOwnership _13275_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13276_recIdents;
              RAST._IExpr _out7269;
              DCOMPUTF16._IOwnership _out7270;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7271;
              DCOMPUTF16.COMP.GenExpr(_13270_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7269, out _out7270, out _out7271);
              _13274_onExpr = _out7269;
              _13275_onOwned = _out7270;
              _13276_recIdents = _out7271;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13274_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13269_field));
              RAST._IExpr _out7272;
              DCOMPUTF16._IOwnership _out7273;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7272, out _out7273);
              r = _out7272;
              resultingOwnership = _out7273;
              readIdents = _13276_recIdents;
            }
            return ;
          }
        } else if (_source688.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13277___mcc_h60 = _source688.dtor_path;
          Dafny.ISequence<DAST._IType> _13278___mcc_h61 = _source688.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _13279___mcc_h62 = _source688.dtor_args;
          bool _13280_isDatatype = _13235___mcc_h51;
          bool _13281_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13282_field = _13233___mcc_h49;
          DAST._IExpression _13283_on = _13232___mcc_h48;
          {
            if ((_13280_isDatatype) || (_13281_isConstant)) {
              RAST._IExpr _13284_onExpr;
              DCOMPUTF16._IOwnership _13285_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13286_recIdents;
              RAST._IExpr _out7274;
              DCOMPUTF16._IOwnership _out7275;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7276;
              DCOMPUTF16.COMP.GenExpr(_13283_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7274, out _out7275, out _out7276);
              _13284_onExpr = _out7274;
              _13285_onOwned = _out7275;
              _13286_recIdents = _out7276;
              r = ((_13284_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13282_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7277;
              DCOMPUTF16._IOwnership _out7278;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7277, out _out7278);
              r = _out7277;
              resultingOwnership = _out7278;
              readIdents = _13286_recIdents;
            } else {
              RAST._IExpr _13287_onExpr;
              DCOMPUTF16._IOwnership _13288_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13289_recIdents;
              RAST._IExpr _out7279;
              DCOMPUTF16._IOwnership _out7280;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7281;
              DCOMPUTF16.COMP.GenExpr(_13283_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7279, out _out7280, out _out7281);
              _13287_onExpr = _out7279;
              _13288_onOwned = _out7280;
              _13289_recIdents = _out7281;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13287_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13282_field));
              RAST._IExpr _out7282;
              DCOMPUTF16._IOwnership _out7283;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7282, out _out7283);
              r = _out7282;
              resultingOwnership = _out7283;
              readIdents = _13289_recIdents;
            }
            return ;
          }
        } else if (_source688.is_NewArray) {
          Dafny.ISequence<DAST._IExpression> _13290___mcc_h66 = _source688.dtor_dims;
          DAST._IType _13291___mcc_h67 = _source688.dtor_typ;
          bool _13292_isDatatype = _13235___mcc_h51;
          bool _13293_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13294_field = _13233___mcc_h49;
          DAST._IExpression _13295_on = _13232___mcc_h48;
          {
            if ((_13292_isDatatype) || (_13293_isConstant)) {
              RAST._IExpr _13296_onExpr;
              DCOMPUTF16._IOwnership _13297_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13298_recIdents;
              RAST._IExpr _out7284;
              DCOMPUTF16._IOwnership _out7285;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7286;
              DCOMPUTF16.COMP.GenExpr(_13295_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7284, out _out7285, out _out7286);
              _13296_onExpr = _out7284;
              _13297_onOwned = _out7285;
              _13298_recIdents = _out7286;
              r = ((_13296_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13294_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7287;
              DCOMPUTF16._IOwnership _out7288;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7287, out _out7288);
              r = _out7287;
              resultingOwnership = _out7288;
              readIdents = _13298_recIdents;
            } else {
              RAST._IExpr _13299_onExpr;
              DCOMPUTF16._IOwnership _13300_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13301_recIdents;
              RAST._IExpr _out7289;
              DCOMPUTF16._IOwnership _out7290;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7291;
              DCOMPUTF16.COMP.GenExpr(_13295_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7289, out _out7290, out _out7291);
              _13299_onExpr = _out7289;
              _13300_onOwned = _out7290;
              _13301_recIdents = _out7291;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13299_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13294_field));
              RAST._IExpr _out7292;
              DCOMPUTF16._IOwnership _out7293;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7292, out _out7293);
              r = _out7292;
              resultingOwnership = _out7293;
              readIdents = _13301_recIdents;
            }
            return ;
          }
        } else if (_source688.is_DatatypeValue) {
          DAST._IDatatypeType _13302___mcc_h70 = _source688.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _13303___mcc_h71 = _source688.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _13304___mcc_h72 = _source688.dtor_variant;
          bool _13305___mcc_h73 = _source688.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _13306___mcc_h74 = _source688.dtor_contents;
          bool _13307_isDatatype = _13235___mcc_h51;
          bool _13308_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13309_field = _13233___mcc_h49;
          DAST._IExpression _13310_on = _13232___mcc_h48;
          {
            if ((_13307_isDatatype) || (_13308_isConstant)) {
              RAST._IExpr _13311_onExpr;
              DCOMPUTF16._IOwnership _13312_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13313_recIdents;
              RAST._IExpr _out7294;
              DCOMPUTF16._IOwnership _out7295;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7296;
              DCOMPUTF16.COMP.GenExpr(_13310_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7294, out _out7295, out _out7296);
              _13311_onExpr = _out7294;
              _13312_onOwned = _out7295;
              _13313_recIdents = _out7296;
              r = ((_13311_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13309_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7297;
              DCOMPUTF16._IOwnership _out7298;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7297, out _out7298);
              r = _out7297;
              resultingOwnership = _out7298;
              readIdents = _13313_recIdents;
            } else {
              RAST._IExpr _13314_onExpr;
              DCOMPUTF16._IOwnership _13315_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13316_recIdents;
              RAST._IExpr _out7299;
              DCOMPUTF16._IOwnership _out7300;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7301;
              DCOMPUTF16.COMP.GenExpr(_13310_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7299, out _out7300, out _out7301);
              _13314_onExpr = _out7299;
              _13315_onOwned = _out7300;
              _13316_recIdents = _out7301;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13314_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13309_field));
              RAST._IExpr _out7302;
              DCOMPUTF16._IOwnership _out7303;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7302, out _out7303);
              r = _out7302;
              resultingOwnership = _out7303;
              readIdents = _13316_recIdents;
            }
            return ;
          }
        } else if (_source688.is_Convert) {
          DAST._IExpression _13317___mcc_h80 = _source688.dtor_value;
          DAST._IType _13318___mcc_h81 = _source688.dtor_from;
          DAST._IType _13319___mcc_h82 = _source688.dtor_typ;
          bool _13320_isDatatype = _13235___mcc_h51;
          bool _13321_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13322_field = _13233___mcc_h49;
          DAST._IExpression _13323_on = _13232___mcc_h48;
          {
            if ((_13320_isDatatype) || (_13321_isConstant)) {
              RAST._IExpr _13324_onExpr;
              DCOMPUTF16._IOwnership _13325_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13326_recIdents;
              RAST._IExpr _out7304;
              DCOMPUTF16._IOwnership _out7305;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7306;
              DCOMPUTF16.COMP.GenExpr(_13323_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7304, out _out7305, out _out7306);
              _13324_onExpr = _out7304;
              _13325_onOwned = _out7305;
              _13326_recIdents = _out7306;
              r = ((_13324_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13322_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7307;
              DCOMPUTF16._IOwnership _out7308;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7307, out _out7308);
              r = _out7307;
              resultingOwnership = _out7308;
              readIdents = _13326_recIdents;
            } else {
              RAST._IExpr _13327_onExpr;
              DCOMPUTF16._IOwnership _13328_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13329_recIdents;
              RAST._IExpr _out7309;
              DCOMPUTF16._IOwnership _out7310;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7311;
              DCOMPUTF16.COMP.GenExpr(_13323_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7309, out _out7310, out _out7311);
              _13327_onExpr = _out7309;
              _13328_onOwned = _out7310;
              _13329_recIdents = _out7311;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13327_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13322_field));
              RAST._IExpr _out7312;
              DCOMPUTF16._IOwnership _out7313;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7312, out _out7313);
              r = _out7312;
              resultingOwnership = _out7313;
              readIdents = _13329_recIdents;
            }
            return ;
          }
        } else if (_source688.is_SeqConstruct) {
          DAST._IExpression _13330___mcc_h86 = _source688.dtor_length;
          DAST._IExpression _13331___mcc_h87 = _source688.dtor_elem;
          bool _13332_isDatatype = _13235___mcc_h51;
          bool _13333_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13334_field = _13233___mcc_h49;
          DAST._IExpression _13335_on = _13232___mcc_h48;
          {
            if ((_13332_isDatatype) || (_13333_isConstant)) {
              RAST._IExpr _13336_onExpr;
              DCOMPUTF16._IOwnership _13337_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13338_recIdents;
              RAST._IExpr _out7314;
              DCOMPUTF16._IOwnership _out7315;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7316;
              DCOMPUTF16.COMP.GenExpr(_13335_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7314, out _out7315, out _out7316);
              _13336_onExpr = _out7314;
              _13337_onOwned = _out7315;
              _13338_recIdents = _out7316;
              r = ((_13336_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13334_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7317;
              DCOMPUTF16._IOwnership _out7318;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7317, out _out7318);
              r = _out7317;
              resultingOwnership = _out7318;
              readIdents = _13338_recIdents;
            } else {
              RAST._IExpr _13339_onExpr;
              DCOMPUTF16._IOwnership _13340_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13341_recIdents;
              RAST._IExpr _out7319;
              DCOMPUTF16._IOwnership _out7320;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7321;
              DCOMPUTF16.COMP.GenExpr(_13335_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7319, out _out7320, out _out7321);
              _13339_onExpr = _out7319;
              _13340_onOwned = _out7320;
              _13341_recIdents = _out7321;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13339_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13334_field));
              RAST._IExpr _out7322;
              DCOMPUTF16._IOwnership _out7323;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7322, out _out7323);
              r = _out7322;
              resultingOwnership = _out7323;
              readIdents = _13341_recIdents;
            }
            return ;
          }
        } else if (_source688.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _13342___mcc_h90 = _source688.dtor_elements;
          DAST._IType _13343___mcc_h91 = _source688.dtor_typ;
          bool _13344_isDatatype = _13235___mcc_h51;
          bool _13345_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13346_field = _13233___mcc_h49;
          DAST._IExpression _13347_on = _13232___mcc_h48;
          {
            if ((_13344_isDatatype) || (_13345_isConstant)) {
              RAST._IExpr _13348_onExpr;
              DCOMPUTF16._IOwnership _13349_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13350_recIdents;
              RAST._IExpr _out7324;
              DCOMPUTF16._IOwnership _out7325;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7326;
              DCOMPUTF16.COMP.GenExpr(_13347_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7324, out _out7325, out _out7326);
              _13348_onExpr = _out7324;
              _13349_onOwned = _out7325;
              _13350_recIdents = _out7326;
              r = ((_13348_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13346_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7327;
              DCOMPUTF16._IOwnership _out7328;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7327, out _out7328);
              r = _out7327;
              resultingOwnership = _out7328;
              readIdents = _13350_recIdents;
            } else {
              RAST._IExpr _13351_onExpr;
              DCOMPUTF16._IOwnership _13352_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13353_recIdents;
              RAST._IExpr _out7329;
              DCOMPUTF16._IOwnership _out7330;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7331;
              DCOMPUTF16.COMP.GenExpr(_13347_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7329, out _out7330, out _out7331);
              _13351_onExpr = _out7329;
              _13352_onOwned = _out7330;
              _13353_recIdents = _out7331;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13351_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13346_field));
              RAST._IExpr _out7332;
              DCOMPUTF16._IOwnership _out7333;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7332, out _out7333);
              r = _out7332;
              resultingOwnership = _out7333;
              readIdents = _13353_recIdents;
            }
            return ;
          }
        } else if (_source688.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _13354___mcc_h94 = _source688.dtor_elements;
          bool _13355_isDatatype = _13235___mcc_h51;
          bool _13356_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13357_field = _13233___mcc_h49;
          DAST._IExpression _13358_on = _13232___mcc_h48;
          {
            if ((_13355_isDatatype) || (_13356_isConstant)) {
              RAST._IExpr _13359_onExpr;
              DCOMPUTF16._IOwnership _13360_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13361_recIdents;
              RAST._IExpr _out7334;
              DCOMPUTF16._IOwnership _out7335;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7336;
              DCOMPUTF16.COMP.GenExpr(_13358_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7334, out _out7335, out _out7336);
              _13359_onExpr = _out7334;
              _13360_onOwned = _out7335;
              _13361_recIdents = _out7336;
              r = ((_13359_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13357_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7337;
              DCOMPUTF16._IOwnership _out7338;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7337, out _out7338);
              r = _out7337;
              resultingOwnership = _out7338;
              readIdents = _13361_recIdents;
            } else {
              RAST._IExpr _13362_onExpr;
              DCOMPUTF16._IOwnership _13363_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13364_recIdents;
              RAST._IExpr _out7339;
              DCOMPUTF16._IOwnership _out7340;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7341;
              DCOMPUTF16.COMP.GenExpr(_13358_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7339, out _out7340, out _out7341);
              _13362_onExpr = _out7339;
              _13363_onOwned = _out7340;
              _13364_recIdents = _out7341;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13362_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13357_field));
              RAST._IExpr _out7342;
              DCOMPUTF16._IOwnership _out7343;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7342, out _out7343);
              r = _out7342;
              resultingOwnership = _out7343;
              readIdents = _13364_recIdents;
            }
            return ;
          }
        } else if (_source688.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _13365___mcc_h96 = _source688.dtor_elements;
          bool _13366_isDatatype = _13235___mcc_h51;
          bool _13367_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13368_field = _13233___mcc_h49;
          DAST._IExpression _13369_on = _13232___mcc_h48;
          {
            if ((_13366_isDatatype) || (_13367_isConstant)) {
              RAST._IExpr _13370_onExpr;
              DCOMPUTF16._IOwnership _13371_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13372_recIdents;
              RAST._IExpr _out7344;
              DCOMPUTF16._IOwnership _out7345;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7346;
              DCOMPUTF16.COMP.GenExpr(_13369_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7344, out _out7345, out _out7346);
              _13370_onExpr = _out7344;
              _13371_onOwned = _out7345;
              _13372_recIdents = _out7346;
              r = ((_13370_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13368_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7347;
              DCOMPUTF16._IOwnership _out7348;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7347, out _out7348);
              r = _out7347;
              resultingOwnership = _out7348;
              readIdents = _13372_recIdents;
            } else {
              RAST._IExpr _13373_onExpr;
              DCOMPUTF16._IOwnership _13374_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13375_recIdents;
              RAST._IExpr _out7349;
              DCOMPUTF16._IOwnership _out7350;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7351;
              DCOMPUTF16.COMP.GenExpr(_13369_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7349, out _out7350, out _out7351);
              _13373_onExpr = _out7349;
              _13374_onOwned = _out7350;
              _13375_recIdents = _out7351;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13373_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13368_field));
              RAST._IExpr _out7352;
              DCOMPUTF16._IOwnership _out7353;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7352, out _out7353);
              r = _out7352;
              resultingOwnership = _out7353;
              readIdents = _13375_recIdents;
            }
            return ;
          }
        } else if (_source688.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _13376___mcc_h98 = _source688.dtor_mapElems;
          bool _13377_isDatatype = _13235___mcc_h51;
          bool _13378_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13379_field = _13233___mcc_h49;
          DAST._IExpression _13380_on = _13232___mcc_h48;
          {
            if ((_13377_isDatatype) || (_13378_isConstant)) {
              RAST._IExpr _13381_onExpr;
              DCOMPUTF16._IOwnership _13382_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13383_recIdents;
              RAST._IExpr _out7354;
              DCOMPUTF16._IOwnership _out7355;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7356;
              DCOMPUTF16.COMP.GenExpr(_13380_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7354, out _out7355, out _out7356);
              _13381_onExpr = _out7354;
              _13382_onOwned = _out7355;
              _13383_recIdents = _out7356;
              r = ((_13381_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13379_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7357;
              DCOMPUTF16._IOwnership _out7358;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7357, out _out7358);
              r = _out7357;
              resultingOwnership = _out7358;
              readIdents = _13383_recIdents;
            } else {
              RAST._IExpr _13384_onExpr;
              DCOMPUTF16._IOwnership _13385_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13386_recIdents;
              RAST._IExpr _out7359;
              DCOMPUTF16._IOwnership _out7360;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7361;
              DCOMPUTF16.COMP.GenExpr(_13380_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7359, out _out7360, out _out7361);
              _13384_onExpr = _out7359;
              _13385_onOwned = _out7360;
              _13386_recIdents = _out7361;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13384_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13379_field));
              RAST._IExpr _out7362;
              DCOMPUTF16._IOwnership _out7363;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7362, out _out7363);
              r = _out7362;
              resultingOwnership = _out7363;
              readIdents = _13386_recIdents;
            }
            return ;
          }
        } else if (_source688.is_MapBuilder) {
          DAST._IType _13387___mcc_h100 = _source688.dtor_keyType;
          DAST._IType _13388___mcc_h101 = _source688.dtor_valueType;
          bool _13389_isDatatype = _13235___mcc_h51;
          bool _13390_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13391_field = _13233___mcc_h49;
          DAST._IExpression _13392_on = _13232___mcc_h48;
          {
            if ((_13389_isDatatype) || (_13390_isConstant)) {
              RAST._IExpr _13393_onExpr;
              DCOMPUTF16._IOwnership _13394_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13395_recIdents;
              RAST._IExpr _out7364;
              DCOMPUTF16._IOwnership _out7365;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7366;
              DCOMPUTF16.COMP.GenExpr(_13392_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7364, out _out7365, out _out7366);
              _13393_onExpr = _out7364;
              _13394_onOwned = _out7365;
              _13395_recIdents = _out7366;
              r = ((_13393_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13391_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7367;
              DCOMPUTF16._IOwnership _out7368;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7367, out _out7368);
              r = _out7367;
              resultingOwnership = _out7368;
              readIdents = _13395_recIdents;
            } else {
              RAST._IExpr _13396_onExpr;
              DCOMPUTF16._IOwnership _13397_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13398_recIdents;
              RAST._IExpr _out7369;
              DCOMPUTF16._IOwnership _out7370;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7371;
              DCOMPUTF16.COMP.GenExpr(_13392_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7369, out _out7370, out _out7371);
              _13396_onExpr = _out7369;
              _13397_onOwned = _out7370;
              _13398_recIdents = _out7371;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13396_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13391_field));
              RAST._IExpr _out7372;
              DCOMPUTF16._IOwnership _out7373;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7372, out _out7373);
              r = _out7372;
              resultingOwnership = _out7373;
              readIdents = _13398_recIdents;
            }
            return ;
          }
        } else if (_source688.is_SeqUpdate) {
          DAST._IExpression _13399___mcc_h104 = _source688.dtor_expr;
          DAST._IExpression _13400___mcc_h105 = _source688.dtor_indexExpr;
          DAST._IExpression _13401___mcc_h106 = _source688.dtor_value;
          bool _13402_isDatatype = _13235___mcc_h51;
          bool _13403_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13404_field = _13233___mcc_h49;
          DAST._IExpression _13405_on = _13232___mcc_h48;
          {
            if ((_13402_isDatatype) || (_13403_isConstant)) {
              RAST._IExpr _13406_onExpr;
              DCOMPUTF16._IOwnership _13407_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13408_recIdents;
              RAST._IExpr _out7374;
              DCOMPUTF16._IOwnership _out7375;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7376;
              DCOMPUTF16.COMP.GenExpr(_13405_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7374, out _out7375, out _out7376);
              _13406_onExpr = _out7374;
              _13407_onOwned = _out7375;
              _13408_recIdents = _out7376;
              r = ((_13406_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13404_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7377;
              DCOMPUTF16._IOwnership _out7378;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7377, out _out7378);
              r = _out7377;
              resultingOwnership = _out7378;
              readIdents = _13408_recIdents;
            } else {
              RAST._IExpr _13409_onExpr;
              DCOMPUTF16._IOwnership _13410_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13411_recIdents;
              RAST._IExpr _out7379;
              DCOMPUTF16._IOwnership _out7380;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7381;
              DCOMPUTF16.COMP.GenExpr(_13405_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7379, out _out7380, out _out7381);
              _13409_onExpr = _out7379;
              _13410_onOwned = _out7380;
              _13411_recIdents = _out7381;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13409_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13404_field));
              RAST._IExpr _out7382;
              DCOMPUTF16._IOwnership _out7383;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7382, out _out7383);
              r = _out7382;
              resultingOwnership = _out7383;
              readIdents = _13411_recIdents;
            }
            return ;
          }
        } else if (_source688.is_MapUpdate) {
          DAST._IExpression _13412___mcc_h110 = _source688.dtor_expr;
          DAST._IExpression _13413___mcc_h111 = _source688.dtor_indexExpr;
          DAST._IExpression _13414___mcc_h112 = _source688.dtor_value;
          bool _13415_isDatatype = _13235___mcc_h51;
          bool _13416_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13417_field = _13233___mcc_h49;
          DAST._IExpression _13418_on = _13232___mcc_h48;
          {
            if ((_13415_isDatatype) || (_13416_isConstant)) {
              RAST._IExpr _13419_onExpr;
              DCOMPUTF16._IOwnership _13420_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13421_recIdents;
              RAST._IExpr _out7384;
              DCOMPUTF16._IOwnership _out7385;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7386;
              DCOMPUTF16.COMP.GenExpr(_13418_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7384, out _out7385, out _out7386);
              _13419_onExpr = _out7384;
              _13420_onOwned = _out7385;
              _13421_recIdents = _out7386;
              r = ((_13419_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13417_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7387;
              DCOMPUTF16._IOwnership _out7388;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7387, out _out7388);
              r = _out7387;
              resultingOwnership = _out7388;
              readIdents = _13421_recIdents;
            } else {
              RAST._IExpr _13422_onExpr;
              DCOMPUTF16._IOwnership _13423_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13424_recIdents;
              RAST._IExpr _out7389;
              DCOMPUTF16._IOwnership _out7390;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7391;
              DCOMPUTF16.COMP.GenExpr(_13418_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7389, out _out7390, out _out7391);
              _13422_onExpr = _out7389;
              _13423_onOwned = _out7390;
              _13424_recIdents = _out7391;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13422_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13417_field));
              RAST._IExpr _out7392;
              DCOMPUTF16._IOwnership _out7393;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7392, out _out7393);
              r = _out7392;
              resultingOwnership = _out7393;
              readIdents = _13424_recIdents;
            }
            return ;
          }
        } else if (_source688.is_SetBuilder) {
          DAST._IType _13425___mcc_h116 = _source688.dtor_elemType;
          bool _13426_isDatatype = _13235___mcc_h51;
          bool _13427_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13428_field = _13233___mcc_h49;
          DAST._IExpression _13429_on = _13232___mcc_h48;
          {
            if ((_13426_isDatatype) || (_13427_isConstant)) {
              RAST._IExpr _13430_onExpr;
              DCOMPUTF16._IOwnership _13431_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13432_recIdents;
              RAST._IExpr _out7394;
              DCOMPUTF16._IOwnership _out7395;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7396;
              DCOMPUTF16.COMP.GenExpr(_13429_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7394, out _out7395, out _out7396);
              _13430_onExpr = _out7394;
              _13431_onOwned = _out7395;
              _13432_recIdents = _out7396;
              r = ((_13430_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13428_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7397;
              DCOMPUTF16._IOwnership _out7398;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7397, out _out7398);
              r = _out7397;
              resultingOwnership = _out7398;
              readIdents = _13432_recIdents;
            } else {
              RAST._IExpr _13433_onExpr;
              DCOMPUTF16._IOwnership _13434_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13435_recIdents;
              RAST._IExpr _out7399;
              DCOMPUTF16._IOwnership _out7400;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7401;
              DCOMPUTF16.COMP.GenExpr(_13429_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7399, out _out7400, out _out7401);
              _13433_onExpr = _out7399;
              _13434_onOwned = _out7400;
              _13435_recIdents = _out7401;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13433_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13428_field));
              RAST._IExpr _out7402;
              DCOMPUTF16._IOwnership _out7403;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7402, out _out7403);
              r = _out7402;
              resultingOwnership = _out7403;
              readIdents = _13435_recIdents;
            }
            return ;
          }
        } else if (_source688.is_ToMultiset) {
          DAST._IExpression _13436___mcc_h118 = _source688.dtor_ToMultiset_a0;
          bool _13437_isDatatype = _13235___mcc_h51;
          bool _13438_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13439_field = _13233___mcc_h49;
          DAST._IExpression _13440_on = _13232___mcc_h48;
          {
            if ((_13437_isDatatype) || (_13438_isConstant)) {
              RAST._IExpr _13441_onExpr;
              DCOMPUTF16._IOwnership _13442_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13443_recIdents;
              RAST._IExpr _out7404;
              DCOMPUTF16._IOwnership _out7405;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7406;
              DCOMPUTF16.COMP.GenExpr(_13440_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7404, out _out7405, out _out7406);
              _13441_onExpr = _out7404;
              _13442_onOwned = _out7405;
              _13443_recIdents = _out7406;
              r = ((_13441_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13439_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7407;
              DCOMPUTF16._IOwnership _out7408;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7407, out _out7408);
              r = _out7407;
              resultingOwnership = _out7408;
              readIdents = _13443_recIdents;
            } else {
              RAST._IExpr _13444_onExpr;
              DCOMPUTF16._IOwnership _13445_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13446_recIdents;
              RAST._IExpr _out7409;
              DCOMPUTF16._IOwnership _out7410;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7411;
              DCOMPUTF16.COMP.GenExpr(_13440_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7409, out _out7410, out _out7411);
              _13444_onExpr = _out7409;
              _13445_onOwned = _out7410;
              _13446_recIdents = _out7411;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13444_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13439_field));
              RAST._IExpr _out7412;
              DCOMPUTF16._IOwnership _out7413;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7412, out _out7413);
              r = _out7412;
              resultingOwnership = _out7413;
              readIdents = _13446_recIdents;
            }
            return ;
          }
        } else if (_source688.is_This) {
          bool _13447_isDatatype = _13235___mcc_h51;
          bool _13448_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13449_field = _13233___mcc_h49;
          DAST._IExpression _13450_on = _13232___mcc_h48;
          {
            if ((_13447_isDatatype) || (_13448_isConstant)) {
              RAST._IExpr _13451_onExpr;
              DCOMPUTF16._IOwnership _13452_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13453_recIdents;
              RAST._IExpr _out7414;
              DCOMPUTF16._IOwnership _out7415;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7416;
              DCOMPUTF16.COMP.GenExpr(_13450_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7414, out _out7415, out _out7416);
              _13451_onExpr = _out7414;
              _13452_onOwned = _out7415;
              _13453_recIdents = _out7416;
              r = ((_13451_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13449_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7417;
              DCOMPUTF16._IOwnership _out7418;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7417, out _out7418);
              r = _out7417;
              resultingOwnership = _out7418;
              readIdents = _13453_recIdents;
            } else {
              RAST._IExpr _13454_onExpr;
              DCOMPUTF16._IOwnership _13455_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13456_recIdents;
              RAST._IExpr _out7419;
              DCOMPUTF16._IOwnership _out7420;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7421;
              DCOMPUTF16.COMP.GenExpr(_13450_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7419, out _out7420, out _out7421);
              _13454_onExpr = _out7419;
              _13455_onOwned = _out7420;
              _13456_recIdents = _out7421;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13454_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13449_field));
              RAST._IExpr _out7422;
              DCOMPUTF16._IOwnership _out7423;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7422, out _out7423);
              r = _out7422;
              resultingOwnership = _out7423;
              readIdents = _13456_recIdents;
            }
            return ;
          }
        } else if (_source688.is_Ite) {
          DAST._IExpression _13457___mcc_h120 = _source688.dtor_cond;
          DAST._IExpression _13458___mcc_h121 = _source688.dtor_thn;
          DAST._IExpression _13459___mcc_h122 = _source688.dtor_els;
          bool _13460_isDatatype = _13235___mcc_h51;
          bool _13461_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13462_field = _13233___mcc_h49;
          DAST._IExpression _13463_on = _13232___mcc_h48;
          {
            if ((_13460_isDatatype) || (_13461_isConstant)) {
              RAST._IExpr _13464_onExpr;
              DCOMPUTF16._IOwnership _13465_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13466_recIdents;
              RAST._IExpr _out7424;
              DCOMPUTF16._IOwnership _out7425;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7426;
              DCOMPUTF16.COMP.GenExpr(_13463_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7424, out _out7425, out _out7426);
              _13464_onExpr = _out7424;
              _13465_onOwned = _out7425;
              _13466_recIdents = _out7426;
              r = ((_13464_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13462_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7427;
              DCOMPUTF16._IOwnership _out7428;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7427, out _out7428);
              r = _out7427;
              resultingOwnership = _out7428;
              readIdents = _13466_recIdents;
            } else {
              RAST._IExpr _13467_onExpr;
              DCOMPUTF16._IOwnership _13468_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13469_recIdents;
              RAST._IExpr _out7429;
              DCOMPUTF16._IOwnership _out7430;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7431;
              DCOMPUTF16.COMP.GenExpr(_13463_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7429, out _out7430, out _out7431);
              _13467_onExpr = _out7429;
              _13468_onOwned = _out7430;
              _13469_recIdents = _out7431;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13467_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13462_field));
              RAST._IExpr _out7432;
              DCOMPUTF16._IOwnership _out7433;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7432, out _out7433);
              r = _out7432;
              resultingOwnership = _out7433;
              readIdents = _13469_recIdents;
            }
            return ;
          }
        } else if (_source688.is_UnOp) {
          DAST._IUnaryOp _13470___mcc_h126 = _source688.dtor_unOp;
          DAST._IExpression _13471___mcc_h127 = _source688.dtor_expr;
          DAST.Format._IUnOpFormat _13472___mcc_h128 = _source688.dtor_format1;
          bool _13473_isDatatype = _13235___mcc_h51;
          bool _13474_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13475_field = _13233___mcc_h49;
          DAST._IExpression _13476_on = _13232___mcc_h48;
          {
            if ((_13473_isDatatype) || (_13474_isConstant)) {
              RAST._IExpr _13477_onExpr;
              DCOMPUTF16._IOwnership _13478_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13479_recIdents;
              RAST._IExpr _out7434;
              DCOMPUTF16._IOwnership _out7435;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7436;
              DCOMPUTF16.COMP.GenExpr(_13476_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7434, out _out7435, out _out7436);
              _13477_onExpr = _out7434;
              _13478_onOwned = _out7435;
              _13479_recIdents = _out7436;
              r = ((_13477_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13475_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7437;
              DCOMPUTF16._IOwnership _out7438;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7437, out _out7438);
              r = _out7437;
              resultingOwnership = _out7438;
              readIdents = _13479_recIdents;
            } else {
              RAST._IExpr _13480_onExpr;
              DCOMPUTF16._IOwnership _13481_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13482_recIdents;
              RAST._IExpr _out7439;
              DCOMPUTF16._IOwnership _out7440;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7441;
              DCOMPUTF16.COMP.GenExpr(_13476_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7439, out _out7440, out _out7441);
              _13480_onExpr = _out7439;
              _13481_onOwned = _out7440;
              _13482_recIdents = _out7441;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13480_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13475_field));
              RAST._IExpr _out7442;
              DCOMPUTF16._IOwnership _out7443;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7442, out _out7443);
              r = _out7442;
              resultingOwnership = _out7443;
              readIdents = _13482_recIdents;
            }
            return ;
          }
        } else if (_source688.is_BinOp) {
          DAST._IBinOp _13483___mcc_h132 = _source688.dtor_op;
          DAST._IExpression _13484___mcc_h133 = _source688.dtor_left;
          DAST._IExpression _13485___mcc_h134 = _source688.dtor_right;
          DAST.Format._IBinOpFormat _13486___mcc_h135 = _source688.dtor_format2;
          bool _13487_isDatatype = _13235___mcc_h51;
          bool _13488_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13489_field = _13233___mcc_h49;
          DAST._IExpression _13490_on = _13232___mcc_h48;
          {
            if ((_13487_isDatatype) || (_13488_isConstant)) {
              RAST._IExpr _13491_onExpr;
              DCOMPUTF16._IOwnership _13492_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13493_recIdents;
              RAST._IExpr _out7444;
              DCOMPUTF16._IOwnership _out7445;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7446;
              DCOMPUTF16.COMP.GenExpr(_13490_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7444, out _out7445, out _out7446);
              _13491_onExpr = _out7444;
              _13492_onOwned = _out7445;
              _13493_recIdents = _out7446;
              r = ((_13491_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13489_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7447;
              DCOMPUTF16._IOwnership _out7448;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7447, out _out7448);
              r = _out7447;
              resultingOwnership = _out7448;
              readIdents = _13493_recIdents;
            } else {
              RAST._IExpr _13494_onExpr;
              DCOMPUTF16._IOwnership _13495_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13496_recIdents;
              RAST._IExpr _out7449;
              DCOMPUTF16._IOwnership _out7450;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7451;
              DCOMPUTF16.COMP.GenExpr(_13490_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7449, out _out7450, out _out7451);
              _13494_onExpr = _out7449;
              _13495_onOwned = _out7450;
              _13496_recIdents = _out7451;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13494_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13489_field));
              RAST._IExpr _out7452;
              DCOMPUTF16._IOwnership _out7453;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7452, out _out7453);
              r = _out7452;
              resultingOwnership = _out7453;
              readIdents = _13496_recIdents;
            }
            return ;
          }
        } else if (_source688.is_ArrayLen) {
          DAST._IExpression _13497___mcc_h140 = _source688.dtor_expr;
          BigInteger _13498___mcc_h141 = _source688.dtor_dim;
          bool _13499_isDatatype = _13235___mcc_h51;
          bool _13500_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13501_field = _13233___mcc_h49;
          DAST._IExpression _13502_on = _13232___mcc_h48;
          {
            if ((_13499_isDatatype) || (_13500_isConstant)) {
              RAST._IExpr _13503_onExpr;
              DCOMPUTF16._IOwnership _13504_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13505_recIdents;
              RAST._IExpr _out7454;
              DCOMPUTF16._IOwnership _out7455;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7456;
              DCOMPUTF16.COMP.GenExpr(_13502_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7454, out _out7455, out _out7456);
              _13503_onExpr = _out7454;
              _13504_onOwned = _out7455;
              _13505_recIdents = _out7456;
              r = ((_13503_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13501_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7457;
              DCOMPUTF16._IOwnership _out7458;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7457, out _out7458);
              r = _out7457;
              resultingOwnership = _out7458;
              readIdents = _13505_recIdents;
            } else {
              RAST._IExpr _13506_onExpr;
              DCOMPUTF16._IOwnership _13507_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13508_recIdents;
              RAST._IExpr _out7459;
              DCOMPUTF16._IOwnership _out7460;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7461;
              DCOMPUTF16.COMP.GenExpr(_13502_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7459, out _out7460, out _out7461);
              _13506_onExpr = _out7459;
              _13507_onOwned = _out7460;
              _13508_recIdents = _out7461;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13506_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13501_field));
              RAST._IExpr _out7462;
              DCOMPUTF16._IOwnership _out7463;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7462, out _out7463);
              r = _out7462;
              resultingOwnership = _out7463;
              readIdents = _13508_recIdents;
            }
            return ;
          }
        } else if (_source688.is_MapKeys) {
          DAST._IExpression _13509___mcc_h144 = _source688.dtor_expr;
          bool _13510_isDatatype = _13235___mcc_h51;
          bool _13511_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13512_field = _13233___mcc_h49;
          DAST._IExpression _13513_on = _13232___mcc_h48;
          {
            if ((_13510_isDatatype) || (_13511_isConstant)) {
              RAST._IExpr _13514_onExpr;
              DCOMPUTF16._IOwnership _13515_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13516_recIdents;
              RAST._IExpr _out7464;
              DCOMPUTF16._IOwnership _out7465;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7466;
              DCOMPUTF16.COMP.GenExpr(_13513_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7464, out _out7465, out _out7466);
              _13514_onExpr = _out7464;
              _13515_onOwned = _out7465;
              _13516_recIdents = _out7466;
              r = ((_13514_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13512_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7467;
              DCOMPUTF16._IOwnership _out7468;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7467, out _out7468);
              r = _out7467;
              resultingOwnership = _out7468;
              readIdents = _13516_recIdents;
            } else {
              RAST._IExpr _13517_onExpr;
              DCOMPUTF16._IOwnership _13518_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13519_recIdents;
              RAST._IExpr _out7469;
              DCOMPUTF16._IOwnership _out7470;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7471;
              DCOMPUTF16.COMP.GenExpr(_13513_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7469, out _out7470, out _out7471);
              _13517_onExpr = _out7469;
              _13518_onOwned = _out7470;
              _13519_recIdents = _out7471;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13517_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13512_field));
              RAST._IExpr _out7472;
              DCOMPUTF16._IOwnership _out7473;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7472, out _out7473);
              r = _out7472;
              resultingOwnership = _out7473;
              readIdents = _13519_recIdents;
            }
            return ;
          }
        } else if (_source688.is_MapValues) {
          DAST._IExpression _13520___mcc_h146 = _source688.dtor_expr;
          bool _13521_isDatatype = _13235___mcc_h51;
          bool _13522_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13523_field = _13233___mcc_h49;
          DAST._IExpression _13524_on = _13232___mcc_h48;
          {
            if ((_13521_isDatatype) || (_13522_isConstant)) {
              RAST._IExpr _13525_onExpr;
              DCOMPUTF16._IOwnership _13526_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13527_recIdents;
              RAST._IExpr _out7474;
              DCOMPUTF16._IOwnership _out7475;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7476;
              DCOMPUTF16.COMP.GenExpr(_13524_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7474, out _out7475, out _out7476);
              _13525_onExpr = _out7474;
              _13526_onOwned = _out7475;
              _13527_recIdents = _out7476;
              r = ((_13525_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13523_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7477;
              DCOMPUTF16._IOwnership _out7478;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7477, out _out7478);
              r = _out7477;
              resultingOwnership = _out7478;
              readIdents = _13527_recIdents;
            } else {
              RAST._IExpr _13528_onExpr;
              DCOMPUTF16._IOwnership _13529_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13530_recIdents;
              RAST._IExpr _out7479;
              DCOMPUTF16._IOwnership _out7480;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7481;
              DCOMPUTF16.COMP.GenExpr(_13524_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7479, out _out7480, out _out7481);
              _13528_onExpr = _out7479;
              _13529_onOwned = _out7480;
              _13530_recIdents = _out7481;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13528_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13523_field));
              RAST._IExpr _out7482;
              DCOMPUTF16._IOwnership _out7483;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7482, out _out7483);
              r = _out7482;
              resultingOwnership = _out7483;
              readIdents = _13530_recIdents;
            }
            return ;
          }
        } else if (_source688.is_Select) {
          DAST._IExpression _13531___mcc_h148 = _source688.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _13532___mcc_h149 = _source688.dtor_field;
          bool _13533___mcc_h150 = _source688.dtor_isConstant;
          bool _13534___mcc_h151 = _source688.dtor_onDatatype;
          bool _13535_isDatatype = _13235___mcc_h51;
          bool _13536_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13537_field = _13233___mcc_h49;
          DAST._IExpression _13538_on = _13232___mcc_h48;
          {
            if ((_13535_isDatatype) || (_13536_isConstant)) {
              RAST._IExpr _13539_onExpr;
              DCOMPUTF16._IOwnership _13540_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13541_recIdents;
              RAST._IExpr _out7484;
              DCOMPUTF16._IOwnership _out7485;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7486;
              DCOMPUTF16.COMP.GenExpr(_13538_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7484, out _out7485, out _out7486);
              _13539_onExpr = _out7484;
              _13540_onOwned = _out7485;
              _13541_recIdents = _out7486;
              r = ((_13539_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13537_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7487;
              DCOMPUTF16._IOwnership _out7488;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7487, out _out7488);
              r = _out7487;
              resultingOwnership = _out7488;
              readIdents = _13541_recIdents;
            } else {
              RAST._IExpr _13542_onExpr;
              DCOMPUTF16._IOwnership _13543_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13544_recIdents;
              RAST._IExpr _out7489;
              DCOMPUTF16._IOwnership _out7490;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7491;
              DCOMPUTF16.COMP.GenExpr(_13538_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7489, out _out7490, out _out7491);
              _13542_onExpr = _out7489;
              _13543_onOwned = _out7490;
              _13544_recIdents = _out7491;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13542_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13537_field));
              RAST._IExpr _out7492;
              DCOMPUTF16._IOwnership _out7493;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7492, out _out7493);
              r = _out7492;
              resultingOwnership = _out7493;
              readIdents = _13544_recIdents;
            }
            return ;
          }
        } else if (_source688.is_SelectFn) {
          DAST._IExpression _13545___mcc_h156 = _source688.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _13546___mcc_h157 = _source688.dtor_field;
          bool _13547___mcc_h158 = _source688.dtor_onDatatype;
          bool _13548___mcc_h159 = _source688.dtor_isStatic;
          BigInteger _13549___mcc_h160 = _source688.dtor_arity;
          bool _13550_isDatatype = _13235___mcc_h51;
          bool _13551_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13552_field = _13233___mcc_h49;
          DAST._IExpression _13553_on = _13232___mcc_h48;
          {
            if ((_13550_isDatatype) || (_13551_isConstant)) {
              RAST._IExpr _13554_onExpr;
              DCOMPUTF16._IOwnership _13555_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13556_recIdents;
              RAST._IExpr _out7494;
              DCOMPUTF16._IOwnership _out7495;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7496;
              DCOMPUTF16.COMP.GenExpr(_13553_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7494, out _out7495, out _out7496);
              _13554_onExpr = _out7494;
              _13555_onOwned = _out7495;
              _13556_recIdents = _out7496;
              r = ((_13554_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13552_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7497;
              DCOMPUTF16._IOwnership _out7498;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7497, out _out7498);
              r = _out7497;
              resultingOwnership = _out7498;
              readIdents = _13556_recIdents;
            } else {
              RAST._IExpr _13557_onExpr;
              DCOMPUTF16._IOwnership _13558_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13559_recIdents;
              RAST._IExpr _out7499;
              DCOMPUTF16._IOwnership _out7500;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7501;
              DCOMPUTF16.COMP.GenExpr(_13553_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7499, out _out7500, out _out7501);
              _13557_onExpr = _out7499;
              _13558_onOwned = _out7500;
              _13559_recIdents = _out7501;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13557_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13552_field));
              RAST._IExpr _out7502;
              DCOMPUTF16._IOwnership _out7503;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7502, out _out7503);
              r = _out7502;
              resultingOwnership = _out7503;
              readIdents = _13559_recIdents;
            }
            return ;
          }
        } else if (_source688.is_Index) {
          DAST._IExpression _13560___mcc_h166 = _source688.dtor_expr;
          DAST._ICollKind _13561___mcc_h167 = _source688.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _13562___mcc_h168 = _source688.dtor_indices;
          bool _13563_isDatatype = _13235___mcc_h51;
          bool _13564_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13565_field = _13233___mcc_h49;
          DAST._IExpression _13566_on = _13232___mcc_h48;
          {
            if ((_13563_isDatatype) || (_13564_isConstant)) {
              RAST._IExpr _13567_onExpr;
              DCOMPUTF16._IOwnership _13568_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13569_recIdents;
              RAST._IExpr _out7504;
              DCOMPUTF16._IOwnership _out7505;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7506;
              DCOMPUTF16.COMP.GenExpr(_13566_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7504, out _out7505, out _out7506);
              _13567_onExpr = _out7504;
              _13568_onOwned = _out7505;
              _13569_recIdents = _out7506;
              r = ((_13567_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13565_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7507;
              DCOMPUTF16._IOwnership _out7508;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7507, out _out7508);
              r = _out7507;
              resultingOwnership = _out7508;
              readIdents = _13569_recIdents;
            } else {
              RAST._IExpr _13570_onExpr;
              DCOMPUTF16._IOwnership _13571_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13572_recIdents;
              RAST._IExpr _out7509;
              DCOMPUTF16._IOwnership _out7510;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7511;
              DCOMPUTF16.COMP.GenExpr(_13566_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7509, out _out7510, out _out7511);
              _13570_onExpr = _out7509;
              _13571_onOwned = _out7510;
              _13572_recIdents = _out7511;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13570_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13565_field));
              RAST._IExpr _out7512;
              DCOMPUTF16._IOwnership _out7513;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7512, out _out7513);
              r = _out7512;
              resultingOwnership = _out7513;
              readIdents = _13572_recIdents;
            }
            return ;
          }
        } else if (_source688.is_IndexRange) {
          DAST._IExpression _13573___mcc_h172 = _source688.dtor_expr;
          bool _13574___mcc_h173 = _source688.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _13575___mcc_h174 = _source688.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _13576___mcc_h175 = _source688.dtor_high;
          bool _13577_isDatatype = _13235___mcc_h51;
          bool _13578_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13579_field = _13233___mcc_h49;
          DAST._IExpression _13580_on = _13232___mcc_h48;
          {
            if ((_13577_isDatatype) || (_13578_isConstant)) {
              RAST._IExpr _13581_onExpr;
              DCOMPUTF16._IOwnership _13582_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13583_recIdents;
              RAST._IExpr _out7514;
              DCOMPUTF16._IOwnership _out7515;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7516;
              DCOMPUTF16.COMP.GenExpr(_13580_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7514, out _out7515, out _out7516);
              _13581_onExpr = _out7514;
              _13582_onOwned = _out7515;
              _13583_recIdents = _out7516;
              r = ((_13581_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13579_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7517;
              DCOMPUTF16._IOwnership _out7518;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7517, out _out7518);
              r = _out7517;
              resultingOwnership = _out7518;
              readIdents = _13583_recIdents;
            } else {
              RAST._IExpr _13584_onExpr;
              DCOMPUTF16._IOwnership _13585_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13586_recIdents;
              RAST._IExpr _out7519;
              DCOMPUTF16._IOwnership _out7520;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7521;
              DCOMPUTF16.COMP.GenExpr(_13580_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7519, out _out7520, out _out7521);
              _13584_onExpr = _out7519;
              _13585_onOwned = _out7520;
              _13586_recIdents = _out7521;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13584_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13579_field));
              RAST._IExpr _out7522;
              DCOMPUTF16._IOwnership _out7523;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7522, out _out7523);
              r = _out7522;
              resultingOwnership = _out7523;
              readIdents = _13586_recIdents;
            }
            return ;
          }
        } else if (_source688.is_TupleSelect) {
          DAST._IExpression _13587___mcc_h180 = _source688.dtor_expr;
          BigInteger _13588___mcc_h181 = _source688.dtor_index;
          bool _13589_isDatatype = _13235___mcc_h51;
          bool _13590_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13591_field = _13233___mcc_h49;
          DAST._IExpression _13592_on = _13232___mcc_h48;
          {
            if ((_13589_isDatatype) || (_13590_isConstant)) {
              RAST._IExpr _13593_onExpr;
              DCOMPUTF16._IOwnership _13594_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13595_recIdents;
              RAST._IExpr _out7524;
              DCOMPUTF16._IOwnership _out7525;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7526;
              DCOMPUTF16.COMP.GenExpr(_13592_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7524, out _out7525, out _out7526);
              _13593_onExpr = _out7524;
              _13594_onOwned = _out7525;
              _13595_recIdents = _out7526;
              r = ((_13593_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13591_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7527;
              DCOMPUTF16._IOwnership _out7528;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7527, out _out7528);
              r = _out7527;
              resultingOwnership = _out7528;
              readIdents = _13595_recIdents;
            } else {
              RAST._IExpr _13596_onExpr;
              DCOMPUTF16._IOwnership _13597_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13598_recIdents;
              RAST._IExpr _out7529;
              DCOMPUTF16._IOwnership _out7530;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7531;
              DCOMPUTF16.COMP.GenExpr(_13592_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7529, out _out7530, out _out7531);
              _13596_onExpr = _out7529;
              _13597_onOwned = _out7530;
              _13598_recIdents = _out7531;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13596_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13591_field));
              RAST._IExpr _out7532;
              DCOMPUTF16._IOwnership _out7533;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7532, out _out7533);
              r = _out7532;
              resultingOwnership = _out7533;
              readIdents = _13598_recIdents;
            }
            return ;
          }
        } else if (_source688.is_Call) {
          DAST._IExpression _13599___mcc_h184 = _source688.dtor_on;
          DAST._ICallName _13600___mcc_h185 = _source688.dtor_callName;
          Dafny.ISequence<DAST._IType> _13601___mcc_h186 = _source688.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _13602___mcc_h187 = _source688.dtor_args;
          bool _13603_isDatatype = _13235___mcc_h51;
          bool _13604_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13605_field = _13233___mcc_h49;
          DAST._IExpression _13606_on = _13232___mcc_h48;
          {
            if ((_13603_isDatatype) || (_13604_isConstant)) {
              RAST._IExpr _13607_onExpr;
              DCOMPUTF16._IOwnership _13608_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13609_recIdents;
              RAST._IExpr _out7534;
              DCOMPUTF16._IOwnership _out7535;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7536;
              DCOMPUTF16.COMP.GenExpr(_13606_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7534, out _out7535, out _out7536);
              _13607_onExpr = _out7534;
              _13608_onOwned = _out7535;
              _13609_recIdents = _out7536;
              r = ((_13607_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13605_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7537;
              DCOMPUTF16._IOwnership _out7538;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7537, out _out7538);
              r = _out7537;
              resultingOwnership = _out7538;
              readIdents = _13609_recIdents;
            } else {
              RAST._IExpr _13610_onExpr;
              DCOMPUTF16._IOwnership _13611_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13612_recIdents;
              RAST._IExpr _out7539;
              DCOMPUTF16._IOwnership _out7540;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7541;
              DCOMPUTF16.COMP.GenExpr(_13606_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7539, out _out7540, out _out7541);
              _13610_onExpr = _out7539;
              _13611_onOwned = _out7540;
              _13612_recIdents = _out7541;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13610_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13605_field));
              RAST._IExpr _out7542;
              DCOMPUTF16._IOwnership _out7543;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7542, out _out7543);
              r = _out7542;
              resultingOwnership = _out7543;
              readIdents = _13612_recIdents;
            }
            return ;
          }
        } else if (_source688.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _13613___mcc_h192 = _source688.dtor_params;
          DAST._IType _13614___mcc_h193 = _source688.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _13615___mcc_h194 = _source688.dtor_body;
          bool _13616_isDatatype = _13235___mcc_h51;
          bool _13617_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13618_field = _13233___mcc_h49;
          DAST._IExpression _13619_on = _13232___mcc_h48;
          {
            if ((_13616_isDatatype) || (_13617_isConstant)) {
              RAST._IExpr _13620_onExpr;
              DCOMPUTF16._IOwnership _13621_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13622_recIdents;
              RAST._IExpr _out7544;
              DCOMPUTF16._IOwnership _out7545;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7546;
              DCOMPUTF16.COMP.GenExpr(_13619_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7544, out _out7545, out _out7546);
              _13620_onExpr = _out7544;
              _13621_onOwned = _out7545;
              _13622_recIdents = _out7546;
              r = ((_13620_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13618_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7547;
              DCOMPUTF16._IOwnership _out7548;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7547, out _out7548);
              r = _out7547;
              resultingOwnership = _out7548;
              readIdents = _13622_recIdents;
            } else {
              RAST._IExpr _13623_onExpr;
              DCOMPUTF16._IOwnership _13624_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13625_recIdents;
              RAST._IExpr _out7549;
              DCOMPUTF16._IOwnership _out7550;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7551;
              DCOMPUTF16.COMP.GenExpr(_13619_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7549, out _out7550, out _out7551);
              _13623_onExpr = _out7549;
              _13624_onOwned = _out7550;
              _13625_recIdents = _out7551;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13623_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13618_field));
              RAST._IExpr _out7552;
              DCOMPUTF16._IOwnership _out7553;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7552, out _out7553);
              r = _out7552;
              resultingOwnership = _out7553;
              readIdents = _13625_recIdents;
            }
            return ;
          }
        } else if (_source688.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _13626___mcc_h198 = _source688.dtor_values;
          DAST._IType _13627___mcc_h199 = _source688.dtor_retType;
          DAST._IExpression _13628___mcc_h200 = _source688.dtor_expr;
          bool _13629_isDatatype = _13235___mcc_h51;
          bool _13630_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13631_field = _13233___mcc_h49;
          DAST._IExpression _13632_on = _13232___mcc_h48;
          {
            if ((_13629_isDatatype) || (_13630_isConstant)) {
              RAST._IExpr _13633_onExpr;
              DCOMPUTF16._IOwnership _13634_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13635_recIdents;
              RAST._IExpr _out7554;
              DCOMPUTF16._IOwnership _out7555;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7556;
              DCOMPUTF16.COMP.GenExpr(_13632_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7554, out _out7555, out _out7556);
              _13633_onExpr = _out7554;
              _13634_onOwned = _out7555;
              _13635_recIdents = _out7556;
              r = ((_13633_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13631_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7557;
              DCOMPUTF16._IOwnership _out7558;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7557, out _out7558);
              r = _out7557;
              resultingOwnership = _out7558;
              readIdents = _13635_recIdents;
            } else {
              RAST._IExpr _13636_onExpr;
              DCOMPUTF16._IOwnership _13637_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13638_recIdents;
              RAST._IExpr _out7559;
              DCOMPUTF16._IOwnership _out7560;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7561;
              DCOMPUTF16.COMP.GenExpr(_13632_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7559, out _out7560, out _out7561);
              _13636_onExpr = _out7559;
              _13637_onOwned = _out7560;
              _13638_recIdents = _out7561;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13636_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13631_field));
              RAST._IExpr _out7562;
              DCOMPUTF16._IOwnership _out7563;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7562, out _out7563);
              r = _out7562;
              resultingOwnership = _out7563;
              readIdents = _13638_recIdents;
            }
            return ;
          }
        } else if (_source688.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _13639___mcc_h204 = _source688.dtor_name;
          DAST._IType _13640___mcc_h205 = _source688.dtor_typ;
          DAST._IExpression _13641___mcc_h206 = _source688.dtor_value;
          DAST._IExpression _13642___mcc_h207 = _source688.dtor_iifeBody;
          bool _13643_isDatatype = _13235___mcc_h51;
          bool _13644_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13645_field = _13233___mcc_h49;
          DAST._IExpression _13646_on = _13232___mcc_h48;
          {
            if ((_13643_isDatatype) || (_13644_isConstant)) {
              RAST._IExpr _13647_onExpr;
              DCOMPUTF16._IOwnership _13648_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13649_recIdents;
              RAST._IExpr _out7564;
              DCOMPUTF16._IOwnership _out7565;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7566;
              DCOMPUTF16.COMP.GenExpr(_13646_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7564, out _out7565, out _out7566);
              _13647_onExpr = _out7564;
              _13648_onOwned = _out7565;
              _13649_recIdents = _out7566;
              r = ((_13647_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13645_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7567;
              DCOMPUTF16._IOwnership _out7568;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7567, out _out7568);
              r = _out7567;
              resultingOwnership = _out7568;
              readIdents = _13649_recIdents;
            } else {
              RAST._IExpr _13650_onExpr;
              DCOMPUTF16._IOwnership _13651_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13652_recIdents;
              RAST._IExpr _out7569;
              DCOMPUTF16._IOwnership _out7570;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7571;
              DCOMPUTF16.COMP.GenExpr(_13646_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7569, out _out7570, out _out7571);
              _13650_onExpr = _out7569;
              _13651_onOwned = _out7570;
              _13652_recIdents = _out7571;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13650_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13645_field));
              RAST._IExpr _out7572;
              DCOMPUTF16._IOwnership _out7573;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7572, out _out7573);
              r = _out7572;
              resultingOwnership = _out7573;
              readIdents = _13652_recIdents;
            }
            return ;
          }
        } else if (_source688.is_Apply) {
          DAST._IExpression _13653___mcc_h212 = _source688.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _13654___mcc_h213 = _source688.dtor_args;
          bool _13655_isDatatype = _13235___mcc_h51;
          bool _13656_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13657_field = _13233___mcc_h49;
          DAST._IExpression _13658_on = _13232___mcc_h48;
          {
            if ((_13655_isDatatype) || (_13656_isConstant)) {
              RAST._IExpr _13659_onExpr;
              DCOMPUTF16._IOwnership _13660_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13661_recIdents;
              RAST._IExpr _out7574;
              DCOMPUTF16._IOwnership _out7575;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7576;
              DCOMPUTF16.COMP.GenExpr(_13658_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7574, out _out7575, out _out7576);
              _13659_onExpr = _out7574;
              _13660_onOwned = _out7575;
              _13661_recIdents = _out7576;
              r = ((_13659_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13657_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7577;
              DCOMPUTF16._IOwnership _out7578;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7577, out _out7578);
              r = _out7577;
              resultingOwnership = _out7578;
              readIdents = _13661_recIdents;
            } else {
              RAST._IExpr _13662_onExpr;
              DCOMPUTF16._IOwnership _13663_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13664_recIdents;
              RAST._IExpr _out7579;
              DCOMPUTF16._IOwnership _out7580;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7581;
              DCOMPUTF16.COMP.GenExpr(_13658_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7579, out _out7580, out _out7581);
              _13662_onExpr = _out7579;
              _13663_onOwned = _out7580;
              _13664_recIdents = _out7581;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13662_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13657_field));
              RAST._IExpr _out7582;
              DCOMPUTF16._IOwnership _out7583;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7582, out _out7583);
              r = _out7582;
              resultingOwnership = _out7583;
              readIdents = _13664_recIdents;
            }
            return ;
          }
        } else if (_source688.is_TypeTest) {
          DAST._IExpression _13665___mcc_h216 = _source688.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13666___mcc_h217 = _source688.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _13667___mcc_h218 = _source688.dtor_variant;
          bool _13668_isDatatype = _13235___mcc_h51;
          bool _13669_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13670_field = _13233___mcc_h49;
          DAST._IExpression _13671_on = _13232___mcc_h48;
          {
            if ((_13668_isDatatype) || (_13669_isConstant)) {
              RAST._IExpr _13672_onExpr;
              DCOMPUTF16._IOwnership _13673_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13674_recIdents;
              RAST._IExpr _out7584;
              DCOMPUTF16._IOwnership _out7585;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7586;
              DCOMPUTF16.COMP.GenExpr(_13671_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7584, out _out7585, out _out7586);
              _13672_onExpr = _out7584;
              _13673_onOwned = _out7585;
              _13674_recIdents = _out7586;
              r = ((_13672_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13670_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7587;
              DCOMPUTF16._IOwnership _out7588;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7587, out _out7588);
              r = _out7587;
              resultingOwnership = _out7588;
              readIdents = _13674_recIdents;
            } else {
              RAST._IExpr _13675_onExpr;
              DCOMPUTF16._IOwnership _13676_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13677_recIdents;
              RAST._IExpr _out7589;
              DCOMPUTF16._IOwnership _out7590;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7591;
              DCOMPUTF16.COMP.GenExpr(_13671_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7589, out _out7590, out _out7591);
              _13675_onExpr = _out7589;
              _13676_onOwned = _out7590;
              _13677_recIdents = _out7591;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13675_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13670_field));
              RAST._IExpr _out7592;
              DCOMPUTF16._IOwnership _out7593;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7592, out _out7593);
              r = _out7592;
              resultingOwnership = _out7593;
              readIdents = _13677_recIdents;
            }
            return ;
          }
        } else if (_source688.is_InitializationValue) {
          DAST._IType _13678___mcc_h222 = _source688.dtor_typ;
          bool _13679_isDatatype = _13235___mcc_h51;
          bool _13680_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13681_field = _13233___mcc_h49;
          DAST._IExpression _13682_on = _13232___mcc_h48;
          {
            if ((_13679_isDatatype) || (_13680_isConstant)) {
              RAST._IExpr _13683_onExpr;
              DCOMPUTF16._IOwnership _13684_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13685_recIdents;
              RAST._IExpr _out7594;
              DCOMPUTF16._IOwnership _out7595;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7596;
              DCOMPUTF16.COMP.GenExpr(_13682_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7594, out _out7595, out _out7596);
              _13683_onExpr = _out7594;
              _13684_onOwned = _out7595;
              _13685_recIdents = _out7596;
              r = ((_13683_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13681_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7597;
              DCOMPUTF16._IOwnership _out7598;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7597, out _out7598);
              r = _out7597;
              resultingOwnership = _out7598;
              readIdents = _13685_recIdents;
            } else {
              RAST._IExpr _13686_onExpr;
              DCOMPUTF16._IOwnership _13687_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13688_recIdents;
              RAST._IExpr _out7599;
              DCOMPUTF16._IOwnership _out7600;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7601;
              DCOMPUTF16.COMP.GenExpr(_13682_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7599, out _out7600, out _out7601);
              _13686_onExpr = _out7599;
              _13687_onOwned = _out7600;
              _13688_recIdents = _out7601;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13686_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13681_field));
              RAST._IExpr _out7602;
              DCOMPUTF16._IOwnership _out7603;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7602, out _out7603);
              r = _out7602;
              resultingOwnership = _out7603;
              readIdents = _13688_recIdents;
            }
            return ;
          }
        } else if (_source688.is_BoolBoundedPool) {
          bool _13689_isDatatype = _13235___mcc_h51;
          bool _13690_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13691_field = _13233___mcc_h49;
          DAST._IExpression _13692_on = _13232___mcc_h48;
          {
            if ((_13689_isDatatype) || (_13690_isConstant)) {
              RAST._IExpr _13693_onExpr;
              DCOMPUTF16._IOwnership _13694_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13695_recIdents;
              RAST._IExpr _out7604;
              DCOMPUTF16._IOwnership _out7605;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7606;
              DCOMPUTF16.COMP.GenExpr(_13692_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7604, out _out7605, out _out7606);
              _13693_onExpr = _out7604;
              _13694_onOwned = _out7605;
              _13695_recIdents = _out7606;
              r = ((_13693_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13691_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7607;
              DCOMPUTF16._IOwnership _out7608;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7607, out _out7608);
              r = _out7607;
              resultingOwnership = _out7608;
              readIdents = _13695_recIdents;
            } else {
              RAST._IExpr _13696_onExpr;
              DCOMPUTF16._IOwnership _13697_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13698_recIdents;
              RAST._IExpr _out7609;
              DCOMPUTF16._IOwnership _out7610;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7611;
              DCOMPUTF16.COMP.GenExpr(_13692_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7609, out _out7610, out _out7611);
              _13696_onExpr = _out7609;
              _13697_onOwned = _out7610;
              _13698_recIdents = _out7611;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13696_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13691_field));
              RAST._IExpr _out7612;
              DCOMPUTF16._IOwnership _out7613;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7612, out _out7613);
              r = _out7612;
              resultingOwnership = _out7613;
              readIdents = _13698_recIdents;
            }
            return ;
          }
        } else if (_source688.is_SetBoundedPool) {
          DAST._IExpression _13699___mcc_h224 = _source688.dtor_of;
          bool _13700_isDatatype = _13235___mcc_h51;
          bool _13701_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13702_field = _13233___mcc_h49;
          DAST._IExpression _13703_on = _13232___mcc_h48;
          {
            if ((_13700_isDatatype) || (_13701_isConstant)) {
              RAST._IExpr _13704_onExpr;
              DCOMPUTF16._IOwnership _13705_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13706_recIdents;
              RAST._IExpr _out7614;
              DCOMPUTF16._IOwnership _out7615;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7616;
              DCOMPUTF16.COMP.GenExpr(_13703_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7614, out _out7615, out _out7616);
              _13704_onExpr = _out7614;
              _13705_onOwned = _out7615;
              _13706_recIdents = _out7616;
              r = ((_13704_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13702_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7617;
              DCOMPUTF16._IOwnership _out7618;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7617, out _out7618);
              r = _out7617;
              resultingOwnership = _out7618;
              readIdents = _13706_recIdents;
            } else {
              RAST._IExpr _13707_onExpr;
              DCOMPUTF16._IOwnership _13708_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13709_recIdents;
              RAST._IExpr _out7619;
              DCOMPUTF16._IOwnership _out7620;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7621;
              DCOMPUTF16.COMP.GenExpr(_13703_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7619, out _out7620, out _out7621);
              _13707_onExpr = _out7619;
              _13708_onOwned = _out7620;
              _13709_recIdents = _out7621;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13707_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13702_field));
              RAST._IExpr _out7622;
              DCOMPUTF16._IOwnership _out7623;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7622, out _out7623);
              r = _out7622;
              resultingOwnership = _out7623;
              readIdents = _13709_recIdents;
            }
            return ;
          }
        } else if (_source688.is_SeqBoundedPool) {
          DAST._IExpression _13710___mcc_h226 = _source688.dtor_of;
          bool _13711___mcc_h227 = _source688.dtor_includeDuplicates;
          bool _13712_isDatatype = _13235___mcc_h51;
          bool _13713_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13714_field = _13233___mcc_h49;
          DAST._IExpression _13715_on = _13232___mcc_h48;
          {
            if ((_13712_isDatatype) || (_13713_isConstant)) {
              RAST._IExpr _13716_onExpr;
              DCOMPUTF16._IOwnership _13717_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13718_recIdents;
              RAST._IExpr _out7624;
              DCOMPUTF16._IOwnership _out7625;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7626;
              DCOMPUTF16.COMP.GenExpr(_13715_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7624, out _out7625, out _out7626);
              _13716_onExpr = _out7624;
              _13717_onOwned = _out7625;
              _13718_recIdents = _out7626;
              r = ((_13716_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13714_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7627;
              DCOMPUTF16._IOwnership _out7628;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7627, out _out7628);
              r = _out7627;
              resultingOwnership = _out7628;
              readIdents = _13718_recIdents;
            } else {
              RAST._IExpr _13719_onExpr;
              DCOMPUTF16._IOwnership _13720_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13721_recIdents;
              RAST._IExpr _out7629;
              DCOMPUTF16._IOwnership _out7630;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7631;
              DCOMPUTF16.COMP.GenExpr(_13715_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7629, out _out7630, out _out7631);
              _13719_onExpr = _out7629;
              _13720_onOwned = _out7630;
              _13721_recIdents = _out7631;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13719_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13714_field));
              RAST._IExpr _out7632;
              DCOMPUTF16._IOwnership _out7633;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7632, out _out7633);
              r = _out7632;
              resultingOwnership = _out7633;
              readIdents = _13721_recIdents;
            }
            return ;
          }
        } else {
          DAST._IExpression _13722___mcc_h230 = _source688.dtor_lo;
          DAST._IExpression _13723___mcc_h231 = _source688.dtor_hi;
          bool _13724_isDatatype = _13235___mcc_h51;
          bool _13725_isConstant = _13234___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13726_field = _13233___mcc_h49;
          DAST._IExpression _13727_on = _13232___mcc_h48;
          {
            if ((_13724_isDatatype) || (_13725_isConstant)) {
              RAST._IExpr _13728_onExpr;
              DCOMPUTF16._IOwnership _13729_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13730_recIdents;
              RAST._IExpr _out7634;
              DCOMPUTF16._IOwnership _out7635;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7636;
              DCOMPUTF16.COMP.GenExpr(_13727_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7634, out _out7635, out _out7636);
              _13728_onExpr = _out7634;
              _13729_onOwned = _out7635;
              _13730_recIdents = _out7636;
              r = ((_13728_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13726_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7637;
              DCOMPUTF16._IOwnership _out7638;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7637, out _out7638);
              r = _out7637;
              resultingOwnership = _out7638;
              readIdents = _13730_recIdents;
            } else {
              RAST._IExpr _13731_onExpr;
              DCOMPUTF16._IOwnership _13732_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13733_recIdents;
              RAST._IExpr _out7639;
              DCOMPUTF16._IOwnership _out7640;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7641;
              DCOMPUTF16.COMP.GenExpr(_13727_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7639, out _out7640, out _out7641);
              _13731_onExpr = _out7639;
              _13732_onOwned = _out7640;
              _13733_recIdents = _out7641;
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13731_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_13726_field));
              RAST._IExpr _out7642;
              DCOMPUTF16._IOwnership _out7643;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7642, out _out7643);
              r = _out7642;
              resultingOwnership = _out7643;
              readIdents = _13733_recIdents;
            }
            return ;
          }
        }
      } else if (_source685.is_SelectFn) {
        DAST._IExpression _13734___mcc_h234 = _source685.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _13735___mcc_h235 = _source685.dtor_field;
        bool _13736___mcc_h236 = _source685.dtor_onDatatype;
        bool _13737___mcc_h237 = _source685.dtor_isStatic;
        BigInteger _13738___mcc_h238 = _source685.dtor_arity;
        BigInteger _13739_arity = _13738___mcc_h238;
        bool _13740_isStatic = _13737___mcc_h237;
        bool _13741_isDatatype = _13736___mcc_h236;
        Dafny.ISequence<Dafny.Rune> _13742_field = _13735___mcc_h235;
        DAST._IExpression _13743_on = _13734___mcc_h234;
        {
          RAST._IExpr _13744_onExpr;
          DCOMPUTF16._IOwnership _13745_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13746_recIdents;
          RAST._IExpr _out7644;
          DCOMPUTF16._IOwnership _out7645;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7646;
          DCOMPUTF16.COMP.GenExpr(_13743_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7644, out _out7645, out _out7646);
          _13744_onExpr = _out7644;
          _13745_onOwned = _out7645;
          _13746_recIdents = _out7646;
          Dafny.ISequence<Dafny.Rune> _13747_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _13748_onString;
          _13748_onString = (_13744_onExpr)._ToString(DCOMPUTF16.__default.IND);
          if (_13740_isStatic) {
            _13747_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13748_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent(_13742_field));
          } else {
            _13747_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _13747_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13747_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _13748_onString), ((object.Equals(_13745_onOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _13749_args;
            _13749_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _13750_i;
            _13750_i = BigInteger.Zero;
            while ((_13750_i) < (_13739_arity)) {
              if ((_13750_i).Sign == 1) {
                _13749_args = Dafny.Sequence<Dafny.Rune>.Concat(_13749_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _13749_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13749_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_13750_i));
              _13750_i = (_13750_i) + (BigInteger.One);
            }
            _13747_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13747_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _13749_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _13747_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13747_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), _13742_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _13749_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _13747_s = Dafny.Sequence<Dafny.Rune>.Concat(_13747_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _13747_s = Dafny.Sequence<Dafny.Rune>.Concat(_13747_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _13751_typeShape;
          _13751_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _13752_i;
          _13752_i = BigInteger.Zero;
          while ((_13752_i) < (_13739_arity)) {
            if ((_13752_i).Sign == 1) {
              _13751_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_13751_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _13751_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_13751_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _13752_i = (_13752_i) + (BigInteger.One);
          }
          _13751_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_13751_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _13747_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper(::std::rc::Rc::new("), _13747_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _13751_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">)"));
          r = RAST.Expr.create_RawExpr(_13747_s);
          RAST._IExpr _out7647;
          DCOMPUTF16._IOwnership _out7648;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7647, out _out7648);
          r = _out7647;
          resultingOwnership = _out7648;
          readIdents = _13746_recIdents;
          return ;
        }
      } else if (_source685.is_Index) {
        DAST._IExpression _13753___mcc_h239 = _source685.dtor_expr;
        DAST._ICollKind _13754___mcc_h240 = _source685.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _13755___mcc_h241 = _source685.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _13756_indices = _13755___mcc_h241;
        DAST._ICollKind _13757_collKind = _13754___mcc_h240;
        DAST._IExpression _13758_on = _13753___mcc_h239;
        {
          RAST._IExpr _13759_onExpr;
          DCOMPUTF16._IOwnership _13760_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13761_recIdents;
          RAST._IExpr _out7649;
          DCOMPUTF16._IOwnership _out7650;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7651;
          DCOMPUTF16.COMP.GenExpr(_13758_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7649, out _out7650, out _out7651);
          _13759_onExpr = _out7649;
          _13760_onOwned = _out7650;
          _13761_recIdents = _out7651;
          readIdents = _13761_recIdents;
          r = _13759_onExpr;
          BigInteger _13762_i;
          _13762_i = BigInteger.Zero;
          while ((_13762_i) < (new BigInteger((_13756_indices).Count))) {
            if (object.Equals(_13757_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _13763_idx;
            DCOMPUTF16._IOwnership _13764_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13765_recIdentsIdx;
            RAST._IExpr _out7652;
            DCOMPUTF16._IOwnership _out7653;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7654;
            DCOMPUTF16.COMP.GenExpr((_13756_indices).Select(_13762_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7652, out _out7653, out _out7654);
            _13763_idx = _out7652;
            _13764_idxOwned = _out7653;
            _13765_recIdentsIdx = _out7654;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_13763_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13765_recIdentsIdx);
            _13762_i = (_13762_i) + (BigInteger.One);
          }
          RAST._IExpr _out7655;
          DCOMPUTF16._IOwnership _out7656;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7655, out _out7656);
          r = _out7655;
          resultingOwnership = _out7656;
          return ;
        }
      } else if (_source685.is_IndexRange) {
        DAST._IExpression _13766___mcc_h242 = _source685.dtor_expr;
        bool _13767___mcc_h243 = _source685.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _13768___mcc_h244 = _source685.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _13769___mcc_h245 = _source685.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _13770_high = _13769___mcc_h245;
        Std.Wrappers._IOption<DAST._IExpression> _13771_low = _13768___mcc_h244;
        bool _13772_isArray = _13767___mcc_h243;
        DAST._IExpression _13773_on = _13766___mcc_h242;
        {
          RAST._IExpr _13774_onExpr;
          DCOMPUTF16._IOwnership _13775_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13776_recIdents;
          RAST._IExpr _out7657;
          DCOMPUTF16._IOwnership _out7658;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7659;
          DCOMPUTF16.COMP.GenExpr(_13773_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7657, out _out7658, out _out7659);
          _13774_onExpr = _out7657;
          _13775_onOwned = _out7658;
          _13776_recIdents = _out7659;
          readIdents = _13776_recIdents;
          Dafny.ISequence<Dafny.Rune> _13777_methodName;
          _13777_methodName = (((_13771_low).is_Some) ? ((((_13770_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_13770_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _13778_arguments;
          _13778_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source689 = _13771_low;
          if (_source689.is_None) {
          } else {
            DAST._IExpression _13779___mcc_h274 = _source689.dtor_value;
            DAST._IExpression _13780_l = _13779___mcc_h274;
            {
              RAST._IExpr _13781_lExpr;
              DCOMPUTF16._IOwnership _13782___v141;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13783_recIdentsL;
              RAST._IExpr _out7660;
              DCOMPUTF16._IOwnership _out7661;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7662;
              DCOMPUTF16.COMP.GenExpr(_13780_l, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7660, out _out7661, out _out7662);
              _13781_lExpr = _out7660;
              _13782___v141 = _out7661;
              _13783_recIdentsL = _out7662;
              _13778_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_13778_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_13781_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13783_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source690 = _13770_high;
          if (_source690.is_None) {
          } else {
            DAST._IExpression _13784___mcc_h275 = _source690.dtor_value;
            DAST._IExpression _13785_h = _13784___mcc_h275;
            {
              RAST._IExpr _13786_hExpr;
              DCOMPUTF16._IOwnership _13787___v142;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13788_recIdentsH;
              RAST._IExpr _out7663;
              DCOMPUTF16._IOwnership _out7664;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7665;
              DCOMPUTF16.COMP.GenExpr(_13785_h, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7663, out _out7664, out _out7665);
              _13786_hExpr = _out7663;
              _13787___v142 = _out7664;
              _13788_recIdentsH = _out7665;
              _13778_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_13778_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_13786_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13788_recIdentsH);
            }
          }
          r = _13774_onExpr;
          if (_13772_isArray) {
            if (!(_13777_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _13777_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _13777_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _13777_methodName))).Apply(_13778_arguments);
          } else {
            if (!(_13777_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_13777_methodName)).Apply(_13778_arguments);
            }
          }
          RAST._IExpr _out7666;
          DCOMPUTF16._IOwnership _out7667;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7666, out _out7667);
          r = _out7666;
          resultingOwnership = _out7667;
          return ;
        }
      } else if (_source685.is_TupleSelect) {
        DAST._IExpression _13789___mcc_h246 = _source685.dtor_expr;
        BigInteger _13790___mcc_h247 = _source685.dtor_index;
        BigInteger _13791_idx = _13790___mcc_h247;
        DAST._IExpression _13792_on = _13789___mcc_h246;
        {
          RAST._IExpr _13793_onExpr;
          DCOMPUTF16._IOwnership _13794_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13795_recIdents;
          RAST._IExpr _out7668;
          DCOMPUTF16._IOwnership _out7669;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7670;
          DCOMPUTF16.COMP.GenExpr(_13792_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7668, out _out7669, out _out7670);
          _13793_onExpr = _out7668;
          _13794_onOwnership = _out7669;
          _13795_recIdents = _out7670;
          r = (_13793_onExpr).Sel(Std.Strings.__default.OfNat(_13791_idx));
          RAST._IExpr _out7671;
          DCOMPUTF16._IOwnership _out7672;
          DCOMPUTF16.COMP.FromOwnership(r, _13794_onOwnership, expectedOwnership, out _out7671, out _out7672);
          r = _out7671;
          resultingOwnership = _out7672;
          readIdents = _13795_recIdents;
          return ;
        }
      } else if (_source685.is_Call) {
        DAST._IExpression _13796___mcc_h248 = _source685.dtor_on;
        DAST._ICallName _13797___mcc_h249 = _source685.dtor_callName;
        Dafny.ISequence<DAST._IType> _13798___mcc_h250 = _source685.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _13799___mcc_h251 = _source685.dtor_args;
        Dafny.ISequence<DAST._IExpression> _13800_args = _13799___mcc_h251;
        Dafny.ISequence<DAST._IType> _13801_typeArgs = _13798___mcc_h250;
        DAST._ICallName _13802_name = _13797___mcc_h249;
        DAST._IExpression _13803_on = _13796___mcc_h248;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _13804_onExpr;
          DCOMPUTF16._IOwnership _13805___v143;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13806_recIdents;
          RAST._IExpr _out7673;
          DCOMPUTF16._IOwnership _out7674;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7675;
          DCOMPUTF16.COMP.GenExpr(_13803_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7673, out _out7674, out _out7675);
          _13804_onExpr = _out7673;
          _13805___v143 = _out7674;
          _13806_recIdents = _out7675;
          Dafny.ISequence<RAST._IType> _13807_typeExprs;
          _13807_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_13801_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi36 = new BigInteger((_13801_typeArgs).Count);
            for (BigInteger _13808_typeI = BigInteger.Zero; _13808_typeI < _hi36; _13808_typeI++) {
              RAST._IType _13809_typeExpr;
              RAST._IType _out7676;
              _out7676 = DCOMPUTF16.COMP.GenType((_13801_typeArgs).Select(_13808_typeI), false, false);
              _13809_typeExpr = _out7676;
              _13807_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_13807_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_13809_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _13810_argExprs;
          _13810_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi37 = new BigInteger((_13800_args).Count);
          for (BigInteger _13811_i = BigInteger.Zero; _13811_i < _hi37; _13811_i++) {
            DCOMPUTF16._IOwnership _13812_argOwnership;
            _13812_argOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
            if (((_13802_name).is_Name) && ((_13811_i) < (new BigInteger((((_13802_name).dtor_signature)).Count)))) {
              RAST._IType _13813_tpe;
              RAST._IType _out7677;
              _out7677 = DCOMPUTF16.COMP.GenType(((((_13802_name).dtor_signature)).Select(_13811_i)).dtor_typ, false, false);
              _13813_tpe = _out7677;
              if ((_13813_tpe).HasCopySemantics()) {
                _13812_argOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _13814_argExpr;
            DCOMPUTF16._IOwnership _13815___v144;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13816_argIdents;
            RAST._IExpr _out7678;
            DCOMPUTF16._IOwnership _out7679;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7680;
            DCOMPUTF16.COMP.GenExpr((_13800_args).Select(_13811_i), selfIdent, env, _13812_argOwnership, out _out7678, out _out7679, out _out7680);
            _13814_argExpr = _out7678;
            _13815___v144 = _out7679;
            _13816_argIdents = _out7680;
            _13810_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_13810_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_13814_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13816_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13806_recIdents);
          Dafny.ISequence<Dafny.Rune> _13817_renderedName;
          _13817_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source691) => {
            if (_source691.is_Name) {
              Dafny.ISequence<Dafny.Rune> _13818___mcc_h276 = _source691.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _13819___mcc_h277 = _source691.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _13820___mcc_h278 = _source691.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _13821_ident = _13818___mcc_h276;
              return DCOMPUTF16.__default.escapeIdent(_13821_ident);
            } else if (_source691.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source691.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source691.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_13802_name);
          DAST._IExpression _source692 = _13803_on;
          if (_source692.is_Literal) {
            DAST._ILiteral _13822___mcc_h279 = _source692.dtor_Literal_a0;
            {
              DAST._ICallName _source693 = _13802_name;
              if (_source693.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13823___mcc_h461 = _source693.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13824___mcc_h462 = _source693.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13825___mcc_h463 = _source693.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source694 = _13824___mcc_h462;
                if (_source694.is_None) {
                } else {
                  DAST._IType _13826___mcc_h467 = _source694.dtor_value;
                  DAST._IType _13827_tpe = _13826___mcc_h467;
                  RAST._IType _13828_typ;
                  RAST._IType _out7681;
                  _out7681 = DCOMPUTF16.COMP.GenType(_13827_tpe, false, false);
                  _13828_typ = _out7681;
                  if (((_13828_typ).is_Pointer) || ((_13828_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source693.is_MapBuilderAdd) {
              } else if (_source693.is_MapBuilderBuild) {
              } else if (_source693.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _13829___mcc_h281 = _source692.dtor_Ident_a0;
            {
              DAST._ICallName _source695 = _13802_name;
              if (_source695.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13830___mcc_h469 = _source695.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13831___mcc_h470 = _source695.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13832___mcc_h471 = _source695.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source696 = _13831___mcc_h470;
                if (_source696.is_None) {
                } else {
                  DAST._IType _13833___mcc_h475 = _source696.dtor_value;
                  DAST._IType _13834_tpe = _13833___mcc_h475;
                  RAST._IType _13835_typ;
                  RAST._IType _out7682;
                  _out7682 = DCOMPUTF16.COMP.GenType(_13834_tpe, false, false);
                  _13835_typ = _out7682;
                  if (((_13835_typ).is_Pointer) || ((_13835_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source695.is_MapBuilderAdd) {
              } else if (_source695.is_MapBuilderBuild) {
              } else if (_source695.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13836___mcc_h283 = _source692.dtor_Companion_a0;
            {
              _13804_onExpr = (_13804_onExpr).MSel(_13817_renderedName);
            }
          } else if (_source692.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _13837___mcc_h285 = _source692.dtor_Tuple_a0;
            {
              DAST._ICallName _source697 = _13802_name;
              if (_source697.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13838___mcc_h477 = _source697.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13839___mcc_h478 = _source697.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13840___mcc_h479 = _source697.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source698 = _13839___mcc_h478;
                if (_source698.is_None) {
                } else {
                  DAST._IType _13841___mcc_h483 = _source698.dtor_value;
                  DAST._IType _13842_tpe = _13841___mcc_h483;
                  RAST._IType _13843_typ;
                  RAST._IType _out7683;
                  _out7683 = DCOMPUTF16.COMP.GenType(_13842_tpe, false, false);
                  _13843_typ = _out7683;
                  if (((_13843_typ).is_Pointer) || ((_13843_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source697.is_MapBuilderAdd) {
              } else if (_source697.is_MapBuilderBuild) {
              } else if (_source697.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13844___mcc_h287 = _source692.dtor_path;
            Dafny.ISequence<DAST._IType> _13845___mcc_h288 = _source692.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _13846___mcc_h289 = _source692.dtor_args;
            {
              DAST._ICallName _source699 = _13802_name;
              if (_source699.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13847___mcc_h485 = _source699.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13848___mcc_h486 = _source699.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13849___mcc_h487 = _source699.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source700 = _13848___mcc_h486;
                if (_source700.is_None) {
                } else {
                  DAST._IType _13850___mcc_h491 = _source700.dtor_value;
                  DAST._IType _13851_tpe = _13850___mcc_h491;
                  RAST._IType _13852_typ;
                  RAST._IType _out7684;
                  _out7684 = DCOMPUTF16.COMP.GenType(_13851_tpe, false, false);
                  _13852_typ = _out7684;
                  if (((_13852_typ).is_Pointer) || ((_13852_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source699.is_MapBuilderAdd) {
              } else if (_source699.is_MapBuilderBuild) {
              } else if (_source699.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _13853___mcc_h293 = _source692.dtor_dims;
            DAST._IType _13854___mcc_h294 = _source692.dtor_typ;
            {
              DAST._ICallName _source701 = _13802_name;
              if (_source701.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13855___mcc_h493 = _source701.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13856___mcc_h494 = _source701.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13857___mcc_h495 = _source701.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source702 = _13856___mcc_h494;
                if (_source702.is_None) {
                } else {
                  DAST._IType _13858___mcc_h499 = _source702.dtor_value;
                  DAST._IType _13859_tpe = _13858___mcc_h499;
                  RAST._IType _13860_typ;
                  RAST._IType _out7685;
                  _out7685 = DCOMPUTF16.COMP.GenType(_13859_tpe, false, false);
                  _13860_typ = _out7685;
                  if (((_13860_typ).is_Pointer) || ((_13860_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source701.is_MapBuilderAdd) {
              } else if (_source701.is_MapBuilderBuild) {
              } else if (_source701.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_DatatypeValue) {
            DAST._IDatatypeType _13861___mcc_h297 = _source692.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _13862___mcc_h298 = _source692.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _13863___mcc_h299 = _source692.dtor_variant;
            bool _13864___mcc_h300 = _source692.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _13865___mcc_h301 = _source692.dtor_contents;
            {
              DAST._ICallName _source703 = _13802_name;
              if (_source703.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13866___mcc_h501 = _source703.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13867___mcc_h502 = _source703.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13868___mcc_h503 = _source703.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source704 = _13867___mcc_h502;
                if (_source704.is_None) {
                } else {
                  DAST._IType _13869___mcc_h507 = _source704.dtor_value;
                  DAST._IType _13870_tpe = _13869___mcc_h507;
                  RAST._IType _13871_typ;
                  RAST._IType _out7686;
                  _out7686 = DCOMPUTF16.COMP.GenType(_13870_tpe, false, false);
                  _13871_typ = _out7686;
                  if (((_13871_typ).is_Pointer) || ((_13871_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source703.is_MapBuilderAdd) {
              } else if (_source703.is_MapBuilderBuild) {
              } else if (_source703.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_Convert) {
            DAST._IExpression _13872___mcc_h307 = _source692.dtor_value;
            DAST._IType _13873___mcc_h308 = _source692.dtor_from;
            DAST._IType _13874___mcc_h309 = _source692.dtor_typ;
            {
              DAST._ICallName _source705 = _13802_name;
              if (_source705.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13875___mcc_h509 = _source705.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13876___mcc_h510 = _source705.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13877___mcc_h511 = _source705.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source706 = _13876___mcc_h510;
                if (_source706.is_None) {
                } else {
                  DAST._IType _13878___mcc_h515 = _source706.dtor_value;
                  DAST._IType _13879_tpe = _13878___mcc_h515;
                  RAST._IType _13880_typ;
                  RAST._IType _out7687;
                  _out7687 = DCOMPUTF16.COMP.GenType(_13879_tpe, false, false);
                  _13880_typ = _out7687;
                  if (((_13880_typ).is_Pointer) || ((_13880_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source705.is_MapBuilderAdd) {
              } else if (_source705.is_MapBuilderBuild) {
              } else if (_source705.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_SeqConstruct) {
            DAST._IExpression _13881___mcc_h313 = _source692.dtor_length;
            DAST._IExpression _13882___mcc_h314 = _source692.dtor_elem;
            {
              DAST._ICallName _source707 = _13802_name;
              if (_source707.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13883___mcc_h517 = _source707.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13884___mcc_h518 = _source707.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13885___mcc_h519 = _source707.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source708 = _13884___mcc_h518;
                if (_source708.is_None) {
                } else {
                  DAST._IType _13886___mcc_h523 = _source708.dtor_value;
                  DAST._IType _13887_tpe = _13886___mcc_h523;
                  RAST._IType _13888_typ;
                  RAST._IType _out7688;
                  _out7688 = DCOMPUTF16.COMP.GenType(_13887_tpe, false, false);
                  _13888_typ = _out7688;
                  if (((_13888_typ).is_Pointer) || ((_13888_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source707.is_MapBuilderAdd) {
              } else if (_source707.is_MapBuilderBuild) {
              } else if (_source707.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _13889___mcc_h317 = _source692.dtor_elements;
            DAST._IType _13890___mcc_h318 = _source692.dtor_typ;
            {
              DAST._ICallName _source709 = _13802_name;
              if (_source709.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13891___mcc_h525 = _source709.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13892___mcc_h526 = _source709.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13893___mcc_h527 = _source709.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source710 = _13892___mcc_h526;
                if (_source710.is_None) {
                } else {
                  DAST._IType _13894___mcc_h531 = _source710.dtor_value;
                  DAST._IType _13895_tpe = _13894___mcc_h531;
                  RAST._IType _13896_typ;
                  RAST._IType _out7689;
                  _out7689 = DCOMPUTF16.COMP.GenType(_13895_tpe, false, false);
                  _13896_typ = _out7689;
                  if (((_13896_typ).is_Pointer) || ((_13896_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source709.is_MapBuilderAdd) {
              } else if (_source709.is_MapBuilderBuild) {
              } else if (_source709.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _13897___mcc_h321 = _source692.dtor_elements;
            {
              DAST._ICallName _source711 = _13802_name;
              if (_source711.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13898___mcc_h533 = _source711.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13899___mcc_h534 = _source711.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13900___mcc_h535 = _source711.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source712 = _13899___mcc_h534;
                if (_source712.is_None) {
                } else {
                  DAST._IType _13901___mcc_h539 = _source712.dtor_value;
                  DAST._IType _13902_tpe = _13901___mcc_h539;
                  RAST._IType _13903_typ;
                  RAST._IType _out7690;
                  _out7690 = DCOMPUTF16.COMP.GenType(_13902_tpe, false, false);
                  _13903_typ = _out7690;
                  if (((_13903_typ).is_Pointer) || ((_13903_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source711.is_MapBuilderAdd) {
              } else if (_source711.is_MapBuilderBuild) {
              } else if (_source711.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _13904___mcc_h323 = _source692.dtor_elements;
            {
              DAST._ICallName _source713 = _13802_name;
              if (_source713.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13905___mcc_h541 = _source713.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13906___mcc_h542 = _source713.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13907___mcc_h543 = _source713.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source714 = _13906___mcc_h542;
                if (_source714.is_None) {
                } else {
                  DAST._IType _13908___mcc_h547 = _source714.dtor_value;
                  DAST._IType _13909_tpe = _13908___mcc_h547;
                  RAST._IType _13910_typ;
                  RAST._IType _out7691;
                  _out7691 = DCOMPUTF16.COMP.GenType(_13909_tpe, false, false);
                  _13910_typ = _out7691;
                  if (((_13910_typ).is_Pointer) || ((_13910_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source713.is_MapBuilderAdd) {
              } else if (_source713.is_MapBuilderBuild) {
              } else if (_source713.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _13911___mcc_h325 = _source692.dtor_mapElems;
            {
              DAST._ICallName _source715 = _13802_name;
              if (_source715.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13912___mcc_h549 = _source715.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13913___mcc_h550 = _source715.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13914___mcc_h551 = _source715.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source716 = _13913___mcc_h550;
                if (_source716.is_None) {
                } else {
                  DAST._IType _13915___mcc_h555 = _source716.dtor_value;
                  DAST._IType _13916_tpe = _13915___mcc_h555;
                  RAST._IType _13917_typ;
                  RAST._IType _out7692;
                  _out7692 = DCOMPUTF16.COMP.GenType(_13916_tpe, false, false);
                  _13917_typ = _out7692;
                  if (((_13917_typ).is_Pointer) || ((_13917_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source715.is_MapBuilderAdd) {
              } else if (_source715.is_MapBuilderBuild) {
              } else if (_source715.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_MapBuilder) {
            DAST._IType _13918___mcc_h327 = _source692.dtor_keyType;
            DAST._IType _13919___mcc_h328 = _source692.dtor_valueType;
            {
              DAST._ICallName _source717 = _13802_name;
              if (_source717.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13920___mcc_h557 = _source717.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13921___mcc_h558 = _source717.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13922___mcc_h559 = _source717.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source718 = _13921___mcc_h558;
                if (_source718.is_None) {
                } else {
                  DAST._IType _13923___mcc_h563 = _source718.dtor_value;
                  DAST._IType _13924_tpe = _13923___mcc_h563;
                  RAST._IType _13925_typ;
                  RAST._IType _out7693;
                  _out7693 = DCOMPUTF16.COMP.GenType(_13924_tpe, false, false);
                  _13925_typ = _out7693;
                  if (((_13925_typ).is_Pointer) || ((_13925_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source717.is_MapBuilderAdd) {
              } else if (_source717.is_MapBuilderBuild) {
              } else if (_source717.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_SeqUpdate) {
            DAST._IExpression _13926___mcc_h331 = _source692.dtor_expr;
            DAST._IExpression _13927___mcc_h332 = _source692.dtor_indexExpr;
            DAST._IExpression _13928___mcc_h333 = _source692.dtor_value;
            {
              DAST._ICallName _source719 = _13802_name;
              if (_source719.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13929___mcc_h565 = _source719.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13930___mcc_h566 = _source719.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13931___mcc_h567 = _source719.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source720 = _13930___mcc_h566;
                if (_source720.is_None) {
                } else {
                  DAST._IType _13932___mcc_h571 = _source720.dtor_value;
                  DAST._IType _13933_tpe = _13932___mcc_h571;
                  RAST._IType _13934_typ;
                  RAST._IType _out7694;
                  _out7694 = DCOMPUTF16.COMP.GenType(_13933_tpe, false, false);
                  _13934_typ = _out7694;
                  if (((_13934_typ).is_Pointer) || ((_13934_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source719.is_MapBuilderAdd) {
              } else if (_source719.is_MapBuilderBuild) {
              } else if (_source719.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_MapUpdate) {
            DAST._IExpression _13935___mcc_h337 = _source692.dtor_expr;
            DAST._IExpression _13936___mcc_h338 = _source692.dtor_indexExpr;
            DAST._IExpression _13937___mcc_h339 = _source692.dtor_value;
            {
              DAST._ICallName _source721 = _13802_name;
              if (_source721.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13938___mcc_h573 = _source721.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13939___mcc_h574 = _source721.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13940___mcc_h575 = _source721.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source722 = _13939___mcc_h574;
                if (_source722.is_None) {
                } else {
                  DAST._IType _13941___mcc_h579 = _source722.dtor_value;
                  DAST._IType _13942_tpe = _13941___mcc_h579;
                  RAST._IType _13943_typ;
                  RAST._IType _out7695;
                  _out7695 = DCOMPUTF16.COMP.GenType(_13942_tpe, false, false);
                  _13943_typ = _out7695;
                  if (((_13943_typ).is_Pointer) || ((_13943_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source721.is_MapBuilderAdd) {
              } else if (_source721.is_MapBuilderBuild) {
              } else if (_source721.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_SetBuilder) {
            DAST._IType _13944___mcc_h343 = _source692.dtor_elemType;
            {
              DAST._ICallName _source723 = _13802_name;
              if (_source723.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13945___mcc_h581 = _source723.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13946___mcc_h582 = _source723.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13947___mcc_h583 = _source723.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source724 = _13946___mcc_h582;
                if (_source724.is_None) {
                } else {
                  DAST._IType _13948___mcc_h587 = _source724.dtor_value;
                  DAST._IType _13949_tpe = _13948___mcc_h587;
                  RAST._IType _13950_typ;
                  RAST._IType _out7696;
                  _out7696 = DCOMPUTF16.COMP.GenType(_13949_tpe, false, false);
                  _13950_typ = _out7696;
                  if (((_13950_typ).is_Pointer) || ((_13950_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source723.is_MapBuilderAdd) {
              } else if (_source723.is_MapBuilderBuild) {
              } else if (_source723.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_ToMultiset) {
            DAST._IExpression _13951___mcc_h345 = _source692.dtor_ToMultiset_a0;
            {
              DAST._ICallName _source725 = _13802_name;
              if (_source725.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13952___mcc_h589 = _source725.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13953___mcc_h590 = _source725.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13954___mcc_h591 = _source725.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source726 = _13953___mcc_h590;
                if (_source726.is_None) {
                } else {
                  DAST._IType _13955___mcc_h595 = _source726.dtor_value;
                  DAST._IType _13956_tpe = _13955___mcc_h595;
                  RAST._IType _13957_typ;
                  RAST._IType _out7697;
                  _out7697 = DCOMPUTF16.COMP.GenType(_13956_tpe, false, false);
                  _13957_typ = _out7697;
                  if (((_13957_typ).is_Pointer) || ((_13957_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source725.is_MapBuilderAdd) {
              } else if (_source725.is_MapBuilderBuild) {
              } else if (_source725.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_This) {
            {
              DAST._ICallName _source727 = _13802_name;
              if (_source727.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13958___mcc_h597 = _source727.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13959___mcc_h598 = _source727.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13960___mcc_h599 = _source727.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source728 = _13959___mcc_h598;
                if (_source728.is_None) {
                } else {
                  DAST._IType _13961___mcc_h603 = _source728.dtor_value;
                  DAST._IType _13962_tpe = _13961___mcc_h603;
                  RAST._IType _13963_typ;
                  RAST._IType _out7698;
                  _out7698 = DCOMPUTF16.COMP.GenType(_13962_tpe, false, false);
                  _13963_typ = _out7698;
                  if (((_13963_typ).is_Pointer) || ((_13963_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source727.is_MapBuilderAdd) {
              } else if (_source727.is_MapBuilderBuild) {
              } else if (_source727.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_Ite) {
            DAST._IExpression _13964___mcc_h347 = _source692.dtor_cond;
            DAST._IExpression _13965___mcc_h348 = _source692.dtor_thn;
            DAST._IExpression _13966___mcc_h349 = _source692.dtor_els;
            {
              DAST._ICallName _source729 = _13802_name;
              if (_source729.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13967___mcc_h605 = _source729.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13968___mcc_h606 = _source729.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13969___mcc_h607 = _source729.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source730 = _13968___mcc_h606;
                if (_source730.is_None) {
                } else {
                  DAST._IType _13970___mcc_h611 = _source730.dtor_value;
                  DAST._IType _13971_tpe = _13970___mcc_h611;
                  RAST._IType _13972_typ;
                  RAST._IType _out7699;
                  _out7699 = DCOMPUTF16.COMP.GenType(_13971_tpe, false, false);
                  _13972_typ = _out7699;
                  if (((_13972_typ).is_Pointer) || ((_13972_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source729.is_MapBuilderAdd) {
              } else if (_source729.is_MapBuilderBuild) {
              } else if (_source729.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_UnOp) {
            DAST._IUnaryOp _13973___mcc_h353 = _source692.dtor_unOp;
            DAST._IExpression _13974___mcc_h354 = _source692.dtor_expr;
            DAST.Format._IUnOpFormat _13975___mcc_h355 = _source692.dtor_format1;
            {
              DAST._ICallName _source731 = _13802_name;
              if (_source731.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13976___mcc_h613 = _source731.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13977___mcc_h614 = _source731.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13978___mcc_h615 = _source731.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source732 = _13977___mcc_h614;
                if (_source732.is_None) {
                } else {
                  DAST._IType _13979___mcc_h619 = _source732.dtor_value;
                  DAST._IType _13980_tpe = _13979___mcc_h619;
                  RAST._IType _13981_typ;
                  RAST._IType _out7700;
                  _out7700 = DCOMPUTF16.COMP.GenType(_13980_tpe, false, false);
                  _13981_typ = _out7700;
                  if (((_13981_typ).is_Pointer) || ((_13981_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source731.is_MapBuilderAdd) {
              } else if (_source731.is_MapBuilderBuild) {
              } else if (_source731.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_BinOp) {
            DAST._IBinOp _13982___mcc_h359 = _source692.dtor_op;
            DAST._IExpression _13983___mcc_h360 = _source692.dtor_left;
            DAST._IExpression _13984___mcc_h361 = _source692.dtor_right;
            DAST.Format._IBinOpFormat _13985___mcc_h362 = _source692.dtor_format2;
            {
              DAST._ICallName _source733 = _13802_name;
              if (_source733.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13986___mcc_h621 = _source733.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13987___mcc_h622 = _source733.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13988___mcc_h623 = _source733.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source734 = _13987___mcc_h622;
                if (_source734.is_None) {
                } else {
                  DAST._IType _13989___mcc_h627 = _source734.dtor_value;
                  DAST._IType _13990_tpe = _13989___mcc_h627;
                  RAST._IType _13991_typ;
                  RAST._IType _out7701;
                  _out7701 = DCOMPUTF16.COMP.GenType(_13990_tpe, false, false);
                  _13991_typ = _out7701;
                  if (((_13991_typ).is_Pointer) || ((_13991_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source733.is_MapBuilderAdd) {
              } else if (_source733.is_MapBuilderBuild) {
              } else if (_source733.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_ArrayLen) {
            DAST._IExpression _13992___mcc_h367 = _source692.dtor_expr;
            BigInteger _13993___mcc_h368 = _source692.dtor_dim;
            {
              DAST._ICallName _source735 = _13802_name;
              if (_source735.is_Name) {
                Dafny.ISequence<Dafny.Rune> _13994___mcc_h629 = _source735.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _13995___mcc_h630 = _source735.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _13996___mcc_h631 = _source735.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source736 = _13995___mcc_h630;
                if (_source736.is_None) {
                } else {
                  DAST._IType _13997___mcc_h635 = _source736.dtor_value;
                  DAST._IType _13998_tpe = _13997___mcc_h635;
                  RAST._IType _13999_typ;
                  RAST._IType _out7702;
                  _out7702 = DCOMPUTF16.COMP.GenType(_13998_tpe, false, false);
                  _13999_typ = _out7702;
                  if (((_13999_typ).is_Pointer) || ((_13999_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source735.is_MapBuilderAdd) {
              } else if (_source735.is_MapBuilderBuild) {
              } else if (_source735.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_MapKeys) {
            DAST._IExpression _14000___mcc_h371 = _source692.dtor_expr;
            {
              DAST._ICallName _source737 = _13802_name;
              if (_source737.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14001___mcc_h637 = _source737.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14002___mcc_h638 = _source737.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14003___mcc_h639 = _source737.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source738 = _14002___mcc_h638;
                if (_source738.is_None) {
                } else {
                  DAST._IType _14004___mcc_h643 = _source738.dtor_value;
                  DAST._IType _14005_tpe = _14004___mcc_h643;
                  RAST._IType _14006_typ;
                  RAST._IType _out7703;
                  _out7703 = DCOMPUTF16.COMP.GenType(_14005_tpe, false, false);
                  _14006_typ = _out7703;
                  if (((_14006_typ).is_Pointer) || ((_14006_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source737.is_MapBuilderAdd) {
              } else if (_source737.is_MapBuilderBuild) {
              } else if (_source737.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_MapValues) {
            DAST._IExpression _14007___mcc_h373 = _source692.dtor_expr;
            {
              DAST._ICallName _source739 = _13802_name;
              if (_source739.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14008___mcc_h645 = _source739.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14009___mcc_h646 = _source739.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14010___mcc_h647 = _source739.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source740 = _14009___mcc_h646;
                if (_source740.is_None) {
                } else {
                  DAST._IType _14011___mcc_h651 = _source740.dtor_value;
                  DAST._IType _14012_tpe = _14011___mcc_h651;
                  RAST._IType _14013_typ;
                  RAST._IType _out7704;
                  _out7704 = DCOMPUTF16.COMP.GenType(_14012_tpe, false, false);
                  _14013_typ = _out7704;
                  if (((_14013_typ).is_Pointer) || ((_14013_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source739.is_MapBuilderAdd) {
              } else if (_source739.is_MapBuilderBuild) {
              } else if (_source739.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_Select) {
            DAST._IExpression _14014___mcc_h375 = _source692.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _14015___mcc_h376 = _source692.dtor_field;
            bool _14016___mcc_h377 = _source692.dtor_isConstant;
            bool _14017___mcc_h378 = _source692.dtor_onDatatype;
            {
              DAST._ICallName _source741 = _13802_name;
              if (_source741.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14018___mcc_h653 = _source741.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14019___mcc_h654 = _source741.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14020___mcc_h655 = _source741.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source742 = _14019___mcc_h654;
                if (_source742.is_None) {
                } else {
                  DAST._IType _14021___mcc_h659 = _source742.dtor_value;
                  DAST._IType _14022_tpe = _14021___mcc_h659;
                  RAST._IType _14023_typ;
                  RAST._IType _out7705;
                  _out7705 = DCOMPUTF16.COMP.GenType(_14022_tpe, false, false);
                  _14023_typ = _out7705;
                  if (((_14023_typ).is_Pointer) || ((_14023_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source741.is_MapBuilderAdd) {
              } else if (_source741.is_MapBuilderBuild) {
              } else if (_source741.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_SelectFn) {
            DAST._IExpression _14024___mcc_h383 = _source692.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _14025___mcc_h384 = _source692.dtor_field;
            bool _14026___mcc_h385 = _source692.dtor_onDatatype;
            bool _14027___mcc_h386 = _source692.dtor_isStatic;
            BigInteger _14028___mcc_h387 = _source692.dtor_arity;
            {
              DAST._ICallName _source743 = _13802_name;
              if (_source743.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14029___mcc_h661 = _source743.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14030___mcc_h662 = _source743.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14031___mcc_h663 = _source743.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source744 = _14030___mcc_h662;
                if (_source744.is_None) {
                } else {
                  DAST._IType _14032___mcc_h667 = _source744.dtor_value;
                  DAST._IType _14033_tpe = _14032___mcc_h667;
                  RAST._IType _14034_typ;
                  RAST._IType _out7706;
                  _out7706 = DCOMPUTF16.COMP.GenType(_14033_tpe, false, false);
                  _14034_typ = _out7706;
                  if (((_14034_typ).is_Pointer) || ((_14034_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source743.is_MapBuilderAdd) {
              } else if (_source743.is_MapBuilderBuild) {
              } else if (_source743.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_Index) {
            DAST._IExpression _14035___mcc_h393 = _source692.dtor_expr;
            DAST._ICollKind _14036___mcc_h394 = _source692.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _14037___mcc_h395 = _source692.dtor_indices;
            {
              DAST._ICallName _source745 = _13802_name;
              if (_source745.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14038___mcc_h669 = _source745.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14039___mcc_h670 = _source745.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14040___mcc_h671 = _source745.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source746 = _14039___mcc_h670;
                if (_source746.is_None) {
                } else {
                  DAST._IType _14041___mcc_h675 = _source746.dtor_value;
                  DAST._IType _14042_tpe = _14041___mcc_h675;
                  RAST._IType _14043_typ;
                  RAST._IType _out7707;
                  _out7707 = DCOMPUTF16.COMP.GenType(_14042_tpe, false, false);
                  _14043_typ = _out7707;
                  if (((_14043_typ).is_Pointer) || ((_14043_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source745.is_MapBuilderAdd) {
              } else if (_source745.is_MapBuilderBuild) {
              } else if (_source745.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_IndexRange) {
            DAST._IExpression _14044___mcc_h399 = _source692.dtor_expr;
            bool _14045___mcc_h400 = _source692.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _14046___mcc_h401 = _source692.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _14047___mcc_h402 = _source692.dtor_high;
            {
              DAST._ICallName _source747 = _13802_name;
              if (_source747.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14048___mcc_h677 = _source747.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14049___mcc_h678 = _source747.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14050___mcc_h679 = _source747.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source748 = _14049___mcc_h678;
                if (_source748.is_None) {
                } else {
                  DAST._IType _14051___mcc_h683 = _source748.dtor_value;
                  DAST._IType _14052_tpe = _14051___mcc_h683;
                  RAST._IType _14053_typ;
                  RAST._IType _out7708;
                  _out7708 = DCOMPUTF16.COMP.GenType(_14052_tpe, false, false);
                  _14053_typ = _out7708;
                  if (((_14053_typ).is_Pointer) || ((_14053_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source747.is_MapBuilderAdd) {
              } else if (_source747.is_MapBuilderBuild) {
              } else if (_source747.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_TupleSelect) {
            DAST._IExpression _14054___mcc_h407 = _source692.dtor_expr;
            BigInteger _14055___mcc_h408 = _source692.dtor_index;
            {
              DAST._ICallName _source749 = _13802_name;
              if (_source749.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14056___mcc_h685 = _source749.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14057___mcc_h686 = _source749.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14058___mcc_h687 = _source749.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source750 = _14057___mcc_h686;
                if (_source750.is_None) {
                } else {
                  DAST._IType _14059___mcc_h691 = _source750.dtor_value;
                  DAST._IType _14060_tpe = _14059___mcc_h691;
                  RAST._IType _14061_typ;
                  RAST._IType _out7709;
                  _out7709 = DCOMPUTF16.COMP.GenType(_14060_tpe, false, false);
                  _14061_typ = _out7709;
                  if (((_14061_typ).is_Pointer) || ((_14061_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source749.is_MapBuilderAdd) {
              } else if (_source749.is_MapBuilderBuild) {
              } else if (_source749.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_Call) {
            DAST._IExpression _14062___mcc_h411 = _source692.dtor_on;
            DAST._ICallName _14063___mcc_h412 = _source692.dtor_callName;
            Dafny.ISequence<DAST._IType> _14064___mcc_h413 = _source692.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _14065___mcc_h414 = _source692.dtor_args;
            {
              DAST._ICallName _source751 = _13802_name;
              if (_source751.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14066___mcc_h693 = _source751.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14067___mcc_h694 = _source751.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14068___mcc_h695 = _source751.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source752 = _14067___mcc_h694;
                if (_source752.is_None) {
                } else {
                  DAST._IType _14069___mcc_h699 = _source752.dtor_value;
                  DAST._IType _14070_tpe = _14069___mcc_h699;
                  RAST._IType _14071_typ;
                  RAST._IType _out7710;
                  _out7710 = DCOMPUTF16.COMP.GenType(_14070_tpe, false, false);
                  _14071_typ = _out7710;
                  if (((_14071_typ).is_Pointer) || ((_14071_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source751.is_MapBuilderAdd) {
              } else if (_source751.is_MapBuilderBuild) {
              } else if (_source751.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _14072___mcc_h419 = _source692.dtor_params;
            DAST._IType _14073___mcc_h420 = _source692.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _14074___mcc_h421 = _source692.dtor_body;
            {
              DAST._ICallName _source753 = _13802_name;
              if (_source753.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14075___mcc_h701 = _source753.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14076___mcc_h702 = _source753.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14077___mcc_h703 = _source753.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source754 = _14076___mcc_h702;
                if (_source754.is_None) {
                } else {
                  DAST._IType _14078___mcc_h707 = _source754.dtor_value;
                  DAST._IType _14079_tpe = _14078___mcc_h707;
                  RAST._IType _14080_typ;
                  RAST._IType _out7711;
                  _out7711 = DCOMPUTF16.COMP.GenType(_14079_tpe, false, false);
                  _14080_typ = _out7711;
                  if (((_14080_typ).is_Pointer) || ((_14080_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source753.is_MapBuilderAdd) {
              } else if (_source753.is_MapBuilderBuild) {
              } else if (_source753.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _14081___mcc_h425 = _source692.dtor_values;
            DAST._IType _14082___mcc_h426 = _source692.dtor_retType;
            DAST._IExpression _14083___mcc_h427 = _source692.dtor_expr;
            {
              DAST._ICallName _source755 = _13802_name;
              if (_source755.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14084___mcc_h709 = _source755.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14085___mcc_h710 = _source755.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14086___mcc_h711 = _source755.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source756 = _14085___mcc_h710;
                if (_source756.is_None) {
                } else {
                  DAST._IType _14087___mcc_h715 = _source756.dtor_value;
                  DAST._IType _14088_tpe = _14087___mcc_h715;
                  RAST._IType _14089_typ;
                  RAST._IType _out7712;
                  _out7712 = DCOMPUTF16.COMP.GenType(_14088_tpe, false, false);
                  _14089_typ = _out7712;
                  if (((_14089_typ).is_Pointer) || ((_14089_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source755.is_MapBuilderAdd) {
              } else if (_source755.is_MapBuilderBuild) {
              } else if (_source755.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _14090___mcc_h431 = _source692.dtor_name;
            DAST._IType _14091___mcc_h432 = _source692.dtor_typ;
            DAST._IExpression _14092___mcc_h433 = _source692.dtor_value;
            DAST._IExpression _14093___mcc_h434 = _source692.dtor_iifeBody;
            {
              DAST._ICallName _source757 = _13802_name;
              if (_source757.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14094___mcc_h717 = _source757.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14095___mcc_h718 = _source757.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14096___mcc_h719 = _source757.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source758 = _14095___mcc_h718;
                if (_source758.is_None) {
                } else {
                  DAST._IType _14097___mcc_h723 = _source758.dtor_value;
                  DAST._IType _14098_tpe = _14097___mcc_h723;
                  RAST._IType _14099_typ;
                  RAST._IType _out7713;
                  _out7713 = DCOMPUTF16.COMP.GenType(_14098_tpe, false, false);
                  _14099_typ = _out7713;
                  if (((_14099_typ).is_Pointer) || ((_14099_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source757.is_MapBuilderAdd) {
              } else if (_source757.is_MapBuilderBuild) {
              } else if (_source757.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_Apply) {
            DAST._IExpression _14100___mcc_h439 = _source692.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _14101___mcc_h440 = _source692.dtor_args;
            {
              DAST._ICallName _source759 = _13802_name;
              if (_source759.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14102___mcc_h725 = _source759.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14103___mcc_h726 = _source759.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14104___mcc_h727 = _source759.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source760 = _14103___mcc_h726;
                if (_source760.is_None) {
                } else {
                  DAST._IType _14105___mcc_h731 = _source760.dtor_value;
                  DAST._IType _14106_tpe = _14105___mcc_h731;
                  RAST._IType _14107_typ;
                  RAST._IType _out7714;
                  _out7714 = DCOMPUTF16.COMP.GenType(_14106_tpe, false, false);
                  _14107_typ = _out7714;
                  if (((_14107_typ).is_Pointer) || ((_14107_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source759.is_MapBuilderAdd) {
              } else if (_source759.is_MapBuilderBuild) {
              } else if (_source759.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_TypeTest) {
            DAST._IExpression _14108___mcc_h443 = _source692.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14109___mcc_h444 = _source692.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _14110___mcc_h445 = _source692.dtor_variant;
            {
              DAST._ICallName _source761 = _13802_name;
              if (_source761.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14111___mcc_h733 = _source761.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14112___mcc_h734 = _source761.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14113___mcc_h735 = _source761.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source762 = _14112___mcc_h734;
                if (_source762.is_None) {
                } else {
                  DAST._IType _14114___mcc_h739 = _source762.dtor_value;
                  DAST._IType _14115_tpe = _14114___mcc_h739;
                  RAST._IType _14116_typ;
                  RAST._IType _out7715;
                  _out7715 = DCOMPUTF16.COMP.GenType(_14115_tpe, false, false);
                  _14116_typ = _out7715;
                  if (((_14116_typ).is_Pointer) || ((_14116_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source761.is_MapBuilderAdd) {
              } else if (_source761.is_MapBuilderBuild) {
              } else if (_source761.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_InitializationValue) {
            DAST._IType _14117___mcc_h449 = _source692.dtor_typ;
            {
              DAST._ICallName _source763 = _13802_name;
              if (_source763.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14118___mcc_h741 = _source763.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14119___mcc_h742 = _source763.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14120___mcc_h743 = _source763.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source764 = _14119___mcc_h742;
                if (_source764.is_None) {
                } else {
                  DAST._IType _14121___mcc_h747 = _source764.dtor_value;
                  DAST._IType _14122_tpe = _14121___mcc_h747;
                  RAST._IType _14123_typ;
                  RAST._IType _out7716;
                  _out7716 = DCOMPUTF16.COMP.GenType(_14122_tpe, false, false);
                  _14123_typ = _out7716;
                  if (((_14123_typ).is_Pointer) || ((_14123_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source763.is_MapBuilderAdd) {
              } else if (_source763.is_MapBuilderBuild) {
              } else if (_source763.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_BoolBoundedPool) {
            {
              DAST._ICallName _source765 = _13802_name;
              if (_source765.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14124___mcc_h749 = _source765.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14125___mcc_h750 = _source765.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14126___mcc_h751 = _source765.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source766 = _14125___mcc_h750;
                if (_source766.is_None) {
                } else {
                  DAST._IType _14127___mcc_h755 = _source766.dtor_value;
                  DAST._IType _14128_tpe = _14127___mcc_h755;
                  RAST._IType _14129_typ;
                  RAST._IType _out7717;
                  _out7717 = DCOMPUTF16.COMP.GenType(_14128_tpe, false, false);
                  _14129_typ = _out7717;
                  if (((_14129_typ).is_Pointer) || ((_14129_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source765.is_MapBuilderAdd) {
              } else if (_source765.is_MapBuilderBuild) {
              } else if (_source765.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_SetBoundedPool) {
            DAST._IExpression _14130___mcc_h451 = _source692.dtor_of;
            {
              DAST._ICallName _source767 = _13802_name;
              if (_source767.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14131___mcc_h757 = _source767.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14132___mcc_h758 = _source767.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14133___mcc_h759 = _source767.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source768 = _14132___mcc_h758;
                if (_source768.is_None) {
                } else {
                  DAST._IType _14134___mcc_h763 = _source768.dtor_value;
                  DAST._IType _14135_tpe = _14134___mcc_h763;
                  RAST._IType _14136_typ;
                  RAST._IType _out7718;
                  _out7718 = DCOMPUTF16.COMP.GenType(_14135_tpe, false, false);
                  _14136_typ = _out7718;
                  if (((_14136_typ).is_Pointer) || ((_14136_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source767.is_MapBuilderAdd) {
              } else if (_source767.is_MapBuilderBuild) {
              } else if (_source767.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else if (_source692.is_SeqBoundedPool) {
            DAST._IExpression _14137___mcc_h453 = _source692.dtor_of;
            bool _14138___mcc_h454 = _source692.dtor_includeDuplicates;
            {
              DAST._ICallName _source769 = _13802_name;
              if (_source769.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14139___mcc_h765 = _source769.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14140___mcc_h766 = _source769.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14141___mcc_h767 = _source769.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source770 = _14140___mcc_h766;
                if (_source770.is_None) {
                } else {
                  DAST._IType _14142___mcc_h771 = _source770.dtor_value;
                  DAST._IType _14143_tpe = _14142___mcc_h771;
                  RAST._IType _14144_typ;
                  RAST._IType _out7719;
                  _out7719 = DCOMPUTF16.COMP.GenType(_14143_tpe, false, false);
                  _14144_typ = _out7719;
                  if (((_14144_typ).is_Pointer) || ((_14144_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source769.is_MapBuilderAdd) {
              } else if (_source769.is_MapBuilderBuild) {
              } else if (_source769.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          } else {
            DAST._IExpression _14145___mcc_h457 = _source692.dtor_lo;
            DAST._IExpression _14146___mcc_h458 = _source692.dtor_hi;
            {
              DAST._ICallName _source771 = _13802_name;
              if (_source771.is_Name) {
                Dafny.ISequence<Dafny.Rune> _14147___mcc_h773 = _source771.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _14148___mcc_h774 = _source771.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _14149___mcc_h775 = _source771.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source772 = _14148___mcc_h774;
                if (_source772.is_None) {
                } else {
                  DAST._IType _14150___mcc_h779 = _source772.dtor_value;
                  DAST._IType _14151_tpe = _14150___mcc_h779;
                  RAST._IType _14152_typ;
                  RAST._IType _out7720;
                  _out7720 = DCOMPUTF16.COMP.GenType(_14151_tpe, false, false);
                  _14152_typ = _out7720;
                  if (((_14152_typ).is_Pointer) || ((_14152_typ).is_PointerMut)) {
                    _13804_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13804_onExpr);
                  }
                }
              } else if (_source771.is_MapBuilderAdd) {
              } else if (_source771.is_MapBuilderBuild) {
              } else if (_source771.is_SetBuilderAdd) {
              } else {
              }
              _13804_onExpr = (_13804_onExpr).Sel(_13817_renderedName);
            }
          }
          r = _13804_onExpr;
          if ((new BigInteger((_13807_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_13807_typeExprs);
          }
          r = (r).Apply(_13810_argExprs);
          RAST._IExpr _out7721;
          DCOMPUTF16._IOwnership _out7722;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7721, out _out7722);
          r = _out7721;
          resultingOwnership = _out7722;
          return ;
        }
      } else if (_source685.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _14153___mcc_h252 = _source685.dtor_params;
        DAST._IType _14154___mcc_h253 = _source685.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _14155___mcc_h254 = _source685.dtor_body;
        Dafny.ISequence<DAST._IStatement> _14156_body = _14155___mcc_h254;
        DAST._IType _14157_retType = _14154___mcc_h253;
        Dafny.ISequence<DAST._IFormal> _14158_paramsDafny = _14153___mcc_h252;
        {
          Dafny.ISequence<RAST._IFormal> _14159_params;
          Dafny.ISequence<RAST._IFormal> _out7723;
          _out7723 = DCOMPUTF16.COMP.GenParams(_14158_paramsDafny);
          _14159_params = _out7723;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14160_paramNames;
          _14160_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _14161_paramTypesMap;
          _14161_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi38 = new BigInteger((_14159_params).Count);
          for (BigInteger _14162_i = BigInteger.Zero; _14162_i < _hi38; _14162_i++) {
            Dafny.ISequence<Dafny.Rune> _14163_name;
            _14163_name = ((_14159_params).Select(_14162_i)).dtor_name;
            _14160_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_14160_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_14163_name));
            _14161_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_14161_paramTypesMap, _14163_name, ((_14159_params).Select(_14162_i)).dtor_tpe);
          }
          DCOMPUTF16._IEnvironment _14164_env;
          _14164_env = DCOMPUTF16.Environment.create(_14160_paramNames, _14161_paramTypesMap);
          RAST._IExpr _14165_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14166_recIdents;
          DCOMPUTF16._IEnvironment _14167___v152;
          RAST._IExpr _out7724;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7725;
          DCOMPUTF16._IEnvironment _out7726;
          DCOMPUTF16.COMP.GenStmts(_14156_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _14164_env, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out7724, out _out7725, out _out7726);
          _14165_recursiveGen = _out7724;
          _14166_recIdents = _out7725;
          _14167___v152 = _out7726;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _14168_allReadCloned;
          _14168_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          while (!(_14166_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _14169_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_5 in (_14166_recIdents).Elements) {
              _14169_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_5;
              if ((_14166_recIdents).Contains(_14169_next)) {
                goto after__ASSIGN_SUCH_THAT_5;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 3489)");
          after__ASSIGN_SUCH_THAT_5: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_14169_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
                _14168_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(_14168_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let _this = self.clone();\n"));
              }
            } else if (!((_14160_paramNames).Contains(_14169_next))) {
              _14168_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14168_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent(_14169_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMPUTF16.__default.escapeIdent(_14169_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_14169_next));
            }
            _14166_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_14166_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_14169_next));
          }
          Dafny.ISequence<Dafny.Rune> _14170_paramsString;
          _14170_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          Dafny.ISequence<Dafny.Rune> _14171_paramTypes;
          _14171_paramTypes = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi39 = new BigInteger((_14159_params).Count);
          for (BigInteger _14172_i = BigInteger.Zero; _14172_i < _hi39; _14172_i++) {
            if ((_14172_i).Sign == 1) {
              _14170_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_14170_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              _14171_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_14171_paramTypes, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _14170_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14170_paramsString, DCOMPUTF16.__default.escapeIdent(((_14159_params).Select(_14172_i)).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (RAST.Type.create_Borrowed(((_14159_params).Select(_14172_i)).dtor_tpe))._ToString(DCOMPUTF16.__default.IND));
            _14171_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_14171_paramTypes, (RAST.Type.create_Borrowed(((_14159_params).Select(_14172_i)).dtor_tpe))._ToString(DCOMPUTF16.__default.IND));
          }
          RAST._IType _14173_retTypeGen;
          RAST._IType _out7727;
          _out7727 = DCOMPUTF16.COMP.GenType(_14157_retType, false, true);
          _14173_retTypeGen = _out7727;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper::<::std::rc::Rc<dyn ::std::ops::Fn("), _14171_paramTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_14173_retTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>({\n")), _14168_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(move |")), _14170_paramsString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| -> ")), (_14173_retTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), (_14165_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})})")));
          RAST._IExpr _out7728;
          DCOMPUTF16._IOwnership _out7729;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7728, out _out7729);
          r = _out7728;
          resultingOwnership = _out7729;
          return ;
        }
      } else if (_source685.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _14174___mcc_h255 = _source685.dtor_values;
        DAST._IType _14175___mcc_h256 = _source685.dtor_retType;
        DAST._IExpression _14176___mcc_h257 = _source685.dtor_expr;
        DAST._IExpression _14177_expr = _14176___mcc_h257;
        DAST._IType _14178_retType = _14175___mcc_h256;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _14179_values = _14174___mcc_h255;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14180_paramNames;
          _14180_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _14181_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out7730;
          _out7730 = DCOMPUTF16.COMP.GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_14182_value) => {
            return (_14182_value).dtor__0;
          })), _14179_values));
          _14181_paramFormals = _out7730;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _14183_paramTypes;
          _14183_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14184_paramNamesSet;
          _14184_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi40 = new BigInteger((_14179_values).Count);
          for (BigInteger _14185_i = BigInteger.Zero; _14185_i < _hi40; _14185_i++) {
            Dafny.ISequence<Dafny.Rune> _14186_name;
            _14186_name = (((_14179_values).Select(_14185_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _14187_rName;
            _14187_rName = DCOMPUTF16.__default.escapeIdent(_14186_name);
            _14180_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_14180_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_14187_rName));
            _14183_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_14183_paramTypes, _14187_rName, ((_14181_paramFormals).Select(_14185_i)).dtor_tpe);
            _14184_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_14184_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_14186_name));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _14188_s;
          _14188_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          Dafny.ISequence<Dafny.Rune> _14189_paramsString;
          _14189_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi41 = new BigInteger((_14179_values).Count);
          for (BigInteger _14190_i = BigInteger.Zero; _14190_i < _hi41; _14190_i++) {
            if ((_14190_i).Sign == 1) {
              _14189_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_14189_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IType _14191_typStr;
            RAST._IType _out7731;
            _out7731 = DCOMPUTF16.COMP.GenType((((_14179_values).Select(_14190_i)).dtor__0).dtor_typ, false, true);
            _14191_typStr = _out7731;
            RAST._IExpr _14192_valueGen;
            DCOMPUTF16._IOwnership _14193___v153;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14194_recIdents;
            RAST._IExpr _out7732;
            DCOMPUTF16._IOwnership _out7733;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7734;
            DCOMPUTF16.COMP.GenExpr(((_14179_values).Select(_14190_i)).dtor__1, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7732, out _out7733, out _out7734);
            _14192_valueGen = _out7732;
            _14193___v153 = _out7733;
            _14194_recIdents = _out7734;
            _14188_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14188_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent((((_14179_values).Select(_14190_i)).dtor__0).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_14191_typStr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _14194_recIdents);
            _14188_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14188_s, (_14192_valueGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
          }
          DCOMPUTF16._IEnvironment _14195_newEnv;
          _14195_newEnv = DCOMPUTF16.Environment.create(_14180_paramNames, _14183_paramTypes);
          RAST._IExpr _14196_recGen;
          DCOMPUTF16._IOwnership _14197_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14198_recIdents;
          RAST._IExpr _out7735;
          DCOMPUTF16._IOwnership _out7736;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7737;
          DCOMPUTF16.COMP.GenExpr(_14177_expr, selfIdent, _14195_newEnv, expectedOwnership, out _out7735, out _out7736, out _out7737);
          _14196_recGen = _out7735;
          _14197_recOwned = _out7736;
          _14198_recIdents = _out7737;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_14198_recIdents, _14184_paramNamesSet);
          _14188_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14188_s, (_14196_recGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}"));
          r = RAST.Expr.create_RawExpr(_14188_s);
          RAST._IExpr _out7738;
          DCOMPUTF16._IOwnership _out7739;
          DCOMPUTF16.COMP.FromOwnership(r, _14197_recOwned, expectedOwnership, out _out7738, out _out7739);
          r = _out7738;
          resultingOwnership = _out7739;
          return ;
        }
      } else if (_source685.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _14199___mcc_h258 = _source685.dtor_name;
        DAST._IType _14200___mcc_h259 = _source685.dtor_typ;
        DAST._IExpression _14201___mcc_h260 = _source685.dtor_value;
        DAST._IExpression _14202___mcc_h261 = _source685.dtor_iifeBody;
        DAST._IExpression _14203_iifeBody = _14202___mcc_h261;
        DAST._IExpression _14204_value = _14201___mcc_h260;
        DAST._IType _14205_tpe = _14200___mcc_h259;
        Dafny.ISequence<Dafny.Rune> _14206_name = _14199___mcc_h258;
        {
          RAST._IExpr _14207_valueGen;
          DCOMPUTF16._IOwnership _14208___v154;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14209_recIdents;
          RAST._IExpr _out7740;
          DCOMPUTF16._IOwnership _out7741;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7742;
          DCOMPUTF16.COMP.GenExpr(_14204_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7740, out _out7741, out _out7742);
          _14207_valueGen = _out7740;
          _14208___v154 = _out7741;
          _14209_recIdents = _out7742;
          readIdents = _14209_recIdents;
          RAST._IType _14210_valueTypeGen;
          RAST._IType _out7743;
          _out7743 = DCOMPUTF16.COMP.GenType(_14205_tpe, false, true);
          _14210_valueTypeGen = _out7743;
          RAST._IExpr _14211_bodyGen;
          DCOMPUTF16._IOwnership _14212___v155;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14213_bodyIdents;
          RAST._IExpr _out7744;
          DCOMPUTF16._IOwnership _out7745;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7746;
          DCOMPUTF16.COMP.GenExpr(_14203_iifeBody, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7744, out _out7745, out _out7746);
          _14211_bodyGen = _out7744;
          _14212___v155 = _out7745;
          _14213_bodyIdents = _out7746;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_14213_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_14206_name))));
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet "), DCOMPUTF16.__default.escapeIdent((_14206_name))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_14210_valueTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (_14207_valueGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n")), (_14211_bodyGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}")));
          RAST._IExpr _out7747;
          DCOMPUTF16._IOwnership _out7748;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7747, out _out7748);
          r = _out7747;
          resultingOwnership = _out7748;
          return ;
        }
      } else if (_source685.is_Apply) {
        DAST._IExpression _14214___mcc_h262 = _source685.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _14215___mcc_h263 = _source685.dtor_args;
        Dafny.ISequence<DAST._IExpression> _14216_args = _14215___mcc_h263;
        DAST._IExpression _14217_func = _14214___mcc_h262;
        {
          RAST._IExpr _14218_funcExpr;
          DCOMPUTF16._IOwnership _14219___v156;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14220_recIdents;
          RAST._IExpr _out7749;
          DCOMPUTF16._IOwnership _out7750;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7751;
          DCOMPUTF16.COMP.GenExpr(_14217_func, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7749, out _out7750, out _out7751);
          _14218_funcExpr = _out7749;
          _14219___v156 = _out7750;
          _14220_recIdents = _out7751;
          readIdents = _14220_recIdents;
          Dafny.ISequence<Dafny.Rune> _14221_argString;
          _14221_argString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _14222_i;
          _14222_i = BigInteger.Zero;
          while ((_14222_i) < (new BigInteger((_14216_args).Count))) {
            if ((_14222_i).Sign == 1) {
              _14221_argString = Dafny.Sequence<Dafny.Rune>.Concat(_14221_argString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IExpr _14223_argExpr;
            DCOMPUTF16._IOwnership _14224_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14225_argIdents;
            RAST._IExpr _out7752;
            DCOMPUTF16._IOwnership _out7753;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7754;
            DCOMPUTF16.COMP.GenExpr((_14216_args).Select(_14222_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7752, out _out7753, out _out7754);
            _14223_argExpr = _out7752;
            _14224_argOwned = _out7753;
            _14225_argIdents = _out7754;
            Dafny.ISequence<Dafny.Rune> _14226_argExprString;
            _14226_argExprString = (_14223_argExpr)._ToString(DCOMPUTF16.__default.IND);
            if (object.Equals(_14224_argOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
              _14226_argExprString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _14226_argExprString);
            }
            _14221_argString = Dafny.Sequence<Dafny.Rune>.Concat(_14221_argString, _14226_argExprString);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _14225_argIdents);
            _14222_i = (_14222_i) + (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_14218_funcExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _14221_argString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("))")));
          RAST._IExpr _out7755;
          DCOMPUTF16._IOwnership _out7756;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7755, out _out7756);
          r = _out7755;
          resultingOwnership = _out7756;
          return ;
        }
      } else if (_source685.is_TypeTest) {
        DAST._IExpression _14227___mcc_h264 = _source685.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14228___mcc_h265 = _source685.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _14229___mcc_h266 = _source685.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _14230_variant = _14229___mcc_h266;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14231_dType = _14228___mcc_h265;
        DAST._IExpression _14232_on = _14227___mcc_h264;
        {
          RAST._IExpr _14233_exprGen;
          DCOMPUTF16._IOwnership _14234___v157;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14235_recIdents;
          RAST._IExpr _out7757;
          DCOMPUTF16._IOwnership _out7758;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7759;
          DCOMPUTF16.COMP.GenExpr(_14232_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7757, out _out7758, out _out7759);
          _14233_exprGen = _out7757;
          _14234___v157 = _out7758;
          _14235_recIdents = _out7759;
          RAST._IType _14236_dTypePath;
          RAST._IType _out7760;
          _out7760 = DCOMPUTF16.COMP.GenPath(_14231_dType);
          _14236_dTypePath = _out7760;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_14233_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_14236_dTypePath).MSel(DCOMPUTF16.__default.escapeIdent(_14230_variant)))._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out7761;
          DCOMPUTF16._IOwnership _out7762;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7761, out _out7762);
          r = _out7761;
          resultingOwnership = _out7762;
          readIdents = _14235_recIdents;
          return ;
        }
      } else if (_source685.is_InitializationValue) {
        DAST._IType _14237___mcc_h267 = _source685.dtor_typ;
        DAST._IType _14238_typ = _14237___mcc_h267;
        {
          RAST._IType _14239_typExpr;
          RAST._IType _out7763;
          _out7763 = DCOMPUTF16.COMP.GenType(_14238_typ, false, false);
          _14239_typExpr = _out7763;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_14239_typExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          RAST._IExpr _out7764;
          DCOMPUTF16._IOwnership _out7765;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7764, out _out7765);
          r = _out7764;
          resultingOwnership = _out7765;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source685.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out7766;
          DCOMPUTF16._IOwnership _out7767;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7766, out _out7767);
          r = _out7766;
          resultingOwnership = _out7767;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source685.is_SetBoundedPool) {
        DAST._IExpression _14240___mcc_h268 = _source685.dtor_of;
        DAST._IExpression _14241_of = _14240___mcc_h268;
        {
          RAST._IExpr _14242_exprGen;
          DCOMPUTF16._IOwnership _14243___v158;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14244_recIdents;
          RAST._IExpr _out7768;
          DCOMPUTF16._IOwnership _out7769;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7770;
          DCOMPUTF16.COMP.GenExpr(_14241_of, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7768, out _out7769, out _out7770);
          _14242_exprGen = _out7768;
          _14243___v158 = _out7769;
          _14244_recIdents = _out7770;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_14242_exprGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()")));
          RAST._IExpr _out7771;
          DCOMPUTF16._IOwnership _out7772;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7771, out _out7772);
          r = _out7771;
          resultingOwnership = _out7772;
          readIdents = _14244_recIdents;
          return ;
        }
      } else if (_source685.is_SeqBoundedPool) {
        DAST._IExpression _14245___mcc_h269 = _source685.dtor_of;
        bool _14246___mcc_h270 = _source685.dtor_includeDuplicates;
        bool _14247_includeDuplicates = _14246___mcc_h270;
        DAST._IExpression _14248_of = _14245___mcc_h269;
        {
          RAST._IExpr _14249_exprGen;
          DCOMPUTF16._IOwnership _14250___v159;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14251_recIdents;
          RAST._IExpr _out7773;
          DCOMPUTF16._IOwnership _out7774;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7775;
          DCOMPUTF16.COMP.GenExpr(_14248_of, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7773, out _out7774, out _out7775);
          _14249_exprGen = _out7773;
          _14250___v159 = _out7774;
          _14251_recIdents = _out7775;
          Dafny.ISequence<Dafny.Rune> _14252_s;
          _14252_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_14249_exprGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()"));
          if (!(_14247_includeDuplicates)) {
            _14252_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::itertools::Itertools::unique("), _14252_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          }
          r = RAST.Expr.create_RawExpr(_14252_s);
          RAST._IExpr _out7776;
          DCOMPUTF16._IOwnership _out7777;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7776, out _out7777);
          r = _out7776;
          resultingOwnership = _out7777;
          readIdents = _14251_recIdents;
          return ;
        }
      } else {
        DAST._IExpression _14253___mcc_h271 = _source685.dtor_lo;
        DAST._IExpression _14254___mcc_h272 = _source685.dtor_hi;
        DAST._IExpression _14255_hi = _14254___mcc_h272;
        DAST._IExpression _14256_lo = _14253___mcc_h271;
        {
          RAST._IExpr _14257_lo;
          DCOMPUTF16._IOwnership _14258___v160;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14259_recIdentsLo;
          RAST._IExpr _out7778;
          DCOMPUTF16._IOwnership _out7779;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7780;
          DCOMPUTF16.COMP.GenExpr(_14256_lo, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7778, out _out7779, out _out7780);
          _14257_lo = _out7778;
          _14258___v160 = _out7779;
          _14259_recIdentsLo = _out7780;
          RAST._IExpr _14260_hi;
          DCOMPUTF16._IOwnership _14261___v161;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14262_recIdentsHi;
          RAST._IExpr _out7781;
          DCOMPUTF16._IOwnership _out7782;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7783;
          DCOMPUTF16.COMP.GenExpr(_14255_hi, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7781, out _out7782, out _out7783);
          _14260_hi = _out7781;
          _14261___v161 = _out7782;
          _14262_recIdentsHi = _out7783;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::integer_range("), (_14257_lo)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_14260_hi)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          RAST._IExpr _out7784;
          DCOMPUTF16._IOwnership _out7785;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7784, out _out7785);
          r = _out7784;
          resultingOwnership = _out7785;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_14259_recIdentsLo, _14262_recIdentsHi);
          return ;
        }
      }
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern crate dafny_runtime;\n"));
      BigInteger _14263_i;
      _14263_i = BigInteger.Zero;
      while ((_14263_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _14264_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _14265_m;
        RAST._IMod _out7786;
        _out7786 = DCOMPUTF16.COMP.GenModule((p).Select(_14263_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _14265_m = _out7786;
        _14264_generated = (_14265_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_14263_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _14264_generated);
        _14263_i = (_14263_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _14266_i;
      _14266_i = BigInteger.Zero;
      while ((_14266_i) < (new BigInteger((fullName).Count))) {
        if ((_14266_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMPUTF16.__default.escapeIdent((fullName).Select(_14266_i)));
        _14266_i = (_14266_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMPUTF16

