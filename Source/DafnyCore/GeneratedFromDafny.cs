// Dafny program the_program compiled into C#
// To recompile, you will need the libraries
//     System.Runtime.Numerics.dll System.Collections.Immutable.dll
// but the 'dotnet' tool in net6.0 should pick those up automatically.
// Optionally, you may want to include compiler switches like
//     /debug /nowarn:162,164,168,183,219,436,1717,1718

using System;
using System.Numerics;
using System.Collections;
namespace Formatting {

  public partial class __default {
    public static System.String ReindentProgramFromFirstToken(Microsoft.Dafny.IToken firstToken, Formatting.IIndentationFormatter reindent)
    {
      System.String s = default(System.String);
      Microsoft.Dafny.IToken token;
      token = firstToken;
      System.Text.StringBuilder sb;
      System.Text.StringBuilder _nw0 = new System.Text.StringBuilder();
      sb = _nw0;
      while ((token) != (object) ((Microsoft.Dafny.IToken)null)) {
        System.String newLeadingTrivia;
        newLeadingTrivia = (reindent).GetNewLeadingTrivia(token);
        System.String newTrailingTrivia;
        newTrailingTrivia = (reindent).GetNewTrailingTrivia(token);
        (sb).Append(newLeadingTrivia);
        (sb).Append(token.val);
        (sb).Append(newTrailingTrivia);
        token = token.Next;
      }
      System.String _out0;
      _out0 = (sb).ToString().ToString();
      s = _out0;
      return s;
    }
  }

  public interface IIndentationFormatter {
    System.String GetNewLeadingTrivia(Microsoft.Dafny.IToken token);
    System.String GetNewTrailingTrivia(Microsoft.Dafny.IToken token);
  }
  public class _Companion_IIndentationFormatter {
  }
} // end of namespace Formatting


namespace Std.Wrappers {

  public partial class __default {
    public static Std.Wrappers._IOutcomeResult<__E> Need<__E>(bool condition, __E error)
    {
      if (condition) {
        return Std.Wrappers.OutcomeResult<__E>.create_Pass_k();
      } else {
        return Std.Wrappers.OutcomeResult<__E>.create_Fail_k(error);
      }
    }
  }

  public interface _IOption<out T> {
    bool is_None { get; }
    bool is_Some { get; }
    T dtor_value { get; }
    _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0);
    bool IsFailure();
    Std.Wrappers._IOption<__U> PropagateFailure<__U>();
    T Extract();
    Std.Wrappers._IResult<T, __E> ToResult<__E>(__E error);
    Std.Wrappers._IOutcome<__E> ToOutcome<__E>(__E error);
  }
  public abstract class Option<T> : _IOption<T> {
    public Option() {
    }
    public static Std.Wrappers._IOption<T> Default() {
      return create_None();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOption<T>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOption<T>>(Std.Wrappers.Option<T>.Default());
    }
    public static _IOption<T> create_None() {
      return new Option_None<T>();
    }
    public static _IOption<T> create_Some(T @value) {
      return new Option_Some<T>(@value);
    }
    public bool is_None { get { return this is Option_None<T>; } }
    public bool is_Some { get { return this is Option_Some<T>; } }
    public T dtor_value {
      get {
        var d = this;
        return ((Option_Some<T>)d)._value;
      }
    }
    public abstract _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0);
    public bool IsFailure() {
      return (this).is_None;
    }
    public Std.Wrappers._IOption<__U> PropagateFailure<__U>() {
      return Std.Wrappers.Option<__U>.create_None();
    }
    public T Extract() {
      return (this).dtor_value;
    }
    public static T GetOr(Std.Wrappers._IOption<T> _this, T @default) {
      Std.Wrappers._IOption<T> _source0 = _this;
      if (_source0.is_None) {
        return @default;
      } else {
        T __mcc_h0 = _source0.dtor_value;
        T v = __mcc_h0;
        return v;
      }
    }
    public Std.Wrappers._IResult<T, __E> ToResult<__E>(__E error) {
      Std.Wrappers._IOption<T> _source1 = this;
      if (_source1.is_None) {
        return Std.Wrappers.Result<T, __E>.create_Failure(error);
      } else {
        T __mcc_h0 = _source1.dtor_value;
        T v = __mcc_h0;
        return Std.Wrappers.Result<T, __E>.create_Success(v);
      }
    }
    public Std.Wrappers._IOutcome<__E> ToOutcome<__E>(__E error) {
      Std.Wrappers._IOption<T> _source2 = this;
      if (_source2.is_None) {
        return Std.Wrappers.Outcome<__E>.create_Fail(error);
      } else {
        T __mcc_h0 = _source2.dtor_value;
        T v = __mcc_h0;
        return Std.Wrappers.Outcome<__E>.create_Pass();
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IOption<T> _this, Func<Std.Wrappers._IOption<T>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IOption<T>, __FC>>(rewrap)(_this);
    }
  }
  public class Option_None<T> : Option<T> {
    public Option_None() : base() {
    }
    public override _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0) {
      if (this is _IOption<__T> dt) { return dt; }
      return new Option_None<__T>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Option_None<T>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Option.None";
      return s;
    }
  }
  public class Option_Some<T> : Option<T> {
    public readonly T _value;
    public Option_Some(T @value) : base() {
      this._value = @value;
    }
    public override _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0) {
      if (this is _IOption<__T> dt) { return dt; }
      return new Option_Some<__T>(converter0(_value));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Option_Some<T>;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Option.Some";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }

  public interface _IResult<out R, out E> {
    bool is_Success { get; }
    bool is_Failure { get; }
    R dtor_value { get; }
    E dtor_error { get; }
    _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1);
    bool IsFailure();
    Std.Wrappers._IResult<__U, E> PropagateFailure<__U>();
    R Extract();
    Std.Wrappers._IOption<R> ToOption();
    Std.Wrappers._IOutcome<E> ToOutcome();
  }
  public abstract class Result<R, E> : _IResult<R, E> {
    public Result() {
    }
    public static Std.Wrappers._IResult<R, E> Default(R _default_R) {
      return create_Success(_default_R);
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IResult<R, E>> _TypeDescriptor(Dafny.TypeDescriptor<R> _td_R) {
      return new Dafny.TypeDescriptor<Std.Wrappers._IResult<R, E>>(Std.Wrappers.Result<R, E>.Default(_td_R.Default()));
    }
    public static _IResult<R, E> create_Success(R @value) {
      return new Result_Success<R, E>(@value);
    }
    public static _IResult<R, E> create_Failure(E error) {
      return new Result_Failure<R, E>(error);
    }
    public bool is_Success { get { return this is Result_Success<R, E>; } }
    public bool is_Failure { get { return this is Result_Failure<R, E>; } }
    public R dtor_value {
      get {
        var d = this;
        return ((Result_Success<R, E>)d)._value;
      }
    }
    public E dtor_error {
      get {
        var d = this;
        return ((Result_Failure<R, E>)d)._error;
      }
    }
    public abstract _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1);
    public bool IsFailure() {
      return (this).is_Failure;
    }
    public Std.Wrappers._IResult<__U, E> PropagateFailure<__U>() {
      return Std.Wrappers.Result<__U, E>.create_Failure((this).dtor_error);
    }
    public R Extract() {
      return (this).dtor_value;
    }
    public static R GetOr(Std.Wrappers._IResult<R, E> _this, R @default) {
      Std.Wrappers._IResult<R, E> _source3 = _this;
      if (_source3.is_Success) {
        R _10___mcc_h0 = _source3.dtor_value;
        R _11_s = _10___mcc_h0;
        return _11_s;
      } else {
        E _12___mcc_h1 = _source3.dtor_error;
        E _13_e = _12___mcc_h1;
        return @default;
      }
    }
    public Std.Wrappers._IOption<R> ToOption() {
      Std.Wrappers._IResult<R, E> _source4 = this;
      if (_source4.is_Success) {
        R _14___mcc_h0 = _source4.dtor_value;
        R _15_s = _14___mcc_h0;
        return Std.Wrappers.Option<R>.create_Some(_15_s);
      } else {
        E _16___mcc_h1 = _source4.dtor_error;
        E _17_e = _16___mcc_h1;
        return Std.Wrappers.Option<R>.create_None();
      }
    }
    public Std.Wrappers._IOutcome<E> ToOutcome() {
      Std.Wrappers._IResult<R, E> _source5 = this;
      if (_source5.is_Success) {
        R _18___mcc_h0 = _source5.dtor_value;
        R _19_s = _18___mcc_h0;
        return Std.Wrappers.Outcome<E>.create_Pass();
      } else {
        E _20___mcc_h1 = _source5.dtor_error;
        E _21_e = _20___mcc_h1;
        return Std.Wrappers.Outcome<E>.create_Fail(_21_e);
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IResult<R, E> _this, Func<Std.Wrappers._IResult<R, E>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IResult<R, E>, __FC>>(rewrap)(_this);
    }
    public static Std.Wrappers._IResult<R, __NewE> MapFailure<__NewE>(Std.Wrappers._IResult<R, E> _this, Func<E, __NewE> reWrap) {
      Std.Wrappers._IResult<R, E> _source6 = _this;
      if (_source6.is_Success) {
        R _22___mcc_h0 = _source6.dtor_value;
        R _23_s = _22___mcc_h0;
        return Std.Wrappers.Result<R, __NewE>.create_Success(_23_s);
      } else {
        E _24___mcc_h1 = _source6.dtor_error;
        E _25_e = _24___mcc_h1;
        return Std.Wrappers.Result<R, __NewE>.create_Failure(Dafny.Helpers.Id<Func<E, __NewE>>(reWrap)(_25_e));
      }
    }
  }
  public class Result_Success<R, E> : Result<R, E> {
    public readonly R _value;
    public Result_Success(R @value) : base() {
      this._value = @value;
    }
    public override _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1) {
      if (this is _IResult<__R, __E> dt) { return dt; }
      return new Result_Success<__R, __E>(converter0(_value));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Result_Success<R, E>;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Result.Success";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Result_Failure<R, E> : Result<R, E> {
    public readonly E _error;
    public Result_Failure(E error) : base() {
      this._error = error;
    }
    public override _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1) {
      if (this is _IResult<__R, __E> dt) { return dt; }
      return new Result_Failure<__R, __E>(converter1(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Result_Failure<R, E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Result.Failure";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }

  public interface _IOutcome<out E> {
    bool is_Pass { get; }
    bool is_Fail { get; }
    E dtor_error { get; }
    _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0);
    bool IsFailure();
    Std.Wrappers._IOutcome<E> PropagateFailure();
    Std.Wrappers._IOption<__R> ToOption<__R>(__R r);
    Std.Wrappers._IResult<__R, E> ToResult<__R>(__R r);
  }
  public abstract class Outcome<E> : _IOutcome<E> {
    public Outcome() {
    }
    public static Std.Wrappers._IOutcome<E> Default() {
      return create_Pass();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOutcome<E>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOutcome<E>>(Std.Wrappers.Outcome<E>.Default());
    }
    public static _IOutcome<E> create_Pass() {
      return new Outcome_Pass<E>();
    }
    public static _IOutcome<E> create_Fail(E error) {
      return new Outcome_Fail<E>(error);
    }
    public bool is_Pass { get { return this is Outcome_Pass<E>; } }
    public bool is_Fail { get { return this is Outcome_Fail<E>; } }
    public E dtor_error {
      get {
        var d = this;
        return ((Outcome_Fail<E>)d)._error;
      }
    }
    public abstract _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0);
    public bool IsFailure() {
      return (this).is_Fail;
    }
    public Std.Wrappers._IOutcome<E> PropagateFailure() {
      return this;
    }
    public Std.Wrappers._IOption<__R> ToOption<__R>(__R r) {
      Std.Wrappers._IOutcome<E> _source7 = this;
      if (_source7.is_Pass) {
        return Std.Wrappers.Option<__R>.create_Some(r);
      } else {
        E _26___mcc_h0 = _source7.dtor_error;
        E _27_e = _26___mcc_h0;
        return Std.Wrappers.Option<__R>.create_None();
      }
    }
    public Std.Wrappers._IResult<__R, E> ToResult<__R>(__R r) {
      Std.Wrappers._IOutcome<E> _source8 = this;
      if (_source8.is_Pass) {
        return Std.Wrappers.Result<__R, E>.create_Success(r);
      } else {
        E _28___mcc_h0 = _source8.dtor_error;
        E _29_e = _28___mcc_h0;
        return Std.Wrappers.Result<__R, E>.create_Failure(_29_e);
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IOutcome<E> _this, Func<Std.Wrappers._IOutcome<E>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IOutcome<E>, __FC>>(rewrap)(_this);
    }
    public static Std.Wrappers._IResult<__T, __NewE> MapFailure<__T, __NewE>(Std.Wrappers._IOutcome<E> _this, Func<E, __NewE> rewrap, __T @default)
    {
      Std.Wrappers._IOutcome<E> _source9 = _this;
      if (_source9.is_Pass) {
        return Std.Wrappers.Result<__T, __NewE>.create_Success(@default);
      } else {
        E _30___mcc_h0 = _source9.dtor_error;
        E _31_e = _30___mcc_h0;
        return Std.Wrappers.Result<__T, __NewE>.create_Failure(Dafny.Helpers.Id<Func<E, __NewE>>(rewrap)(_31_e));
      }
    }
    public static Std.Wrappers._IOutcome<E> Need(bool condition, E error)
    {
      if (condition) {
        return Std.Wrappers.Outcome<E>.create_Pass();
      } else {
        return Std.Wrappers.Outcome<E>.create_Fail(error);
      }
    }
  }
  public class Outcome_Pass<E> : Outcome<E> {
    public Outcome_Pass() : base() {
    }
    public override _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcome<__E> dt) { return dt; }
      return new Outcome_Pass<__E>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Outcome_Pass<E>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Outcome.Pass";
      return s;
    }
  }
  public class Outcome_Fail<E> : Outcome<E> {
    public readonly E _error;
    public Outcome_Fail(E error) : base() {
      this._error = error;
    }
    public override _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcome<__E> dt) { return dt; }
      return new Outcome_Fail<__E>(converter0(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Outcome_Fail<E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Outcome.Fail";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }

  public interface _IOutcomeResult<out E> {
    bool is_Pass_k { get; }
    bool is_Fail_k { get; }
    E dtor_error { get; }
    _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0);
    bool IsFailure();
    Std.Wrappers._IResult<__U, E> PropagateFailure<__U>();
  }
  public abstract class OutcomeResult<E> : _IOutcomeResult<E> {
    public OutcomeResult() {
    }
    public static Std.Wrappers._IOutcomeResult<E> Default() {
      return create_Pass_k();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOutcomeResult<E>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOutcomeResult<E>>(Std.Wrappers.OutcomeResult<E>.Default());
    }
    public static _IOutcomeResult<E> create_Pass_k() {
      return new OutcomeResult_Pass_k<E>();
    }
    public static _IOutcomeResult<E> create_Fail_k(E error) {
      return new OutcomeResult_Fail_k<E>(error);
    }
    public bool is_Pass_k { get { return this is OutcomeResult_Pass_k<E>; } }
    public bool is_Fail_k { get { return this is OutcomeResult_Fail_k<E>; } }
    public E dtor_error {
      get {
        var d = this;
        return ((OutcomeResult_Fail_k<E>)d)._error;
      }
    }
    public abstract _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0);
    public bool IsFailure() {
      return (this).is_Fail_k;
    }
    public Std.Wrappers._IResult<__U, E> PropagateFailure<__U>() {
      return Std.Wrappers.Result<__U, E>.create_Failure((this).dtor_error);
    }
  }
  public class OutcomeResult_Pass_k<E> : OutcomeResult<E> {
    public OutcomeResult_Pass_k() : base() {
    }
    public override _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcomeResult<__E> dt) { return dt; }
      return new OutcomeResult_Pass_k<__E>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.OutcomeResult_Pass_k<E>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.OutcomeResult.Pass'";
      return s;
    }
  }
  public class OutcomeResult_Fail_k<E> : OutcomeResult<E> {
    public readonly E _error;
    public OutcomeResult_Fail_k(E error) : base() {
      this._error = error;
    }
    public override _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcomeResult<__E> dt) { return dt; }
      return new OutcomeResult_Fail_k<__E>(converter0(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.OutcomeResult_Fail_k<E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.OutcomeResult.Fail'";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }
} // end of namespace Std.Wrappers
namespace Std.Math {

  public partial class __default {
    public static BigInteger Min(BigInteger a, BigInteger b)
    {
      if ((a) < (b)) {
        return a;
      } else {
        return b;
      }
    }
    public static BigInteger Min3(BigInteger a, BigInteger b, BigInteger c)
    {
      return Std.Math.__default.Min(a, Std.Math.__default.Min(b, c));
    }
    public static BigInteger Max(BigInteger a, BigInteger b)
    {
      if ((a) < (b)) {
        return b;
      } else {
        return a;
      }
    }
    public static BigInteger Max3(BigInteger a, BigInteger b, BigInteger c)
    {
      return Std.Math.__default.Max(a, Std.Math.__default.Max(b, c));
    }
    public static BigInteger Abs(BigInteger a) {
      if ((a).Sign == -1) {
        return (BigInteger.Zero) - (a);
      } else {
        return a;
      }
    }
  }
} // end of namespace Std.Math
namespace Std.Collections.Seq {

  public partial class __default {
    public static __T First<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Select(BigInteger.Zero);
    }
    public static Dafny.ISequence<__T> DropFirst<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Drop(BigInteger.One);
    }
    public static __T Last<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Select((new BigInteger((xs).Count)) - (BigInteger.One));
    }
    public static Dafny.ISequence<__T> DropLast<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
    }
    public static __T[] ToArray<__T>(Dafny.ISequence<__T> xs)
    {
      __T[] a = new __T[0];
      Func<BigInteger, __T> _init2 = Dafny.Helpers.Id<Func<Dafny.ISequence<__T>, Func<BigInteger, __T>>>((_83_xs) => ((System.Func<BigInteger, __T>)((_84_i) => {
        return (_83_xs).Select(_84_i);
      })))(xs);
      __T[] _nw3 = new __T[Dafny.Helpers.ToIntChecked(new BigInteger((xs).Count), "array size exceeds memory limit")];
      for (var _i0_2 = 0; _i0_2 < new BigInteger(_nw3.Length); _i0_2++) {
        _nw3[(int)(_i0_2)] = _init2(_i0_2);
      }
      a = _nw3;
      return a;
    }
    public static Dafny.ISet<__T> ToSet<__T>(Dafny.ISequence<__T> xs) {
      return Dafny.Helpers.Id<Func<Dafny.ISequence<__T>, Dafny.ISet<__T>>>((_85_xs) => ((System.Func<Dafny.ISet<__T>>)(() => {
        var _coll0 = new System.Collections.Generic.List<__T>();
        foreach (__T _compr_0 in (_85_xs).CloneAsArray()) {
          __T _86_x = (__T)_compr_0;
          if ((_85_xs).Contains(_86_x)) {
            _coll0.Add(_86_x);
          }
        }
        return Dafny.Set<__T>.FromCollection(_coll0);
      }))())(xs);
    }
    public static BigInteger IndexOf<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      BigInteger _87___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if (object.Equals((xs).Select(BigInteger.Zero), v)) {
        return (BigInteger.Zero) + (_87___accumulator);
      } else {
        _87___accumulator = (_87___accumulator) + (BigInteger.One);
        Dafny.ISequence<__T> _in0 = (xs).Drop(BigInteger.One);
        __T _in1 = v;
        xs = _in0;
        v = _in1;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<BigInteger> IndexOfOption<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      return Std.Collections.Seq.__default.IndexByOption<__T>(xs, Dafny.Helpers.Id<Func<__T, Func<__T, bool>>>((_88_v) => ((System.Func<__T, bool>)((_89_x) => {
        return object.Equals(_89_x, _88_v);
      })))(v));
    }
    public static Std.Wrappers._IOption<BigInteger> IndexByOption<__T>(Dafny.ISequence<__T> xs, Func<__T, bool> p)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Option<BigInteger>.create_None();
      } else if (Dafny.Helpers.Id<Func<__T, bool>>(p)((xs).Select(BigInteger.Zero))) {
        return Std.Wrappers.Option<BigInteger>.create_Some(BigInteger.Zero);
      } else {
        Std.Wrappers._IOption<BigInteger> _90_o_k = Std.Collections.Seq.__default.IndexByOption<__T>((xs).Drop(BigInteger.One), p);
        if ((_90_o_k).is_Some) {
          return Std.Wrappers.Option<BigInteger>.create_Some(((_90_o_k).dtor_value) + (BigInteger.One));
        } else {
          return Std.Wrappers.Option<BigInteger>.create_None();
        }
      }
    }
    public static BigInteger LastIndexOf<__T>(Dafny.ISequence<__T> xs, __T v)
    {
    TAIL_CALL_START: ;
      if (object.Equals((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One)), v)) {
        return (new BigInteger((xs).Count)) - (BigInteger.One);
      } else {
        Dafny.ISequence<__T> _in2 = (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
        __T _in3 = v;
        xs = _in2;
        v = _in3;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<BigInteger> LastIndexOfOption<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      return Std.Collections.Seq.__default.LastIndexByOption<__T>(xs, Dafny.Helpers.Id<Func<__T, Func<__T, bool>>>((_91_v) => ((System.Func<__T, bool>)((_92_x) => {
        return object.Equals(_92_x, _91_v);
      })))(v));
    }
    public static Std.Wrappers._IOption<BigInteger> LastIndexByOption<__T>(Dafny.ISequence<__T> xs, Func<__T, bool> p)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Option<BigInteger>.create_None();
      } else if (Dafny.Helpers.Id<Func<__T, bool>>(p)((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One)))) {
        return Std.Wrappers.Option<BigInteger>.create_Some((new BigInteger((xs).Count)) - (BigInteger.One));
      } else {
        Dafny.ISequence<__T> _in4 = (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
        Func<__T, bool> _in5 = p;
        xs = _in4;
        p = _in5;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Remove<__T>(Dafny.ISequence<__T> xs, BigInteger pos)
    {
      return Dafny.Sequence<__T>.Concat((xs).Take(pos), (xs).Drop((pos) + (BigInteger.One)));
    }
    public static Dafny.ISequence<__T> RemoveValue<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      if (!(xs).Contains(v)) {
        return xs;
      } else {
        BigInteger _93_i = Std.Collections.Seq.__default.IndexOf<__T>(xs, v);
        return Dafny.Sequence<__T>.Concat((xs).Take(_93_i), (xs).Drop((_93_i) + (BigInteger.One)));
      }
    }
    public static Dafny.ISequence<__T> Insert<__T>(Dafny.ISequence<__T> xs, __T a, BigInteger pos)
    {
      return Dafny.Sequence<__T>.Concat(Dafny.Sequence<__T>.Concat((xs).Take(pos), Dafny.Sequence<__T>.FromElements(a)), (xs).Drop(pos));
    }
    public static Dafny.ISequence<__T> Reverse<__T>(Dafny.ISequence<__T> xs) {
      Dafny.ISequence<__T> _94___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((xs).Equals(Dafny.Sequence<__T>.FromElements())) {
        return Dafny.Sequence<__T>.Concat(_94___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _94___accumulator = Dafny.Sequence<__T>.Concat(_94___accumulator, Dafny.Sequence<__T>.FromElements((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One))));
        Dafny.ISequence<__T> _in6 = (xs).Subsequence(BigInteger.Zero, (new BigInteger((xs).Count)) - (BigInteger.One));
        xs = _in6;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Repeat<__T>(__T v, BigInteger length)
    {
      Dafny.ISequence<__T> _95___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((length).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_95___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _95___accumulator = Dafny.Sequence<__T>.Concat(_95___accumulator, Dafny.Sequence<__T>.FromElements(v));
        __T _in7 = v;
        BigInteger _in8 = (length) - (BigInteger.One);
        v = _in7;
        length = _in8;
        goto TAIL_CALL_START;
      }
    }
    public static _System._ITuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>> Unzip<__A, __B>(Dafny.ISequence<_System._ITuple2<__A, __B>> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>>.create(Dafny.Sequence<__A>.FromElements(), Dafny.Sequence<__B>.FromElements());
      } else {
        _System._ITuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>> _let_tmp_rhs0 = Std.Collections.Seq.__default.Unzip<__A, __B>(Std.Collections.Seq.__default.DropLast<_System._ITuple2<__A, __B>>(xs));
        Dafny.ISequence<__A> _96_a = _let_tmp_rhs0.dtor__0;
        Dafny.ISequence<__B> _97_b = _let_tmp_rhs0.dtor__1;
        return _System.Tuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>>.create(Dafny.Sequence<__A>.Concat(_96_a, Dafny.Sequence<__A>.FromElements((Std.Collections.Seq.__default.Last<_System._ITuple2<__A, __B>>(xs)).dtor__0)), Dafny.Sequence<__B>.Concat(_97_b, Dafny.Sequence<__B>.FromElements((Std.Collections.Seq.__default.Last<_System._ITuple2<__A, __B>>(xs)).dtor__1)));
      }
    }
    public static Dafny.ISequence<_System._ITuple2<__A, __B>> Zip<__A, __B>(Dafny.ISequence<__A> xs, Dafny.ISequence<__B> ys)
    {
      Dafny.ISequence<_System._ITuple2<__A, __B>> _98___accumulator = Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<_System._ITuple2<__A, __B>>.Concat(Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements(), _98___accumulator);
      } else {
        _98___accumulator = Dafny.Sequence<_System._ITuple2<__A, __B>>.Concat(Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements(_System.Tuple2<__A, __B>.create(Std.Collections.Seq.__default.Last<__A>(xs), Std.Collections.Seq.__default.Last<__B>(ys))), _98___accumulator);
        Dafny.ISequence<__A> _in9 = Std.Collections.Seq.__default.DropLast<__A>(xs);
        Dafny.ISequence<__B> _in10 = Std.Collections.Seq.__default.DropLast<__B>(ys);
        xs = _in9;
        ys = _in10;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger Max(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)) == (BigInteger.One)) {
        return (xs).Select(BigInteger.Zero);
      } else {
        return Std.Math.__default.Max((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.Max((xs).Drop(BigInteger.One)));
      }
    }
    public static BigInteger Min(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)) == (BigInteger.One)) {
        return (xs).Select(BigInteger.Zero);
      } else {
        return Std.Math.__default.Min((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.Min((xs).Drop(BigInteger.One)));
      }
    }
    public static Dafny.ISequence<__T> Flatten<__T>(Dafny.ISequence<Dafny.ISequence<__T>> xs) {
      Dafny.ISequence<__T> _99___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_99___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _99___accumulator = Dafny.Sequence<__T>.Concat(_99___accumulator, (xs).Select(BigInteger.Zero));
        Dafny.ISequence<Dafny.ISequence<__T>> _in11 = (xs).Drop(BigInteger.One);
        xs = _in11;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> FlattenReverse<__T>(Dafny.ISequence<Dafny.ISequence<__T>> xs) {
      Dafny.ISequence<__T> _100___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(Dafny.Sequence<__T>.FromElements(), _100___accumulator);
      } else {
        _100___accumulator = Dafny.Sequence<__T>.Concat(Std.Collections.Seq.__default.Last<Dafny.ISequence<__T>>(xs), _100___accumulator);
        Dafny.ISequence<Dafny.ISequence<__T>> _in12 = Std.Collections.Seq.__default.DropLast<Dafny.ISequence<__T>>(xs);
        xs = _in12;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Join<__T>(Dafny.ISequence<Dafny.ISequence<__T>> seqs, Dafny.ISequence<__T> separator)
    {
      Dafny.ISequence<__T> _101___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((seqs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_101___accumulator, Dafny.Sequence<__T>.FromElements());
      } else if ((new BigInteger((seqs).Count)) == (BigInteger.One)) {
        return Dafny.Sequence<__T>.Concat(_101___accumulator, (seqs).Select(BigInteger.Zero));
      } else {
        _101___accumulator = Dafny.Sequence<__T>.Concat(_101___accumulator, Dafny.Sequence<__T>.Concat((seqs).Select(BigInteger.Zero), separator));
        Dafny.ISequence<Dafny.ISequence<__T>> _in13 = (seqs).Drop(BigInteger.One);
        Dafny.ISequence<__T> _in14 = separator;
        seqs = _in13;
        separator = _in14;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.ISequence<__T>> Split<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Dafny.ISequence<Dafny.ISequence<__T>> _102___accumulator = Dafny.Sequence<Dafny.ISequence<__T>>.FromElements();
    TAIL_CALL_START: ;
      Std.Wrappers._IOption<BigInteger> _103_i = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      if ((_103_i).is_Some) {
        _102___accumulator = Dafny.Sequence<Dafny.ISequence<__T>>.Concat(_102___accumulator, Dafny.Sequence<Dafny.ISequence<__T>>.FromElements((s).Take((_103_i).dtor_value)));
        Dafny.ISequence<__T> _in15 = (s).Drop(((_103_i).dtor_value) + (BigInteger.One));
        __T _in16 = delim;
        s = _in15;
        delim = _in16;
        goto TAIL_CALL_START;
      } else {
        return Dafny.Sequence<Dafny.ISequence<__T>>.Concat(_102___accumulator, Dafny.Sequence<Dafny.ISequence<__T>>.FromElements(s));
      }
    }
    public static _System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>> SplitOnce<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Std.Wrappers._IOption<BigInteger> _104_i = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      return _System.Tuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>.create((s).Take((_104_i).dtor_value), (s).Drop(((_104_i).dtor_value) + (BigInteger.One)));
    }
    public static Std.Wrappers._IOption<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>> SplitOnceOption<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Std.Wrappers._IOption<BigInteger> _105_valueOrError0 = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      if ((_105_valueOrError0).IsFailure()) {
        return (_105_valueOrError0).PropagateFailure<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>>();
      } else {
        BigInteger _106_i = (_105_valueOrError0).Extract();
        return Std.Wrappers.Option<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>>.create_Some(_System.Tuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>.create((s).Take(_106_i), (s).Drop((_106_i) + (BigInteger.One))));
      }
    }
    public static Dafny.ISequence<__R> Map<__T, __R>(Func<__T, __R> f, Dafny.ISequence<__T> xs)
    {
      Dafny.ISequence<__R> _107___accumulator = Dafny.Sequence<__R>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__R>.Concat(_107___accumulator, Dafny.Sequence<__R>.FromElements());
      } else {
        _107___accumulator = Dafny.Sequence<__R>.Concat(_107___accumulator, Dafny.Sequence<__R>.FromElements(Dafny.Helpers.Id<Func<__T, __R>>(f)((xs).Select(BigInteger.Zero))));
        Func<__T, __R> _in17 = f;
        Dafny.ISequence<__T> _in18 = (xs).Drop(BigInteger.One);
        f = _in17;
        xs = _in18;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IResult<Dafny.ISequence<__R>, __E> MapWithResult<__T, __R, __E>(Func<__T, Std.Wrappers._IResult<__R, __E>> f, Dafny.ISequence<__T> xs)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Result<Dafny.ISequence<__R>, __E>.create_Success(Dafny.Sequence<__R>.FromElements());
      } else {
        Std.Wrappers._IResult<__R, __E> _108_valueOrError0 = Dafny.Helpers.Id<Func<__T, Std.Wrappers._IResult<__R, __E>>>(f)((xs).Select(BigInteger.Zero));
        if ((_108_valueOrError0).IsFailure()) {
          return (_108_valueOrError0).PropagateFailure<Dafny.ISequence<__R>>();
        } else {
          __R _109_head = (_108_valueOrError0).Extract();
          Std.Wrappers._IResult<Dafny.ISequence<__R>, __E> _110_valueOrError1 = Std.Collections.Seq.__default.MapWithResult<__T, __R, __E>(f, (xs).Drop(BigInteger.One));
          if ((_110_valueOrError1).IsFailure()) {
            return (_110_valueOrError1).PropagateFailure<Dafny.ISequence<__R>>();
          } else {
            Dafny.ISequence<__R> _111_tail = (_110_valueOrError1).Extract();
            return Std.Wrappers.Result<Dafny.ISequence<__R>, __E>.create_Success(Dafny.Sequence<__R>.Concat(Dafny.Sequence<__R>.FromElements(_109_head), _111_tail));
          }
        }
      }
    }
    public static Dafny.ISequence<__T> Filter<__T>(Func<__T, bool> f, Dafny.ISequence<__T> xs)
    {
      Dafny.ISequence<__T> _112___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_112___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _112___accumulator = Dafny.Sequence<__T>.Concat(_112___accumulator, ((Dafny.Helpers.Id<Func<__T, bool>>(f)((xs).Select(BigInteger.Zero))) ? (Dafny.Sequence<__T>.FromElements((xs).Select(BigInteger.Zero))) : (Dafny.Sequence<__T>.FromElements())));
        Func<__T, bool> _in19 = f;
        Dafny.ISequence<__T> _in20 = (xs).Drop(BigInteger.One);
        f = _in19;
        xs = _in20;
        goto TAIL_CALL_START;
      }
    }
    public static __A FoldLeft<__A, __T>(Func<__A, __T, __A> f, __A init, Dafny.ISequence<__T> xs)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return init;
      } else {
        Func<__A, __T, __A> _in21 = f;
        __A _in22 = Dafny.Helpers.Id<Func<__A, __T, __A>>(f)(init, (xs).Select(BigInteger.Zero));
        Dafny.ISequence<__T> _in23 = (xs).Drop(BigInteger.One);
        f = _in21;
        init = _in22;
        xs = _in23;
        goto TAIL_CALL_START;
      }
    }
    public static __A FoldRight<__A, __T>(Func<__T, __A, __A> f, Dafny.ISequence<__T> xs, __A init)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return init;
      } else {
        return Dafny.Helpers.Id<Func<__T, __A, __A>>(f)((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.FoldRight<__A, __T>(f, (xs).Drop(BigInteger.One), init));
      }
    }
    public static Dafny.ISequence<__T> SetToSeq<__T>(Dafny.ISet<__T> s)
    {
      Dafny.ISequence<__T> xs = Dafny.Sequence<__T>.Empty;
      xs = Dafny.Sequence<__T>.FromElements();
      Dafny.ISet<__T> _113_left;
      _113_left = s;
      while (!(_113_left).Equals(Dafny.Set<__T>.FromElements())) {
        __T _114_x;
        foreach (__T _assign_such_that_0 in (_113_left).Elements) {
          _114_x = (__T)_assign_such_that_0;
          if ((_113_left).Contains(_114_x)) {
            goto after__ASSIGN_SUCH_THAT_0;
          }
        }
        throw new System.Exception("assign-such-that search produced no value (line 7247)");
      after__ASSIGN_SUCH_THAT_0: ;
        _113_left = Dafny.Set<__T>.Difference(_113_left, Dafny.Set<__T>.FromElements(_114_x));
        xs = Dafny.Sequence<__T>.Concat(xs, Dafny.Sequence<__T>.FromElements(_114_x));
      }
      return xs;
    }
    public static Dafny.ISequence<__T> SetToSortedSeq<__T>(Dafny.ISet<__T> s, Func<__T, __T, bool> R)
    {
      Dafny.ISequence<__T> xs = Dafny.Sequence<__T>.Empty;
      Dafny.ISequence<__T> _out6;
      _out6 = Std.Collections.Seq.__default.SetToSeq<__T>(s);
      xs = _out6;
      xs = Std.Collections.Seq.__default.MergeSortBy<__T>(R, xs);
      return xs;
    }
    public static Dafny.ISequence<__T> MergeSortBy<__T>(Func<__T, __T, bool> lessThanOrEq, Dafny.ISequence<__T> a)
    {
      if ((new BigInteger((a).Count)) <= (BigInteger.One)) {
        return a;
      } else {
        BigInteger _115_splitIndex = Dafny.Helpers.EuclideanDivision(new BigInteger((a).Count), new BigInteger(2));
        Dafny.ISequence<__T> _116_left = (a).Take(_115_splitIndex);
        Dafny.ISequence<__T> _117_right = (a).Drop(_115_splitIndex);
        Dafny.ISequence<__T> _118_leftSorted = Std.Collections.Seq.__default.MergeSortBy<__T>(lessThanOrEq, _116_left);
        Dafny.ISequence<__T> _119_rightSorted = Std.Collections.Seq.__default.MergeSortBy<__T>(lessThanOrEq, _117_right);
        return Std.Collections.Seq.__default.MergeSortedWith<__T>(_118_leftSorted, _119_rightSorted, lessThanOrEq);
      }
    }
    public static Dafny.ISequence<__T> MergeSortedWith<__T>(Dafny.ISequence<__T> left, Dafny.ISequence<__T> right, Func<__T, __T, bool> lessThanOrEq)
    {
      Dafny.ISequence<__T> _120___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((left).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_120___accumulator, right);
      } else if ((new BigInteger((right).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_120___accumulator, left);
      } else if (Dafny.Helpers.Id<Func<__T, __T, bool>>(lessThanOrEq)((left).Select(BigInteger.Zero), (right).Select(BigInteger.Zero))) {
        _120___accumulator = Dafny.Sequence<__T>.Concat(_120___accumulator, Dafny.Sequence<__T>.FromElements((left).Select(BigInteger.Zero)));
        Dafny.ISequence<__T> _in24 = (left).Drop(BigInteger.One);
        Dafny.ISequence<__T> _in25 = right;
        Func<__T, __T, bool> _in26 = lessThanOrEq;
        left = _in24;
        right = _in25;
        lessThanOrEq = _in26;
        goto TAIL_CALL_START;
      } else {
        _120___accumulator = Dafny.Sequence<__T>.Concat(_120___accumulator, Dafny.Sequence<__T>.FromElements((right).Select(BigInteger.Zero)));
        Dafny.ISequence<__T> _in27 = left;
        Dafny.ISequence<__T> _in28 = (right).Drop(BigInteger.One);
        Func<__T, __T, bool> _in29 = lessThanOrEq;
        left = _in27;
        right = _in28;
        lessThanOrEq = _in29;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Collections.Seq
namespace Std.Arithmetic.GeneralInternals {

} // end of namespace Std.Arithmetic.GeneralInternals
namespace Std.Arithmetic.MulInternalsNonlinear {

} // end of namespace Std.Arithmetic.MulInternalsNonlinear
namespace Std.Arithmetic.MulInternals {

  public partial class __default {
    public static BigInteger MulPos(BigInteger x, BigInteger y)
    {
      BigInteger _149___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((x).Sign == 0) {
        return (BigInteger.Zero) + (_149___accumulator);
      } else {
        _149___accumulator = (_149___accumulator) + (y);
        BigInteger _in32 = (x) - (BigInteger.One);
        BigInteger _in33 = y;
        x = _in32;
        y = _in33;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger MulRecursive(BigInteger x, BigInteger y)
    {
      if ((x).Sign != -1) {
        return Std.Arithmetic.MulInternals.__default.MulPos(x, y);
      } else {
        return (new BigInteger(-1)) * (Std.Arithmetic.MulInternals.__default.MulPos((new BigInteger(-1)) * (x), y));
      }
    }
  }
} // end of namespace Std.Arithmetic.MulInternals
namespace Std.Arithmetic.Mul {

} // end of namespace Std.Arithmetic.Mul
namespace Std.Arithmetic.ModInternalsNonlinear {

} // end of namespace Std.Arithmetic.ModInternalsNonlinear
namespace Std.Arithmetic.DivInternalsNonlinear {

} // end of namespace Std.Arithmetic.DivInternalsNonlinear
namespace Std.Arithmetic.ModInternals {

  public partial class __default {
    public static BigInteger ModRecursive(BigInteger x, BigInteger d)
    {
    TAIL_CALL_START: ;
      if ((x).Sign == -1) {
        BigInteger _in34 = (d) + (x);
        BigInteger _in35 = d;
        x = _in34;
        d = _in35;
        goto TAIL_CALL_START;
      } else if ((x) < (d)) {
        return x;
      } else {
        BigInteger _in36 = (x) - (d);
        BigInteger _in37 = d;
        x = _in36;
        d = _in37;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.ModInternals
namespace Std.Arithmetic.DivInternals {

  public partial class __default {
    public static BigInteger DivPos(BigInteger x, BigInteger d)
    {
      BigInteger _150___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((x).Sign == -1) {
        _150___accumulator = (_150___accumulator) + (new BigInteger(-1));
        BigInteger _in38 = (x) + (d);
        BigInteger _in39 = d;
        x = _in38;
        d = _in39;
        goto TAIL_CALL_START;
      } else if ((x) < (d)) {
        return (BigInteger.Zero) + (_150___accumulator);
      } else {
        _150___accumulator = (_150___accumulator) + (BigInteger.One);
        BigInteger _in40 = (x) - (d);
        BigInteger _in41 = d;
        x = _in40;
        d = _in41;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger DivRecursive(BigInteger x, BigInteger d)
    {
      if ((d).Sign == 1) {
        return Std.Arithmetic.DivInternals.__default.DivPos(x, d);
      } else {
        return (new BigInteger(-1)) * (Std.Arithmetic.DivInternals.__default.DivPos(x, (new BigInteger(-1)) * (d)));
      }
    }
  }
} // end of namespace Std.Arithmetic.DivInternals
namespace Std.Arithmetic.DivMod {

  public partial class __default {
    public static bool MultiplesVanish(BigInteger a, BigInteger b, BigInteger m)
    {
      return (Dafny.Helpers.EuclideanModulus(((m) * (a)) + (b), m)) == (Dafny.Helpers.EuclideanModulus(b, m));
    }
  }
} // end of namespace Std.Arithmetic.DivMod
namespace Std.Arithmetic.Power {

  public partial class __default {
    public static BigInteger Pow(BigInteger b, BigInteger e)
    {
      BigInteger _151___accumulator = BigInteger.One;
    TAIL_CALL_START: ;
      if ((e).Sign == 0) {
        return (BigInteger.One) * (_151___accumulator);
      } else {
        _151___accumulator = (_151___accumulator) * (b);
        BigInteger _in42 = b;
        BigInteger _in43 = (e) - (BigInteger.One);
        b = _in42;
        e = _in43;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.Power
namespace Std.Arithmetic.Logarithm {

  public partial class __default {
    public static BigInteger Log(BigInteger @base, BigInteger pow)
    {
      BigInteger _152___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((pow) < (@base)) {
        return (BigInteger.Zero) + (_152___accumulator);
      } else {
        _152___accumulator = (_152___accumulator) + (BigInteger.One);
        BigInteger _in44 = @base;
        BigInteger _in45 = Dafny.Helpers.EuclideanDivision(pow, @base);
        @base = _in44;
        pow = _in45;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.Logarithm
namespace Std.Arithmetic.Power2 {

  public partial class __default {
    public static BigInteger Pow2(BigInteger e) {
      return Std.Arithmetic.Power.__default.Pow(new BigInteger(2), e);
    }
  }
} // end of namespace Std.Arithmetic.Power2
namespace Std.Arithmetic {

} // end of namespace Std.Arithmetic
namespace Std.Strings.HexConversion {

  public partial class __default {
    public static BigInteger BASE() {
      return Std.Strings.HexConversion.__default.@base;
    }
    public static bool IsDigitChar(Dafny.Rune c) {
      return (Std.Strings.HexConversion.__default.charToDigit).Contains(c);
    }
    public static Dafny.ISequence<Dafny.Rune> OfDigits(Dafny.ISequence<BigInteger> digits) {
      Dafny.ISequence<Dafny.Rune> _153___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((digits).Equals(Dafny.Sequence<BigInteger>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(), _153___accumulator);
      } else {
        _153___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.HexConversion.__default.chars).Select((digits).Select(BigInteger.Zero))), _153___accumulator);
        Dafny.ISequence<BigInteger> _in46 = (digits).Drop(BigInteger.One);
        digits = _in46;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      if ((n).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.HexConversion.__default.chars).Select(BigInteger.Zero));
      } else {
        return Std.Strings.HexConversion.__default.OfDigits(Std.Strings.HexConversion.__default.FromNat(n));
      }
    }
    public static bool IsNumberStr(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      return !(!(str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) || (((((str).Select(BigInteger.Zero)) == (minus)) || ((Std.Strings.HexConversion.__default.charToDigit).Contains((str).Select(BigInteger.Zero)))) && (Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, bool>>((_154_str) => Dafny.Helpers.Quantifier<Dafny.Rune>(((_154_str).Drop(BigInteger.One)).UniqueElements, true, (((_forall_var_1) => {
        Dafny.Rune _155_c = (Dafny.Rune)_forall_var_1;
        return !(((_154_str).Drop(BigInteger.One)).Contains(_155_c)) || (Std.Strings.HexConversion.__default.IsDigitChar(_155_c));
      }))))(str)));
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n, Dafny.Rune minus)
    {
      if ((n).Sign != -1) {
        return Std.Strings.HexConversion.__default.OfNat(n);
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(minus), Std.Strings.HexConversion.__default.OfNat((BigInteger.Zero) - (n)));
      }
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return BigInteger.Zero;
      } else {
        Dafny.Rune _156_c = (str).Select((new BigInteger((str).Count)) - (BigInteger.One));
        return ((Std.Strings.HexConversion.__default.ToNat((str).Take((new BigInteger((str).Count)) - (BigInteger.One)))) * (Std.Strings.HexConversion.__default.@base)) + (Dafny.Map<Dafny.Rune, BigInteger>.Select(Std.Strings.HexConversion.__default.charToDigit,_156_c));
      }
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      if (Dafny.Sequence<Dafny.Rune>.IsPrefixOf(Dafny.Sequence<Dafny.Rune>.FromElements(minus), str)) {
        return (BigInteger.Zero) - (Std.Strings.HexConversion.__default.ToNat((str).Drop(BigInteger.One)));
      } else {
        return Std.Strings.HexConversion.__default.ToNat(str);
      }
    }
    public static BigInteger ToNatRight(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        return ((Std.Strings.HexConversion.__default.ToNatRight(Std.Collections.Seq.__default.DropFirst<BigInteger>(xs))) * (Std.Strings.HexConversion.__default.BASE())) + (Std.Collections.Seq.__default.First<BigInteger>(xs));
      }
    }
    public static BigInteger ToNatLeft(Dafny.ISequence<BigInteger> xs) {
      BigInteger _157___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return (BigInteger.Zero) + (_157___accumulator);
      } else {
        _157___accumulator = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) * (Std.Arithmetic.Power.__default.Pow(Std.Strings.HexConversion.__default.BASE(), (new BigInteger((xs).Count)) - (BigInteger.One)))) + (_157___accumulator);
        Dafny.ISequence<BigInteger> _in47 = Std.Collections.Seq.__default.DropLast<BigInteger>(xs);
        xs = _in47;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> FromNat(BigInteger n) {
      Dafny.ISequence<BigInteger> _158___accumulator = Dafny.Sequence<BigInteger>.FromElements();
    TAIL_CALL_START: ;
      if ((n).Sign == 0) {
        return Dafny.Sequence<BigInteger>.Concat(_158___accumulator, Dafny.Sequence<BigInteger>.FromElements());
      } else {
        _158___accumulator = Dafny.Sequence<BigInteger>.Concat(_158___accumulator, Dafny.Sequence<BigInteger>.FromElements(Dafny.Helpers.EuclideanModulus(n, Std.Strings.HexConversion.__default.BASE())));
        BigInteger _in48 = Dafny.Helpers.EuclideanDivision(n, Std.Strings.HexConversion.__default.BASE());
        n = _in48;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtend(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)) >= (n)) {
        return xs;
      } else {
        Dafny.ISequence<BigInteger> _in49 = Dafny.Sequence<BigInteger>.Concat(xs, Dafny.Sequence<BigInteger>.FromElements(BigInteger.Zero));
        BigInteger _in50 = n;
        xs = _in49;
        n = _in50;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtendMultiple(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
      BigInteger _159_newLen = ((new BigInteger((xs).Count)) + (n)) - (Dafny.Helpers.EuclideanModulus(new BigInteger((xs).Count), n));
      return Std.Strings.HexConversion.__default.SeqExtend(xs, _159_newLen);
    }
    public static Dafny.ISequence<BigInteger> FromNatWithLen(BigInteger n, BigInteger len)
    {
      return Std.Strings.HexConversion.__default.SeqExtend(Std.Strings.HexConversion.__default.FromNat(n), len);
    }
    public static Dafny.ISequence<BigInteger> SeqZero(BigInteger len) {
      Dafny.ISequence<BigInteger> _160_xs = Std.Strings.HexConversion.__default.FromNatWithLen(BigInteger.Zero, len);
      return _160_xs;
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqAdd(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs1 = Std.Strings.HexConversion.__default.SeqAdd(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _161_zs_k = _let_tmp_rhs1.dtor__0;
        BigInteger _162_cin = _let_tmp_rhs1.dtor__1;
        BigInteger _163_sum = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) + (Std.Collections.Seq.__default.Last<BigInteger>(ys))) + (_162_cin);
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs2 = (((_163_sum) < (Std.Strings.HexConversion.__default.BASE())) ? (_System.Tuple2<BigInteger, BigInteger>.create(_163_sum, BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((_163_sum) - (Std.Strings.HexConversion.__default.BASE()), BigInteger.One)));
        BigInteger _164_sum__out = _let_tmp_rhs2.dtor__0;
        BigInteger _165_cout = _let_tmp_rhs2.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_161_zs_k, Dafny.Sequence<BigInteger>.FromElements(_164_sum__out)), _165_cout);
      }
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqSub(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs3 = Std.Strings.HexConversion.__default.SeqSub(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _166_zs = _let_tmp_rhs3.dtor__0;
        BigInteger _167_cin = _let_tmp_rhs3.dtor__1;
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs4 = (((Std.Collections.Seq.__default.Last<BigInteger>(xs)) >= ((Std.Collections.Seq.__default.Last<BigInteger>(ys)) + (_167_cin))) ? (_System.Tuple2<BigInteger, BigInteger>.create(((Std.Collections.Seq.__default.Last<BigInteger>(xs)) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_167_cin), BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((((Std.Strings.HexConversion.__default.BASE()) + (Std.Collections.Seq.__default.Last<BigInteger>(xs))) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_167_cin), BigInteger.One)));
        BigInteger _168_diff__out = _let_tmp_rhs4.dtor__0;
        BigInteger _169_cout = _let_tmp_rhs4.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_166_zs, Dafny.Sequence<BigInteger>.FromElements(_168_diff__out)), _169_cout);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> HEX__DIGITS { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789ABCDEF");
    } }
    public static Dafny.ISequence<Dafny.Rune> chars { get {
      return Std.Strings.HexConversion.__default.HEX__DIGITS;
    } }
    public static BigInteger @base { get {
      return new BigInteger((Std.Strings.HexConversion.__default.chars).Count);
    } }
    public static Dafny.IMap<Dafny.Rune,BigInteger> charToDigit { get {
      return Dafny.Map<Dafny.Rune, BigInteger>.FromElements(new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('0'), BigInteger.Zero), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('1'), BigInteger.One), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('2'), new BigInteger(2)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('3'), new BigInteger(3)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('4'), new BigInteger(4)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('5'), new BigInteger(5)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('6'), new BigInteger(6)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('7'), new BigInteger(7)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('8'), new BigInteger(8)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('9'), new BigInteger(9)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('a'), new BigInteger(10)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('b'), new BigInteger(11)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('c'), new BigInteger(12)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('d'), new BigInteger(13)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('e'), new BigInteger(14)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('f'), new BigInteger(15)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('A'), new BigInteger(10)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('B'), new BigInteger(11)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('C'), new BigInteger(12)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('D'), new BigInteger(13)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('E'), new BigInteger(14)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('F'), new BigInteger(15)));
    } }
  }

  public partial class CharSeq {
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(Dafny.ISequence<Dafny.Rune> __source) {
      Dafny.ISequence<Dafny.Rune> _170_chars = __source;
      return (new BigInteger((_170_chars).Count)) > (BigInteger.One);
    }
  }

  public partial class digit {
    private static readonly Dafny.TypeDescriptor<BigInteger> _TYPE = new Dafny.TypeDescriptor<BigInteger>(BigInteger.Zero);
    public static Dafny.TypeDescriptor<BigInteger> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(BigInteger __source) {
      BigInteger _171_i = __source;
      if (_System.nat._Is(_171_i)) {
        return ((_171_i).Sign != -1) && ((_171_i) < (Std.Strings.HexConversion.__default.BASE()));
      }
      return false;
    }
  }
} // end of namespace Std.Strings.HexConversion
namespace Std.Strings.DecimalConversion {

  public partial class __default {
    public static BigInteger BASE() {
      return Std.Strings.DecimalConversion.__default.@base;
    }
    public static bool IsDigitChar(Dafny.Rune c) {
      return (Std.Strings.DecimalConversion.__default.charToDigit).Contains(c);
    }
    public static Dafny.ISequence<Dafny.Rune> OfDigits(Dafny.ISequence<BigInteger> digits) {
      Dafny.ISequence<Dafny.Rune> _172___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((digits).Equals(Dafny.Sequence<BigInteger>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(), _172___accumulator);
      } else {
        _172___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.DecimalConversion.__default.chars).Select((digits).Select(BigInteger.Zero))), _172___accumulator);
        Dafny.ISequence<BigInteger> _in51 = (digits).Drop(BigInteger.One);
        digits = _in51;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      if ((n).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.DecimalConversion.__default.chars).Select(BigInteger.Zero));
      } else {
        return Std.Strings.DecimalConversion.__default.OfDigits(Std.Strings.DecimalConversion.__default.FromNat(n));
      }
    }
    public static bool IsNumberStr(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      return !(!(str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) || (((((str).Select(BigInteger.Zero)) == (minus)) || ((Std.Strings.DecimalConversion.__default.charToDigit).Contains((str).Select(BigInteger.Zero)))) && (Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, bool>>((_173_str) => Dafny.Helpers.Quantifier<Dafny.Rune>(((_173_str).Drop(BigInteger.One)).UniqueElements, true, (((_forall_var_2) => {
        Dafny.Rune _174_c = (Dafny.Rune)_forall_var_2;
        return !(((_173_str).Drop(BigInteger.One)).Contains(_174_c)) || (Std.Strings.DecimalConversion.__default.IsDigitChar(_174_c));
      }))))(str)));
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n, Dafny.Rune minus)
    {
      if ((n).Sign != -1) {
        return Std.Strings.DecimalConversion.__default.OfNat(n);
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(minus), Std.Strings.DecimalConversion.__default.OfNat((BigInteger.Zero) - (n)));
      }
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return BigInteger.Zero;
      } else {
        Dafny.Rune _175_c = (str).Select((new BigInteger((str).Count)) - (BigInteger.One));
        return ((Std.Strings.DecimalConversion.__default.ToNat((str).Take((new BigInteger((str).Count)) - (BigInteger.One)))) * (Std.Strings.DecimalConversion.__default.@base)) + (Dafny.Map<Dafny.Rune, BigInteger>.Select(Std.Strings.DecimalConversion.__default.charToDigit,_175_c));
      }
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      if (Dafny.Sequence<Dafny.Rune>.IsPrefixOf(Dafny.Sequence<Dafny.Rune>.FromElements(minus), str)) {
        return (BigInteger.Zero) - (Std.Strings.DecimalConversion.__default.ToNat((str).Drop(BigInteger.One)));
      } else {
        return Std.Strings.DecimalConversion.__default.ToNat(str);
      }
    }
    public static BigInteger ToNatRight(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        return ((Std.Strings.DecimalConversion.__default.ToNatRight(Std.Collections.Seq.__default.DropFirst<BigInteger>(xs))) * (Std.Strings.DecimalConversion.__default.BASE())) + (Std.Collections.Seq.__default.First<BigInteger>(xs));
      }
    }
    public static BigInteger ToNatLeft(Dafny.ISequence<BigInteger> xs) {
      BigInteger _176___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return (BigInteger.Zero) + (_176___accumulator);
      } else {
        _176___accumulator = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) * (Std.Arithmetic.Power.__default.Pow(Std.Strings.DecimalConversion.__default.BASE(), (new BigInteger((xs).Count)) - (BigInteger.One)))) + (_176___accumulator);
        Dafny.ISequence<BigInteger> _in52 = Std.Collections.Seq.__default.DropLast<BigInteger>(xs);
        xs = _in52;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> FromNat(BigInteger n) {
      Dafny.ISequence<BigInteger> _177___accumulator = Dafny.Sequence<BigInteger>.FromElements();
    TAIL_CALL_START: ;
      if ((n).Sign == 0) {
        return Dafny.Sequence<BigInteger>.Concat(_177___accumulator, Dafny.Sequence<BigInteger>.FromElements());
      } else {
        _177___accumulator = Dafny.Sequence<BigInteger>.Concat(_177___accumulator, Dafny.Sequence<BigInteger>.FromElements(Dafny.Helpers.EuclideanModulus(n, Std.Strings.DecimalConversion.__default.BASE())));
        BigInteger _in53 = Dafny.Helpers.EuclideanDivision(n, Std.Strings.DecimalConversion.__default.BASE());
        n = _in53;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtend(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)) >= (n)) {
        return xs;
      } else {
        Dafny.ISequence<BigInteger> _in54 = Dafny.Sequence<BigInteger>.Concat(xs, Dafny.Sequence<BigInteger>.FromElements(BigInteger.Zero));
        BigInteger _in55 = n;
        xs = _in54;
        n = _in55;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtendMultiple(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
      BigInteger _178_newLen = ((new BigInteger((xs).Count)) + (n)) - (Dafny.Helpers.EuclideanModulus(new BigInteger((xs).Count), n));
      return Std.Strings.DecimalConversion.__default.SeqExtend(xs, _178_newLen);
    }
    public static Dafny.ISequence<BigInteger> FromNatWithLen(BigInteger n, BigInteger len)
    {
      return Std.Strings.DecimalConversion.__default.SeqExtend(Std.Strings.DecimalConversion.__default.FromNat(n), len);
    }
    public static Dafny.ISequence<BigInteger> SeqZero(BigInteger len) {
      Dafny.ISequence<BigInteger> _179_xs = Std.Strings.DecimalConversion.__default.FromNatWithLen(BigInteger.Zero, len);
      return _179_xs;
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqAdd(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs5 = Std.Strings.DecimalConversion.__default.SeqAdd(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _180_zs_k = _let_tmp_rhs5.dtor__0;
        BigInteger _181_cin = _let_tmp_rhs5.dtor__1;
        BigInteger _182_sum = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) + (Std.Collections.Seq.__default.Last<BigInteger>(ys))) + (_181_cin);
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs6 = (((_182_sum) < (Std.Strings.DecimalConversion.__default.BASE())) ? (_System.Tuple2<BigInteger, BigInteger>.create(_182_sum, BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((_182_sum) - (Std.Strings.DecimalConversion.__default.BASE()), BigInteger.One)));
        BigInteger _183_sum__out = _let_tmp_rhs6.dtor__0;
        BigInteger _184_cout = _let_tmp_rhs6.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_180_zs_k, Dafny.Sequence<BigInteger>.FromElements(_183_sum__out)), _184_cout);
      }
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqSub(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs7 = Std.Strings.DecimalConversion.__default.SeqSub(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _185_zs = _let_tmp_rhs7.dtor__0;
        BigInteger _186_cin = _let_tmp_rhs7.dtor__1;
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs8 = (((Std.Collections.Seq.__default.Last<BigInteger>(xs)) >= ((Std.Collections.Seq.__default.Last<BigInteger>(ys)) + (_186_cin))) ? (_System.Tuple2<BigInteger, BigInteger>.create(((Std.Collections.Seq.__default.Last<BigInteger>(xs)) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_186_cin), BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((((Std.Strings.DecimalConversion.__default.BASE()) + (Std.Collections.Seq.__default.Last<BigInteger>(xs))) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_186_cin), BigInteger.One)));
        BigInteger _187_diff__out = _let_tmp_rhs8.dtor__0;
        BigInteger _188_cout = _let_tmp_rhs8.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_185_zs, Dafny.Sequence<BigInteger>.FromElements(_187_diff__out)), _188_cout);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> DIGITS { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789");
    } }
    public static Dafny.ISequence<Dafny.Rune> chars { get {
      return Std.Strings.DecimalConversion.__default.DIGITS;
    } }
    public static BigInteger @base { get {
      return new BigInteger((Std.Strings.DecimalConversion.__default.chars).Count);
    } }
    public static Dafny.IMap<Dafny.Rune,BigInteger> charToDigit { get {
      return Dafny.Map<Dafny.Rune, BigInteger>.FromElements(new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('0'), BigInteger.Zero), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('1'), BigInteger.One), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('2'), new BigInteger(2)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('3'), new BigInteger(3)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('4'), new BigInteger(4)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('5'), new BigInteger(5)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('6'), new BigInteger(6)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('7'), new BigInteger(7)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('8'), new BigInteger(8)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('9'), new BigInteger(9)));
    } }
  }

  public partial class CharSeq {
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(Dafny.ISequence<Dafny.Rune> __source) {
      Dafny.ISequence<Dafny.Rune> _189_chars = __source;
      return (new BigInteger((_189_chars).Count)) > (BigInteger.One);
    }
  }

  public partial class digit {
    private static readonly Dafny.TypeDescriptor<BigInteger> _TYPE = new Dafny.TypeDescriptor<BigInteger>(BigInteger.Zero);
    public static Dafny.TypeDescriptor<BigInteger> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(BigInteger __source) {
      BigInteger _190_i = __source;
      if (_System.nat._Is(_190_i)) {
        return ((_190_i).Sign != -1) && ((_190_i) < (Std.Strings.DecimalConversion.__default.BASE()));
      }
      return false;
    }
  }
} // end of namespace Std.Strings.DecimalConversion
namespace Std.Strings.CharStrEscaping {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> Escape(Dafny.ISequence<Dafny.Rune> str, Dafny.ISet<Dafny.Rune> mustEscape, Dafny.Rune escape)
    {
      Dafny.ISequence<Dafny.Rune> _191___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, str);
      } else if ((mustEscape).Contains((str).Select(BigInteger.Zero))) {
        _191___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements(escape, (str).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in56 = (str).Drop(BigInteger.One);
        Dafny.ISet<Dafny.Rune> _in57 = mustEscape;
        Dafny.Rune _in58 = escape;
        str = _in56;
        mustEscape = _in57;
        escape = _in58;
        goto TAIL_CALL_START;
      } else {
        _191___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in59 = (str).Drop(BigInteger.One);
        Dafny.ISet<Dafny.Rune> _in60 = mustEscape;
        Dafny.Rune _in61 = escape;
        str = _in59;
        mustEscape = _in60;
        escape = _in61;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> Unescape(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune escape)
    {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(str);
      } else if (((str).Select(BigInteger.Zero)) == (escape)) {
        if ((new BigInteger((str).Count)) > (BigInteger.One)) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _192_valueOrError0 = Std.Strings.CharStrEscaping.__default.Unescape((str).Drop(new BigInteger(2)), escape);
          if ((_192_valueOrError0).IsFailure()) {
            return (_192_valueOrError0).PropagateFailure<Dafny.ISequence<Dafny.Rune>>();
          } else {
            Dafny.ISequence<Dafny.Rune> _193_tl = (_192_valueOrError0).Extract();
            return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.One)), _193_tl));
          }
        } else {
          return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
        }
      } else {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _194_valueOrError1 = Std.Strings.CharStrEscaping.__default.Unescape((str).Drop(BigInteger.One), escape);
        if ((_194_valueOrError1).IsFailure()) {
          return (_194_valueOrError1).PropagateFailure<Dafny.ISequence<Dafny.Rune>>();
        } else {
          Dafny.ISequence<Dafny.Rune> _195_tl = (_194_valueOrError1).Extract();
          return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.Zero)), _195_tl));
        }
      }
    }
  }
} // end of namespace Std.Strings.CharStrEscaping
namespace Std.Strings {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      return Std.Strings.DecimalConversion.__default.OfNat(n);
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n) {
      return Std.Strings.DecimalConversion.__default.OfInt(n, new Dafny.Rune('-'));
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.DecimalConversion.__default.ToNat(str);
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.DecimalConversion.__default.ToInt(str, new Dafny.Rune('-'));
    }
    public static Dafny.ISequence<Dafny.Rune> EscapeQuotes(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.CharStrEscaping.__default.Escape(str, Dafny.Set<Dafny.Rune>.FromElements(new Dafny.Rune('\"'), new Dafny.Rune('\'')), new Dafny.Rune('\\'));
    }
    public static Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> UnescapeQuotes(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.CharStrEscaping.__default.Unescape(str, new Dafny.Rune('\\'));
    }
    public static Dafny.ISequence<Dafny.Rune> OfBool(bool b) {
      if (b) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false");
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfChar(Dafny.Rune c) {
      return Dafny.Sequence<Dafny.Rune>.FromElements(c);
    }
  }
} // end of namespace Std.Strings

namespace DAST.Format {


  public interface _IUnOpFormat {
    bool is_NoFormat { get; }
    bool is_CombineNotInner { get; }
    _IUnOpFormat DowncastClone();
  }
  public abstract class UnOpFormat : _IUnOpFormat {
    public UnOpFormat() {
    }
    private static readonly DAST.Format._IUnOpFormat theDefault = create_NoFormat();
    public static DAST.Format._IUnOpFormat Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST.Format._IUnOpFormat> _TYPE = new Dafny.TypeDescriptor<DAST.Format._IUnOpFormat>(DAST.Format.UnOpFormat.Default());
    public static Dafny.TypeDescriptor<DAST.Format._IUnOpFormat> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnOpFormat create_NoFormat() {
      return new UnOpFormat_NoFormat();
    }
    public static _IUnOpFormat create_CombineNotInner() {
      return new UnOpFormat_CombineNotInner();
    }
    public bool is_NoFormat { get { return this is UnOpFormat_NoFormat; } }
    public bool is_CombineNotInner { get { return this is UnOpFormat_CombineNotInner; } }
    public static System.Collections.Generic.IEnumerable<_IUnOpFormat> AllSingletonConstructors {
      get {
        yield return UnOpFormat.create_NoFormat();
        yield return UnOpFormat.create_CombineNotInner();
      }
    }
    public abstract _IUnOpFormat DowncastClone();
  }
  public class UnOpFormat_NoFormat : UnOpFormat {
    public UnOpFormat_NoFormat() : base() {
    }
    public override _IUnOpFormat DowncastClone() {
      if (this is _IUnOpFormat dt) { return dt; }
      return new UnOpFormat_NoFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.UnOpFormat_NoFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.UnOpFormat.NoFormat";
      return s;
    }
  }
  public class UnOpFormat_CombineNotInner : UnOpFormat {
    public UnOpFormat_CombineNotInner() : base() {
    }
    public override _IUnOpFormat DowncastClone() {
      if (this is _IUnOpFormat dt) { return dt; }
      return new UnOpFormat_CombineNotInner();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.UnOpFormat_CombineNotInner;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.UnOpFormat.CombineNotInner";
      return s;
    }
  }

  public interface _IBinOpFormat {
    bool is_NoFormat { get; }
    bool is_ImpliesFormat { get; }
    bool is_Equivalence { get; }
    bool is_ReverseOperands { get; }
    _IBinOpFormat DowncastClone();
  }
  public abstract class BinOpFormat : _IBinOpFormat {
    public BinOpFormat() {
    }
    private static readonly DAST.Format._IBinOpFormat theDefault = create_NoFormat();
    public static DAST.Format._IBinOpFormat Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST.Format._IBinOpFormat> _TYPE = new Dafny.TypeDescriptor<DAST.Format._IBinOpFormat>(DAST.Format.BinOpFormat.Default());
    public static Dafny.TypeDescriptor<DAST.Format._IBinOpFormat> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IBinOpFormat create_NoFormat() {
      return new BinOpFormat_NoFormat();
    }
    public static _IBinOpFormat create_ImpliesFormat() {
      return new BinOpFormat_ImpliesFormat();
    }
    public static _IBinOpFormat create_Equivalence() {
      return new BinOpFormat_Equivalence();
    }
    public static _IBinOpFormat create_ReverseOperands() {
      return new BinOpFormat_ReverseOperands();
    }
    public bool is_NoFormat { get { return this is BinOpFormat_NoFormat; } }
    public bool is_ImpliesFormat { get { return this is BinOpFormat_ImpliesFormat; } }
    public bool is_Equivalence { get { return this is BinOpFormat_Equivalence; } }
    public bool is_ReverseOperands { get { return this is BinOpFormat_ReverseOperands; } }
    public static System.Collections.Generic.IEnumerable<_IBinOpFormat> AllSingletonConstructors {
      get {
        yield return BinOpFormat.create_NoFormat();
        yield return BinOpFormat.create_ImpliesFormat();
        yield return BinOpFormat.create_Equivalence();
        yield return BinOpFormat.create_ReverseOperands();
      }
    }
    public abstract _IBinOpFormat DowncastClone();
  }
  public class BinOpFormat_NoFormat : BinOpFormat {
    public BinOpFormat_NoFormat() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_NoFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_NoFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.NoFormat";
      return s;
    }
  }
  public class BinOpFormat_ImpliesFormat : BinOpFormat {
    public BinOpFormat_ImpliesFormat() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_ImpliesFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_ImpliesFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.ImpliesFormat";
      return s;
    }
  }
  public class BinOpFormat_Equivalence : BinOpFormat {
    public BinOpFormat_Equivalence() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_Equivalence();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_Equivalence;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.Equivalence";
      return s;
    }
  }
  public class BinOpFormat_ReverseOperands : BinOpFormat {
    public BinOpFormat_ReverseOperands() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_ReverseOperands();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_ReverseOperands;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.ReverseOperands";
      return s;
    }
  }
} // end of namespace DAST.Format
namespace DAST {


  public interface _IModule {
    bool is_Module { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    bool dtor_isExtern { get; }
    Dafny.ISequence<DAST._IModuleItem> dtor_body { get; }
    _IModule DowncastClone();
  }
  public class Module : _IModule {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly bool _isExtern;
    public readonly Dafny.ISequence<DAST._IModuleItem> _body;
    public Module(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      this._name = name;
      this._isExtern = isExtern;
      this._body = body;
    }
    public _IModule DowncastClone() {
      if (this is _IModule dt) { return dt; }
      return new Module(_name, _isExtern, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Module;
      return oth != null && object.Equals(this._name, oth._name) && this._isExtern == oth._isExtern && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isExtern));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Module.Module";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isExtern);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly DAST._IModule theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, false, Dafny.Sequence<DAST._IModuleItem>.Empty);
    public static DAST._IModule Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IModule> _TYPE = new Dafny.TypeDescriptor<DAST._IModule>(DAST.Module.Default());
    public static Dafny.TypeDescriptor<DAST._IModule> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModule create(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      return new Module(name, isExtern, body);
    }
    public static _IModule create_Module(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      return create(name, isExtern, body);
    }
    public bool is_Module { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public bool dtor_isExtern {
      get {
        return this._isExtern;
      }
    }
    public Dafny.ISequence<DAST._IModuleItem> dtor_body {
      get {
        return this._body;
      }
    }
  }

  public interface _IModuleItem {
    bool is_Module { get; }
    bool is_Class { get; }
    bool is_Trait { get; }
    bool is_Newtype { get; }
    bool is_Datatype { get; }
    DAST._IModule dtor_Module_a0 { get; }
    DAST._IClass dtor_Class_a0 { get; }
    DAST._ITrait dtor_Trait_a0 { get; }
    DAST._INewtype dtor_Newtype_a0 { get; }
    DAST._IDatatype dtor_Datatype_a0 { get; }
    _IModuleItem DowncastClone();
  }
  public abstract class ModuleItem : _IModuleItem {
    public ModuleItem() {
    }
    private static readonly DAST._IModuleItem theDefault = create_Module(DAST.Module.Default());
    public static DAST._IModuleItem Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IModuleItem> _TYPE = new Dafny.TypeDescriptor<DAST._IModuleItem>(DAST.ModuleItem.Default());
    public static Dafny.TypeDescriptor<DAST._IModuleItem> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModuleItem create_Module(DAST._IModule _a0) {
      return new ModuleItem_Module(_a0);
    }
    public static _IModuleItem create_Class(DAST._IClass _a0) {
      return new ModuleItem_Class(_a0);
    }
    public static _IModuleItem create_Trait(DAST._ITrait _a0) {
      return new ModuleItem_Trait(_a0);
    }
    public static _IModuleItem create_Newtype(DAST._INewtype _a0) {
      return new ModuleItem_Newtype(_a0);
    }
    public static _IModuleItem create_Datatype(DAST._IDatatype _a0) {
      return new ModuleItem_Datatype(_a0);
    }
    public bool is_Module { get { return this is ModuleItem_Module; } }
    public bool is_Class { get { return this is ModuleItem_Class; } }
    public bool is_Trait { get { return this is ModuleItem_Trait; } }
    public bool is_Newtype { get { return this is ModuleItem_Newtype; } }
    public bool is_Datatype { get { return this is ModuleItem_Datatype; } }
    public DAST._IModule dtor_Module_a0 {
      get {
        var d = this;
        return ((ModuleItem_Module)d)._a0;
      }
    }
    public DAST._IClass dtor_Class_a0 {
      get {
        var d = this;
        return ((ModuleItem_Class)d)._a0;
      }
    }
    public DAST._ITrait dtor_Trait_a0 {
      get {
        var d = this;
        return ((ModuleItem_Trait)d)._a0;
      }
    }
    public DAST._INewtype dtor_Newtype_a0 {
      get {
        var d = this;
        return ((ModuleItem_Newtype)d)._a0;
      }
    }
    public DAST._IDatatype dtor_Datatype_a0 {
      get {
        var d = this;
        return ((ModuleItem_Datatype)d)._a0;
      }
    }
    public abstract _IModuleItem DowncastClone();
  }
  public class ModuleItem_Module : ModuleItem {
    public readonly DAST._IModule _a0;
    public ModuleItem_Module(DAST._IModule _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Module(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Module;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Module";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Class : ModuleItem {
    public readonly DAST._IClass _a0;
    public ModuleItem_Class(DAST._IClass _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Class(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Class;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Class";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Trait : ModuleItem {
    public readonly DAST._ITrait _a0;
    public ModuleItem_Trait(DAST._ITrait _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Trait(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Trait;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Newtype : ModuleItem {
    public readonly DAST._INewtype _a0;
    public ModuleItem_Newtype(DAST._INewtype _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Newtype(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Newtype;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Newtype";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Datatype : ModuleItem {
    public readonly DAST._IDatatype _a0;
    public ModuleItem_Datatype(DAST._IDatatype _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Datatype(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Datatype;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Datatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IType {
    bool is_Path { get; }
    bool is_Nullable { get; }
    bool is_Tuple { get; }
    bool is_Array { get; }
    bool is_Seq { get; }
    bool is_Set { get; }
    bool is_Multiset { get; }
    bool is_Map { get; }
    bool is_SetBuilder { get; }
    bool is_MapBuilder { get; }
    bool is_Arrow { get; }
    bool is_Primitive { get; }
    bool is_Passthrough { get; }
    bool is_TypeArg { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Path_a0 { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    DAST._IResolvedType dtor_resolved { get; }
    DAST._IType dtor_Nullable_a0 { get; }
    Dafny.ISequence<DAST._IType> dtor_Tuple_a0 { get; }
    DAST._IType dtor_element { get; }
    BigInteger dtor_dims { get; }
    DAST._IType dtor_key { get; }
    DAST._IType dtor_value { get; }
    Dafny.ISequence<DAST._IType> dtor_args { get; }
    DAST._IType dtor_result { get; }
    DAST._IPrimitive dtor_Primitive_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_TypeArg_a0 { get; }
    _IType DowncastClone();
  }
  public abstract class Type : _IType {
    public Type() {
    }
    private static readonly DAST._IType theDefault = create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<DAST._IType>.Empty, DAST.ResolvedType.Default());
    public static DAST._IType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IType> _TYPE = new Dafny.TypeDescriptor<DAST._IType>(DAST.Type.Default());
    public static Dafny.TypeDescriptor<DAST._IType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IType create_Path(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0, Dafny.ISequence<DAST._IType> typeArgs, DAST._IResolvedType resolved) {
      return new Type_Path(_a0, typeArgs, resolved);
    }
    public static _IType create_Nullable(DAST._IType _a0) {
      return new Type_Nullable(_a0);
    }
    public static _IType create_Tuple(Dafny.ISequence<DAST._IType> _a0) {
      return new Type_Tuple(_a0);
    }
    public static _IType create_Array(DAST._IType element, BigInteger dims) {
      return new Type_Array(element, dims);
    }
    public static _IType create_Seq(DAST._IType element) {
      return new Type_Seq(element);
    }
    public static _IType create_Set(DAST._IType element) {
      return new Type_Set(element);
    }
    public static _IType create_Multiset(DAST._IType element) {
      return new Type_Multiset(element);
    }
    public static _IType create_Map(DAST._IType key, DAST._IType @value) {
      return new Type_Map(key, @value);
    }
    public static _IType create_SetBuilder(DAST._IType element) {
      return new Type_SetBuilder(element);
    }
    public static _IType create_MapBuilder(DAST._IType key, DAST._IType @value) {
      return new Type_MapBuilder(key, @value);
    }
    public static _IType create_Arrow(Dafny.ISequence<DAST._IType> args, DAST._IType result) {
      return new Type_Arrow(args, result);
    }
    public static _IType create_Primitive(DAST._IPrimitive _a0) {
      return new Type_Primitive(_a0);
    }
    public static _IType create_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Type_Passthrough(_a0);
    }
    public static _IType create_TypeArg(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Type_TypeArg(_a0);
    }
    public bool is_Path { get { return this is Type_Path; } }
    public bool is_Nullable { get { return this is Type_Nullable; } }
    public bool is_Tuple { get { return this is Type_Tuple; } }
    public bool is_Array { get { return this is Type_Array; } }
    public bool is_Seq { get { return this is Type_Seq; } }
    public bool is_Set { get { return this is Type_Set; } }
    public bool is_Multiset { get { return this is Type_Multiset; } }
    public bool is_Map { get { return this is Type_Map; } }
    public bool is_SetBuilder { get { return this is Type_SetBuilder; } }
    public bool is_MapBuilder { get { return this is Type_MapBuilder; } }
    public bool is_Arrow { get { return this is Type_Arrow; } }
    public bool is_Primitive { get { return this is Type_Primitive; } }
    public bool is_Passthrough { get { return this is Type_Passthrough; } }
    public bool is_TypeArg { get { return this is Type_TypeArg; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Path_a0 {
      get {
        var d = this;
        return ((Type_Path)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        return ((Type_Path)d)._typeArgs;
      }
    }
    public DAST._IResolvedType dtor_resolved {
      get {
        var d = this;
        return ((Type_Path)d)._resolved;
      }
    }
    public DAST._IType dtor_Nullable_a0 {
      get {
        var d = this;
        return ((Type_Nullable)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_Tuple_a0 {
      get {
        var d = this;
        return ((Type_Tuple)d)._a0;
      }
    }
    public DAST._IType dtor_element {
      get {
        var d = this;
        if (d is Type_Array) { return ((Type_Array)d)._element; }
        if (d is Type_Seq) { return ((Type_Seq)d)._element; }
        if (d is Type_Set) { return ((Type_Set)d)._element; }
        if (d is Type_Multiset) { return ((Type_Multiset)d)._element; }
        return ((Type_SetBuilder)d)._element;
      }
    }
    public BigInteger dtor_dims {
      get {
        var d = this;
        return ((Type_Array)d)._dims;
      }
    }
    public DAST._IType dtor_key {
      get {
        var d = this;
        if (d is Type_Map) { return ((Type_Map)d)._key; }
        return ((Type_MapBuilder)d)._key;
      }
    }
    public DAST._IType dtor_value {
      get {
        var d = this;
        if (d is Type_Map) { return ((Type_Map)d)._value; }
        return ((Type_MapBuilder)d)._value;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_args {
      get {
        var d = this;
        return ((Type_Arrow)d)._args;
      }
    }
    public DAST._IType dtor_result {
      get {
        var d = this;
        return ((Type_Arrow)d)._result;
      }
    }
    public DAST._IPrimitive dtor_Primitive_a0 {
      get {
        var d = this;
        return ((Type_Primitive)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 {
      get {
        var d = this;
        return ((Type_Passthrough)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_TypeArg_a0 {
      get {
        var d = this;
        return ((Type_TypeArg)d)._a0;
      }
    }
    public abstract _IType DowncastClone();
  }
  public class Type_Path : Type {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly DAST._IResolvedType _resolved;
    public Type_Path(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0, Dafny.ISequence<DAST._IType> typeArgs, DAST._IResolvedType resolved) : base() {
      this._a0 = _a0;
      this._typeArgs = typeArgs;
      this._resolved = resolved;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Path(_a0, _typeArgs, _resolved);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Path;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._resolved, oth._resolved);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._resolved));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Path";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._resolved);
      s += ")";
      return s;
    }
  }
  public class Type_Nullable : Type {
    public readonly DAST._IType _a0;
    public Type_Nullable(DAST._IType _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Nullable(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Nullable;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Nullable";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Tuple : Type {
    public readonly Dafny.ISequence<DAST._IType> _a0;
    public Type_Tuple(Dafny.ISequence<DAST._IType> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Tuple(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Tuple;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Array : Type {
    public readonly DAST._IType _element;
    public readonly BigInteger _dims;
    public Type_Array(DAST._IType element, BigInteger dims) : base() {
      this._element = element;
      this._dims = dims;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Array(_element, _dims);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Array;
      return oth != null && object.Equals(this._element, oth._element) && this._dims == oth._dims;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dims));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Array";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dims);
      s += ")";
      return s;
    }
  }
  public class Type_Seq : Type {
    public readonly DAST._IType _element;
    public Type_Seq(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Seq(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Seq;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Seq";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Set : Type {
    public readonly DAST._IType _element;
    public Type_Set(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Set(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Set;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Set";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Multiset : Type {
    public readonly DAST._IType _element;
    public Type_Multiset(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Multiset(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Multiset;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Multiset";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Map : Type {
    public readonly DAST._IType _key;
    public readonly DAST._IType _value;
    public Type_Map(DAST._IType key, DAST._IType @value) : base() {
      this._key = key;
      this._value = @value;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Map(_key, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Map;
      return oth != null && object.Equals(this._key, oth._key) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._key));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Map";
      s += "(";
      s += Dafny.Helpers.ToString(this._key);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Type_SetBuilder : Type {
    public readonly DAST._IType _element;
    public Type_SetBuilder(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_SetBuilder(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_SetBuilder;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.SetBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_MapBuilder : Type {
    public readonly DAST._IType _key;
    public readonly DAST._IType _value;
    public Type_MapBuilder(DAST._IType key, DAST._IType @value) : base() {
      this._key = key;
      this._value = @value;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_MapBuilder(_key, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_MapBuilder;
      return oth != null && object.Equals(this._key, oth._key) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._key));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.MapBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._key);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Type_Arrow : Type {
    public readonly Dafny.ISequence<DAST._IType> _args;
    public readonly DAST._IType _result;
    public Type_Arrow(Dafny.ISequence<DAST._IType> args, DAST._IType result) : base() {
      this._args = args;
      this._result = result;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Arrow(_args, _result);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Arrow;
      return oth != null && object.Equals(this._args, oth._args) && object.Equals(this._result, oth._result);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._result));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Arrow";
      s += "(";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._result);
      s += ")";
      return s;
    }
  }
  public class Type_Primitive : Type {
    public readonly DAST._IPrimitive _a0;
    public Type_Primitive(DAST._IPrimitive _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Primitive(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Primitive;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Primitive";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Passthrough : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Type_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Passthrough(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Passthrough;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Passthrough";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TypeArg : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Type_TypeArg(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TypeArg(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_TypeArg;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.TypeArg";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IPrimitive {
    bool is_Int { get; }
    bool is_Real { get; }
    bool is_String { get; }
    bool is_Bool { get; }
    bool is_Char { get; }
    _IPrimitive DowncastClone();
  }
  public abstract class Primitive : _IPrimitive {
    public Primitive() {
    }
    private static readonly DAST._IPrimitive theDefault = create_Int();
    public static DAST._IPrimitive Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IPrimitive> _TYPE = new Dafny.TypeDescriptor<DAST._IPrimitive>(DAST.Primitive.Default());
    public static Dafny.TypeDescriptor<DAST._IPrimitive> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPrimitive create_Int() {
      return new Primitive_Int();
    }
    public static _IPrimitive create_Real() {
      return new Primitive_Real();
    }
    public static _IPrimitive create_String() {
      return new Primitive_String();
    }
    public static _IPrimitive create_Bool() {
      return new Primitive_Bool();
    }
    public static _IPrimitive create_Char() {
      return new Primitive_Char();
    }
    public bool is_Int { get { return this is Primitive_Int; } }
    public bool is_Real { get { return this is Primitive_Real; } }
    public bool is_String { get { return this is Primitive_String; } }
    public bool is_Bool { get { return this is Primitive_Bool; } }
    public bool is_Char { get { return this is Primitive_Char; } }
    public static System.Collections.Generic.IEnumerable<_IPrimitive> AllSingletonConstructors {
      get {
        yield return Primitive.create_Int();
        yield return Primitive.create_Real();
        yield return Primitive.create_String();
        yield return Primitive.create_Bool();
        yield return Primitive.create_Char();
      }
    }
    public abstract _IPrimitive DowncastClone();
  }
  public class Primitive_Int : Primitive {
    public Primitive_Int() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Int();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Int;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Int";
      return s;
    }
  }
  public class Primitive_Real : Primitive {
    public Primitive_Real() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Real();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Real;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Real";
      return s;
    }
  }
  public class Primitive_String : Primitive {
    public Primitive_String() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_String();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_String;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.String";
      return s;
    }
  }
  public class Primitive_Bool : Primitive {
    public Primitive_Bool() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Bool();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Bool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Bool";
      return s;
    }
  }
  public class Primitive_Char : Primitive {
    public Primitive_Char() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Char();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Char;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Char";
      return s;
    }
  }

  public interface _INewtypeRange {
    bool is_U8 { get; }
    bool is_I8 { get; }
    bool is_U16 { get; }
    bool is_I16 { get; }
    bool is_U32 { get; }
    bool is_I32 { get; }
    bool is_U64 { get; }
    bool is_I64 { get; }
    bool is_U128 { get; }
    bool is_I128 { get; }
    bool is_BigInt { get; }
    bool is_NoRange { get; }
    _INewtypeRange DowncastClone();
  }
  public abstract class NewtypeRange : _INewtypeRange {
    public NewtypeRange() {
    }
    private static readonly DAST._INewtypeRange theDefault = create_U8();
    public static DAST._INewtypeRange Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._INewtypeRange> _TYPE = new Dafny.TypeDescriptor<DAST._INewtypeRange>(DAST.NewtypeRange.Default());
    public static Dafny.TypeDescriptor<DAST._INewtypeRange> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INewtypeRange create_U8() {
      return new NewtypeRange_U8();
    }
    public static _INewtypeRange create_I8() {
      return new NewtypeRange_I8();
    }
    public static _INewtypeRange create_U16() {
      return new NewtypeRange_U16();
    }
    public static _INewtypeRange create_I16() {
      return new NewtypeRange_I16();
    }
    public static _INewtypeRange create_U32() {
      return new NewtypeRange_U32();
    }
    public static _INewtypeRange create_I32() {
      return new NewtypeRange_I32();
    }
    public static _INewtypeRange create_U64() {
      return new NewtypeRange_U64();
    }
    public static _INewtypeRange create_I64() {
      return new NewtypeRange_I64();
    }
    public static _INewtypeRange create_U128() {
      return new NewtypeRange_U128();
    }
    public static _INewtypeRange create_I128() {
      return new NewtypeRange_I128();
    }
    public static _INewtypeRange create_BigInt() {
      return new NewtypeRange_BigInt();
    }
    public static _INewtypeRange create_NoRange() {
      return new NewtypeRange_NoRange();
    }
    public bool is_U8 { get { return this is NewtypeRange_U8; } }
    public bool is_I8 { get { return this is NewtypeRange_I8; } }
    public bool is_U16 { get { return this is NewtypeRange_U16; } }
    public bool is_I16 { get { return this is NewtypeRange_I16; } }
    public bool is_U32 { get { return this is NewtypeRange_U32; } }
    public bool is_I32 { get { return this is NewtypeRange_I32; } }
    public bool is_U64 { get { return this is NewtypeRange_U64; } }
    public bool is_I64 { get { return this is NewtypeRange_I64; } }
    public bool is_U128 { get { return this is NewtypeRange_U128; } }
    public bool is_I128 { get { return this is NewtypeRange_I128; } }
    public bool is_BigInt { get { return this is NewtypeRange_BigInt; } }
    public bool is_NoRange { get { return this is NewtypeRange_NoRange; } }
    public static System.Collections.Generic.IEnumerable<_INewtypeRange> AllSingletonConstructors {
      get {
        yield return NewtypeRange.create_U8();
        yield return NewtypeRange.create_I8();
        yield return NewtypeRange.create_U16();
        yield return NewtypeRange.create_I16();
        yield return NewtypeRange.create_U32();
        yield return NewtypeRange.create_I32();
        yield return NewtypeRange.create_U64();
        yield return NewtypeRange.create_I64();
        yield return NewtypeRange.create_U128();
        yield return NewtypeRange.create_I128();
        yield return NewtypeRange.create_BigInt();
        yield return NewtypeRange.create_NoRange();
      }
    }
    public abstract _INewtypeRange DowncastClone();
  }
  public class NewtypeRange_U8 : NewtypeRange {
    public NewtypeRange_U8() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U8();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U8";
      return s;
    }
  }
  public class NewtypeRange_I8 : NewtypeRange {
    public NewtypeRange_I8() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I8();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I8";
      return s;
    }
  }
  public class NewtypeRange_U16 : NewtypeRange {
    public NewtypeRange_U16() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U16();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U16";
      return s;
    }
  }
  public class NewtypeRange_I16 : NewtypeRange {
    public NewtypeRange_I16() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I16();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I16";
      return s;
    }
  }
  public class NewtypeRange_U32 : NewtypeRange {
    public NewtypeRange_U32() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U32();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U32";
      return s;
    }
  }
  public class NewtypeRange_I32 : NewtypeRange {
    public NewtypeRange_I32() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I32();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I32";
      return s;
    }
  }
  public class NewtypeRange_U64 : NewtypeRange {
    public NewtypeRange_U64() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U64();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U64";
      return s;
    }
  }
  public class NewtypeRange_I64 : NewtypeRange {
    public NewtypeRange_I64() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I64();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I64";
      return s;
    }
  }
  public class NewtypeRange_U128 : NewtypeRange {
    public NewtypeRange_U128() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U128();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U128";
      return s;
    }
  }
  public class NewtypeRange_I128 : NewtypeRange {
    public NewtypeRange_I128() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I128();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I128";
      return s;
    }
  }
  public class NewtypeRange_BigInt : NewtypeRange {
    public NewtypeRange_BigInt() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_BigInt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_BigInt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.BigInt";
      return s;
    }
  }
  public class NewtypeRange_NoRange : NewtypeRange {
    public NewtypeRange_NoRange() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_NoRange();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_NoRange;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.NoRange";
      return s;
    }
  }

  public interface _IAttribute {
    bool is_Attribute { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_args { get; }
    _IAttribute DowncastClone();
  }
  public class Attribute : _IAttribute {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _args;
    public Attribute(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      this._name = name;
      this._args = args;
    }
    public _IAttribute DowncastClone() {
      if (this is _IAttribute dt) { return dt; }
      return new Attribute(_name, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Attribute;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Attribute.Attribute";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
    private static readonly DAST._IAttribute theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty);
    public static DAST._IAttribute Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IAttribute> _TYPE = new Dafny.TypeDescriptor<DAST._IAttribute>(DAST.Attribute.Default());
    public static Dafny.TypeDescriptor<DAST._IAttribute> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAttribute create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      return new Attribute(name, args);
    }
    public static _IAttribute create_Attribute(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      return create(name, args);
    }
    public bool is_Attribute { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_args {
      get {
        return this._args;
      }
    }
  }

  public interface _IDatatypeType {
    bool is_DatatypeType { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IDatatypeType DowncastClone();
  }
  public class DatatypeType : _IDatatypeType {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public DatatypeType(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._path = path;
      this._attributes = attributes;
    }
    public _IDatatypeType DowncastClone() {
      if (this is _IDatatypeType dt) { return dt; }
      return new DatatypeType(_path, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.DatatypeType;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.DatatypeType.DatatypeType";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatypeType theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IDatatypeType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatypeType> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatypeType>(DAST.DatatypeType.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatypeType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatypeType create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new DatatypeType(path, attributes);
    }
    public static _IDatatypeType create_DatatypeType(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(path, attributes);
    }
    public bool is_DatatypeType { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        return this._path;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IResolvedType {
    bool is_Datatype { get; }
    bool is_Trait { get; }
    bool is_Newtype { get; }
    DAST._IDatatypeType dtor_datatypeType { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    DAST._IType dtor_baseType { get; }
    DAST._INewtypeRange dtor_range { get; }
    bool dtor_erase { get; }
    _IResolvedType DowncastClone();
  }
  public abstract class ResolvedType : _IResolvedType {
    public ResolvedType() {
    }
    private static readonly DAST._IResolvedType theDefault = create_Datatype(DAST.DatatypeType.Default());
    public static DAST._IResolvedType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IResolvedType> _TYPE = new Dafny.TypeDescriptor<DAST._IResolvedType>(DAST.ResolvedType.Default());
    public static Dafny.TypeDescriptor<DAST._IResolvedType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IResolvedType create_Datatype(DAST._IDatatypeType datatypeType) {
      return new ResolvedType_Datatype(datatypeType);
    }
    public static _IResolvedType create_Trait(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new ResolvedType_Trait(path, attributes);
    }
    public static _IResolvedType create_Newtype(DAST._IType baseType, DAST._INewtypeRange range, bool erase, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new ResolvedType_Newtype(baseType, range, erase, attributes);
    }
    public bool is_Datatype { get { return this is ResolvedType_Datatype; } }
    public bool is_Trait { get { return this is ResolvedType_Trait; } }
    public bool is_Newtype { get { return this is ResolvedType_Newtype; } }
    public DAST._IDatatypeType dtor_datatypeType {
      get {
        var d = this;
        return ((ResolvedType_Datatype)d)._datatypeType;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        var d = this;
        return ((ResolvedType_Trait)d)._path;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        var d = this;
        if (d is ResolvedType_Trait) { return ((ResolvedType_Trait)d)._attributes; }
        return ((ResolvedType_Newtype)d)._attributes;
      }
    }
    public DAST._IType dtor_baseType {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._baseType;
      }
    }
    public DAST._INewtypeRange dtor_range {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._range;
      }
    }
    public bool dtor_erase {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._erase;
      }
    }
    public abstract _IResolvedType DowncastClone();
  }
  public class ResolvedType_Datatype : ResolvedType {
    public readonly DAST._IDatatypeType _datatypeType;
    public ResolvedType_Datatype(DAST._IDatatypeType datatypeType) : base() {
      this._datatypeType = datatypeType;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Datatype(_datatypeType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Datatype;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Datatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Trait : ResolvedType {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public ResolvedType_Trait(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) : base() {
      this._path = path;
      this._attributes = attributes;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Trait(_path, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Trait;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Newtype : ResolvedType {
    public readonly DAST._IType _baseType;
    public readonly DAST._INewtypeRange _range;
    public readonly bool _erase;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public ResolvedType_Newtype(DAST._IType baseType, DAST._INewtypeRange range, bool erase, Dafny.ISequence<DAST._IAttribute> attributes) : base() {
      this._baseType = baseType;
      this._range = range;
      this._erase = erase;
      this._attributes = attributes;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Newtype(_baseType, _range, _erase, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Newtype;
      return oth != null && object.Equals(this._baseType, oth._baseType) && object.Equals(this._range, oth._range) && this._erase == oth._erase && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._baseType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._erase));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Newtype";
      s += "(";
      s += Dafny.Helpers.ToString(this._baseType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._erase);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
  }

  public interface _IIdent {
    bool is_Ident { get; }
    Dafny.ISequence<Dafny.Rune> dtor_id { get; }
  }
  public class Ident : _IIdent {
    public readonly Dafny.ISequence<Dafny.Rune> _id;
    public Ident(Dafny.ISequence<Dafny.Rune> id) {
      this._id = id;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Ident;
      return oth != null && object.Equals(this._id, oth._id);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._id));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Ident.Ident";
      s += "(";
      s += this._id.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IIdent create(Dafny.ISequence<Dafny.Rune> id) {
      return new Ident(id);
    }
    public static _IIdent create_Ident(Dafny.ISequence<Dafny.Rune> id) {
      return create(id);
    }
    public bool is_Ident { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_id {
      get {
        return this._id;
      }
    }
  }

  public interface _IClass {
    bool is_Class { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.Rune> dtor_enclosingModule { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IType> dtor_superClasses { get; }
    Dafny.ISequence<DAST._IField> dtor_fields { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IClass DowncastClone();
  }
  public class Class : _IClass {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.Rune> _enclosingModule;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IType> _superClasses;
    public readonly Dafny.ISequence<DAST._IField> _fields;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Class(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._enclosingModule = enclosingModule;
      this._typeParams = typeParams;
      this._superClasses = superClasses;
      this._fields = fields;
      this._body = body;
      this._attributes = attributes;
    }
    public _IClass DowncastClone() {
      if (this is _IClass dt) { return dt; }
      return new Class(_name, _enclosingModule, _typeParams, _superClasses, _fields, _body, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Class;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._enclosingModule, oth._enclosingModule) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._superClasses, oth._superClasses) && object.Equals(this._fields, oth._fields) && object.Equals(this._body, oth._body) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enclosingModule));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._superClasses));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Class.Class";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._enclosingModule);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._superClasses);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IClass theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IField>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IClass Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IClass> _TYPE = new Dafny.TypeDescriptor<DAST._IClass>(DAST.Class.Default());
    public static Dafny.TypeDescriptor<DAST._IClass> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IClass create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Class(name, enclosingModule, typeParams, superClasses, fields, body, attributes);
    }
    public static _IClass create_Class(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, enclosingModule, typeParams, superClasses, fields, body, attributes);
    }
    public bool is_Class { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_enclosingModule {
      get {
        return this._enclosingModule;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_superClasses {
      get {
        return this._superClasses;
      }
    }
    public Dafny.ISequence<DAST._IField> dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _ITrait {
    bool is_Trait { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _ITrait DowncastClone();
  }
  public class Trait : _ITrait {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Trait(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._typeParams = typeParams;
      this._body = body;
      this._attributes = attributes;
    }
    public _ITrait DowncastClone() {
      if (this is _ITrait dt) { return dt; }
      return new Trait(_name, _typeParams, _body, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Trait;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._body, oth._body) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Trait.Trait";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._ITrait theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._ITrait Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ITrait> _TYPE = new Dafny.TypeDescriptor<DAST._ITrait>(DAST.Trait.Default());
    public static Dafny.TypeDescriptor<DAST._ITrait> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITrait create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Trait(name, typeParams, body, attributes);
    }
    public static _ITrait create_Trait(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, typeParams, body, attributes);
    }
    public bool is_Trait { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IDatatype {
    bool is_Datatype { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.Rune> dtor_enclosingModule { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IDatatypeCtor> dtor_ctors { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    bool dtor_isCo { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IDatatype DowncastClone();
  }
  public class Datatype : _IDatatype {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.Rune> _enclosingModule;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IDatatypeCtor> _ctors;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly bool _isCo;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Datatype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._enclosingModule = enclosingModule;
      this._typeParams = typeParams;
      this._ctors = ctors;
      this._body = body;
      this._isCo = isCo;
      this._attributes = attributes;
    }
    public _IDatatype DowncastClone() {
      if (this is _IDatatype dt) { return dt; }
      return new Datatype(_name, _enclosingModule, _typeParams, _ctors, _body, _isCo, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Datatype;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._enclosingModule, oth._enclosingModule) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._ctors, oth._ctors) && object.Equals(this._body, oth._body) && this._isCo == oth._isCo && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enclosingModule));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._ctors));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isCo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Datatype.Datatype";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._enclosingModule);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._ctors);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isCo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatype theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IDatatypeCtor>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, false, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IDatatype Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatype> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatype>(DAST.Datatype.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatype> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatype create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Datatype(name, enclosingModule, typeParams, ctors, body, isCo, attributes);
    }
    public static _IDatatype create_Datatype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, enclosingModule, typeParams, ctors, body, isCo, attributes);
    }
    public bool is_Datatype { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_enclosingModule {
      get {
        return this._enclosingModule;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IDatatypeCtor> dtor_ctors {
      get {
        return this._ctors;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public bool dtor_isCo {
      get {
        return this._isCo;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IDatatypeCtor {
    bool is_DatatypeCtor { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IFormal> dtor_args { get; }
    bool dtor_hasAnyArgs { get; }
    _IDatatypeCtor DowncastClone();
  }
  public class DatatypeCtor : _IDatatypeCtor {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IFormal> _args;
    public readonly bool _hasAnyArgs;
    public DatatypeCtor(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      this._name = name;
      this._args = args;
      this._hasAnyArgs = hasAnyArgs;
    }
    public _IDatatypeCtor DowncastClone() {
      if (this is _IDatatypeCtor dt) { return dt; }
      return new DatatypeCtor(_name, _args, _hasAnyArgs);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.DatatypeCtor;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._args, oth._args) && this._hasAnyArgs == oth._hasAnyArgs;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hasAnyArgs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.DatatypeCtor.DatatypeCtor";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hasAnyArgs);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatypeCtor theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IFormal>.Empty, false);
    public static DAST._IDatatypeCtor Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatypeCtor> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatypeCtor>(DAST.DatatypeCtor.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatypeCtor> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatypeCtor create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      return new DatatypeCtor(name, args, hasAnyArgs);
    }
    public static _IDatatypeCtor create_DatatypeCtor(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      return create(name, args, hasAnyArgs);
    }
    public bool is_DatatypeCtor { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_args {
      get {
        return this._args;
      }
    }
    public bool dtor_hasAnyArgs {
      get {
        return this._hasAnyArgs;
      }
    }
  }

  public interface _INewtype {
    bool is_Newtype { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    DAST._IType dtor_base { get; }
    DAST._INewtypeRange dtor_range { get; }
    Dafny.ISequence<DAST._IStatement> dtor_witnessStmts { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_witnessExpr { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _INewtype DowncastClone();
  }
  public class Newtype : _INewtype {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly DAST._IType _base;
    public readonly DAST._INewtypeRange _range;
    public readonly Dafny.ISequence<DAST._IStatement> _witnessStmts;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _witnessExpr;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Newtype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._typeParams = typeParams;
      this._base = @base;
      this._range = range;
      this._witnessStmts = witnessStmts;
      this._witnessExpr = witnessExpr;
      this._attributes = attributes;
    }
    public _INewtype DowncastClone() {
      if (this is _INewtype dt) { return dt; }
      return new Newtype(_name, _typeParams, _base, _range, _witnessStmts, _witnessExpr, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Newtype;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._base, oth._base) && object.Equals(this._range, oth._range) && object.Equals(this._witnessStmts, oth._witnessStmts) && object.Equals(this._witnessExpr, oth._witnessExpr) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._base));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._witnessStmts));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._witnessExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Newtype.Newtype";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._base);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._witnessStmts);
      s += ", ";
      s += Dafny.Helpers.ToString(this._witnessExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._INewtype theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, DAST.Type.Default(), DAST.NewtypeRange.Default(), Dafny.Sequence<DAST._IStatement>.Empty, Std.Wrappers.Option<DAST._IExpression>.Default(), Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._INewtype Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._INewtype> _TYPE = new Dafny.TypeDescriptor<DAST._INewtype>(DAST.Newtype.Default());
    public static Dafny.TypeDescriptor<DAST._INewtype> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INewtype create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Newtype(name, typeParams, @base, range, witnessStmts, witnessExpr, attributes);
    }
    public static _INewtype create_Newtype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, typeParams, @base, range, witnessStmts, witnessExpr, attributes);
    }
    public bool is_Newtype { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public DAST._IType dtor_base {
      get {
        return this._base;
      }
    }
    public DAST._INewtypeRange dtor_range {
      get {
        return this._range;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_witnessStmts {
      get {
        return this._witnessStmts;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_witnessExpr {
      get {
        return this._witnessExpr;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IClassItem {
    bool is_Method { get; }
    DAST._IMethod dtor_Method_a0 { get; }
  }
  public class ClassItem : _IClassItem {
    public readonly DAST._IMethod _a0;
    public ClassItem(DAST._IMethod _a0) {
      this._a0 = _a0;
    }
    public static DAST._IMethod DowncastClone(DAST._IMethod _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ClassItem;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ClassItem.Method";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
    private static readonly DAST._IMethod theDefault = DAST.Method.Default();
    public static DAST._IMethod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IMethod> _TYPE = new Dafny.TypeDescriptor<DAST._IMethod>(DAST.Method.Default());
    public static Dafny.TypeDescriptor<DAST._IMethod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IClassItem create(DAST._IMethod _a0) {
      return new ClassItem(_a0);
    }
    public static _IClassItem create_Method(DAST._IMethod _a0) {
      return create(_a0);
    }
    public bool is_Method { get { return true; } }
    public DAST._IMethod dtor_Method_a0 {
      get {
        return this._a0;
      }
    }
  }

  public interface _IField {
    bool is_Field { get; }
    DAST._IFormal dtor_formal { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_defaultValue { get; }
    _IField DowncastClone();
  }
  public class Field : _IField {
    public readonly DAST._IFormal _formal;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _defaultValue;
    public Field(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      this._formal = formal;
      this._defaultValue = defaultValue;
    }
    public _IField DowncastClone() {
      if (this is _IField dt) { return dt; }
      return new Field(_formal, _defaultValue);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Field;
      return oth != null && object.Equals(this._formal, oth._formal) && object.Equals(this._defaultValue, oth._defaultValue);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formal));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._defaultValue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Field.Field";
      s += "(";
      s += Dafny.Helpers.ToString(this._formal);
      s += ", ";
      s += Dafny.Helpers.ToString(this._defaultValue);
      s += ")";
      return s;
    }
    private static readonly DAST._IField theDefault = create(DAST.Formal.Default(), Std.Wrappers.Option<DAST._IExpression>.Default());
    public static DAST._IField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IField> _TYPE = new Dafny.TypeDescriptor<DAST._IField>(DAST.Field.Default());
    public static Dafny.TypeDescriptor<DAST._IField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IField create(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      return new Field(formal, defaultValue);
    }
    public static _IField create_Field(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      return create(formal, defaultValue);
    }
    public bool is_Field { get { return true; } }
    public DAST._IFormal dtor_formal {
      get {
        return this._formal;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_defaultValue {
      get {
        return this._defaultValue;
      }
    }
  }

  public interface _IFormal {
    bool is_Formal { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IType dtor_typ { get; }
    _IFormal DowncastClone();
  }
  public class Formal : _IFormal {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public Formal(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      this._name = name;
      this._typ = typ;
    }
    public _IFormal DowncastClone() {
      if (this is _IFormal dt) { return dt; }
      return new Formal(_name, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Formal;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Formal.Formal";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
    private static readonly DAST._IFormal theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, DAST.Type.Default());
    public static DAST._IFormal Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IFormal> _TYPE = new Dafny.TypeDescriptor<DAST._IFormal>(DAST.Formal.Default());
    public static Dafny.TypeDescriptor<DAST._IFormal> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFormal create(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      return new Formal(name, typ);
    }
    public static _IFormal create_Formal(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      return create(name, typ);
    }
    public bool is_Formal { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public DAST._IType dtor_typ {
      get {
        return this._typ;
      }
    }
  }

  public interface _IMethod {
    bool is_Method { get; }
    bool dtor_isStatic { get; }
    bool dtor_hasBody { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_overridingPath { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IFormal> dtor_params { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<DAST._IType> dtor_outTypes { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outVars { get; }
    _IMethod DowncastClone();
  }
  public class Method : _IMethod {
    public readonly bool _isStatic;
    public readonly bool _hasBody;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _overridingPath;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IFormal> _params;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public readonly Dafny.ISequence<DAST._IType> _outTypes;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _outVars;
    public Method(bool isStatic, bool hasBody, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      this._isStatic = isStatic;
      this._hasBody = hasBody;
      this._overridingPath = overridingPath;
      this._name = name;
      this._typeParams = typeParams;
      this._params = @params;
      this._body = body;
      this._outTypes = outTypes;
      this._outVars = outVars;
    }
    public _IMethod DowncastClone() {
      if (this is _IMethod dt) { return dt; }
      return new Method(_isStatic, _hasBody, _overridingPath, _name, _typeParams, _params, _body, _outTypes, _outVars);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Method;
      return oth != null && this._isStatic == oth._isStatic && this._hasBody == oth._hasBody && object.Equals(this._overridingPath, oth._overridingPath) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._params, oth._params) && object.Equals(this._body, oth._body) && object.Equals(this._outTypes, oth._outTypes) && object.Equals(this._outVars, oth._outVars);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isStatic));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hasBody));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._overridingPath));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._params));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outTypes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outVars));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Method.Method";
      s += "(";
      s += Dafny.Helpers.ToString(this._isStatic);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hasBody);
      s += ", ";
      s += Dafny.Helpers.ToString(this._overridingPath);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._params);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outTypes);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outVars);
      s += ")";
      return s;
    }
    private static readonly DAST._IMethod theDefault = create(false, false, Std.Wrappers.Option<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>>.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IFormal>.Empty, Dafny.Sequence<DAST._IStatement>.Empty, Dafny.Sequence<DAST._IType>.Empty, Std.Wrappers.Option<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>>.Default());
    public static DAST._IMethod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IMethod> _TYPE = new Dafny.TypeDescriptor<DAST._IMethod>(DAST.Method.Default());
    public static Dafny.TypeDescriptor<DAST._IMethod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMethod create(bool isStatic, bool hasBody, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      return new Method(isStatic, hasBody, overridingPath, name, typeParams, @params, body, outTypes, outVars);
    }
    public static _IMethod create_Method(bool isStatic, bool hasBody, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      return create(isStatic, hasBody, overridingPath, name, typeParams, @params, body, outTypes, outVars);
    }
    public bool is_Method { get { return true; } }
    public bool dtor_isStatic {
      get {
        return this._isStatic;
      }
    }
    public bool dtor_hasBody {
      get {
        return this._hasBody;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_overridingPath {
      get {
        return this._overridingPath;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_params {
      get {
        return this._params;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_outTypes {
      get {
        return this._outTypes;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outVars {
      get {
        return this._outVars;
      }
    }
  }

  public interface _ICallSignature {
    bool is_CallSignature { get; }
    Dafny.ISequence<DAST._IFormal> dtor_parameters { get; }
  }
  public class CallSignature : _ICallSignature {
    public readonly Dafny.ISequence<DAST._IFormal> _parameters;
    public CallSignature(Dafny.ISequence<DAST._IFormal> parameters) {
      this._parameters = parameters;
    }
    public static Dafny.ISequence<DAST._IFormal> DowncastClone(Dafny.ISequence<DAST._IFormal> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallSignature;
      return oth != null && object.Equals(this._parameters, oth._parameters);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._parameters));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallSignature.CallSignature";
      s += "(";
      s += Dafny.Helpers.ToString(this._parameters);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<DAST._IFormal> theDefault = Dafny.Sequence<DAST._IFormal>.Empty;
    public static Dafny.ISequence<DAST._IFormal> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>>(Dafny.Sequence<DAST._IFormal>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICallSignature create(Dafny.ISequence<DAST._IFormal> parameters) {
      return new CallSignature(parameters);
    }
    public static _ICallSignature create_CallSignature(Dafny.ISequence<DAST._IFormal> parameters) {
      return create(parameters);
    }
    public bool is_CallSignature { get { return true; } }
    public Dafny.ISequence<DAST._IFormal> dtor_parameters {
      get {
        return this._parameters;
      }
    }
  }

  public interface _ICallName {
    bool is_Name { get; }
    bool is_MapBuilderAdd { get; }
    bool is_MapBuilderBuild { get; }
    bool is_SetBuilderAdd { get; }
    bool is_SetBuilderBuild { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IFormal> dtor_signature { get; }
    _ICallName DowncastClone();
  }
  public abstract class CallName : _ICallName {
    public CallName() {
    }
    private static readonly DAST._ICallName theDefault = create_Name(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IFormal>.Empty);
    public static DAST._ICallName Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ICallName> _TYPE = new Dafny.TypeDescriptor<DAST._ICallName>(DAST.CallName.Default());
    public static Dafny.TypeDescriptor<DAST._ICallName> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICallName create_Name(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> signature) {
      return new CallName_Name(name, signature);
    }
    public static _ICallName create_MapBuilderAdd() {
      return new CallName_MapBuilderAdd();
    }
    public static _ICallName create_MapBuilderBuild() {
      return new CallName_MapBuilderBuild();
    }
    public static _ICallName create_SetBuilderAdd() {
      return new CallName_SetBuilderAdd();
    }
    public static _ICallName create_SetBuilderBuild() {
      return new CallName_SetBuilderBuild();
    }
    public bool is_Name { get { return this is CallName_Name; } }
    public bool is_MapBuilderAdd { get { return this is CallName_MapBuilderAdd; } }
    public bool is_MapBuilderBuild { get { return this is CallName_MapBuilderBuild; } }
    public bool is_SetBuilderAdd { get { return this is CallName_SetBuilderAdd; } }
    public bool is_SetBuilderBuild { get { return this is CallName_SetBuilderBuild; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((CallName_Name)d)._name;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_signature {
      get {
        var d = this;
        return ((CallName_Name)d)._signature;
      }
    }
    public abstract _ICallName DowncastClone();
  }
  public class CallName_Name : CallName {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IFormal> _signature;
    public CallName_Name(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> signature) : base() {
      this._name = name;
      this._signature = signature;
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_Name(_name, _signature);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_Name;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._signature, oth._signature);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._signature));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.Name";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._signature);
      s += ")";
      return s;
    }
  }
  public class CallName_MapBuilderAdd : CallName {
    public CallName_MapBuilderAdd() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_MapBuilderAdd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_MapBuilderAdd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.MapBuilderAdd";
      return s;
    }
  }
  public class CallName_MapBuilderBuild : CallName {
    public CallName_MapBuilderBuild() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_MapBuilderBuild();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_MapBuilderBuild;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.MapBuilderBuild";
      return s;
    }
  }
  public class CallName_SetBuilderAdd : CallName {
    public CallName_SetBuilderAdd() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_SetBuilderAdd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_SetBuilderAdd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.SetBuilderAdd";
      return s;
    }
  }
  public class CallName_SetBuilderBuild : CallName {
    public CallName_SetBuilderBuild() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_SetBuilderBuild();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_SetBuilderBuild;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.SetBuilderBuild";
      return s;
    }
  }

  public interface _IStatement {
    bool is_DeclareVar { get; }
    bool is_Assign { get; }
    bool is_If { get; }
    bool is_Labeled { get; }
    bool is_While { get; }
    bool is_Foreach { get; }
    bool is_Call { get; }
    bool is_Return { get; }
    bool is_EarlyReturn { get; }
    bool is_Break { get; }
    bool is_TailRecursive { get; }
    bool is_JumpTailCallStart { get; }
    bool is_Halt { get; }
    bool is_Print { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IType dtor_typ { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_maybeValue { get; }
    DAST._IAssignLhs dtor_lhs { get; }
    DAST._IExpression dtor_value { get; }
    DAST._IExpression dtor_cond { get; }
    Dafny.ISequence<DAST._IStatement> dtor_thn { get; }
    Dafny.ISequence<DAST._IStatement> dtor_els { get; }
    Dafny.ISequence<Dafny.Rune> dtor_lbl { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<Dafny.Rune> dtor_boundName { get; }
    DAST._IType dtor_boundType { get; }
    DAST._IExpression dtor_over { get; }
    DAST._IExpression dtor_on { get; }
    DAST._ICallName dtor_callName { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    Dafny.ISequence<DAST._IExpression> dtor_args { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outs { get; }
    DAST._IExpression dtor_expr { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_toLabel { get; }
    DAST._IExpression dtor_Print_a0 { get; }
    _IStatement DowncastClone();
  }
  public abstract class Statement : _IStatement {
    public Statement() {
    }
    private static readonly DAST._IStatement theDefault = create_DeclareVar(Dafny.Sequence<Dafny.Rune>.Empty, DAST.Type.Default(), Std.Wrappers.Option<DAST._IExpression>.Default());
    public static DAST._IStatement Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IStatement> _TYPE = new Dafny.TypeDescriptor<DAST._IStatement>(DAST.Statement.Default());
    public static Dafny.TypeDescriptor<DAST._IStatement> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IStatement create_DeclareVar(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, Std.Wrappers._IOption<DAST._IExpression> maybeValue) {
      return new Statement_DeclareVar(name, typ, maybeValue);
    }
    public static _IStatement create_Assign(DAST._IAssignLhs lhs, DAST._IExpression @value) {
      return new Statement_Assign(lhs, @value);
    }
    public static _IStatement create_If(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> thn, Dafny.ISequence<DAST._IStatement> els) {
      return new Statement_If(cond, thn, els);
    }
    public static _IStatement create_Labeled(Dafny.ISequence<Dafny.Rune> lbl, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_Labeled(lbl, body);
    }
    public static _IStatement create_While(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_While(cond, body);
    }
    public static _IStatement create_Foreach(Dafny.ISequence<Dafny.Rune> boundName, DAST._IType boundType, DAST._IExpression over, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_Foreach(boundName, boundType, over, body);
    }
    public static _IStatement create_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outs) {
      return new Statement_Call(@on, callName, typeArgs, args, outs);
    }
    public static _IStatement create_Return(DAST._IExpression expr) {
      return new Statement_Return(expr);
    }
    public static _IStatement create_EarlyReturn() {
      return new Statement_EarlyReturn();
    }
    public static _IStatement create_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> toLabel) {
      return new Statement_Break(toLabel);
    }
    public static _IStatement create_TailRecursive(Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_TailRecursive(body);
    }
    public static _IStatement create_JumpTailCallStart() {
      return new Statement_JumpTailCallStart();
    }
    public static _IStatement create_Halt() {
      return new Statement_Halt();
    }
    public static _IStatement create_Print(DAST._IExpression _a0) {
      return new Statement_Print(_a0);
    }
    public bool is_DeclareVar { get { return this is Statement_DeclareVar; } }
    public bool is_Assign { get { return this is Statement_Assign; } }
    public bool is_If { get { return this is Statement_If; } }
    public bool is_Labeled { get { return this is Statement_Labeled; } }
    public bool is_While { get { return this is Statement_While; } }
    public bool is_Foreach { get { return this is Statement_Foreach; } }
    public bool is_Call { get { return this is Statement_Call; } }
    public bool is_Return { get { return this is Statement_Return; } }
    public bool is_EarlyReturn { get { return this is Statement_EarlyReturn; } }
    public bool is_Break { get { return this is Statement_Break; } }
    public bool is_TailRecursive { get { return this is Statement_TailRecursive; } }
    public bool is_JumpTailCallStart { get { return this is Statement_JumpTailCallStart; } }
    public bool is_Halt { get { return this is Statement_Halt; } }
    public bool is_Print { get { return this is Statement_Print; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._name;
      }
    }
    public DAST._IType dtor_typ {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._typ;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_maybeValue {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._maybeValue;
      }
    }
    public DAST._IAssignLhs dtor_lhs {
      get {
        var d = this;
        return ((Statement_Assign)d)._lhs;
      }
    }
    public DAST._IExpression dtor_value {
      get {
        var d = this;
        return ((Statement_Assign)d)._value;
      }
    }
    public DAST._IExpression dtor_cond {
      get {
        var d = this;
        if (d is Statement_If) { return ((Statement_If)d)._cond; }
        return ((Statement_While)d)._cond;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_thn {
      get {
        var d = this;
        return ((Statement_If)d)._thn;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_els {
      get {
        var d = this;
        return ((Statement_If)d)._els;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_lbl {
      get {
        var d = this;
        return ((Statement_Labeled)d)._lbl;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        var d = this;
        if (d is Statement_Labeled) { return ((Statement_Labeled)d)._body; }
        if (d is Statement_While) { return ((Statement_While)d)._body; }
        if (d is Statement_Foreach) { return ((Statement_Foreach)d)._body; }
        return ((Statement_TailRecursive)d)._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_boundName {
      get {
        var d = this;
        return ((Statement_Foreach)d)._boundName;
      }
    }
    public DAST._IType dtor_boundType {
      get {
        var d = this;
        return ((Statement_Foreach)d)._boundType;
      }
    }
    public DAST._IExpression dtor_over {
      get {
        var d = this;
        return ((Statement_Foreach)d)._over;
      }
    }
    public DAST._IExpression dtor_on {
      get {
        var d = this;
        return ((Statement_Call)d)._on;
      }
    }
    public DAST._ICallName dtor_callName {
      get {
        var d = this;
        return ((Statement_Call)d)._callName;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        return ((Statement_Call)d)._typeArgs;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_args {
      get {
        var d = this;
        return ((Statement_Call)d)._args;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outs {
      get {
        var d = this;
        return ((Statement_Call)d)._outs;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        return ((Statement_Return)d)._expr;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_toLabel {
      get {
        var d = this;
        return ((Statement_Break)d)._toLabel;
      }
    }
    public DAST._IExpression dtor_Print_a0 {
      get {
        var d = this;
        return ((Statement_Print)d)._a0;
      }
    }
    public abstract _IStatement DowncastClone();
  }
  public class Statement_DeclareVar : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _maybeValue;
    public Statement_DeclareVar(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, Std.Wrappers._IOption<DAST._IExpression> maybeValue) : base() {
      this._name = name;
      this._typ = typ;
      this._maybeValue = maybeValue;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_DeclareVar(_name, _typ, _maybeValue);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_DeclareVar;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ) && object.Equals(this._maybeValue, oth._maybeValue);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._maybeValue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.DeclareVar";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ", ";
      s += Dafny.Helpers.ToString(this._maybeValue);
      s += ")";
      return s;
    }
  }
  public class Statement_Assign : Statement {
    public readonly DAST._IAssignLhs _lhs;
    public readonly DAST._IExpression _value;
    public Statement_Assign(DAST._IAssignLhs lhs, DAST._IExpression @value) : base() {
      this._lhs = lhs;
      this._value = @value;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Assign(_lhs, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Assign;
      return oth != null && object.Equals(this._lhs, oth._lhs) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lhs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Assign";
      s += "(";
      s += Dafny.Helpers.ToString(this._lhs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Statement_If : Statement {
    public readonly DAST._IExpression _cond;
    public readonly Dafny.ISequence<DAST._IStatement> _thn;
    public readonly Dafny.ISequence<DAST._IStatement> _els;
    public Statement_If(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> thn, Dafny.ISequence<DAST._IStatement> els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_If(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_If;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.If";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Statement_Labeled : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _lbl;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_Labeled(Dafny.ISequence<Dafny.Rune> lbl, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._lbl = lbl;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Labeled(_lbl, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Labeled;
      return oth != null && object.Equals(this._lbl, oth._lbl) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lbl));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Labeled";
      s += "(";
      s += this._lbl.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_While : Statement {
    public readonly DAST._IExpression _cond;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_While(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._cond = cond;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_While(_cond, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_While;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.While";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_Foreach : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _boundName;
    public readonly DAST._IType _boundType;
    public readonly DAST._IExpression _over;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_Foreach(Dafny.ISequence<Dafny.Rune> boundName, DAST._IType boundType, DAST._IExpression over, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._boundName = boundName;
      this._boundType = boundType;
      this._over = over;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Foreach(_boundName, _boundType, _over, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Foreach;
      return oth != null && object.Equals(this._boundName, oth._boundName) && object.Equals(this._boundType, oth._boundType) && object.Equals(this._over, oth._over) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._boundName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._boundType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._over));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Foreach";
      s += "(";
      s += this._boundName.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._boundType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._over);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_Call : Statement {
    public readonly DAST._IExpression _on;
    public readonly DAST._ICallName _callName;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _outs;
    public Statement_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outs) : base() {
      this._on = @on;
      this._callName = callName;
      this._typeArgs = typeArgs;
      this._args = args;
      this._outs = outs;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Call(_on, _callName, _typeArgs, _args, _outs);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Call;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._callName, oth._callName) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args) && object.Equals(this._outs, oth._outs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._callName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._callName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outs);
      s += ")";
      return s;
    }
  }
  public class Statement_Return : Statement {
    public readonly DAST._IExpression _expr;
    public Statement_Return(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Return(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Return;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Return";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Statement_EarlyReturn : Statement {
    public Statement_EarlyReturn() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_EarlyReturn();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_EarlyReturn;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.EarlyReturn";
      return s;
    }
  }
  public class Statement_Break : Statement {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _toLabel;
    public Statement_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> toLabel) : base() {
      this._toLabel = toLabel;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Break(_toLabel);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Break;
      return oth != null && object.Equals(this._toLabel, oth._toLabel);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._toLabel));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Break";
      s += "(";
      s += Dafny.Helpers.ToString(this._toLabel);
      s += ")";
      return s;
    }
  }
  public class Statement_TailRecursive : Statement {
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_TailRecursive(Dafny.ISequence<DAST._IStatement> body) : base() {
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_TailRecursive(_body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_TailRecursive;
      return oth != null && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.TailRecursive";
      s += "(";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_JumpTailCallStart : Statement {
    public Statement_JumpTailCallStart() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_JumpTailCallStart();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_JumpTailCallStart;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.JumpTailCallStart";
      return s;
    }
  }
  public class Statement_Halt : Statement {
    public Statement_Halt() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Halt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Halt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Halt";
      return s;
    }
  }
  public class Statement_Print : Statement {
    public readonly DAST._IExpression _a0;
    public Statement_Print(DAST._IExpression _a0) : base() {
      this._a0 = _a0;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Print(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Print;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Print";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IAssignLhs {
    bool is_Ident { get; }
    bool is_Select { get; }
    bool is_Index { get; }
    Dafny.ISequence<Dafny.Rune> dtor_ident { get; }
    DAST._IExpression dtor_expr { get; }
    Dafny.ISequence<Dafny.Rune> dtor_field { get; }
    Dafny.ISequence<DAST._IExpression> dtor_indices { get; }
    _IAssignLhs DowncastClone();
  }
  public abstract class AssignLhs : _IAssignLhs {
    public AssignLhs() {
    }
    private static readonly DAST._IAssignLhs theDefault = create_Ident(Dafny.Sequence<Dafny.Rune>.Empty);
    public static DAST._IAssignLhs Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IAssignLhs> _TYPE = new Dafny.TypeDescriptor<DAST._IAssignLhs>(DAST.AssignLhs.Default());
    public static Dafny.TypeDescriptor<DAST._IAssignLhs> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssignLhs create_Ident(Dafny.ISequence<Dafny.Rune> ident) {
      return new AssignLhs_Ident(ident);
    }
    public static _IAssignLhs create_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field) {
      return new AssignLhs_Select(expr, field);
    }
    public static _IAssignLhs create_Index(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> indices) {
      return new AssignLhs_Index(expr, indices);
    }
    public bool is_Ident { get { return this is AssignLhs_Ident; } }
    public bool is_Select { get { return this is AssignLhs_Select; } }
    public bool is_Index { get { return this is AssignLhs_Index; } }
    public Dafny.ISequence<Dafny.Rune> dtor_ident {
      get {
        var d = this;
        return ((AssignLhs_Ident)d)._ident;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        if (d is AssignLhs_Select) { return ((AssignLhs_Select)d)._expr; }
        return ((AssignLhs_Index)d)._expr;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_field {
      get {
        var d = this;
        return ((AssignLhs_Select)d)._field;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_indices {
      get {
        var d = this;
        return ((AssignLhs_Index)d)._indices;
      }
    }
    public abstract _IAssignLhs DowncastClone();
  }
  public class AssignLhs_Ident : AssignLhs {
    public readonly Dafny.ISequence<Dafny.Rune> _ident;
    public AssignLhs_Ident(Dafny.ISequence<Dafny.Rune> ident) : base() {
      this._ident = ident;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Ident(_ident);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Ident;
      return oth != null && object.Equals(this._ident, oth._ident);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._ident));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Ident";
      s += "(";
      s += Dafny.Helpers.ToString(this._ident);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_Select : AssignLhs {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public AssignLhs_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field) : base() {
      this._expr = expr;
      this._field = field;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Select(_expr, _field);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Select;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_Index : AssignLhs {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<DAST._IExpression> _indices;
    public AssignLhs_Index(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> indices) : base() {
      this._expr = expr;
      this._indices = indices;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Index(_expr, _indices);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Index;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indices, oth._indices);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indices));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Index";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indices);
      s += ")";
      return s;
    }
  }

  public interface _ICollKind {
    bool is_Seq { get; }
    bool is_Array { get; }
    bool is_Map { get; }
    _ICollKind DowncastClone();
  }
  public abstract class CollKind : _ICollKind {
    public CollKind() {
    }
    private static readonly DAST._ICollKind theDefault = create_Seq();
    public static DAST._ICollKind Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ICollKind> _TYPE = new Dafny.TypeDescriptor<DAST._ICollKind>(DAST.CollKind.Default());
    public static Dafny.TypeDescriptor<DAST._ICollKind> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICollKind create_Seq() {
      return new CollKind_Seq();
    }
    public static _ICollKind create_Array() {
      return new CollKind_Array();
    }
    public static _ICollKind create_Map() {
      return new CollKind_Map();
    }
    public bool is_Seq { get { return this is CollKind_Seq; } }
    public bool is_Array { get { return this is CollKind_Array; } }
    public bool is_Map { get { return this is CollKind_Map; } }
    public static System.Collections.Generic.IEnumerable<_ICollKind> AllSingletonConstructors {
      get {
        yield return CollKind.create_Seq();
        yield return CollKind.create_Array();
        yield return CollKind.create_Map();
      }
    }
    public abstract _ICollKind DowncastClone();
  }
  public class CollKind_Seq : CollKind {
    public CollKind_Seq() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Seq();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Seq;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Seq";
      return s;
    }
  }
  public class CollKind_Array : CollKind {
    public CollKind_Array() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Array();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Array;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Array";
      return s;
    }
  }
  public class CollKind_Map : CollKind {
    public CollKind_Map() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Map();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Map;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Map";
      return s;
    }
  }

  public interface _IBinOp {
    bool is_Eq { get; }
    bool is_Div { get; }
    bool is_EuclidianDiv { get; }
    bool is_Mod { get; }
    bool is_EuclidianMod { get; }
    bool is_Lt { get; }
    bool is_LtChar { get; }
    bool is_Plus { get; }
    bool is_Minus { get; }
    bool is_Times { get; }
    bool is_BitwiseAnd { get; }
    bool is_BitwiseOr { get; }
    bool is_BitwiseXor { get; }
    bool is_BitwiseShiftRight { get; }
    bool is_BitwiseShiftLeft { get; }
    bool is_And { get; }
    bool is_Or { get; }
    bool is_In { get; }
    bool is_SeqProperPrefix { get; }
    bool is_SeqPrefix { get; }
    bool is_SetMerge { get; }
    bool is_SetSubtraction { get; }
    bool is_SetIntersection { get; }
    bool is_Subset { get; }
    bool is_ProperSubset { get; }
    bool is_SetDisjoint { get; }
    bool is_MapMerge { get; }
    bool is_MapSubtraction { get; }
    bool is_MultisetMerge { get; }
    bool is_MultisetSubtraction { get; }
    bool is_MultisetIntersection { get; }
    bool is_Submultiset { get; }
    bool is_ProperSubmultiset { get; }
    bool is_MultisetDisjoint { get; }
    bool is_Concat { get; }
    bool is_Passthrough { get; }
    bool dtor_referential { get; }
    bool dtor_nullable { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 { get; }
    _IBinOp DowncastClone();
  }
  public abstract class BinOp : _IBinOp {
    public BinOp() {
    }
    private static readonly DAST._IBinOp theDefault = create_Eq(false, false);
    public static DAST._IBinOp Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IBinOp> _TYPE = new Dafny.TypeDescriptor<DAST._IBinOp>(DAST.BinOp.Default());
    public static Dafny.TypeDescriptor<DAST._IBinOp> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IBinOp create_Eq(bool referential, bool nullable) {
      return new BinOp_Eq(referential, nullable);
    }
    public static _IBinOp create_Div() {
      return new BinOp_Div();
    }
    public static _IBinOp create_EuclidianDiv() {
      return new BinOp_EuclidianDiv();
    }
    public static _IBinOp create_Mod() {
      return new BinOp_Mod();
    }
    public static _IBinOp create_EuclidianMod() {
      return new BinOp_EuclidianMod();
    }
    public static _IBinOp create_Lt() {
      return new BinOp_Lt();
    }
    public static _IBinOp create_LtChar() {
      return new BinOp_LtChar();
    }
    public static _IBinOp create_Plus() {
      return new BinOp_Plus();
    }
    public static _IBinOp create_Minus() {
      return new BinOp_Minus();
    }
    public static _IBinOp create_Times() {
      return new BinOp_Times();
    }
    public static _IBinOp create_BitwiseAnd() {
      return new BinOp_BitwiseAnd();
    }
    public static _IBinOp create_BitwiseOr() {
      return new BinOp_BitwiseOr();
    }
    public static _IBinOp create_BitwiseXor() {
      return new BinOp_BitwiseXor();
    }
    public static _IBinOp create_BitwiseShiftRight() {
      return new BinOp_BitwiseShiftRight();
    }
    public static _IBinOp create_BitwiseShiftLeft() {
      return new BinOp_BitwiseShiftLeft();
    }
    public static _IBinOp create_And() {
      return new BinOp_And();
    }
    public static _IBinOp create_Or() {
      return new BinOp_Or();
    }
    public static _IBinOp create_In() {
      return new BinOp_In();
    }
    public static _IBinOp create_SeqProperPrefix() {
      return new BinOp_SeqProperPrefix();
    }
    public static _IBinOp create_SeqPrefix() {
      return new BinOp_SeqPrefix();
    }
    public static _IBinOp create_SetMerge() {
      return new BinOp_SetMerge();
    }
    public static _IBinOp create_SetSubtraction() {
      return new BinOp_SetSubtraction();
    }
    public static _IBinOp create_SetIntersection() {
      return new BinOp_SetIntersection();
    }
    public static _IBinOp create_Subset() {
      return new BinOp_Subset();
    }
    public static _IBinOp create_ProperSubset() {
      return new BinOp_ProperSubset();
    }
    public static _IBinOp create_SetDisjoint() {
      return new BinOp_SetDisjoint();
    }
    public static _IBinOp create_MapMerge() {
      return new BinOp_MapMerge();
    }
    public static _IBinOp create_MapSubtraction() {
      return new BinOp_MapSubtraction();
    }
    public static _IBinOp create_MultisetMerge() {
      return new BinOp_MultisetMerge();
    }
    public static _IBinOp create_MultisetSubtraction() {
      return new BinOp_MultisetSubtraction();
    }
    public static _IBinOp create_MultisetIntersection() {
      return new BinOp_MultisetIntersection();
    }
    public static _IBinOp create_Submultiset() {
      return new BinOp_Submultiset();
    }
    public static _IBinOp create_ProperSubmultiset() {
      return new BinOp_ProperSubmultiset();
    }
    public static _IBinOp create_MultisetDisjoint() {
      return new BinOp_MultisetDisjoint();
    }
    public static _IBinOp create_Concat() {
      return new BinOp_Concat();
    }
    public static _IBinOp create_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) {
      return new BinOp_Passthrough(_a0);
    }
    public bool is_Eq { get { return this is BinOp_Eq; } }
    public bool is_Div { get { return this is BinOp_Div; } }
    public bool is_EuclidianDiv { get { return this is BinOp_EuclidianDiv; } }
    public bool is_Mod { get { return this is BinOp_Mod; } }
    public bool is_EuclidianMod { get { return this is BinOp_EuclidianMod; } }
    public bool is_Lt { get { return this is BinOp_Lt; } }
    public bool is_LtChar { get { return this is BinOp_LtChar; } }
    public bool is_Plus { get { return this is BinOp_Plus; } }
    public bool is_Minus { get { return this is BinOp_Minus; } }
    public bool is_Times { get { return this is BinOp_Times; } }
    public bool is_BitwiseAnd { get { return this is BinOp_BitwiseAnd; } }
    public bool is_BitwiseOr { get { return this is BinOp_BitwiseOr; } }
    public bool is_BitwiseXor { get { return this is BinOp_BitwiseXor; } }
    public bool is_BitwiseShiftRight { get { return this is BinOp_BitwiseShiftRight; } }
    public bool is_BitwiseShiftLeft { get { return this is BinOp_BitwiseShiftLeft; } }
    public bool is_And { get { return this is BinOp_And; } }
    public bool is_Or { get { return this is BinOp_Or; } }
    public bool is_In { get { return this is BinOp_In; } }
    public bool is_SeqProperPrefix { get { return this is BinOp_SeqProperPrefix; } }
    public bool is_SeqPrefix { get { return this is BinOp_SeqPrefix; } }
    public bool is_SetMerge { get { return this is BinOp_SetMerge; } }
    public bool is_SetSubtraction { get { return this is BinOp_SetSubtraction; } }
    public bool is_SetIntersection { get { return this is BinOp_SetIntersection; } }
    public bool is_Subset { get { return this is BinOp_Subset; } }
    public bool is_ProperSubset { get { return this is BinOp_ProperSubset; } }
    public bool is_SetDisjoint { get { return this is BinOp_SetDisjoint; } }
    public bool is_MapMerge { get { return this is BinOp_MapMerge; } }
    public bool is_MapSubtraction { get { return this is BinOp_MapSubtraction; } }
    public bool is_MultisetMerge { get { return this is BinOp_MultisetMerge; } }
    public bool is_MultisetSubtraction { get { return this is BinOp_MultisetSubtraction; } }
    public bool is_MultisetIntersection { get { return this is BinOp_MultisetIntersection; } }
    public bool is_Submultiset { get { return this is BinOp_Submultiset; } }
    public bool is_ProperSubmultiset { get { return this is BinOp_ProperSubmultiset; } }
    public bool is_MultisetDisjoint { get { return this is BinOp_MultisetDisjoint; } }
    public bool is_Concat { get { return this is BinOp_Concat; } }
    public bool is_Passthrough { get { return this is BinOp_Passthrough; } }
    public bool dtor_referential {
      get {
        var d = this;
        return ((BinOp_Eq)d)._referential;
      }
    }
    public bool dtor_nullable {
      get {
        var d = this;
        return ((BinOp_Eq)d)._nullable;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 {
      get {
        var d = this;
        return ((BinOp_Passthrough)d)._a0;
      }
    }
    public abstract _IBinOp DowncastClone();
  }
  public class BinOp_Eq : BinOp {
    public readonly bool _referential;
    public readonly bool _nullable;
    public BinOp_Eq(bool referential, bool nullable) : base() {
      this._referential = referential;
      this._nullable = nullable;
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Eq(_referential, _nullable);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Eq;
      return oth != null && this._referential == oth._referential && this._nullable == oth._nullable;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._referential));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._nullable));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Eq";
      s += "(";
      s += Dafny.Helpers.ToString(this._referential);
      s += ", ";
      s += Dafny.Helpers.ToString(this._nullable);
      s += ")";
      return s;
    }
  }
  public class BinOp_Div : BinOp {
    public BinOp_Div() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Div();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Div;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Div";
      return s;
    }
  }
  public class BinOp_EuclidianDiv : BinOp {
    public BinOp_EuclidianDiv() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_EuclidianDiv();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_EuclidianDiv;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.EuclidianDiv";
      return s;
    }
  }
  public class BinOp_Mod : BinOp {
    public BinOp_Mod() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Mod();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Mod;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Mod";
      return s;
    }
  }
  public class BinOp_EuclidianMod : BinOp {
    public BinOp_EuclidianMod() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_EuclidianMod();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_EuclidianMod;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.EuclidianMod";
      return s;
    }
  }
  public class BinOp_Lt : BinOp {
    public BinOp_Lt() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Lt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Lt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Lt";
      return s;
    }
  }
  public class BinOp_LtChar : BinOp {
    public BinOp_LtChar() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_LtChar();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_LtChar;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.LtChar";
      return s;
    }
  }
  public class BinOp_Plus : BinOp {
    public BinOp_Plus() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Plus();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Plus;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Plus";
      return s;
    }
  }
  public class BinOp_Minus : BinOp {
    public BinOp_Minus() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Minus();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Minus;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Minus";
      return s;
    }
  }
  public class BinOp_Times : BinOp {
    public BinOp_Times() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Times();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Times;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Times";
      return s;
    }
  }
  public class BinOp_BitwiseAnd : BinOp {
    public BinOp_BitwiseAnd() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseAnd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseAnd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseAnd";
      return s;
    }
  }
  public class BinOp_BitwiseOr : BinOp {
    public BinOp_BitwiseOr() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseOr();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseOr;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseOr";
      return s;
    }
  }
  public class BinOp_BitwiseXor : BinOp {
    public BinOp_BitwiseXor() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseXor();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseXor;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseXor";
      return s;
    }
  }
  public class BinOp_BitwiseShiftRight : BinOp {
    public BinOp_BitwiseShiftRight() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseShiftRight();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseShiftRight;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseShiftRight";
      return s;
    }
  }
  public class BinOp_BitwiseShiftLeft : BinOp {
    public BinOp_BitwiseShiftLeft() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseShiftLeft();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseShiftLeft;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseShiftLeft";
      return s;
    }
  }
  public class BinOp_And : BinOp {
    public BinOp_And() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_And();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_And;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.And";
      return s;
    }
  }
  public class BinOp_Or : BinOp {
    public BinOp_Or() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Or();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Or;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Or";
      return s;
    }
  }
  public class BinOp_In : BinOp {
    public BinOp_In() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_In();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_In;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.In";
      return s;
    }
  }
  public class BinOp_SeqProperPrefix : BinOp {
    public BinOp_SeqProperPrefix() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SeqProperPrefix();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SeqProperPrefix;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SeqProperPrefix";
      return s;
    }
  }
  public class BinOp_SeqPrefix : BinOp {
    public BinOp_SeqPrefix() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SeqPrefix();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SeqPrefix;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SeqPrefix";
      return s;
    }
  }
  public class BinOp_SetMerge : BinOp {
    public BinOp_SetMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetMerge";
      return s;
    }
  }
  public class BinOp_SetSubtraction : BinOp {
    public BinOp_SetSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetSubtraction";
      return s;
    }
  }
  public class BinOp_SetIntersection : BinOp {
    public BinOp_SetIntersection() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetIntersection();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetIntersection;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetIntersection";
      return s;
    }
  }
  public class BinOp_Subset : BinOp {
    public BinOp_Subset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Subset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Subset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Subset";
      return s;
    }
  }
  public class BinOp_ProperSubset : BinOp {
    public BinOp_ProperSubset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_ProperSubset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_ProperSubset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.ProperSubset";
      return s;
    }
  }
  public class BinOp_SetDisjoint : BinOp {
    public BinOp_SetDisjoint() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetDisjoint();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetDisjoint;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetDisjoint";
      return s;
    }
  }
  public class BinOp_MapMerge : BinOp {
    public BinOp_MapMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MapMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MapMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MapMerge";
      return s;
    }
  }
  public class BinOp_MapSubtraction : BinOp {
    public BinOp_MapSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MapSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MapSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 27;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MapSubtraction";
      return s;
    }
  }
  public class BinOp_MultisetMerge : BinOp {
    public BinOp_MultisetMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 28;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetMerge";
      return s;
    }
  }
  public class BinOp_MultisetSubtraction : BinOp {
    public BinOp_MultisetSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 29;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetSubtraction";
      return s;
    }
  }
  public class BinOp_MultisetIntersection : BinOp {
    public BinOp_MultisetIntersection() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetIntersection();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetIntersection;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 30;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetIntersection";
      return s;
    }
  }
  public class BinOp_Submultiset : BinOp {
    public BinOp_Submultiset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Submultiset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Submultiset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 31;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Submultiset";
      return s;
    }
  }
  public class BinOp_ProperSubmultiset : BinOp {
    public BinOp_ProperSubmultiset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_ProperSubmultiset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_ProperSubmultiset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 32;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.ProperSubmultiset";
      return s;
    }
  }
  public class BinOp_MultisetDisjoint : BinOp {
    public BinOp_MultisetDisjoint() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetDisjoint();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetDisjoint;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 33;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetDisjoint";
      return s;
    }
  }
  public class BinOp_Concat : BinOp {
    public BinOp_Concat() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Concat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Concat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 34;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Concat";
      return s;
    }
  }
  public class BinOp_Passthrough : BinOp {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public BinOp_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Passthrough(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Passthrough;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 35;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Passthrough";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IExpression {
    bool is_Literal { get; }
    bool is_Ident { get; }
    bool is_Companion { get; }
    bool is_Tuple { get; }
    bool is_New { get; }
    bool is_NewArray { get; }
    bool is_DatatypeValue { get; }
    bool is_Convert { get; }
    bool is_SeqConstruct { get; }
    bool is_SeqValue { get; }
    bool is_SetValue { get; }
    bool is_MultisetValue { get; }
    bool is_MapValue { get; }
    bool is_MapBuilder { get; }
    bool is_SeqUpdate { get; }
    bool is_MapUpdate { get; }
    bool is_SetBuilder { get; }
    bool is_ToMultiset { get; }
    bool is_This { get; }
    bool is_Ite { get; }
    bool is_UnOp { get; }
    bool is_BinOp { get; }
    bool is_ArrayLen { get; }
    bool is_MapKeys { get; }
    bool is_MapValues { get; }
    bool is_Select { get; }
    bool is_SelectFn { get; }
    bool is_Index { get; }
    bool is_IndexRange { get; }
    bool is_TupleSelect { get; }
    bool is_Call { get; }
    bool is_Lambda { get; }
    bool is_BetaRedex { get; }
    bool is_IIFE { get; }
    bool is_Apply { get; }
    bool is_TypeTest { get; }
    bool is_InitializationValue { get; }
    bool is_BoolBoundedPool { get; }
    bool is_SetBoundedPool { get; }
    bool is_SeqBoundedPool { get; }
    bool is_IntRange { get; }
    DAST._ILiteral dtor_Literal_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Ident_a0 { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Companion_a0 { get; }
    Dafny.ISequence<DAST._IExpression> dtor_Tuple_a0 { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    Dafny.ISequence<DAST._IExpression> dtor_args { get; }
    Dafny.ISequence<DAST._IExpression> dtor_dims { get; }
    DAST._IType dtor_typ { get; }
    DAST._IDatatypeType dtor_datatypeType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_variant { get; }
    bool dtor_isCo { get; }
    Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> dtor_contents { get; }
    DAST._IExpression dtor_value { get; }
    DAST._IType dtor_from { get; }
    DAST._IExpression dtor_length { get; }
    DAST._IExpression dtor_elem { get; }
    Dafny.ISequence<DAST._IExpression> dtor_elements { get; }
    Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> dtor_mapElems { get; }
    DAST._IType dtor_keyType { get; }
    DAST._IType dtor_valueType { get; }
    DAST._IExpression dtor_expr { get; }
    DAST._IExpression dtor_indexExpr { get; }
    DAST._IType dtor_elemType { get; }
    DAST._IExpression dtor_ToMultiset_a0 { get; }
    DAST._IExpression dtor_cond { get; }
    DAST._IExpression dtor_thn { get; }
    DAST._IExpression dtor_els { get; }
    DAST._IUnaryOp dtor_unOp { get; }
    DAST.Format._IUnOpFormat dtor_format1 { get; }
    DAST._IBinOp dtor_op { get; }
    DAST._IExpression dtor_left { get; }
    DAST._IExpression dtor_right { get; }
    DAST.Format._IBinOpFormat dtor_format2 { get; }
    BigInteger dtor_dim { get; }
    Dafny.ISequence<Dafny.Rune> dtor_field { get; }
    bool dtor_isConstant { get; }
    bool dtor_onDatatype { get; }
    bool dtor_isStatic { get; }
    BigInteger dtor_arity { get; }
    DAST._ICollKind dtor_collKind { get; }
    Dafny.ISequence<DAST._IExpression> dtor_indices { get; }
    bool dtor_isArray { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_low { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_high { get; }
    BigInteger dtor_index { get; }
    DAST._IExpression dtor_on { get; }
    DAST._ICallName dtor_callName { get; }
    Dafny.ISequence<DAST._IFormal> dtor_params { get; }
    DAST._IType dtor_retType { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> dtor_values { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IExpression dtor_iifeBody { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_dType { get; }
    DAST._IExpression dtor_of { get; }
    bool dtor_includeDuplicates { get; }
    DAST._IExpression dtor_lo { get; }
    DAST._IExpression dtor_hi { get; }
    _IExpression DowncastClone();
  }
  public abstract class Expression : _IExpression {
    public Expression() {
    }
    private static readonly DAST._IExpression theDefault = create_Literal(DAST.Literal.Default());
    public static DAST._IExpression Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IExpression> _TYPE = new Dafny.TypeDescriptor<DAST._IExpression>(DAST.Expression.Default());
    public static Dafny.TypeDescriptor<DAST._IExpression> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IExpression create_Literal(DAST._ILiteral _a0) {
      return new Expression_Literal(_a0);
    }
    public static _IExpression create_Ident(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Expression_Ident(_a0);
    }
    public static _IExpression create_Companion(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0) {
      return new Expression_Companion(_a0);
    }
    public static _IExpression create_Tuple(Dafny.ISequence<DAST._IExpression> _a0) {
      return new Expression_Tuple(_a0);
    }
    public static _IExpression create_New(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_New(path, typeArgs, args);
    }
    public static _IExpression create_NewArray(Dafny.ISequence<DAST._IExpression> dims, DAST._IType typ) {
      return new Expression_NewArray(dims, typ);
    }
    public static _IExpression create_DatatypeValue(DAST._IDatatypeType datatypeType, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<Dafny.Rune> variant, bool isCo, Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> contents) {
      return new Expression_DatatypeValue(datatypeType, typeArgs, variant, isCo, contents);
    }
    public static _IExpression create_Convert(DAST._IExpression @value, DAST._IType @from, DAST._IType typ) {
      return new Expression_Convert(@value, @from, typ);
    }
    public static _IExpression create_SeqConstruct(DAST._IExpression length, DAST._IExpression elem) {
      return new Expression_SeqConstruct(length, elem);
    }
    public static _IExpression create_SeqValue(Dafny.ISequence<DAST._IExpression> elements, DAST._IType typ) {
      return new Expression_SeqValue(elements, typ);
    }
    public static _IExpression create_SetValue(Dafny.ISequence<DAST._IExpression> elements) {
      return new Expression_SetValue(elements);
    }
    public static _IExpression create_MultisetValue(Dafny.ISequence<DAST._IExpression> elements) {
      return new Expression_MultisetValue(elements);
    }
    public static _IExpression create_MapValue(Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> mapElems) {
      return new Expression_MapValue(mapElems);
    }
    public static _IExpression create_MapBuilder(DAST._IType keyType, DAST._IType valueType) {
      return new Expression_MapBuilder(keyType, valueType);
    }
    public static _IExpression create_SeqUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) {
      return new Expression_SeqUpdate(expr, indexExpr, @value);
    }
    public static _IExpression create_MapUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) {
      return new Expression_MapUpdate(expr, indexExpr, @value);
    }
    public static _IExpression create_SetBuilder(DAST._IType elemType) {
      return new Expression_SetBuilder(elemType);
    }
    public static _IExpression create_ToMultiset(DAST._IExpression _a0) {
      return new Expression_ToMultiset(_a0);
    }
    public static _IExpression create_This() {
      return new Expression_This();
    }
    public static _IExpression create_Ite(DAST._IExpression cond, DAST._IExpression thn, DAST._IExpression els) {
      return new Expression_Ite(cond, thn, els);
    }
    public static _IExpression create_UnOp(DAST._IUnaryOp unOp, DAST._IExpression expr, DAST.Format._IUnOpFormat format1) {
      return new Expression_UnOp(unOp, expr, format1);
    }
    public static _IExpression create_BinOp(DAST._IBinOp op, DAST._IExpression left, DAST._IExpression right, DAST.Format._IBinOpFormat format2) {
      return new Expression_BinOp(op, left, right, format2);
    }
    public static _IExpression create_ArrayLen(DAST._IExpression expr, BigInteger dim) {
      return new Expression_ArrayLen(expr, dim);
    }
    public static _IExpression create_MapKeys(DAST._IExpression expr) {
      return new Expression_MapKeys(expr);
    }
    public static _IExpression create_MapValues(DAST._IExpression expr) {
      return new Expression_MapValues(expr);
    }
    public static _IExpression create_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool isConstant, bool onDatatype) {
      return new Expression_Select(expr, field, isConstant, onDatatype);
    }
    public static _IExpression create_SelectFn(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool onDatatype, bool isStatic, BigInteger arity) {
      return new Expression_SelectFn(expr, field, onDatatype, isStatic, arity);
    }
    public static _IExpression create_Index(DAST._IExpression expr, DAST._ICollKind collKind, Dafny.ISequence<DAST._IExpression> indices) {
      return new Expression_Index(expr, collKind, indices);
    }
    public static _IExpression create_IndexRange(DAST._IExpression expr, bool isArray, Std.Wrappers._IOption<DAST._IExpression> low, Std.Wrappers._IOption<DAST._IExpression> high) {
      return new Expression_IndexRange(expr, isArray, low, high);
    }
    public static _IExpression create_TupleSelect(DAST._IExpression expr, BigInteger index) {
      return new Expression_TupleSelect(expr, index);
    }
    public static _IExpression create_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_Call(@on, callName, typeArgs, args);
    }
    public static _IExpression create_Lambda(Dafny.ISequence<DAST._IFormal> @params, DAST._IType retType, Dafny.ISequence<DAST._IStatement> body) {
      return new Expression_Lambda(@params, retType, body);
    }
    public static _IExpression create_BetaRedex(Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> values, DAST._IType retType, DAST._IExpression expr) {
      return new Expression_BetaRedex(values, retType, expr);
    }
    public static _IExpression create_IIFE(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, DAST._IExpression @value, DAST._IExpression iifeBody) {
      return new Expression_IIFE(name, typ, @value, iifeBody);
    }
    public static _IExpression create_Apply(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_Apply(expr, args);
    }
    public static _IExpression create_TypeTest(DAST._IExpression @on, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dType, Dafny.ISequence<Dafny.Rune> variant) {
      return new Expression_TypeTest(@on, dType, variant);
    }
    public static _IExpression create_InitializationValue(DAST._IType typ) {
      return new Expression_InitializationValue(typ);
    }
    public static _IExpression create_BoolBoundedPool() {
      return new Expression_BoolBoundedPool();
    }
    public static _IExpression create_SetBoundedPool(DAST._IExpression of) {
      return new Expression_SetBoundedPool(of);
    }
    public static _IExpression create_SeqBoundedPool(DAST._IExpression of, bool includeDuplicates) {
      return new Expression_SeqBoundedPool(of, includeDuplicates);
    }
    public static _IExpression create_IntRange(DAST._IExpression lo, DAST._IExpression hi) {
      return new Expression_IntRange(lo, hi);
    }
    public bool is_Literal { get { return this is Expression_Literal; } }
    public bool is_Ident { get { return this is Expression_Ident; } }
    public bool is_Companion { get { return this is Expression_Companion; } }
    public bool is_Tuple { get { return this is Expression_Tuple; } }
    public bool is_New { get { return this is Expression_New; } }
    public bool is_NewArray { get { return this is Expression_NewArray; } }
    public bool is_DatatypeValue { get { return this is Expression_DatatypeValue; } }
    public bool is_Convert { get { return this is Expression_Convert; } }
    public bool is_SeqConstruct { get { return this is Expression_SeqConstruct; } }
    public bool is_SeqValue { get { return this is Expression_SeqValue; } }
    public bool is_SetValue { get { return this is Expression_SetValue; } }
    public bool is_MultisetValue { get { return this is Expression_MultisetValue; } }
    public bool is_MapValue { get { return this is Expression_MapValue; } }
    public bool is_MapBuilder { get { return this is Expression_MapBuilder; } }
    public bool is_SeqUpdate { get { return this is Expression_SeqUpdate; } }
    public bool is_MapUpdate { get { return this is Expression_MapUpdate; } }
    public bool is_SetBuilder { get { return this is Expression_SetBuilder; } }
    public bool is_ToMultiset { get { return this is Expression_ToMultiset; } }
    public bool is_This { get { return this is Expression_This; } }
    public bool is_Ite { get { return this is Expression_Ite; } }
    public bool is_UnOp { get { return this is Expression_UnOp; } }
    public bool is_BinOp { get { return this is Expression_BinOp; } }
    public bool is_ArrayLen { get { return this is Expression_ArrayLen; } }
    public bool is_MapKeys { get { return this is Expression_MapKeys; } }
    public bool is_MapValues { get { return this is Expression_MapValues; } }
    public bool is_Select { get { return this is Expression_Select; } }
    public bool is_SelectFn { get { return this is Expression_SelectFn; } }
    public bool is_Index { get { return this is Expression_Index; } }
    public bool is_IndexRange { get { return this is Expression_IndexRange; } }
    public bool is_TupleSelect { get { return this is Expression_TupleSelect; } }
    public bool is_Call { get { return this is Expression_Call; } }
    public bool is_Lambda { get { return this is Expression_Lambda; } }
    public bool is_BetaRedex { get { return this is Expression_BetaRedex; } }
    public bool is_IIFE { get { return this is Expression_IIFE; } }
    public bool is_Apply { get { return this is Expression_Apply; } }
    public bool is_TypeTest { get { return this is Expression_TypeTest; } }
    public bool is_InitializationValue { get { return this is Expression_InitializationValue; } }
    public bool is_BoolBoundedPool { get { return this is Expression_BoolBoundedPool; } }
    public bool is_SetBoundedPool { get { return this is Expression_SetBoundedPool; } }
    public bool is_SeqBoundedPool { get { return this is Expression_SeqBoundedPool; } }
    public bool is_IntRange { get { return this is Expression_IntRange; } }
    public DAST._ILiteral dtor_Literal_a0 {
      get {
        var d = this;
        return ((Expression_Literal)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Ident_a0 {
      get {
        var d = this;
        return ((Expression_Ident)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Companion_a0 {
      get {
        var d = this;
        return ((Expression_Companion)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_Tuple_a0 {
      get {
        var d = this;
        return ((Expression_Tuple)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        var d = this;
        return ((Expression_New)d)._path;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        if (d is Expression_New) { return ((Expression_New)d)._typeArgs; }
        if (d is Expression_DatatypeValue) { return ((Expression_DatatypeValue)d)._typeArgs; }
        return ((Expression_Call)d)._typeArgs;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_args {
      get {
        var d = this;
        if (d is Expression_New) { return ((Expression_New)d)._args; }
        if (d is Expression_Call) { return ((Expression_Call)d)._args; }
        return ((Expression_Apply)d)._args;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_dims {
      get {
        var d = this;
        return ((Expression_NewArray)d)._dims;
      }
    }
    public DAST._IType dtor_typ {
      get {
        var d = this;
        if (d is Expression_NewArray) { return ((Expression_NewArray)d)._typ; }
        if (d is Expression_Convert) { return ((Expression_Convert)d)._typ; }
        if (d is Expression_SeqValue) { return ((Expression_SeqValue)d)._typ; }
        if (d is Expression_IIFE) { return ((Expression_IIFE)d)._typ; }
        return ((Expression_InitializationValue)d)._typ;
      }
    }
    public DAST._IDatatypeType dtor_datatypeType {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._datatypeType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_variant {
      get {
        var d = this;
        if (d is Expression_DatatypeValue) { return ((Expression_DatatypeValue)d)._variant; }
        return ((Expression_TypeTest)d)._variant;
      }
    }
    public bool dtor_isCo {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._isCo;
      }
    }
    public Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> dtor_contents {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._contents;
      }
    }
    public DAST._IExpression dtor_value {
      get {
        var d = this;
        if (d is Expression_Convert) { return ((Expression_Convert)d)._value; }
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._value; }
        if (d is Expression_MapUpdate) { return ((Expression_MapUpdate)d)._value; }
        return ((Expression_IIFE)d)._value;
      }
    }
    public DAST._IType dtor_from {
      get {
        var d = this;
        return ((Expression_Convert)d)._from;
      }
    }
    public DAST._IExpression dtor_length {
      get {
        var d = this;
        return ((Expression_SeqConstruct)d)._length;
      }
    }
    public DAST._IExpression dtor_elem {
      get {
        var d = this;
        return ((Expression_SeqConstruct)d)._elem;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_elements {
      get {
        var d = this;
        if (d is Expression_SeqValue) { return ((Expression_SeqValue)d)._elements; }
        if (d is Expression_SetValue) { return ((Expression_SetValue)d)._elements; }
        return ((Expression_MultisetValue)d)._elements;
      }
    }
    public Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> dtor_mapElems {
      get {
        var d = this;
        return ((Expression_MapValue)d)._mapElems;
      }
    }
    public DAST._IType dtor_keyType {
      get {
        var d = this;
        return ((Expression_MapBuilder)d)._keyType;
      }
    }
    public DAST._IType dtor_valueType {
      get {
        var d = this;
        return ((Expression_MapBuilder)d)._valueType;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._expr; }
        if (d is Expression_MapUpdate) { return ((Expression_MapUpdate)d)._expr; }
        if (d is Expression_UnOp) { return ((Expression_UnOp)d)._expr; }
        if (d is Expression_ArrayLen) { return ((Expression_ArrayLen)d)._expr; }
        if (d is Expression_MapKeys) { return ((Expression_MapKeys)d)._expr; }
        if (d is Expression_MapValues) { return ((Expression_MapValues)d)._expr; }
        if (d is Expression_Select) { return ((Expression_Select)d)._expr; }
        if (d is Expression_SelectFn) { return ((Expression_SelectFn)d)._expr; }
        if (d is Expression_Index) { return ((Expression_Index)d)._expr; }
        if (d is Expression_IndexRange) { return ((Expression_IndexRange)d)._expr; }
        if (d is Expression_TupleSelect) { return ((Expression_TupleSelect)d)._expr; }
        if (d is Expression_BetaRedex) { return ((Expression_BetaRedex)d)._expr; }
        return ((Expression_Apply)d)._expr;
      }
    }
    public DAST._IExpression dtor_indexExpr {
      get {
        var d = this;
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._indexExpr; }
        return ((Expression_MapUpdate)d)._indexExpr;
      }
    }
    public DAST._IType dtor_elemType {
      get {
        var d = this;
        return ((Expression_SetBuilder)d)._elemType;
      }
    }
    public DAST._IExpression dtor_ToMultiset_a0 {
      get {
        var d = this;
        return ((Expression_ToMultiset)d)._a0;
      }
    }
    public DAST._IExpression dtor_cond {
      get {
        var d = this;
        return ((Expression_Ite)d)._cond;
      }
    }
    public DAST._IExpression dtor_thn {
      get {
        var d = this;
        return ((Expression_Ite)d)._thn;
      }
    }
    public DAST._IExpression dtor_els {
      get {
        var d = this;
        return ((Expression_Ite)d)._els;
      }
    }
    public DAST._IUnaryOp dtor_unOp {
      get {
        var d = this;
        return ((Expression_UnOp)d)._unOp;
      }
    }
    public DAST.Format._IUnOpFormat dtor_format1 {
      get {
        var d = this;
        return ((Expression_UnOp)d)._format1;
      }
    }
    public DAST._IBinOp dtor_op {
      get {
        var d = this;
        return ((Expression_BinOp)d)._op;
      }
    }
    public DAST._IExpression dtor_left {
      get {
        var d = this;
        return ((Expression_BinOp)d)._left;
      }
    }
    public DAST._IExpression dtor_right {
      get {
        var d = this;
        return ((Expression_BinOp)d)._right;
      }
    }
    public DAST.Format._IBinOpFormat dtor_format2 {
      get {
        var d = this;
        return ((Expression_BinOp)d)._format2;
      }
    }
    public BigInteger dtor_dim {
      get {
        var d = this;
        return ((Expression_ArrayLen)d)._dim;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_field {
      get {
        var d = this;
        if (d is Expression_Select) { return ((Expression_Select)d)._field; }
        return ((Expression_SelectFn)d)._field;
      }
    }
    public bool dtor_isConstant {
      get {
        var d = this;
        return ((Expression_Select)d)._isConstant;
      }
    }
    public bool dtor_onDatatype {
      get {
        var d = this;
        if (d is Expression_Select) { return ((Expression_Select)d)._onDatatype; }
        return ((Expression_SelectFn)d)._onDatatype;
      }
    }
    public bool dtor_isStatic {
      get {
        var d = this;
        return ((Expression_SelectFn)d)._isStatic;
      }
    }
    public BigInteger dtor_arity {
      get {
        var d = this;
        return ((Expression_SelectFn)d)._arity;
      }
    }
    public DAST._ICollKind dtor_collKind {
      get {
        var d = this;
        return ((Expression_Index)d)._collKind;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_indices {
      get {
        var d = this;
        return ((Expression_Index)d)._indices;
      }
    }
    public bool dtor_isArray {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._isArray;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_low {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._low;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_high {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._high;
      }
    }
    public BigInteger dtor_index {
      get {
        var d = this;
        return ((Expression_TupleSelect)d)._index;
      }
    }
    public DAST._IExpression dtor_on {
      get {
        var d = this;
        if (d is Expression_Call) { return ((Expression_Call)d)._on; }
        return ((Expression_TypeTest)d)._on;
      }
    }
    public DAST._ICallName dtor_callName {
      get {
        var d = this;
        return ((Expression_Call)d)._callName;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_params {
      get {
        var d = this;
        return ((Expression_Lambda)d)._params;
      }
    }
    public DAST._IType dtor_retType {
      get {
        var d = this;
        if (d is Expression_Lambda) { return ((Expression_Lambda)d)._retType; }
        return ((Expression_BetaRedex)d)._retType;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        var d = this;
        return ((Expression_Lambda)d)._body;
      }
    }
    public Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> dtor_values {
      get {
        var d = this;
        return ((Expression_BetaRedex)d)._values;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((Expression_IIFE)d)._name;
      }
    }
    public DAST._IExpression dtor_iifeBody {
      get {
        var d = this;
        return ((Expression_IIFE)d)._iifeBody;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_dType {
      get {
        var d = this;
        return ((Expression_TypeTest)d)._dType;
      }
    }
    public DAST._IExpression dtor_of {
      get {
        var d = this;
        if (d is Expression_SetBoundedPool) { return ((Expression_SetBoundedPool)d)._of; }
        return ((Expression_SeqBoundedPool)d)._of;
      }
    }
    public bool dtor_includeDuplicates {
      get {
        var d = this;
        return ((Expression_SeqBoundedPool)d)._includeDuplicates;
      }
    }
    public DAST._IExpression dtor_lo {
      get {
        var d = this;
        return ((Expression_IntRange)d)._lo;
      }
    }
    public DAST._IExpression dtor_hi {
      get {
        var d = this;
        return ((Expression_IntRange)d)._hi;
      }
    }
    public abstract _IExpression DowncastClone();
  }
  public class Expression_Literal : Expression {
    public readonly DAST._ILiteral _a0;
    public Expression_Literal(DAST._ILiteral _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Literal(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Literal;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Literal";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_Ident : Expression {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Expression_Ident(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Ident(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Ident;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Ident";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expression_Companion : Expression {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0;
    public Expression_Companion(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Companion(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Companion;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Companion";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_Tuple : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _a0;
    public Expression_Tuple(Dafny.ISequence<DAST._IExpression> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Tuple(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Tuple;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_New : Expression {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_New(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._path = path;
      this._typeArgs = typeArgs;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_New(_path, _typeArgs, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_New;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.New";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_NewArray : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _dims;
    public readonly DAST._IType _typ;
    public Expression_NewArray(Dafny.ISequence<DAST._IExpression> dims, DAST._IType typ) : base() {
      this._dims = dims;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_NewArray(_dims, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_NewArray;
      return oth != null && object.Equals(this._dims, oth._dims) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dims));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.NewArray";
      s += "(";
      s += Dafny.Helpers.ToString(this._dims);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_DatatypeValue : Expression {
    public readonly DAST._IDatatypeType _datatypeType;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<Dafny.Rune> _variant;
    public readonly bool _isCo;
    public readonly Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _contents;
    public Expression_DatatypeValue(DAST._IDatatypeType datatypeType, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<Dafny.Rune> variant, bool isCo, Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> contents) : base() {
      this._datatypeType = datatypeType;
      this._typeArgs = typeArgs;
      this._variant = variant;
      this._isCo = isCo;
      this._contents = contents;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_DatatypeValue(_datatypeType, _typeArgs, _variant, _isCo, _contents);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_DatatypeValue;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._variant, oth._variant) && this._isCo == oth._isCo && object.Equals(this._contents, oth._contents);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variant));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isCo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._contents));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.DatatypeValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += this._variant.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isCo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._contents);
      s += ")";
      return s;
    }
  }
  public class Expression_Convert : Expression {
    public readonly DAST._IExpression _value;
    public readonly DAST._IType _from;
    public readonly DAST._IType _typ;
    public Expression_Convert(DAST._IExpression @value, DAST._IType @from, DAST._IType typ) : base() {
      this._value = @value;
      this._from = @from;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Convert(_value, _from, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Convert;
      return oth != null && object.Equals(this._value, oth._value) && object.Equals(this._from, oth._from) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._from));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Convert";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ", ";
      s += Dafny.Helpers.ToString(this._from);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqConstruct : Expression {
    public readonly DAST._IExpression _length;
    public readonly DAST._IExpression _elem;
    public Expression_SeqConstruct(DAST._IExpression length, DAST._IExpression elem) : base() {
      this._length = length;
      this._elem = elem;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqConstruct(_length, _elem);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqConstruct;
      return oth != null && object.Equals(this._length, oth._length) && object.Equals(this._elem, oth._elem);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._length));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elem));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqConstruct";
      s += "(";
      s += Dafny.Helpers.ToString(this._length);
      s += ", ";
      s += Dafny.Helpers.ToString(this._elem);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public readonly DAST._IType _typ;
    public Expression_SeqValue(Dafny.ISequence<DAST._IExpression> elements, DAST._IType typ) : base() {
      this._elements = elements;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqValue(_elements, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqValue;
      return oth != null && object.Equals(this._elements, oth._elements) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_SetValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public Expression_SetValue(Dafny.ISequence<DAST._IExpression> elements) : base() {
      this._elements = elements;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetValue(_elements);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetValue;
      return oth != null && object.Equals(this._elements, oth._elements);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ")";
      return s;
    }
  }
  public class Expression_MultisetValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public Expression_MultisetValue(Dafny.ISequence<DAST._IExpression> elements) : base() {
      this._elements = elements;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MultisetValue(_elements);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MultisetValue;
      return oth != null && object.Equals(this._elements, oth._elements);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MultisetValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ")";
      return s;
    }
  }
  public class Expression_MapValue : Expression {
    public readonly Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _mapElems;
    public Expression_MapValue(Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> mapElems) : base() {
      this._mapElems = mapElems;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapValue(_mapElems);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapValue;
      return oth != null && object.Equals(this._mapElems, oth._mapElems);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._mapElems));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._mapElems);
      s += ")";
      return s;
    }
  }
  public class Expression_MapBuilder : Expression {
    public readonly DAST._IType _keyType;
    public readonly DAST._IType _valueType;
    public Expression_MapBuilder(DAST._IType keyType, DAST._IType valueType) : base() {
      this._keyType = keyType;
      this._valueType = valueType;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapBuilder(_keyType, _valueType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapBuilder;
      return oth != null && object.Equals(this._keyType, oth._keyType) && object.Equals(this._valueType, oth._valueType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._keyType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._valueType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._keyType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._valueType);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqUpdate : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._IExpression _indexExpr;
    public readonly DAST._IExpression _value;
    public Expression_SeqUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) : base() {
      this._expr = expr;
      this._indexExpr = indexExpr;
      this._value = @value;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqUpdate(_expr, _indexExpr, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqUpdate;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indexExpr, oth._indexExpr) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indexExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqUpdate";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indexExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Expression_MapUpdate : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._IExpression _indexExpr;
    public readonly DAST._IExpression _value;
    public Expression_MapUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) : base() {
      this._expr = expr;
      this._indexExpr = indexExpr;
      this._value = @value;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapUpdate(_expr, _indexExpr, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapUpdate;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indexExpr, oth._indexExpr) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indexExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapUpdate";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indexExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Expression_SetBuilder : Expression {
    public readonly DAST._IType _elemType;
    public Expression_SetBuilder(DAST._IType elemType) : base() {
      this._elemType = elemType;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetBuilder(_elemType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetBuilder;
      return oth != null && object.Equals(this._elemType, oth._elemType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elemType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._elemType);
      s += ")";
      return s;
    }
  }
  public class Expression_ToMultiset : Expression {
    public readonly DAST._IExpression _a0;
    public Expression_ToMultiset(DAST._IExpression _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_ToMultiset(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_ToMultiset;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.ToMultiset";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_This : Expression {
    public Expression_This() : base() {
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_This();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_This;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.This";
      return s;
    }
  }
  public class Expression_Ite : Expression {
    public readonly DAST._IExpression _cond;
    public readonly DAST._IExpression _thn;
    public readonly DAST._IExpression _els;
    public Expression_Ite(DAST._IExpression cond, DAST._IExpression thn, DAST._IExpression els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Ite(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Ite;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Ite";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Expression_UnOp : Expression {
    public readonly DAST._IUnaryOp _unOp;
    public readonly DAST._IExpression _expr;
    public readonly DAST.Format._IUnOpFormat _format1;
    public Expression_UnOp(DAST._IUnaryOp unOp, DAST._IExpression expr, DAST.Format._IUnOpFormat format1) : base() {
      this._unOp = unOp;
      this._expr = expr;
      this._format1 = format1;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_UnOp(_unOp, _expr, _format1);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_UnOp;
      return oth != null && object.Equals(this._unOp, oth._unOp) && object.Equals(this._expr, oth._expr) && object.Equals(this._format1, oth._format1);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._unOp));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format1));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.UnOp";
      s += "(";
      s += Dafny.Helpers.ToString(this._unOp);
      s += ", ";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format1);
      s += ")";
      return s;
    }
  }
  public class Expression_BinOp : Expression {
    public readonly DAST._IBinOp _op;
    public readonly DAST._IExpression _left;
    public readonly DAST._IExpression _right;
    public readonly DAST.Format._IBinOpFormat _format2;
    public Expression_BinOp(DAST._IBinOp op, DAST._IExpression left, DAST._IExpression right, DAST.Format._IBinOpFormat format2) : base() {
      this._op = op;
      this._left = left;
      this._right = right;
      this._format2 = format2;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BinOp(_op, _left, _right, _format2);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BinOp;
      return oth != null && object.Equals(this._op, oth._op) && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right) && object.Equals(this._format2, oth._format2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BinOp";
      s += "(";
      s += Dafny.Helpers.ToString(this._op);
      s += ", ";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format2);
      s += ")";
      return s;
    }
  }
  public class Expression_ArrayLen : Expression {
    public readonly DAST._IExpression _expr;
    public readonly BigInteger _dim;
    public Expression_ArrayLen(DAST._IExpression expr, BigInteger dim) : base() {
      this._expr = expr;
      this._dim = dim;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_ArrayLen(_expr, _dim);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_ArrayLen;
      return oth != null && object.Equals(this._expr, oth._expr) && this._dim == oth._dim;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dim));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.ArrayLen";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dim);
      s += ")";
      return s;
    }
  }
  public class Expression_MapKeys : Expression {
    public readonly DAST._IExpression _expr;
    public Expression_MapKeys(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapKeys(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapKeys;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapKeys";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_MapValues : Expression {
    public readonly DAST._IExpression _expr;
    public Expression_MapValues(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapValues(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapValues;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapValues";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_Select : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public readonly bool _isConstant;
    public readonly bool _onDatatype;
    public Expression_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool isConstant, bool onDatatype) : base() {
      this._expr = expr;
      this._field = field;
      this._isConstant = isConstant;
      this._onDatatype = onDatatype;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Select(_expr, _field, _isConstant, _onDatatype);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Select;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field) && this._isConstant == oth._isConstant && this._onDatatype == oth._onDatatype;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isConstant));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onDatatype));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isConstant);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onDatatype);
      s += ")";
      return s;
    }
  }
  public class Expression_SelectFn : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public readonly bool _onDatatype;
    public readonly bool _isStatic;
    public readonly BigInteger _arity;
    public Expression_SelectFn(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool onDatatype, bool isStatic, BigInteger arity) : base() {
      this._expr = expr;
      this._field = field;
      this._onDatatype = onDatatype;
      this._isStatic = isStatic;
      this._arity = arity;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SelectFn(_expr, _field, _onDatatype, _isStatic, _arity);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SelectFn;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field) && this._onDatatype == oth._onDatatype && this._isStatic == oth._isStatic && this._arity == oth._arity;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onDatatype));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isStatic));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arity));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SelectFn";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onDatatype);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isStatic);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arity);
      s += ")";
      return s;
    }
  }
  public class Expression_Index : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._ICollKind _collKind;
    public readonly Dafny.ISequence<DAST._IExpression> _indices;
    public Expression_Index(DAST._IExpression expr, DAST._ICollKind collKind, Dafny.ISequence<DAST._IExpression> indices) : base() {
      this._expr = expr;
      this._collKind = collKind;
      this._indices = indices;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Index(_expr, _collKind, _indices);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Index;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._collKind, oth._collKind) && object.Equals(this._indices, oth._indices);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 27;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._collKind));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indices));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Index";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._collKind);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indices);
      s += ")";
      return s;
    }
  }
  public class Expression_IndexRange : Expression {
    public readonly DAST._IExpression _expr;
    public readonly bool _isArray;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _low;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _high;
    public Expression_IndexRange(DAST._IExpression expr, bool isArray, Std.Wrappers._IOption<DAST._IExpression> low, Std.Wrappers._IOption<DAST._IExpression> high) : base() {
      this._expr = expr;
      this._isArray = isArray;
      this._low = low;
      this._high = high;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IndexRange(_expr, _isArray, _low, _high);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IndexRange;
      return oth != null && object.Equals(this._expr, oth._expr) && this._isArray == oth._isArray && object.Equals(this._low, oth._low) && object.Equals(this._high, oth._high);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 28;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isArray));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._low));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._high));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IndexRange";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isArray);
      s += ", ";
      s += Dafny.Helpers.ToString(this._low);
      s += ", ";
      s += Dafny.Helpers.ToString(this._high);
      s += ")";
      return s;
    }
  }
  public class Expression_TupleSelect : Expression {
    public readonly DAST._IExpression _expr;
    public readonly BigInteger _index;
    public Expression_TupleSelect(DAST._IExpression expr, BigInteger index) : base() {
      this._expr = expr;
      this._index = index;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_TupleSelect(_expr, _index);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_TupleSelect;
      return oth != null && object.Equals(this._expr, oth._expr) && this._index == oth._index;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 29;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._index));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.TupleSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._index);
      s += ")";
      return s;
    }
  }
  public class Expression_Call : Expression {
    public readonly DAST._IExpression _on;
    public readonly DAST._ICallName _callName;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._on = @on;
      this._callName = callName;
      this._typeArgs = typeArgs;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Call(_on, _callName, _typeArgs, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Call;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._callName, oth._callName) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 30;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._callName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._callName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_Lambda : Expression {
    public readonly Dafny.ISequence<DAST._IFormal> _params;
    public readonly DAST._IType _retType;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Expression_Lambda(Dafny.ISequence<DAST._IFormal> @params, DAST._IType retType, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._params = @params;
      this._retType = retType;
      this._body = body;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Lambda(_params, _retType, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Lambda;
      return oth != null && object.Equals(this._params, oth._params) && object.Equals(this._retType, oth._retType) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 31;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._params));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._retType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Lambda";
      s += "(";
      s += Dafny.Helpers.ToString(this._params);
      s += ", ";
      s += Dafny.Helpers.ToString(this._retType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Expression_BetaRedex : Expression {
    public readonly Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _values;
    public readonly DAST._IType _retType;
    public readonly DAST._IExpression _expr;
    public Expression_BetaRedex(Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> values, DAST._IType retType, DAST._IExpression expr) : base() {
      this._values = values;
      this._retType = retType;
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BetaRedex(_values, _retType, _expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BetaRedex;
      return oth != null && object.Equals(this._values, oth._values) && object.Equals(this._retType, oth._retType) && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 32;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._values));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._retType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BetaRedex";
      s += "(";
      s += Dafny.Helpers.ToString(this._values);
      s += ", ";
      s += Dafny.Helpers.ToString(this._retType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_IIFE : Expression {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public readonly DAST._IExpression _value;
    public readonly DAST._IExpression _iifeBody;
    public Expression_IIFE(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, DAST._IExpression @value, DAST._IExpression iifeBody) : base() {
      this._name = name;
      this._typ = typ;
      this._value = @value;
      this._iifeBody = iifeBody;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IIFE(_name, _typ, _value, _iifeBody);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IIFE;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ) && object.Equals(this._value, oth._value) && object.Equals(this._iifeBody, oth._iifeBody);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 33;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._iifeBody));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IIFE";
      s += "(";
      s += Dafny.Helpers.ToString(this._name);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ", ";
      s += Dafny.Helpers.ToString(this._iifeBody);
      s += ")";
      return s;
    }
  }
  public class Expression_Apply : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_Apply(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._expr = expr;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Apply(_expr, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Apply;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 34;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Apply";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_TypeTest : Expression {
    public readonly DAST._IExpression _on;
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _dType;
    public readonly Dafny.ISequence<Dafny.Rune> _variant;
    public Expression_TypeTest(DAST._IExpression @on, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dType, Dafny.ISequence<Dafny.Rune> variant) : base() {
      this._on = @on;
      this._dType = dType;
      this._variant = variant;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_TypeTest(_on, _dType, _variant);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_TypeTest;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._dType, oth._dType) && object.Equals(this._variant, oth._variant);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 35;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variant));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.TypeTest";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dType);
      s += ", ";
      s += this._variant.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expression_InitializationValue : Expression {
    public readonly DAST._IType _typ;
    public Expression_InitializationValue(DAST._IType typ) : base() {
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_InitializationValue(_typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_InitializationValue;
      return oth != null && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 36;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.InitializationValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_BoolBoundedPool : Expression {
    public Expression_BoolBoundedPool() : base() {
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BoolBoundedPool();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BoolBoundedPool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 37;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BoolBoundedPool";
      return s;
    }
  }
  public class Expression_SetBoundedPool : Expression {
    public readonly DAST._IExpression _of;
    public Expression_SetBoundedPool(DAST._IExpression of) : base() {
      this._of = of;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetBoundedPool(_of);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetBoundedPool;
      return oth != null && object.Equals(this._of, oth._of);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 38;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._of));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetBoundedPool";
      s += "(";
      s += Dafny.Helpers.ToString(this._of);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqBoundedPool : Expression {
    public readonly DAST._IExpression _of;
    public readonly bool _includeDuplicates;
    public Expression_SeqBoundedPool(DAST._IExpression of, bool includeDuplicates) : base() {
      this._of = of;
      this._includeDuplicates = includeDuplicates;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqBoundedPool(_of, _includeDuplicates);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqBoundedPool;
      return oth != null && object.Equals(this._of, oth._of) && this._includeDuplicates == oth._includeDuplicates;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 39;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._of));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._includeDuplicates));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqBoundedPool";
      s += "(";
      s += Dafny.Helpers.ToString(this._of);
      s += ", ";
      s += Dafny.Helpers.ToString(this._includeDuplicates);
      s += ")";
      return s;
    }
  }
  public class Expression_IntRange : Expression {
    public readonly DAST._IExpression _lo;
    public readonly DAST._IExpression _hi;
    public Expression_IntRange(DAST._IExpression lo, DAST._IExpression hi) : base() {
      this._lo = lo;
      this._hi = hi;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IntRange(_lo, _hi);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IntRange;
      return oth != null && object.Equals(this._lo, oth._lo) && object.Equals(this._hi, oth._hi);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 40;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hi));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IntRange";
      s += "(";
      s += Dafny.Helpers.ToString(this._lo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hi);
      s += ")";
      return s;
    }
  }

  public interface _IUnaryOp {
    bool is_Not { get; }
    bool is_BitwiseNot { get; }
    bool is_Cardinality { get; }
    _IUnaryOp DowncastClone();
  }
  public abstract class UnaryOp : _IUnaryOp {
    public UnaryOp() {
    }
    private static readonly DAST._IUnaryOp theDefault = create_Not();
    public static DAST._IUnaryOp Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IUnaryOp> _TYPE = new Dafny.TypeDescriptor<DAST._IUnaryOp>(DAST.UnaryOp.Default());
    public static Dafny.TypeDescriptor<DAST._IUnaryOp> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnaryOp create_Not() {
      return new UnaryOp_Not();
    }
    public static _IUnaryOp create_BitwiseNot() {
      return new UnaryOp_BitwiseNot();
    }
    public static _IUnaryOp create_Cardinality() {
      return new UnaryOp_Cardinality();
    }
    public bool is_Not { get { return this is UnaryOp_Not; } }
    public bool is_BitwiseNot { get { return this is UnaryOp_BitwiseNot; } }
    public bool is_Cardinality { get { return this is UnaryOp_Cardinality; } }
    public static System.Collections.Generic.IEnumerable<_IUnaryOp> AllSingletonConstructors {
      get {
        yield return UnaryOp.create_Not();
        yield return UnaryOp.create_BitwiseNot();
        yield return UnaryOp.create_Cardinality();
      }
    }
    public abstract _IUnaryOp DowncastClone();
  }
  public class UnaryOp_Not : UnaryOp {
    public UnaryOp_Not() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_Not();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_Not;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.Not";
      return s;
    }
  }
  public class UnaryOp_BitwiseNot : UnaryOp {
    public UnaryOp_BitwiseNot() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_BitwiseNot();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_BitwiseNot;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.BitwiseNot";
      return s;
    }
  }
  public class UnaryOp_Cardinality : UnaryOp {
    public UnaryOp_Cardinality() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_Cardinality();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_Cardinality;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.Cardinality";
      return s;
    }
  }

  public interface _ILiteral {
    bool is_BoolLiteral { get; }
    bool is_IntLiteral { get; }
    bool is_DecLiteral { get; }
    bool is_StringLiteral { get; }
    bool is_CharLiteral { get; }
    bool is_Null { get; }
    bool dtor_BoolLiteral_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_IntLiteral_a0 { get; }
    DAST._IType dtor_IntLiteral_a1 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a1 { get; }
    DAST._IType dtor_DecLiteral_a2 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_StringLiteral_a0 { get; }
    Dafny.Rune dtor_CharLiteral_a0 { get; }
    DAST._IType dtor_Null_a0 { get; }
    _ILiteral DowncastClone();
  }
  public abstract class Literal : _ILiteral {
    public Literal() {
    }
    private static readonly DAST._ILiteral theDefault = create_BoolLiteral(false);
    public static DAST._ILiteral Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ILiteral> _TYPE = new Dafny.TypeDescriptor<DAST._ILiteral>(DAST.Literal.Default());
    public static Dafny.TypeDescriptor<DAST._ILiteral> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ILiteral create_BoolLiteral(bool _a0) {
      return new Literal_BoolLiteral(_a0);
    }
    public static _ILiteral create_IntLiteral(Dafny.ISequence<Dafny.Rune> _a0, DAST._IType _a1) {
      return new Literal_IntLiteral(_a0, _a1);
    }
    public static _ILiteral create_DecLiteral(Dafny.ISequence<Dafny.Rune> _a0, Dafny.ISequence<Dafny.Rune> _a1, DAST._IType _a2) {
      return new Literal_DecLiteral(_a0, _a1, _a2);
    }
    public static _ILiteral create_StringLiteral(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Literal_StringLiteral(_a0);
    }
    public static _ILiteral create_CharLiteral(Dafny.Rune _a0) {
      return new Literal_CharLiteral(_a0);
    }
    public static _ILiteral create_Null(DAST._IType _a0) {
      return new Literal_Null(_a0);
    }
    public bool is_BoolLiteral { get { return this is Literal_BoolLiteral; } }
    public bool is_IntLiteral { get { return this is Literal_IntLiteral; } }
    public bool is_DecLiteral { get { return this is Literal_DecLiteral; } }
    public bool is_StringLiteral { get { return this is Literal_StringLiteral; } }
    public bool is_CharLiteral { get { return this is Literal_CharLiteral; } }
    public bool is_Null { get { return this is Literal_Null; } }
    public bool dtor_BoolLiteral_a0 {
      get {
        var d = this;
        return ((Literal_BoolLiteral)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_IntLiteral_a0 {
      get {
        var d = this;
        return ((Literal_IntLiteral)d)._a0;
      }
    }
    public DAST._IType dtor_IntLiteral_a1 {
      get {
        var d = this;
        return ((Literal_IntLiteral)d)._a1;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a0 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a1 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a1;
      }
    }
    public DAST._IType dtor_DecLiteral_a2 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a2;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_StringLiteral_a0 {
      get {
        var d = this;
        return ((Literal_StringLiteral)d)._a0;
      }
    }
    public Dafny.Rune dtor_CharLiteral_a0 {
      get {
        var d = this;
        return ((Literal_CharLiteral)d)._a0;
      }
    }
    public DAST._IType dtor_Null_a0 {
      get {
        var d = this;
        return ((Literal_Null)d)._a0;
      }
    }
    public abstract _ILiteral DowncastClone();
  }
  public class Literal_BoolLiteral : Literal {
    public readonly bool _a0;
    public Literal_BoolLiteral(bool _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_BoolLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_BoolLiteral;
      return oth != null && this._a0 == oth._a0;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.BoolLiteral";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Literal_IntLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public readonly DAST._IType _a1;
    public Literal_IntLiteral(Dafny.ISequence<Dafny.Rune> _a0, DAST._IType _a1) : base() {
      this._a0 = _a0;
      this._a1 = _a1;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_IntLiteral(_a0, _a1);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_IntLiteral;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._a1, oth._a1);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a1));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.IntLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._a1);
      s += ")";
      return s;
    }
  }
  public class Literal_DecLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public readonly Dafny.ISequence<Dafny.Rune> _a1;
    public readonly DAST._IType _a2;
    public Literal_DecLiteral(Dafny.ISequence<Dafny.Rune> _a0, Dafny.ISequence<Dafny.Rune> _a1, DAST._IType _a2) : base() {
      this._a0 = _a0;
      this._a1 = _a1;
      this._a2 = _a2;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_DecLiteral(_a0, _a1, _a2);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_DecLiteral;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._a1, oth._a1) && object.Equals(this._a2, oth._a2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a1));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.DecLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ", ";
      s += this._a1.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._a2);
      s += ")";
      return s;
    }
  }
  public class Literal_StringLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Literal_StringLiteral(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_StringLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_StringLiteral;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.StringLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Literal_CharLiteral : Literal {
    public readonly Dafny.Rune _a0;
    public Literal_CharLiteral(Dafny.Rune _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_CharLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_CharLiteral;
      return oth != null && this._a0 == oth._a0;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.CharLiteral";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Literal_Null : Literal {
    public readonly DAST._IType _a0;
    public Literal_Null(DAST._IType _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_Null(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_Null;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.Null";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
} // end of namespace DAST

namespace D2DPrettyPrinter {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> PrettyPrint(Dafny.ISequence<DAST._IModule> d)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Microsoft.Dafny.Compilers.WrapException.Throw();
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Not Implemented Yet");
      return s;
    }
  }
} // end of namespace D2DPrettyPrinter
namespace ResolvedDesugaredExecutableDafnyPlugin {


  public partial class COMP {
    public COMP() {
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISequence<Dafny.Rune> _out14;
      _out14 = D2DPrettyPrinter.__default.PrettyPrint(p);
      s = _out14;
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      return s;
    }
  }
} // end of namespace ResolvedDesugaredExecutableDafnyPlugin
namespace RAST {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> SeqToString<__T>(Dafny.ISequence<__T> s, Func<__T, Dafny.ISequence<Dafny.Rune>> f, Dafny.ISequence<Dafny.Rune> separator)
    {
      if ((new BigInteger((s).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Helpers.Id<Func<__T, Dafny.ISequence<Dafny.Rune>>>(f)((s).Select(BigInteger.Zero)), (((new BigInteger((s).Count)) > (BigInteger.One)) ? (Dafny.Sequence<Dafny.Rune>.Concat(separator, RAST.__default.SeqToString<__T>((s).Drop(BigInteger.One), f, separator))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
      }
    }
    public static BigInteger SeqToHeight<__T>(Dafny.ISequence<__T> s, Func<__T, BigInteger> f)
    {
      if ((new BigInteger((s).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        BigInteger _828_i = Dafny.Helpers.Id<Func<__T, BigInteger>>(f)((s).Select(BigInteger.Zero));
        BigInteger _829_j = RAST.__default.SeqToHeight<__T>((s).Drop(BigInteger.One), f);
        if ((_828_i) < (_829_j)) {
          return _829_j;
        } else {
          return _828_i;
        }
      }
    }
    public static RAST._IType Rc(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rc"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Rc")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IType RefCell(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IType Vec(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("vec"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Vec")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IExpr NewVec(Dafny.ISequence<RAST._IExpr> elements) {
      return (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("vec!"))).Apply(elements);
    }
    public static RAST._IExpr Clone(RAST._IExpr underlying) {
      return (RAST.Expr.create_Select(underlying, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
    }
    public static RAST._IExpr Borrow(RAST._IExpr underlying) {
      return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), underlying, DAST.Format.UnOpFormat.create_NoFormat());
    }
    public static RAST._IExpr BorrowMut(RAST._IExpr underlying) {
      return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"), underlying, DAST.Format.UnOpFormat.create_NoFormat());
    }
    public static RAST._IType RawType(Dafny.ISequence<Dafny.Rune> content) {
      return RAST.Type.create_TIdentifier(content);
    }
    public static RAST._IType MaybePlaceboType(RAST._IType underlying) {
      return ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).Apply1(underlying);
    }
    public static Dafny.ISequence<Dafny.Rune> AddIndent(Dafny.ISequence<Dafny.Rune> raw, Dafny.ISequence<Dafny.Rune> ind)
    {
      Dafny.ISequence<Dafny.Rune> _830___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((raw).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, raw);
      } else if ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[({")).Contains((raw).Select(BigInteger.Zero))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in103 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in104 = Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND);
        raw = _in103;
        ind = _in104;
        goto TAIL_CALL_START;
      } else if (((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("})]")).Contains((raw).Select(BigInteger.Zero))) && ((new BigInteger((ind).Count)) > (new BigInteger(2)))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in105 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in106 = (ind).Take((new BigInteger((ind).Count)) - (new BigInteger(2)));
        raw = _in105;
        ind = _in106;
        goto TAIL_CALL_START;
      } else if (((raw).Select(BigInteger.Zero)) == (new Dafny.Rune('\n'))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)), ind));
        Dafny.ISequence<Dafny.Rune> _in107 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in108 = ind;
        raw = _in107;
        ind = _in108;
        goto TAIL_CALL_START;
      } else {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in109 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in110 = ind;
        raw = _in109;
        ind = _in110;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger max(BigInteger i, BigInteger j)
    {
      if ((i) < (j)) {
        return j;
      } else {
        return i;
      }
    }
    public static RAST._IExpr AssignVar(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr rhs)
    {
      return RAST.Expr.create_Assign(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name), rhs);
    }
    public static RAST._IExpr MaybePlacebo(RAST._IExpr underlying) {
      return (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from"))).Apply1(underlying);
    }
    public static RAST._IExpr RcNew(RAST._IExpr underlying) {
      return RAST.Expr.create_Call(RAST.__default.std__rc__Rc__new, Dafny.Sequence<RAST._IExpr>.FromElements(underlying));
    }
    public static RAST._IType SelfBorrowed { get {
      return RAST.Type.create_Borrowed(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfBorrowedMut { get {
      return RAST.Type.create_BorrowedMut(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType global__type { get {
      return RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    } }
    public static RAST._IType std__type { get {
      return (RAST.__default.global__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"));
    } }
    public static RAST._IType CloneTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Clone"));
    } }
    public static RAST._IType DafnyPrintTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint"));
    } }
    public static RAST._IType DefaultTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default"));
    } }
    public static RAST._IType StaticTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("'static"));
    } }
    public static RAST._IType cell__type { get {
      return (RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"));
    } }
    public static RAST._IType refcell__type { get {
      return (RAST.__default.cell__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell"));
    } }
    public static RAST._IType dafny__runtime__type { get {
      return (RAST.__default.global__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dafny_runtime"));
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("  ");
    } }
    public static RAST._IExpr self { get {
      return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"));
    } }
    public static RAST._IExpr @global { get {
      return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    } }
    public static RAST._IExpr dafny__runtime { get {
      return (RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dafny_runtime"));
    } }
    public static RAST._IExpr dafny__runtime__Set { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set"));
    } }
    public static RAST._IExpr dafny__runtime__Set__from__array { get {
      return (RAST.__default.dafny__runtime__Set).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr dafny__runtime__Sequence { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"));
    } }
    public static RAST._IExpr Sequence__from__array__owned { get {
      return (RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array_owned"));
    } }
    public static RAST._IExpr Sequence__from__array { get {
      return (RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr dafny__runtime__Multiset { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset"));
    } }
    public static RAST._IExpr dafny__runtime__Multiset__from__array { get {
      return (RAST.__default.dafny__runtime__Multiset).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr std { get {
      return (RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"));
    } }
    public static RAST._IExpr std__rc { get {
      return (RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rc"));
    } }
    public static RAST._IExpr std__rc__Rc { get {
      return (RAST.__default.std__rc).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Rc"));
    } }
    public static RAST._IExpr std__rc__Rc__new { get {
      return (RAST.__default.std__rc__Rc).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
    } }
    public static RAST._IExpr std__Default__default { get {
      return ((((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
    } }
  }

  public interface _IMod {
    bool is_Mod { get; }
    bool is_ExternMod { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._IModDecl> dtor_body { get; }
    _IMod DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class Mod : _IMod {
    public Mod() {
    }
    private static readonly RAST._IMod theDefault = create_Mod(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IModDecl>.Empty);
    public static RAST._IMod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IMod> _TYPE = new Dafny.TypeDescriptor<RAST._IMod>(RAST.Mod.Default());
    public static Dafny.TypeDescriptor<RAST._IMod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMod create_Mod(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._IModDecl> body) {
      return new Mod_Mod(name, body);
    }
    public static _IMod create_ExternMod(Dafny.ISequence<Dafny.Rune> name) {
      return new Mod_ExternMod(name);
    }
    public bool is_Mod { get { return this is Mod_Mod; } }
    public bool is_ExternMod { get { return this is Mod_ExternMod; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Mod_Mod) { return ((Mod_Mod)d)._name; }
        return ((Mod_ExternMod)d)._name;
      }
    }
    public Dafny.ISequence<RAST._IModDecl> dtor_body {
      get {
        var d = this;
        return ((Mod_Mod)d)._body;
      }
    }
    public abstract _IMod DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      RAST._IMod _source25 = this;
      if (_source25.is_Mod) {
        Dafny.ISequence<Dafny.Rune> _831___mcc_h0 = _source25.dtor_name;
        Dafny.ISequence<RAST._IModDecl> _832___mcc_h1 = _source25.dtor_body;
        Dafny.ISequence<RAST._IModDecl> _833_body = _832___mcc_h1;
        Dafny.ISequence<Dafny.Rune> _834_name = _831___mcc_h0;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod "), _834_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), RAST.__default.IND), RAST.__default.SeqToString<RAST._IModDecl>(_833_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IModDecl, Dafny.ISequence<Dafny.Rune>>>>((_835_ind) => ((System.Func<RAST._IModDecl, Dafny.ISequence<Dafny.Rune>>)((_836_modDecl) => {
          return (_836_modDecl)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_835_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else {
        Dafny.ISequence<Dafny.Rune> _837___mcc_h2 = _source25.dtor_name;
        Dafny.ISequence<Dafny.Rune> _838_name = _837___mcc_h2;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod "), _838_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      }
    }
  }
  public class Mod_Mod : Mod {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._IModDecl> _body;
    public Mod_Mod(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._IModDecl> body) : base() {
      this._name = name;
      this._body = body;
    }
    public override _IMod DowncastClone() {
      if (this is _IMod dt) { return dt; }
      return new Mod_Mod(_name, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Mod_Mod;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Mod.Mod";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Mod_ExternMod : Mod {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Mod_ExternMod(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IMod DowncastClone() {
      if (this is _IMod dt) { return dt; }
      return new Mod_ExternMod(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Mod_ExternMod;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Mod.ExternMod";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IModDecl {
    bool is_RawDecl { get; }
    bool is_ModDecl { get; }
    bool is_StructDecl { get; }
    bool is_EnumDecl { get; }
    bool is_ImplDecl { get; }
    bool is_TraitDecl { get; }
    Dafny.ISequence<Dafny.Rune> dtor_body { get; }
    RAST._IMod dtor_mod { get; }
    RAST._IStruct dtor_struct { get; }
    RAST._IEnum dtor_enum { get; }
    RAST._IImpl dtor_impl { get; }
    RAST._ITrait dtor_tr { get; }
    _IModDecl DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class ModDecl : _IModDecl {
    public ModDecl() {
    }
    private static readonly RAST._IModDecl theDefault = create_RawDecl(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IModDecl Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IModDecl> _TYPE = new Dafny.TypeDescriptor<RAST._IModDecl>(RAST.ModDecl.Default());
    public static Dafny.TypeDescriptor<RAST._IModDecl> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModDecl create_RawDecl(Dafny.ISequence<Dafny.Rune> body) {
      return new ModDecl_RawDecl(body);
    }
    public static _IModDecl create_ModDecl(RAST._IMod mod) {
      return new ModDecl_ModDecl(mod);
    }
    public static _IModDecl create_StructDecl(RAST._IStruct @struct) {
      return new ModDecl_StructDecl(@struct);
    }
    public static _IModDecl create_EnumDecl(RAST._IEnum @enum) {
      return new ModDecl_EnumDecl(@enum);
    }
    public static _IModDecl create_ImplDecl(RAST._IImpl impl) {
      return new ModDecl_ImplDecl(impl);
    }
    public static _IModDecl create_TraitDecl(RAST._ITrait tr) {
      return new ModDecl_TraitDecl(tr);
    }
    public bool is_RawDecl { get { return this is ModDecl_RawDecl; } }
    public bool is_ModDecl { get { return this is ModDecl_ModDecl; } }
    public bool is_StructDecl { get { return this is ModDecl_StructDecl; } }
    public bool is_EnumDecl { get { return this is ModDecl_EnumDecl; } }
    public bool is_ImplDecl { get { return this is ModDecl_ImplDecl; } }
    public bool is_TraitDecl { get { return this is ModDecl_TraitDecl; } }
    public Dafny.ISequence<Dafny.Rune> dtor_body {
      get {
        var d = this;
        return ((ModDecl_RawDecl)d)._body;
      }
    }
    public RAST._IMod dtor_mod {
      get {
        var d = this;
        return ((ModDecl_ModDecl)d)._mod;
      }
    }
    public RAST._IStruct dtor_struct {
      get {
        var d = this;
        return ((ModDecl_StructDecl)d)._struct;
      }
    }
    public RAST._IEnum dtor_enum {
      get {
        var d = this;
        return ((ModDecl_EnumDecl)d)._enum;
      }
    }
    public RAST._IImpl dtor_impl {
      get {
        var d = this;
        return ((ModDecl_ImplDecl)d)._impl;
      }
    }
    public RAST._ITrait dtor_tr {
      get {
        var d = this;
        return ((ModDecl_TraitDecl)d)._tr;
      }
    }
    public abstract _IModDecl DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((this).is_ModDecl) {
        return ((this).dtor_mod)._ToString(ind);
      } else if ((this).is_StructDecl) {
        return ((this).dtor_struct)._ToString(ind);
      } else if ((this).is_ImplDecl) {
        return ((this).dtor_impl)._ToString(ind);
      } else if ((this).is_EnumDecl) {
        return ((this).dtor_enum)._ToString(ind);
      } else if ((this).is_TraitDecl) {
        return ((this).dtor_tr)._ToString(ind);
      } else {
        return (this).dtor_body;
      }
    }
  }
  public class ModDecl_RawDecl : ModDecl {
    public readonly Dafny.ISequence<Dafny.Rune> _body;
    public ModDecl_RawDecl(Dafny.ISequence<Dafny.Rune> body) : base() {
      this._body = body;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_RawDecl(_body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_RawDecl;
      return oth != null && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.RawDecl";
      s += "(";
      s += this._body.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class ModDecl_ModDecl : ModDecl {
    public readonly RAST._IMod _mod;
    public ModDecl_ModDecl(RAST._IMod mod) : base() {
      this._mod = mod;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_ModDecl(_mod);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_ModDecl;
      return oth != null && object.Equals(this._mod, oth._mod);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._mod));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.ModDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._mod);
      s += ")";
      return s;
    }
  }
  public class ModDecl_StructDecl : ModDecl {
    public readonly RAST._IStruct _struct;
    public ModDecl_StructDecl(RAST._IStruct @struct) : base() {
      this._struct = @struct;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_StructDecl(_struct);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_StructDecl;
      return oth != null && object.Equals(this._struct, oth._struct);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._struct));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.StructDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._struct);
      s += ")";
      return s;
    }
  }
  public class ModDecl_EnumDecl : ModDecl {
    public readonly RAST._IEnum _enum;
    public ModDecl_EnumDecl(RAST._IEnum @enum) : base() {
      this._enum = @enum;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_EnumDecl(_enum);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_EnumDecl;
      return oth != null && object.Equals(this._enum, oth._enum);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enum));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.EnumDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._enum);
      s += ")";
      return s;
    }
  }
  public class ModDecl_ImplDecl : ModDecl {
    public readonly RAST._IImpl _impl;
    public ModDecl_ImplDecl(RAST._IImpl impl) : base() {
      this._impl = impl;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_ImplDecl(_impl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_ImplDecl;
      return oth != null && object.Equals(this._impl, oth._impl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._impl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.ImplDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._impl);
      s += ")";
      return s;
    }
  }
  public class ModDecl_TraitDecl : ModDecl {
    public readonly RAST._ITrait _tr;
    public ModDecl_TraitDecl(RAST._ITrait tr) : base() {
      this._tr = tr;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_TraitDecl(_tr);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_TraitDecl;
      return oth != null && object.Equals(this._tr, oth._tr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.TraitDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._tr);
      s += ")";
      return s;
    }
  }

  public interface _IAttribute {
    bool is_RawAttribute { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
  }
  public class Attribute : _IAttribute {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Attribute(Dafny.ISequence<Dafny.Rune> content) {
      this._content = content;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Attribute;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Attribute.RawAttribute";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAttribute create(Dafny.ISequence<Dafny.Rune> content) {
      return new Attribute(content);
    }
    public static _IAttribute create_RawAttribute(Dafny.ISequence<Dafny.Rune> content) {
      return create(content);
    }
    public bool is_RawAttribute { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> ToStringMultiple(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> ind)
    {
      return RAST.__default.SeqToString<Dafny.ISequence<Dafny.Rune>>(attributes, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>>>((_839_ind) => ((System.Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>)((_840_attribute) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_840_attribute), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), _839_ind);
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    }
  }

  public interface _IStruct {
    bool is_Struct { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IFormals dtor_fields { get; }
    _IStruct DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Struct : _IStruct {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _attributes;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IFormals _fields;
    public Struct(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFormals fields) {
      this._attributes = attributes;
      this._name = name;
      this._typeParams = typeParams;
      this._fields = fields;
    }
    public _IStruct DowncastClone() {
      if (this is _IStruct dt) { return dt; }
      return new Struct(_attributes, _name, _typeParams, _fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Struct;
      return oth != null && object.Equals(this._attributes, oth._attributes) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Struct.Struct";
      s += "(";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
    private static readonly RAST._IStruct theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Formals.Default());
    public static RAST._IStruct Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IStruct> _TYPE = new Dafny.TypeDescriptor<RAST._IStruct>(RAST.Struct.Default());
    public static Dafny.TypeDescriptor<RAST._IStruct> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IStruct create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFormals fields) {
      return new Struct(attributes, name, typeParams, fields);
    }
    public static _IStruct create_Struct(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFormals fields) {
      return create(attributes, name, typeParams, fields);
    }
    public bool is_Struct { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes {
      get {
        return this._attributes;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public RAST._IFormals dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Attribute.ToStringMultiple((this).dtor_attributes, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub struct ")), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_fields)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND), ((this).dtor_fields).is_NamedFormals)), ((((this).dtor_fields).is_NamelessFormals) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
    }
  }

  public interface _INamelessFormal {
    bool is_NamelessFormal { get; }
    RAST._IVisibility dtor_visibility { get; }
    RAST._IType dtor_tpe { get; }
    _INamelessFormal DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class NamelessFormal : _INamelessFormal {
    public readonly RAST._IVisibility _visibility;
    public readonly RAST._IType _tpe;
    public NamelessFormal(RAST._IVisibility visibility, RAST._IType tpe) {
      this._visibility = visibility;
      this._tpe = tpe;
    }
    public _INamelessFormal DowncastClone() {
      if (this is _INamelessFormal dt) { return dt; }
      return new NamelessFormal(_visibility, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.NamelessFormal;
      return oth != null && object.Equals(this._visibility, oth._visibility) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._visibility));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.NamelessFormal.NamelessFormal";
      s += "(";
      s += Dafny.Helpers.ToString(this._visibility);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
    private static readonly RAST._INamelessFormal theDefault = create(RAST.Visibility.Default(), RAST.Type.Default());
    public static RAST._INamelessFormal Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._INamelessFormal> _TYPE = new Dafny.TypeDescriptor<RAST._INamelessFormal>(RAST.NamelessFormal.Default());
    public static Dafny.TypeDescriptor<RAST._INamelessFormal> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INamelessFormal create(RAST._IVisibility visibility, RAST._IType tpe) {
      return new NamelessFormal(visibility, tpe);
    }
    public static _INamelessFormal create_NamelessFormal(RAST._IVisibility visibility, RAST._IType tpe) {
      return create(visibility, tpe);
    }
    public bool is_NamelessFormal { get { return true; } }
    public RAST._IVisibility dtor_visibility {
      get {
        return this._visibility;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_visibility, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_tpe)._ToString(ind));
    }
  }

  public interface _IFormals {
    bool is_NamedFormals { get; }
    bool is_NamelessFormals { get; }
    Dafny.ISequence<RAST._IFormal> dtor_fields { get; }
    Dafny.ISequence<RAST._INamelessFormal> dtor_types { get; }
    _IFormals DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine);
  }
  public abstract class Formals : _IFormals {
    public Formals() {
    }
    private static readonly RAST._IFormals theDefault = create_NamedFormals(Dafny.Sequence<RAST._IFormal>.Empty);
    public static RAST._IFormals Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFormals> _TYPE = new Dafny.TypeDescriptor<RAST._IFormals>(RAST.Formals.Default());
    public static Dafny.TypeDescriptor<RAST._IFormals> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFormals create_NamedFormals(Dafny.ISequence<RAST._IFormal> fields) {
      return new Formals_NamedFormals(fields);
    }
    public static _IFormals create_NamelessFormals(Dafny.ISequence<RAST._INamelessFormal> types) {
      return new Formals_NamelessFormals(types);
    }
    public bool is_NamedFormals { get { return this is Formals_NamedFormals; } }
    public bool is_NamelessFormals { get { return this is Formals_NamelessFormals; } }
    public Dafny.ISequence<RAST._IFormal> dtor_fields {
      get {
        var d = this;
        return ((Formals_NamedFormals)d)._fields;
      }
    }
    public Dafny.ISequence<RAST._INamelessFormal> dtor_types {
      get {
        var d = this;
        return ((Formals_NamelessFormals)d)._types;
      }
    }
    public abstract _IFormals DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine)
    {
      if ((this).is_NamedFormals) {
        Dafny.ISequence<Dafny.Rune> _841_separator = ((newLine) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(",\n"), ind), RAST.__default.IND)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")));
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs40 = (((newLine) && ((new BigInteger(((this).dtor_fields).Count)).Sign == 1)) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind))) : ((((new BigInteger(((this).dtor_fields).Count)).Sign == 1) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "))) : (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))))));
        Dafny.ISequence<Dafny.Rune> _842_beginSpace = _let_tmp_rhs40.dtor__0;
        Dafny.ISequence<Dafny.Rune> _843_endSpace = _let_tmp_rhs40.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {"), _842_beginSpace), RAST.__default.SeqToString<RAST._IFormal>((this).dtor_fields, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>>>((_844_ind) => ((System.Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>)((_845_field) => {
          return (_845_field)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_844_ind, RAST.__default.IND));
        })))(ind), _841_separator)), _843_endSpace), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else {
        Dafny.ISequence<Dafny.Rune> _846_separator = ((newLine) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(",\n"), ind), RAST.__default.IND)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._INamelessFormal>((this).dtor_types, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._INamelessFormal, Dafny.ISequence<Dafny.Rune>>>>((_847_ind) => ((System.Func<RAST._INamelessFormal, Dafny.ISequence<Dafny.Rune>>)((_848_t) => {
          return (_848_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_847_ind, RAST.__default.IND));
        })))(ind), _846_separator)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      }
    }
  }
  public class Formals_NamedFormals : Formals {
    public readonly Dafny.ISequence<RAST._IFormal> _fields;
    public Formals_NamedFormals(Dafny.ISequence<RAST._IFormal> fields) : base() {
      this._fields = fields;
    }
    public override _IFormals DowncastClone() {
      if (this is _IFormals dt) { return dt; }
      return new Formals_NamedFormals(_fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Formals_NamedFormals;
      return oth != null && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Formals.NamedFormals";
      s += "(";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
  }
  public class Formals_NamelessFormals : Formals {
    public readonly Dafny.ISequence<RAST._INamelessFormal> _types;
    public Formals_NamelessFormals(Dafny.ISequence<RAST._INamelessFormal> types) : base() {
      this._types = types;
    }
    public override _IFormals DowncastClone() {
      if (this is _IFormals dt) { return dt; }
      return new Formals_NamelessFormals(_types);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Formals_NamelessFormals;
      return oth != null && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Formals.NamelessFormals";
      s += "(";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
  }

  public interface _IEnumCase {
    bool is_EnumCase { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IFormals dtor_fields { get; }
    _IEnumCase DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine);
  }
  public class EnumCase : _IEnumCase {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IFormals _fields;
    public EnumCase(Dafny.ISequence<Dafny.Rune> name, RAST._IFormals fields) {
      this._name = name;
      this._fields = fields;
    }
    public _IEnumCase DowncastClone() {
      if (this is _IEnumCase dt) { return dt; }
      return new EnumCase(_name, _fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.EnumCase;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.EnumCase.EnumCase";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
    private static readonly RAST._IEnumCase theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Formals.Default());
    public static RAST._IEnumCase Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IEnumCase> _TYPE = new Dafny.TypeDescriptor<RAST._IEnumCase>(RAST.EnumCase.Default());
    public static Dafny.TypeDescriptor<RAST._IEnumCase> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnumCase create(Dafny.ISequence<Dafny.Rune> name, RAST._IFormals fields) {
      return new EnumCase(name, fields);
    }
    public static _IEnumCase create_EnumCase(Dafny.ISequence<Dafny.Rune> name, RAST._IFormals fields) {
      return create(name, fields);
    }
    public bool is_EnumCase { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public RAST._IFormals dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine)
    {
      return Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_name, ((this).dtor_fields)._ToString(ind, newLine));
    }
  }

  public interface _IEnum {
    bool is_Enum { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    Dafny.ISequence<RAST._IEnumCase> dtor_variants { get; }
    _IEnum DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Enum : _IEnum {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _attributes;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly Dafny.ISequence<RAST._IEnumCase> _variants;
    public Enum(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      this._attributes = attributes;
      this._name = name;
      this._typeParams = typeParams;
      this._variants = variants;
    }
    public _IEnum DowncastClone() {
      if (this is _IEnum dt) { return dt; }
      return new Enum(_attributes, _name, _typeParams, _variants);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Enum;
      return oth != null && object.Equals(this._attributes, oth._attributes) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._variants, oth._variants);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variants));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Enum.Enum";
      s += "(";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._variants);
      s += ")";
      return s;
    }
    private static readonly RAST._IEnum theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, Dafny.Sequence<RAST._IEnumCase>.Empty);
    public static RAST._IEnum Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IEnum> _TYPE = new Dafny.TypeDescriptor<RAST._IEnum>(RAST.Enum.Default());
    public static Dafny.TypeDescriptor<RAST._IEnum> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnum create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      return new Enum(attributes, name, typeParams, variants);
    }
    public static _IEnum create_Enum(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      return create(attributes, name, typeParams, variants);
    }
    public bool is_Enum { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes {
      get {
        return this._attributes;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<RAST._IEnumCase> dtor_variants {
      get {
        return this._variants;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Attribute.ToStringMultiple((this).dtor_attributes, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub enum ")), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IEnumCase>((this).dtor_variants, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IEnumCase, Dafny.ISequence<Dafny.Rune>>>>((_849_ind) => ((System.Func<RAST._IEnumCase, Dafny.ISequence<Dafny.Rune>>)((_850_variant) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _849_ind), RAST.__default.IND), (_850_variant)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_849_ind, RAST.__default.IND), false));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }

  public interface _ITypeParam {
    bool is_RawTypeParam { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    Dafny.ISequence<RAST._IType> dtor_constraints { get; }
    _ITypeParam DowncastClone();
    RAST._ITypeParam AddConstraints(Dafny.ISequence<RAST._IType> constraints);
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class TypeParam : _ITypeParam {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public readonly Dafny.ISequence<RAST._IType> _constraints;
    public TypeParam(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      this._content = content;
      this._constraints = constraints;
    }
    public _ITypeParam DowncastClone() {
      if (this is _ITypeParam dt) { return dt; }
      return new TypeParam(_content, _constraints);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.TypeParam;
      return oth != null && object.Equals(this._content, oth._content) && object.Equals(this._constraints, oth._constraints);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._constraints));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.TypeParam.RawTypeParam";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._constraints);
      s += ")";
      return s;
    }
    private static readonly RAST._ITypeParam theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IType>.Empty);
    public static RAST._ITypeParam Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._ITypeParam> _TYPE = new Dafny.TypeDescriptor<RAST._ITypeParam>(RAST.TypeParam.Default());
    public static Dafny.TypeDescriptor<RAST._ITypeParam> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITypeParam create(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      return new TypeParam(content, constraints);
    }
    public static _ITypeParam create_RawTypeParam(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      return create(content, constraints);
    }
    public bool is_RawTypeParam { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_constraints {
      get {
        return this._constraints;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> ToStringMultiple(Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<Dafny.Rune> ind)
    {
      if ((new BigInteger((typeParams).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), RAST.__default.SeqToString<RAST._ITypeParam>(typeParams, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._ITypeParam, Dafny.ISequence<Dafny.Rune>>>>((_851_ind) => ((System.Func<RAST._ITypeParam, Dafny.ISequence<Dafny.Rune>>)((_852_t) => {
          return (_852_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_851_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
      }
    }
    public static Dafny.ISequence<RAST._ITypeParam> AddConstraintsMultiple(Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IType> constraints)
    {
      Dafny.ISequence<RAST._ITypeParam> _853___accumulator = Dafny.Sequence<RAST._ITypeParam>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((typeParams).Count)).Sign == 0) {
        return Dafny.Sequence<RAST._ITypeParam>.Concat(_853___accumulator, Dafny.Sequence<RAST._ITypeParam>.FromElements());
      } else {
        _853___accumulator = Dafny.Sequence<RAST._ITypeParam>.Concat(_853___accumulator, Dafny.Sequence<RAST._ITypeParam>.FromElements(((typeParams).Select(BigInteger.Zero)).AddConstraints(constraints)));
        Dafny.ISequence<RAST._ITypeParam> _in111 = (typeParams).Drop(BigInteger.One);
        Dafny.ISequence<RAST._IType> _in112 = constraints;
        typeParams = _in111;
        constraints = _in112;
        goto TAIL_CALL_START;
      }
    }
    public RAST._ITypeParam AddConstraints(Dafny.ISequence<RAST._IType> constraints) {
      RAST._ITypeParam _854_dt__update__tmp_h0 = this;
      Dafny.ISequence<RAST._IType> _855_dt__update_hconstraints_h0 = Dafny.Sequence<RAST._IType>.Concat((this).dtor_constraints, constraints);
      return RAST.TypeParam.create((_854_dt__update__tmp_h0).dtor_content, _855_dt__update_hconstraints_h0);
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_content, (((new BigInteger(((this).dtor_constraints).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": "), RAST.__default.SeqToString<RAST._IType>((this).dtor_constraints, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_856_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_857_t) => {
        return (_857_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_856_ind, RAST.__default.IND));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" + "))))));
    }
  }

  public interface _IType {
    bool is_SelfOwned { get; }
    bool is_U8 { get; }
    bool is_U16 { get; }
    bool is_U32 { get; }
    bool is_U64 { get; }
    bool is_U128 { get; }
    bool is_I8 { get; }
    bool is_I16 { get; }
    bool is_I32 { get; }
    bool is_I64 { get; }
    bool is_I128 { get; }
    bool is_Bool { get; }
    bool is_TIdentifier { get; }
    bool is_TMemberSelect { get; }
    bool is_TypeApp { get; }
    bool is_Borrowed { get; }
    bool is_BorrowedMut { get; }
    bool is_ImplType { get; }
    bool is_DynType { get; }
    bool is_TupleType { get; }
    bool is_FnType { get; }
    bool is_IntersectionType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IType dtor_base { get; }
    RAST._IType dtor_baseName { get; }
    Dafny.ISequence<RAST._IType> dtor_arguments { get; }
    RAST._IType dtor_underlying { get; }
    RAST._IType dtor_returnType { get; }
    RAST._IType dtor_left { get; }
    RAST._IType dtor_right { get; }
    _IType DowncastClone();
    bool HasCopySemantics();
    Std.Wrappers._IOption<RAST._IType> ExtractMaybePlacebo();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
    RAST._IType MSel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IType Apply1(RAST._IType arg);
    RAST._IType Apply(Dafny.ISequence<RAST._IType> args);
  }
  public abstract class Type : _IType {
    public Type() {
    }
    private static readonly RAST._IType theDefault = create_SelfOwned();
    public static RAST._IType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IType> _TYPE = new Dafny.TypeDescriptor<RAST._IType>(RAST.Type.Default());
    public static Dafny.TypeDescriptor<RAST._IType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IType create_SelfOwned() {
      return new Type_SelfOwned();
    }
    public static _IType create_U8() {
      return new Type_U8();
    }
    public static _IType create_U16() {
      return new Type_U16();
    }
    public static _IType create_U32() {
      return new Type_U32();
    }
    public static _IType create_U64() {
      return new Type_U64();
    }
    public static _IType create_U128() {
      return new Type_U128();
    }
    public static _IType create_I8() {
      return new Type_I8();
    }
    public static _IType create_I16() {
      return new Type_I16();
    }
    public static _IType create_I32() {
      return new Type_I32();
    }
    public static _IType create_I64() {
      return new Type_I64();
    }
    public static _IType create_I128() {
      return new Type_I128();
    }
    public static _IType create_Bool() {
      return new Type_Bool();
    }
    public static _IType create_TIdentifier(Dafny.ISequence<Dafny.Rune> name) {
      return new Type_TIdentifier(name);
    }
    public static _IType create_TMemberSelect(RAST._IType @base, Dafny.ISequence<Dafny.Rune> name) {
      return new Type_TMemberSelect(@base, name);
    }
    public static _IType create_TypeApp(RAST._IType baseName, Dafny.ISequence<RAST._IType> arguments) {
      return new Type_TypeApp(baseName, arguments);
    }
    public static _IType create_Borrowed(RAST._IType underlying) {
      return new Type_Borrowed(underlying);
    }
    public static _IType create_BorrowedMut(RAST._IType underlying) {
      return new Type_BorrowedMut(underlying);
    }
    public static _IType create_ImplType(RAST._IType underlying) {
      return new Type_ImplType(underlying);
    }
    public static _IType create_DynType(RAST._IType underlying) {
      return new Type_DynType(underlying);
    }
    public static _IType create_TupleType(Dafny.ISequence<RAST._IType> arguments) {
      return new Type_TupleType(arguments);
    }
    public static _IType create_FnType(Dafny.ISequence<RAST._IType> arguments, RAST._IType returnType) {
      return new Type_FnType(arguments, returnType);
    }
    public static _IType create_IntersectionType(RAST._IType left, RAST._IType right) {
      return new Type_IntersectionType(left, right);
    }
    public bool is_SelfOwned { get { return this is Type_SelfOwned; } }
    public bool is_U8 { get { return this is Type_U8; } }
    public bool is_U16 { get { return this is Type_U16; } }
    public bool is_U32 { get { return this is Type_U32; } }
    public bool is_U64 { get { return this is Type_U64; } }
    public bool is_U128 { get { return this is Type_U128; } }
    public bool is_I8 { get { return this is Type_I8; } }
    public bool is_I16 { get { return this is Type_I16; } }
    public bool is_I32 { get { return this is Type_I32; } }
    public bool is_I64 { get { return this is Type_I64; } }
    public bool is_I128 { get { return this is Type_I128; } }
    public bool is_Bool { get { return this is Type_Bool; } }
    public bool is_TIdentifier { get { return this is Type_TIdentifier; } }
    public bool is_TMemberSelect { get { return this is Type_TMemberSelect; } }
    public bool is_TypeApp { get { return this is Type_TypeApp; } }
    public bool is_Borrowed { get { return this is Type_Borrowed; } }
    public bool is_BorrowedMut { get { return this is Type_BorrowedMut; } }
    public bool is_ImplType { get { return this is Type_ImplType; } }
    public bool is_DynType { get { return this is Type_DynType; } }
    public bool is_TupleType { get { return this is Type_TupleType; } }
    public bool is_FnType { get { return this is Type_FnType; } }
    public bool is_IntersectionType { get { return this is Type_IntersectionType; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Type_TIdentifier) { return ((Type_TIdentifier)d)._name; }
        return ((Type_TMemberSelect)d)._name;
      }
    }
    public RAST._IType dtor_base {
      get {
        var d = this;
        return ((Type_TMemberSelect)d)._base;
      }
    }
    public RAST._IType dtor_baseName {
      get {
        var d = this;
        return ((Type_TypeApp)d)._baseName;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_arguments {
      get {
        var d = this;
        if (d is Type_TypeApp) { return ((Type_TypeApp)d)._arguments; }
        if (d is Type_TupleType) { return ((Type_TupleType)d)._arguments; }
        return ((Type_FnType)d)._arguments;
      }
    }
    public RAST._IType dtor_underlying {
      get {
        var d = this;
        if (d is Type_Borrowed) { return ((Type_Borrowed)d)._underlying; }
        if (d is Type_BorrowedMut) { return ((Type_BorrowedMut)d)._underlying; }
        if (d is Type_ImplType) { return ((Type_ImplType)d)._underlying; }
        return ((Type_DynType)d)._underlying;
      }
    }
    public RAST._IType dtor_returnType {
      get {
        var d = this;
        return ((Type_FnType)d)._returnType;
      }
    }
    public RAST._IType dtor_left {
      get {
        var d = this;
        return ((Type_IntersectionType)d)._left;
      }
    }
    public RAST._IType dtor_right {
      get {
        var d = this;
        return ((Type_IntersectionType)d)._right;
      }
    }
    public abstract _IType DowncastClone();
    public bool HasCopySemantics() {
      return (((((((((((this).is_U8) || ((this).is_U16)) || ((this).is_U32)) || ((this).is_U64)) || ((this).is_U128)) || ((this).is_I8)) || ((this).is_I16)) || ((this).is_I32)) || ((this).is_I64)) || ((this).is_I128)) || ((this).is_Bool);
    }
    public Std.Wrappers._IOption<RAST._IType> ExtractMaybePlacebo() {
      RAST._IType _source26 = this;
      if (_source26.is_SelfOwned) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_Bool) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TIdentifier) {
        Dafny.ISequence<Dafny.Rune> _858___mcc_h0 = _source26.dtor_name;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TMemberSelect) {
        RAST._IType _859___mcc_h2 = _source26.dtor_base;
        Dafny.ISequence<Dafny.Rune> _860___mcc_h3 = _source26.dtor_name;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TypeApp) {
        RAST._IType _861___mcc_h6 = _source26.dtor_baseName;
        Dafny.ISequence<RAST._IType> _862___mcc_h7 = _source26.dtor_arguments;
        Dafny.ISequence<RAST._IType> _863_arguments = _862___mcc_h7;
        RAST._IType _864_wrapper = _861___mcc_h6;
        if (((object.Equals(_864_wrapper, RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo")))) || (object.Equals(_864_wrapper, (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))))) && ((new BigInteger((_863_arguments).Count)) == (BigInteger.One))) {
          return Std.Wrappers.Option<RAST._IType>.create_Some((_863_arguments).Select(BigInteger.Zero));
        } else {
          return Std.Wrappers.Option<RAST._IType>.create_None();
        }
      } else if (_source26.is_Borrowed) {
        RAST._IType _865___mcc_h10 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_BorrowedMut) {
        RAST._IType _866___mcc_h12 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_ImplType) {
        RAST._IType _867___mcc_h14 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_DynType) {
        RAST._IType _868___mcc_h16 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TupleType) {
        Dafny.ISequence<RAST._IType> _869___mcc_h18 = _source26.dtor_arguments;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_FnType) {
        Dafny.ISequence<RAST._IType> _870___mcc_h20 = _source26.dtor_arguments;
        RAST._IType _871___mcc_h21 = _source26.dtor_returnType;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        RAST._IType _872___mcc_h24 = _source26.dtor_left;
        RAST._IType _873___mcc_h25 = _source26.dtor_right;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      RAST._IType _source27 = this;
      if (_source27.is_SelfOwned) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self");
      } else if (_source27.is_U8) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8");
      } else if (_source27.is_U16) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16");
      } else if (_source27.is_U32) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32");
      } else if (_source27.is_U64) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64");
      } else if (_source27.is_U128) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128");
      } else if (_source27.is_I8) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8");
      } else if (_source27.is_I16) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16");
      } else if (_source27.is_I32) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32");
      } else if (_source27.is_I64) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64");
      } else if (_source27.is_I128) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128");
      } else if (_source27.is_Bool) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("bool");
      } else if (_source27.is_TIdentifier) {
        Dafny.ISequence<Dafny.Rune> _874___mcc_h0 = _source27.dtor_name;
        Dafny.ISequence<Dafny.Rune> _875_underlying = _874___mcc_h0;
        return _875_underlying;
      } else if (_source27.is_TMemberSelect) {
        RAST._IType _876___mcc_h1 = _source27.dtor_base;
        Dafny.ISequence<Dafny.Rune> _877___mcc_h2 = _source27.dtor_name;
        Dafny.ISequence<Dafny.Rune> _878_name = _877___mcc_h2;
        RAST._IType _879_underlying = _876___mcc_h1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_879_underlying)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _878_name);
      } else if (_source27.is_TypeApp) {
        RAST._IType _880___mcc_h3 = _source27.dtor_baseName;
        Dafny.ISequence<RAST._IType> _881___mcc_h4 = _source27.dtor_arguments;
        Dafny.ISequence<RAST._IType> _882_args = _881___mcc_h4;
        RAST._IType _883_base = _880___mcc_h3;
        return Dafny.Sequence<Dafny.Rune>.Concat((_883_base)._ToString(ind), (((_882_args).Equals(Dafny.Sequence<RAST._IType>.FromElements())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), RAST.__default.SeqToString<RAST._IType>(_882_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_884_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_885_arg) => {
          return (_885_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_884_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">")))));
      } else if (_source27.is_Borrowed) {
        RAST._IType _886___mcc_h5 = _source27.dtor_underlying;
        RAST._IType _887_underlying = _886___mcc_h5;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), (_887_underlying)._ToString(ind));
      } else if (_source27.is_BorrowedMut) {
        RAST._IType _888___mcc_h6 = _source27.dtor_underlying;
        RAST._IType _889_underlying = _888___mcc_h6;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut "), (_889_underlying)._ToString(ind));
      } else if (_source27.is_ImplType) {
        RAST._IType _890___mcc_h7 = _source27.dtor_underlying;
        RAST._IType _891_underlying = _890___mcc_h7;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl "), (_891_underlying)._ToString(ind));
      } else if (_source27.is_DynType) {
        RAST._IType _892___mcc_h8 = _source27.dtor_underlying;
        RAST._IType _893_underlying = _892___mcc_h8;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn "), (_893_underlying)._ToString(ind));
      } else if (_source27.is_TupleType) {
        Dafny.ISequence<RAST._IType> _894___mcc_h9 = _source27.dtor_arguments;
        Dafny.ISequence<RAST._IType> _895_args = _894___mcc_h9;
        if ((_895_args).Equals(Dafny.Sequence<RAST._IType>.FromElements())) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("()");
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._IType>(_895_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_896_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_897_arg) => {
            return (_897_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_896_ind, RAST.__default.IND));
          })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
        }
      } else if (_source27.is_FnType) {
        Dafny.ISequence<RAST._IType> _898___mcc_h10 = _source27.dtor_arguments;
        RAST._IType _899___mcc_h11 = _source27.dtor_returnType;
        RAST._IType _900_returnType = _899___mcc_h11;
        Dafny.ISequence<RAST._IType> _901_arguments = _898___mcc_h10;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Fn("), RAST.__default.SeqToString<RAST._IType>(_901_arguments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_902_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_903_arg) => {
          return (_903_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_902_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_900_returnType)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
      } else {
        RAST._IType _904___mcc_h12 = _source27.dtor_left;
        RAST._IType _905___mcc_h13 = _source27.dtor_right;
        RAST._IType _906_right = _905___mcc_h13;
        RAST._IType _907_left = _904___mcc_h12;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_907_left)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" + ")), (_906_right)._ToString(ind));
      }
    }
    public RAST._IType MSel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Type.create_TMemberSelect(this, name);
    }
    public RAST._IType Apply1(RAST._IType arg) {
      return RAST.Type.create_TypeApp(this, Dafny.Sequence<RAST._IType>.FromElements(arg));
    }
    public RAST._IType Apply(Dafny.ISequence<RAST._IType> args) {
      return RAST.Type.create_TypeApp(this, args);
    }
  }
  public class Type_SelfOwned : Type {
    public Type_SelfOwned() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_SelfOwned();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_SelfOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.SelfOwned";
      return s;
    }
  }
  public class Type_U8 : Type {
    public Type_U8() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U8();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U8";
      return s;
    }
  }
  public class Type_U16 : Type {
    public Type_U16() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U16();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U16";
      return s;
    }
  }
  public class Type_U32 : Type {
    public Type_U32() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U32();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U32";
      return s;
    }
  }
  public class Type_U64 : Type {
    public Type_U64() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U64();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U64";
      return s;
    }
  }
  public class Type_U128 : Type {
    public Type_U128() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U128();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U128";
      return s;
    }
  }
  public class Type_I8 : Type {
    public Type_I8() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I8();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I8";
      return s;
    }
  }
  public class Type_I16 : Type {
    public Type_I16() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I16();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I16";
      return s;
    }
  }
  public class Type_I32 : Type {
    public Type_I32() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I32();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I32";
      return s;
    }
  }
  public class Type_I64 : Type {
    public Type_I64() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I64();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I64";
      return s;
    }
  }
  public class Type_I128 : Type {
    public Type_I128() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I128();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I128";
      return s;
    }
  }
  public class Type_Bool : Type {
    public Type_Bool() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Bool();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Bool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Bool";
      return s;
    }
  }
  public class Type_TIdentifier : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Type_TIdentifier(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TIdentifier(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TIdentifier;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TIdentifier";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TMemberSelect : Type {
    public readonly RAST._IType _base;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Type_TMemberSelect(RAST._IType @base, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._base = @base;
      this._name = name;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TMemberSelect(_base, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TMemberSelect;
      return oth != null && object.Equals(this._base, oth._base) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._base));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TMemberSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._base);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TypeApp : Type {
    public readonly RAST._IType _baseName;
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public Type_TypeApp(RAST._IType baseName, Dafny.ISequence<RAST._IType> arguments) : base() {
      this._baseName = baseName;
      this._arguments = arguments;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TypeApp(_baseName, _arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TypeApp;
      return oth != null && object.Equals(this._baseName, oth._baseName) && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._baseName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TypeApp";
      s += "(";
      s += Dafny.Helpers.ToString(this._baseName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Type_Borrowed : Type {
    public readonly RAST._IType _underlying;
    public Type_Borrowed(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Borrowed(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Borrowed;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Borrowed";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_BorrowedMut : Type {
    public readonly RAST._IType _underlying;
    public Type_BorrowedMut(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_BorrowedMut(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_BorrowedMut;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.BorrowedMut";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_ImplType : Type {
    public readonly RAST._IType _underlying;
    public Type_ImplType(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_ImplType(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_ImplType;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.ImplType";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_DynType : Type {
    public readonly RAST._IType _underlying;
    public Type_DynType(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_DynType(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_DynType;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.DynType";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_TupleType : Type {
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public Type_TupleType(Dafny.ISequence<RAST._IType> arguments) : base() {
      this._arguments = arguments;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TupleType(_arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TupleType;
      return oth != null && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TupleType";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Type_FnType : Type {
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public readonly RAST._IType _returnType;
    public Type_FnType(Dafny.ISequence<RAST._IType> arguments, RAST._IType returnType) : base() {
      this._arguments = arguments;
      this._returnType = returnType;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_FnType(_arguments, _returnType);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_FnType;
      return oth != null && object.Equals(this._arguments, oth._arguments) && object.Equals(this._returnType, oth._returnType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._returnType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.FnType";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ", ";
      s += Dafny.Helpers.ToString(this._returnType);
      s += ")";
      return s;
    }
  }
  public class Type_IntersectionType : Type {
    public readonly RAST._IType _left;
    public readonly RAST._IType _right;
    public Type_IntersectionType(RAST._IType left, RAST._IType right) : base() {
      this._left = left;
      this._right = right;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_IntersectionType(_left, _right);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_IntersectionType;
      return oth != null && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.IntersectionType";
      s += "(";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ")";
      return s;
    }
  }

  public interface _ITrait {
    bool is_Trait { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IType dtor_tpe { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Dafny.ISequence<RAST._IImplMember> dtor_body { get; }
    _ITrait DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Trait : _ITrait {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Trait(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._where = @where;
      this._body = body;
    }
    public _ITrait DowncastClone() {
      if (this is _ITrait dt) { return dt; }
      return new Trait(_typeParams, _tpe, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Trait;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Trait.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly RAST._ITrait theDefault = create(Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Type.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IImplMember>.Empty);
    public static RAST._ITrait Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._ITrait> _TYPE = new Dafny.TypeDescriptor<RAST._ITrait>(RAST.Trait.Default());
    public static Dafny.TypeDescriptor<RAST._ITrait> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITrait create(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Trait(typeParams, tpe, @where, body);
    }
    public static _ITrait create_Trait(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return create(typeParams, tpe, @where, body);
    }
    public bool is_Trait { get { return true; } }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        return this._where;
      }
    }
    public Dafny.ISequence<RAST._IImplMember> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait "), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_tpe)._ToString(ind)), ((!((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IImplMember>((this).dtor_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>>>((_908_ind) => ((System.Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>)((_909_member) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _908_ind), RAST.__default.IND), (_909_member)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_908_ind, RAST.__default.IND)));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), (((new BigInteger(((this).dtor_body).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }

  public interface _IImpl {
    bool is_ImplFor { get; }
    bool is_Impl { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IType dtor_tpe { get; }
    RAST._IType dtor_forType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Dafny.ISequence<RAST._IImplMember> dtor_body { get; }
    _IImpl DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class Impl : _IImpl {
    public Impl() {
    }
    private static readonly RAST._IImpl theDefault = create_ImplFor(Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Type.Default(), RAST.Type.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IImplMember>.Empty);
    public static RAST._IImpl Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IImpl> _TYPE = new Dafny.TypeDescriptor<RAST._IImpl>(RAST.Impl.Default());
    public static Dafny.TypeDescriptor<RAST._IImpl> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IImpl create_ImplFor(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, RAST._IType forType, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Impl_ImplFor(typeParams, tpe, forType, @where, body);
    }
    public static _IImpl create_Impl(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Impl_Impl(typeParams, tpe, @where, body);
    }
    public bool is_ImplFor { get { return this is Impl_ImplFor; } }
    public bool is_Impl { get { return this is Impl_Impl; } }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._typeParams; }
        return ((Impl_Impl)d)._typeParams;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._tpe; }
        return ((Impl_Impl)d)._tpe;
      }
    }
    public RAST._IType dtor_forType {
      get {
        var d = this;
        return ((Impl_ImplFor)d)._forType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._where; }
        return ((Impl_Impl)d)._where;
      }
    }
    public Dafny.ISequence<RAST._IImplMember> dtor_body {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._body; }
        return ((Impl_Impl)d)._body;
      }
    }
    public abstract _IImpl DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl "), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_tpe)._ToString(ind)), (((this).is_ImplFor) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" for "), ((this).dtor_forType)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), ((!((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IImplMember>((this).dtor_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>>>((_910_ind) => ((System.Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>)((_911_member) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _910_ind), RAST.__default.IND), (_911_member)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_910_ind, RAST.__default.IND)));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), (((new BigInteger(((this).dtor_body).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }
  public class Impl_ImplFor : Impl {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly RAST._IType _forType;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Impl_ImplFor(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, RAST._IType forType, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) : base() {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._forType = forType;
      this._where = @where;
      this._body = body;
    }
    public override _IImpl DowncastClone() {
      if (this is _IImpl dt) { return dt; }
      return new Impl_ImplFor(_typeParams, _tpe, _forType, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Impl_ImplFor;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._forType, oth._forType) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._forType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Impl.ImplFor";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += Dafny.Helpers.ToString(this._forType);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Impl_Impl : Impl {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Impl_Impl(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) : base() {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._where = @where;
      this._body = body;
    }
    public override _IImpl DowncastClone() {
      if (this is _IImpl dt) { return dt; }
      return new Impl_Impl(_typeParams, _tpe, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Impl_Impl;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Impl.Impl";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }

  public interface _IImplMember {
    bool is_RawImplMember { get; }
    bool is_FnDecl { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    RAST._IVisibility dtor_pub { get; }
    RAST._IFn dtor_fun { get; }
    _IImplMember DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class ImplMember : _IImplMember {
    public ImplMember() {
    }
    private static readonly RAST._IImplMember theDefault = create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IImplMember Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IImplMember> _TYPE = new Dafny.TypeDescriptor<RAST._IImplMember>(RAST.ImplMember.Default());
    public static Dafny.TypeDescriptor<RAST._IImplMember> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IImplMember create_RawImplMember(Dafny.ISequence<Dafny.Rune> content) {
      return new ImplMember_RawImplMember(content);
    }
    public static _IImplMember create_FnDecl(RAST._IVisibility pub, RAST._IFn fun) {
      return new ImplMember_FnDecl(pub, fun);
    }
    public bool is_RawImplMember { get { return this is ImplMember_RawImplMember; } }
    public bool is_FnDecl { get { return this is ImplMember_FnDecl; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        var d = this;
        return ((ImplMember_RawImplMember)d)._content;
      }
    }
    public RAST._IVisibility dtor_pub {
      get {
        var d = this;
        return ((ImplMember_FnDecl)d)._pub;
      }
    }
    public RAST._IFn dtor_fun {
      get {
        var d = this;
        return ((ImplMember_FnDecl)d)._fun;
      }
    }
    public abstract _IImplMember DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((this).is_FnDecl) {
        return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_pub, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_fun)._ToString(ind));
      } else {
        return (this).dtor_content;
      }
    }
  }
  public class ImplMember_RawImplMember : ImplMember {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public ImplMember_RawImplMember(Dafny.ISequence<Dafny.Rune> content) : base() {
      this._content = content;
    }
    public override _IImplMember DowncastClone() {
      if (this is _IImplMember dt) { return dt; }
      return new ImplMember_RawImplMember(_content);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ImplMember_RawImplMember;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ImplMember.RawImplMember";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class ImplMember_FnDecl : ImplMember {
    public readonly RAST._IVisibility _pub;
    public readonly RAST._IFn _fun;
    public ImplMember_FnDecl(RAST._IVisibility pub, RAST._IFn fun) : base() {
      this._pub = pub;
      this._fun = fun;
    }
    public override _IImplMember DowncastClone() {
      if (this is _IImplMember dt) { return dt; }
      return new ImplMember_FnDecl(_pub, _fun);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ImplMember_FnDecl;
      return oth != null && object.Equals(this._pub, oth._pub) && object.Equals(this._fun, oth._fun);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._pub));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fun));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ImplMember.FnDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._pub);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fun);
      s += ")";
      return s;
    }
  }

  public interface _IVisibility {
    bool is_PUB { get; }
    bool is_PRIV { get; }
    _IVisibility DowncastClone();
  }
  public abstract class Visibility : _IVisibility {
    public Visibility() {
    }
    private static readonly RAST._IVisibility theDefault = create_PUB();
    public static RAST._IVisibility Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IVisibility> _TYPE = new Dafny.TypeDescriptor<RAST._IVisibility>(RAST.Visibility.Default());
    public static Dafny.TypeDescriptor<RAST._IVisibility> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IVisibility create_PUB() {
      return new Visibility_PUB();
    }
    public static _IVisibility create_PRIV() {
      return new Visibility_PRIV();
    }
    public bool is_PUB { get { return this is Visibility_PUB; } }
    public bool is_PRIV { get { return this is Visibility_PRIV; } }
    public static System.Collections.Generic.IEnumerable<_IVisibility> AllSingletonConstructors {
      get {
        yield return Visibility.create_PUB();
        yield return Visibility.create_PRIV();
      }
    }
    public abstract _IVisibility DowncastClone();
  }
  public class Visibility_PUB : Visibility {
    public Visibility_PUB() : base() {
    }
    public override _IVisibility DowncastClone() {
      if (this is _IVisibility dt) { return dt; }
      return new Visibility_PUB();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Visibility_PUB;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Visibility.PUB";
      return s;
    }
  }
  public class Visibility_PRIV : Visibility {
    public Visibility_PRIV() : base() {
    }
    public override _IVisibility DowncastClone() {
      if (this is _IVisibility dt) { return dt; }
      return new Visibility_PRIV();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Visibility_PRIV;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Visibility.PRIV";
      return s;
    }
  }

  public interface _IFormal {
    bool is_Formal { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IType dtor_tpe { get; }
    _IFormal DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Formal : _IFormal {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IType _tpe;
    public Formal(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      this._name = name;
      this._tpe = tpe;
    }
    public _IFormal DowncastClone() {
      if (this is _IFormal dt) { return dt; }
      return new Formal(_name, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Formal;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Formal.Formal";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
    private static readonly RAST._IFormal theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Type.Default());
    public static RAST._IFormal Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFormal> _TYPE = new Dafny.TypeDescriptor<RAST._IFormal>(RAST.Formal.Default());
    public static Dafny.TypeDescriptor<RAST._IFormal> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFormal create(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      return new Formal(name, tpe);
    }
    public static _IFormal create_Formal(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      return create(name, tpe);
    }
    public bool is_Formal { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) && (((this).dtor_tpe).is_SelfOwned)) {
        return (this).dtor_name;
      } else if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self"))) && (object.Equals((this).dtor_tpe, RAST.Type.create_Borrowed(RAST.Type.create_SelfOwned())))) {
        return (this).dtor_name;
      } else if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut self"))) && (object.Equals((this).dtor_tpe, RAST.Type.create_Borrowed(RAST.__default.SelfBorrowedMut)))) {
        return (this).dtor_name;
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_name, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), ((this).dtor_tpe)._ToString(ind));
      }
    }
    public static RAST._IFormal selfBorrowed { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self"), RAST.__default.SelfBorrowed);
    } }
    public static RAST._IFormal selfOwned { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_SelfOwned());
    } }
    public static RAST._IFormal selfMut { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut self"), RAST.__default.SelfBorrowedMut);
    } }
  }

  public interface _IPattern {
    bool is_RawPattern { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
  }
  public class Pattern : _IPattern {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Pattern(Dafny.ISequence<Dafny.Rune> content) {
      this._content = content;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Pattern;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Pattern.RawPattern";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPattern create(Dafny.ISequence<Dafny.Rune> content) {
      return new Pattern(content);
    }
    public static _IPattern create_RawPattern(Dafny.ISequence<Dafny.Rune> content) {
      return create(content);
    }
    public bool is_RawPattern { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> _this, Dafny.ISequence<Dafny.Rune> ind) {
      return (_this);
    }
  }

  public interface _IMatchCase {
    bool is_MatchCase { get; }
    Dafny.ISequence<Dafny.Rune> dtor_pattern { get; }
    RAST._IExpr dtor_rhs { get; }
    _IMatchCase DowncastClone();
    BigInteger Height();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class MatchCase : _IMatchCase {
    public readonly Dafny.ISequence<Dafny.Rune> _pattern;
    public readonly RAST._IExpr _rhs;
    public MatchCase(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      this._pattern = pattern;
      this._rhs = rhs;
    }
    public _IMatchCase DowncastClone() {
      if (this is _IMatchCase dt) { return dt; }
      return new MatchCase(_pattern, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.MatchCase;
      return oth != null && object.Equals(this._pattern, oth._pattern) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._pattern));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.MatchCase.MatchCase";
      s += "(";
      s += Dafny.Helpers.ToString(this._pattern);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
    private static readonly RAST._IMatchCase theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Expr.Default());
    public static RAST._IMatchCase Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IMatchCase> _TYPE = new Dafny.TypeDescriptor<RAST._IMatchCase>(RAST.MatchCase.Default());
    public static Dafny.TypeDescriptor<RAST._IMatchCase> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMatchCase create(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      return new MatchCase(pattern, rhs);
    }
    public static _IMatchCase create_MatchCase(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      return create(pattern, rhs);
    }
    public bool is_MatchCase { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_pattern {
      get {
        return this._pattern;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        return this._rhs;
      }
    }
    public BigInteger Height() {
      return (BigInteger.One) + (((this).dtor_rhs).Height());
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      Dafny.ISequence<Dafny.Rune> _912_newIndent = ((((this).dtor_rhs).is_Block) ? (ind) : (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
      Dafny.ISequence<Dafny.Rune> _913_rhsString = ((this).dtor_rhs)._ToString(_912_newIndent);
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Pattern._ToString((this).dtor_pattern, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" =>")), ((((_913_rhsString).Contains(new Dafny.Rune('\n'))) && (((_913_rhsString).Select(BigInteger.Zero)) != (new Dafny.Rune('{')))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), _913_rhsString)) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), _913_rhsString))));
    }
  }

  public interface _IAssignIdentifier {
    bool is_AssignIdentifier { get; }
    Dafny.ISequence<Dafny.Rune> dtor_identifier { get; }
    RAST._IExpr dtor_rhs { get; }
    _IAssignIdentifier DowncastClone();
    BigInteger Height();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class AssignIdentifier : _IAssignIdentifier {
    public readonly Dafny.ISequence<Dafny.Rune> _identifier;
    public readonly RAST._IExpr _rhs;
    public AssignIdentifier(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      this._identifier = identifier;
      this._rhs = rhs;
    }
    public _IAssignIdentifier DowncastClone() {
      if (this is _IAssignIdentifier dt) { return dt; }
      return new AssignIdentifier(_identifier, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.AssignIdentifier;
      return oth != null && object.Equals(this._identifier, oth._identifier) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._identifier));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.AssignIdentifier.AssignIdentifier";
      s += "(";
      s += this._identifier.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
    private static readonly RAST._IAssignIdentifier theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Expr.Default());
    public static RAST._IAssignIdentifier Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IAssignIdentifier> _TYPE = new Dafny.TypeDescriptor<RAST._IAssignIdentifier>(RAST.AssignIdentifier.Default());
    public static Dafny.TypeDescriptor<RAST._IAssignIdentifier> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssignIdentifier create(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      return new AssignIdentifier(identifier, rhs);
    }
    public static _IAssignIdentifier create_AssignIdentifier(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      return create(identifier, rhs);
    }
    public bool is_AssignIdentifier { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_identifier {
      get {
        return this._identifier;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        return this._rhs;
      }
    }
    public BigInteger Height() {
      return (BigInteger.One) + (((this).dtor_rhs).Height());
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_identifier, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), ((this).dtor_rhs)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
    }
  }

  public interface _IDeclareType {
    bool is_MUT { get; }
    bool is_CONST { get; }
    _IDeclareType DowncastClone();
  }
  public abstract class DeclareType : _IDeclareType {
    public DeclareType() {
    }
    private static readonly RAST._IDeclareType theDefault = create_MUT();
    public static RAST._IDeclareType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IDeclareType> _TYPE = new Dafny.TypeDescriptor<RAST._IDeclareType>(RAST.DeclareType.Default());
    public static Dafny.TypeDescriptor<RAST._IDeclareType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDeclareType create_MUT() {
      return new DeclareType_MUT();
    }
    public static _IDeclareType create_CONST() {
      return new DeclareType_CONST();
    }
    public bool is_MUT { get { return this is DeclareType_MUT; } }
    public bool is_CONST { get { return this is DeclareType_CONST; } }
    public static System.Collections.Generic.IEnumerable<_IDeclareType> AllSingletonConstructors {
      get {
        yield return DeclareType.create_MUT();
        yield return DeclareType.create_CONST();
      }
    }
    public abstract _IDeclareType DowncastClone();
  }
  public class DeclareType_MUT : DeclareType {
    public DeclareType_MUT() : base() {
    }
    public override _IDeclareType DowncastClone() {
      if (this is _IDeclareType dt) { return dt; }
      return new DeclareType_MUT();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.DeclareType_MUT;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.DeclareType.MUT";
      return s;
    }
  }
  public class DeclareType_CONST : DeclareType {
    public DeclareType_CONST() : base() {
    }
    public override _IDeclareType DowncastClone() {
      if (this is _IDeclareType dt) { return dt; }
      return new DeclareType_CONST();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.DeclareType_CONST;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.DeclareType.CONST";
      return s;
    }
  }

  public interface _IAssociativity {
    bool is_LeftToRight { get; }
    bool is_RightToLeft { get; }
    bool is_RequiresParentheses { get; }
    _IAssociativity DowncastClone();
  }
  public abstract class Associativity : _IAssociativity {
    public Associativity() {
    }
    private static readonly RAST._IAssociativity theDefault = create_LeftToRight();
    public static RAST._IAssociativity Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IAssociativity> _TYPE = new Dafny.TypeDescriptor<RAST._IAssociativity>(RAST.Associativity.Default());
    public static Dafny.TypeDescriptor<RAST._IAssociativity> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssociativity create_LeftToRight() {
      return new Associativity_LeftToRight();
    }
    public static _IAssociativity create_RightToLeft() {
      return new Associativity_RightToLeft();
    }
    public static _IAssociativity create_RequiresParentheses() {
      return new Associativity_RequiresParentheses();
    }
    public bool is_LeftToRight { get { return this is Associativity_LeftToRight; } }
    public bool is_RightToLeft { get { return this is Associativity_RightToLeft; } }
    public bool is_RequiresParentheses { get { return this is Associativity_RequiresParentheses; } }
    public static System.Collections.Generic.IEnumerable<_IAssociativity> AllSingletonConstructors {
      get {
        yield return Associativity.create_LeftToRight();
        yield return Associativity.create_RightToLeft();
        yield return Associativity.create_RequiresParentheses();
      }
    }
    public abstract _IAssociativity DowncastClone();
  }
  public class Associativity_LeftToRight : Associativity {
    public Associativity_LeftToRight() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_LeftToRight();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_LeftToRight;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.LeftToRight";
      return s;
    }
  }
  public class Associativity_RightToLeft : Associativity {
    public Associativity_RightToLeft() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_RightToLeft();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_RightToLeft;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.RightToLeft";
      return s;
    }
  }
  public class Associativity_RequiresParentheses : Associativity {
    public Associativity_RequiresParentheses() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_RequiresParentheses();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_RequiresParentheses;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.RequiresParentheses";
      return s;
    }
  }

  public interface _IPrintingInfo {
    bool is_UnknownPrecedence { get; }
    bool is_Precedence { get; }
    bool is_SuffixPrecedence { get; }
    bool is_PrecedenceAssociativity { get; }
    BigInteger dtor_precedence { get; }
    RAST._IAssociativity dtor_associativity { get; }
    _IPrintingInfo DowncastClone();
    bool NeedParenthesesFor(RAST._IPrintingInfo underlying);
    bool NeedParenthesesForLeft(RAST._IPrintingInfo underlying);
    bool NeedParenthesesForRight(RAST._IPrintingInfo underlying);
  }
  public abstract class PrintingInfo : _IPrintingInfo {
    public PrintingInfo() {
    }
    private static readonly RAST._IPrintingInfo theDefault = create_UnknownPrecedence();
    public static RAST._IPrintingInfo Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IPrintingInfo> _TYPE = new Dafny.TypeDescriptor<RAST._IPrintingInfo>(RAST.PrintingInfo.Default());
    public static Dafny.TypeDescriptor<RAST._IPrintingInfo> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPrintingInfo create_UnknownPrecedence() {
      return new PrintingInfo_UnknownPrecedence();
    }
    public static _IPrintingInfo create_Precedence(BigInteger precedence) {
      return new PrintingInfo_Precedence(precedence);
    }
    public static _IPrintingInfo create_SuffixPrecedence(BigInteger precedence) {
      return new PrintingInfo_SuffixPrecedence(precedence);
    }
    public static _IPrintingInfo create_PrecedenceAssociativity(BigInteger precedence, RAST._IAssociativity associativity) {
      return new PrintingInfo_PrecedenceAssociativity(precedence, associativity);
    }
    public bool is_UnknownPrecedence { get { return this is PrintingInfo_UnknownPrecedence; } }
    public bool is_Precedence { get { return this is PrintingInfo_Precedence; } }
    public bool is_SuffixPrecedence { get { return this is PrintingInfo_SuffixPrecedence; } }
    public bool is_PrecedenceAssociativity { get { return this is PrintingInfo_PrecedenceAssociativity; } }
    public BigInteger dtor_precedence {
      get {
        var d = this;
        if (d is PrintingInfo_Precedence) { return ((PrintingInfo_Precedence)d)._precedence; }
        if (d is PrintingInfo_SuffixPrecedence) { return ((PrintingInfo_SuffixPrecedence)d)._precedence; }
        return ((PrintingInfo_PrecedenceAssociativity)d)._precedence;
      }
    }
    public RAST._IAssociativity dtor_associativity {
      get {
        var d = this;
        return ((PrintingInfo_PrecedenceAssociativity)d)._associativity;
      }
    }
    public abstract _IPrintingInfo DowncastClone();
    public bool NeedParenthesesFor(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return true;
      } else {
        return false;
      }
    }
    public bool NeedParenthesesForLeft(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return ((((this).dtor_precedence) < ((underlying).dtor_precedence)) || (!((this).is_PrecedenceAssociativity))) || (!(((this).dtor_associativity).is_LeftToRight));
      } else {
        return false;
      }
    }
    public bool NeedParenthesesForRight(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return ((((this).dtor_precedence) < ((underlying).dtor_precedence)) || (!((this).is_PrecedenceAssociativity))) || (!(((this).dtor_associativity).is_RightToLeft));
      } else {
        return false;
      }
    }
  }
  public class PrintingInfo_UnknownPrecedence : PrintingInfo {
    public PrintingInfo_UnknownPrecedence() : base() {
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_UnknownPrecedence();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_UnknownPrecedence;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.UnknownPrecedence";
      return s;
    }
  }
  public class PrintingInfo_Precedence : PrintingInfo {
    public readonly BigInteger _precedence;
    public PrintingInfo_Precedence(BigInteger precedence) : base() {
      this._precedence = precedence;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_Precedence(_precedence);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_Precedence;
      return oth != null && this._precedence == oth._precedence;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.Precedence";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ")";
      return s;
    }
  }
  public class PrintingInfo_SuffixPrecedence : PrintingInfo {
    public readonly BigInteger _precedence;
    public PrintingInfo_SuffixPrecedence(BigInteger precedence) : base() {
      this._precedence = precedence;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_SuffixPrecedence(_precedence);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_SuffixPrecedence;
      return oth != null && this._precedence == oth._precedence;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.SuffixPrecedence";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ")";
      return s;
    }
  }
  public class PrintingInfo_PrecedenceAssociativity : PrintingInfo {
    public readonly BigInteger _precedence;
    public readonly RAST._IAssociativity _associativity;
    public PrintingInfo_PrecedenceAssociativity(BigInteger precedence, RAST._IAssociativity associativity) : base() {
      this._precedence = precedence;
      this._associativity = associativity;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_PrecedenceAssociativity(_precedence, _associativity);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_PrecedenceAssociativity;
      return oth != null && this._precedence == oth._precedence && object.Equals(this._associativity, oth._associativity);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._associativity));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.PrecedenceAssociativity";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ", ";
      s += Dafny.Helpers.ToString(this._associativity);
      s += ")";
      return s;
    }
  }

  public interface _IExpr {
    bool is_RawExpr { get; }
    bool is_ExprFromType { get; }
    bool is_Identifier { get; }
    bool is_Match { get; }
    bool is_StmtExpr { get; }
    bool is_Block { get; }
    bool is_StructBuild { get; }
    bool is_Tuple { get; }
    bool is_UnaryOp { get; }
    bool is_BinaryOp { get; }
    bool is_TypeAscription { get; }
    bool is_LiteralInt { get; }
    bool is_LiteralBool { get; }
    bool is_LiteralString { get; }
    bool is_DeclareVar { get; }
    bool is_Assign { get; }
    bool is_IfExpr { get; }
    bool is_Loop { get; }
    bool is_For { get; }
    bool is_Labelled { get; }
    bool is_Break { get; }
    bool is_Continue { get; }
    bool is_Return { get; }
    bool is_CallType { get; }
    bool is_Call { get; }
    bool is_Select { get; }
    bool is_MemberSelect { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    RAST._IType dtor_tpe { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IExpr dtor_matchee { get; }
    Dafny.ISequence<RAST._IMatchCase> dtor_cases { get; }
    RAST._IExpr dtor_stmt { get; }
    RAST._IExpr dtor_rhs { get; }
    RAST._IExpr dtor_underlying { get; }
    Dafny.ISequence<RAST._IAssignIdentifier> dtor_assignments { get; }
    Dafny.ISequence<RAST._IExpr> dtor_arguments { get; }
    Dafny.ISequence<Dafny.Rune> dtor_op1 { get; }
    DAST.Format._IUnOpFormat dtor_format { get; }
    Dafny.ISequence<Dafny.Rune> dtor_op2 { get; }
    RAST._IExpr dtor_left { get; }
    RAST._IExpr dtor_right { get; }
    DAST.Format._IBinOpFormat dtor_format2 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_value { get; }
    bool dtor_bvalue { get; }
    bool dtor_binary { get; }
    RAST._IDeclareType dtor_declareType { get; }
    Std.Wrappers._IOption<RAST._IType> dtor_optType { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optRhs { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    RAST._IExpr dtor_cond { get; }
    RAST._IExpr dtor_thn { get; }
    RAST._IExpr dtor_els { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optCond { get; }
    RAST._IExpr dtor_range { get; }
    RAST._IExpr dtor_body { get; }
    Dafny.ISequence<Dafny.Rune> dtor_lbl { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_optLbl { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optExpr { get; }
    RAST._IExpr dtor_obj { get; }
    Dafny.ISequence<RAST._IType> dtor_typeParameters { get; }
    _IExpr DowncastClone();
    bool NoExtraSemicolonAfter();
    RAST._IPrintingInfo printingInfo { get; }
    BigInteger Height();
    RAST._IExpr Optimize();
    bool LeftRequiresParentheses(RAST._IExpr left);
    _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> LeftParentheses(RAST._IExpr left);
    bool RightRequiresParentheses(RAST._IExpr right);
    _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> RightParentheses(RAST._IExpr right);
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> RightMostIdentifier();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
    RAST._IExpr Then(RAST._IExpr rhs2);
    RAST._IExpr Sel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IExpr MSel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IExpr ApplyType(Dafny.ISequence<RAST._IType> typeParameters);
    RAST._IExpr ApplyType1(RAST._IType typeParameter);
    RAST._IExpr Apply(Dafny.ISequence<RAST._IExpr> arguments);
    RAST._IExpr Apply1(RAST._IExpr argument);
  }
  public abstract class Expr : _IExpr {
    public Expr() {
    }
    private static readonly RAST._IExpr theDefault = create_RawExpr(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IExpr Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IExpr> _TYPE = new Dafny.TypeDescriptor<RAST._IExpr>(RAST.Expr.Default());
    public static Dafny.TypeDescriptor<RAST._IExpr> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IExpr create_RawExpr(Dafny.ISequence<Dafny.Rune> content) {
      return new Expr_RawExpr(content);
    }
    public static _IExpr create_ExprFromType(RAST._IType tpe) {
      return new Expr_ExprFromType(tpe);
    }
    public static _IExpr create_Identifier(Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_Identifier(name);
    }
    public static _IExpr create_Match(RAST._IExpr matchee, Dafny.ISequence<RAST._IMatchCase> cases) {
      return new Expr_Match(matchee, cases);
    }
    public static _IExpr create_StmtExpr(RAST._IExpr stmt, RAST._IExpr rhs) {
      return new Expr_StmtExpr(stmt, rhs);
    }
    public static _IExpr create_Block(RAST._IExpr underlying) {
      return new Expr_Block(underlying);
    }
    public static _IExpr create_StructBuild(RAST._IExpr underlying, Dafny.ISequence<RAST._IAssignIdentifier> assignments) {
      return new Expr_StructBuild(underlying, assignments);
    }
    public static _IExpr create_Tuple(Dafny.ISequence<RAST._IExpr> arguments) {
      return new Expr_Tuple(arguments);
    }
    public static _IExpr create_UnaryOp(Dafny.ISequence<Dafny.Rune> op1, RAST._IExpr underlying, DAST.Format._IUnOpFormat format) {
      return new Expr_UnaryOp(op1, underlying, format);
    }
    public static _IExpr create_BinaryOp(Dafny.ISequence<Dafny.Rune> op2, RAST._IExpr left, RAST._IExpr right, DAST.Format._IBinOpFormat format2) {
      return new Expr_BinaryOp(op2, left, right, format2);
    }
    public static _IExpr create_TypeAscription(RAST._IExpr left, RAST._IType tpe) {
      return new Expr_TypeAscription(left, tpe);
    }
    public static _IExpr create_LiteralInt(Dafny.ISequence<Dafny.Rune> @value) {
      return new Expr_LiteralInt(@value);
    }
    public static _IExpr create_LiteralBool(bool bvalue) {
      return new Expr_LiteralBool(bvalue);
    }
    public static _IExpr create_LiteralString(Dafny.ISequence<Dafny.Rune> @value, bool binary) {
      return new Expr_LiteralString(@value, binary);
    }
    public static _IExpr create_DeclareVar(RAST._IDeclareType declareType, Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<RAST._IType> optType, Std.Wrappers._IOption<RAST._IExpr> optRhs) {
      return new Expr_DeclareVar(declareType, name, optType, optRhs);
    }
    public static _IExpr create_Assign(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, RAST._IExpr rhs) {
      return new Expr_Assign(names, rhs);
    }
    public static _IExpr create_IfExpr(RAST._IExpr cond, RAST._IExpr thn, RAST._IExpr els) {
      return new Expr_IfExpr(cond, thn, els);
    }
    public static _IExpr create_Loop(Std.Wrappers._IOption<RAST._IExpr> optCond, RAST._IExpr underlying) {
      return new Expr_Loop(optCond, underlying);
    }
    public static _IExpr create_For(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr range, RAST._IExpr body) {
      return new Expr_For(name, range, body);
    }
    public static _IExpr create_Labelled(Dafny.ISequence<Dafny.Rune> lbl, RAST._IExpr underlying) {
      return new Expr_Labelled(lbl, underlying);
    }
    public static _IExpr create_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) {
      return new Expr_Break(optLbl);
    }
    public static _IExpr create_Continue(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) {
      return new Expr_Continue(optLbl);
    }
    public static _IExpr create_Return(Std.Wrappers._IOption<RAST._IExpr> optExpr) {
      return new Expr_Return(optExpr);
    }
    public static _IExpr create_CallType(RAST._IExpr obj, Dafny.ISequence<RAST._IType> typeParameters) {
      return new Expr_CallType(obj, typeParameters);
    }
    public static _IExpr create_Call(RAST._IExpr obj, Dafny.ISequence<RAST._IExpr> arguments) {
      return new Expr_Call(obj, arguments);
    }
    public static _IExpr create_Select(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_Select(obj, name);
    }
    public static _IExpr create_MemberSelect(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_MemberSelect(obj, name);
    }
    public bool is_RawExpr { get { return this is Expr_RawExpr; } }
    public bool is_ExprFromType { get { return this is Expr_ExprFromType; } }
    public bool is_Identifier { get { return this is Expr_Identifier; } }
    public bool is_Match { get { return this is Expr_Match; } }
    public bool is_StmtExpr { get { return this is Expr_StmtExpr; } }
    public bool is_Block { get { return this is Expr_Block; } }
    public bool is_StructBuild { get { return this is Expr_StructBuild; } }
    public bool is_Tuple { get { return this is Expr_Tuple; } }
    public bool is_UnaryOp { get { return this is Expr_UnaryOp; } }
    public bool is_BinaryOp { get { return this is Expr_BinaryOp; } }
    public bool is_TypeAscription { get { return this is Expr_TypeAscription; } }
    public bool is_LiteralInt { get { return this is Expr_LiteralInt; } }
    public bool is_LiteralBool { get { return this is Expr_LiteralBool; } }
    public bool is_LiteralString { get { return this is Expr_LiteralString; } }
    public bool is_DeclareVar { get { return this is Expr_DeclareVar; } }
    public bool is_Assign { get { return this is Expr_Assign; } }
    public bool is_IfExpr { get { return this is Expr_IfExpr; } }
    public bool is_Loop { get { return this is Expr_Loop; } }
    public bool is_For { get { return this is Expr_For; } }
    public bool is_Labelled { get { return this is Expr_Labelled; } }
    public bool is_Break { get { return this is Expr_Break; } }
    public bool is_Continue { get { return this is Expr_Continue; } }
    public bool is_Return { get { return this is Expr_Return; } }
    public bool is_CallType { get { return this is Expr_CallType; } }
    public bool is_Call { get { return this is Expr_Call; } }
    public bool is_Select { get { return this is Expr_Select; } }
    public bool is_MemberSelect { get { return this is Expr_MemberSelect; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        var d = this;
        return ((Expr_RawExpr)d)._content;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        var d = this;
        if (d is Expr_ExprFromType) { return ((Expr_ExprFromType)d)._tpe; }
        return ((Expr_TypeAscription)d)._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Expr_Identifier) { return ((Expr_Identifier)d)._name; }
        if (d is Expr_DeclareVar) { return ((Expr_DeclareVar)d)._name; }
        if (d is Expr_For) { return ((Expr_For)d)._name; }
        if (d is Expr_Select) { return ((Expr_Select)d)._name; }
        return ((Expr_MemberSelect)d)._name;
      }
    }
    public RAST._IExpr dtor_matchee {
      get {
        var d = this;
        return ((Expr_Match)d)._matchee;
      }
    }
    public Dafny.ISequence<RAST._IMatchCase> dtor_cases {
      get {
        var d = this;
        return ((Expr_Match)d)._cases;
      }
    }
    public RAST._IExpr dtor_stmt {
      get {
        var d = this;
        return ((Expr_StmtExpr)d)._stmt;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        var d = this;
        if (d is Expr_StmtExpr) { return ((Expr_StmtExpr)d)._rhs; }
        return ((Expr_Assign)d)._rhs;
      }
    }
    public RAST._IExpr dtor_underlying {
      get {
        var d = this;
        if (d is Expr_Block) { return ((Expr_Block)d)._underlying; }
        if (d is Expr_StructBuild) { return ((Expr_StructBuild)d)._underlying; }
        if (d is Expr_UnaryOp) { return ((Expr_UnaryOp)d)._underlying; }
        if (d is Expr_Loop) { return ((Expr_Loop)d)._underlying; }
        return ((Expr_Labelled)d)._underlying;
      }
    }
    public Dafny.ISequence<RAST._IAssignIdentifier> dtor_assignments {
      get {
        var d = this;
        return ((Expr_StructBuild)d)._assignments;
      }
    }
    public Dafny.ISequence<RAST._IExpr> dtor_arguments {
      get {
        var d = this;
        if (d is Expr_Tuple) { return ((Expr_Tuple)d)._arguments; }
        return ((Expr_Call)d)._arguments;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_op1 {
      get {
        var d = this;
        return ((Expr_UnaryOp)d)._op1;
      }
    }
    public DAST.Format._IUnOpFormat dtor_format {
      get {
        var d = this;
        return ((Expr_UnaryOp)d)._format;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_op2 {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._op2;
      }
    }
    public RAST._IExpr dtor_left {
      get {
        var d = this;
        if (d is Expr_BinaryOp) { return ((Expr_BinaryOp)d)._left; }
        return ((Expr_TypeAscription)d)._left;
      }
    }
    public RAST._IExpr dtor_right {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._right;
      }
    }
    public DAST.Format._IBinOpFormat dtor_format2 {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._format2;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_value {
      get {
        var d = this;
        if (d is Expr_LiteralInt) { return ((Expr_LiteralInt)d)._value; }
        return ((Expr_LiteralString)d)._value;
      }
    }
    public bool dtor_bvalue {
      get {
        var d = this;
        return ((Expr_LiteralBool)d)._bvalue;
      }
    }
    public bool dtor_binary {
      get {
        var d = this;
        return ((Expr_LiteralString)d)._binary;
      }
    }
    public RAST._IDeclareType dtor_declareType {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._declareType;
      }
    }
    public Std.Wrappers._IOption<RAST._IType> dtor_optType {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._optType;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optRhs {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._optRhs;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        var d = this;
        return ((Expr_Assign)d)._names;
      }
    }
    public RAST._IExpr dtor_cond {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._cond;
      }
    }
    public RAST._IExpr dtor_thn {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._thn;
      }
    }
    public RAST._IExpr dtor_els {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._els;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optCond {
      get {
        var d = this;
        return ((Expr_Loop)d)._optCond;
      }
    }
    public RAST._IExpr dtor_range {
      get {
        var d = this;
        return ((Expr_For)d)._range;
      }
    }
    public RAST._IExpr dtor_body {
      get {
        var d = this;
        return ((Expr_For)d)._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_lbl {
      get {
        var d = this;
        return ((Expr_Labelled)d)._lbl;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_optLbl {
      get {
        var d = this;
        if (d is Expr_Break) { return ((Expr_Break)d)._optLbl; }
        return ((Expr_Continue)d)._optLbl;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optExpr {
      get {
        var d = this;
        return ((Expr_Return)d)._optExpr;
      }
    }
    public RAST._IExpr dtor_obj {
      get {
        var d = this;
        if (d is Expr_CallType) { return ((Expr_CallType)d)._obj; }
        if (d is Expr_Call) { return ((Expr_Call)d)._obj; }
        if (d is Expr_Select) { return ((Expr_Select)d)._obj; }
        return ((Expr_MemberSelect)d)._obj;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_typeParameters {
      get {
        var d = this;
        return ((Expr_CallType)d)._typeParameters;
      }
    }
    public abstract _IExpr DowncastClone();
    public bool NoExtraSemicolonAfter() {
      return ((((((this).is_DeclareVar) || ((this).is_Assign)) || ((this).is_Break)) || ((this).is_Continue)) || ((this).is_Return)) || ((((this).is_RawExpr) && ((new BigInteger(((this).dtor_content).Count)).Sign == 1)) && ((((this).dtor_content).Select((new BigInteger(((this).dtor_content).Count)) - (BigInteger.One))) == (new Dafny.Rune(';'))));
    }
    public BigInteger Height() {
      RAST._IExpr _source28 = this;
      if (_source28.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _914___mcc_h0 = _source28.dtor_content;
        return BigInteger.One;
      } else if (_source28.is_ExprFromType) {
        RAST._IType _915___mcc_h2 = _source28.dtor_tpe;
        return BigInteger.One;
      } else if (_source28.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _916___mcc_h4 = _source28.dtor_name;
        return BigInteger.One;
      } else if (_source28.is_Match) {
        RAST._IExpr _917___mcc_h6 = _source28.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _918___mcc_h7 = _source28.dtor_cases;
        Dafny.ISequence<RAST._IMatchCase> _919_cases = _918___mcc_h7;
        RAST._IExpr _920_matchee = _917___mcc_h6;
        return (BigInteger.One) + (RAST.__default.max((_920_matchee).Height(), RAST.__default.SeqToHeight<RAST._IMatchCase>(_919_cases, ((System.Func<RAST._IMatchCase, BigInteger>)((_921_oneCase) => {
          return (_921_oneCase).Height();
        })))));
      } else if (_source28.is_StmtExpr) {
        RAST._IExpr _922___mcc_h10 = _source28.dtor_stmt;
        RAST._IExpr _923___mcc_h11 = _source28.dtor_rhs;
        RAST._IExpr _924_rhs = _923___mcc_h11;
        RAST._IExpr _925_stmt = _922___mcc_h10;
        BigInteger _926_default = (BigInteger.One) + (RAST.__default.max((_925_stmt).Height(), (_924_rhs).Height()));
        RAST._IExpr _source29 = this;
        if (_source29.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _927___mcc_h102 = _source29.dtor_content;
          return _926_default;
        } else if (_source29.is_ExprFromType) {
          RAST._IType _928___mcc_h104 = _source29.dtor_tpe;
          return _926_default;
        } else if (_source29.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _929___mcc_h106 = _source29.dtor_name;
          return _926_default;
        } else if (_source29.is_Match) {
          RAST._IExpr _930___mcc_h108 = _source29.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _931___mcc_h109 = _source29.dtor_cases;
          return _926_default;
        } else if (_source29.is_StmtExpr) {
          RAST._IExpr _932___mcc_h112 = _source29.dtor_stmt;
          RAST._IExpr _933___mcc_h113 = _source29.dtor_rhs;
          RAST._IExpr _source30 = _932___mcc_h112;
          if (_source30.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _934___mcc_h116 = _source30.dtor_content;
            return _926_default;
          } else if (_source30.is_ExprFromType) {
            RAST._IType _935___mcc_h118 = _source30.dtor_tpe;
            return _926_default;
          } else if (_source30.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _936___mcc_h120 = _source30.dtor_name;
            return _926_default;
          } else if (_source30.is_Match) {
            RAST._IExpr _937___mcc_h122 = _source30.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _938___mcc_h123 = _source30.dtor_cases;
            return _926_default;
          } else if (_source30.is_StmtExpr) {
            RAST._IExpr _939___mcc_h126 = _source30.dtor_stmt;
            RAST._IExpr _940___mcc_h127 = _source30.dtor_rhs;
            return _926_default;
          } else if (_source30.is_Block) {
            RAST._IExpr _941___mcc_h130 = _source30.dtor_underlying;
            return _926_default;
          } else if (_source30.is_StructBuild) {
            RAST._IExpr _942___mcc_h132 = _source30.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _943___mcc_h133 = _source30.dtor_assignments;
            return _926_default;
          } else if (_source30.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _944___mcc_h136 = _source30.dtor_arguments;
            return _926_default;
          } else if (_source30.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _945___mcc_h138 = _source30.dtor_op1;
            RAST._IExpr _946___mcc_h139 = _source30.dtor_underlying;
            DAST.Format._IUnOpFormat _947___mcc_h140 = _source30.dtor_format;
            return _926_default;
          } else if (_source30.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _948___mcc_h144 = _source30.dtor_op2;
            RAST._IExpr _949___mcc_h145 = _source30.dtor_left;
            RAST._IExpr _950___mcc_h146 = _source30.dtor_right;
            DAST.Format._IBinOpFormat _951___mcc_h147 = _source30.dtor_format2;
            return _926_default;
          } else if (_source30.is_TypeAscription) {
            RAST._IExpr _952___mcc_h152 = _source30.dtor_left;
            RAST._IType _953___mcc_h153 = _source30.dtor_tpe;
            return _926_default;
          } else if (_source30.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _954___mcc_h156 = _source30.dtor_value;
            return _926_default;
          } else if (_source30.is_LiteralBool) {
            bool _955___mcc_h158 = _source30.dtor_bvalue;
            return _926_default;
          } else if (_source30.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _956___mcc_h160 = _source30.dtor_value;
            bool _957___mcc_h161 = _source30.dtor_binary;
            return _926_default;
          } else if (_source30.is_DeclareVar) {
            RAST._IDeclareType _958___mcc_h164 = _source30.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _959___mcc_h165 = _source30.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _960___mcc_h166 = _source30.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _961___mcc_h167 = _source30.dtor_optRhs;
            Std.Wrappers._IOption<RAST._IType> _source31 = _960___mcc_h166;
            if (_source31.is_None) {
              return _926_default;
            } else {
              RAST._IType _962___mcc_h172 = _source31.dtor_value;
              Std.Wrappers._IOption<RAST._IExpr> _source32 = _961___mcc_h167;
              if (_source32.is_None) {
                RAST._IExpr _source33 = _933___mcc_h113;
                if (_source33.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _963___mcc_h174 = _source33.dtor_content;
                  return _926_default;
                } else if (_source33.is_ExprFromType) {
                  RAST._IType _964___mcc_h176 = _source33.dtor_tpe;
                  return _926_default;
                } else if (_source33.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _965___mcc_h178 = _source33.dtor_name;
                  return _926_default;
                } else if (_source33.is_Match) {
                  RAST._IExpr _966___mcc_h180 = _source33.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _967___mcc_h181 = _source33.dtor_cases;
                  return _926_default;
                } else if (_source33.is_StmtExpr) {
                  RAST._IExpr _968___mcc_h184 = _source33.dtor_stmt;
                  RAST._IExpr _969___mcc_h185 = _source33.dtor_rhs;
                  RAST._IExpr _source34 = _968___mcc_h184;
                  if (_source34.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _970___mcc_h188 = _source34.dtor_content;
                    return _926_default;
                  } else if (_source34.is_ExprFromType) {
                    RAST._IType _971___mcc_h190 = _source34.dtor_tpe;
                    return _926_default;
                  } else if (_source34.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _972___mcc_h192 = _source34.dtor_name;
                    return _926_default;
                  } else if (_source34.is_Match) {
                    RAST._IExpr _973___mcc_h194 = _source34.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _974___mcc_h195 = _source34.dtor_cases;
                    return _926_default;
                  } else if (_source34.is_StmtExpr) {
                    RAST._IExpr _975___mcc_h198 = _source34.dtor_stmt;
                    RAST._IExpr _976___mcc_h199 = _source34.dtor_rhs;
                    return _926_default;
                  } else if (_source34.is_Block) {
                    RAST._IExpr _977___mcc_h202 = _source34.dtor_underlying;
                    return _926_default;
                  } else if (_source34.is_StructBuild) {
                    RAST._IExpr _978___mcc_h204 = _source34.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _979___mcc_h205 = _source34.dtor_assignments;
                    return _926_default;
                  } else if (_source34.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _980___mcc_h208 = _source34.dtor_arguments;
                    return _926_default;
                  } else if (_source34.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _981___mcc_h210 = _source34.dtor_op1;
                    RAST._IExpr _982___mcc_h211 = _source34.dtor_underlying;
                    DAST.Format._IUnOpFormat _983___mcc_h212 = _source34.dtor_format;
                    return _926_default;
                  } else if (_source34.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _984___mcc_h216 = _source34.dtor_op2;
                    RAST._IExpr _985___mcc_h217 = _source34.dtor_left;
                    RAST._IExpr _986___mcc_h218 = _source34.dtor_right;
                    DAST.Format._IBinOpFormat _987___mcc_h219 = _source34.dtor_format2;
                    return _926_default;
                  } else if (_source34.is_TypeAscription) {
                    RAST._IExpr _988___mcc_h224 = _source34.dtor_left;
                    RAST._IType _989___mcc_h225 = _source34.dtor_tpe;
                    return _926_default;
                  } else if (_source34.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _990___mcc_h228 = _source34.dtor_value;
                    return _926_default;
                  } else if (_source34.is_LiteralBool) {
                    bool _991___mcc_h230 = _source34.dtor_bvalue;
                    return _926_default;
                  } else if (_source34.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _992___mcc_h232 = _source34.dtor_value;
                    bool _993___mcc_h233 = _source34.dtor_binary;
                    return _926_default;
                  } else if (_source34.is_DeclareVar) {
                    RAST._IDeclareType _994___mcc_h236 = _source34.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _995___mcc_h237 = _source34.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _996___mcc_h238 = _source34.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _997___mcc_h239 = _source34.dtor_optRhs;
                    return _926_default;
                  } else if (_source34.is_Assign) {
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _998___mcc_h244 = _source34.dtor_names;
                    RAST._IExpr _999___mcc_h245 = _source34.dtor_rhs;
                    RAST._IExpr _1000_last = _969___mcc_h185;
                    RAST._IExpr _1001_rhs = _999___mcc_h245;
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1002_name2 = _998___mcc_h244;
                    RAST._IType _1003_tpe = _962___mcc_h172;
                    Dafny.ISequence<Dafny.Rune> _1004_name = _959___mcc_h165;
                    RAST._IDeclareType _1005_mod = _958___mcc_h164;
                    if ((Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_1004_name)).Equals(_1002_name2)) {
                      return (BigInteger.One) + (_926_default);
                    } else {
                      return _926_default;
                    }
                  } else if (_source34.is_IfExpr) {
                    RAST._IExpr _1006___mcc_h248 = _source34.dtor_cond;
                    RAST._IExpr _1007___mcc_h249 = _source34.dtor_thn;
                    RAST._IExpr _1008___mcc_h250 = _source34.dtor_els;
                    return _926_default;
                  } else if (_source34.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _1009___mcc_h254 = _source34.dtor_optCond;
                    RAST._IExpr _1010___mcc_h255 = _source34.dtor_underlying;
                    return _926_default;
                  } else if (_source34.is_For) {
                    Dafny.ISequence<Dafny.Rune> _1011___mcc_h258 = _source34.dtor_name;
                    RAST._IExpr _1012___mcc_h259 = _source34.dtor_range;
                    RAST._IExpr _1013___mcc_h260 = _source34.dtor_body;
                    return _926_default;
                  } else if (_source34.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _1014___mcc_h264 = _source34.dtor_lbl;
                    RAST._IExpr _1015___mcc_h265 = _source34.dtor_underlying;
                    return _926_default;
                  } else if (_source34.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1016___mcc_h268 = _source34.dtor_optLbl;
                    return _926_default;
                  } else if (_source34.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1017___mcc_h270 = _source34.dtor_optLbl;
                    return _926_default;
                  } else if (_source34.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _1018___mcc_h272 = _source34.dtor_optExpr;
                    return _926_default;
                  } else if (_source34.is_CallType) {
                    RAST._IExpr _1019___mcc_h274 = _source34.dtor_obj;
                    Dafny.ISequence<RAST._IType> _1020___mcc_h275 = _source34.dtor_typeParameters;
                    return _926_default;
                  } else if (_source34.is_Call) {
                    RAST._IExpr _1021___mcc_h278 = _source34.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _1022___mcc_h279 = _source34.dtor_arguments;
                    return _926_default;
                  } else if (_source34.is_Select) {
                    RAST._IExpr _1023___mcc_h282 = _source34.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1024___mcc_h283 = _source34.dtor_name;
                    return _926_default;
                  } else {
                    RAST._IExpr _1025___mcc_h286 = _source34.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1026___mcc_h287 = _source34.dtor_name;
                    return _926_default;
                  }
                } else if (_source33.is_Block) {
                  RAST._IExpr _1027___mcc_h290 = _source33.dtor_underlying;
                  return _926_default;
                } else if (_source33.is_StructBuild) {
                  RAST._IExpr _1028___mcc_h292 = _source33.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1029___mcc_h293 = _source33.dtor_assignments;
                  return _926_default;
                } else if (_source33.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1030___mcc_h296 = _source33.dtor_arguments;
                  return _926_default;
                } else if (_source33.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1031___mcc_h298 = _source33.dtor_op1;
                  RAST._IExpr _1032___mcc_h299 = _source33.dtor_underlying;
                  DAST.Format._IUnOpFormat _1033___mcc_h300 = _source33.dtor_format;
                  return _926_default;
                } else if (_source33.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1034___mcc_h304 = _source33.dtor_op2;
                  RAST._IExpr _1035___mcc_h305 = _source33.dtor_left;
                  RAST._IExpr _1036___mcc_h306 = _source33.dtor_right;
                  DAST.Format._IBinOpFormat _1037___mcc_h307 = _source33.dtor_format2;
                  return _926_default;
                } else if (_source33.is_TypeAscription) {
                  RAST._IExpr _1038___mcc_h312 = _source33.dtor_left;
                  RAST._IType _1039___mcc_h313 = _source33.dtor_tpe;
                  return _926_default;
                } else if (_source33.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1040___mcc_h316 = _source33.dtor_value;
                  return _926_default;
                } else if (_source33.is_LiteralBool) {
                  bool _1041___mcc_h318 = _source33.dtor_bvalue;
                  return _926_default;
                } else if (_source33.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1042___mcc_h320 = _source33.dtor_value;
                  bool _1043___mcc_h321 = _source33.dtor_binary;
                  return _926_default;
                } else if (_source33.is_DeclareVar) {
                  RAST._IDeclareType _1044___mcc_h324 = _source33.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1045___mcc_h325 = _source33.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1046___mcc_h326 = _source33.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1047___mcc_h327 = _source33.dtor_optRhs;
                  return _926_default;
                } else if (_source33.is_Assign) {
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1048___mcc_h332 = _source33.dtor_names;
                  RAST._IExpr _1049___mcc_h333 = _source33.dtor_rhs;
                  return _926_default;
                } else if (_source33.is_IfExpr) {
                  RAST._IExpr _1050___mcc_h336 = _source33.dtor_cond;
                  RAST._IExpr _1051___mcc_h337 = _source33.dtor_thn;
                  RAST._IExpr _1052___mcc_h338 = _source33.dtor_els;
                  return _926_default;
                } else if (_source33.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1053___mcc_h342 = _source33.dtor_optCond;
                  RAST._IExpr _1054___mcc_h343 = _source33.dtor_underlying;
                  return _926_default;
                } else if (_source33.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1055___mcc_h346 = _source33.dtor_name;
                  RAST._IExpr _1056___mcc_h347 = _source33.dtor_range;
                  RAST._IExpr _1057___mcc_h348 = _source33.dtor_body;
                  return _926_default;
                } else if (_source33.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1058___mcc_h352 = _source33.dtor_lbl;
                  RAST._IExpr _1059___mcc_h353 = _source33.dtor_underlying;
                  return _926_default;
                } else if (_source33.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1060___mcc_h356 = _source33.dtor_optLbl;
                  return _926_default;
                } else if (_source33.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1061___mcc_h358 = _source33.dtor_optLbl;
                  return _926_default;
                } else if (_source33.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1062___mcc_h360 = _source33.dtor_optExpr;
                  return _926_default;
                } else if (_source33.is_CallType) {
                  RAST._IExpr _1063___mcc_h362 = _source33.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1064___mcc_h363 = _source33.dtor_typeParameters;
                  return _926_default;
                } else if (_source33.is_Call) {
                  RAST._IExpr _1065___mcc_h366 = _source33.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1066___mcc_h367 = _source33.dtor_arguments;
                  return _926_default;
                } else if (_source33.is_Select) {
                  RAST._IExpr _1067___mcc_h370 = _source33.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1068___mcc_h371 = _source33.dtor_name;
                  return _926_default;
                } else {
                  RAST._IExpr _1069___mcc_h374 = _source33.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1070___mcc_h375 = _source33.dtor_name;
                  return _926_default;
                }
              } else {
                RAST._IExpr _1071___mcc_h378 = _source32.dtor_value;
                return _926_default;
              }
            }
          } else if (_source30.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1072___mcc_h380 = _source30.dtor_names;
            RAST._IExpr _1073___mcc_h381 = _source30.dtor_rhs;
            return _926_default;
          } else if (_source30.is_IfExpr) {
            RAST._IExpr _1074___mcc_h384 = _source30.dtor_cond;
            RAST._IExpr _1075___mcc_h385 = _source30.dtor_thn;
            RAST._IExpr _1076___mcc_h386 = _source30.dtor_els;
            RAST._IExpr _source35 = _1074___mcc_h384;
            if (_source35.is_RawExpr) {
              Dafny.ISequence<Dafny.Rune> _1077___mcc_h390 = _source35.dtor_content;
              return _926_default;
            } else if (_source35.is_ExprFromType) {
              RAST._IType _1078___mcc_h392 = _source35.dtor_tpe;
              return _926_default;
            } else if (_source35.is_Identifier) {
              Dafny.ISequence<Dafny.Rune> _1079___mcc_h394 = _source35.dtor_name;
              return _926_default;
            } else if (_source35.is_Match) {
              RAST._IExpr _1080___mcc_h396 = _source35.dtor_matchee;
              Dafny.ISequence<RAST._IMatchCase> _1081___mcc_h397 = _source35.dtor_cases;
              return _926_default;
            } else if (_source35.is_StmtExpr) {
              RAST._IExpr _1082___mcc_h400 = _source35.dtor_stmt;
              RAST._IExpr _1083___mcc_h401 = _source35.dtor_rhs;
              return _926_default;
            } else if (_source35.is_Block) {
              RAST._IExpr _1084___mcc_h404 = _source35.dtor_underlying;
              return _926_default;
            } else if (_source35.is_StructBuild) {
              RAST._IExpr _1085___mcc_h406 = _source35.dtor_underlying;
              Dafny.ISequence<RAST._IAssignIdentifier> _1086___mcc_h407 = _source35.dtor_assignments;
              return _926_default;
            } else if (_source35.is_Tuple) {
              Dafny.ISequence<RAST._IExpr> _1087___mcc_h410 = _source35.dtor_arguments;
              return _926_default;
            } else if (_source35.is_UnaryOp) {
              Dafny.ISequence<Dafny.Rune> _1088___mcc_h412 = _source35.dtor_op1;
              RAST._IExpr _1089___mcc_h413 = _source35.dtor_underlying;
              DAST.Format._IUnOpFormat _1090___mcc_h414 = _source35.dtor_format;
              if (object.Equals(_1088___mcc_h412, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
                RAST._IExpr _source36 = _1089___mcc_h413;
                if (_source36.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _1091___mcc_h418 = _source36.dtor_content;
                  return _926_default;
                } else if (_source36.is_ExprFromType) {
                  RAST._IType _1092___mcc_h420 = _source36.dtor_tpe;
                  return _926_default;
                } else if (_source36.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _1093___mcc_h422 = _source36.dtor_name;
                  return _926_default;
                } else if (_source36.is_Match) {
                  RAST._IExpr _1094___mcc_h424 = _source36.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _1095___mcc_h425 = _source36.dtor_cases;
                  return _926_default;
                } else if (_source36.is_StmtExpr) {
                  RAST._IExpr _1096___mcc_h428 = _source36.dtor_stmt;
                  RAST._IExpr _1097___mcc_h429 = _source36.dtor_rhs;
                  return _926_default;
                } else if (_source36.is_Block) {
                  RAST._IExpr _1098___mcc_h432 = _source36.dtor_underlying;
                  return _926_default;
                } else if (_source36.is_StructBuild) {
                  RAST._IExpr _1099___mcc_h434 = _source36.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1100___mcc_h435 = _source36.dtor_assignments;
                  return _926_default;
                } else if (_source36.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1101___mcc_h438 = _source36.dtor_arguments;
                  return _926_default;
                } else if (_source36.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1102___mcc_h440 = _source36.dtor_op1;
                  RAST._IExpr _1103___mcc_h441 = _source36.dtor_underlying;
                  DAST.Format._IUnOpFormat _1104___mcc_h442 = _source36.dtor_format;
                  return _926_default;
                } else if (_source36.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1105___mcc_h446 = _source36.dtor_op2;
                  RAST._IExpr _1106___mcc_h447 = _source36.dtor_left;
                  RAST._IExpr _1107___mcc_h448 = _source36.dtor_right;
                  DAST.Format._IBinOpFormat _1108___mcc_h449 = _source36.dtor_format2;
                  if (object.Equals(_1105___mcc_h446, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
                    RAST._IExpr _source37 = _1075___mcc_h385;
                    if (_source37.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _1109___mcc_h454 = _source37.dtor_content;
                      if (object.Equals(_1109___mcc_h454, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"Halt\");"))) {
                        RAST._IExpr _source38 = _1076___mcc_h386;
                        if (_source38.is_RawExpr) {
                          Dafny.ISequence<Dafny.Rune> _1110___mcc_h456 = _source38.dtor_content;
                          if (object.Equals(_1110___mcc_h456, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
                            RAST._IExpr _1111_last = _933___mcc_h113;
                            DAST.Format._IUnOpFormat _1112_of = _1090___mcc_h414;
                            DAST.Format._IBinOpFormat _1113_f = _1108___mcc_h449;
                            RAST._IExpr _1114_b = _1107___mcc_h448;
                            RAST._IExpr _1115_a = _1106___mcc_h447;
                            return (BigInteger.One) + (_926_default);
                          } else {
                            return _926_default;
                          }
                        } else if (_source38.is_ExprFromType) {
                          RAST._IType _1116___mcc_h458 = _source38.dtor_tpe;
                          return _926_default;
                        } else if (_source38.is_Identifier) {
                          Dafny.ISequence<Dafny.Rune> _1117___mcc_h460 = _source38.dtor_name;
                          return _926_default;
                        } else if (_source38.is_Match) {
                          RAST._IExpr _1118___mcc_h462 = _source38.dtor_matchee;
                          Dafny.ISequence<RAST._IMatchCase> _1119___mcc_h463 = _source38.dtor_cases;
                          return _926_default;
                        } else if (_source38.is_StmtExpr) {
                          RAST._IExpr _1120___mcc_h466 = _source38.dtor_stmt;
                          RAST._IExpr _1121___mcc_h467 = _source38.dtor_rhs;
                          return _926_default;
                        } else if (_source38.is_Block) {
                          RAST._IExpr _1122___mcc_h470 = _source38.dtor_underlying;
                          return _926_default;
                        } else if (_source38.is_StructBuild) {
                          RAST._IExpr _1123___mcc_h472 = _source38.dtor_underlying;
                          Dafny.ISequence<RAST._IAssignIdentifier> _1124___mcc_h473 = _source38.dtor_assignments;
                          return _926_default;
                        } else if (_source38.is_Tuple) {
                          Dafny.ISequence<RAST._IExpr> _1125___mcc_h476 = _source38.dtor_arguments;
                          return _926_default;
                        } else if (_source38.is_UnaryOp) {
                          Dafny.ISequence<Dafny.Rune> _1126___mcc_h478 = _source38.dtor_op1;
                          RAST._IExpr _1127___mcc_h479 = _source38.dtor_underlying;
                          DAST.Format._IUnOpFormat _1128___mcc_h480 = _source38.dtor_format;
                          return _926_default;
                        } else if (_source38.is_BinaryOp) {
                          Dafny.ISequence<Dafny.Rune> _1129___mcc_h484 = _source38.dtor_op2;
                          RAST._IExpr _1130___mcc_h485 = _source38.dtor_left;
                          RAST._IExpr _1131___mcc_h486 = _source38.dtor_right;
                          DAST.Format._IBinOpFormat _1132___mcc_h487 = _source38.dtor_format2;
                          return _926_default;
                        } else if (_source38.is_TypeAscription) {
                          RAST._IExpr _1133___mcc_h492 = _source38.dtor_left;
                          RAST._IType _1134___mcc_h493 = _source38.dtor_tpe;
                          return _926_default;
                        } else if (_source38.is_LiteralInt) {
                          Dafny.ISequence<Dafny.Rune> _1135___mcc_h496 = _source38.dtor_value;
                          return _926_default;
                        } else if (_source38.is_LiteralBool) {
                          bool _1136___mcc_h498 = _source38.dtor_bvalue;
                          return _926_default;
                        } else if (_source38.is_LiteralString) {
                          Dafny.ISequence<Dafny.Rune> _1137___mcc_h500 = _source38.dtor_value;
                          bool _1138___mcc_h501 = _source38.dtor_binary;
                          return _926_default;
                        } else if (_source38.is_DeclareVar) {
                          RAST._IDeclareType _1139___mcc_h504 = _source38.dtor_declareType;
                          Dafny.ISequence<Dafny.Rune> _1140___mcc_h505 = _source38.dtor_name;
                          Std.Wrappers._IOption<RAST._IType> _1141___mcc_h506 = _source38.dtor_optType;
                          Std.Wrappers._IOption<RAST._IExpr> _1142___mcc_h507 = _source38.dtor_optRhs;
                          return _926_default;
                        } else if (_source38.is_Assign) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1143___mcc_h512 = _source38.dtor_names;
                          RAST._IExpr _1144___mcc_h513 = _source38.dtor_rhs;
                          return _926_default;
                        } else if (_source38.is_IfExpr) {
                          RAST._IExpr _1145___mcc_h516 = _source38.dtor_cond;
                          RAST._IExpr _1146___mcc_h517 = _source38.dtor_thn;
                          RAST._IExpr _1147___mcc_h518 = _source38.dtor_els;
                          return _926_default;
                        } else if (_source38.is_Loop) {
                          Std.Wrappers._IOption<RAST._IExpr> _1148___mcc_h522 = _source38.dtor_optCond;
                          RAST._IExpr _1149___mcc_h523 = _source38.dtor_underlying;
                          return _926_default;
                        } else if (_source38.is_For) {
                          Dafny.ISequence<Dafny.Rune> _1150___mcc_h526 = _source38.dtor_name;
                          RAST._IExpr _1151___mcc_h527 = _source38.dtor_range;
                          RAST._IExpr _1152___mcc_h528 = _source38.dtor_body;
                          return _926_default;
                        } else if (_source38.is_Labelled) {
                          Dafny.ISequence<Dafny.Rune> _1153___mcc_h532 = _source38.dtor_lbl;
                          RAST._IExpr _1154___mcc_h533 = _source38.dtor_underlying;
                          return _926_default;
                        } else if (_source38.is_Break) {
                          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1155___mcc_h536 = _source38.dtor_optLbl;
                          return _926_default;
                        } else if (_source38.is_Continue) {
                          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1156___mcc_h538 = _source38.dtor_optLbl;
                          return _926_default;
                        } else if (_source38.is_Return) {
                          Std.Wrappers._IOption<RAST._IExpr> _1157___mcc_h540 = _source38.dtor_optExpr;
                          return _926_default;
                        } else if (_source38.is_CallType) {
                          RAST._IExpr _1158___mcc_h542 = _source38.dtor_obj;
                          Dafny.ISequence<RAST._IType> _1159___mcc_h543 = _source38.dtor_typeParameters;
                          return _926_default;
                        } else if (_source38.is_Call) {
                          RAST._IExpr _1160___mcc_h546 = _source38.dtor_obj;
                          Dafny.ISequence<RAST._IExpr> _1161___mcc_h547 = _source38.dtor_arguments;
                          return _926_default;
                        } else if (_source38.is_Select) {
                          RAST._IExpr _1162___mcc_h550 = _source38.dtor_obj;
                          Dafny.ISequence<Dafny.Rune> _1163___mcc_h551 = _source38.dtor_name;
                          return _926_default;
                        } else {
                          RAST._IExpr _1164___mcc_h554 = _source38.dtor_obj;
                          Dafny.ISequence<Dafny.Rune> _1165___mcc_h555 = _source38.dtor_name;
                          return _926_default;
                        }
                      } else {
                        return _926_default;
                      }
                    } else if (_source37.is_ExprFromType) {
                      RAST._IType _1166___mcc_h558 = _source37.dtor_tpe;
                      return _926_default;
                    } else if (_source37.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _1167___mcc_h560 = _source37.dtor_name;
                      return _926_default;
                    } else if (_source37.is_Match) {
                      RAST._IExpr _1168___mcc_h562 = _source37.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _1169___mcc_h563 = _source37.dtor_cases;
                      return _926_default;
                    } else if (_source37.is_StmtExpr) {
                      RAST._IExpr _1170___mcc_h566 = _source37.dtor_stmt;
                      RAST._IExpr _1171___mcc_h567 = _source37.dtor_rhs;
                      return _926_default;
                    } else if (_source37.is_Block) {
                      RAST._IExpr _1172___mcc_h570 = _source37.dtor_underlying;
                      return _926_default;
                    } else if (_source37.is_StructBuild) {
                      RAST._IExpr _1173___mcc_h572 = _source37.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _1174___mcc_h573 = _source37.dtor_assignments;
                      return _926_default;
                    } else if (_source37.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _1175___mcc_h576 = _source37.dtor_arguments;
                      return _926_default;
                    } else if (_source37.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _1176___mcc_h578 = _source37.dtor_op1;
                      RAST._IExpr _1177___mcc_h579 = _source37.dtor_underlying;
                      DAST.Format._IUnOpFormat _1178___mcc_h580 = _source37.dtor_format;
                      return _926_default;
                    } else if (_source37.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _1179___mcc_h584 = _source37.dtor_op2;
                      RAST._IExpr _1180___mcc_h585 = _source37.dtor_left;
                      RAST._IExpr _1181___mcc_h586 = _source37.dtor_right;
                      DAST.Format._IBinOpFormat _1182___mcc_h587 = _source37.dtor_format2;
                      return _926_default;
                    } else if (_source37.is_TypeAscription) {
                      RAST._IExpr _1183___mcc_h592 = _source37.dtor_left;
                      RAST._IType _1184___mcc_h593 = _source37.dtor_tpe;
                      return _926_default;
                    } else if (_source37.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _1185___mcc_h596 = _source37.dtor_value;
                      return _926_default;
                    } else if (_source37.is_LiteralBool) {
                      bool _1186___mcc_h598 = _source37.dtor_bvalue;
                      return _926_default;
                    } else if (_source37.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _1187___mcc_h600 = _source37.dtor_value;
                      bool _1188___mcc_h601 = _source37.dtor_binary;
                      return _926_default;
                    } else if (_source37.is_DeclareVar) {
                      RAST._IDeclareType _1189___mcc_h604 = _source37.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _1190___mcc_h605 = _source37.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _1191___mcc_h606 = _source37.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _1192___mcc_h607 = _source37.dtor_optRhs;
                      return _926_default;
                    } else if (_source37.is_Assign) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1193___mcc_h612 = _source37.dtor_names;
                      RAST._IExpr _1194___mcc_h613 = _source37.dtor_rhs;
                      return _926_default;
                    } else if (_source37.is_IfExpr) {
                      RAST._IExpr _1195___mcc_h616 = _source37.dtor_cond;
                      RAST._IExpr _1196___mcc_h617 = _source37.dtor_thn;
                      RAST._IExpr _1197___mcc_h618 = _source37.dtor_els;
                      return _926_default;
                    } else if (_source37.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _1198___mcc_h622 = _source37.dtor_optCond;
                      RAST._IExpr _1199___mcc_h623 = _source37.dtor_underlying;
                      return _926_default;
                    } else if (_source37.is_For) {
                      Dafny.ISequence<Dafny.Rune> _1200___mcc_h626 = _source37.dtor_name;
                      RAST._IExpr _1201___mcc_h627 = _source37.dtor_range;
                      RAST._IExpr _1202___mcc_h628 = _source37.dtor_body;
                      return _926_default;
                    } else if (_source37.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _1203___mcc_h632 = _source37.dtor_lbl;
                      RAST._IExpr _1204___mcc_h633 = _source37.dtor_underlying;
                      return _926_default;
                    } else if (_source37.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1205___mcc_h636 = _source37.dtor_optLbl;
                      return _926_default;
                    } else if (_source37.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1206___mcc_h638 = _source37.dtor_optLbl;
                      return _926_default;
                    } else if (_source37.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _1207___mcc_h640 = _source37.dtor_optExpr;
                      return _926_default;
                    } else if (_source37.is_CallType) {
                      RAST._IExpr _1208___mcc_h642 = _source37.dtor_obj;
                      Dafny.ISequence<RAST._IType> _1209___mcc_h643 = _source37.dtor_typeParameters;
                      return _926_default;
                    } else if (_source37.is_Call) {
                      RAST._IExpr _1210___mcc_h646 = _source37.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _1211___mcc_h647 = _source37.dtor_arguments;
                      return _926_default;
                    } else if (_source37.is_Select) {
                      RAST._IExpr _1212___mcc_h650 = _source37.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _1213___mcc_h651 = _source37.dtor_name;
                      return _926_default;
                    } else {
                      RAST._IExpr _1214___mcc_h654 = _source37.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _1215___mcc_h655 = _source37.dtor_name;
                      return _926_default;
                    }
                  } else {
                    return _926_default;
                  }
                } else if (_source36.is_TypeAscription) {
                  RAST._IExpr _1216___mcc_h658 = _source36.dtor_left;
                  RAST._IType _1217___mcc_h659 = _source36.dtor_tpe;
                  return _926_default;
                } else if (_source36.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1218___mcc_h662 = _source36.dtor_value;
                  return _926_default;
                } else if (_source36.is_LiteralBool) {
                  bool _1219___mcc_h664 = _source36.dtor_bvalue;
                  return _926_default;
                } else if (_source36.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1220___mcc_h666 = _source36.dtor_value;
                  bool _1221___mcc_h667 = _source36.dtor_binary;
                  return _926_default;
                } else if (_source36.is_DeclareVar) {
                  RAST._IDeclareType _1222___mcc_h670 = _source36.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1223___mcc_h671 = _source36.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1224___mcc_h672 = _source36.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1225___mcc_h673 = _source36.dtor_optRhs;
                  return _926_default;
                } else if (_source36.is_Assign) {
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1226___mcc_h678 = _source36.dtor_names;
                  RAST._IExpr _1227___mcc_h679 = _source36.dtor_rhs;
                  return _926_default;
                } else if (_source36.is_IfExpr) {
                  RAST._IExpr _1228___mcc_h682 = _source36.dtor_cond;
                  RAST._IExpr _1229___mcc_h683 = _source36.dtor_thn;
                  RAST._IExpr _1230___mcc_h684 = _source36.dtor_els;
                  return _926_default;
                } else if (_source36.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1231___mcc_h688 = _source36.dtor_optCond;
                  RAST._IExpr _1232___mcc_h689 = _source36.dtor_underlying;
                  return _926_default;
                } else if (_source36.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1233___mcc_h692 = _source36.dtor_name;
                  RAST._IExpr _1234___mcc_h693 = _source36.dtor_range;
                  RAST._IExpr _1235___mcc_h694 = _source36.dtor_body;
                  return _926_default;
                } else if (_source36.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1236___mcc_h698 = _source36.dtor_lbl;
                  RAST._IExpr _1237___mcc_h699 = _source36.dtor_underlying;
                  return _926_default;
                } else if (_source36.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1238___mcc_h702 = _source36.dtor_optLbl;
                  return _926_default;
                } else if (_source36.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1239___mcc_h704 = _source36.dtor_optLbl;
                  return _926_default;
                } else if (_source36.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1240___mcc_h706 = _source36.dtor_optExpr;
                  return _926_default;
                } else if (_source36.is_CallType) {
                  RAST._IExpr _1241___mcc_h708 = _source36.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1242___mcc_h709 = _source36.dtor_typeParameters;
                  return _926_default;
                } else if (_source36.is_Call) {
                  RAST._IExpr _1243___mcc_h712 = _source36.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1244___mcc_h713 = _source36.dtor_arguments;
                  return _926_default;
                } else if (_source36.is_Select) {
                  RAST._IExpr _1245___mcc_h716 = _source36.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1246___mcc_h717 = _source36.dtor_name;
                  return _926_default;
                } else {
                  RAST._IExpr _1247___mcc_h720 = _source36.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1248___mcc_h721 = _source36.dtor_name;
                  return _926_default;
                }
              } else {
                return _926_default;
              }
            } else if (_source35.is_BinaryOp) {
              Dafny.ISequence<Dafny.Rune> _1249___mcc_h724 = _source35.dtor_op2;
              RAST._IExpr _1250___mcc_h725 = _source35.dtor_left;
              RAST._IExpr _1251___mcc_h726 = _source35.dtor_right;
              DAST.Format._IBinOpFormat _1252___mcc_h727 = _source35.dtor_format2;
              return _926_default;
            } else if (_source35.is_TypeAscription) {
              RAST._IExpr _1253___mcc_h732 = _source35.dtor_left;
              RAST._IType _1254___mcc_h733 = _source35.dtor_tpe;
              return _926_default;
            } else if (_source35.is_LiteralInt) {
              Dafny.ISequence<Dafny.Rune> _1255___mcc_h736 = _source35.dtor_value;
              return _926_default;
            } else if (_source35.is_LiteralBool) {
              bool _1256___mcc_h738 = _source35.dtor_bvalue;
              return _926_default;
            } else if (_source35.is_LiteralString) {
              Dafny.ISequence<Dafny.Rune> _1257___mcc_h740 = _source35.dtor_value;
              bool _1258___mcc_h741 = _source35.dtor_binary;
              return _926_default;
            } else if (_source35.is_DeclareVar) {
              RAST._IDeclareType _1259___mcc_h744 = _source35.dtor_declareType;
              Dafny.ISequence<Dafny.Rune> _1260___mcc_h745 = _source35.dtor_name;
              Std.Wrappers._IOption<RAST._IType> _1261___mcc_h746 = _source35.dtor_optType;
              Std.Wrappers._IOption<RAST._IExpr> _1262___mcc_h747 = _source35.dtor_optRhs;
              return _926_default;
            } else if (_source35.is_Assign) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1263___mcc_h752 = _source35.dtor_names;
              RAST._IExpr _1264___mcc_h753 = _source35.dtor_rhs;
              return _926_default;
            } else if (_source35.is_IfExpr) {
              RAST._IExpr _1265___mcc_h756 = _source35.dtor_cond;
              RAST._IExpr _1266___mcc_h757 = _source35.dtor_thn;
              RAST._IExpr _1267___mcc_h758 = _source35.dtor_els;
              return _926_default;
            } else if (_source35.is_Loop) {
              Std.Wrappers._IOption<RAST._IExpr> _1268___mcc_h762 = _source35.dtor_optCond;
              RAST._IExpr _1269___mcc_h763 = _source35.dtor_underlying;
              return _926_default;
            } else if (_source35.is_For) {
              Dafny.ISequence<Dafny.Rune> _1270___mcc_h766 = _source35.dtor_name;
              RAST._IExpr _1271___mcc_h767 = _source35.dtor_range;
              RAST._IExpr _1272___mcc_h768 = _source35.dtor_body;
              return _926_default;
            } else if (_source35.is_Labelled) {
              Dafny.ISequence<Dafny.Rune> _1273___mcc_h772 = _source35.dtor_lbl;
              RAST._IExpr _1274___mcc_h773 = _source35.dtor_underlying;
              return _926_default;
            } else if (_source35.is_Break) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1275___mcc_h776 = _source35.dtor_optLbl;
              return _926_default;
            } else if (_source35.is_Continue) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1276___mcc_h778 = _source35.dtor_optLbl;
              return _926_default;
            } else if (_source35.is_Return) {
              Std.Wrappers._IOption<RAST._IExpr> _1277___mcc_h780 = _source35.dtor_optExpr;
              return _926_default;
            } else if (_source35.is_CallType) {
              RAST._IExpr _1278___mcc_h782 = _source35.dtor_obj;
              Dafny.ISequence<RAST._IType> _1279___mcc_h783 = _source35.dtor_typeParameters;
              return _926_default;
            } else if (_source35.is_Call) {
              RAST._IExpr _1280___mcc_h786 = _source35.dtor_obj;
              Dafny.ISequence<RAST._IExpr> _1281___mcc_h787 = _source35.dtor_arguments;
              return _926_default;
            } else if (_source35.is_Select) {
              RAST._IExpr _1282___mcc_h790 = _source35.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1283___mcc_h791 = _source35.dtor_name;
              return _926_default;
            } else {
              RAST._IExpr _1284___mcc_h794 = _source35.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1285___mcc_h795 = _source35.dtor_name;
              return _926_default;
            }
          } else if (_source30.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1286___mcc_h798 = _source30.dtor_optCond;
            RAST._IExpr _1287___mcc_h799 = _source30.dtor_underlying;
            return _926_default;
          } else if (_source30.is_For) {
            Dafny.ISequence<Dafny.Rune> _1288___mcc_h802 = _source30.dtor_name;
            RAST._IExpr _1289___mcc_h803 = _source30.dtor_range;
            RAST._IExpr _1290___mcc_h804 = _source30.dtor_body;
            return _926_default;
          } else if (_source30.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1291___mcc_h808 = _source30.dtor_lbl;
            RAST._IExpr _1292___mcc_h809 = _source30.dtor_underlying;
            return _926_default;
          } else if (_source30.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1293___mcc_h812 = _source30.dtor_optLbl;
            return _926_default;
          } else if (_source30.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1294___mcc_h814 = _source30.dtor_optLbl;
            return _926_default;
          } else if (_source30.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1295___mcc_h816 = _source30.dtor_optExpr;
            return _926_default;
          } else if (_source30.is_CallType) {
            RAST._IExpr _1296___mcc_h818 = _source30.dtor_obj;
            Dafny.ISequence<RAST._IType> _1297___mcc_h819 = _source30.dtor_typeParameters;
            return _926_default;
          } else if (_source30.is_Call) {
            RAST._IExpr _1298___mcc_h822 = _source30.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1299___mcc_h823 = _source30.dtor_arguments;
            return _926_default;
          } else if (_source30.is_Select) {
            RAST._IExpr _1300___mcc_h826 = _source30.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1301___mcc_h827 = _source30.dtor_name;
            return _926_default;
          } else {
            RAST._IExpr _1302___mcc_h830 = _source30.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1303___mcc_h831 = _source30.dtor_name;
            return _926_default;
          }
        } else if (_source29.is_Block) {
          RAST._IExpr _1304___mcc_h834 = _source29.dtor_underlying;
          return _926_default;
        } else if (_source29.is_StructBuild) {
          RAST._IExpr _1305___mcc_h836 = _source29.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _1306___mcc_h837 = _source29.dtor_assignments;
          return _926_default;
        } else if (_source29.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _1307___mcc_h840 = _source29.dtor_arguments;
          return _926_default;
        } else if (_source29.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _1308___mcc_h842 = _source29.dtor_op1;
          RAST._IExpr _1309___mcc_h843 = _source29.dtor_underlying;
          DAST.Format._IUnOpFormat _1310___mcc_h844 = _source29.dtor_format;
          return _926_default;
        } else if (_source29.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _1311___mcc_h848 = _source29.dtor_op2;
          RAST._IExpr _1312___mcc_h849 = _source29.dtor_left;
          RAST._IExpr _1313___mcc_h850 = _source29.dtor_right;
          DAST.Format._IBinOpFormat _1314___mcc_h851 = _source29.dtor_format2;
          return _926_default;
        } else if (_source29.is_TypeAscription) {
          RAST._IExpr _1315___mcc_h856 = _source29.dtor_left;
          RAST._IType _1316___mcc_h857 = _source29.dtor_tpe;
          return _926_default;
        } else if (_source29.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _1317___mcc_h860 = _source29.dtor_value;
          return _926_default;
        } else if (_source29.is_LiteralBool) {
          bool _1318___mcc_h862 = _source29.dtor_bvalue;
          return _926_default;
        } else if (_source29.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _1319___mcc_h864 = _source29.dtor_value;
          bool _1320___mcc_h865 = _source29.dtor_binary;
          return _926_default;
        } else if (_source29.is_DeclareVar) {
          RAST._IDeclareType _1321___mcc_h868 = _source29.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _1322___mcc_h869 = _source29.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _1323___mcc_h870 = _source29.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _1324___mcc_h871 = _source29.dtor_optRhs;
          return _926_default;
        } else if (_source29.is_Assign) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1325___mcc_h876 = _source29.dtor_names;
          RAST._IExpr _1326___mcc_h877 = _source29.dtor_rhs;
          return _926_default;
        } else if (_source29.is_IfExpr) {
          RAST._IExpr _1327___mcc_h880 = _source29.dtor_cond;
          RAST._IExpr _1328___mcc_h881 = _source29.dtor_thn;
          RAST._IExpr _1329___mcc_h882 = _source29.dtor_els;
          return _926_default;
        } else if (_source29.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _1330___mcc_h886 = _source29.dtor_optCond;
          RAST._IExpr _1331___mcc_h887 = _source29.dtor_underlying;
          return _926_default;
        } else if (_source29.is_For) {
          Dafny.ISequence<Dafny.Rune> _1332___mcc_h890 = _source29.dtor_name;
          RAST._IExpr _1333___mcc_h891 = _source29.dtor_range;
          RAST._IExpr _1334___mcc_h892 = _source29.dtor_body;
          return _926_default;
        } else if (_source29.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _1335___mcc_h896 = _source29.dtor_lbl;
          RAST._IExpr _1336___mcc_h897 = _source29.dtor_underlying;
          return _926_default;
        } else if (_source29.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1337___mcc_h900 = _source29.dtor_optLbl;
          return _926_default;
        } else if (_source29.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1338___mcc_h902 = _source29.dtor_optLbl;
          return _926_default;
        } else if (_source29.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _1339___mcc_h904 = _source29.dtor_optExpr;
          return _926_default;
        } else if (_source29.is_CallType) {
          RAST._IExpr _1340___mcc_h906 = _source29.dtor_obj;
          Dafny.ISequence<RAST._IType> _1341___mcc_h907 = _source29.dtor_typeParameters;
          return _926_default;
        } else if (_source29.is_Call) {
          RAST._IExpr _1342___mcc_h910 = _source29.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _1343___mcc_h911 = _source29.dtor_arguments;
          return _926_default;
        } else if (_source29.is_Select) {
          RAST._IExpr _1344___mcc_h914 = _source29.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1345___mcc_h915 = _source29.dtor_name;
          return _926_default;
        } else {
          RAST._IExpr _1346___mcc_h918 = _source29.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1347___mcc_h919 = _source29.dtor_name;
          return _926_default;
        }
      } else if (_source28.is_Block) {
        RAST._IExpr _1348___mcc_h14 = _source28.dtor_underlying;
        RAST._IExpr _1349_underlying = _1348___mcc_h14;
        return (BigInteger.One) + ((_1349_underlying).Height());
      } else if (_source28.is_StructBuild) {
        RAST._IExpr _1350___mcc_h16 = _source28.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _1351___mcc_h17 = _source28.dtor_assignments;
        Dafny.ISequence<RAST._IAssignIdentifier> _1352_assignments = _1351___mcc_h17;
        RAST._IExpr _1353_name = _1350___mcc_h16;
        return (BigInteger.One) + (RAST.__default.max((_1353_name).Height(), RAST.__default.SeqToHeight<RAST._IAssignIdentifier>(_1352_assignments, ((System.Func<RAST._IAssignIdentifier, BigInteger>)((_1354_assignment) => {
          return (_1354_assignment).Height();
        })))));
      } else if (_source28.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _1355___mcc_h20 = _source28.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _1356_arguments = _1355___mcc_h20;
        return (BigInteger.One) + (RAST.__default.SeqToHeight<RAST._IExpr>(_1356_arguments, ((System.Func<RAST._IExpr, BigInteger>)((_1357_argument) => {
          return (_1357_argument).Height();
        }))));
      } else if (_source28.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _1358___mcc_h22 = _source28.dtor_op1;
        RAST._IExpr _1359___mcc_h23 = _source28.dtor_underlying;
        DAST.Format._IUnOpFormat _1360___mcc_h24 = _source28.dtor_format;
        RAST._IExpr _1361_underlying = _1359___mcc_h23;
        return (BigInteger.One) + ((_1361_underlying).Height());
      } else if (_source28.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _1362___mcc_h28 = _source28.dtor_op2;
        RAST._IExpr _1363___mcc_h29 = _source28.dtor_left;
        RAST._IExpr _1364___mcc_h30 = _source28.dtor_right;
        DAST.Format._IBinOpFormat _1365___mcc_h31 = _source28.dtor_format2;
        DAST.Format._IBinOpFormat _1366_format = _1365___mcc_h31;
        RAST._IExpr _1367_right = _1364___mcc_h30;
        RAST._IExpr _1368_left = _1363___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _1369_op = _1362___mcc_h28;
        return (BigInteger.One) + (RAST.__default.max((_1368_left).Height(), (_1367_right).Height()));
      } else if (_source28.is_TypeAscription) {
        RAST._IExpr _1370___mcc_h36 = _source28.dtor_left;
        RAST._IType _1371___mcc_h37 = _source28.dtor_tpe;
        RAST._IType _1372_tpe = _1371___mcc_h37;
        RAST._IExpr _1373_left = _1370___mcc_h36;
        return (BigInteger.One) + ((_1373_left).Height());
      } else if (_source28.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _1374___mcc_h40 = _source28.dtor_value;
        return BigInteger.One;
      } else if (_source28.is_LiteralBool) {
        bool _1375___mcc_h42 = _source28.dtor_bvalue;
        return BigInteger.One;
      } else if (_source28.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _1376___mcc_h44 = _source28.dtor_value;
        bool _1377___mcc_h45 = _source28.dtor_binary;
        return BigInteger.One;
      } else if (_source28.is_DeclareVar) {
        RAST._IDeclareType _1378___mcc_h48 = _source28.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _1379___mcc_h49 = _source28.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _1380___mcc_h50 = _source28.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _1381___mcc_h51 = _source28.dtor_optRhs;
        Std.Wrappers._IOption<RAST._IExpr> _1382_expr = _1381___mcc_h51;
        Std.Wrappers._IOption<RAST._IType> _1383_tpe = _1380___mcc_h50;
        Dafny.ISequence<Dafny.Rune> _1384_name = _1379___mcc_h49;
        RAST._IDeclareType _1385_declareType = _1378___mcc_h48;
        return (BigInteger.One) + (((System.Func<Std.Wrappers._IOption<RAST._IExpr>, BigInteger>)((_source39) => {
          if (_source39.is_None) {
            return BigInteger.Zero;
          } else {
            RAST._IExpr _1386___mcc_h922 = _source39.dtor_value;
            RAST._IExpr _1387_e = _1386___mcc_h922;
            return (_1387_e).Height();
          }
        }))(_1382_expr));
      } else if (_source28.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1388___mcc_h56 = _source28.dtor_names;
        RAST._IExpr _1389___mcc_h57 = _source28.dtor_rhs;
        RAST._IExpr _1390_expr = _1389___mcc_h57;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1391_names = _1388___mcc_h56;
        return (BigInteger.One) + ((_1390_expr).Height());
      } else if (_source28.is_IfExpr) {
        RAST._IExpr _1392___mcc_h60 = _source28.dtor_cond;
        RAST._IExpr _1393___mcc_h61 = _source28.dtor_thn;
        RAST._IExpr _1394___mcc_h62 = _source28.dtor_els;
        RAST._IExpr _1395_els = _1394___mcc_h62;
        RAST._IExpr _1396_thn = _1393___mcc_h61;
        RAST._IExpr _1397_cond = _1392___mcc_h60;
        return (BigInteger.One) + (RAST.__default.max((_1397_cond).Height(), RAST.__default.max((_1396_thn).Height(), (_1395_els).Height())));
      } else if (_source28.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _1398___mcc_h66 = _source28.dtor_optCond;
        RAST._IExpr _1399___mcc_h67 = _source28.dtor_underlying;
        RAST._IExpr _1400_underlying = _1399___mcc_h67;
        Std.Wrappers._IOption<RAST._IExpr> _1401_optCond = _1398___mcc_h66;
        return (BigInteger.One) + ((((_1401_optCond).is_Some) ? (RAST.__default.max(((_1401_optCond).dtor_value).Height(), (_1400_underlying).Height())) : ((_1400_underlying).Height())));
      } else if (_source28.is_For) {
        Dafny.ISequence<Dafny.Rune> _1402___mcc_h70 = _source28.dtor_name;
        RAST._IExpr _1403___mcc_h71 = _source28.dtor_range;
        RAST._IExpr _1404___mcc_h72 = _source28.dtor_body;
        RAST._IExpr _1405_body = _1404___mcc_h72;
        RAST._IExpr _1406_range = _1403___mcc_h71;
        Dafny.ISequence<Dafny.Rune> _1407_name = _1402___mcc_h70;
        return (BigInteger.One) + (RAST.__default.max((_1406_range).Height(), (_1405_body).Height()));
      } else if (_source28.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _1408___mcc_h76 = _source28.dtor_lbl;
        RAST._IExpr _1409___mcc_h77 = _source28.dtor_underlying;
        RAST._IExpr _1410_underlying = _1409___mcc_h77;
        Dafny.ISequence<Dafny.Rune> _1411_lbl = _1408___mcc_h76;
        return (BigInteger.One) + ((_1410_underlying).Height());
      } else if (_source28.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1412___mcc_h80 = _source28.dtor_optLbl;
        return BigInteger.One;
      } else if (_source28.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1413___mcc_h82 = _source28.dtor_optLbl;
        return BigInteger.One;
      } else if (_source28.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _1414___mcc_h84 = _source28.dtor_optExpr;
        Std.Wrappers._IOption<RAST._IExpr> _1415_optExpr = _1414___mcc_h84;
        if ((_1415_optExpr).is_Some) {
          return (BigInteger.One) + (((_1415_optExpr).dtor_value).Height());
        } else {
          return BigInteger.One;
        }
      } else if (_source28.is_CallType) {
        RAST._IExpr _1416___mcc_h86 = _source28.dtor_obj;
        Dafny.ISequence<RAST._IType> _1417___mcc_h87 = _source28.dtor_typeParameters;
        Dafny.ISequence<RAST._IType> _1418_tpes = _1417___mcc_h87;
        RAST._IExpr _1419_obj = _1416___mcc_h86;
        return (BigInteger.One) + (RAST.__default.max((_1419_obj).Height(), RAST.__default.SeqToHeight<RAST._IType>(_1418_tpes, ((System.Func<RAST._IType, BigInteger>)((_1420_tpe) => {
          return BigInteger.One;
        })))));
      } else if (_source28.is_Call) {
        RAST._IExpr _1421___mcc_h90 = _source28.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _1422___mcc_h91 = _source28.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _1423_args = _1422___mcc_h91;
        RAST._IExpr _1424_obj = _1421___mcc_h90;
        return (BigInteger.One) + (RAST.__default.max((_1424_obj).Height(), RAST.__default.SeqToHeight<RAST._IExpr>(_1423_args, ((System.Func<RAST._IExpr, BigInteger>)((_1425_arg) => {
          return (_1425_arg).Height();
        })))));
      } else if (_source28.is_Select) {
        RAST._IExpr _1426___mcc_h94 = _source28.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _1427___mcc_h95 = _source28.dtor_name;
        Dafny.ISequence<Dafny.Rune> _1428_name = _1427___mcc_h95;
        RAST._IExpr _1429_expression = _1426___mcc_h94;
        return (BigInteger.One) + ((_1429_expression).Height());
      } else {
        RAST._IExpr _1430___mcc_h98 = _source28.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _1431___mcc_h99 = _source28.dtor_name;
        Dafny.ISequence<Dafny.Rune> _1432_name = _1431___mcc_h99;
        RAST._IExpr _1433_expression = _1430___mcc_h98;
        return (BigInteger.One) + ((_1433_expression).Height());
      }
    }
    public RAST._IExpr Optimize() {
      RAST._IExpr _source40 = this;
      if (_source40.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _1434___mcc_h0 = _source40.dtor_content;
        return this;
      } else if (_source40.is_ExprFromType) {
        RAST._IType _1435___mcc_h2 = _source40.dtor_tpe;
        return this;
      } else if (_source40.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _1436___mcc_h4 = _source40.dtor_name;
        return this;
      } else if (_source40.is_Match) {
        RAST._IExpr _1437___mcc_h6 = _source40.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _1438___mcc_h7 = _source40.dtor_cases;
        return this;
      } else if (_source40.is_StmtExpr) {
        RAST._IExpr _1439___mcc_h10 = _source40.dtor_stmt;
        RAST._IExpr _1440___mcc_h11 = _source40.dtor_rhs;
        RAST._IExpr _source41 = _1439___mcc_h10;
        if (_source41.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _1441___mcc_h14 = _source41.dtor_content;
          return this;
        } else if (_source41.is_ExprFromType) {
          RAST._IType _1442___mcc_h16 = _source41.dtor_tpe;
          return this;
        } else if (_source41.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _1443___mcc_h18 = _source41.dtor_name;
          return this;
        } else if (_source41.is_Match) {
          RAST._IExpr _1444___mcc_h20 = _source41.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _1445___mcc_h21 = _source41.dtor_cases;
          return this;
        } else if (_source41.is_StmtExpr) {
          RAST._IExpr _1446___mcc_h24 = _source41.dtor_stmt;
          RAST._IExpr _1447___mcc_h25 = _source41.dtor_rhs;
          return this;
        } else if (_source41.is_Block) {
          RAST._IExpr _1448___mcc_h28 = _source41.dtor_underlying;
          return this;
        } else if (_source41.is_StructBuild) {
          RAST._IExpr _1449___mcc_h30 = _source41.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _1450___mcc_h31 = _source41.dtor_assignments;
          return this;
        } else if (_source41.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _1451___mcc_h34 = _source41.dtor_arguments;
          return this;
        } else if (_source41.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _1452___mcc_h36 = _source41.dtor_op1;
          RAST._IExpr _1453___mcc_h37 = _source41.dtor_underlying;
          DAST.Format._IUnOpFormat _1454___mcc_h38 = _source41.dtor_format;
          return this;
        } else if (_source41.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _1455___mcc_h42 = _source41.dtor_op2;
          RAST._IExpr _1456___mcc_h43 = _source41.dtor_left;
          RAST._IExpr _1457___mcc_h44 = _source41.dtor_right;
          DAST.Format._IBinOpFormat _1458___mcc_h45 = _source41.dtor_format2;
          return this;
        } else if (_source41.is_TypeAscription) {
          RAST._IExpr _1459___mcc_h50 = _source41.dtor_left;
          RAST._IType _1460___mcc_h51 = _source41.dtor_tpe;
          return this;
        } else if (_source41.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _1461___mcc_h54 = _source41.dtor_value;
          return this;
        } else if (_source41.is_LiteralBool) {
          bool _1462___mcc_h56 = _source41.dtor_bvalue;
          return this;
        } else if (_source41.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _1463___mcc_h58 = _source41.dtor_value;
          bool _1464___mcc_h59 = _source41.dtor_binary;
          return this;
        } else if (_source41.is_DeclareVar) {
          RAST._IDeclareType _1465___mcc_h62 = _source41.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _1466___mcc_h63 = _source41.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _1467___mcc_h64 = _source41.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _1468___mcc_h65 = _source41.dtor_optRhs;
          Std.Wrappers._IOption<RAST._IType> _source42 = _1467___mcc_h64;
          if (_source42.is_None) {
            return this;
          } else {
            RAST._IType _1469___mcc_h70 = _source42.dtor_value;
            Std.Wrappers._IOption<RAST._IExpr> _source43 = _1468___mcc_h65;
            if (_source43.is_None) {
              RAST._IExpr _source44 = _1440___mcc_h11;
              if (_source44.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _1470___mcc_h72 = _source44.dtor_content;
                return this;
              } else if (_source44.is_ExprFromType) {
                RAST._IType _1471___mcc_h74 = _source44.dtor_tpe;
                return this;
              } else if (_source44.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _1472___mcc_h76 = _source44.dtor_name;
                return this;
              } else if (_source44.is_Match) {
                RAST._IExpr _1473___mcc_h78 = _source44.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _1474___mcc_h79 = _source44.dtor_cases;
                return this;
              } else if (_source44.is_StmtExpr) {
                RAST._IExpr _1475___mcc_h82 = _source44.dtor_stmt;
                RAST._IExpr _1476___mcc_h83 = _source44.dtor_rhs;
                RAST._IExpr _source45 = _1475___mcc_h82;
                if (_source45.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _1477___mcc_h86 = _source45.dtor_content;
                  return this;
                } else if (_source45.is_ExprFromType) {
                  RAST._IType _1478___mcc_h88 = _source45.dtor_tpe;
                  return this;
                } else if (_source45.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _1479___mcc_h90 = _source45.dtor_name;
                  return this;
                } else if (_source45.is_Match) {
                  RAST._IExpr _1480___mcc_h92 = _source45.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _1481___mcc_h93 = _source45.dtor_cases;
                  return this;
                } else if (_source45.is_StmtExpr) {
                  RAST._IExpr _1482___mcc_h96 = _source45.dtor_stmt;
                  RAST._IExpr _1483___mcc_h97 = _source45.dtor_rhs;
                  return this;
                } else if (_source45.is_Block) {
                  RAST._IExpr _1484___mcc_h100 = _source45.dtor_underlying;
                  return this;
                } else if (_source45.is_StructBuild) {
                  RAST._IExpr _1485___mcc_h102 = _source45.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1486___mcc_h103 = _source45.dtor_assignments;
                  return this;
                } else if (_source45.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1487___mcc_h106 = _source45.dtor_arguments;
                  return this;
                } else if (_source45.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1488___mcc_h108 = _source45.dtor_op1;
                  RAST._IExpr _1489___mcc_h109 = _source45.dtor_underlying;
                  DAST.Format._IUnOpFormat _1490___mcc_h110 = _source45.dtor_format;
                  return this;
                } else if (_source45.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1491___mcc_h114 = _source45.dtor_op2;
                  RAST._IExpr _1492___mcc_h115 = _source45.dtor_left;
                  RAST._IExpr _1493___mcc_h116 = _source45.dtor_right;
                  DAST.Format._IBinOpFormat _1494___mcc_h117 = _source45.dtor_format2;
                  return this;
                } else if (_source45.is_TypeAscription) {
                  RAST._IExpr _1495___mcc_h122 = _source45.dtor_left;
                  RAST._IType _1496___mcc_h123 = _source45.dtor_tpe;
                  return this;
                } else if (_source45.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1497___mcc_h126 = _source45.dtor_value;
                  return this;
                } else if (_source45.is_LiteralBool) {
                  bool _1498___mcc_h128 = _source45.dtor_bvalue;
                  return this;
                } else if (_source45.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1499___mcc_h130 = _source45.dtor_value;
                  bool _1500___mcc_h131 = _source45.dtor_binary;
                  return this;
                } else if (_source45.is_DeclareVar) {
                  RAST._IDeclareType _1501___mcc_h134 = _source45.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1502___mcc_h135 = _source45.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1503___mcc_h136 = _source45.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1504___mcc_h137 = _source45.dtor_optRhs;
                  return this;
                } else if (_source45.is_Assign) {
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1505___mcc_h142 = _source45.dtor_names;
                  RAST._IExpr _1506___mcc_h143 = _source45.dtor_rhs;
                  RAST._IExpr _1507_last = _1476___mcc_h83;
                  RAST._IExpr _1508_rhs = _1506___mcc_h143;
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1509_name2 = _1505___mcc_h142;
                  RAST._IType _1510_tpe = _1469___mcc_h70;
                  Dafny.ISequence<Dafny.Rune> _1511_name = _1466___mcc_h63;
                  RAST._IDeclareType _1512_mod = _1465___mcc_h62;
                  if ((Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_1511_name)).Equals(_1509_name2)) {
                    RAST._IExpr _1513_rewriting = RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(_1512_mod, _1511_name, Std.Wrappers.Option<RAST._IType>.create_Some(_1510_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_1508_rhs)), _1507_last);
                    return _1513_rewriting;
                  } else {
                    return this;
                  }
                } else if (_source45.is_IfExpr) {
                  RAST._IExpr _1514___mcc_h146 = _source45.dtor_cond;
                  RAST._IExpr _1515___mcc_h147 = _source45.dtor_thn;
                  RAST._IExpr _1516___mcc_h148 = _source45.dtor_els;
                  return this;
                } else if (_source45.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1517___mcc_h152 = _source45.dtor_optCond;
                  RAST._IExpr _1518___mcc_h153 = _source45.dtor_underlying;
                  return this;
                } else if (_source45.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1519___mcc_h156 = _source45.dtor_name;
                  RAST._IExpr _1520___mcc_h157 = _source45.dtor_range;
                  RAST._IExpr _1521___mcc_h158 = _source45.dtor_body;
                  return this;
                } else if (_source45.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1522___mcc_h162 = _source45.dtor_lbl;
                  RAST._IExpr _1523___mcc_h163 = _source45.dtor_underlying;
                  return this;
                } else if (_source45.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1524___mcc_h166 = _source45.dtor_optLbl;
                  return this;
                } else if (_source45.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1525___mcc_h168 = _source45.dtor_optLbl;
                  return this;
                } else if (_source45.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1526___mcc_h170 = _source45.dtor_optExpr;
                  return this;
                } else if (_source45.is_CallType) {
                  RAST._IExpr _1527___mcc_h172 = _source45.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1528___mcc_h173 = _source45.dtor_typeParameters;
                  return this;
                } else if (_source45.is_Call) {
                  RAST._IExpr _1529___mcc_h176 = _source45.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1530___mcc_h177 = _source45.dtor_arguments;
                  return this;
                } else if (_source45.is_Select) {
                  RAST._IExpr _1531___mcc_h180 = _source45.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1532___mcc_h181 = _source45.dtor_name;
                  return this;
                } else {
                  RAST._IExpr _1533___mcc_h184 = _source45.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1534___mcc_h185 = _source45.dtor_name;
                  return this;
                }
              } else if (_source44.is_Block) {
                RAST._IExpr _1535___mcc_h188 = _source44.dtor_underlying;
                return this;
              } else if (_source44.is_StructBuild) {
                RAST._IExpr _1536___mcc_h190 = _source44.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _1537___mcc_h191 = _source44.dtor_assignments;
                return this;
              } else if (_source44.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _1538___mcc_h194 = _source44.dtor_arguments;
                return this;
              } else if (_source44.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _1539___mcc_h196 = _source44.dtor_op1;
                RAST._IExpr _1540___mcc_h197 = _source44.dtor_underlying;
                DAST.Format._IUnOpFormat _1541___mcc_h198 = _source44.dtor_format;
                return this;
              } else if (_source44.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _1542___mcc_h202 = _source44.dtor_op2;
                RAST._IExpr _1543___mcc_h203 = _source44.dtor_left;
                RAST._IExpr _1544___mcc_h204 = _source44.dtor_right;
                DAST.Format._IBinOpFormat _1545___mcc_h205 = _source44.dtor_format2;
                return this;
              } else if (_source44.is_TypeAscription) {
                RAST._IExpr _1546___mcc_h210 = _source44.dtor_left;
                RAST._IType _1547___mcc_h211 = _source44.dtor_tpe;
                return this;
              } else if (_source44.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _1548___mcc_h214 = _source44.dtor_value;
                return this;
              } else if (_source44.is_LiteralBool) {
                bool _1549___mcc_h216 = _source44.dtor_bvalue;
                return this;
              } else if (_source44.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _1550___mcc_h218 = _source44.dtor_value;
                bool _1551___mcc_h219 = _source44.dtor_binary;
                return this;
              } else if (_source44.is_DeclareVar) {
                RAST._IDeclareType _1552___mcc_h222 = _source44.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _1553___mcc_h223 = _source44.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _1554___mcc_h224 = _source44.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _1555___mcc_h225 = _source44.dtor_optRhs;
                return this;
              } else if (_source44.is_Assign) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1556___mcc_h230 = _source44.dtor_names;
                RAST._IExpr _1557___mcc_h231 = _source44.dtor_rhs;
                return this;
              } else if (_source44.is_IfExpr) {
                RAST._IExpr _1558___mcc_h234 = _source44.dtor_cond;
                RAST._IExpr _1559___mcc_h235 = _source44.dtor_thn;
                RAST._IExpr _1560___mcc_h236 = _source44.dtor_els;
                return this;
              } else if (_source44.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _1561___mcc_h240 = _source44.dtor_optCond;
                RAST._IExpr _1562___mcc_h241 = _source44.dtor_underlying;
                return this;
              } else if (_source44.is_For) {
                Dafny.ISequence<Dafny.Rune> _1563___mcc_h244 = _source44.dtor_name;
                RAST._IExpr _1564___mcc_h245 = _source44.dtor_range;
                RAST._IExpr _1565___mcc_h246 = _source44.dtor_body;
                return this;
              } else if (_source44.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _1566___mcc_h250 = _source44.dtor_lbl;
                RAST._IExpr _1567___mcc_h251 = _source44.dtor_underlying;
                return this;
              } else if (_source44.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1568___mcc_h254 = _source44.dtor_optLbl;
                return this;
              } else if (_source44.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1569___mcc_h256 = _source44.dtor_optLbl;
                return this;
              } else if (_source44.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _1570___mcc_h258 = _source44.dtor_optExpr;
                return this;
              } else if (_source44.is_CallType) {
                RAST._IExpr _1571___mcc_h260 = _source44.dtor_obj;
                Dafny.ISequence<RAST._IType> _1572___mcc_h261 = _source44.dtor_typeParameters;
                return this;
              } else if (_source44.is_Call) {
                RAST._IExpr _1573___mcc_h264 = _source44.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _1574___mcc_h265 = _source44.dtor_arguments;
                return this;
              } else if (_source44.is_Select) {
                RAST._IExpr _1575___mcc_h268 = _source44.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1576___mcc_h269 = _source44.dtor_name;
                return this;
              } else {
                RAST._IExpr _1577___mcc_h272 = _source44.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1578___mcc_h273 = _source44.dtor_name;
                return this;
              }
            } else {
              RAST._IExpr _1579___mcc_h276 = _source43.dtor_value;
              return this;
            }
          }
        } else if (_source41.is_Assign) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1580___mcc_h278 = _source41.dtor_names;
          RAST._IExpr _1581___mcc_h279 = _source41.dtor_rhs;
          return this;
        } else if (_source41.is_IfExpr) {
          RAST._IExpr _1582___mcc_h282 = _source41.dtor_cond;
          RAST._IExpr _1583___mcc_h283 = _source41.dtor_thn;
          RAST._IExpr _1584___mcc_h284 = _source41.dtor_els;
          RAST._IExpr _source46 = _1582___mcc_h282;
          if (_source46.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1585___mcc_h288 = _source46.dtor_content;
            return this;
          } else if (_source46.is_ExprFromType) {
            RAST._IType _1586___mcc_h290 = _source46.dtor_tpe;
            return this;
          } else if (_source46.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1587___mcc_h292 = _source46.dtor_name;
            return this;
          } else if (_source46.is_Match) {
            RAST._IExpr _1588___mcc_h294 = _source46.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1589___mcc_h295 = _source46.dtor_cases;
            return this;
          } else if (_source46.is_StmtExpr) {
            RAST._IExpr _1590___mcc_h298 = _source46.dtor_stmt;
            RAST._IExpr _1591___mcc_h299 = _source46.dtor_rhs;
            return this;
          } else if (_source46.is_Block) {
            RAST._IExpr _1592___mcc_h302 = _source46.dtor_underlying;
            return this;
          } else if (_source46.is_StructBuild) {
            RAST._IExpr _1593___mcc_h304 = _source46.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1594___mcc_h305 = _source46.dtor_assignments;
            return this;
          } else if (_source46.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1595___mcc_h308 = _source46.dtor_arguments;
            return this;
          } else if (_source46.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1596___mcc_h310 = _source46.dtor_op1;
            RAST._IExpr _1597___mcc_h311 = _source46.dtor_underlying;
            DAST.Format._IUnOpFormat _1598___mcc_h312 = _source46.dtor_format;
            if (object.Equals(_1596___mcc_h310, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
              RAST._IExpr _source47 = _1597___mcc_h311;
              if (_source47.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _1599___mcc_h316 = _source47.dtor_content;
                return this;
              } else if (_source47.is_ExprFromType) {
                RAST._IType _1600___mcc_h318 = _source47.dtor_tpe;
                return this;
              } else if (_source47.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _1601___mcc_h320 = _source47.dtor_name;
                return this;
              } else if (_source47.is_Match) {
                RAST._IExpr _1602___mcc_h322 = _source47.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _1603___mcc_h323 = _source47.dtor_cases;
                return this;
              } else if (_source47.is_StmtExpr) {
                RAST._IExpr _1604___mcc_h326 = _source47.dtor_stmt;
                RAST._IExpr _1605___mcc_h327 = _source47.dtor_rhs;
                return this;
              } else if (_source47.is_Block) {
                RAST._IExpr _1606___mcc_h330 = _source47.dtor_underlying;
                return this;
              } else if (_source47.is_StructBuild) {
                RAST._IExpr _1607___mcc_h332 = _source47.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _1608___mcc_h333 = _source47.dtor_assignments;
                return this;
              } else if (_source47.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _1609___mcc_h336 = _source47.dtor_arguments;
                return this;
              } else if (_source47.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _1610___mcc_h338 = _source47.dtor_op1;
                RAST._IExpr _1611___mcc_h339 = _source47.dtor_underlying;
                DAST.Format._IUnOpFormat _1612___mcc_h340 = _source47.dtor_format;
                return this;
              } else if (_source47.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _1613___mcc_h344 = _source47.dtor_op2;
                RAST._IExpr _1614___mcc_h345 = _source47.dtor_left;
                RAST._IExpr _1615___mcc_h346 = _source47.dtor_right;
                DAST.Format._IBinOpFormat _1616___mcc_h347 = _source47.dtor_format2;
                if (object.Equals(_1613___mcc_h344, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
                  RAST._IExpr _source48 = _1583___mcc_h283;
                  if (_source48.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _1617___mcc_h352 = _source48.dtor_content;
                    if (object.Equals(_1617___mcc_h352, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"Halt\");"))) {
                      RAST._IExpr _source49 = _1584___mcc_h284;
                      if (_source49.is_RawExpr) {
                        Dafny.ISequence<Dafny.Rune> _1618___mcc_h354 = _source49.dtor_content;
                        if (object.Equals(_1618___mcc_h354, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
                          RAST._IExpr _1619_last = _1440___mcc_h11;
                          DAST.Format._IUnOpFormat _1620_of = _1598___mcc_h312;
                          DAST.Format._IBinOpFormat _1621_f = _1616___mcc_h347;
                          RAST._IExpr _1622_b = _1615___mcc_h346;
                          RAST._IExpr _1623_a = _1614___mcc_h345;
                          RAST._IExpr _1624_rewriting = RAST.Expr.create_StmtExpr((RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("assert_eq!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_1623_a, _1622_b)), _1619_last);
                          return _1624_rewriting;
                        } else {
                          return this;
                        }
                      } else if (_source49.is_ExprFromType) {
                        RAST._IType _1625___mcc_h356 = _source49.dtor_tpe;
                        return this;
                      } else if (_source49.is_Identifier) {
                        Dafny.ISequence<Dafny.Rune> _1626___mcc_h358 = _source49.dtor_name;
                        return this;
                      } else if (_source49.is_Match) {
                        RAST._IExpr _1627___mcc_h360 = _source49.dtor_matchee;
                        Dafny.ISequence<RAST._IMatchCase> _1628___mcc_h361 = _source49.dtor_cases;
                        return this;
                      } else if (_source49.is_StmtExpr) {
                        RAST._IExpr _1629___mcc_h364 = _source49.dtor_stmt;
                        RAST._IExpr _1630___mcc_h365 = _source49.dtor_rhs;
                        return this;
                      } else if (_source49.is_Block) {
                        RAST._IExpr _1631___mcc_h368 = _source49.dtor_underlying;
                        return this;
                      } else if (_source49.is_StructBuild) {
                        RAST._IExpr _1632___mcc_h370 = _source49.dtor_underlying;
                        Dafny.ISequence<RAST._IAssignIdentifier> _1633___mcc_h371 = _source49.dtor_assignments;
                        return this;
                      } else if (_source49.is_Tuple) {
                        Dafny.ISequence<RAST._IExpr> _1634___mcc_h374 = _source49.dtor_arguments;
                        return this;
                      } else if (_source49.is_UnaryOp) {
                        Dafny.ISequence<Dafny.Rune> _1635___mcc_h376 = _source49.dtor_op1;
                        RAST._IExpr _1636___mcc_h377 = _source49.dtor_underlying;
                        DAST.Format._IUnOpFormat _1637___mcc_h378 = _source49.dtor_format;
                        return this;
                      } else if (_source49.is_BinaryOp) {
                        Dafny.ISequence<Dafny.Rune> _1638___mcc_h382 = _source49.dtor_op2;
                        RAST._IExpr _1639___mcc_h383 = _source49.dtor_left;
                        RAST._IExpr _1640___mcc_h384 = _source49.dtor_right;
                        DAST.Format._IBinOpFormat _1641___mcc_h385 = _source49.dtor_format2;
                        return this;
                      } else if (_source49.is_TypeAscription) {
                        RAST._IExpr _1642___mcc_h390 = _source49.dtor_left;
                        RAST._IType _1643___mcc_h391 = _source49.dtor_tpe;
                        return this;
                      } else if (_source49.is_LiteralInt) {
                        Dafny.ISequence<Dafny.Rune> _1644___mcc_h394 = _source49.dtor_value;
                        return this;
                      } else if (_source49.is_LiteralBool) {
                        bool _1645___mcc_h396 = _source49.dtor_bvalue;
                        return this;
                      } else if (_source49.is_LiteralString) {
                        Dafny.ISequence<Dafny.Rune> _1646___mcc_h398 = _source49.dtor_value;
                        bool _1647___mcc_h399 = _source49.dtor_binary;
                        return this;
                      } else if (_source49.is_DeclareVar) {
                        RAST._IDeclareType _1648___mcc_h402 = _source49.dtor_declareType;
                        Dafny.ISequence<Dafny.Rune> _1649___mcc_h403 = _source49.dtor_name;
                        Std.Wrappers._IOption<RAST._IType> _1650___mcc_h404 = _source49.dtor_optType;
                        Std.Wrappers._IOption<RAST._IExpr> _1651___mcc_h405 = _source49.dtor_optRhs;
                        return this;
                      } else if (_source49.is_Assign) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1652___mcc_h410 = _source49.dtor_names;
                        RAST._IExpr _1653___mcc_h411 = _source49.dtor_rhs;
                        return this;
                      } else if (_source49.is_IfExpr) {
                        RAST._IExpr _1654___mcc_h414 = _source49.dtor_cond;
                        RAST._IExpr _1655___mcc_h415 = _source49.dtor_thn;
                        RAST._IExpr _1656___mcc_h416 = _source49.dtor_els;
                        return this;
                      } else if (_source49.is_Loop) {
                        Std.Wrappers._IOption<RAST._IExpr> _1657___mcc_h420 = _source49.dtor_optCond;
                        RAST._IExpr _1658___mcc_h421 = _source49.dtor_underlying;
                        return this;
                      } else if (_source49.is_For) {
                        Dafny.ISequence<Dafny.Rune> _1659___mcc_h424 = _source49.dtor_name;
                        RAST._IExpr _1660___mcc_h425 = _source49.dtor_range;
                        RAST._IExpr _1661___mcc_h426 = _source49.dtor_body;
                        return this;
                      } else if (_source49.is_Labelled) {
                        Dafny.ISequence<Dafny.Rune> _1662___mcc_h430 = _source49.dtor_lbl;
                        RAST._IExpr _1663___mcc_h431 = _source49.dtor_underlying;
                        return this;
                      } else if (_source49.is_Break) {
                        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1664___mcc_h434 = _source49.dtor_optLbl;
                        return this;
                      } else if (_source49.is_Continue) {
                        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1665___mcc_h436 = _source49.dtor_optLbl;
                        return this;
                      } else if (_source49.is_Return) {
                        Std.Wrappers._IOption<RAST._IExpr> _1666___mcc_h438 = _source49.dtor_optExpr;
                        return this;
                      } else if (_source49.is_CallType) {
                        RAST._IExpr _1667___mcc_h440 = _source49.dtor_obj;
                        Dafny.ISequence<RAST._IType> _1668___mcc_h441 = _source49.dtor_typeParameters;
                        return this;
                      } else if (_source49.is_Call) {
                        RAST._IExpr _1669___mcc_h444 = _source49.dtor_obj;
                        Dafny.ISequence<RAST._IExpr> _1670___mcc_h445 = _source49.dtor_arguments;
                        return this;
                      } else if (_source49.is_Select) {
                        RAST._IExpr _1671___mcc_h448 = _source49.dtor_obj;
                        Dafny.ISequence<Dafny.Rune> _1672___mcc_h449 = _source49.dtor_name;
                        return this;
                      } else {
                        RAST._IExpr _1673___mcc_h452 = _source49.dtor_obj;
                        Dafny.ISequence<Dafny.Rune> _1674___mcc_h453 = _source49.dtor_name;
                        return this;
                      }
                    } else {
                      return this;
                    }
                  } else if (_source48.is_ExprFromType) {
                    RAST._IType _1675___mcc_h456 = _source48.dtor_tpe;
                    return this;
                  } else if (_source48.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _1676___mcc_h458 = _source48.dtor_name;
                    return this;
                  } else if (_source48.is_Match) {
                    RAST._IExpr _1677___mcc_h460 = _source48.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _1678___mcc_h461 = _source48.dtor_cases;
                    return this;
                  } else if (_source48.is_StmtExpr) {
                    RAST._IExpr _1679___mcc_h464 = _source48.dtor_stmt;
                    RAST._IExpr _1680___mcc_h465 = _source48.dtor_rhs;
                    return this;
                  } else if (_source48.is_Block) {
                    RAST._IExpr _1681___mcc_h468 = _source48.dtor_underlying;
                    return this;
                  } else if (_source48.is_StructBuild) {
                    RAST._IExpr _1682___mcc_h470 = _source48.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _1683___mcc_h471 = _source48.dtor_assignments;
                    return this;
                  } else if (_source48.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _1684___mcc_h474 = _source48.dtor_arguments;
                    return this;
                  } else if (_source48.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _1685___mcc_h476 = _source48.dtor_op1;
                    RAST._IExpr _1686___mcc_h477 = _source48.dtor_underlying;
                    DAST.Format._IUnOpFormat _1687___mcc_h478 = _source48.dtor_format;
                    return this;
                  } else if (_source48.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _1688___mcc_h482 = _source48.dtor_op2;
                    RAST._IExpr _1689___mcc_h483 = _source48.dtor_left;
                    RAST._IExpr _1690___mcc_h484 = _source48.dtor_right;
                    DAST.Format._IBinOpFormat _1691___mcc_h485 = _source48.dtor_format2;
                    return this;
                  } else if (_source48.is_TypeAscription) {
                    RAST._IExpr _1692___mcc_h490 = _source48.dtor_left;
                    RAST._IType _1693___mcc_h491 = _source48.dtor_tpe;
                    return this;
                  } else if (_source48.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _1694___mcc_h494 = _source48.dtor_value;
                    return this;
                  } else if (_source48.is_LiteralBool) {
                    bool _1695___mcc_h496 = _source48.dtor_bvalue;
                    return this;
                  } else if (_source48.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _1696___mcc_h498 = _source48.dtor_value;
                    bool _1697___mcc_h499 = _source48.dtor_binary;
                    return this;
                  } else if (_source48.is_DeclareVar) {
                    RAST._IDeclareType _1698___mcc_h502 = _source48.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _1699___mcc_h503 = _source48.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _1700___mcc_h504 = _source48.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _1701___mcc_h505 = _source48.dtor_optRhs;
                    return this;
                  } else if (_source48.is_Assign) {
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1702___mcc_h510 = _source48.dtor_names;
                    RAST._IExpr _1703___mcc_h511 = _source48.dtor_rhs;
                    return this;
                  } else if (_source48.is_IfExpr) {
                    RAST._IExpr _1704___mcc_h514 = _source48.dtor_cond;
                    RAST._IExpr _1705___mcc_h515 = _source48.dtor_thn;
                    RAST._IExpr _1706___mcc_h516 = _source48.dtor_els;
                    return this;
                  } else if (_source48.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _1707___mcc_h520 = _source48.dtor_optCond;
                    RAST._IExpr _1708___mcc_h521 = _source48.dtor_underlying;
                    return this;
                  } else if (_source48.is_For) {
                    Dafny.ISequence<Dafny.Rune> _1709___mcc_h524 = _source48.dtor_name;
                    RAST._IExpr _1710___mcc_h525 = _source48.dtor_range;
                    RAST._IExpr _1711___mcc_h526 = _source48.dtor_body;
                    return this;
                  } else if (_source48.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _1712___mcc_h530 = _source48.dtor_lbl;
                    RAST._IExpr _1713___mcc_h531 = _source48.dtor_underlying;
                    return this;
                  } else if (_source48.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1714___mcc_h534 = _source48.dtor_optLbl;
                    return this;
                  } else if (_source48.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1715___mcc_h536 = _source48.dtor_optLbl;
                    return this;
                  } else if (_source48.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _1716___mcc_h538 = _source48.dtor_optExpr;
                    return this;
                  } else if (_source48.is_CallType) {
                    RAST._IExpr _1717___mcc_h540 = _source48.dtor_obj;
                    Dafny.ISequence<RAST._IType> _1718___mcc_h541 = _source48.dtor_typeParameters;
                    return this;
                  } else if (_source48.is_Call) {
                    RAST._IExpr _1719___mcc_h544 = _source48.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _1720___mcc_h545 = _source48.dtor_arguments;
                    return this;
                  } else if (_source48.is_Select) {
                    RAST._IExpr _1721___mcc_h548 = _source48.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1722___mcc_h549 = _source48.dtor_name;
                    return this;
                  } else {
                    RAST._IExpr _1723___mcc_h552 = _source48.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1724___mcc_h553 = _source48.dtor_name;
                    return this;
                  }
                } else {
                  return this;
                }
              } else if (_source47.is_TypeAscription) {
                RAST._IExpr _1725___mcc_h556 = _source47.dtor_left;
                RAST._IType _1726___mcc_h557 = _source47.dtor_tpe;
                return this;
              } else if (_source47.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _1727___mcc_h560 = _source47.dtor_value;
                return this;
              } else if (_source47.is_LiteralBool) {
                bool _1728___mcc_h562 = _source47.dtor_bvalue;
                return this;
              } else if (_source47.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _1729___mcc_h564 = _source47.dtor_value;
                bool _1730___mcc_h565 = _source47.dtor_binary;
                return this;
              } else if (_source47.is_DeclareVar) {
                RAST._IDeclareType _1731___mcc_h568 = _source47.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _1732___mcc_h569 = _source47.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _1733___mcc_h570 = _source47.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _1734___mcc_h571 = _source47.dtor_optRhs;
                return this;
              } else if (_source47.is_Assign) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1735___mcc_h576 = _source47.dtor_names;
                RAST._IExpr _1736___mcc_h577 = _source47.dtor_rhs;
                return this;
              } else if (_source47.is_IfExpr) {
                RAST._IExpr _1737___mcc_h580 = _source47.dtor_cond;
                RAST._IExpr _1738___mcc_h581 = _source47.dtor_thn;
                RAST._IExpr _1739___mcc_h582 = _source47.dtor_els;
                return this;
              } else if (_source47.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _1740___mcc_h586 = _source47.dtor_optCond;
                RAST._IExpr _1741___mcc_h587 = _source47.dtor_underlying;
                return this;
              } else if (_source47.is_For) {
                Dafny.ISequence<Dafny.Rune> _1742___mcc_h590 = _source47.dtor_name;
                RAST._IExpr _1743___mcc_h591 = _source47.dtor_range;
                RAST._IExpr _1744___mcc_h592 = _source47.dtor_body;
                return this;
              } else if (_source47.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _1745___mcc_h596 = _source47.dtor_lbl;
                RAST._IExpr _1746___mcc_h597 = _source47.dtor_underlying;
                return this;
              } else if (_source47.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1747___mcc_h600 = _source47.dtor_optLbl;
                return this;
              } else if (_source47.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1748___mcc_h602 = _source47.dtor_optLbl;
                return this;
              } else if (_source47.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _1749___mcc_h604 = _source47.dtor_optExpr;
                return this;
              } else if (_source47.is_CallType) {
                RAST._IExpr _1750___mcc_h606 = _source47.dtor_obj;
                Dafny.ISequence<RAST._IType> _1751___mcc_h607 = _source47.dtor_typeParameters;
                return this;
              } else if (_source47.is_Call) {
                RAST._IExpr _1752___mcc_h610 = _source47.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _1753___mcc_h611 = _source47.dtor_arguments;
                return this;
              } else if (_source47.is_Select) {
                RAST._IExpr _1754___mcc_h614 = _source47.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1755___mcc_h615 = _source47.dtor_name;
                return this;
              } else {
                RAST._IExpr _1756___mcc_h618 = _source47.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1757___mcc_h619 = _source47.dtor_name;
                return this;
              }
            } else {
              return this;
            }
          } else if (_source46.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1758___mcc_h622 = _source46.dtor_op2;
            RAST._IExpr _1759___mcc_h623 = _source46.dtor_left;
            RAST._IExpr _1760___mcc_h624 = _source46.dtor_right;
            DAST.Format._IBinOpFormat _1761___mcc_h625 = _source46.dtor_format2;
            return this;
          } else if (_source46.is_TypeAscription) {
            RAST._IExpr _1762___mcc_h630 = _source46.dtor_left;
            RAST._IType _1763___mcc_h631 = _source46.dtor_tpe;
            return this;
          } else if (_source46.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1764___mcc_h634 = _source46.dtor_value;
            return this;
          } else if (_source46.is_LiteralBool) {
            bool _1765___mcc_h636 = _source46.dtor_bvalue;
            return this;
          } else if (_source46.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1766___mcc_h638 = _source46.dtor_value;
            bool _1767___mcc_h639 = _source46.dtor_binary;
            return this;
          } else if (_source46.is_DeclareVar) {
            RAST._IDeclareType _1768___mcc_h642 = _source46.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1769___mcc_h643 = _source46.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1770___mcc_h644 = _source46.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1771___mcc_h645 = _source46.dtor_optRhs;
            return this;
          } else if (_source46.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1772___mcc_h650 = _source46.dtor_names;
            RAST._IExpr _1773___mcc_h651 = _source46.dtor_rhs;
            return this;
          } else if (_source46.is_IfExpr) {
            RAST._IExpr _1774___mcc_h654 = _source46.dtor_cond;
            RAST._IExpr _1775___mcc_h655 = _source46.dtor_thn;
            RAST._IExpr _1776___mcc_h656 = _source46.dtor_els;
            return this;
          } else if (_source46.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1777___mcc_h660 = _source46.dtor_optCond;
            RAST._IExpr _1778___mcc_h661 = _source46.dtor_underlying;
            return this;
          } else if (_source46.is_For) {
            Dafny.ISequence<Dafny.Rune> _1779___mcc_h664 = _source46.dtor_name;
            RAST._IExpr _1780___mcc_h665 = _source46.dtor_range;
            RAST._IExpr _1781___mcc_h666 = _source46.dtor_body;
            return this;
          } else if (_source46.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1782___mcc_h670 = _source46.dtor_lbl;
            RAST._IExpr _1783___mcc_h671 = _source46.dtor_underlying;
            return this;
          } else if (_source46.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1784___mcc_h674 = _source46.dtor_optLbl;
            return this;
          } else if (_source46.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1785___mcc_h676 = _source46.dtor_optLbl;
            return this;
          } else if (_source46.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1786___mcc_h678 = _source46.dtor_optExpr;
            return this;
          } else if (_source46.is_CallType) {
            RAST._IExpr _1787___mcc_h680 = _source46.dtor_obj;
            Dafny.ISequence<RAST._IType> _1788___mcc_h681 = _source46.dtor_typeParameters;
            return this;
          } else if (_source46.is_Call) {
            RAST._IExpr _1789___mcc_h684 = _source46.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1790___mcc_h685 = _source46.dtor_arguments;
            return this;
          } else if (_source46.is_Select) {
            RAST._IExpr _1791___mcc_h688 = _source46.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1792___mcc_h689 = _source46.dtor_name;
            return this;
          } else {
            RAST._IExpr _1793___mcc_h692 = _source46.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1794___mcc_h693 = _source46.dtor_name;
            return this;
          }
        } else if (_source41.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _1795___mcc_h696 = _source41.dtor_optCond;
          RAST._IExpr _1796___mcc_h697 = _source41.dtor_underlying;
          return this;
        } else if (_source41.is_For) {
          Dafny.ISequence<Dafny.Rune> _1797___mcc_h700 = _source41.dtor_name;
          RAST._IExpr _1798___mcc_h701 = _source41.dtor_range;
          RAST._IExpr _1799___mcc_h702 = _source41.dtor_body;
          return this;
        } else if (_source41.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _1800___mcc_h706 = _source41.dtor_lbl;
          RAST._IExpr _1801___mcc_h707 = _source41.dtor_underlying;
          return this;
        } else if (_source41.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1802___mcc_h710 = _source41.dtor_optLbl;
          return this;
        } else if (_source41.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1803___mcc_h712 = _source41.dtor_optLbl;
          return this;
        } else if (_source41.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _1804___mcc_h714 = _source41.dtor_optExpr;
          return this;
        } else if (_source41.is_CallType) {
          RAST._IExpr _1805___mcc_h716 = _source41.dtor_obj;
          Dafny.ISequence<RAST._IType> _1806___mcc_h717 = _source41.dtor_typeParameters;
          return this;
        } else if (_source41.is_Call) {
          RAST._IExpr _1807___mcc_h720 = _source41.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _1808___mcc_h721 = _source41.dtor_arguments;
          return this;
        } else if (_source41.is_Select) {
          RAST._IExpr _1809___mcc_h724 = _source41.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1810___mcc_h725 = _source41.dtor_name;
          return this;
        } else {
          RAST._IExpr _1811___mcc_h728 = _source41.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1812___mcc_h729 = _source41.dtor_name;
          return this;
        }
      } else if (_source40.is_Block) {
        RAST._IExpr _1813___mcc_h732 = _source40.dtor_underlying;
        return this;
      } else if (_source40.is_StructBuild) {
        RAST._IExpr _1814___mcc_h734 = _source40.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _1815___mcc_h735 = _source40.dtor_assignments;
        return this;
      } else if (_source40.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _1816___mcc_h738 = _source40.dtor_arguments;
        return this;
      } else if (_source40.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _1817___mcc_h740 = _source40.dtor_op1;
        RAST._IExpr _1818___mcc_h741 = _source40.dtor_underlying;
        DAST.Format._IUnOpFormat _1819___mcc_h742 = _source40.dtor_format;
        if (object.Equals(_1817___mcc_h740, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          RAST._IExpr _source50 = _1818___mcc_h741;
          if (_source50.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1820___mcc_h746 = _source50.dtor_content;
            return this;
          } else if (_source50.is_ExprFromType) {
            RAST._IType _1821___mcc_h748 = _source50.dtor_tpe;
            return this;
          } else if (_source50.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1822___mcc_h750 = _source50.dtor_name;
            return this;
          } else if (_source50.is_Match) {
            RAST._IExpr _1823___mcc_h752 = _source50.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1824___mcc_h753 = _source50.dtor_cases;
            return this;
          } else if (_source50.is_StmtExpr) {
            RAST._IExpr _1825___mcc_h756 = _source50.dtor_stmt;
            RAST._IExpr _1826___mcc_h757 = _source50.dtor_rhs;
            return this;
          } else if (_source50.is_Block) {
            RAST._IExpr _1827___mcc_h760 = _source50.dtor_underlying;
            return this;
          } else if (_source50.is_StructBuild) {
            RAST._IExpr _1828___mcc_h762 = _source50.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1829___mcc_h763 = _source50.dtor_assignments;
            return this;
          } else if (_source50.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1830___mcc_h766 = _source50.dtor_arguments;
            return this;
          } else if (_source50.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1831___mcc_h768 = _source50.dtor_op1;
            RAST._IExpr _1832___mcc_h769 = _source50.dtor_underlying;
            DAST.Format._IUnOpFormat _1833___mcc_h770 = _source50.dtor_format;
            return this;
          } else if (_source50.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1834___mcc_h774 = _source50.dtor_op2;
            RAST._IExpr _1835___mcc_h775 = _source50.dtor_left;
            RAST._IExpr _1836___mcc_h776 = _source50.dtor_right;
            DAST.Format._IBinOpFormat _1837___mcc_h777 = _source50.dtor_format2;
            return this;
          } else if (_source50.is_TypeAscription) {
            RAST._IExpr _1838___mcc_h782 = _source50.dtor_left;
            RAST._IType _1839___mcc_h783 = _source50.dtor_tpe;
            return this;
          } else if (_source50.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1840___mcc_h786 = _source50.dtor_value;
            return this;
          } else if (_source50.is_LiteralBool) {
            bool _1841___mcc_h788 = _source50.dtor_bvalue;
            return this;
          } else if (_source50.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1842___mcc_h790 = _source50.dtor_value;
            bool _1843___mcc_h791 = _source50.dtor_binary;
            return this;
          } else if (_source50.is_DeclareVar) {
            RAST._IDeclareType _1844___mcc_h794 = _source50.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1845___mcc_h795 = _source50.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1846___mcc_h796 = _source50.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1847___mcc_h797 = _source50.dtor_optRhs;
            return this;
          } else if (_source50.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1848___mcc_h802 = _source50.dtor_names;
            RAST._IExpr _1849___mcc_h803 = _source50.dtor_rhs;
            return this;
          } else if (_source50.is_IfExpr) {
            RAST._IExpr _1850___mcc_h806 = _source50.dtor_cond;
            RAST._IExpr _1851___mcc_h807 = _source50.dtor_thn;
            RAST._IExpr _1852___mcc_h808 = _source50.dtor_els;
            return this;
          } else if (_source50.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1853___mcc_h812 = _source50.dtor_optCond;
            RAST._IExpr _1854___mcc_h813 = _source50.dtor_underlying;
            return this;
          } else if (_source50.is_For) {
            Dafny.ISequence<Dafny.Rune> _1855___mcc_h816 = _source50.dtor_name;
            RAST._IExpr _1856___mcc_h817 = _source50.dtor_range;
            RAST._IExpr _1857___mcc_h818 = _source50.dtor_body;
            return this;
          } else if (_source50.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1858___mcc_h822 = _source50.dtor_lbl;
            RAST._IExpr _1859___mcc_h823 = _source50.dtor_underlying;
            return this;
          } else if (_source50.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1860___mcc_h826 = _source50.dtor_optLbl;
            return this;
          } else if (_source50.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1861___mcc_h828 = _source50.dtor_optLbl;
            return this;
          } else if (_source50.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1862___mcc_h830 = _source50.dtor_optExpr;
            return this;
          } else if (_source50.is_CallType) {
            RAST._IExpr _1863___mcc_h832 = _source50.dtor_obj;
            Dafny.ISequence<RAST._IType> _1864___mcc_h833 = _source50.dtor_typeParameters;
            return this;
          } else if (_source50.is_Call) {
            RAST._IExpr _1865___mcc_h836 = _source50.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1866___mcc_h837 = _source50.dtor_arguments;
            RAST._IExpr _source51 = _1865___mcc_h836;
            if (_source51.is_RawExpr) {
              Dafny.ISequence<Dafny.Rune> _1867___mcc_h840 = _source51.dtor_content;
              return this;
            } else if (_source51.is_ExprFromType) {
              RAST._IType _1868___mcc_h842 = _source51.dtor_tpe;
              return this;
            } else if (_source51.is_Identifier) {
              Dafny.ISequence<Dafny.Rune> _1869___mcc_h844 = _source51.dtor_name;
              return this;
            } else if (_source51.is_Match) {
              RAST._IExpr _1870___mcc_h846 = _source51.dtor_matchee;
              Dafny.ISequence<RAST._IMatchCase> _1871___mcc_h847 = _source51.dtor_cases;
              return this;
            } else if (_source51.is_StmtExpr) {
              RAST._IExpr _1872___mcc_h850 = _source51.dtor_stmt;
              RAST._IExpr _1873___mcc_h851 = _source51.dtor_rhs;
              return this;
            } else if (_source51.is_Block) {
              RAST._IExpr _1874___mcc_h854 = _source51.dtor_underlying;
              return this;
            } else if (_source51.is_StructBuild) {
              RAST._IExpr _1875___mcc_h856 = _source51.dtor_underlying;
              Dafny.ISequence<RAST._IAssignIdentifier> _1876___mcc_h857 = _source51.dtor_assignments;
              return this;
            } else if (_source51.is_Tuple) {
              Dafny.ISequence<RAST._IExpr> _1877___mcc_h860 = _source51.dtor_arguments;
              return this;
            } else if (_source51.is_UnaryOp) {
              Dafny.ISequence<Dafny.Rune> _1878___mcc_h862 = _source51.dtor_op1;
              RAST._IExpr _1879___mcc_h863 = _source51.dtor_underlying;
              DAST.Format._IUnOpFormat _1880___mcc_h864 = _source51.dtor_format;
              return this;
            } else if (_source51.is_BinaryOp) {
              Dafny.ISequence<Dafny.Rune> _1881___mcc_h868 = _source51.dtor_op2;
              RAST._IExpr _1882___mcc_h869 = _source51.dtor_left;
              RAST._IExpr _1883___mcc_h870 = _source51.dtor_right;
              DAST.Format._IBinOpFormat _1884___mcc_h871 = _source51.dtor_format2;
              return this;
            } else if (_source51.is_TypeAscription) {
              RAST._IExpr _1885___mcc_h876 = _source51.dtor_left;
              RAST._IType _1886___mcc_h877 = _source51.dtor_tpe;
              return this;
            } else if (_source51.is_LiteralInt) {
              Dafny.ISequence<Dafny.Rune> _1887___mcc_h880 = _source51.dtor_value;
              return this;
            } else if (_source51.is_LiteralBool) {
              bool _1888___mcc_h882 = _source51.dtor_bvalue;
              return this;
            } else if (_source51.is_LiteralString) {
              Dafny.ISequence<Dafny.Rune> _1889___mcc_h884 = _source51.dtor_value;
              bool _1890___mcc_h885 = _source51.dtor_binary;
              return this;
            } else if (_source51.is_DeclareVar) {
              RAST._IDeclareType _1891___mcc_h888 = _source51.dtor_declareType;
              Dafny.ISequence<Dafny.Rune> _1892___mcc_h889 = _source51.dtor_name;
              Std.Wrappers._IOption<RAST._IType> _1893___mcc_h890 = _source51.dtor_optType;
              Std.Wrappers._IOption<RAST._IExpr> _1894___mcc_h891 = _source51.dtor_optRhs;
              return this;
            } else if (_source51.is_Assign) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1895___mcc_h896 = _source51.dtor_names;
              RAST._IExpr _1896___mcc_h897 = _source51.dtor_rhs;
              return this;
            } else if (_source51.is_IfExpr) {
              RAST._IExpr _1897___mcc_h900 = _source51.dtor_cond;
              RAST._IExpr _1898___mcc_h901 = _source51.dtor_thn;
              RAST._IExpr _1899___mcc_h902 = _source51.dtor_els;
              return this;
            } else if (_source51.is_Loop) {
              Std.Wrappers._IOption<RAST._IExpr> _1900___mcc_h906 = _source51.dtor_optCond;
              RAST._IExpr _1901___mcc_h907 = _source51.dtor_underlying;
              return this;
            } else if (_source51.is_For) {
              Dafny.ISequence<Dafny.Rune> _1902___mcc_h910 = _source51.dtor_name;
              RAST._IExpr _1903___mcc_h911 = _source51.dtor_range;
              RAST._IExpr _1904___mcc_h912 = _source51.dtor_body;
              return this;
            } else if (_source51.is_Labelled) {
              Dafny.ISequence<Dafny.Rune> _1905___mcc_h916 = _source51.dtor_lbl;
              RAST._IExpr _1906___mcc_h917 = _source51.dtor_underlying;
              return this;
            } else if (_source51.is_Break) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1907___mcc_h920 = _source51.dtor_optLbl;
              return this;
            } else if (_source51.is_Continue) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1908___mcc_h922 = _source51.dtor_optLbl;
              return this;
            } else if (_source51.is_Return) {
              Std.Wrappers._IOption<RAST._IExpr> _1909___mcc_h924 = _source51.dtor_optExpr;
              return this;
            } else if (_source51.is_CallType) {
              RAST._IExpr _1910___mcc_h926 = _source51.dtor_obj;
              Dafny.ISequence<RAST._IType> _1911___mcc_h927 = _source51.dtor_typeParameters;
              return this;
            } else if (_source51.is_Call) {
              RAST._IExpr _1912___mcc_h930 = _source51.dtor_obj;
              Dafny.ISequence<RAST._IExpr> _1913___mcc_h931 = _source51.dtor_arguments;
              return this;
            } else if (_source51.is_Select) {
              RAST._IExpr _1914___mcc_h934 = _source51.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1915___mcc_h935 = _source51.dtor_name;
              if (object.Equals(_1915___mcc_h935, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))) {
                DAST.Format._IUnOpFormat _1916_format = _1819___mcc_h742;
                Dafny.ISequence<RAST._IExpr> _1917_args = _1866___mcc_h837;
                RAST._IExpr _1918_underlying = _1914___mcc_h934;
                if ((_1917_args).Equals(Dafny.Sequence<RAST._IExpr>.FromElements())) {
                  return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _1918_underlying, _1916_format);
                } else {
                  return this;
                }
              } else {
                return this;
              }
            } else {
              RAST._IExpr _1919___mcc_h938 = _source51.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1920___mcc_h939 = _source51.dtor_name;
              return this;
            }
          } else if (_source50.is_Select) {
            RAST._IExpr _1921___mcc_h942 = _source50.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1922___mcc_h943 = _source50.dtor_name;
            return this;
          } else {
            RAST._IExpr _1923___mcc_h946 = _source50.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1924___mcc_h947 = _source50.dtor_name;
            return this;
          }
        } else if (object.Equals(_1817___mcc_h740, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
          RAST._IExpr _source52 = _1818___mcc_h741;
          if (_source52.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1925___mcc_h950 = _source52.dtor_content;
            return this;
          } else if (_source52.is_ExprFromType) {
            RAST._IType _1926___mcc_h952 = _source52.dtor_tpe;
            return this;
          } else if (_source52.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1927___mcc_h954 = _source52.dtor_name;
            return this;
          } else if (_source52.is_Match) {
            RAST._IExpr _1928___mcc_h956 = _source52.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1929___mcc_h957 = _source52.dtor_cases;
            return this;
          } else if (_source52.is_StmtExpr) {
            RAST._IExpr _1930___mcc_h960 = _source52.dtor_stmt;
            RAST._IExpr _1931___mcc_h961 = _source52.dtor_rhs;
            return this;
          } else if (_source52.is_Block) {
            RAST._IExpr _1932___mcc_h964 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_StructBuild) {
            RAST._IExpr _1933___mcc_h966 = _source52.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1934___mcc_h967 = _source52.dtor_assignments;
            return this;
          } else if (_source52.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1935___mcc_h970 = _source52.dtor_arguments;
            return this;
          } else if (_source52.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1936___mcc_h972 = _source52.dtor_op1;
            RAST._IExpr _1937___mcc_h973 = _source52.dtor_underlying;
            DAST.Format._IUnOpFormat _1938___mcc_h974 = _source52.dtor_format;
            return this;
          } else if (_source52.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1939___mcc_h978 = _source52.dtor_op2;
            RAST._IExpr _1940___mcc_h979 = _source52.dtor_left;
            RAST._IExpr _1941___mcc_h980 = _source52.dtor_right;
            DAST.Format._IBinOpFormat _1942___mcc_h981 = _source52.dtor_format2;
            if (object.Equals(_1939___mcc_h978, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
              DAST.Format._IUnOpFormat _source53 = _1819___mcc_h742;
              if (_source53.is_NoFormat) {
                return this;
              } else {
                DAST.Format._IBinOpFormat _1943_format = _1942___mcc_h981;
                RAST._IExpr _1944_right = _1941___mcc_h980;
                RAST._IExpr _1945_left = _1940___mcc_h979;
                return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!="), _1945_left, _1944_right, DAST.Format.BinOpFormat.create_NoFormat());
              }
            } else if (object.Equals(_1939___mcc_h978, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"))) {
              DAST.Format._IBinOpFormat _source54 = _1942___mcc_h981;
              if (_source54.is_NoFormat) {
                DAST.Format._IUnOpFormat _source55 = _1819___mcc_h742;
                if (_source55.is_NoFormat) {
                  return this;
                } else {
                  RAST._IExpr _1946_right = _1941___mcc_h980;
                  RAST._IExpr _1947_left = _1940___mcc_h979;
                  return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">="), _1947_left, _1946_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              } else if (_source54.is_ImpliesFormat) {
                return this;
              } else if (_source54.is_Equivalence) {
                return this;
              } else {
                DAST.Format._IUnOpFormat _source56 = _1819___mcc_h742;
                if (_source56.is_NoFormat) {
                  return this;
                } else {
                  RAST._IExpr _1948_right = _1941___mcc_h980;
                  RAST._IExpr _1949_left = _1940___mcc_h979;
                  return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _1948_right, _1949_left, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else {
              return this;
            }
          } else if (_source52.is_TypeAscription) {
            RAST._IExpr _1950___mcc_h986 = _source52.dtor_left;
            RAST._IType _1951___mcc_h987 = _source52.dtor_tpe;
            return this;
          } else if (_source52.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1952___mcc_h990 = _source52.dtor_value;
            return this;
          } else if (_source52.is_LiteralBool) {
            bool _1953___mcc_h992 = _source52.dtor_bvalue;
            return this;
          } else if (_source52.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1954___mcc_h994 = _source52.dtor_value;
            bool _1955___mcc_h995 = _source52.dtor_binary;
            return this;
          } else if (_source52.is_DeclareVar) {
            RAST._IDeclareType _1956___mcc_h998 = _source52.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1957___mcc_h999 = _source52.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1958___mcc_h1000 = _source52.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1959___mcc_h1001 = _source52.dtor_optRhs;
            return this;
          } else if (_source52.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1960___mcc_h1006 = _source52.dtor_names;
            RAST._IExpr _1961___mcc_h1007 = _source52.dtor_rhs;
            return this;
          } else if (_source52.is_IfExpr) {
            RAST._IExpr _1962___mcc_h1010 = _source52.dtor_cond;
            RAST._IExpr _1963___mcc_h1011 = _source52.dtor_thn;
            RAST._IExpr _1964___mcc_h1012 = _source52.dtor_els;
            return this;
          } else if (_source52.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1965___mcc_h1016 = _source52.dtor_optCond;
            RAST._IExpr _1966___mcc_h1017 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_For) {
            Dafny.ISequence<Dafny.Rune> _1967___mcc_h1020 = _source52.dtor_name;
            RAST._IExpr _1968___mcc_h1021 = _source52.dtor_range;
            RAST._IExpr _1969___mcc_h1022 = _source52.dtor_body;
            return this;
          } else if (_source52.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1970___mcc_h1026 = _source52.dtor_lbl;
            RAST._IExpr _1971___mcc_h1027 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1972___mcc_h1030 = _source52.dtor_optLbl;
            return this;
          } else if (_source52.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1973___mcc_h1032 = _source52.dtor_optLbl;
            return this;
          } else if (_source52.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1974___mcc_h1034 = _source52.dtor_optExpr;
            return this;
          } else if (_source52.is_CallType) {
            RAST._IExpr _1975___mcc_h1036 = _source52.dtor_obj;
            Dafny.ISequence<RAST._IType> _1976___mcc_h1037 = _source52.dtor_typeParameters;
            return this;
          } else if (_source52.is_Call) {
            RAST._IExpr _1977___mcc_h1040 = _source52.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1978___mcc_h1041 = _source52.dtor_arguments;
            return this;
          } else if (_source52.is_Select) {
            RAST._IExpr _1979___mcc_h1044 = _source52.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1980___mcc_h1045 = _source52.dtor_name;
            return this;
          } else {
            RAST._IExpr _1981___mcc_h1048 = _source52.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1982___mcc_h1049 = _source52.dtor_name;
            return this;
          }
        } else {
          return this;
        }
      } else if (_source40.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _1983___mcc_h1052 = _source40.dtor_op2;
        RAST._IExpr _1984___mcc_h1053 = _source40.dtor_left;
        RAST._IExpr _1985___mcc_h1054 = _source40.dtor_right;
        DAST.Format._IBinOpFormat _1986___mcc_h1055 = _source40.dtor_format2;
        return this;
      } else if (_source40.is_TypeAscription) {
        RAST._IExpr _1987___mcc_h1060 = _source40.dtor_left;
        RAST._IType _1988___mcc_h1061 = _source40.dtor_tpe;
        return this;
      } else if (_source40.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _1989___mcc_h1064 = _source40.dtor_value;
        return this;
      } else if (_source40.is_LiteralBool) {
        bool _1990___mcc_h1066 = _source40.dtor_bvalue;
        return this;
      } else if (_source40.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _1991___mcc_h1068 = _source40.dtor_value;
        bool _1992___mcc_h1069 = _source40.dtor_binary;
        return this;
      } else if (_source40.is_DeclareVar) {
        RAST._IDeclareType _1993___mcc_h1072 = _source40.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _1994___mcc_h1073 = _source40.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _1995___mcc_h1074 = _source40.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _1996___mcc_h1075 = _source40.dtor_optRhs;
        return this;
      } else if (_source40.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1997___mcc_h1080 = _source40.dtor_names;
        RAST._IExpr _1998___mcc_h1081 = _source40.dtor_rhs;
        return this;
      } else if (_source40.is_IfExpr) {
        RAST._IExpr _1999___mcc_h1084 = _source40.dtor_cond;
        RAST._IExpr _2000___mcc_h1085 = _source40.dtor_thn;
        RAST._IExpr _2001___mcc_h1086 = _source40.dtor_els;
        return this;
      } else if (_source40.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2002___mcc_h1090 = _source40.dtor_optCond;
        RAST._IExpr _2003___mcc_h1091 = _source40.dtor_underlying;
        return this;
      } else if (_source40.is_For) {
        Dafny.ISequence<Dafny.Rune> _2004___mcc_h1094 = _source40.dtor_name;
        RAST._IExpr _2005___mcc_h1095 = _source40.dtor_range;
        RAST._IExpr _2006___mcc_h1096 = _source40.dtor_body;
        return this;
      } else if (_source40.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2007___mcc_h1100 = _source40.dtor_lbl;
        RAST._IExpr _2008___mcc_h1101 = _source40.dtor_underlying;
        return this;
      } else if (_source40.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2009___mcc_h1104 = _source40.dtor_optLbl;
        return this;
      } else if (_source40.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2010___mcc_h1106 = _source40.dtor_optLbl;
        return this;
      } else if (_source40.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2011___mcc_h1108 = _source40.dtor_optExpr;
        return this;
      } else if (_source40.is_CallType) {
        RAST._IExpr _2012___mcc_h1110 = _source40.dtor_obj;
        Dafny.ISequence<RAST._IType> _2013___mcc_h1111 = _source40.dtor_typeParameters;
        return this;
      } else if (_source40.is_Call) {
        RAST._IExpr _2014___mcc_h1114 = _source40.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2015___mcc_h1115 = _source40.dtor_arguments;
        RAST._IExpr _source57 = _2014___mcc_h1114;
        if (_source57.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _2016___mcc_h1118 = _source57.dtor_content;
          return this;
        } else if (_source57.is_ExprFromType) {
          RAST._IType _2017___mcc_h1120 = _source57.dtor_tpe;
          return this;
        } else if (_source57.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _2018___mcc_h1122 = _source57.dtor_name;
          return this;
        } else if (_source57.is_Match) {
          RAST._IExpr _2019___mcc_h1124 = _source57.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _2020___mcc_h1125 = _source57.dtor_cases;
          return this;
        } else if (_source57.is_StmtExpr) {
          RAST._IExpr _2021___mcc_h1128 = _source57.dtor_stmt;
          RAST._IExpr _2022___mcc_h1129 = _source57.dtor_rhs;
          return this;
        } else if (_source57.is_Block) {
          RAST._IExpr _2023___mcc_h1132 = _source57.dtor_underlying;
          return this;
        } else if (_source57.is_StructBuild) {
          RAST._IExpr _2024___mcc_h1134 = _source57.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _2025___mcc_h1135 = _source57.dtor_assignments;
          return this;
        } else if (_source57.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _2026___mcc_h1138 = _source57.dtor_arguments;
          return this;
        } else if (_source57.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _2027___mcc_h1140 = _source57.dtor_op1;
          RAST._IExpr _2028___mcc_h1141 = _source57.dtor_underlying;
          DAST.Format._IUnOpFormat _2029___mcc_h1142 = _source57.dtor_format;
          return this;
        } else if (_source57.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _2030___mcc_h1146 = _source57.dtor_op2;
          RAST._IExpr _2031___mcc_h1147 = _source57.dtor_left;
          RAST._IExpr _2032___mcc_h1148 = _source57.dtor_right;
          DAST.Format._IBinOpFormat _2033___mcc_h1149 = _source57.dtor_format2;
          return this;
        } else if (_source57.is_TypeAscription) {
          RAST._IExpr _2034___mcc_h1154 = _source57.dtor_left;
          RAST._IType _2035___mcc_h1155 = _source57.dtor_tpe;
          return this;
        } else if (_source57.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _2036___mcc_h1158 = _source57.dtor_value;
          return this;
        } else if (_source57.is_LiteralBool) {
          bool _2037___mcc_h1160 = _source57.dtor_bvalue;
          return this;
        } else if (_source57.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _2038___mcc_h1162 = _source57.dtor_value;
          bool _2039___mcc_h1163 = _source57.dtor_binary;
          return this;
        } else if (_source57.is_DeclareVar) {
          RAST._IDeclareType _2040___mcc_h1166 = _source57.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _2041___mcc_h1167 = _source57.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _2042___mcc_h1168 = _source57.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _2043___mcc_h1169 = _source57.dtor_optRhs;
          return this;
        } else if (_source57.is_Assign) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2044___mcc_h1174 = _source57.dtor_names;
          RAST._IExpr _2045___mcc_h1175 = _source57.dtor_rhs;
          return this;
        } else if (_source57.is_IfExpr) {
          RAST._IExpr _2046___mcc_h1178 = _source57.dtor_cond;
          RAST._IExpr _2047___mcc_h1179 = _source57.dtor_thn;
          RAST._IExpr _2048___mcc_h1180 = _source57.dtor_els;
          return this;
        } else if (_source57.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _2049___mcc_h1184 = _source57.dtor_optCond;
          RAST._IExpr _2050___mcc_h1185 = _source57.dtor_underlying;
          return this;
        } else if (_source57.is_For) {
          Dafny.ISequence<Dafny.Rune> _2051___mcc_h1188 = _source57.dtor_name;
          RAST._IExpr _2052___mcc_h1189 = _source57.dtor_range;
          RAST._IExpr _2053___mcc_h1190 = _source57.dtor_body;
          return this;
        } else if (_source57.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _2054___mcc_h1194 = _source57.dtor_lbl;
          RAST._IExpr _2055___mcc_h1195 = _source57.dtor_underlying;
          return this;
        } else if (_source57.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2056___mcc_h1198 = _source57.dtor_optLbl;
          return this;
        } else if (_source57.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2057___mcc_h1200 = _source57.dtor_optLbl;
          return this;
        } else if (_source57.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _2058___mcc_h1202 = _source57.dtor_optExpr;
          return this;
        } else if (_source57.is_CallType) {
          RAST._IExpr _2059___mcc_h1204 = _source57.dtor_obj;
          Dafny.ISequence<RAST._IType> _2060___mcc_h1205 = _source57.dtor_typeParameters;
          return this;
        } else if (_source57.is_Call) {
          RAST._IExpr _2061___mcc_h1208 = _source57.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _2062___mcc_h1209 = _source57.dtor_arguments;
          return this;
        } else if (_source57.is_Select) {
          RAST._IExpr _2063___mcc_h1212 = _source57.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _2064___mcc_h1213 = _source57.dtor_name;
          return this;
        } else {
          RAST._IExpr _2065___mcc_h1216 = _source57.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _2066___mcc_h1217 = _source57.dtor_name;
          if (object.Equals(_2066___mcc_h1217, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))) {
            Dafny.ISequence<RAST._IExpr> _2067_args = _2015___mcc_h1115;
            RAST._IExpr _2068_r = _2065___mcc_h1216;
            if (((!object.Equals(_2068_r, RAST.__default.dafny__runtime)) && (!object.Equals(_2068_r, RAST.__default.@global))) || ((new BigInteger((_2067_args).Count)) != (new BigInteger(2)))) {
              return this;
            } else {
              RAST._IExpr _2069_expr = (_2067_args).Select(BigInteger.Zero);
              RAST._IExpr _2070_tpeExpr = (_2067_args).Select(BigInteger.One);
              if (!((_2070_tpeExpr).is_ExprFromType)) {
                return this;
              } else {
                RAST._IType _2071_tpe = (_2070_tpeExpr).dtor_tpe;
                if (((((((((((_2071_tpe).is_U8) || ((_2071_tpe).is_U16)) || ((_2071_tpe).is_U32)) || ((_2071_tpe).is_U64)) || ((_2071_tpe).is_U128)) || ((_2071_tpe).is_I8)) || ((_2071_tpe).is_I16)) || ((_2071_tpe).is_I32)) || ((_2071_tpe).is_I64)) || ((_2071_tpe).is_I128)) {
                  RAST._IExpr _source58 = _2069_expr;
                  if (_source58.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _2072___mcc_h1228 = _source58.dtor_content;
                    return this;
                  } else if (_source58.is_ExprFromType) {
                    RAST._IType _2073___mcc_h1230 = _source58.dtor_tpe;
                    return this;
                  } else if (_source58.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _2074___mcc_h1232 = _source58.dtor_name;
                    return this;
                  } else if (_source58.is_Match) {
                    RAST._IExpr _2075___mcc_h1234 = _source58.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _2076___mcc_h1235 = _source58.dtor_cases;
                    return this;
                  } else if (_source58.is_StmtExpr) {
                    RAST._IExpr _2077___mcc_h1238 = _source58.dtor_stmt;
                    RAST._IExpr _2078___mcc_h1239 = _source58.dtor_rhs;
                    return this;
                  } else if (_source58.is_Block) {
                    RAST._IExpr _2079___mcc_h1242 = _source58.dtor_underlying;
                    return this;
                  } else if (_source58.is_StructBuild) {
                    RAST._IExpr _2080___mcc_h1244 = _source58.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _2081___mcc_h1245 = _source58.dtor_assignments;
                    return this;
                  } else if (_source58.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _2082___mcc_h1248 = _source58.dtor_arguments;
                    return this;
                  } else if (_source58.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _2083___mcc_h1250 = _source58.dtor_op1;
                    RAST._IExpr _2084___mcc_h1251 = _source58.dtor_underlying;
                    DAST.Format._IUnOpFormat _2085___mcc_h1252 = _source58.dtor_format;
                    return this;
                  } else if (_source58.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _2086___mcc_h1256 = _source58.dtor_op2;
                    RAST._IExpr _2087___mcc_h1257 = _source58.dtor_left;
                    RAST._IExpr _2088___mcc_h1258 = _source58.dtor_right;
                    DAST.Format._IBinOpFormat _2089___mcc_h1259 = _source58.dtor_format2;
                    return this;
                  } else if (_source58.is_TypeAscription) {
                    RAST._IExpr _2090___mcc_h1264 = _source58.dtor_left;
                    RAST._IType _2091___mcc_h1265 = _source58.dtor_tpe;
                    return this;
                  } else if (_source58.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _2092___mcc_h1268 = _source58.dtor_value;
                    return this;
                  } else if (_source58.is_LiteralBool) {
                    bool _2093___mcc_h1270 = _source58.dtor_bvalue;
                    return this;
                  } else if (_source58.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _2094___mcc_h1272 = _source58.dtor_value;
                    bool _2095___mcc_h1273 = _source58.dtor_binary;
                    return this;
                  } else if (_source58.is_DeclareVar) {
                    RAST._IDeclareType _2096___mcc_h1276 = _source58.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _2097___mcc_h1277 = _source58.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _2098___mcc_h1278 = _source58.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _2099___mcc_h1279 = _source58.dtor_optRhs;
                    return this;
                  } else if (_source58.is_Assign) {
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2100___mcc_h1284 = _source58.dtor_names;
                    RAST._IExpr _2101___mcc_h1285 = _source58.dtor_rhs;
                    return this;
                  } else if (_source58.is_IfExpr) {
                    RAST._IExpr _2102___mcc_h1288 = _source58.dtor_cond;
                    RAST._IExpr _2103___mcc_h1289 = _source58.dtor_thn;
                    RAST._IExpr _2104___mcc_h1290 = _source58.dtor_els;
                    return this;
                  } else if (_source58.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _2105___mcc_h1294 = _source58.dtor_optCond;
                    RAST._IExpr _2106___mcc_h1295 = _source58.dtor_underlying;
                    return this;
                  } else if (_source58.is_For) {
                    Dafny.ISequence<Dafny.Rune> _2107___mcc_h1298 = _source58.dtor_name;
                    RAST._IExpr _2108___mcc_h1299 = _source58.dtor_range;
                    RAST._IExpr _2109___mcc_h1300 = _source58.dtor_body;
                    return this;
                  } else if (_source58.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _2110___mcc_h1304 = _source58.dtor_lbl;
                    RAST._IExpr _2111___mcc_h1305 = _source58.dtor_underlying;
                    return this;
                  } else if (_source58.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2112___mcc_h1308 = _source58.dtor_optLbl;
                    return this;
                  } else if (_source58.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2113___mcc_h1310 = _source58.dtor_optLbl;
                    return this;
                  } else if (_source58.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _2114___mcc_h1312 = _source58.dtor_optExpr;
                    return this;
                  } else if (_source58.is_CallType) {
                    RAST._IExpr _2115___mcc_h1314 = _source58.dtor_obj;
                    Dafny.ISequence<RAST._IType> _2116___mcc_h1315 = _source58.dtor_typeParameters;
                    return this;
                  } else if (_source58.is_Call) {
                    RAST._IExpr _2117___mcc_h1318 = _source58.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _2118___mcc_h1319 = _source58.dtor_arguments;
                    RAST._IExpr _source59 = _2117___mcc_h1318;
                    if (_source59.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _2119___mcc_h1322 = _source59.dtor_content;
                      return this;
                    } else if (_source59.is_ExprFromType) {
                      RAST._IType _2120___mcc_h1324 = _source59.dtor_tpe;
                      return this;
                    } else if (_source59.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _2121___mcc_h1326 = _source59.dtor_name;
                      return this;
                    } else if (_source59.is_Match) {
                      RAST._IExpr _2122___mcc_h1328 = _source59.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _2123___mcc_h1329 = _source59.dtor_cases;
                      return this;
                    } else if (_source59.is_StmtExpr) {
                      RAST._IExpr _2124___mcc_h1332 = _source59.dtor_stmt;
                      RAST._IExpr _2125___mcc_h1333 = _source59.dtor_rhs;
                      return this;
                    } else if (_source59.is_Block) {
                      RAST._IExpr _2126___mcc_h1336 = _source59.dtor_underlying;
                      return this;
                    } else if (_source59.is_StructBuild) {
                      RAST._IExpr _2127___mcc_h1338 = _source59.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _2128___mcc_h1339 = _source59.dtor_assignments;
                      return this;
                    } else if (_source59.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _2129___mcc_h1342 = _source59.dtor_arguments;
                      return this;
                    } else if (_source59.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _2130___mcc_h1344 = _source59.dtor_op1;
                      RAST._IExpr _2131___mcc_h1345 = _source59.dtor_underlying;
                      DAST.Format._IUnOpFormat _2132___mcc_h1346 = _source59.dtor_format;
                      return this;
                    } else if (_source59.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _2133___mcc_h1350 = _source59.dtor_op2;
                      RAST._IExpr _2134___mcc_h1351 = _source59.dtor_left;
                      RAST._IExpr _2135___mcc_h1352 = _source59.dtor_right;
                      DAST.Format._IBinOpFormat _2136___mcc_h1353 = _source59.dtor_format2;
                      return this;
                    } else if (_source59.is_TypeAscription) {
                      RAST._IExpr _2137___mcc_h1358 = _source59.dtor_left;
                      RAST._IType _2138___mcc_h1359 = _source59.dtor_tpe;
                      return this;
                    } else if (_source59.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _2139___mcc_h1362 = _source59.dtor_value;
                      return this;
                    } else if (_source59.is_LiteralBool) {
                      bool _2140___mcc_h1364 = _source59.dtor_bvalue;
                      return this;
                    } else if (_source59.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _2141___mcc_h1366 = _source59.dtor_value;
                      bool _2142___mcc_h1367 = _source59.dtor_binary;
                      return this;
                    } else if (_source59.is_DeclareVar) {
                      RAST._IDeclareType _2143___mcc_h1370 = _source59.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _2144___mcc_h1371 = _source59.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _2145___mcc_h1372 = _source59.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _2146___mcc_h1373 = _source59.dtor_optRhs;
                      return this;
                    } else if (_source59.is_Assign) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2147___mcc_h1378 = _source59.dtor_names;
                      RAST._IExpr _2148___mcc_h1379 = _source59.dtor_rhs;
                      return this;
                    } else if (_source59.is_IfExpr) {
                      RAST._IExpr _2149___mcc_h1382 = _source59.dtor_cond;
                      RAST._IExpr _2150___mcc_h1383 = _source59.dtor_thn;
                      RAST._IExpr _2151___mcc_h1384 = _source59.dtor_els;
                      return this;
                    } else if (_source59.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _2152___mcc_h1388 = _source59.dtor_optCond;
                      RAST._IExpr _2153___mcc_h1389 = _source59.dtor_underlying;
                      return this;
                    } else if (_source59.is_For) {
                      Dafny.ISequence<Dafny.Rune> _2154___mcc_h1392 = _source59.dtor_name;
                      RAST._IExpr _2155___mcc_h1393 = _source59.dtor_range;
                      RAST._IExpr _2156___mcc_h1394 = _source59.dtor_body;
                      return this;
                    } else if (_source59.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _2157___mcc_h1398 = _source59.dtor_lbl;
                      RAST._IExpr _2158___mcc_h1399 = _source59.dtor_underlying;
                      return this;
                    } else if (_source59.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2159___mcc_h1402 = _source59.dtor_optLbl;
                      return this;
                    } else if (_source59.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2160___mcc_h1404 = _source59.dtor_optLbl;
                      return this;
                    } else if (_source59.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _2161___mcc_h1406 = _source59.dtor_optExpr;
                      return this;
                    } else if (_source59.is_CallType) {
                      RAST._IExpr _2162___mcc_h1408 = _source59.dtor_obj;
                      Dafny.ISequence<RAST._IType> _2163___mcc_h1409 = _source59.dtor_typeParameters;
                      return this;
                    } else if (_source59.is_Call) {
                      RAST._IExpr _2164___mcc_h1412 = _source59.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _2165___mcc_h1413 = _source59.dtor_arguments;
                      return this;
                    } else if (_source59.is_Select) {
                      RAST._IExpr _2166___mcc_h1416 = _source59.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _2167___mcc_h1417 = _source59.dtor_name;
                      return this;
                    } else {
                      RAST._IExpr _2168___mcc_h1420 = _source59.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _2169___mcc_h1421 = _source59.dtor_name;
                      if (object.Equals(_2169___mcc_h1421, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))) {
                        Dafny.ISequence<RAST._IExpr> _2170_args = _2118___mcc_h1319;
                        RAST._IExpr _2171_base = _2168___mcc_h1420;
                        if (((new BigInteger((_2170_args).Count)) == (BigInteger.One)) && ((object.Equals(_2171_base, RAST.__default.dafny__runtime)) || (object.Equals(_2171_base, RAST.__default.@global)))) {
                          RAST._IExpr _source60 = (_2170_args).Select(BigInteger.Zero);
                          if (_source60.is_RawExpr) {
                            Dafny.ISequence<Dafny.Rune> _2172___mcc_h1432 = _source60.dtor_content;
                            return this;
                          } else if (_source60.is_ExprFromType) {
                            RAST._IType _2173___mcc_h1434 = _source60.dtor_tpe;
                            return this;
                          } else if (_source60.is_Identifier) {
                            Dafny.ISequence<Dafny.Rune> _2174___mcc_h1436 = _source60.dtor_name;
                            return this;
                          } else if (_source60.is_Match) {
                            RAST._IExpr _2175___mcc_h1438 = _source60.dtor_matchee;
                            Dafny.ISequence<RAST._IMatchCase> _2176___mcc_h1439 = _source60.dtor_cases;
                            return this;
                          } else if (_source60.is_StmtExpr) {
                            RAST._IExpr _2177___mcc_h1442 = _source60.dtor_stmt;
                            RAST._IExpr _2178___mcc_h1443 = _source60.dtor_rhs;
                            return this;
                          } else if (_source60.is_Block) {
                            RAST._IExpr _2179___mcc_h1446 = _source60.dtor_underlying;
                            return this;
                          } else if (_source60.is_StructBuild) {
                            RAST._IExpr _2180___mcc_h1448 = _source60.dtor_underlying;
                            Dafny.ISequence<RAST._IAssignIdentifier> _2181___mcc_h1449 = _source60.dtor_assignments;
                            return this;
                          } else if (_source60.is_Tuple) {
                            Dafny.ISequence<RAST._IExpr> _2182___mcc_h1452 = _source60.dtor_arguments;
                            return this;
                          } else if (_source60.is_UnaryOp) {
                            Dafny.ISequence<Dafny.Rune> _2183___mcc_h1454 = _source60.dtor_op1;
                            RAST._IExpr _2184___mcc_h1455 = _source60.dtor_underlying;
                            DAST.Format._IUnOpFormat _2185___mcc_h1456 = _source60.dtor_format;
                            return this;
                          } else if (_source60.is_BinaryOp) {
                            Dafny.ISequence<Dafny.Rune> _2186___mcc_h1460 = _source60.dtor_op2;
                            RAST._IExpr _2187___mcc_h1461 = _source60.dtor_left;
                            RAST._IExpr _2188___mcc_h1462 = _source60.dtor_right;
                            DAST.Format._IBinOpFormat _2189___mcc_h1463 = _source60.dtor_format2;
                            return this;
                          } else if (_source60.is_TypeAscription) {
                            RAST._IExpr _2190___mcc_h1468 = _source60.dtor_left;
                            RAST._IType _2191___mcc_h1469 = _source60.dtor_tpe;
                            return this;
                          } else if (_source60.is_LiteralInt) {
                            Dafny.ISequence<Dafny.Rune> _2192___mcc_h1472 = _source60.dtor_value;
                            Dafny.ISequence<Dafny.Rune> _2193_number = _2192___mcc_h1472;
                            return RAST.Expr.create_LiteralInt(_2193_number);
                          } else if (_source60.is_LiteralBool) {
                            bool _2194___mcc_h1474 = _source60.dtor_bvalue;
                            return this;
                          } else if (_source60.is_LiteralString) {
                            Dafny.ISequence<Dafny.Rune> _2195___mcc_h1476 = _source60.dtor_value;
                            bool _2196___mcc_h1477 = _source60.dtor_binary;
                            Dafny.ISequence<Dafny.Rune> _2197_number = _2195___mcc_h1476;
                            return RAST.Expr.create_LiteralInt(_2197_number);
                          } else if (_source60.is_DeclareVar) {
                            RAST._IDeclareType _2198___mcc_h1480 = _source60.dtor_declareType;
                            Dafny.ISequence<Dafny.Rune> _2199___mcc_h1481 = _source60.dtor_name;
                            Std.Wrappers._IOption<RAST._IType> _2200___mcc_h1482 = _source60.dtor_optType;
                            Std.Wrappers._IOption<RAST._IExpr> _2201___mcc_h1483 = _source60.dtor_optRhs;
                            return this;
                          } else if (_source60.is_Assign) {
                            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2202___mcc_h1488 = _source60.dtor_names;
                            RAST._IExpr _2203___mcc_h1489 = _source60.dtor_rhs;
                            return this;
                          } else if (_source60.is_IfExpr) {
                            RAST._IExpr _2204___mcc_h1492 = _source60.dtor_cond;
                            RAST._IExpr _2205___mcc_h1493 = _source60.dtor_thn;
                            RAST._IExpr _2206___mcc_h1494 = _source60.dtor_els;
                            return this;
                          } else if (_source60.is_Loop) {
                            Std.Wrappers._IOption<RAST._IExpr> _2207___mcc_h1498 = _source60.dtor_optCond;
                            RAST._IExpr _2208___mcc_h1499 = _source60.dtor_underlying;
                            return this;
                          } else if (_source60.is_For) {
                            Dafny.ISequence<Dafny.Rune> _2209___mcc_h1502 = _source60.dtor_name;
                            RAST._IExpr _2210___mcc_h1503 = _source60.dtor_range;
                            RAST._IExpr _2211___mcc_h1504 = _source60.dtor_body;
                            return this;
                          } else if (_source60.is_Labelled) {
                            Dafny.ISequence<Dafny.Rune> _2212___mcc_h1508 = _source60.dtor_lbl;
                            RAST._IExpr _2213___mcc_h1509 = _source60.dtor_underlying;
                            return this;
                          } else if (_source60.is_Break) {
                            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2214___mcc_h1512 = _source60.dtor_optLbl;
                            return this;
                          } else if (_source60.is_Continue) {
                            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2215___mcc_h1514 = _source60.dtor_optLbl;
                            return this;
                          } else if (_source60.is_Return) {
                            Std.Wrappers._IOption<RAST._IExpr> _2216___mcc_h1516 = _source60.dtor_optExpr;
                            return this;
                          } else if (_source60.is_CallType) {
                            RAST._IExpr _2217___mcc_h1518 = _source60.dtor_obj;
                            Dafny.ISequence<RAST._IType> _2218___mcc_h1519 = _source60.dtor_typeParameters;
                            return this;
                          } else if (_source60.is_Call) {
                            RAST._IExpr _2219___mcc_h1522 = _source60.dtor_obj;
                            Dafny.ISequence<RAST._IExpr> _2220___mcc_h1523 = _source60.dtor_arguments;
                            return this;
                          } else if (_source60.is_Select) {
                            RAST._IExpr _2221___mcc_h1526 = _source60.dtor_obj;
                            Dafny.ISequence<Dafny.Rune> _2222___mcc_h1527 = _source60.dtor_name;
                            return this;
                          } else {
                            RAST._IExpr _2223___mcc_h1530 = _source60.dtor_obj;
                            Dafny.ISequence<Dafny.Rune> _2224___mcc_h1531 = _source60.dtor_name;
                            return this;
                          }
                        } else {
                          return this;
                        }
                      } else {
                        return this;
                      }
                    }
                  } else if (_source58.is_Select) {
                    RAST._IExpr _2225___mcc_h1424 = _source58.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _2226___mcc_h1425 = _source58.dtor_name;
                    return this;
                  } else {
                    RAST._IExpr _2227___mcc_h1428 = _source58.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _2228___mcc_h1429 = _source58.dtor_name;
                    return this;
                  }
                } else {
                  return this;
                }
              }
            }
          } else {
            return this;
          }
        }
      } else if (_source40.is_Select) {
        RAST._IExpr _2229___mcc_h1220 = _source40.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2230___mcc_h1221 = _source40.dtor_name;
        return this;
      } else {
        RAST._IExpr _2231___mcc_h1224 = _source40.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2232___mcc_h1225 = _source40.dtor_name;
        return this;
      }
    }
    public bool LeftRequiresParentheses(RAST._IExpr left) {
      return ((this).printingInfo).NeedParenthesesForLeft((left).printingInfo);
    }
    public _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> LeftParentheses(RAST._IExpr left) {
      if ((this).LeftRequiresParentheses(left)) {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      }
    }
    public bool RightRequiresParentheses(RAST._IExpr right) {
      return ((this).printingInfo).NeedParenthesesForRight((right).printingInfo);
    }
    public _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> RightParentheses(RAST._IExpr right) {
      if ((this).RightRequiresParentheses(right)) {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> RightMostIdentifier() {
      RAST._IExpr _source61 = this;
      if (_source61.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2233___mcc_h0 = _source61.dtor_content;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_ExprFromType) {
        RAST._IType _2234___mcc_h2 = _source61.dtor_tpe;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2235___mcc_h4 = _source61.dtor_name;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Match) {
        RAST._IExpr _2236___mcc_h6 = _source61.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2237___mcc_h7 = _source61.dtor_cases;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_StmtExpr) {
        RAST._IExpr _2238___mcc_h10 = _source61.dtor_stmt;
        RAST._IExpr _2239___mcc_h11 = _source61.dtor_rhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Block) {
        RAST._IExpr _2240___mcc_h14 = _source61.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_StructBuild) {
        RAST._IExpr _2241___mcc_h16 = _source61.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2242___mcc_h17 = _source61.dtor_assignments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2243___mcc_h20 = _source61.dtor_arguments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2244___mcc_h22 = _source61.dtor_op1;
        RAST._IExpr _2245___mcc_h23 = _source61.dtor_underlying;
        DAST.Format._IUnOpFormat _2246___mcc_h24 = _source61.dtor_format;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2247___mcc_h28 = _source61.dtor_op2;
        RAST._IExpr _2248___mcc_h29 = _source61.dtor_left;
        RAST._IExpr _2249___mcc_h30 = _source61.dtor_right;
        DAST.Format._IBinOpFormat _2250___mcc_h31 = _source61.dtor_format2;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_TypeAscription) {
        RAST._IExpr _2251___mcc_h36 = _source61.dtor_left;
        RAST._IType _2252___mcc_h37 = _source61.dtor_tpe;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2253___mcc_h40 = _source61.dtor_value;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_LiteralBool) {
        bool _2254___mcc_h42 = _source61.dtor_bvalue;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2255___mcc_h44 = _source61.dtor_value;
        bool _2256___mcc_h45 = _source61.dtor_binary;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_DeclareVar) {
        RAST._IDeclareType _2257___mcc_h48 = _source61.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2258___mcc_h49 = _source61.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2259___mcc_h50 = _source61.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2260___mcc_h51 = _source61.dtor_optRhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2261___mcc_h56 = _source61.dtor_names;
        RAST._IExpr _2262___mcc_h57 = _source61.dtor_rhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_IfExpr) {
        RAST._IExpr _2263___mcc_h60 = _source61.dtor_cond;
        RAST._IExpr _2264___mcc_h61 = _source61.dtor_thn;
        RAST._IExpr _2265___mcc_h62 = _source61.dtor_els;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2266___mcc_h66 = _source61.dtor_optCond;
        RAST._IExpr _2267___mcc_h67 = _source61.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_For) {
        Dafny.ISequence<Dafny.Rune> _2268___mcc_h70 = _source61.dtor_name;
        RAST._IExpr _2269___mcc_h71 = _source61.dtor_range;
        RAST._IExpr _2270___mcc_h72 = _source61.dtor_body;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2271___mcc_h76 = _source61.dtor_lbl;
        RAST._IExpr _2272___mcc_h77 = _source61.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2273___mcc_h80 = _source61.dtor_optLbl;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2274___mcc_h82 = _source61.dtor_optLbl;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2275___mcc_h84 = _source61.dtor_optExpr;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_CallType) {
        RAST._IExpr _2276___mcc_h86 = _source61.dtor_obj;
        Dafny.ISequence<RAST._IType> _2277___mcc_h87 = _source61.dtor_typeParameters;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Call) {
        RAST._IExpr _2278___mcc_h90 = _source61.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2279___mcc_h91 = _source61.dtor_arguments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Select) {
        RAST._IExpr _2280___mcc_h94 = _source61.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2281___mcc_h95 = _source61.dtor_name;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else {
        RAST._IExpr _2282___mcc_h98 = _source61.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2283___mcc_h99 = _source61.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2284_id = _2283___mcc_h99;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_2284_id);
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      var _pat_let_tv4 = ind;
      RAST._IExpr _source62 = (this).Optimize();
      if (_source62.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2285___mcc_h0 = _source62.dtor_content;
        RAST._IExpr _2286_r = (this).Optimize();
        return RAST.__default.AddIndent((_2286_r).dtor_content, ind);
      } else if (_source62.is_ExprFromType) {
        RAST._IType _2287___mcc_h2 = _source62.dtor_tpe;
        RAST._IType _2288_t = _2287___mcc_h2;
        return (_2288_t)._ToString(ind);
      } else if (_source62.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2289___mcc_h4 = _source62.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2290_name = _2289___mcc_h4;
        return _2290_name;
      } else if (_source62.is_Match) {
        RAST._IExpr _2291___mcc_h6 = _source62.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2292___mcc_h7 = _source62.dtor_cases;
        Dafny.ISequence<RAST._IMatchCase> _2293_cases = _2292___mcc_h7;
        RAST._IExpr _2294_matchee = _2291___mcc_h6;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match "), (_2294_matchee)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IMatchCase>(_2293_cases, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IMatchCase, Dafny.ISequence<Dafny.Rune>>>>((_2295_ind) => ((System.Func<RAST._IMatchCase, Dafny.ISequence<Dafny.Rune>>)((_2296_c) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2295_ind), RAST.__default.IND), (_2296_c)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2295_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_StmtExpr) {
        RAST._IExpr _2297___mcc_h10 = _source62.dtor_stmt;
        RAST._IExpr _2298___mcc_h11 = _source62.dtor_rhs;
        RAST._IExpr _2299_rhs = _2298___mcc_h11;
        RAST._IExpr _2300_stmt = _2297___mcc_h10;
        if (((_2300_stmt).is_RawExpr) && (((_2300_stmt).dtor_content).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) {
          return (_2299_rhs)._ToString(ind);
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_2300_stmt)._ToString(ind), (((_2300_stmt).NoExtraSemicolonAfter()) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), (_2299_rhs)._ToString(ind));
        }
      } else if (_source62.is_Block) {
        RAST._IExpr _2301___mcc_h14 = _source62.dtor_underlying;
        RAST._IExpr _2302_underlying = _2301___mcc_h14;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n"), ind), RAST.__default.IND), (_2302_underlying)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_StructBuild) {
        RAST._IExpr _2303___mcc_h16 = _source62.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2304___mcc_h17 = _source62.dtor_assignments;
        Dafny.ISequence<RAST._IAssignIdentifier> _2305_assignments = _2304___mcc_h17;
        RAST._IExpr _2306_name = _2303___mcc_h16;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_2306_name)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IAssignIdentifier>(_2305_assignments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IAssignIdentifier, Dafny.ISequence<Dafny.Rune>>>>((_2307_ind) => ((System.Func<RAST._IAssignIdentifier, Dafny.ISequence<Dafny.Rune>>)((_2308_assignment) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2307_ind), RAST.__default.IND), (_2308_assignment)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2307_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), (((new BigInteger((_2305_assignments).Count)).Sign == 1) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2309___mcc_h20 = _source62.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _2310_arguments = _2309___mcc_h20;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._IExpr>(_2310_arguments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>>>((_2311_ind) => ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_2312_arg) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2311_ind), RAST.__default.IND), (_2312_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2311_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), (((new BigInteger((_2310_arguments).Count)).Sign == 1) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else if (_source62.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2313___mcc_h22 = _source62.dtor_op1;
        RAST._IExpr _2314___mcc_h23 = _source62.dtor_underlying;
        DAST.Format._IUnOpFormat _2315___mcc_h24 = _source62.dtor_format;
        DAST.Format._IUnOpFormat _2316_format = _2315___mcc_h24;
        RAST._IExpr _2317_underlying = _2314___mcc_h23;
        Dafny.ISequence<Dafny.Rune> _2318_op = _2313___mcc_h22;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs41 = ((((this).printingInfo).NeedParenthesesFor((_2317_underlying).printingInfo)) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))) : (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
        Dafny.ISequence<Dafny.Rune> _2319_leftP = _let_tmp_rhs41.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2320_rightP = _let_tmp_rhs41.dtor__1;
        Dafny.ISequence<Dafny.Rune> _2321_leftOp = ((((_2318_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"))) && (!(_2319_leftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")))) ? (Dafny.Sequence<Dafny.Rune>.Concat(_2318_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "))) : ((((_2318_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (_2318_op))));
        Dafny.ISequence<Dafny.Rune> _2322_rightOp = (((_2318_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) ? (_2318_op) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2321_leftOp, _2319_leftP), (_2317_underlying)._ToString(ind)), _2320_rightP), _2322_rightOp);
      } else if (_source62.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2323___mcc_h28 = _source62.dtor_op2;
        RAST._IExpr _2324___mcc_h29 = _source62.dtor_left;
        RAST._IExpr _2325___mcc_h30 = _source62.dtor_right;
        DAST.Format._IBinOpFormat _2326___mcc_h31 = _source62.dtor_format2;
        DAST.Format._IBinOpFormat _2327_format = _2326___mcc_h31;
        RAST._IExpr _2328_right = _2325___mcc_h30;
        RAST._IExpr _2329_left = _2324___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _2330_op2 = _2323___mcc_h28;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs42 = (this).LeftParentheses(_2329_left);
        Dafny.ISequence<Dafny.Rune> _2331_leftLeftP = _let_tmp_rhs42.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2332_leftRighP = _let_tmp_rhs42.dtor__1;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs43 = (this).RightParentheses(_2328_right);
        Dafny.ISequence<Dafny.Rune> _2333_rightLeftP = _let_tmp_rhs43.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2334_rightRightP = _let_tmp_rhs43.dtor__1;
        Dafny.ISequence<Dafny.Rune> _2335_opRendered = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), _2330_op2), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
        Dafny.ISequence<Dafny.Rune> _2336_indLeft = (((_2331_leftLeftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("))) ? (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)) : (ind));
        Dafny.ISequence<Dafny.Rune> _2337_indRight = (((_2333_rightLeftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("))) ? (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)) : (ind));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2331_leftLeftP, (_2329_left)._ToString(_2336_indLeft)), _2332_leftRighP), _2335_opRendered), _2333_rightLeftP), (_2328_right)._ToString(_2337_indRight)), _2334_rightRightP);
      } else if (_source62.is_TypeAscription) {
        RAST._IExpr _2338___mcc_h36 = _source62.dtor_left;
        RAST._IType _2339___mcc_h37 = _source62.dtor_tpe;
        RAST._IType _2340_tpe = _2339___mcc_h37;
        RAST._IExpr _2341_left = _2338___mcc_h36;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs44 = (this).LeftParentheses(_2341_left);
        Dafny.ISequence<Dafny.Rune> _2342_leftLeftP = _let_tmp_rhs44.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2343_leftRightP = _let_tmp_rhs44.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2342_leftLeftP, (_2341_left)._ToString(RAST.__default.IND)), _2343_leftRightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ")), (_2340_tpe)._ToString(RAST.__default.IND));
      } else if (_source62.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2344___mcc_h40 = _source62.dtor_value;
        Dafny.ISequence<Dafny.Rune> _2345_number = _2344___mcc_h40;
        return _2345_number;
      } else if (_source62.is_LiteralBool) {
        bool _2346___mcc_h42 = _source62.dtor_bvalue;
        bool _2347_b = _2346___mcc_h42;
        if (_2347_b) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true");
        } else {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false");
        }
      } else if (_source62.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2348___mcc_h44 = _source62.dtor_value;
        bool _2349___mcc_h45 = _source62.dtor_binary;
        bool _2350_binary = _2349___mcc_h45;
        Dafny.ISequence<Dafny.Rune> _2351_characters = _2348___mcc_h44;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(((_2350_binary) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("b")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\"")), _2351_characters), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\""));
      } else if (_source62.is_DeclareVar) {
        RAST._IDeclareType _2352___mcc_h48 = _source62.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2353___mcc_h49 = _source62.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2354___mcc_h50 = _source62.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2355___mcc_h51 = _source62.dtor_optRhs;
        Std.Wrappers._IOption<RAST._IExpr> _2356_optExpr = _2355___mcc_h51;
        Std.Wrappers._IOption<RAST._IType> _2357_optType = _2354___mcc_h50;
        Dafny.ISequence<Dafny.Rune> _2358_name = _2353___mcc_h49;
        RAST._IDeclareType _2359_declareType = _2352___mcc_h48;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let "), ((object.Equals(_2359_declareType, RAST.DeclareType.create_MUT())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), _2358_name), (((_2357_optType).is_Some) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": "), ((_2357_optType).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), (((_2356_optExpr).is_Some) ? (Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>(((_2356_optExpr).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)), _pat_let6_0 => Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>(_pat_let6_0, _2360_optExprString => (((_2360_optExprString).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("= /*issue with empty RHS*/"), ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_source63) => {
          if (_source63.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _2361___mcc_h102 = _source63.dtor_content;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty Raw expr");
          } else if (_source63.is_ExprFromType) {
            RAST._IType _2362___mcc_h104 = _source63.dtor_tpe;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _2363___mcc_h106 = _source63.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Match) {
            RAST._IExpr _2364___mcc_h108 = _source63.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _2365___mcc_h109 = _source63.dtor_cases;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_StmtExpr) {
            RAST._IExpr _2366___mcc_h112 = _source63.dtor_stmt;
            RAST._IExpr _2367___mcc_h113 = _source63.dtor_rhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Block) {
            RAST._IExpr _2368___mcc_h116 = _source63.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_StructBuild) {
            RAST._IExpr _2369___mcc_h118 = _source63.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _2370___mcc_h119 = _source63.dtor_assignments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _2371___mcc_h122 = _source63.dtor_arguments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _2372___mcc_h124 = _source63.dtor_op1;
            RAST._IExpr _2373___mcc_h125 = _source63.dtor_underlying;
            DAST.Format._IUnOpFormat _2374___mcc_h126 = _source63.dtor_format;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _2375___mcc_h130 = _source63.dtor_op2;
            RAST._IExpr _2376___mcc_h131 = _source63.dtor_left;
            RAST._IExpr _2377___mcc_h132 = _source63.dtor_right;
            DAST.Format._IBinOpFormat _2378___mcc_h133 = _source63.dtor_format2;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_TypeAscription) {
            RAST._IExpr _2379___mcc_h138 = _source63.dtor_left;
            RAST._IType _2380___mcc_h139 = _source63.dtor_tpe;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _2381___mcc_h142 = _source63.dtor_value;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty int literal");
          } else if (_source63.is_LiteralBool) {
            bool _2382___mcc_h144 = _source63.dtor_bvalue;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _2383___mcc_h146 = _source63.dtor_value;
            bool _2384___mcc_h147 = _source63.dtor_binary;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty string literal");
          } else if (_source63.is_DeclareVar) {
            RAST._IDeclareType _2385___mcc_h150 = _source63.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _2386___mcc_h151 = _source63.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _2387___mcc_h152 = _source63.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _2388___mcc_h153 = _source63.dtor_optRhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2389___mcc_h158 = _source63.dtor_names;
            RAST._IExpr _2390___mcc_h159 = _source63.dtor_rhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_IfExpr) {
            RAST._IExpr _2391___mcc_h162 = _source63.dtor_cond;
            RAST._IExpr _2392___mcc_h163 = _source63.dtor_thn;
            RAST._IExpr _2393___mcc_h164 = _source63.dtor_els;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _2394___mcc_h168 = _source63.dtor_optCond;
            RAST._IExpr _2395___mcc_h169 = _source63.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_For) {
            Dafny.ISequence<Dafny.Rune> _2396___mcc_h172 = _source63.dtor_name;
            RAST._IExpr _2397___mcc_h173 = _source63.dtor_range;
            RAST._IExpr _2398___mcc_h174 = _source63.dtor_body;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _2399___mcc_h178 = _source63.dtor_lbl;
            RAST._IExpr _2400___mcc_h179 = _source63.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2401___mcc_h182 = _source63.dtor_optLbl;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2402___mcc_h184 = _source63.dtor_optLbl;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _2403___mcc_h186 = _source63.dtor_optExpr;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_CallType) {
            RAST._IExpr _2404___mcc_h188 = _source63.dtor_obj;
            Dafny.ISequence<RAST._IType> _2405___mcc_h189 = _source63.dtor_typeParameters;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Call) {
            RAST._IExpr _2406___mcc_h192 = _source63.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _2407___mcc_h193 = _source63.dtor_arguments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Select) {
            RAST._IExpr _2408___mcc_h196 = _source63.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2409___mcc_h197 = _source63.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else {
            RAST._IExpr _2410___mcc_h200 = _source63.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2411___mcc_h201 = _source63.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          }
        }))((_2356_optExpr).dtor_value))) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "), _2360_optExprString)))))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source62.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2412___mcc_h56 = _source62.dtor_names;
        RAST._IExpr _2413___mcc_h57 = _source62.dtor_rhs;
        RAST._IExpr _2414_expr = _2413___mcc_h57;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2415_names = _2412___mcc_h56;
        Dafny.ISequence<Dafny.Rune> _2416_lhs = (((new BigInteger((_2415_names).Count)) == (BigInteger.One)) ? (Dafny.Sequence<Dafny.Rune>.Concat((_2415_names).Select(BigInteger.Zero), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "))) : ((((new BigInteger((_2415_names).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_ = ")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<Dafny.ISequence<Dafny.Rune>>(_2415_names, ((System.Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>)((_2417_name) => {
          return _2417_name;
        })), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") = "))))));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2416_lhs, (_2414_expr)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source62.is_IfExpr) {
        RAST._IExpr _2418___mcc_h60 = _source62.dtor_cond;
        RAST._IExpr _2419___mcc_h61 = _source62.dtor_thn;
        RAST._IExpr _2420___mcc_h62 = _source62.dtor_els;
        RAST._IExpr _2421_els = _2420___mcc_h62;
        RAST._IExpr _2422_thn = _2419___mcc_h61;
        RAST._IExpr _2423_cond = _2418___mcc_h60;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if "), (_2423_cond)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2422_thn)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}")), ((object.Equals(_2421_els, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" else {\n"), ind), RAST.__default.IND), (_2421_els)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}")))));
      } else if (_source62.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2424___mcc_h66 = _source62.dtor_optCond;
        RAST._IExpr _2425___mcc_h67 = _source62.dtor_underlying;
        RAST._IExpr _2426_underlying = _2425___mcc_h67;
        Std.Wrappers._IOption<RAST._IExpr> _2427_optCond = _2424___mcc_h66;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(((System.Func<Std.Wrappers._IOption<RAST._IExpr>, Dafny.ISequence<Dafny.Rune>>)((_source64) => {
          if (_source64.is_None) {
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop");
          } else {
            RAST._IExpr _2428___mcc_h204 = _source64.dtor_value;
            RAST._IExpr _2429_c = _2428___mcc_h204;
            return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while "), (_2429_c)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_pat_let_tv4, RAST.__default.IND)));
          }
        }))(_2427_optCond), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2426_underlying)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_For) {
        Dafny.ISequence<Dafny.Rune> _2430___mcc_h70 = _source62.dtor_name;
        RAST._IExpr _2431___mcc_h71 = _source62.dtor_range;
        RAST._IExpr _2432___mcc_h72 = _source62.dtor_body;
        RAST._IExpr _2433_body = _2432___mcc_h72;
        RAST._IExpr _2434_range = _2431___mcc_h71;
        Dafny.ISequence<Dafny.Rune> _2435_name = _2430___mcc_h70;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for "), _2435_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" in ")), (_2434_range)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2433_body)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2436___mcc_h76 = _source62.dtor_lbl;
        RAST._IExpr _2437___mcc_h77 = _source62.dtor_underlying;
        RAST._IExpr _2438_underlying = _2437___mcc_h77;
        Dafny.ISequence<Dafny.Rune> _2439_name = _2436___mcc_h76;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("'"), _2439_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_2438_underlying)._ToString(ind));
      } else if (_source62.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2440___mcc_h80 = _source62.dtor_optLbl;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2441_optLbl = _2440___mcc_h80;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source65 = _2441_optLbl;
        if (_source65.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break;");
        } else {
          Dafny.ISequence<Dafny.Rune> _2442___mcc_h205 = _source65.dtor_value;
          Dafny.ISequence<Dafny.Rune> _2443_lbl = _2442___mcc_h205;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break '"), _2443_lbl), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
        }
      } else if (_source62.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2444___mcc_h82 = _source62.dtor_optLbl;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2445_optLbl = _2444___mcc_h82;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source66 = _2445_optLbl;
        if (_source66.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue;");
        } else {
          Dafny.ISequence<Dafny.Rune> _2446___mcc_h206 = _source66.dtor_value;
          Dafny.ISequence<Dafny.Rune> _2447_lbl = _2446___mcc_h206;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue '"), _2447_lbl), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
        }
      } else if (_source62.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2448___mcc_h84 = _source62.dtor_optExpr;
        Std.Wrappers._IOption<RAST._IExpr> _2449_optExpr = _2448___mcc_h84;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), (((_2449_optExpr).is_Some) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), ((_2449_optExpr).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source62.is_CallType) {
        RAST._IExpr _2450___mcc_h86 = _source62.dtor_obj;
        Dafny.ISequence<RAST._IType> _2451___mcc_h87 = _source62.dtor_typeParameters;
        Dafny.ISequence<RAST._IType> _2452_tpes = _2451___mcc_h87;
        RAST._IExpr _2453_expr = _2450___mcc_h86;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs45 = (this).LeftParentheses(_2453_expr);
        Dafny.ISequence<Dafny.Rune> _2454_leftP = _let_tmp_rhs45.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2455_rightP = _let_tmp_rhs45.dtor__1;
        if ((_2452_tpes).Equals(Dafny.Sequence<RAST._IType>.FromElements())) {
          return (_2453_expr)._ToString(ind);
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2454_leftP, (_2453_expr)._ToString(ind)), _2455_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::<")), RAST.__default.SeqToString<RAST._IType>(_2452_tpes, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_2456_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_2457_tpe) => {
            return (_2457_tpe)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2456_ind, RAST.__default.IND));
          })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
        }
      } else if (_source62.is_Call) {
        RAST._IExpr _2458___mcc_h90 = _source62.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2459___mcc_h91 = _source62.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _2460_args = _2459___mcc_h91;
        RAST._IExpr _2461_expr = _2458___mcc_h90;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs46 = (this).LeftParentheses(_2461_expr);
        Dafny.ISequence<Dafny.Rune> _2462_leftP = _let_tmp_rhs46.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2463_rightP = _let_tmp_rhs46.dtor__1;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs47 = ((System.Func<Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>>, _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>>)((_source67) => {
          if (_source67.is_None) {
            return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          } else {
            Dafny.ISequence<Dafny.Rune> _2464___mcc_h207 = _source67.dtor_value;
            if (object.Equals(_2464___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("["), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            } else if (object.Equals(_2464___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("["), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            } else if (object.Equals(_2464___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
            } else if (object.Equals(_2464___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
            } else {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
            }
          }
        }))((_2461_expr).RightMostIdentifier());
        Dafny.ISequence<Dafny.Rune> _2465_leftCallP = _let_tmp_rhs47.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2466_rightCallP = _let_tmp_rhs47.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2462_leftP, (_2461_expr)._ToString(ind)), _2463_rightP), _2465_leftCallP), RAST.__default.SeqToString<RAST._IExpr>(_2460_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>>>((_2467_ind) => ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_2468_arg) => {
          return (_2468_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2467_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), _2466_rightCallP);
      } else if (_source62.is_Select) {
        RAST._IExpr _2469___mcc_h94 = _source62.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2470___mcc_h95 = _source62.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2471_name = _2470___mcc_h95;
        RAST._IExpr _2472_expression = _2469___mcc_h94;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs48 = (this).LeftParentheses(_2472_expression);
        Dafny.ISequence<Dafny.Rune> _2473_leftP = _let_tmp_rhs48.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2474_rightP = _let_tmp_rhs48.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2473_leftP, (_2472_expression)._ToString(ind)), _2474_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _2471_name);
      } else {
        RAST._IExpr _2475___mcc_h98 = _source62.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2476___mcc_h99 = _source62.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2477_name = _2476___mcc_h99;
        RAST._IExpr _2478_expression = _2475___mcc_h98;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs49 = (this).LeftParentheses(_2478_expression);
        Dafny.ISequence<Dafny.Rune> _2479_leftP = _let_tmp_rhs49.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2480_rightP = _let_tmp_rhs49.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2479_leftP, (_2478_expression)._ToString(ind)), _2480_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2477_name);
      }
    }
    public RAST._IExpr Then(RAST._IExpr rhs2) {
      if ((this).is_StmtExpr) {
        return RAST.Expr.create_StmtExpr((this).dtor_stmt, ((this).dtor_rhs).Then(rhs2));
      } else if (object.Equals(this, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) {
        return rhs2;
      } else {
        return RAST.Expr.create_StmtExpr(this, rhs2);
      }
    }
    public RAST._IExpr Sel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Expr.create_Select(this, name);
    }
    public RAST._IExpr MSel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Expr.create_MemberSelect(this, name);
    }
    public RAST._IExpr ApplyType(Dafny.ISequence<RAST._IType> typeParameters) {
      return RAST.Expr.create_CallType(this, typeParameters);
    }
    public RAST._IExpr ApplyType1(RAST._IType typeParameter) {
      return RAST.Expr.create_CallType(this, Dafny.Sequence<RAST._IType>.FromElements(typeParameter));
    }
    public RAST._IExpr Apply(Dafny.ISequence<RAST._IExpr> arguments) {
      return RAST.Expr.create_Call(this, arguments);
    }
    public RAST._IExpr Apply1(RAST._IExpr argument) {
      return RAST.Expr.create_Call(this, Dafny.Sequence<RAST._IExpr>.FromElements(argument));
    }
    public RAST._IPrintingInfo printingInfo { get {
      RAST._IExpr _source68 = this;
      if (_source68.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2481___mcc_h0 = _source68.dtor_content;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_ExprFromType) {
        RAST._IType _2482___mcc_h2 = _source68.dtor_tpe;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2483___mcc_h4 = _source68.dtor_name;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_Match) {
        RAST._IExpr _2484___mcc_h6 = _source68.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2485___mcc_h7 = _source68.dtor_cases;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_StmtExpr) {
        RAST._IExpr _2486___mcc_h10 = _source68.dtor_stmt;
        RAST._IExpr _2487___mcc_h11 = _source68.dtor_rhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Block) {
        RAST._IExpr _2488___mcc_h14 = _source68.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_StructBuild) {
        RAST._IExpr _2489___mcc_h16 = _source68.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2490___mcc_h17 = _source68.dtor_assignments;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2491___mcc_h20 = _source68.dtor_arguments;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2492___mcc_h22 = _source68.dtor_op1;
        RAST._IExpr _2493___mcc_h23 = _source68.dtor_underlying;
        DAST.Format._IUnOpFormat _2494___mcc_h24 = _source68.dtor_format;
        DAST.Format._IUnOpFormat _2495_format = _2494___mcc_h24;
        RAST._IExpr _2496_underlying = _2493___mcc_h23;
        Dafny.ISequence<Dafny.Rune> _2497_op = _2492___mcc_h22;
        if (object.Equals(_2497_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) {
          return RAST.PrintingInfo.create_SuffixPrecedence(new BigInteger(5));
        } else if (object.Equals(_2497_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2497_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2497_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2497_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2497_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else {
          return RAST.PrintingInfo.create_UnknownPrecedence();
        }
      } else if (_source68.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2498___mcc_h28 = _source68.dtor_op2;
        RAST._IExpr _2499___mcc_h29 = _source68.dtor_left;
        RAST._IExpr _2500___mcc_h30 = _source68.dtor_right;
        DAST.Format._IBinOpFormat _2501___mcc_h31 = _source68.dtor_format2;
        DAST.Format._IBinOpFormat _2502_format = _2501___mcc_h31;
        RAST._IExpr _2503_right = _2500___mcc_h30;
        RAST._IExpr _2504_left = _2499___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _2505_op2 = _2498___mcc_h28;
        if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(30), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(30), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(40), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(40), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(50), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(60), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(70), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(90), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(100), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".."))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("..="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2505_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(BigInteger.Zero, RAST.Associativity.create_RequiresParentheses());
        }
      } else if (_source68.is_TypeAscription) {
        RAST._IExpr _2506___mcc_h36 = _source68.dtor_left;
        RAST._IType _2507___mcc_h37 = _source68.dtor_tpe;
        RAST._IType _2508_tpe = _2507___mcc_h37;
        RAST._IExpr _2509_left = _2506___mcc_h36;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(10), RAST.Associativity.create_LeftToRight());
      } else if (_source68.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2510___mcc_h40 = _source68.dtor_value;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_LiteralBool) {
        bool _2511___mcc_h42 = _source68.dtor_bvalue;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2512___mcc_h44 = _source68.dtor_value;
        bool _2513___mcc_h45 = _source68.dtor_binary;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_DeclareVar) {
        RAST._IDeclareType _2514___mcc_h48 = _source68.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2515___mcc_h49 = _source68.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2516___mcc_h50 = _source68.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2517___mcc_h51 = _source68.dtor_optRhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2518___mcc_h56 = _source68.dtor_names;
        RAST._IExpr _2519___mcc_h57 = _source68.dtor_rhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_IfExpr) {
        RAST._IExpr _2520___mcc_h60 = _source68.dtor_cond;
        RAST._IExpr _2521___mcc_h61 = _source68.dtor_thn;
        RAST._IExpr _2522___mcc_h62 = _source68.dtor_els;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2523___mcc_h66 = _source68.dtor_optCond;
        RAST._IExpr _2524___mcc_h67 = _source68.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_For) {
        Dafny.ISequence<Dafny.Rune> _2525___mcc_h70 = _source68.dtor_name;
        RAST._IExpr _2526___mcc_h71 = _source68.dtor_range;
        RAST._IExpr _2527___mcc_h72 = _source68.dtor_body;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2528___mcc_h76 = _source68.dtor_lbl;
        RAST._IExpr _2529___mcc_h77 = _source68.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2530___mcc_h80 = _source68.dtor_optLbl;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2531___mcc_h82 = _source68.dtor_optLbl;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2532___mcc_h84 = _source68.dtor_optExpr;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_CallType) {
        RAST._IExpr _2533___mcc_h86 = _source68.dtor_obj;
        Dafny.ISequence<RAST._IType> _2534___mcc_h87 = _source68.dtor_typeParameters;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else if (_source68.is_Call) {
        RAST._IExpr _2535___mcc_h90 = _source68.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2536___mcc_h91 = _source68.dtor_arguments;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else if (_source68.is_Select) {
        RAST._IExpr _2537___mcc_h94 = _source68.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2538___mcc_h95 = _source68.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2539_name = _2538___mcc_h95;
        RAST._IExpr _2540_underlying = _2537___mcc_h94;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else {
        RAST._IExpr _2541___mcc_h98 = _source68.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2542___mcc_h99 = _source68.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2543_name = _2542___mcc_h99;
        RAST._IExpr _2544_underlying = _2541___mcc_h98;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      }
    } }
  }
  public class Expr_RawExpr : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Expr_RawExpr(Dafny.ISequence<Dafny.Rune> content) : base() {
      this._content = content;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_RawExpr(_content);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_RawExpr;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.RawExpr";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_ExprFromType : Expr {
    public readonly RAST._IType _tpe;
    public Expr_ExprFromType(RAST._IType tpe) : base() {
      this._tpe = tpe;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_ExprFromType(_tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_ExprFromType;
      return oth != null && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.ExprFromType";
      s += "(";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
  }
  public class Expr_Identifier : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_Identifier(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Identifier(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Identifier;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Identifier";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_Match : Expr {
    public readonly RAST._IExpr _matchee;
    public readonly Dafny.ISequence<RAST._IMatchCase> _cases;
    public Expr_Match(RAST._IExpr matchee, Dafny.ISequence<RAST._IMatchCase> cases) : base() {
      this._matchee = matchee;
      this._cases = cases;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Match(_matchee, _cases);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Match;
      return oth != null && object.Equals(this._matchee, oth._matchee) && object.Equals(this._cases, oth._cases);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._matchee));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cases));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Match";
      s += "(";
      s += Dafny.Helpers.ToString(this._matchee);
      s += ", ";
      s += Dafny.Helpers.ToString(this._cases);
      s += ")";
      return s;
    }
  }
  public class Expr_StmtExpr : Expr {
    public readonly RAST._IExpr _stmt;
    public readonly RAST._IExpr _rhs;
    public Expr_StmtExpr(RAST._IExpr stmt, RAST._IExpr rhs) : base() {
      this._stmt = stmt;
      this._rhs = rhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_StmtExpr(_stmt, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_StmtExpr;
      return oth != null && object.Equals(this._stmt, oth._stmt) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._stmt));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.StmtExpr";
      s += "(";
      s += Dafny.Helpers.ToString(this._stmt);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
  }
  public class Expr_Block : Expr {
    public readonly RAST._IExpr _underlying;
    public Expr_Block(RAST._IExpr underlying) : base() {
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Block(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Block;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Block";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_StructBuild : Expr {
    public readonly RAST._IExpr _underlying;
    public readonly Dafny.ISequence<RAST._IAssignIdentifier> _assignments;
    public Expr_StructBuild(RAST._IExpr underlying, Dafny.ISequence<RAST._IAssignIdentifier> assignments) : base() {
      this._underlying = underlying;
      this._assignments = assignments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_StructBuild(_underlying, _assignments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_StructBuild;
      return oth != null && object.Equals(this._underlying, oth._underlying) && object.Equals(this._assignments, oth._assignments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._assignments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.StructBuild";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ", ";
      s += Dafny.Helpers.ToString(this._assignments);
      s += ")";
      return s;
    }
  }
  public class Expr_Tuple : Expr {
    public readonly Dafny.ISequence<RAST._IExpr> _arguments;
    public Expr_Tuple(Dafny.ISequence<RAST._IExpr> arguments) : base() {
      this._arguments = arguments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Tuple(_arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Tuple;
      return oth != null && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Expr_UnaryOp : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _op1;
    public readonly RAST._IExpr _underlying;
    public readonly DAST.Format._IUnOpFormat _format;
    public Expr_UnaryOp(Dafny.ISequence<Dafny.Rune> op1, RAST._IExpr underlying, DAST.Format._IUnOpFormat format) : base() {
      this._op1 = op1;
      this._underlying = underlying;
      this._format = format;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_UnaryOp(_op1, _underlying, _format);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_UnaryOp;
      return oth != null && object.Equals(this._op1, oth._op1) && object.Equals(this._underlying, oth._underlying) && object.Equals(this._format, oth._format);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op1));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.UnaryOp";
      s += "(";
      s += this._op1.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format);
      s += ")";
      return s;
    }
  }
  public class Expr_BinaryOp : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _op2;
    public readonly RAST._IExpr _left;
    public readonly RAST._IExpr _right;
    public readonly DAST.Format._IBinOpFormat _format2;
    public Expr_BinaryOp(Dafny.ISequence<Dafny.Rune> op2, RAST._IExpr left, RAST._IExpr right, DAST.Format._IBinOpFormat format2) : base() {
      this._op2 = op2;
      this._left = left;
      this._right = right;
      this._format2 = format2;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_BinaryOp(_op2, _left, _right, _format2);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_BinaryOp;
      return oth != null && object.Equals(this._op2, oth._op2) && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right) && object.Equals(this._format2, oth._format2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op2));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.BinaryOp";
      s += "(";
      s += this._op2.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format2);
      s += ")";
      return s;
    }
  }
  public class Expr_TypeAscription : Expr {
    public readonly RAST._IExpr _left;
    public readonly RAST._IType _tpe;
    public Expr_TypeAscription(RAST._IExpr left, RAST._IType tpe) : base() {
      this._left = left;
      this._tpe = tpe;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_TypeAscription(_left, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_TypeAscription;
      return oth != null && object.Equals(this._left, oth._left) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.TypeAscription";
      s += "(";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralInt : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _value;
    public Expr_LiteralInt(Dafny.ISequence<Dafny.Rune> @value) : base() {
      this._value = @value;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralInt(_value);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralInt;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralInt";
      s += "(";
      s += this._value.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralBool : Expr {
    public readonly bool _bvalue;
    public Expr_LiteralBool(bool bvalue) : base() {
      this._bvalue = bvalue;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralBool(_bvalue);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralBool;
      return oth != null && this._bvalue == oth._bvalue;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._bvalue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralBool";
      s += "(";
      s += Dafny.Helpers.ToString(this._bvalue);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralString : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _value;
    public readonly bool _binary;
    public Expr_LiteralString(Dafny.ISequence<Dafny.Rune> @value, bool binary) : base() {
      this._value = @value;
      this._binary = binary;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralString(_value, _binary);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralString;
      return oth != null && object.Equals(this._value, oth._value) && this._binary == oth._binary;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._binary));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralString";
      s += "(";
      s += this._value.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._binary);
      s += ")";
      return s;
    }
  }
  public class Expr_DeclareVar : Expr {
    public readonly RAST._IDeclareType _declareType;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Std.Wrappers._IOption<RAST._IType> _optType;
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optRhs;
    public Expr_DeclareVar(RAST._IDeclareType declareType, Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<RAST._IType> optType, Std.Wrappers._IOption<RAST._IExpr> optRhs) : base() {
      this._declareType = declareType;
      this._name = name;
      this._optType = optType;
      this._optRhs = optRhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_DeclareVar(_declareType, _name, _optType, _optRhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_DeclareVar;
      return oth != null && object.Equals(this._declareType, oth._declareType) && object.Equals(this._name, oth._name) && object.Equals(this._optType, oth._optType) && object.Equals(this._optRhs, oth._optRhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._declareType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optRhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.DeclareVar";
      s += "(";
      s += Dafny.Helpers.ToString(this._declareType);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._optType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._optRhs);
      s += ")";
      return s;
    }
  }
  public class Expr_Assign : Expr {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly RAST._IExpr _rhs;
    public Expr_Assign(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, RAST._IExpr rhs) : base() {
      this._names = names;
      this._rhs = rhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Assign(_names, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Assign;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Assign";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
  }
  public class Expr_IfExpr : Expr {
    public readonly RAST._IExpr _cond;
    public readonly RAST._IExpr _thn;
    public readonly RAST._IExpr _els;
    public Expr_IfExpr(RAST._IExpr cond, RAST._IExpr thn, RAST._IExpr els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_IfExpr(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_IfExpr;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.IfExpr";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Expr_Loop : Expr {
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optCond;
    public readonly RAST._IExpr _underlying;
    public Expr_Loop(Std.Wrappers._IOption<RAST._IExpr> optCond, RAST._IExpr underlying) : base() {
      this._optCond = optCond;
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Loop(_optCond, _underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Loop;
      return oth != null && object.Equals(this._optCond, oth._optCond) && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optCond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Loop";
      s += "(";
      s += Dafny.Helpers.ToString(this._optCond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_For : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IExpr _range;
    public readonly RAST._IExpr _body;
    public Expr_For(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr range, RAST._IExpr body) : base() {
      this._name = name;
      this._range = range;
      this._body = body;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_For(_name, _range, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_For;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._range, oth._range) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.For";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Expr_Labelled : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _lbl;
    public readonly RAST._IExpr _underlying;
    public Expr_Labelled(Dafny.ISequence<Dafny.Rune> lbl, RAST._IExpr underlying) : base() {
      this._lbl = lbl;
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Labelled(_lbl, _underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Labelled;
      return oth != null && object.Equals(this._lbl, oth._lbl) && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lbl));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Labelled";
      s += "(";
      s += this._lbl.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_Break : Expr {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _optLbl;
    public Expr_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) : base() {
      this._optLbl = optLbl;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Break(_optLbl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Break;
      return oth != null && object.Equals(this._optLbl, oth._optLbl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optLbl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Break";
      s += "(";
      s += Dafny.Helpers.ToString(this._optLbl);
      s += ")";
      return s;
    }
  }
  public class Expr_Continue : Expr {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _optLbl;
    public Expr_Continue(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) : base() {
      this._optLbl = optLbl;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Continue(_optLbl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Continue;
      return oth != null && object.Equals(this._optLbl, oth._optLbl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optLbl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Continue";
      s += "(";
      s += Dafny.Helpers.ToString(this._optLbl);
      s += ")";
      return s;
    }
  }
  public class Expr_Return : Expr {
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optExpr;
    public Expr_Return(Std.Wrappers._IOption<RAST._IExpr> optExpr) : base() {
      this._optExpr = optExpr;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Return(_optExpr);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Return;
      return oth != null && object.Equals(this._optExpr, oth._optExpr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optExpr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Return";
      s += "(";
      s += Dafny.Helpers.ToString(this._optExpr);
      s += ")";
      return s;
    }
  }
  public class Expr_CallType : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<RAST._IType> _typeParameters;
    public Expr_CallType(RAST._IExpr obj, Dafny.ISequence<RAST._IType> typeParameters) : base() {
      this._obj = obj;
      this._typeParameters = typeParameters;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_CallType(_obj, _typeParameters);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_CallType;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._typeParameters, oth._typeParameters);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParameters));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.CallType";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParameters);
      s += ")";
      return s;
    }
  }
  public class Expr_Call : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<RAST._IExpr> _arguments;
    public Expr_Call(RAST._IExpr obj, Dafny.ISequence<RAST._IExpr> arguments) : base() {
      this._obj = obj;
      this._arguments = arguments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Call(_obj, _arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Call;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Expr_Select : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_Select(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._obj = obj;
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Select(_obj, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Select;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_MemberSelect : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_MemberSelect(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._obj = obj;
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_MemberSelect(_obj, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_MemberSelect;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.MemberSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IFn {
    bool is_Fn { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    Dafny.ISequence<RAST._IFormal> dtor_formals { get; }
    Std.Wrappers._IOption<RAST._IType> dtor_returnType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_body { get; }
    _IFn DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Fn : _IFn {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly Dafny.ISequence<RAST._IFormal> _formals;
    public readonly Std.Wrappers._IOption<RAST._IType> _returnType;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Std.Wrappers._IOption<RAST._IExpr> _body;
    public Fn(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      this._name = name;
      this._typeParams = typeParams;
      this._formals = formals;
      this._returnType = returnType;
      this._where = @where;
      this._body = body;
    }
    public _IFn DowncastClone() {
      if (this is _IFn dt) { return dt; }
      return new Fn(_name, _typeParams, _formals, _returnType, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fn;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._formals, oth._formals) && object.Equals(this._returnType, oth._returnType) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formals));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._returnType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fn.Fn";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._formals);
      s += ", ";
      s += Dafny.Helpers.ToString(this._returnType);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly RAST._IFn theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, Dafny.Sequence<RAST._IFormal>.Empty, Std.Wrappers.Option<RAST._IType>.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Std.Wrappers.Option<RAST._IExpr>.Default());
    public static RAST._IFn Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFn> _TYPE = new Dafny.TypeDescriptor<RAST._IFn>(RAST.Fn.Default());
    public static Dafny.TypeDescriptor<RAST._IFn> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFn create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      return new Fn(name, typeParams, formals, returnType, @where, body);
    }
    public static _IFn create_Fn(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      return create(name, typeParams, formals, returnType, @where, body);
    }
    public bool is_Fn { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<RAST._IFormal> dtor_formals {
      get {
        return this._formals;
      }
    }
    public Std.Wrappers._IOption<RAST._IType> dtor_returnType {
      get {
        return this._returnType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        return this._where;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      var _pat_let_tv5 = ind;
      var _pat_let_tv6 = ind;
      var _pat_let_tv7 = ind;
      var _pat_let_tv8 = ind;
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn "), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), RAST.__default.SeqToString<RAST._IFormal>((this).dtor_formals, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>>>((_2545_ind) => ((System.Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>)((_2546_formal) => {
        return (_2546_formal)._ToString(_2545_ind);
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), ((System.Func<Std.Wrappers._IOption<RAST._IType>, Dafny.ISequence<Dafny.Rune>>)((_source69) => {
        if (_source69.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
        } else {
          RAST._IType _2547___mcc_h0 = _source69.dtor_value;
          RAST._IType _2548_t = _2547___mcc_h0;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" -> "), (_2548_t)._ToString(_pat_let_tv5));
        }
      }))((this).dtor_returnType)), ((((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)))), ((System.Func<Std.Wrappers._IOption<RAST._IExpr>, Dafny.ISequence<Dafny.Rune>>)((_source70) => {
        if (_source70.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";");
        } else {
          RAST._IExpr _2549___mcc_h2 = _source70.dtor_value;
          RAST._IExpr _2550_body = _2549___mcc_h2;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n"), _pat_let_tv6), RAST.__default.IND), (_2550_body)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_pat_let_tv7, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), _pat_let_tv8), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        }
      }))((this).dtor_body));
    }
  }
} // end of namespace RAST
namespace DCOMP {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in113 = (i).Drop(new BigInteger(2));
            i = _in113;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in114 = (i).Drop(BigInteger.One);
        i = _in114;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2551___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2551___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _2551___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2551___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in115 = (i).Drop(new BigInteger(2));
        i = _in115;
        goto TAIL_CALL_START;
      } else {
        _2551___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2551___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in116 = (i).Drop(BigInteger.One);
        i = _in116;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2552___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2552___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _2552___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2552___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in117 = (i).Drop(BigInteger.One);
        i = _in117;
        goto TAIL_CALL_START;
      } else {
        _2552___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2552___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in118 = (i).Drop(BigInteger.One);
        i = _in118;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMP.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMP.__default.has__special(i)))) && (!(DCOMP.__default.reserved__rust).Contains(i))) && (!(DCOMP.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMP.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMP.__default.is__tuple__builder(i)) {
        return DCOMP.__default.better__tuple__builder__name(i);
      } else if ((DCOMP.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMP.__default.is__idiomatic__rust__id(i)) {
        return DCOMP.__default.idiomatic__rust(i);
      } else if (DCOMP.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _2553_r = DCOMP.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _2553_r);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static bool UnicodeChars { get {
      return true;
    } }
    public static Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if (DCOMP.__default.UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public static RAST._IType DafnyCharUnderlying { get {
      if (DCOMP.__default.UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMP._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMP._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMP._IOwnership>(DCOMP.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMP._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IUnassignedStatus {
    bool is_Unassigned { get; }
    bool is_WithTracker { get; }
    Dafny.ISequence<Dafny.Rune> dtor_tracker__name { get; }
    _IUnassignedStatus DowncastClone();
  }
  public abstract class UnassignedStatus : _IUnassignedStatus {
    public UnassignedStatus() {
    }
    private static readonly DCOMP._IUnassignedStatus theDefault = create_Unassigned();
    public static DCOMP._IUnassignedStatus Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IUnassignedStatus> _TYPE = new Dafny.TypeDescriptor<DCOMP._IUnassignedStatus>(DCOMP.UnassignedStatus.Default());
    public static Dafny.TypeDescriptor<DCOMP._IUnassignedStatus> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnassignedStatus create_Unassigned() {
      return new UnassignedStatus_Unassigned();
    }
    public static _IUnassignedStatus create_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) {
      return new UnassignedStatus_WithTracker(tracker__name);
    }
    public bool is_Unassigned { get { return this is UnassignedStatus_Unassigned; } }
    public bool is_WithTracker { get { return this is UnassignedStatus_WithTracker; } }
    public Dafny.ISequence<Dafny.Rune> dtor_tracker__name {
      get {
        var d = this;
        return ((UnassignedStatus_WithTracker)d)._tracker__name;
      }
    }
    public abstract _IUnassignedStatus DowncastClone();
  }
  public class UnassignedStatus_Unassigned : UnassignedStatus {
    public UnassignedStatus_Unassigned() : base() {
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_Unassigned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.UnassignedStatus_Unassigned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.UnassignedStatus.Unassigned";
      return s;
    }
  }
  public class UnassignedStatus_WithTracker : UnassignedStatus {
    public readonly Dafny.ISequence<Dafny.Rune> _tracker__name;
    public UnassignedStatus_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) : base() {
      this._tracker__name = tracker__name;
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_WithTracker(_tracker__name);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.UnassignedStatus_WithTracker;
      return oth != null && object.Equals(this._tracker__name, oth._tracker__name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tracker__name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.UnassignedStatus.WithTracker";
      s += "(";
      s += this._tracker__name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._names = names;
      this._types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_names, _types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Environment;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
    private static readonly DCOMP._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMP._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMP._IEnvironment>(DCOMP.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMP._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._types;
      }
    }
    public static DCOMP._IEnvironment Empty() {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).HasCopySemantics());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).HasCopySemantics(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
  }

  public partial class COMP {
    public COMP() {
    }
    public static RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<RAST._IModDecl> _2554_body;
      Dafny.ISequence<RAST._IModDecl> _out15;
      _out15 = DCOMP.COMP.GenModuleBody((mod).dtor_body, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
      _2554_body = _out15;
      s = (((mod).dtor_isExtern) ? (RAST.Mod.create_ExternMod(DCOMP.__default.escapeIdent((mod).dtor_name))) : (RAST.Mod.create_Mod(DCOMP.__default.escapeIdent((mod).dtor_name), _2554_body)));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      BigInteger _2555_i;
      _2555_i = BigInteger.Zero;
      while ((_2555_i) < (new BigInteger((body).Count))) {
        Dafny.ISequence<RAST._IModDecl> _2556_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source71 = (body).Select(_2555_i);
        if (_source71.is_Module) {
          DAST._IModule _2557___mcc_h0 = _source71.dtor_Module_a0;
          DAST._IModule _2558_m = _2557___mcc_h0;
          RAST._IMod _2559_mm;
          RAST._IMod _out16;
          _out16 = DCOMP.COMP.GenModule(_2558_m, containingPath);
          _2559_mm = _out16;
          _2556_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_2559_mm));
        } else if (_source71.is_Class) {
          DAST._IClass _2560___mcc_h1 = _source71.dtor_Class_a0;
          DAST._IClass _2561_c = _2560___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out17;
          _out17 = DCOMP.COMP.GenClass(_2561_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_2561_c).dtor_name)));
          _2556_generated = _out17;
        } else if (_source71.is_Trait) {
          DAST._ITrait _2562___mcc_h2 = _source71.dtor_Trait_a0;
          DAST._ITrait _2563_t = _2562___mcc_h2;
          Dafny.ISequence<Dafny.Rune> _2564_tt;
          Dafny.ISequence<Dafny.Rune> _out18;
          _out18 = DCOMP.COMP.GenTrait(_2563_t, containingPath);
          _2564_tt = _out18;
          _2556_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_RawDecl(_2564_tt));
        } else if (_source71.is_Newtype) {
          DAST._INewtype _2565___mcc_h3 = _source71.dtor_Newtype_a0;
          DAST._INewtype _2566_n = _2565___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out19;
          _out19 = DCOMP.COMP.GenNewtype(_2566_n);
          _2556_generated = _out19;
        } else {
          DAST._IDatatype _2567___mcc_h4 = _source71.dtor_Datatype_a0;
          DAST._IDatatype _2568_d = _2567___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out20;
          _out20 = DCOMP.COMP.GenDatatype(_2568_d);
          _2556_generated = _out20;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _2556_generated);
        _2555_i = (_2555_i) + (BigInteger.One);
      }
      return s;
    }
    public static void GenTypeParameters(Dafny.ISequence<DAST._IType> @params, out Dafny.ISet<DAST._IType> typeParamsSet, out Dafny.ISequence<RAST._ITypeParam> typeParams, out Dafny.ISequence<RAST._ITypeParam> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSet = Dafny.Set<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      BigInteger _2569_tpI;
      _2569_tpI = BigInteger.Zero;
      if ((new BigInteger((@params).Count)).Sign == 1) {
        while ((_2569_tpI) < (new BigInteger((@params).Count))) {
          DAST._IType _2570_tp;
          _2570_tp = (@params).Select(_2569_tpI);
          typeParamsSet = Dafny.Set<DAST._IType>.Union(typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2570_tp));
          RAST._IType _2571_genTp;
          RAST._IType _out21;
          _out21 = DCOMP.COMP.GenType(_2570_tp, false, false);
          _2571_genTp = _out21;
          typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_2571_genTp)._ToString(DCOMP.__default.IND), Dafny.Sequence<RAST._IType>.FromElements())));
          _2569_tpI = (_2569_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<RAST._IType> _2572_baseConstraints;
      _2572_baseConstraints = Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.StaticTrait);
      constrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(typeParams, _2572_baseConstraints);
    }
    public static Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2573_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2574_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2575_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2576_whereConstraints;
      Dafny.ISet<DAST._IType> _out22;
      Dafny.ISequence<RAST._ITypeParam> _out23;
      Dafny.ISequence<RAST._ITypeParam> _out24;
      Dafny.ISequence<Dafny.Rune> _out25;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out22, out _out23, out _out24, out _out25);
      _2573_typeParamsSet = _out22;
      _2574_sTypeParams = _out23;
      _2575_sConstrainedTypeParams = _out24;
      _2576_whereConstraints = _out25;
      Dafny.ISequence<Dafny.Rune> _2577_constrainedTypeParams;
      _2577_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2575_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IFormal> _2578_fields;
      _2578_fields = Dafny.Sequence<RAST._IFormal>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _2579_fieldInits;
      _2579_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _2580_fieldI;
      _2580_fieldI = BigInteger.Zero;
      while ((_2580_fieldI) < (new BigInteger(((c).dtor_fields).Count))) {
        DAST._IField _2581_field;
        _2581_field = ((c).dtor_fields).Select(_2580_fieldI);
        RAST._IType _2582_fieldType;
        RAST._IType _out26;
        _out26 = DCOMP.COMP.GenType(((_2581_field).dtor_formal).dtor_typ, false, false);
        _2582_fieldType = _out26;
        _2578_fields = Dafny.Sequence<RAST._IFormal>.Concat(_2578_fields, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub "), DCOMP.__default.escapeIdent(((_2581_field).dtor_formal).dtor_name)), RAST.Type.create_TypeApp(RAST.__default.refcell__type, Dafny.Sequence<RAST._IType>.FromElements(_2582_fieldType)))));
        Std.Wrappers._IOption<DAST._IExpression> _source72 = (_2581_field).dtor_defaultValue;
        if (_source72.is_None) {
          {
            RAST._IExpr _2583_RefCellNew;
            _2583_RefCellNew = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
            RAST._IExpr _2584_default;
            _2584_default = RAST.__default.std__Default__default;
            _2579_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2579_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(((_2581_field).dtor_formal).dtor_name), (_2583_RefCellNew).Apply1(_2584_default))));
          }
        } else {
          DAST._IExpression _2585___mcc_h0 = _source72.dtor_value;
          DAST._IExpression _2586_e = _2585___mcc_h0;
          {
            RAST._IExpr _2587_expr;
            DCOMP._IOwnership _2588___v40;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2589___v41;
            RAST._IExpr _out27;
            DCOMP._IOwnership _out28;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out29;
            DCOMP.COMP.GenExpr(_2586_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out27, out _out28, out _out29);
            _2587_expr = _out27;
            _2588___v40 = _out28;
            _2589___v41 = _out29;
            RAST._IExpr _2590_RefCellNew;
            _2590_RefCellNew = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
            _2579_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2579_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(((_2581_field).dtor_formal).dtor_name), (_2590_RefCellNew).Apply1(_2587_expr))));
          }
        }
        _2580_fieldI = (_2580_fieldI) + (BigInteger.One);
      }
      BigInteger _2591_typeParamI;
      _2591_typeParamI = BigInteger.Zero;
      while ((_2591_typeParamI) < (new BigInteger(((c).dtor_typeParams).Count))) {
        RAST._IType _2592_tpeGen;
        RAST._IType _out30;
        _out30 = DCOMP.COMP.GenType(((c).dtor_typeParams).Select(_2591_typeParamI), false, false);
        _2592_tpeGen = _out30;
        _2578_fields = Dafny.Sequence<RAST._IFormal>.Concat(_2578_fields, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2591_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_2592_tpeGen)))));
        _2579_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2579_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2591_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
        _2591_typeParamI = (_2591_typeParamI) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.Rune> _2593_datatypeName;
      _2593_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      RAST._IStruct _2594_struct;
      _2594_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _2593_datatypeName, _2574_sTypeParams, RAST.Formals.create_NamedFormals(_2578_fields));
      Dafny.ISequence<RAST._IType> _2595_typeParamsAsTypes;
      _2595_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2596_typeParam) => {
        return RAST.__default.RawType((_2596_typeParam).dtor_content);
      })), _2574_sTypeParams);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_2594_struct));
      Dafny.ISequence<RAST._IImplMember> _2597_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2598_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out31;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out32;
      DCOMP.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(path, (c).dtor_attributes))), _2573_typeParamsSet, out _out31, out _out32);
      _2597_implBodyRaw = _out31;
      _2598_traitBodies = _out32;
      Dafny.ISequence<RAST._IImplMember> _2599_implBody;
      _2599_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(RAST.Expr.create_Identifier(_2593_datatypeName), _2579_fieldInits))))), _2597_implBodyRaw);
      RAST._IImpl _2600_i;
      _2600_i = RAST.Impl.create_Impl(_2575_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2593_datatypeName), _2595_typeParamsAsTypes), _2576_whereConstraints, _2599_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2600_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _2601_i;
        _2601_i = BigInteger.Zero;
        while ((_2601_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _2602_superClass;
          _2602_superClass = ((c).dtor_superClasses).Select(_2601_i);
          DAST._IType _source73 = _2602_superClass;
          if (_source73.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2603___mcc_h1 = _source73.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _2604___mcc_h2 = _source73.dtor_typeArgs;
            DAST._IResolvedType _2605___mcc_h3 = _source73.dtor_resolved;
            DAST._IResolvedType _source74 = _2605___mcc_h3;
            if (_source74.is_Datatype) {
              DAST._IDatatypeType _2606___mcc_h7 = _source74.dtor_datatypeType;
            } else if (_source74.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2607___mcc_h9 = _source74.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _2608___mcc_h10 = _source74.dtor_attributes;
              Dafny.ISequence<DAST._IType> _2609_typeArgs = _2604___mcc_h2;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2610_traitPath = _2603___mcc_h1;
              {
                RAST._IType _2611_pathStr;
                RAST._IType _out33;
                _out33 = DCOMP.COMP.GenPath(_2610_traitPath);
                _2611_pathStr = _out33;
                Dafny.ISequence<RAST._IType> _2612_typeArgs;
                Dafny.ISequence<RAST._IType> _out34;
                _out34 = DCOMP.COMP.GenTypeArgs(_2609_typeArgs, false, false);
                _2612_typeArgs = _out34;
                Dafny.ISequence<RAST._IImplMember> _2613_body;
                _2613_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_2598_traitBodies).Contains(_2610_traitPath)) {
                  _2613_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_2598_traitBodies,_2610_traitPath);
                }
                RAST._IType _2614_genSelfPath;
                RAST._IType _out35;
                _out35 = DCOMP.COMP.GenPath(path);
                _2614_genSelfPath = _out35;
                RAST._IModDecl _2615_x;
                _2615_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2575_sConstrainedTypeParams, RAST.Type.create_TypeApp(_2611_pathStr, _2612_typeArgs), RAST.__default.Rc(RAST.Type.create_TypeApp(_2614_genSelfPath, _2595_typeParamsAsTypes)), _2576_whereConstraints, _2613_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_2615_x));
              }
            } else {
              DAST._IType _2616___mcc_h13 = _source74.dtor_baseType;
              DAST._INewtypeRange _2617___mcc_h14 = _source74.dtor_range;
              bool _2618___mcc_h15 = _source74.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _2619___mcc_h16 = _source74.dtor_attributes;
            }
          } else if (_source73.is_Nullable) {
            DAST._IType _2620___mcc_h21 = _source73.dtor_Nullable_a0;
          } else if (_source73.is_Tuple) {
            Dafny.ISequence<DAST._IType> _2621___mcc_h23 = _source73.dtor_Tuple_a0;
          } else if (_source73.is_Array) {
            DAST._IType _2622___mcc_h25 = _source73.dtor_element;
            BigInteger _2623___mcc_h26 = _source73.dtor_dims;
          } else if (_source73.is_Seq) {
            DAST._IType _2624___mcc_h29 = _source73.dtor_element;
          } else if (_source73.is_Set) {
            DAST._IType _2625___mcc_h31 = _source73.dtor_element;
          } else if (_source73.is_Multiset) {
            DAST._IType _2626___mcc_h33 = _source73.dtor_element;
          } else if (_source73.is_Map) {
            DAST._IType _2627___mcc_h35 = _source73.dtor_key;
            DAST._IType _2628___mcc_h36 = _source73.dtor_value;
          } else if (_source73.is_SetBuilder) {
            DAST._IType _2629___mcc_h39 = _source73.dtor_element;
          } else if (_source73.is_MapBuilder) {
            DAST._IType _2630___mcc_h41 = _source73.dtor_key;
            DAST._IType _2631___mcc_h42 = _source73.dtor_value;
          } else if (_source73.is_Arrow) {
            Dafny.ISequence<DAST._IType> _2632___mcc_h45 = _source73.dtor_args;
            DAST._IType _2633___mcc_h46 = _source73.dtor_result;
          } else if (_source73.is_Primitive) {
            DAST._IPrimitive _2634___mcc_h49 = _source73.dtor_Primitive_a0;
          } else if (_source73.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _2635___mcc_h51 = _source73.dtor_Passthrough_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _2636___mcc_h53 = _source73.dtor_TypeArg_a0;
          }
          _2601_i = (_2601_i) + (BigInteger.One);
        }
      }
      RAST._IImpl _2637_d;
      _2637_d = RAST.Impl.create_ImplFor(_2575_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2593_datatypeName), _2595_typeParamsAsTypes), _2576_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(_2593_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::new()"))))))));
      Dafny.ISequence<RAST._IModDecl> _2638_defaultImpl;
      _2638_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2637_d));
      RAST._IImpl _2639_p;
      _2639_p = RAST.Impl.create_ImplFor(_2575_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2593_datatypeName), _2595_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), ((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")"))))))));
      Dafny.ISequence<RAST._IModDecl> _2640_printImpl;
      _2640_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2639_p));
      RAST._IImpl _2641_pp;
      _2641_pp = RAST.Impl.create_ImplFor(_2574_sTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::cmp::PartialEq")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2593_datatypeName), _2595_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("eq"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("other"), RAST.__default.SelfBorrowed)), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ptr::eq(self, other)")))))));
      Dafny.ISequence<RAST._IModDecl> _2642_ptrPartialEqImpl;
      _2642_ptrPartialEqImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2641_pp));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(s, _2638_defaultImpl), _2640_printImpl), _2642_ptrPartialEqImpl);
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISet<DAST._IType> _2643_typeParamsSet;
      _2643_typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._IType> _2644_typeParams;
      _2644_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2645_tpI;
      _2645_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_2645_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._IType _2646_tp;
          _2646_tp = ((t).dtor_typeParams).Select(_2645_tpI);
          _2643_typeParamsSet = Dafny.Set<DAST._IType>.Union(_2643_typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2646_tp));
          RAST._IType _2647_genTp;
          RAST._IType _out36;
          _out36 = DCOMP.COMP.GenType(_2646_tp, false, false);
          _2647_genTp = _out36;
          _2644_typeParams = Dafny.Sequence<RAST._IType>.Concat(_2644_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_2647_genTp));
          _2645_tpI = (_2645_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2648_fullPath;
      _2648_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _2649_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2650___v45;
      Dafny.ISequence<RAST._IImplMember> _out37;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out38;
      DCOMP.COMP.GenClassImplBody((t).dtor_body, true, DAST.Type.create_Path(_2648_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Trait(_2648_fullPath, (t).dtor_attributes)), _2643_typeParamsSet, out _out37, out _out38);
      _2649_implBody = _out37;
      _2650___v45 = _out38;
      s = (RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMP.__default.escapeIdent((t).dtor_name)), _2644_typeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _2649_implBody)))._ToString(DCOMP.__default.IND);
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2651_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2652_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2653_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2654_whereConstraints;
      Dafny.ISet<DAST._IType> _out39;
      Dafny.ISequence<RAST._ITypeParam> _out40;
      Dafny.ISequence<RAST._ITypeParam> _out41;
      Dafny.ISequence<Dafny.Rune> _out42;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out39, out _out40, out _out41, out _out42);
      _2651_typeParamsSet = _out39;
      _2652_sTypeParams = _out40;
      _2653_sConstrainedTypeParams = _out41;
      _2654_whereConstraints = _out42;
      Dafny.ISequence<RAST._IType> _2655_typeParamsAsTypes;
      _2655_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2656_t) => {
        return RAST.__default.RawType((_2656_t).dtor_content);
      })), _2652_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _2657_constrainedTypeParams;
      _2657_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2653_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _2658_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source75 = DCOMP.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source75.is_None) {
        RAST._IType _out43;
        _out43 = DCOMP.COMP.GenType((c).dtor_base, false, false);
        _2658_underlyingType = _out43;
      } else {
        RAST._IType _2659___mcc_h0 = _source75.dtor_value;
        RAST._IType _2660_v = _2659___mcc_h0;
        _2658_underlyingType = _2660_v;
      }
      DAST._IType _2661_resultingType;
      _2661_resultingType = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Newtype((c).dtor_base, (c).dtor_range, false, (c).dtor_attributes));
      Dafny.ISequence<Dafny.Rune> _2662_datatypeName;
      _2662_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _2662_datatypeName, _2652_sTypeParams, RAST.Formals.create_NamelessFormals(Dafny.Sequence<RAST._INamelessFormal>.FromElements(RAST.NamelessFormal.create(RAST.Visibility.create_PUB(), _2658_underlyingType))))));
      RAST._IExpr _2663_fnBody;
      _2663_fnBody = RAST.Expr.create_Identifier(_2662_datatypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source76 = (c).dtor_witnessExpr;
      if (_source76.is_None) {
        {
          _2663_fnBody = (_2663_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _2664___mcc_h1 = _source76.dtor_value;
        DAST._IExpression _2665_e = _2664___mcc_h1;
        {
          DAST._IExpression _2666_e;
          _2666_e = ((object.Equals((c).dtor_base, _2661_resultingType)) ? (_2665_e) : (DAST.Expression.create_Convert(_2665_e, (c).dtor_base, _2661_resultingType)));
          RAST._IExpr _2667_eStr;
          DCOMP._IOwnership _2668___v46;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2669___v47;
          RAST._IExpr _out44;
          DCOMP._IOwnership _out45;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out46;
          DCOMP.COMP.GenExpr(_2666_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out44, out _out45, out _out46);
          _2667_eStr = _out44;
          _2668___v46 = _out45;
          _2669___v47 = _out46;
          _2663_fnBody = (_2663_fnBody).Apply1(_2667_eStr);
        }
      }
      RAST._IImplMember _2670_body;
      _2670_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2663_fnBody)));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2653_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2662_datatypeName), _2655_typeParamsAsTypes), _2654_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_2670_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2653_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2662_datatypeName), _2655_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2653_sConstrainedTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2662_datatypeName), _2655_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_2658_underlyingType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2671_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2672_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2673_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2674_whereConstraints;
      Dafny.ISet<DAST._IType> _out47;
      Dafny.ISequence<RAST._ITypeParam> _out48;
      Dafny.ISequence<RAST._ITypeParam> _out49;
      Dafny.ISequence<Dafny.Rune> _out50;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out47, out _out48, out _out49, out _out50);
      _2671_typeParamsSet = _out47;
      _2672_sTypeParams = _out48;
      _2673_sConstrainedTypeParams = _out49;
      _2674_whereConstraints = _out50;
      Dafny.ISequence<RAST._IType> _2675_typeParamsAsTypes;
      _2675_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2676_t) => {
        return RAST.__default.RawType((_2676_t).dtor_content);
      })), _2672_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _2677_constrainedTypeParams;
      _2677_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2673_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.IND, DCOMP.__default.IND));
      Dafny.ISequence<Dafny.Rune> _2678_datatypeName;
      _2678_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _2679_ctors;
      _2679_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _2680_i;
      _2680_i = BigInteger.Zero;
      while ((_2680_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2681_ctor;
        _2681_ctor = ((c).dtor_ctors).Select(_2680_i);
        Dafny.ISequence<RAST._IFormal> _2682_ctorArgs;
        _2682_ctorArgs = Dafny.Sequence<RAST._IFormal>.FromElements();
        BigInteger _2683_j;
        _2683_j = BigInteger.Zero;
        while ((_2683_j) < (new BigInteger(((_2681_ctor).dtor_args).Count))) {
          DAST._IFormal _2684_formal;
          _2684_formal = ((_2681_ctor).dtor_args).Select(_2683_j);
          RAST._IType _2685_formalType;
          RAST._IType _out51;
          _out51 = DCOMP.COMP.GenType((_2684_formal).dtor_typ, false, false);
          _2685_formalType = _out51;
          if ((c).dtor_isCo) {
            _2682_ctorArgs = Dafny.Sequence<RAST._IFormal>.Concat(_2682_ctorArgs, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMP.__default.escapeIdent((_2684_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_2685_formalType)))));
          } else {
            _2682_ctorArgs = Dafny.Sequence<RAST._IFormal>.Concat(_2682_ctorArgs, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMP.__default.escapeIdent((_2684_formal).dtor_name), _2685_formalType)));
          }
          _2683_j = (_2683_j) + (BigInteger.One);
        }
        _2679_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2679_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMP.__default.escapeIdent((_2681_ctor).dtor_name), RAST.Formals.create_NamedFormals(_2682_ctorArgs))));
        _2680_i = (_2680_i) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2686_selfPath;
      _2686_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _2687_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2688_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out52;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out53;
      DCOMP.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(_2686_selfPath, (c).dtor_attributes))), _2671_typeParamsSet, out _out52, out _out53);
      _2687_implBodyRaw = _out52;
      _2688_traitBodies = _out53;
      Dafny.ISequence<RAST._IImplMember> _2689_implBody;
      _2689_implBody = _2687_implBodyRaw;
      _2680_i = BigInteger.Zero;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2690_emittedFields;
      _2690_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      while ((_2680_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2691_ctor;
        _2691_ctor = ((c).dtor_ctors).Select(_2680_i);
        BigInteger _2692_j;
        _2692_j = BigInteger.Zero;
        while ((_2692_j) < (new BigInteger(((_2691_ctor).dtor_args).Count))) {
          DAST._IFormal _2693_formal;
          _2693_formal = ((_2691_ctor).dtor_args).Select(_2692_j);
          if (!((_2690_emittedFields).Contains((_2693_formal).dtor_name))) {
            _2690_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2690_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_2693_formal).dtor_name));
            RAST._IType _2694_formalType;
            RAST._IType _out54;
            _out54 = DCOMP.COMP.GenType((_2693_formal).dtor_typ, false, false);
            _2694_formalType = _out54;
            Dafny.ISequence<RAST._IMatchCase> _2695_cases;
            _2695_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _2696_k;
            _2696_k = BigInteger.Zero;
            while ((_2696_k) < (new BigInteger(((c).dtor_ctors).Count))) {
              DAST._IDatatypeCtor _2697_ctor2;
              _2697_ctor2 = ((c).dtor_ctors).Select(_2696_k);
              Dafny.ISequence<Dafny.Rune> _2698_pattern;
              _2698_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2678_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent((_2697_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _2699_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              BigInteger _2700_l;
              _2700_l = BigInteger.Zero;
              bool _2701_hasMatchingField;
              _2701_hasMatchingField = false;
              while ((_2700_l) < (new BigInteger(((_2697_ctor2).dtor_args).Count))) {
                DAST._IFormal _2702_formal2;
                _2702_formal2 = ((_2697_ctor2).dtor_args).Select(_2700_l);
                if (((_2693_formal).dtor_name).Equals((_2702_formal2).dtor_name)) {
                  _2701_hasMatchingField = true;
                }
                _2698_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2698_pattern, DCOMP.__default.escapeIdent((_2702_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
                _2700_l = (_2700_l) + (BigInteger.One);
              }
              _2698_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_2698_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_2701_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _2699_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMP.__default.escapeIdent((_2693_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _2699_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeIdent((_2693_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _2699_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _2703_ctorMatch;
              _2703_ctorMatch = RAST.MatchCase.create(_2698_pattern, RAST.Expr.create_RawExpr(_2699_rhs));
              _2695_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2695_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_2703_ctorMatch));
              _2696_k = (_2696_k) + (BigInteger.One);
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _2695_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2695_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2678_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _2704_methodBody;
            _2704_methodBody = RAST.Expr.create_Match(RAST.__default.self, _2695_cases);
            _2689_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_2689_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMP.__default.escapeIdent((_2693_formal).dtor_name), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_2694_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2704_methodBody)))));
          }
          _2692_j = (_2692_j) + (BigInteger.One);
        }
        _2680_i = (_2680_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        BigInteger _2705_typeI;
        _2705_typeI = BigInteger.Zero;
        Dafny.ISequence<RAST._IType> _2706_types;
        _2706_types = Dafny.Sequence<RAST._IType>.FromElements();
        while ((_2705_typeI) < (new BigInteger(((c).dtor_typeParams).Count))) {
          RAST._IType _2707_genTp;
          RAST._IType _out55;
          _out55 = DCOMP.COMP.GenType(((c).dtor_typeParams).Select(_2705_typeI), false, false);
          _2707_genTp = _out55;
          _2706_types = Dafny.Sequence<RAST._IType>.Concat(_2706_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData::")), Dafny.Sequence<RAST._IType>.FromElements(_2707_genTp))));
          _2705_typeI = (_2705_typeI) + (BigInteger.One);
        }
        _2679_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2679_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Formals.create_NamelessFormals(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessFormal>(((System.Func<RAST._IType, RAST._INamelessFormal>)((_2708_tpe) => {
  return RAST.NamelessFormal.create(RAST.Visibility.create_PRIV(), _2708_tpe);
})), _2706_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _2709_enumBody;
      _2709_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _2678_datatypeName, _2672_sTypeParams, _2679_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_2673_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2678_datatypeName), _2675_typeParamsAsTypes), _2674_whereConstraints, _2689_implBody)));
      _2680_i = BigInteger.Zero;
      Dafny.ISequence<RAST._IMatchCase> _2710_printImplBodyCases;
      _2710_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      while ((_2680_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2711_ctor;
        _2711_ctor = ((c).dtor_ctors).Select(_2680_i);
        Dafny.ISequence<Dafny.Rune> _2712_ctorMatch;
        _2712_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeIdent((_2711_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _2713_modulePrefix;
        _2713_modulePrefix = (((((c).dtor_enclosingModule)).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(((c).dtor_enclosingModule), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _2714_printRhs;
        _2714_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _2713_modulePrefix), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent((_2711_ctor).dtor_name)), (((_2711_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        BigInteger _2715_j;
        _2715_j = BigInteger.Zero;
        while ((_2715_j) < (new BigInteger(((_2711_ctor).dtor_args).Count))) {
          DAST._IFormal _2716_formal;
          _2716_formal = ((_2711_ctor).dtor_args).Select(_2715_j);
          _2712_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2712_ctorMatch, DCOMP.__default.escapeIdent((_2716_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          if ((_2715_j).Sign == 1) {
            _2714_printRhs = (_2714_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _2714_printRhs = (_2714_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMP.__default.escapeIdent((_2716_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
          _2715_j = (_2715_j) + (BigInteger.One);
        }
        _2712_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_2712_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_2711_ctor).dtor_hasAnyArgs) {
          _2714_printRhs = (_2714_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _2714_printRhs = (_2714_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _2710_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2710_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2678_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2712_ctorMatch), RAST.Expr.create_Block(_2714_printRhs))));
        _2680_i = (_2680_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _2710_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2710_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2678_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      RAST._IExpr _2717_printImplBody;
      _2717_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _2710_printImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _2718_printImpl;
      _2718_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2673_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2678_datatypeName), _2675_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2717_printImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _2719_defaultImpl;
      _2719_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _2720_asRefImpl;
      _2720_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        _2680_i = BigInteger.Zero;
        RAST._IExpr _2721_structName;
        _2721_structName = (RAST.Expr.create_Identifier(_2678_datatypeName)).MSel(DCOMP.__default.escapeIdent((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _2722_structAssignments;
        _2722_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        while ((_2680_i) < (new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count))) {
          DAST._IFormal _2723_formal;
          _2723_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_2680_i);
          _2722_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2722_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent((_2723_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
          _2680_i = (_2680_i) + (BigInteger.One);
        }
        Dafny.ISequence<RAST._ITypeParam> _2724_defaultConstrainedTypeParams;
        _2724_defaultConstrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(_2672_sTypeParams, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _2725_fullType;
        _2725_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2678_datatypeName), _2675_typeParamsAsTypes);
        _2719_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2724_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _2725_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_2725_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_2721_structName, _2722_structAssignments))))))));
        _2720_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2724_defaultConstrainedTypeParams, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_2725_fullType), RAST.Type.create_Borrowed(_2725_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_2709_enumBody, _2718_printImpl), _2719_defaultImpl), _2720_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi4 = new BigInteger((p).Count);
        for (BigInteger _2726_i = BigInteger.Zero; _2726_i < _hi4; _2726_i++) {
          r = (r).MSel(DCOMP.__default.escapeIdent(((p).Select(_2726_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi5 = new BigInteger((p).Count);
        for (BigInteger _2727_i = BigInteger.Zero; _2727_i < _hi5; _2727_i++) {
          r = (r).MSel(DCOMP.__default.escapeIdent(((p).Select(_2727_i))));
        }
      }
      return r;
    }
    public static Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, bool inBinding, bool inFn)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _2728_i;
        _2728_i = BigInteger.Zero;
        while ((_2728_i) < (new BigInteger((args).Count))) {
          RAST._IType _2729_genTp;
          RAST._IType _out56;
          _out56 = DCOMP.COMP.GenType((args).Select(_2728_i), inBinding, inFn);
          _2729_genTp = _out56;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_2729_genTp));
          _2728_i = (_2728_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public static bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public static RAST._IType GenType(DAST._IType c, bool inBinding, bool inFn)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source77 = c;
      if (_source77.is_Path) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2730___mcc_h0 = _source77.dtor_Path_a0;
        Dafny.ISequence<DAST._IType> _2731___mcc_h1 = _source77.dtor_typeArgs;
        DAST._IResolvedType _2732___mcc_h2 = _source77.dtor_resolved;
        DAST._IResolvedType _2733_resolved = _2732___mcc_h2;
        Dafny.ISequence<DAST._IType> _2734_args = _2731___mcc_h1;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2735_p = _2730___mcc_h0;
        {
          RAST._IType _2736_t;
          RAST._IType _out57;
          _out57 = DCOMP.COMP.GenPath(_2735_p);
          _2736_t = _out57;
          Dafny.ISequence<RAST._IType> _2737_typeArgs;
          Dafny.ISequence<RAST._IType> _out58;
          _out58 = DCOMP.COMP.GenTypeArgs(_2734_args, inBinding, inFn);
          _2737_typeArgs = _out58;
          s = RAST.Type.create_TypeApp(_2736_t, _2737_typeArgs);
          DAST._IResolvedType _source78 = _2733_resolved;
          if (_source78.is_Datatype) {
            DAST._IDatatypeType _2738___mcc_h21 = _source78.dtor_datatypeType;
            DAST._IDatatypeType _source79 = _2738___mcc_h21;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2739___mcc_h22 = _source79.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2740___mcc_h23 = _source79.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2741_attributes = _2740___mcc_h23;
            {
              if (DCOMP.COMP.IsRcWrapped(_2741_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source78.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2742___mcc_h24 = _source78.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2743___mcc_h25 = _source78.dtor_attributes;
            {
              if ((_2735_p).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = RAST.__default.Rc(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::any::Any")));
              } else {
                if (inBinding) {
                  s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
                } else {
                  s = RAST.Type.create_ImplType(s);
                }
              }
            }
          } else {
            DAST._IType _2744___mcc_h26 = _source78.dtor_baseType;
            DAST._INewtypeRange _2745___mcc_h27 = _source78.dtor_range;
            bool _2746___mcc_h28 = _source78.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _2747___mcc_h29 = _source78.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2748_attributes = _2747___mcc_h29;
            bool _2749_erased = _2746___mcc_h28;
            DAST._INewtypeRange _2750_range = _2745___mcc_h27;
            DAST._IType _2751_t = _2744___mcc_h26;
            {
              if (_2749_erased) {
                Std.Wrappers._IOption<RAST._IType> _source80 = DCOMP.COMP.NewtypeToRustType(_2751_t, _2750_range);
                if (_source80.is_None) {
                } else {
                  RAST._IType _2752___mcc_h30 = _source80.dtor_value;
                  RAST._IType _2753_v = _2752___mcc_h30;
                  s = _2753_v;
                }
              }
            }
          }
        }
      } else if (_source77.is_Nullable) {
        DAST._IType _2754___mcc_h3 = _source77.dtor_Nullable_a0;
        DAST._IType _2755_inner = _2754___mcc_h3;
        {
          RAST._IType _2756_innerExpr;
          RAST._IType _out59;
          _out59 = DCOMP.COMP.GenType(_2755_inner, inBinding, inFn);
          _2756_innerExpr = _out59;
          s = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::option::Option")), Dafny.Sequence<RAST._IType>.FromElements(_2756_innerExpr));
        }
      } else if (_source77.is_Tuple) {
        Dafny.ISequence<DAST._IType> _2757___mcc_h4 = _source77.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IType> _2758_types = _2757___mcc_h4;
        {
          Dafny.ISequence<RAST._IType> _2759_args;
          _2759_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2760_i;
          _2760_i = BigInteger.Zero;
          while ((_2760_i) < (new BigInteger((_2758_types).Count))) {
            RAST._IType _2761_generated;
            RAST._IType _out60;
            _out60 = DCOMP.COMP.GenType((_2758_types).Select(_2760_i), inBinding, inFn);
            _2761_generated = _out60;
            _2759_args = Dafny.Sequence<RAST._IType>.Concat(_2759_args, Dafny.Sequence<RAST._IType>.FromElements(_2761_generated));
            _2760_i = (_2760_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_2759_args);
        }
      } else if (_source77.is_Array) {
        DAST._IType _2762___mcc_h5 = _source77.dtor_element;
        BigInteger _2763___mcc_h6 = _source77.dtor_dims;
        BigInteger _2764_dims = _2763___mcc_h6;
        DAST._IType _2765_element = _2762___mcc_h5;
        {
          RAST._IType _2766_elem;
          RAST._IType _out61;
          _out61 = DCOMP.COMP.GenType(_2765_element, inBinding, inFn);
          _2766_elem = _out61;
          s = _2766_elem;
          BigInteger _2767_i;
          _2767_i = BigInteger.Zero;
          while ((_2767_i) < (_2764_dims)) {
            s = RAST.__default.Rc(RAST.__default.RefCell(RAST.__default.Vec(s)));
            _2767_i = (_2767_i) + (BigInteger.One);
          }
        }
      } else if (_source77.is_Seq) {
        DAST._IType _2768___mcc_h7 = _source77.dtor_element;
        DAST._IType _2769_element = _2768___mcc_h7;
        {
          RAST._IType _2770_elem;
          RAST._IType _out62;
          _out62 = DCOMP.COMP.GenType(_2769_element, inBinding, inFn);
          _2770_elem = _out62;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_2770_elem));
        }
      } else if (_source77.is_Set) {
        DAST._IType _2771___mcc_h8 = _source77.dtor_element;
        DAST._IType _2772_element = _2771___mcc_h8;
        {
          RAST._IType _2773_elem;
          RAST._IType _out63;
          _out63 = DCOMP.COMP.GenType(_2772_element, inBinding, inFn);
          _2773_elem = _out63;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_2773_elem));
        }
      } else if (_source77.is_Multiset) {
        DAST._IType _2774___mcc_h9 = _source77.dtor_element;
        DAST._IType _2775_element = _2774___mcc_h9;
        {
          RAST._IType _2776_elem;
          RAST._IType _out64;
          _out64 = DCOMP.COMP.GenType(_2775_element, inBinding, inFn);
          _2776_elem = _out64;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_2776_elem));
        }
      } else if (_source77.is_Map) {
        DAST._IType _2777___mcc_h10 = _source77.dtor_key;
        DAST._IType _2778___mcc_h11 = _source77.dtor_value;
        DAST._IType _2779_value = _2778___mcc_h11;
        DAST._IType _2780_key = _2777___mcc_h10;
        {
          RAST._IType _2781_keyType;
          RAST._IType _out65;
          _out65 = DCOMP.COMP.GenType(_2780_key, inBinding, inFn);
          _2781_keyType = _out65;
          RAST._IType _2782_valueType;
          RAST._IType _out66;
          _out66 = DCOMP.COMP.GenType(_2779_value, inBinding, inFn);
          _2782_valueType = _out66;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_2781_keyType, _2782_valueType));
        }
      } else if (_source77.is_SetBuilder) {
        DAST._IType _2783___mcc_h12 = _source77.dtor_element;
        DAST._IType _2784_elem = _2783___mcc_h12;
        {
          RAST._IType _2785_elemType;
          RAST._IType _out67;
          _out67 = DCOMP.COMP.GenType(_2784_elem, inBinding, inFn);
          _2785_elemType = _out67;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2785_elemType));
        }
      } else if (_source77.is_MapBuilder) {
        DAST._IType _2786___mcc_h13 = _source77.dtor_key;
        DAST._IType _2787___mcc_h14 = _source77.dtor_value;
        DAST._IType _2788_value = _2787___mcc_h14;
        DAST._IType _2789_key = _2786___mcc_h13;
        {
          RAST._IType _2790_keyType;
          RAST._IType _out68;
          _out68 = DCOMP.COMP.GenType(_2789_key, inBinding, inFn);
          _2790_keyType = _out68;
          RAST._IType _2791_valueType;
          RAST._IType _out69;
          _out69 = DCOMP.COMP.GenType(_2788_value, inBinding, inFn);
          _2791_valueType = _out69;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2790_keyType, _2791_valueType));
        }
      } else if (_source77.is_Arrow) {
        Dafny.ISequence<DAST._IType> _2792___mcc_h15 = _source77.dtor_args;
        DAST._IType _2793___mcc_h16 = _source77.dtor_result;
        DAST._IType _2794_result = _2793___mcc_h16;
        Dafny.ISequence<DAST._IType> _2795_args = _2792___mcc_h15;
        {
          Dafny.ISequence<RAST._IType> _2796_argTypes;
          _2796_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2797_i;
          _2797_i = BigInteger.Zero;
          while ((_2797_i) < (new BigInteger((_2795_args).Count))) {
            RAST._IType _2798_generated;
            RAST._IType _out70;
            _out70 = DCOMP.COMP.GenType((_2795_args).Select(_2797_i), inBinding, true);
            _2798_generated = _out70;
            _2796_argTypes = Dafny.Sequence<RAST._IType>.Concat(_2796_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_2798_generated)));
            _2797_i = (_2797_i) + (BigInteger.One);
          }
          RAST._IType _2799_resultType;
          RAST._IType _out71;
          _out71 = DCOMP.COMP.GenType(_2794_result, inBinding, (inFn) || (inBinding));
          _2799_resultType = _out71;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("FunctionWrapper")), Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_FnType(_2796_argTypes, RAST.Type.create_IntersectionType(_2799_resultType, RAST.__default.StaticTrait))));
        }
      } else if (_source77.is_Primitive) {
        DAST._IPrimitive _2800___mcc_h17 = _source77.dtor_Primitive_a0;
        DAST._IPrimitive _2801_p = _2800___mcc_h17;
        {
          DAST._IPrimitive _source81 = _2801_p;
          if (_source81.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source81.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source81.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel(DCOMP.__default.DafnyChar)));
          } else if (_source81.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel(DCOMP.__default.DafnyChar);
          }
        }
      } else if (_source77.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _2802___mcc_h18 = _source77.dtor_Passthrough_a0;
        Dafny.ISequence<Dafny.Rune> _2803_v = _2802___mcc_h18;
        s = RAST.__default.RawType(_2803_v);
      } else {
        Dafny.ISequence<Dafny.Rune> _2804___mcc_h19 = _source77.dtor_TypeArg_a0;
        Dafny.ISequence<Dafny.Rune> _source82 = _2804___mcc_h19;
        Dafny.ISequence<Dafny.Rune> _2805___mcc_h20 = _source82;
        Dafny.ISequence<Dafny.Rune> _2806_name = _2805___mcc_h20;
        s = RAST.__default.RawType(DCOMP.__default.escapeIdent(_2806_name));
      }
      return s;
    }
    public static void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _2807_i;
      _2807_i = BigInteger.Zero;
      while ((_2807_i) < (new BigInteger((body).Count))) {
        DAST._IMethod _source83 = (body).Select(_2807_i);
        DAST._IMethod _2808___mcc_h0 = _source83;
        DAST._IMethod _2809_m = _2808___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source84 = (_2809_m).dtor_overridingPath;
          if (_source84.is_None) {
            {
              RAST._IImplMember _2810_generated;
              RAST._IImplMember _out72;
              _out72 = DCOMP.COMP.GenMethod(_2809_m, forTrait, enclosingType, enclosingTypeParams);
              _2810_generated = _out72;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_2810_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2811___mcc_h1 = _source84.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2812_p = _2811___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _2813_existing;
              _2813_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_2812_p)) {
                _2813_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_2812_p);
              }
              RAST._IImplMember _2814_genMethod;
              RAST._IImplMember _out73;
              _out73 = DCOMP.COMP.GenMethod(_2809_m, true, enclosingType, enclosingTypeParams);
              _2814_genMethod = _out73;
              _2813_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_2813_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_2814_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_2812_p, _2813_existing)));
            }
          }
        }
        _2807_i = (_2807_i) + (BigInteger.One);
      }
    }
    public static Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _2815_i;
      _2815_i = BigInteger.Zero;
      while ((_2815_i) < (new BigInteger((@params).Count))) {
        DAST._IFormal _2816_param;
        _2816_param = (@params).Select(_2815_i);
        RAST._IType _2817_paramType;
        RAST._IType _out74;
        _out74 = DCOMP.COMP.GenType((_2816_param).dtor_typ, false, false);
        _2817_paramType = _out74;
        if (!((_2817_paramType).HasCopySemantics())) {
          _2817_paramType = RAST.Type.create_Borrowed(_2817_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMP.__default.escapeIdent((_2816_param).dtor_name), _2817_paramType)));
        _2815_i = (_2815_i) + (BigInteger.One);
      }
      return s;
    }
    public static RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _2818_params;
      Dafny.ISequence<RAST._IFormal> _out75;
      _out75 = DCOMP.COMP.GenParams((m).dtor_params);
      _2818_params = _out75;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2819_paramNames;
      _2819_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _2820_paramTypes;
      _2820_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi6 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _2821_paramI = BigInteger.Zero; _2821_paramI < _hi6; _2821_paramI++) {
        DAST._IFormal _2822_dafny__formal;
        _2822_dafny__formal = ((m).dtor_params).Select(_2821_paramI);
        RAST._IFormal _2823_formal;
        _2823_formal = (_2818_params).Select(_2821_paramI);
        Dafny.ISequence<Dafny.Rune> _2824_name;
        _2824_name = (_2823_formal).dtor_name;
        _2819_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2819_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2824_name));
        _2820_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2820_paramTypes, _2824_name, (_2823_formal).dtor_tpe);
      }
      if (!((m).dtor_isStatic)) {
        if (forTrait) {
          _2818_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), _2818_params);
        } else {
          RAST._IType _2825_tpe;
          RAST._IType _out76;
          _out76 = DCOMP.COMP.GenType(enclosingType, false, false);
          _2825_tpe = _out76;
          _2818_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_Borrowed(_2825_tpe))), _2818_params);
        }
      }
      Dafny.ISequence<RAST._IType> _2826_retTypeArgs;
      _2826_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2827_typeI;
      _2827_typeI = BigInteger.Zero;
      while ((_2827_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _2828_typeExpr;
        RAST._IType _out77;
        _out77 = DCOMP.COMP.GenType(((m).dtor_outTypes).Select(_2827_typeI), false, false);
        _2828_typeExpr = _out77;
        _2826_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_2826_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_2828_typeExpr));
        _2827_typeI = (_2827_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _2829_visibility;
      _2829_visibility = RAST.Visibility.create_PUB();
      Dafny.ISequence<Dafny.Rune> _2830_fnName;
      _2830_fnName = DCOMP.__default.escapeIdent((m).dtor_name);
      Dafny.ISequence<DAST._IType> _2831_typeParamsFiltered;
      _2831_typeParamsFiltered = Dafny.Sequence<DAST._IType>.FromElements();
      BigInteger _2832_typeParamI;
      _2832_typeParamI = BigInteger.Zero;
      while ((_2832_typeParamI) < (new BigInteger(((m).dtor_typeParams).Count))) {
        DAST._IType _2833_typeParam;
        _2833_typeParam = ((m).dtor_typeParams).Select(_2832_typeParamI);
        if (!((enclosingTypeParams).Contains(_2833_typeParam))) {
          _2831_typeParamsFiltered = Dafny.Sequence<DAST._IType>.Concat(_2831_typeParamsFiltered, Dafny.Sequence<DAST._IType>.FromElements(_2833_typeParam));
        }
        _2832_typeParamI = (_2832_typeParamI) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.Rune> _2834_whereClauses;
      _2834_whereClauses = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      Dafny.ISequence<RAST._ITypeParam> _2835_typeParams;
      _2835_typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      if ((new BigInteger((_2831_typeParamsFiltered).Count)).Sign == 1) {
        _2834_whereClauses = Dafny.Sequence<Dafny.Rune>.Concat(_2834_whereClauses, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" where "));
        BigInteger _2836_i;
        _2836_i = BigInteger.Zero;
        while ((_2836_i) < (new BigInteger((_2831_typeParamsFiltered).Count))) {
          RAST._IType _2837_typeExpr;
          RAST._IType _out78;
          _out78 = DCOMP.COMP.GenType((_2831_typeParamsFiltered).Select(_2836_i), false, false);
          _2837_typeExpr = _out78;
          _2835_typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(_2835_typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_2837_typeExpr)._ToString(DCOMP.__default.IND), Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.DefaultTrait, RAST.__default.StaticTrait))));
          _2836_i = (_2836_i) + (BigInteger.One);
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _2838_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMP._IEnvironment _2839_env = DCOMP.Environment.Default();
      if ((m).dtor_hasBody) {
        RAST._IExpr _2840_earlyReturn;
        _2840_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source85 = (m).dtor_outVars;
        if (_source85.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2841___mcc_h0 = _source85.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2842_outVars = _2841___mcc_h0;
          {
            Dafny.ISequence<RAST._IExpr> _2843_tupleArgs;
            _2843_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
            BigInteger _hi7 = new BigInteger((_2842_outVars).Count);
            for (BigInteger _2844_outI = BigInteger.Zero; _2844_outI < _hi7; _2844_outI++) {
              Dafny.ISequence<Dafny.Rune> _2845_outVar;
              _2845_outVar = (_2842_outVars).Select(_2844_outI);
              RAST._IType _2846_outType;
              RAST._IType _out79;
              _out79 = DCOMP.COMP.GenType(((m).dtor_outTypes).Select(_2844_outI), false, false);
              _2846_outType = _out79;
              Dafny.ISequence<Dafny.Rune> _2847_outName;
              _2847_outName = DCOMP.__default.escapeIdent((_2845_outVar));
              _2819_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2819_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2847_outName));
              RAST._IType _2848_outMaybeType;
              _2848_outMaybeType = (((_2846_outType).HasCopySemantics()) ? (_2846_outType) : (RAST.__default.MaybePlaceboType(_2846_outType)));
              _2820_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2820_paramTypes, _2847_outName, _2848_outMaybeType);
              RAST._IExpr _2849_outVarReturn;
              DCOMP._IOwnership _2850___v51;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2851___v52;
              RAST._IExpr _out80;
              DCOMP._IOwnership _out81;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out82;
              DCOMP.COMP.GenExpr(DAST.Expression.create_Ident((_2845_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2847_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_2847_outName, _2848_outMaybeType))), DCOMP.Ownership.create_OwnershipOwned(), out _out80, out _out81, out _out82);
              _2849_outVarReturn = _out80;
              _2850___v51 = _out81;
              _2851___v52 = _out82;
              _2843_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_2843_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_2849_outVarReturn));
            }
            if ((new BigInteger((_2843_tupleArgs).Count)) == (BigInteger.One)) {
              _2840_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_2843_tupleArgs).Select(BigInteger.Zero)));
            } else {
              _2840_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_2843_tupleArgs)));
            }
          }
        }
        _2839_env = DCOMP.Environment.create(_2819_paramNames, _2820_paramTypes);
        RAST._IExpr _2852_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2853___v53;
        DCOMP._IEnvironment _2854___v54;
        RAST._IExpr _out83;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out84;
        DCOMP._IEnvironment _out85;
        DCOMP.COMP.GenStmts((m).dtor_body, (((m).dtor_isStatic) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))), _2839_env, true, _2840_earlyReturn, out _out83, out _out84, out _out85);
        _2852_body = _out83;
        _2853___v53 = _out84;
        _2854___v54 = _out85;
        _2838_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some(_2852_body);
      } else {
        _2839_env = DCOMP.Environment.create(_2819_paramNames, _2820_paramTypes);
        _2838_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_2829_visibility, RAST.Fn.create(_2830_fnName, _2835_typeParams, _2818_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_2826_retTypeArgs).Count)) == (BigInteger.One)) ? ((_2826_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_2826_retTypeArgs)))), _2834_whereClauses, _2838_fBody));
      return s;
    }
    public static void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2855_declarations;
      _2855_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _2856_i;
      _2856_i = BigInteger.Zero;
      newEnv = env;
      while ((_2856_i) < (new BigInteger((stmts).Count))) {
        DAST._IStatement _2857_stmt;
        _2857_stmt = (stmts).Select(_2856_i);
        RAST._IExpr _2858_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2859_recIdents;
        DCOMP._IEnvironment _2860_newEnv2;
        RAST._IExpr _out86;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out87;
        DCOMP._IEnvironment _out88;
        DCOMP.COMP.GenStmt(_2857_stmt, selfIdent, newEnv, (isLast) && ((_2856_i) == ((new BigInteger((stmts).Count)) - (BigInteger.One))), earlyReturn, out _out86, out _out87, out _out88);
        _2858_stmtExpr = _out86;
        _2859_recIdents = _out87;
        _2860_newEnv2 = _out88;
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_2859_recIdents, _2855_declarations));
        newEnv = _2860_newEnv2;
        DAST._IStatement _source86 = _2857_stmt;
        if (_source86.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2861___mcc_h0 = _source86.dtor_name;
          DAST._IType _2862___mcc_h1 = _source86.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2863___mcc_h2 = _source86.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _2864_name = _2861___mcc_h0;
          {
            _2855_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2855_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2864_name));
          }
        } else if (_source86.is_Assign) {
          DAST._IAssignLhs _2865___mcc_h6 = _source86.dtor_lhs;
          DAST._IExpression _2866___mcc_h7 = _source86.dtor_value;
        } else if (_source86.is_If) {
          DAST._IExpression _2867___mcc_h10 = _source86.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2868___mcc_h11 = _source86.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2869___mcc_h12 = _source86.dtor_els;
        } else if (_source86.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2870___mcc_h16 = _source86.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2871___mcc_h17 = _source86.dtor_body;
        } else if (_source86.is_While) {
          DAST._IExpression _2872___mcc_h20 = _source86.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2873___mcc_h21 = _source86.dtor_body;
        } else if (_source86.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2874___mcc_h24 = _source86.dtor_boundName;
          DAST._IType _2875___mcc_h25 = _source86.dtor_boundType;
          DAST._IExpression _2876___mcc_h26 = _source86.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2877___mcc_h27 = _source86.dtor_body;
        } else if (_source86.is_Call) {
          DAST._IExpression _2878___mcc_h32 = _source86.dtor_on;
          DAST._ICallName _2879___mcc_h33 = _source86.dtor_callName;
          Dafny.ISequence<DAST._IType> _2880___mcc_h34 = _source86.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2881___mcc_h35 = _source86.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2882___mcc_h36 = _source86.dtor_outs;
        } else if (_source86.is_Return) {
          DAST._IExpression _2883___mcc_h42 = _source86.dtor_expr;
        } else if (_source86.is_EarlyReturn) {
        } else if (_source86.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2884___mcc_h44 = _source86.dtor_toLabel;
        } else if (_source86.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2885___mcc_h46 = _source86.dtor_body;
        } else if (_source86.is_JumpTailCallStart) {
        } else if (_source86.is_Halt) {
        } else {
          DAST._IExpression _2886___mcc_h48 = _source86.dtor_Print_a0;
        }
        generated = (generated).Then(_2858_stmtExpr);
        _2856_i = (_2856_i) + (BigInteger.One);
      }
    }
    public static void GenAssignLhs(DAST._IAssignLhs lhs, Dafny.ISequence<Dafny.Rune> rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, out Dafny.ISequence<Dafny.Rune> generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      generated = Dafny.Sequence<Dafny.Rune>.Empty;
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IAssignLhs _source87 = lhs;
      if (_source87.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _2887___mcc_h0 = _source87.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source88 = _2887___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _2888___mcc_h1 = _source88;
        Dafny.ISequence<Dafny.Rune> _2889_id = _2888___mcc_h1;
        {
          if (((env).IsBorrowed(_2889_id)) || ((env).IsBorrowedMut(_2889_id))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), DCOMP.__default.escapeIdent(_2889_id));
          } else {
            generated = DCOMP.__default.escapeIdent(_2889_id);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2889_id);
          needsIIFE = false;
        }
      } else if (_source87.is_Select) {
        DAST._IExpression _2890___mcc_h2 = _source87.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _2891___mcc_h3 = _source87.dtor_field;
        Dafny.ISequence<Dafny.Rune> _2892_field = _2891___mcc_h3;
        DAST._IExpression _2893_on = _2890___mcc_h2;
        {
          RAST._IExpr _2894_onExpr;
          DCOMP._IOwnership _2895_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2896_recIdents;
          RAST._IExpr _out89;
          DCOMP._IOwnership _out90;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out91;
          DCOMP.COMP.GenExpr(_2893_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out89, out _out90, out _out91);
          _2894_onExpr = _out89;
          _2895_onOwned = _out90;
          _2896_recIdents = _out91;
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*("), (_2894_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _2892_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()) = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
          readIdents = _2896_recIdents;
          needsIIFE = true;
        }
      } else {
        DAST._IExpression _2897___mcc_h4 = _source87.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _2898___mcc_h5 = _source87.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _2899_indices = _2898___mcc_h5;
        DAST._IExpression _2900_on = _2897___mcc_h4;
        {
          RAST._IExpr _2901_onExpr;
          DCOMP._IOwnership _2902_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2903_recIdents;
          RAST._IExpr _out92;
          DCOMP._IOwnership _out93;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out94;
          DCOMP.COMP.GenExpr(_2900_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out92, out _out93, out _out94);
          _2901_onExpr = _out92;
          _2902_onOwned = _out93;
          _2903_recIdents = _out94;
          readIdents = _2903_recIdents;
          generated = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          BigInteger _2904_i;
          _2904_i = BigInteger.Zero;
          while ((_2904_i) < (new BigInteger((_2899_indices).Count))) {
            RAST._IExpr _2905_idx;
            DCOMP._IOwnership _2906___v58;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2907_recIdentsIdx;
            RAST._IExpr _out95;
            DCOMP._IOwnership _out96;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out97;
            DCOMP.COMP.GenExpr((_2899_indices).Select(_2904_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out95, out _out96, out _out97);
            _2905_idx = _out95;
            _2906___v58 = _out96;
            _2907_recIdentsIdx = _out97;
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let __idx")), Std.Strings.__default.OfNat(_2904_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = <usize as ::dafny_runtime::NumCast>::from(")), (_2905_idx)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap();\n"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2907_recIdentsIdx);
            _2904_i = (_2904_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, (_2901_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()"));
          _2904_i = BigInteger.Zero;
          while ((_2904_i) < (new BigInteger((_2899_indices).Count))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[__idx")), Std.Strings.__default.OfNat(_2904_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            _2904_i = (_2904_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n}"));
          needsIIFE = true;
        }
      }
    }
    public static void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      DAST._IStatement _source89 = stmt;
      if (_source89.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _2908___mcc_h0 = _source89.dtor_name;
        DAST._IType _2909___mcc_h1 = _source89.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _2910___mcc_h2 = _source89.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source90 = _2910___mcc_h2;
        if (_source90.is_None) {
          DAST._IType _2911_typ = _2909___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _2912_name = _2908___mcc_h0;
          {
            DAST._IStatement _2913_newStmt;
            _2913_newStmt = DAST.Statement.create_DeclareVar(_2912_name, _2911_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_2911_typ)));
            RAST._IExpr _out98;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out99;
            DCOMP._IEnvironment _out100;
            DCOMP.COMP.GenStmt(_2913_newStmt, selfIdent, env, isLast, earlyReturn, out _out98, out _out99, out _out100);
            generated = _out98;
            readIdents = _out99;
            newEnv = _out100;
          }
        } else {
          DAST._IExpression _2914___mcc_h3 = _source90.dtor_value;
          DAST._IExpression _2915_expression = _2914___mcc_h3;
          DAST._IType _2916_typ = _2909___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _2917_name = _2908___mcc_h0;
          {
            RAST._IType _2918_tpe;
            RAST._IType _out101;
            _out101 = DCOMP.COMP.GenType(_2916_typ, true, false);
            _2918_tpe = _out101;
            Dafny.ISequence<Dafny.Rune> _2919_varName;
            _2919_varName = DCOMP.__default.escapeIdent(_2917_name);
            bool _2920_hasCopySemantics;
            _2920_hasCopySemantics = (_2918_tpe).HasCopySemantics();
            if (((_2915_expression).is_InitializationValue) && (!(_2920_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _2919_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_2918_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_2919_varName, RAST.__default.MaybePlaceboType(_2918_tpe));
            } else {
              RAST._IExpr _2921_expr;
              DCOMP._IOwnership _2922___v59;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2923_recIdents;
              RAST._IExpr _out102;
              DCOMP._IOwnership _out103;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out104;
              DCOMP.COMP.GenExpr(_2915_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out102, out _out103, out _out104);
              _2921_expr = _out102;
              _2922___v59 = _out103;
              _2923_recIdents = _out104;
              readIdents = _2923_recIdents;
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeIdent(_2917_name), Std.Wrappers.Option<RAST._IType>.create_Some(_2918_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2921_expr));
              newEnv = (env).AddAssigned(DCOMP.__default.escapeIdent(_2917_name), _2918_tpe);
            }
          }
        }
      } else if (_source89.is_Assign) {
        DAST._IAssignLhs _2924___mcc_h4 = _source89.dtor_lhs;
        DAST._IExpression _2925___mcc_h5 = _source89.dtor_value;
        DAST._IExpression _2926_expression = _2925___mcc_h5;
        DAST._IAssignLhs _2927_lhs = _2924___mcc_h4;
        {
          Dafny.ISequence<Dafny.Rune> _2928_lhsGen;
          bool _2929_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2930_recIdents;
          Dafny.ISequence<Dafny.Rune> _out105;
          bool _out106;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out107;
          DCOMP.COMP.GenAssignLhs(_2927_lhs, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), selfIdent, env, out _out105, out _out106, out _out107);
          _2928_lhsGen = _out105;
          _2929_needsIIFE = _out106;
          _2930_recIdents = _out107;
          RAST._IExpr _2931_exprGen;
          DCOMP._IOwnership _2932___v60;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2933_exprIdents;
          RAST._IExpr _out108;
          DCOMP._IOwnership _out109;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out110;
          DCOMP.COMP.GenExpr(_2926_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out108, out _out109, out _out110);
          _2931_exprGen = _out108;
          _2932___v60 = _out109;
          _2933_exprIdents = _out110;
          if (_2929_needsIIFE) {
            newEnv = env;
            generated = RAST.Expr.create_Block(RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2931_exprGen)), RAST.Expr.create_RawExpr(_2928_lhsGen)));
          } else {
            if ((_2927_lhs).is_Ident) {
              Dafny.ISequence<Dafny.Rune> _2934_rustId;
              _2934_rustId = DCOMP.__default.escapeIdent(((_2927_lhs).dtor_ident));
              Std.Wrappers._IOption<RAST._IType> _2935_tpe;
              _2935_tpe = (env).GetType(_2934_rustId);
              if (((_2935_tpe).is_Some) && ((((_2935_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
                _2931_exprGen = RAST.__default.MaybePlacebo(_2931_exprGen);
              }
            }
            generated = RAST.__default.AssignVar(_2928_lhsGen, _2931_exprGen);
            newEnv = env;
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2930_recIdents, _2933_exprIdents);
        }
      } else if (_source89.is_If) {
        DAST._IExpression _2936___mcc_h6 = _source89.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _2937___mcc_h7 = _source89.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _2938___mcc_h8 = _source89.dtor_els;
        Dafny.ISequence<DAST._IStatement> _2939_elsDafny = _2938___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _2940_thnDafny = _2937___mcc_h7;
        DAST._IExpression _2941_cond = _2936___mcc_h6;
        {
          RAST._IExpr _2942_cond;
          DCOMP._IOwnership _2943___v61;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2944_recIdents;
          RAST._IExpr _out111;
          DCOMP._IOwnership _out112;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out113;
          DCOMP.COMP.GenExpr(_2941_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out111, out _out112, out _out113);
          _2942_cond = _out111;
          _2943___v61 = _out112;
          _2944_recIdents = _out113;
          Dafny.ISequence<Dafny.Rune> _2945_condString;
          _2945_condString = (_2942_cond)._ToString(DCOMP.__default.IND);
          readIdents = _2944_recIdents;
          RAST._IExpr _2946_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2947_thnIdents;
          DCOMP._IEnvironment _2948_thnEnv;
          RAST._IExpr _out114;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out115;
          DCOMP._IEnvironment _out116;
          DCOMP.COMP.GenStmts(_2940_thnDafny, selfIdent, env, isLast, earlyReturn, out _out114, out _out115, out _out116);
          _2946_thn = _out114;
          _2947_thnIdents = _out115;
          _2948_thnEnv = _out116;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2947_thnIdents);
          RAST._IExpr _2949_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2950_elsIdents;
          DCOMP._IEnvironment _2951_elsEnv;
          RAST._IExpr _out117;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out118;
          DCOMP._IEnvironment _out119;
          DCOMP.COMP.GenStmts(_2939_elsDafny, selfIdent, env, isLast, earlyReturn, out _out117, out _out118, out _out119);
          _2949_els = _out117;
          _2950_elsIdents = _out118;
          _2951_elsEnv = _out119;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2950_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_2942_cond, _2946_thn, _2949_els);
        }
      } else if (_source89.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _2952___mcc_h9 = _source89.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _2953___mcc_h10 = _source89.dtor_body;
        Dafny.ISequence<DAST._IStatement> _2954_body = _2953___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _2955_lbl = _2952___mcc_h9;
        {
          RAST._IExpr _2956_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2957_bodyIdents;
          DCOMP._IEnvironment _2958_env2;
          RAST._IExpr _out120;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out121;
          DCOMP._IEnvironment _out122;
          DCOMP.COMP.GenStmts(_2954_body, selfIdent, env, isLast, earlyReturn, out _out120, out _out121, out _out122);
          _2956_body = _out120;
          _2957_bodyIdents = _out121;
          _2958_env2 = _out122;
          readIdents = _2957_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _2955_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_2956_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source89.is_While) {
        DAST._IExpression _2959___mcc_h11 = _source89.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _2960___mcc_h12 = _source89.dtor_body;
        Dafny.ISequence<DAST._IStatement> _2961_body = _2960___mcc_h12;
        DAST._IExpression _2962_cond = _2959___mcc_h11;
        {
          RAST._IExpr _2963_cond;
          DCOMP._IOwnership _2964___v62;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2965_recIdents;
          RAST._IExpr _out123;
          DCOMP._IOwnership _out124;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out125;
          DCOMP.COMP.GenExpr(_2962_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out123, out _out124, out _out125);
          _2963_cond = _out123;
          _2964___v62 = _out124;
          _2965_recIdents = _out125;
          readIdents = _2965_recIdents;
          RAST._IExpr _2966_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2967_bodyIdents;
          DCOMP._IEnvironment _2968_bodyEnv;
          RAST._IExpr _out126;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out127;
          DCOMP._IEnvironment _out128;
          DCOMP.COMP.GenStmts(_2961_body, selfIdent, env, false, earlyReturn, out _out126, out _out127, out _out128);
          _2966_bodyExpr = _out126;
          _2967_bodyIdents = _out127;
          _2968_bodyEnv = _out128;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2967_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_2963_cond), _2966_bodyExpr);
        }
      } else if (_source89.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _2969___mcc_h13 = _source89.dtor_boundName;
        DAST._IType _2970___mcc_h14 = _source89.dtor_boundType;
        DAST._IExpression _2971___mcc_h15 = _source89.dtor_over;
        Dafny.ISequence<DAST._IStatement> _2972___mcc_h16 = _source89.dtor_body;
        Dafny.ISequence<DAST._IStatement> _2973_body = _2972___mcc_h16;
        DAST._IExpression _2974_over = _2971___mcc_h15;
        DAST._IType _2975_boundType = _2970___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _2976_boundName = _2969___mcc_h13;
        {
          RAST._IExpr _2977_over;
          DCOMP._IOwnership _2978___v63;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2979_recIdents;
          RAST._IExpr _out129;
          DCOMP._IOwnership _out130;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out131;
          DCOMP.COMP.GenExpr(_2974_over, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out129, out _out130, out _out131);
          _2977_over = _out129;
          _2978___v63 = _out130;
          _2979_recIdents = _out131;
          RAST._IType _2980_boundTpe;
          RAST._IType _out132;
          _out132 = DCOMP.COMP.GenType(_2975_boundType, false, false);
          _2980_boundTpe = _out132;
          readIdents = _2979_recIdents;
          RAST._IExpr _2981_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2982_bodyIdents;
          DCOMP._IEnvironment _2983_bodyEnv;
          RAST._IExpr _out133;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out134;
          DCOMP._IEnvironment _out135;
          DCOMP.COMP.GenStmts(_2973_body, selfIdent, (env).AddAssigned(_2976_boundName, RAST.Type.create_Borrowed(_2980_boundTpe)), false, earlyReturn, out _out133, out _out134, out _out135);
          _2981_bodyExpr = _out133;
          _2982_bodyIdents = _out134;
          _2983_bodyEnv = _out135;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2982_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2976_boundName));
          newEnv = env;
          generated = RAST.Expr.create_For(DCOMP.__default.escapeIdent(_2976_boundName), _2977_over, _2981_bodyExpr);
        }
      } else if (_source89.is_Call) {
        DAST._IExpression _2984___mcc_h17 = _source89.dtor_on;
        DAST._ICallName _2985___mcc_h18 = _source89.dtor_callName;
        Dafny.ISequence<DAST._IType> _2986___mcc_h19 = _source89.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _2987___mcc_h20 = _source89.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2988___mcc_h21 = _source89.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2989_maybeOutVars = _2988___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _2990_args = _2987___mcc_h20;
        Dafny.ISequence<DAST._IType> _2991_typeArgs = _2986___mcc_h19;
        DAST._ICallName _2992_name = _2985___mcc_h18;
        DAST._IExpression _2993_on = _2984___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _2994_onExpr;
          DCOMP._IOwnership _2995___v66;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2996_enclosingIdents;
          RAST._IExpr _out136;
          DCOMP._IOwnership _out137;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out138;
          DCOMP.COMP.GenExpr(_2993_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out136, out _out137, out _out138);
          _2994_onExpr = _out136;
          _2995___v66 = _out137;
          _2996_enclosingIdents = _out138;
          Dafny.ISequence<RAST._IType> _2997_typeExprs;
          _2997_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_2991_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _2998_typeI;
            _2998_typeI = BigInteger.Zero;
            Dafny.ISequence<RAST._IType> _2999_typeArgsR;
            _2999_typeArgsR = Dafny.Sequence<RAST._IType>.FromElements();
            while ((_2998_typeI) < (new BigInteger((_2991_typeArgs).Count))) {
              RAST._IType _3000_tpe;
              RAST._IType _out139;
              _out139 = DCOMP.COMP.GenType((_2991_typeArgs).Select(_2998_typeI), false, false);
              _3000_tpe = _out139;
              _2999_typeArgsR = Dafny.Sequence<RAST._IType>.Concat(_2999_typeArgsR, Dafny.Sequence<RAST._IType>.FromElements(_3000_tpe));
              _2998_typeI = (_2998_typeI) + (BigInteger.One);
            }
          }
          Dafny.ISequence<RAST._IExpr> _3001_argExprs;
          _3001_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi8 = new BigInteger((_2990_args).Count);
          for (BigInteger _3002_i = BigInteger.Zero; _3002_i < _hi8; _3002_i++) {
            DCOMP._IOwnership _3003_argOwnership;
            _3003_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_2992_name).is_Name) && ((_3002_i) < (new BigInteger((((_2992_name).dtor_signature)).Count)))) {
              RAST._IType _3004_tpe;
              RAST._IType _out140;
              _out140 = DCOMP.COMP.GenType(((((_2992_name).dtor_signature)).Select(_3002_i)).dtor_typ, false, false);
              _3004_tpe = _out140;
              if ((_3004_tpe).HasCopySemantics()) {
                _3003_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _3005_argExpr;
            DCOMP._IOwnership _3006_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3007_argIdents;
            RAST._IExpr _out141;
            DCOMP._IOwnership _out142;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out143;
            DCOMP.COMP.GenExpr((_2990_args).Select(_3002_i), selfIdent, env, _3003_argOwnership, out _out141, out _out142, out _out143);
            _3005_argExpr = _out141;
            _3006_ownership = _out142;
            _3007_argIdents = _out143;
            _3001_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_3001_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_3005_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3007_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2996_enclosingIdents);
          Dafny.ISequence<Dafny.Rune> _3008_renderedName;
          _3008_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source91) => {
            if (_source91.is_Name) {
              Dafny.ISequence<Dafny.Rune> _3009___mcc_h26 = _source91.dtor_name;
              Dafny.ISequence<DAST._IFormal> _3010___mcc_h27 = _source91.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _3011_name = _3009___mcc_h26;
              return DCOMP.__default.escapeIdent(_3011_name);
            } else if (_source91.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source91.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source91.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_2992_name);
          DAST._IExpression _source92 = _2993_on;
          if (_source92.is_Literal) {
            DAST._ILiteral _3012___mcc_h28 = _source92.dtor_Literal_a0;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _3013___mcc_h30 = _source92.dtor_Ident_a0;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3014___mcc_h32 = _source92.dtor_Companion_a0;
            {
              _2994_onExpr = (_2994_onExpr).MSel(_3008_renderedName);
            }
          } else if (_source92.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _3015___mcc_h34 = _source92.dtor_Tuple_a0;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3016___mcc_h36 = _source92.dtor_path;
            Dafny.ISequence<DAST._IType> _3017___mcc_h37 = _source92.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3018___mcc_h38 = _source92.dtor_args;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _3019___mcc_h42 = _source92.dtor_dims;
            DAST._IType _3020___mcc_h43 = _source92.dtor_typ;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_DatatypeValue) {
            DAST._IDatatypeType _3021___mcc_h46 = _source92.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _3022___mcc_h47 = _source92.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _3023___mcc_h48 = _source92.dtor_variant;
            bool _3024___mcc_h49 = _source92.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _3025___mcc_h50 = _source92.dtor_contents;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_Convert) {
            DAST._IExpression _3026___mcc_h56 = _source92.dtor_value;
            DAST._IType _3027___mcc_h57 = _source92.dtor_from;
            DAST._IType _3028___mcc_h58 = _source92.dtor_typ;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_SeqConstruct) {
            DAST._IExpression _3029___mcc_h62 = _source92.dtor_length;
            DAST._IExpression _3030___mcc_h63 = _source92.dtor_elem;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _3031___mcc_h66 = _source92.dtor_elements;
            DAST._IType _3032___mcc_h67 = _source92.dtor_typ;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _3033___mcc_h70 = _source92.dtor_elements;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _3034___mcc_h72 = _source92.dtor_elements;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _3035___mcc_h74 = _source92.dtor_mapElems;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_MapBuilder) {
            DAST._IType _3036___mcc_h76 = _source92.dtor_keyType;
            DAST._IType _3037___mcc_h77 = _source92.dtor_valueType;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_SeqUpdate) {
            DAST._IExpression _3038___mcc_h80 = _source92.dtor_expr;
            DAST._IExpression _3039___mcc_h81 = _source92.dtor_indexExpr;
            DAST._IExpression _3040___mcc_h82 = _source92.dtor_value;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_MapUpdate) {
            DAST._IExpression _3041___mcc_h86 = _source92.dtor_expr;
            DAST._IExpression _3042___mcc_h87 = _source92.dtor_indexExpr;
            DAST._IExpression _3043___mcc_h88 = _source92.dtor_value;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_SetBuilder) {
            DAST._IType _3044___mcc_h92 = _source92.dtor_elemType;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_ToMultiset) {
            DAST._IExpression _3045___mcc_h94 = _source92.dtor_ToMultiset_a0;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_This) {
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_Ite) {
            DAST._IExpression _3046___mcc_h96 = _source92.dtor_cond;
            DAST._IExpression _3047___mcc_h97 = _source92.dtor_thn;
            DAST._IExpression _3048___mcc_h98 = _source92.dtor_els;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_UnOp) {
            DAST._IUnaryOp _3049___mcc_h102 = _source92.dtor_unOp;
            DAST._IExpression _3050___mcc_h103 = _source92.dtor_expr;
            DAST.Format._IUnOpFormat _3051___mcc_h104 = _source92.dtor_format1;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_BinOp) {
            DAST._IBinOp _3052___mcc_h108 = _source92.dtor_op;
            DAST._IExpression _3053___mcc_h109 = _source92.dtor_left;
            DAST._IExpression _3054___mcc_h110 = _source92.dtor_right;
            DAST.Format._IBinOpFormat _3055___mcc_h111 = _source92.dtor_format2;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_ArrayLen) {
            DAST._IExpression _3056___mcc_h116 = _source92.dtor_expr;
            BigInteger _3057___mcc_h117 = _source92.dtor_dim;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_MapKeys) {
            DAST._IExpression _3058___mcc_h120 = _source92.dtor_expr;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_MapValues) {
            DAST._IExpression _3059___mcc_h122 = _source92.dtor_expr;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_Select) {
            DAST._IExpression _3060___mcc_h124 = _source92.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3061___mcc_h125 = _source92.dtor_field;
            bool _3062___mcc_h126 = _source92.dtor_isConstant;
            bool _3063___mcc_h127 = _source92.dtor_onDatatype;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_SelectFn) {
            DAST._IExpression _3064___mcc_h132 = _source92.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3065___mcc_h133 = _source92.dtor_field;
            bool _3066___mcc_h134 = _source92.dtor_onDatatype;
            bool _3067___mcc_h135 = _source92.dtor_isStatic;
            BigInteger _3068___mcc_h136 = _source92.dtor_arity;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_Index) {
            DAST._IExpression _3069___mcc_h142 = _source92.dtor_expr;
            DAST._ICollKind _3070___mcc_h143 = _source92.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _3071___mcc_h144 = _source92.dtor_indices;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_IndexRange) {
            DAST._IExpression _3072___mcc_h148 = _source92.dtor_expr;
            bool _3073___mcc_h149 = _source92.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _3074___mcc_h150 = _source92.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _3075___mcc_h151 = _source92.dtor_high;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_TupleSelect) {
            DAST._IExpression _3076___mcc_h156 = _source92.dtor_expr;
            BigInteger _3077___mcc_h157 = _source92.dtor_index;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_Call) {
            DAST._IExpression _3078___mcc_h160 = _source92.dtor_on;
            DAST._ICallName _3079___mcc_h161 = _source92.dtor_callName;
            Dafny.ISequence<DAST._IType> _3080___mcc_h162 = _source92.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3081___mcc_h163 = _source92.dtor_args;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _3082___mcc_h168 = _source92.dtor_params;
            DAST._IType _3083___mcc_h169 = _source92.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _3084___mcc_h170 = _source92.dtor_body;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _3085___mcc_h174 = _source92.dtor_values;
            DAST._IType _3086___mcc_h175 = _source92.dtor_retType;
            DAST._IExpression _3087___mcc_h176 = _source92.dtor_expr;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _3088___mcc_h180 = _source92.dtor_name;
            DAST._IType _3089___mcc_h181 = _source92.dtor_typ;
            DAST._IExpression _3090___mcc_h182 = _source92.dtor_value;
            DAST._IExpression _3091___mcc_h183 = _source92.dtor_iifeBody;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_Apply) {
            DAST._IExpression _3092___mcc_h188 = _source92.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _3093___mcc_h189 = _source92.dtor_args;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_TypeTest) {
            DAST._IExpression _3094___mcc_h192 = _source92.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3095___mcc_h193 = _source92.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _3096___mcc_h194 = _source92.dtor_variant;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_InitializationValue) {
            DAST._IType _3097___mcc_h198 = _source92.dtor_typ;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_BoolBoundedPool) {
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_SetBoundedPool) {
            DAST._IExpression _3098___mcc_h200 = _source92.dtor_of;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else if (_source92.is_SeqBoundedPool) {
            DAST._IExpression _3099___mcc_h202 = _source92.dtor_of;
            bool _3100___mcc_h203 = _source92.dtor_includeDuplicates;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          } else {
            DAST._IExpression _3101___mcc_h206 = _source92.dtor_lo;
            DAST._IExpression _3102___mcc_h207 = _source92.dtor_hi;
            {
              _2994_onExpr = (_2994_onExpr).Sel(_3008_renderedName);
            }
          }
          generated = _2994_onExpr;
          if ((new BigInteger((_2997_typeExprs).Count)).Sign == 1) {
            generated = (generated).ApplyType(_2997_typeExprs);
          }
          generated = (generated).Apply(_3001_argExprs);
          if (((_2989_maybeOutVars).is_Some) && ((new BigInteger(((_2989_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _3103_outVar;
            _3103_outVar = (((_2989_maybeOutVars).dtor_value).Select(BigInteger.Zero));
            if (!((env).HasCopySemantics(_3103_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_3103_outVar, generated);
          } else if (((_2989_maybeOutVars).is_None) || ((new BigInteger(((_2989_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _3104_tmpVar;
            _3104_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _3105_tmpId;
            _3105_tmpId = RAST.Expr.create_Identifier(_3104_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _3104_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3106_outVars;
            _3106_outVars = (_2989_maybeOutVars).dtor_value;
            BigInteger _hi9 = new BigInteger((_3106_outVars).Count);
            for (BigInteger _3107_outI = BigInteger.Zero; _3107_outI < _hi9; _3107_outI++) {
              Dafny.ISequence<Dafny.Rune> _3108_outVar;
              _3108_outVar = ((_3106_outVars).Select(_3107_outI));
              RAST._IExpr _3109_rhs;
              _3109_rhs = (_3105_tmpId).Sel(Std.Strings.__default.OfNat(_3107_outI));
              if (!((env).HasCopySemantics(_3108_outVar))) {
                _3109_rhs = RAST.__default.MaybePlacebo(_3109_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_3108_outVar, _3109_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source89.is_Return) {
        DAST._IExpression _3110___mcc_h22 = _source89.dtor_expr;
        DAST._IExpression _3111_exprDafny = _3110___mcc_h22;
        {
          RAST._IExpr _3112_expr;
          DCOMP._IOwnership _3113___v70;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3114_recIdents;
          RAST._IExpr _out144;
          DCOMP._IOwnership _out145;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out146;
          DCOMP.COMP.GenExpr(_3111_exprDafny, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out144, out _out145, out _out146);
          _3112_expr = _out144;
          _3113___v70 = _out145;
          _3114_recIdents = _out146;
          readIdents = _3114_recIdents;
          if (isLast) {
            generated = _3112_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3112_expr));
          }
          newEnv = env;
        }
      } else if (_source89.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source89.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3115___mcc_h23 = _source89.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3116_toLabel = _3115___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source93 = _3116_toLabel;
          if (_source93.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3117___mcc_h210 = _source93.dtor_value;
            Dafny.ISequence<Dafny.Rune> _3118_lbl = _3117___mcc_h210;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3118_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source89.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _3119___mcc_h24 = _source89.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3120_body = _3119___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          BigInteger _hi10 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _3121_paramI = BigInteger.Zero; _3121_paramI < _hi10; _3121_paramI++) {
            Dafny.ISequence<Dafny.Rune> _3122_param;
            _3122_param = ((env).dtor_names).Select(_3121_paramI);
            RAST._IExpr _3123_paramInit;
            DCOMP._IOwnership _3124___v64;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3125___v65;
            RAST._IExpr _out147;
            DCOMP._IOwnership _out148;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out149;
            DCOMP.COMP.GenExpr(DAST.Expression.create_Ident(_3122_param), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out147, out _out148, out _out149);
            _3123_paramInit = _out147;
            _3124___v64 = _out148;
            _3125___v65 = _out149;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeIdent(_3122_param), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3123_paramInit)));
          }
          RAST._IExpr _3126_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3127_bodyIdents;
          DCOMP._IEnvironment _3128_bodyEnv;
          RAST._IExpr _out150;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out151;
          DCOMP._IEnvironment _out152;
          DCOMP.COMP.GenStmts(_3120_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), env, false, earlyReturn, out _out150, out _out151, out _out152);
          _3126_bodyExpr = _out150;
          _3127_bodyIdents = _out151;
          _3128_bodyEnv = _out152;
          newEnv = env;
          readIdents = _3127_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _3126_bodyExpr)));
        }
      } else if (_source89.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source89.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else {
        DAST._IExpression _3129___mcc_h25 = _source89.dtor_Print_a0;
        DAST._IExpression _3130_e = _3129___mcc_h25;
        {
          RAST._IExpr _3131_printedExpr;
          DCOMP._IOwnership _3132_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3133_recIdents;
          RAST._IExpr _out153;
          DCOMP._IOwnership _out154;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out155;
          DCOMP.COMP.GenExpr(_3130_e, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out153, out _out154, out _out155);
          _3131_printedExpr = _out153;
          _3132_recOwnership = _out154;
          _3133_recIdents = _out155;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_3131_printedExpr)));
          readIdents = _3133_recIdents;
          newEnv = env;
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source94 = range;
      if (_source94.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source94.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source94.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source94.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source94.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source94.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source94.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source94.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source94.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source94.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source94.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public static void FromOwned(RAST._IExpr r, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      } else {
        @out = RAST.__default.BorrowMut(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public static void FromOwnership(RAST._IExpr r, DCOMP._IOwnership ownership, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if (object.Equals(ownership, DCOMP.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out156;
        DCOMP._IOwnership _out157;
        DCOMP.COMP.FromOwned(r, expectedOwnership, out _out156, out _out157);
        @out = _out156;
        resultingOwnership = _out157;
        return ;
      } else if ((object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          @out = RAST.__default.Clone(r);
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMP._IOwnership expectedOwnership, DCOMP._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()));
    }
    public static void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source95 = e;
      DAST._ILiteral _3134___mcc_h0 = _source95.dtor_Literal_a0;
      DAST._ILiteral _source96 = _3134___mcc_h0;
      if (_source96.is_BoolLiteral) {
        bool _3135___mcc_h1 = _source96.dtor_BoolLiteral_a0;
        if ((_3135___mcc_h1) == (false)) {
          {
            RAST._IExpr _out158;
            DCOMP._IOwnership _out159;
            DCOMP.COMP.FromOwned(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")), expectedOwnership, out _out158, out _out159);
            r = _out158;
            resultingOwnership = _out159;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            return ;
          }
        } else {
          {
            RAST._IExpr _out160;
            DCOMP._IOwnership _out161;
            DCOMP.COMP.FromOwned(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")), expectedOwnership, out _out160, out _out161);
            r = _out160;
            resultingOwnership = _out161;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            return ;
          }
        }
      } else if (_source96.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _3136___mcc_h2 = _source96.dtor_IntLiteral_a0;
        DAST._IType _3137___mcc_h3 = _source96.dtor_IntLiteral_a1;
        DAST._IType _3138_t = _3137___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _3139_i = _3136___mcc_h2;
        {
          DAST._IType _source97 = _3138_t;
          if (_source97.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3140___mcc_h100 = _source97.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _3141___mcc_h101 = _source97.dtor_typeArgs;
            DAST._IResolvedType _3142___mcc_h102 = _source97.dtor_resolved;
            DAST._IType _3143_o = _3138_t;
            {
              RAST._IType _3144_genType;
              RAST._IType _out162;
              _out162 = DCOMP.COMP.GenType(_3143_o, false, false);
              _3144_genType = _out162;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3144_genType);
            }
          } else if (_source97.is_Nullable) {
            DAST._IType _3145___mcc_h106 = _source97.dtor_Nullable_a0;
            DAST._IType _3146_o = _3138_t;
            {
              RAST._IType _3147_genType;
              RAST._IType _out163;
              _out163 = DCOMP.COMP.GenType(_3146_o, false, false);
              _3147_genType = _out163;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3147_genType);
            }
          } else if (_source97.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3148___mcc_h108 = _source97.dtor_Tuple_a0;
            DAST._IType _3149_o = _3138_t;
            {
              RAST._IType _3150_genType;
              RAST._IType _out164;
              _out164 = DCOMP.COMP.GenType(_3149_o, false, false);
              _3150_genType = _out164;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3150_genType);
            }
          } else if (_source97.is_Array) {
            DAST._IType _3151___mcc_h110 = _source97.dtor_element;
            BigInteger _3152___mcc_h111 = _source97.dtor_dims;
            DAST._IType _3153_o = _3138_t;
            {
              RAST._IType _3154_genType;
              RAST._IType _out165;
              _out165 = DCOMP.COMP.GenType(_3153_o, false, false);
              _3154_genType = _out165;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3154_genType);
            }
          } else if (_source97.is_Seq) {
            DAST._IType _3155___mcc_h114 = _source97.dtor_element;
            DAST._IType _3156_o = _3138_t;
            {
              RAST._IType _3157_genType;
              RAST._IType _out166;
              _out166 = DCOMP.COMP.GenType(_3156_o, false, false);
              _3157_genType = _out166;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3157_genType);
            }
          } else if (_source97.is_Set) {
            DAST._IType _3158___mcc_h116 = _source97.dtor_element;
            DAST._IType _3159_o = _3138_t;
            {
              RAST._IType _3160_genType;
              RAST._IType _out167;
              _out167 = DCOMP.COMP.GenType(_3159_o, false, false);
              _3160_genType = _out167;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3160_genType);
            }
          } else if (_source97.is_Multiset) {
            DAST._IType _3161___mcc_h118 = _source97.dtor_element;
            DAST._IType _3162_o = _3138_t;
            {
              RAST._IType _3163_genType;
              RAST._IType _out168;
              _out168 = DCOMP.COMP.GenType(_3162_o, false, false);
              _3163_genType = _out168;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3163_genType);
            }
          } else if (_source97.is_Map) {
            DAST._IType _3164___mcc_h120 = _source97.dtor_key;
            DAST._IType _3165___mcc_h121 = _source97.dtor_value;
            DAST._IType _3166_o = _3138_t;
            {
              RAST._IType _3167_genType;
              RAST._IType _out169;
              _out169 = DCOMP.COMP.GenType(_3166_o, false, false);
              _3167_genType = _out169;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3167_genType);
            }
          } else if (_source97.is_SetBuilder) {
            DAST._IType _3168___mcc_h124 = _source97.dtor_element;
            DAST._IType _3169_o = _3138_t;
            {
              RAST._IType _3170_genType;
              RAST._IType _out170;
              _out170 = DCOMP.COMP.GenType(_3169_o, false, false);
              _3170_genType = _out170;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3170_genType);
            }
          } else if (_source97.is_MapBuilder) {
            DAST._IType _3171___mcc_h126 = _source97.dtor_key;
            DAST._IType _3172___mcc_h127 = _source97.dtor_value;
            DAST._IType _3173_o = _3138_t;
            {
              RAST._IType _3174_genType;
              RAST._IType _out171;
              _out171 = DCOMP.COMP.GenType(_3173_o, false, false);
              _3174_genType = _out171;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3174_genType);
            }
          } else if (_source97.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3175___mcc_h130 = _source97.dtor_args;
            DAST._IType _3176___mcc_h131 = _source97.dtor_result;
            DAST._IType _3177_o = _3138_t;
            {
              RAST._IType _3178_genType;
              RAST._IType _out172;
              _out172 = DCOMP.COMP.GenType(_3177_o, false, false);
              _3178_genType = _out172;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3178_genType);
            }
          } else if (_source97.is_Primitive) {
            DAST._IPrimitive _3179___mcc_h134 = _source97.dtor_Primitive_a0;
            DAST._IPrimitive _source98 = _3179___mcc_h134;
            if (_source98.is_Int) {
              {
                if ((new BigInteger((_3139_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_3139_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_3139_i, true));
                }
              }
            } else if (_source98.is_Real) {
              DAST._IType _3180_o = _3138_t;
              {
                RAST._IType _3181_genType;
                RAST._IType _out173;
                _out173 = DCOMP.COMP.GenType(_3180_o, false, false);
                _3181_genType = _out173;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3181_genType);
              }
            } else if (_source98.is_String) {
              DAST._IType _3182_o = _3138_t;
              {
                RAST._IType _3183_genType;
                RAST._IType _out174;
                _out174 = DCOMP.COMP.GenType(_3182_o, false, false);
                _3183_genType = _out174;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3183_genType);
              }
            } else if (_source98.is_Bool) {
              DAST._IType _3184_o = _3138_t;
              {
                RAST._IType _3185_genType;
                RAST._IType _out175;
                _out175 = DCOMP.COMP.GenType(_3184_o, false, false);
                _3185_genType = _out175;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3185_genType);
              }
            } else {
              DAST._IType _3186_o = _3138_t;
              {
                RAST._IType _3187_genType;
                RAST._IType _out176;
                _out176 = DCOMP.COMP.GenType(_3186_o, false, false);
                _3187_genType = _out176;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3187_genType);
              }
            }
          } else if (_source97.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3188___mcc_h136 = _source97.dtor_Passthrough_a0;
            DAST._IType _3189_o = _3138_t;
            {
              RAST._IType _3190_genType;
              RAST._IType _out177;
              _out177 = DCOMP.COMP.GenType(_3189_o, false, false);
              _3190_genType = _out177;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3190_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3191___mcc_h138 = _source97.dtor_TypeArg_a0;
            DAST._IType _3192_o = _3138_t;
            {
              RAST._IType _3193_genType;
              RAST._IType _out178;
              _out178 = DCOMP.COMP.GenType(_3192_o, false, false);
              _3193_genType = _out178;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3139_i), _3193_genType);
            }
          }
          RAST._IExpr _out179;
          DCOMP._IOwnership _out180;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out179, out _out180);
          r = _out179;
          resultingOwnership = _out180;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source96.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _3194___mcc_h4 = _source96.dtor_DecLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _3195___mcc_h5 = _source96.dtor_DecLiteral_a1;
        DAST._IType _3196___mcc_h6 = _source96.dtor_DecLiteral_a2;
        DAST._IType _3197_t = _3196___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _3198_d = _3195___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _3199_n = _3194___mcc_h4;
        {
          DAST._IType _source99 = _3197_t;
          if (_source99.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3200___mcc_h140 = _source99.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _3201___mcc_h141 = _source99.dtor_typeArgs;
            DAST._IResolvedType _3202___mcc_h142 = _source99.dtor_resolved;
            DAST._IType _3203_o = _3197_t;
            {
              RAST._IType _3204_genType;
              RAST._IType _out181;
              _out181 = DCOMP.COMP.GenType(_3203_o, false, false);
              _3204_genType = _out181;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3204_genType);
            }
          } else if (_source99.is_Nullable) {
            DAST._IType _3205___mcc_h146 = _source99.dtor_Nullable_a0;
            DAST._IType _3206_o = _3197_t;
            {
              RAST._IType _3207_genType;
              RAST._IType _out182;
              _out182 = DCOMP.COMP.GenType(_3206_o, false, false);
              _3207_genType = _out182;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3207_genType);
            }
          } else if (_source99.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3208___mcc_h148 = _source99.dtor_Tuple_a0;
            DAST._IType _3209_o = _3197_t;
            {
              RAST._IType _3210_genType;
              RAST._IType _out183;
              _out183 = DCOMP.COMP.GenType(_3209_o, false, false);
              _3210_genType = _out183;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3210_genType);
            }
          } else if (_source99.is_Array) {
            DAST._IType _3211___mcc_h150 = _source99.dtor_element;
            BigInteger _3212___mcc_h151 = _source99.dtor_dims;
            DAST._IType _3213_o = _3197_t;
            {
              RAST._IType _3214_genType;
              RAST._IType _out184;
              _out184 = DCOMP.COMP.GenType(_3213_o, false, false);
              _3214_genType = _out184;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3214_genType);
            }
          } else if (_source99.is_Seq) {
            DAST._IType _3215___mcc_h154 = _source99.dtor_element;
            DAST._IType _3216_o = _3197_t;
            {
              RAST._IType _3217_genType;
              RAST._IType _out185;
              _out185 = DCOMP.COMP.GenType(_3216_o, false, false);
              _3217_genType = _out185;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3217_genType);
            }
          } else if (_source99.is_Set) {
            DAST._IType _3218___mcc_h156 = _source99.dtor_element;
            DAST._IType _3219_o = _3197_t;
            {
              RAST._IType _3220_genType;
              RAST._IType _out186;
              _out186 = DCOMP.COMP.GenType(_3219_o, false, false);
              _3220_genType = _out186;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3220_genType);
            }
          } else if (_source99.is_Multiset) {
            DAST._IType _3221___mcc_h158 = _source99.dtor_element;
            DAST._IType _3222_o = _3197_t;
            {
              RAST._IType _3223_genType;
              RAST._IType _out187;
              _out187 = DCOMP.COMP.GenType(_3222_o, false, false);
              _3223_genType = _out187;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3223_genType);
            }
          } else if (_source99.is_Map) {
            DAST._IType _3224___mcc_h160 = _source99.dtor_key;
            DAST._IType _3225___mcc_h161 = _source99.dtor_value;
            DAST._IType _3226_o = _3197_t;
            {
              RAST._IType _3227_genType;
              RAST._IType _out188;
              _out188 = DCOMP.COMP.GenType(_3226_o, false, false);
              _3227_genType = _out188;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3227_genType);
            }
          } else if (_source99.is_SetBuilder) {
            DAST._IType _3228___mcc_h164 = _source99.dtor_element;
            DAST._IType _3229_o = _3197_t;
            {
              RAST._IType _3230_genType;
              RAST._IType _out189;
              _out189 = DCOMP.COMP.GenType(_3229_o, false, false);
              _3230_genType = _out189;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3230_genType);
            }
          } else if (_source99.is_MapBuilder) {
            DAST._IType _3231___mcc_h166 = _source99.dtor_key;
            DAST._IType _3232___mcc_h167 = _source99.dtor_value;
            DAST._IType _3233_o = _3197_t;
            {
              RAST._IType _3234_genType;
              RAST._IType _out190;
              _out190 = DCOMP.COMP.GenType(_3233_o, false, false);
              _3234_genType = _out190;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3234_genType);
            }
          } else if (_source99.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3235___mcc_h170 = _source99.dtor_args;
            DAST._IType _3236___mcc_h171 = _source99.dtor_result;
            DAST._IType _3237_o = _3197_t;
            {
              RAST._IType _3238_genType;
              RAST._IType _out191;
              _out191 = DCOMP.COMP.GenType(_3237_o, false, false);
              _3238_genType = _out191;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3238_genType);
            }
          } else if (_source99.is_Primitive) {
            DAST._IPrimitive _3239___mcc_h174 = _source99.dtor_Primitive_a0;
            DAST._IPrimitive _source100 = _3239___mcc_h174;
            if (_source100.is_Int) {
              DAST._IType _3240_o = _3197_t;
              {
                RAST._IType _3241_genType;
                RAST._IType _out192;
                _out192 = DCOMP.COMP.GenType(_3240_o, false, false);
                _3241_genType = _out192;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3241_genType);
              }
            } else if (_source100.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source100.is_String) {
              DAST._IType _3242_o = _3197_t;
              {
                RAST._IType _3243_genType;
                RAST._IType _out193;
                _out193 = DCOMP.COMP.GenType(_3242_o, false, false);
                _3243_genType = _out193;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3243_genType);
              }
            } else if (_source100.is_Bool) {
              DAST._IType _3244_o = _3197_t;
              {
                RAST._IType _3245_genType;
                RAST._IType _out194;
                _out194 = DCOMP.COMP.GenType(_3244_o, false, false);
                _3245_genType = _out194;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3245_genType);
              }
            } else {
              DAST._IType _3246_o = _3197_t;
              {
                RAST._IType _3247_genType;
                RAST._IType _out195;
                _out195 = DCOMP.COMP.GenType(_3246_o, false, false);
                _3247_genType = _out195;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3247_genType);
              }
            }
          } else if (_source99.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3248___mcc_h176 = _source99.dtor_Passthrough_a0;
            DAST._IType _3249_o = _3197_t;
            {
              RAST._IType _3250_genType;
              RAST._IType _out196;
              _out196 = DCOMP.COMP.GenType(_3249_o, false, false);
              _3250_genType = _out196;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3250_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3251___mcc_h178 = _source99.dtor_TypeArg_a0;
            DAST._IType _3252_o = _3197_t;
            {
              RAST._IType _3253_genType;
              RAST._IType _out197;
              _out197 = DCOMP.COMP.GenType(_3252_o, false, false);
              _3253_genType = _out197;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3199_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3198_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3253_genType);
            }
          }
          RAST._IExpr _out198;
          DCOMP._IOwnership _out199;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out198, out _out199);
          r = _out198;
          resultingOwnership = _out199;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source96.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _3254___mcc_h7 = _source96.dtor_StringLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _3255_l = _3254___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of"))).Apply1(RAST.Expr.create_LiteralString(_3255_l, false));
          RAST._IExpr _out200;
          DCOMP._IOwnership _out201;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out200, out _out201);
          r = _out200;
          resultingOwnership = _out201;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source96.is_CharLiteral) {
        Dafny.Rune _3256___mcc_h8 = _source96.dtor_CharLiteral_a0;
        Dafny.Rune _3257_c = _3256___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_3257_c).Value)));
          r = RAST.Expr.create_TypeAscription(r, DCOMP.__default.DafnyCharUnderlying);
          r = ((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(r);
          RAST._IExpr _out202;
          DCOMP._IOwnership _out203;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out202, out _out203);
          r = _out202;
          resultingOwnership = _out203;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _3258___mcc_h9 = _source96.dtor_Null_a0;
        DAST._IType _3259_tpe = _3258___mcc_h9;
        {
          RAST._IType _3260_tpeGen;
          RAST._IType _out204;
          _out204 = DCOMP.COMP.GenType(_3259_tpe, false, false);
          _3260_tpeGen = _out204;
          r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None")), _3260_tpeGen);
          RAST._IExpr _out205;
          DCOMP._IOwnership _out206;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out205, out _out206);
          r = _out205;
          resultingOwnership = _out206;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public static void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs50 = e;
      DAST._IBinOp _3261_op = _let_tmp_rhs50.dtor_op;
      DAST._IExpression _3262_lExpr = _let_tmp_rhs50.dtor_left;
      DAST._IExpression _3263_rExpr = _let_tmp_rhs50.dtor_right;
      DAST.Format._IBinOpFormat _3264_format = _let_tmp_rhs50.dtor_format2;
      bool _3265_becomesLeftCallsRight;
      _3265_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source101) => {
        if (_source101.is_Eq) {
          bool _3266___mcc_h0 = _source101.dtor_referential;
          bool _3267___mcc_h1 = _source101.dtor_nullable;
          return false;
        } else if (_source101.is_Div) {
          return false;
        } else if (_source101.is_EuclidianDiv) {
          return false;
        } else if (_source101.is_Mod) {
          return false;
        } else if (_source101.is_EuclidianMod) {
          return false;
        } else if (_source101.is_Lt) {
          return false;
        } else if (_source101.is_LtChar) {
          return false;
        } else if (_source101.is_Plus) {
          return false;
        } else if (_source101.is_Minus) {
          return false;
        } else if (_source101.is_Times) {
          return false;
        } else if (_source101.is_BitwiseAnd) {
          return false;
        } else if (_source101.is_BitwiseOr) {
          return false;
        } else if (_source101.is_BitwiseXor) {
          return false;
        } else if (_source101.is_BitwiseShiftRight) {
          return false;
        } else if (_source101.is_BitwiseShiftLeft) {
          return false;
        } else if (_source101.is_And) {
          return false;
        } else if (_source101.is_Or) {
          return false;
        } else if (_source101.is_In) {
          return false;
        } else if (_source101.is_SeqProperPrefix) {
          return false;
        } else if (_source101.is_SeqPrefix) {
          return false;
        } else if (_source101.is_SetMerge) {
          return true;
        } else if (_source101.is_SetSubtraction) {
          return true;
        } else if (_source101.is_SetIntersection) {
          return true;
        } else if (_source101.is_Subset) {
          return false;
        } else if (_source101.is_ProperSubset) {
          return false;
        } else if (_source101.is_SetDisjoint) {
          return true;
        } else if (_source101.is_MapMerge) {
          return true;
        } else if (_source101.is_MapSubtraction) {
          return true;
        } else if (_source101.is_MultisetMerge) {
          return true;
        } else if (_source101.is_MultisetSubtraction) {
          return true;
        } else if (_source101.is_MultisetIntersection) {
          return true;
        } else if (_source101.is_Submultiset) {
          return false;
        } else if (_source101.is_ProperSubmultiset) {
          return false;
        } else if (_source101.is_MultisetDisjoint) {
          return true;
        } else if (_source101.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _3268___mcc_h4 = _source101.dtor_Passthrough_a0;
          return false;
        }
      }))(_3261_op);
      bool _3269_becomesRightCallsLeft;
      _3269_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source102) => {
        if (_source102.is_Eq) {
          bool _3270___mcc_h6 = _source102.dtor_referential;
          bool _3271___mcc_h7 = _source102.dtor_nullable;
          return false;
        } else if (_source102.is_Div) {
          return false;
        } else if (_source102.is_EuclidianDiv) {
          return false;
        } else if (_source102.is_Mod) {
          return false;
        } else if (_source102.is_EuclidianMod) {
          return false;
        } else if (_source102.is_Lt) {
          return false;
        } else if (_source102.is_LtChar) {
          return false;
        } else if (_source102.is_Plus) {
          return false;
        } else if (_source102.is_Minus) {
          return false;
        } else if (_source102.is_Times) {
          return false;
        } else if (_source102.is_BitwiseAnd) {
          return false;
        } else if (_source102.is_BitwiseOr) {
          return false;
        } else if (_source102.is_BitwiseXor) {
          return false;
        } else if (_source102.is_BitwiseShiftRight) {
          return false;
        } else if (_source102.is_BitwiseShiftLeft) {
          return false;
        } else if (_source102.is_And) {
          return false;
        } else if (_source102.is_Or) {
          return false;
        } else if (_source102.is_In) {
          return true;
        } else if (_source102.is_SeqProperPrefix) {
          return false;
        } else if (_source102.is_SeqPrefix) {
          return false;
        } else if (_source102.is_SetMerge) {
          return false;
        } else if (_source102.is_SetSubtraction) {
          return false;
        } else if (_source102.is_SetIntersection) {
          return false;
        } else if (_source102.is_Subset) {
          return false;
        } else if (_source102.is_ProperSubset) {
          return false;
        } else if (_source102.is_SetDisjoint) {
          return false;
        } else if (_source102.is_MapMerge) {
          return false;
        } else if (_source102.is_MapSubtraction) {
          return false;
        } else if (_source102.is_MultisetMerge) {
          return false;
        } else if (_source102.is_MultisetSubtraction) {
          return false;
        } else if (_source102.is_MultisetIntersection) {
          return false;
        } else if (_source102.is_Submultiset) {
          return false;
        } else if (_source102.is_ProperSubmultiset) {
          return false;
        } else if (_source102.is_MultisetDisjoint) {
          return false;
        } else if (_source102.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3272___mcc_h10 = _source102.dtor_Passthrough_a0;
          return false;
        }
      }))(_3261_op);
      bool _3273_becomesCallLeftRight;
      _3273_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source103) => {
        if (_source103.is_Eq) {
          bool _3274___mcc_h12 = _source103.dtor_referential;
          bool _3275___mcc_h13 = _source103.dtor_nullable;
          if ((_3274___mcc_h12) == (true)) {
            if ((_3275___mcc_h13) == (false)) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else if (_source103.is_Div) {
          return false;
        } else if (_source103.is_EuclidianDiv) {
          return false;
        } else if (_source103.is_Mod) {
          return false;
        } else if (_source103.is_EuclidianMod) {
          return false;
        } else if (_source103.is_Lt) {
          return false;
        } else if (_source103.is_LtChar) {
          return false;
        } else if (_source103.is_Plus) {
          return false;
        } else if (_source103.is_Minus) {
          return false;
        } else if (_source103.is_Times) {
          return false;
        } else if (_source103.is_BitwiseAnd) {
          return false;
        } else if (_source103.is_BitwiseOr) {
          return false;
        } else if (_source103.is_BitwiseXor) {
          return false;
        } else if (_source103.is_BitwiseShiftRight) {
          return false;
        } else if (_source103.is_BitwiseShiftLeft) {
          return false;
        } else if (_source103.is_And) {
          return false;
        } else if (_source103.is_Or) {
          return false;
        } else if (_source103.is_In) {
          return false;
        } else if (_source103.is_SeqProperPrefix) {
          return false;
        } else if (_source103.is_SeqPrefix) {
          return false;
        } else if (_source103.is_SetMerge) {
          return false;
        } else if (_source103.is_SetSubtraction) {
          return false;
        } else if (_source103.is_SetIntersection) {
          return false;
        } else if (_source103.is_Subset) {
          return false;
        } else if (_source103.is_ProperSubset) {
          return false;
        } else if (_source103.is_SetDisjoint) {
          return false;
        } else if (_source103.is_MapMerge) {
          return false;
        } else if (_source103.is_MapSubtraction) {
          return false;
        } else if (_source103.is_MultisetMerge) {
          return false;
        } else if (_source103.is_MultisetSubtraction) {
          return false;
        } else if (_source103.is_MultisetIntersection) {
          return false;
        } else if (_source103.is_Submultiset) {
          return false;
        } else if (_source103.is_ProperSubmultiset) {
          return false;
        } else if (_source103.is_MultisetDisjoint) {
          return false;
        } else if (_source103.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3276___mcc_h16 = _source103.dtor_Passthrough_a0;
          return false;
        }
      }))(_3261_op);
      DCOMP._IOwnership _3277_expectedLeftOwnership;
      _3277_expectedLeftOwnership = ((_3265_becomesLeftCallsRight) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : ((((_3269_becomesRightCallsLeft) || (_3273_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      DCOMP._IOwnership _3278_expectedRightOwnership;
      _3278_expectedRightOwnership = (((_3265_becomesLeftCallsRight) || (_3273_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (((_3269_becomesRightCallsLeft) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _3279_left;
      DCOMP._IOwnership _3280___v75;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3281_recIdentsL;
      RAST._IExpr _out207;
      DCOMP._IOwnership _out208;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out209;
      DCOMP.COMP.GenExpr(_3262_lExpr, selfIdent, env, _3277_expectedLeftOwnership, out _out207, out _out208, out _out209);
      _3279_left = _out207;
      _3280___v75 = _out208;
      _3281_recIdentsL = _out209;
      RAST._IExpr _3282_right;
      DCOMP._IOwnership _3283___v76;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3284_recIdentsR;
      RAST._IExpr _out210;
      DCOMP._IOwnership _out211;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out212;
      DCOMP.COMP.GenExpr(_3263_rExpr, selfIdent, env, _3278_expectedRightOwnership, out _out210, out _out211, out _out212);
      _3282_right = _out210;
      _3283___v76 = _out211;
      _3284_recIdentsR = _out212;
      DAST._IBinOp _source104 = _3261_op;
      if (_source104.is_Eq) {
        bool _3285___mcc_h18 = _source104.dtor_referential;
        bool _3286___mcc_h19 = _source104.dtor_nullable;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source105 = _3261_op;
            if (_source105.is_Eq) {
              bool _3287___mcc_h24 = _source105.dtor_referential;
              bool _3288___mcc_h25 = _source105.dtor_nullable;
              bool _3289_nullable = _3288___mcc_h25;
              bool _3290_referential = _3287___mcc_h24;
              {
                if (_3290_referential) {
                  if (_3289_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source105.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source105.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3291___mcc_h26 = _source105.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3292_op = _3291___mcc_h26;
              {
                r = RAST.Expr.create_BinaryOp(_3292_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_Div) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source106 = _3261_op;
            if (_source106.is_Eq) {
              bool _3293___mcc_h27 = _source106.dtor_referential;
              bool _3294___mcc_h28 = _source106.dtor_nullable;
              bool _3295_nullable = _3294___mcc_h28;
              bool _3296_referential = _3293___mcc_h27;
              {
                if (_3296_referential) {
                  if (_3295_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source106.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source106.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3297___mcc_h29 = _source106.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3298_op = _3297___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_3298_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_EuclidianDiv) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source107 = _3261_op;
            if (_source107.is_Eq) {
              bool _3299___mcc_h30 = _source107.dtor_referential;
              bool _3300___mcc_h31 = _source107.dtor_nullable;
              bool _3301_nullable = _3300___mcc_h31;
              bool _3302_referential = _3299___mcc_h30;
              {
                if (_3302_referential) {
                  if (_3301_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source107.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source107.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3303___mcc_h32 = _source107.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3304_op = _3303___mcc_h32;
              {
                r = RAST.Expr.create_BinaryOp(_3304_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_Mod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source108 = _3261_op;
            if (_source108.is_Eq) {
              bool _3305___mcc_h33 = _source108.dtor_referential;
              bool _3306___mcc_h34 = _source108.dtor_nullable;
              bool _3307_nullable = _3306___mcc_h34;
              bool _3308_referential = _3305___mcc_h33;
              {
                if (_3308_referential) {
                  if (_3307_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source108.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source108.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3309___mcc_h35 = _source108.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3310_op = _3309___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_3310_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_EuclidianMod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source109 = _3261_op;
            if (_source109.is_Eq) {
              bool _3311___mcc_h36 = _source109.dtor_referential;
              bool _3312___mcc_h37 = _source109.dtor_nullable;
              bool _3313_nullable = _3312___mcc_h37;
              bool _3314_referential = _3311___mcc_h36;
              {
                if (_3314_referential) {
                  if (_3313_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source109.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source109.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3315___mcc_h38 = _source109.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3316_op = _3315___mcc_h38;
              {
                r = RAST.Expr.create_BinaryOp(_3316_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_Lt) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source110 = _3261_op;
            if (_source110.is_Eq) {
              bool _3317___mcc_h39 = _source110.dtor_referential;
              bool _3318___mcc_h40 = _source110.dtor_nullable;
              bool _3319_nullable = _3318___mcc_h40;
              bool _3320_referential = _3317___mcc_h39;
              {
                if (_3320_referential) {
                  if (_3319_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source110.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source110.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3321___mcc_h41 = _source110.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3322_op = _3321___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_3322_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_LtChar) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source111 = _3261_op;
            if (_source111.is_Eq) {
              bool _3323___mcc_h42 = _source111.dtor_referential;
              bool _3324___mcc_h43 = _source111.dtor_nullable;
              bool _3325_nullable = _3324___mcc_h43;
              bool _3326_referential = _3323___mcc_h42;
              {
                if (_3326_referential) {
                  if (_3325_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source111.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source111.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3327___mcc_h44 = _source111.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3328_op = _3327___mcc_h44;
              {
                r = RAST.Expr.create_BinaryOp(_3328_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_Plus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source112 = _3261_op;
            if (_source112.is_Eq) {
              bool _3329___mcc_h45 = _source112.dtor_referential;
              bool _3330___mcc_h46 = _source112.dtor_nullable;
              bool _3331_nullable = _3330___mcc_h46;
              bool _3332_referential = _3329___mcc_h45;
              {
                if (_3332_referential) {
                  if (_3331_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source112.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source112.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3333___mcc_h47 = _source112.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3334_op = _3333___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_3334_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_Minus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source113 = _3261_op;
            if (_source113.is_Eq) {
              bool _3335___mcc_h48 = _source113.dtor_referential;
              bool _3336___mcc_h49 = _source113.dtor_nullable;
              bool _3337_nullable = _3336___mcc_h49;
              bool _3338_referential = _3335___mcc_h48;
              {
                if (_3338_referential) {
                  if (_3337_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source113.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source113.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3339___mcc_h50 = _source113.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3340_op = _3339___mcc_h50;
              {
                r = RAST.Expr.create_BinaryOp(_3340_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_Times) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source114 = _3261_op;
            if (_source114.is_Eq) {
              bool _3341___mcc_h51 = _source114.dtor_referential;
              bool _3342___mcc_h52 = _source114.dtor_nullable;
              bool _3343_nullable = _3342___mcc_h52;
              bool _3344_referential = _3341___mcc_h51;
              {
                if (_3344_referential) {
                  if (_3343_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source114.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source114.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3345___mcc_h53 = _source114.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3346_op = _3345___mcc_h53;
              {
                r = RAST.Expr.create_BinaryOp(_3346_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_BitwiseAnd) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source115 = _3261_op;
            if (_source115.is_Eq) {
              bool _3347___mcc_h54 = _source115.dtor_referential;
              bool _3348___mcc_h55 = _source115.dtor_nullable;
              bool _3349_nullable = _3348___mcc_h55;
              bool _3350_referential = _3347___mcc_h54;
              {
                if (_3350_referential) {
                  if (_3349_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source115.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source115.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3351___mcc_h56 = _source115.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3352_op = _3351___mcc_h56;
              {
                r = RAST.Expr.create_BinaryOp(_3352_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_BitwiseOr) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source116 = _3261_op;
            if (_source116.is_Eq) {
              bool _3353___mcc_h57 = _source116.dtor_referential;
              bool _3354___mcc_h58 = _source116.dtor_nullable;
              bool _3355_nullable = _3354___mcc_h58;
              bool _3356_referential = _3353___mcc_h57;
              {
                if (_3356_referential) {
                  if (_3355_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source116.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source116.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3357___mcc_h59 = _source116.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3358_op = _3357___mcc_h59;
              {
                r = RAST.Expr.create_BinaryOp(_3358_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_BitwiseXor) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source117 = _3261_op;
            if (_source117.is_Eq) {
              bool _3359___mcc_h60 = _source117.dtor_referential;
              bool _3360___mcc_h61 = _source117.dtor_nullable;
              bool _3361_nullable = _3360___mcc_h61;
              bool _3362_referential = _3359___mcc_h60;
              {
                if (_3362_referential) {
                  if (_3361_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source117.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source117.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3363___mcc_h62 = _source117.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3364_op = _3363___mcc_h62;
              {
                r = RAST.Expr.create_BinaryOp(_3364_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_BitwiseShiftRight) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source118 = _3261_op;
            if (_source118.is_Eq) {
              bool _3365___mcc_h63 = _source118.dtor_referential;
              bool _3366___mcc_h64 = _source118.dtor_nullable;
              bool _3367_nullable = _3366___mcc_h64;
              bool _3368_referential = _3365___mcc_h63;
              {
                if (_3368_referential) {
                  if (_3367_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source118.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source118.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3369___mcc_h65 = _source118.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3370_op = _3369___mcc_h65;
              {
                r = RAST.Expr.create_BinaryOp(_3370_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_BitwiseShiftLeft) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source119 = _3261_op;
            if (_source119.is_Eq) {
              bool _3371___mcc_h66 = _source119.dtor_referential;
              bool _3372___mcc_h67 = _source119.dtor_nullable;
              bool _3373_nullable = _3372___mcc_h67;
              bool _3374_referential = _3371___mcc_h66;
              {
                if (_3374_referential) {
                  if (_3373_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source119.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source119.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3375___mcc_h68 = _source119.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3376_op = _3375___mcc_h68;
              {
                r = RAST.Expr.create_BinaryOp(_3376_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_And) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source120 = _3261_op;
            if (_source120.is_Eq) {
              bool _3377___mcc_h69 = _source120.dtor_referential;
              bool _3378___mcc_h70 = _source120.dtor_nullable;
              bool _3379_nullable = _3378___mcc_h70;
              bool _3380_referential = _3377___mcc_h69;
              {
                if (_3380_referential) {
                  if (_3379_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source120.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source120.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3381___mcc_h71 = _source120.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3382_op = _3381___mcc_h71;
              {
                r = RAST.Expr.create_BinaryOp(_3382_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_Or) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source121 = _3261_op;
            if (_source121.is_Eq) {
              bool _3383___mcc_h72 = _source121.dtor_referential;
              bool _3384___mcc_h73 = _source121.dtor_nullable;
              bool _3385_nullable = _3384___mcc_h73;
              bool _3386_referential = _3383___mcc_h72;
              {
                if (_3386_referential) {
                  if (_3385_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source121.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source121.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3387___mcc_h74 = _source121.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3388_op = _3387___mcc_h74;
              {
                r = RAST.Expr.create_BinaryOp(_3388_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      } else if (_source104.is_In) {
        {
          r = ((_3282_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_3279_left);
        }
      } else if (_source104.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3279_left, _3282_right, _3264_format);
      } else if (_source104.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3279_left, _3282_right, _3264_format);
      } else if (_source104.is_SetMerge) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3282_right);
        }
      } else if (_source104.is_SetSubtraction) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3282_right);
        }
      } else if (_source104.is_SetIntersection) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3282_right);
        }
      } else if (_source104.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3279_left, _3282_right, _3264_format);
        }
      } else if (_source104.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3279_left, _3282_right, _3264_format);
        }
      } else if (_source104.is_SetDisjoint) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3282_right);
        }
      } else if (_source104.is_MapMerge) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3282_right);
        }
      } else if (_source104.is_MapSubtraction) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3282_right);
        }
      } else if (_source104.is_MultisetMerge) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3282_right);
        }
      } else if (_source104.is_MultisetSubtraction) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3282_right);
        }
      } else if (_source104.is_MultisetIntersection) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3282_right);
        }
      } else if (_source104.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3279_left, _3282_right, _3264_format);
        }
      } else if (_source104.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3279_left, _3282_right, _3264_format);
        }
      } else if (_source104.is_MultisetDisjoint) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3282_right);
        }
      } else if (_source104.is_Concat) {
        {
          r = ((_3279_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_3282_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _3389___mcc_h22 = _source104.dtor_Passthrough_a0;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3261_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3261_op), _3279_left, _3282_right, _3264_format);
          } else {
            DAST._IBinOp _source122 = _3261_op;
            if (_source122.is_Eq) {
              bool _3390___mcc_h75 = _source122.dtor_referential;
              bool _3391___mcc_h76 = _source122.dtor_nullable;
              bool _3392_nullable = _3391___mcc_h76;
              bool _3393_referential = _3390___mcc_h75;
              {
                if (_3393_referential) {
                  if (_3392_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3279_left, _3282_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source122.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else if (_source122.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3279_left, _3282_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3394___mcc_h77 = _source122.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3395_op = _3394___mcc_h77;
              {
                r = RAST.Expr.create_BinaryOp(_3395_op, _3279_left, _3282_right, _3264_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out213;
      DCOMP._IOwnership _out214;
      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out213, out _out214);
      r = _out213;
      resultingOwnership = _out214;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3281_recIdentsL, _3284_recIdentsR);
      return ;
    }
    public static void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs51 = e;
      DAST._IExpression _3396_expr = _let_tmp_rhs51.dtor_value;
      DAST._IType _3397_fromTpe = _let_tmp_rhs51.dtor_from;
      DAST._IType _3398_toTpe = _let_tmp_rhs51.dtor_typ;
      if (object.Equals(_3397_fromTpe, _3398_toTpe)) {
        RAST._IExpr _3399_recursiveGen;
        DCOMP._IOwnership _3400_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3401_recIdents;
        RAST._IExpr _out215;
        DCOMP._IOwnership _out216;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out217;
        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out215, out _out216, out _out217);
        _3399_recursiveGen = _out215;
        _3400_recOwned = _out216;
        _3401_recIdents = _out217;
        r = _3399_recursiveGen;
        RAST._IExpr _out218;
        DCOMP._IOwnership _out219;
        DCOMP.COMP.FromOwnership(r, _3400_recOwned, expectedOwnership, out _out218, out _out219);
        r = _out218;
        resultingOwnership = _out219;
        readIdents = _3401_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source123 = _System.Tuple2<DAST._IType, DAST._IType>.create(_3397_fromTpe, _3398_toTpe);
        DAST._IType _3402___mcc_h0 = _source123.dtor__0;
        DAST._IType _3403___mcc_h1 = _source123.dtor__1;
        DAST._IType _source124 = _3402___mcc_h0;
        if (_source124.is_Path) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3404___mcc_h4 = _source124.dtor_Path_a0;
          Dafny.ISequence<DAST._IType> _3405___mcc_h5 = _source124.dtor_typeArgs;
          DAST._IResolvedType _3406___mcc_h6 = _source124.dtor_resolved;
          DAST._IResolvedType _source125 = _3406___mcc_h6;
          if (_source125.is_Datatype) {
            DAST._IDatatypeType _3407___mcc_h16 = _source125.dtor_datatypeType;
            DAST._IType _source126 = _3403___mcc_h1;
            if (_source126.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3408___mcc_h20 = _source126.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3409___mcc_h21 = _source126.dtor_typeArgs;
              DAST._IResolvedType _3410___mcc_h22 = _source126.dtor_resolved;
              DAST._IResolvedType _source127 = _3410___mcc_h22;
              if (_source127.is_Datatype) {
                DAST._IDatatypeType _3411___mcc_h26 = _source127.dtor_datatypeType;
                {
                  RAST._IType _3412_fromTpeGen;
                  RAST._IType _out220;
                  _out220 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _3412_fromTpeGen = _out220;
                  RAST._IType _3413_toTpeGen;
                  RAST._IType _out221;
                  _out221 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _3413_toTpeGen = _out221;
                  RAST._IExpr _3414_recursiveGen;
                  DCOMP._IOwnership _3415_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3416_recIdents;
                  RAST._IExpr _out222;
                  DCOMP._IOwnership _out223;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out224;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out222, out _out223, out _out224);
                  _3414_recursiveGen = _out222;
                  _3415_recOwned = _out223;
                  _3416_recIdents = _out224;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3414_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3412_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3413_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out225;
                  DCOMP._IOwnership _out226;
                  DCOMP.COMP.FromOwnership(r, _3415_recOwned, expectedOwnership, out _out225, out _out226);
                  r = _out225;
                  resultingOwnership = _out226;
                  readIdents = _3416_recIdents;
                }
              } else if (_source127.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3417___mcc_h28 = _source127.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3418___mcc_h29 = _source127.dtor_attributes;
                {
                  RAST._IType _3419_fromTpeGen;
                  RAST._IType _out227;
                  _out227 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _3419_fromTpeGen = _out227;
                  RAST._IType _3420_toTpeGen;
                  RAST._IType _out228;
                  _out228 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _3420_toTpeGen = _out228;
                  RAST._IExpr _3421_recursiveGen;
                  DCOMP._IOwnership _3422_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3423_recIdents;
                  RAST._IExpr _out229;
                  DCOMP._IOwnership _out230;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out231;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out229, out _out230, out _out231);
                  _3421_recursiveGen = _out229;
                  _3422_recOwned = _out230;
                  _3423_recIdents = _out231;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3421_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3419_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3420_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out232;
                  DCOMP._IOwnership _out233;
                  DCOMP.COMP.FromOwnership(r, _3422_recOwned, expectedOwnership, out _out232, out _out233);
                  r = _out232;
                  resultingOwnership = _out233;
                  readIdents = _3423_recIdents;
                }
              } else {
                DAST._IType _3424___mcc_h32 = _source127.dtor_baseType;
                DAST._INewtypeRange _3425___mcc_h33 = _source127.dtor_range;
                bool _3426___mcc_h34 = _source127.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3427___mcc_h35 = _source127.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3428_attributes = _3427___mcc_h35;
                bool _3429_erase = _3426___mcc_h34;
                DAST._INewtypeRange _3430_range = _3425___mcc_h33;
                DAST._IType _3431_b = _3424___mcc_h32;
                {
                  Std.Wrappers._IOption<RAST._IType> _3432_nativeToType;
                  _3432_nativeToType = DCOMP.COMP.NewtypeToRustType(_3431_b, _3430_range);
                  if (object.Equals(_3397_fromTpe, _3431_b)) {
                    RAST._IExpr _3433_recursiveGen;
                    DCOMP._IOwnership _3434_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3435_recIdents;
                    RAST._IExpr _out234;
                    DCOMP._IOwnership _out235;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out236;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out234, out _out235, out _out236);
                    _3433_recursiveGen = _out234;
                    _3434_recOwned = _out235;
                    _3435_recIdents = _out236;
                    readIdents = _3435_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source128 = _3432_nativeToType;
                    if (_source128.is_None) {
                      if (_3429_erase) {
                        r = _3433_recursiveGen;
                      } else {
                        RAST._IType _3436_rhsType;
                        RAST._IType _out237;
                        _out237 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                        _3436_rhsType = _out237;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3436_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3433_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out238;
                      DCOMP._IOwnership _out239;
                      DCOMP.COMP.FromOwnership(r, _3434_recOwned, expectedOwnership, out _out238, out _out239);
                      r = _out238;
                      resultingOwnership = _out239;
                    } else {
                      RAST._IType _3437___mcc_h1246 = _source128.dtor_value;
                      RAST._IType _3438_v = _3437___mcc_h1246;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3433_recursiveGen, RAST.Expr.create_ExprFromType(_3438_v)));
                      RAST._IExpr _out240;
                      DCOMP._IOwnership _out241;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out240, out _out241);
                      r = _out240;
                      resultingOwnership = _out241;
                    }
                  } else {
                    if ((_3432_nativeToType).is_Some) {
                      DAST._IType _source129 = _3397_fromTpe;
                      if (_source129.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3439___mcc_h1247 = _source129.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3440___mcc_h1248 = _source129.dtor_typeArgs;
                        DAST._IResolvedType _3441___mcc_h1249 = _source129.dtor_resolved;
                        DAST._IResolvedType _source130 = _3441___mcc_h1249;
                        if (_source130.is_Datatype) {
                          DAST._IDatatypeType _3442___mcc_h1253 = _source130.dtor_datatypeType;
                        } else if (_source130.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3443___mcc_h1255 = _source130.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3444___mcc_h1256 = _source130.dtor_attributes;
                        } else {
                          DAST._IType _3445___mcc_h1259 = _source130.dtor_baseType;
                          DAST._INewtypeRange _3446___mcc_h1260 = _source130.dtor_range;
                          bool _3447___mcc_h1261 = _source130.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3448___mcc_h1262 = _source130.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3449_attributes0 = _3448___mcc_h1262;
                          bool _3450_erase0 = _3447___mcc_h1261;
                          DAST._INewtypeRange _3451_range0 = _3446___mcc_h1260;
                          DAST._IType _3452_b0 = _3445___mcc_h1259;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3453_nativeFromType;
                            _3453_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3452_b0, _3451_range0);
                            if ((_3453_nativeFromType).is_Some) {
                              RAST._IExpr _3454_recursiveGen;
                              DCOMP._IOwnership _3455_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3456_recIdents;
                              RAST._IExpr _out242;
                              DCOMP._IOwnership _out243;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out244;
                              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out242, out _out243, out _out244);
                              _3454_recursiveGen = _out242;
                              _3455_recOwned = _out243;
                              _3456_recIdents = _out244;
                              RAST._IExpr _out245;
                              DCOMP._IOwnership _out246;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3454_recursiveGen, (_3432_nativeToType).dtor_value), _3455_recOwned, expectedOwnership, out _out245, out _out246);
                              r = _out245;
                              resultingOwnership = _out246;
                              readIdents = _3456_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source129.is_Nullable) {
                        DAST._IType _3457___mcc_h1267 = _source129.dtor_Nullable_a0;
                      } else if (_source129.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3458___mcc_h1269 = _source129.dtor_Tuple_a0;
                      } else if (_source129.is_Array) {
                        DAST._IType _3459___mcc_h1271 = _source129.dtor_element;
                        BigInteger _3460___mcc_h1272 = _source129.dtor_dims;
                      } else if (_source129.is_Seq) {
                        DAST._IType _3461___mcc_h1275 = _source129.dtor_element;
                      } else if (_source129.is_Set) {
                        DAST._IType _3462___mcc_h1277 = _source129.dtor_element;
                      } else if (_source129.is_Multiset) {
                        DAST._IType _3463___mcc_h1279 = _source129.dtor_element;
                      } else if (_source129.is_Map) {
                        DAST._IType _3464___mcc_h1281 = _source129.dtor_key;
                        DAST._IType _3465___mcc_h1282 = _source129.dtor_value;
                      } else if (_source129.is_SetBuilder) {
                        DAST._IType _3466___mcc_h1285 = _source129.dtor_element;
                      } else if (_source129.is_MapBuilder) {
                        DAST._IType _3467___mcc_h1287 = _source129.dtor_key;
                        DAST._IType _3468___mcc_h1288 = _source129.dtor_value;
                      } else if (_source129.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3469___mcc_h1291 = _source129.dtor_args;
                        DAST._IType _3470___mcc_h1292 = _source129.dtor_result;
                      } else if (_source129.is_Primitive) {
                        DAST._IPrimitive _3471___mcc_h1295 = _source129.dtor_Primitive_a0;
                      } else if (_source129.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3472___mcc_h1297 = _source129.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3473___mcc_h1299 = _source129.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3474_recursiveGen;
                        DCOMP._IOwnership _3475_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3476_recIdents;
                        RAST._IExpr _out247;
                        DCOMP._IOwnership _out248;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out249;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out247, out _out248, out _out249);
                        _3474_recursiveGen = _out247;
                        _3475_recOwned = _out248;
                        _3476_recIdents = _out249;
                        RAST._IExpr _out250;
                        DCOMP._IOwnership _out251;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3474_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3432_nativeToType).dtor_value), _3475_recOwned, expectedOwnership, out _out250, out _out251);
                        r = _out250;
                        resultingOwnership = _out251;
                        readIdents = _3476_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out252;
                    DCOMP._IOwnership _out253;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out254;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3431_b), _3431_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out252, out _out253, out _out254);
                    r = _out252;
                    resultingOwnership = _out253;
                    readIdents = _out254;
                  }
                }
              }
            } else if (_source126.is_Nullable) {
              DAST._IType _3477___mcc_h40 = _source126.dtor_Nullable_a0;
              {
                RAST._IExpr _3478_recursiveGen;
                DCOMP._IOwnership _3479_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3480_recIdents;
                RAST._IExpr _out255;
                DCOMP._IOwnership _out256;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out257;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out255, out _out256, out _out257);
                _3478_recursiveGen = _out255;
                _3479_recOwned = _out256;
                _3480_recIdents = _out257;
                r = _3478_recursiveGen;
                if (object.Equals(_3479_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out258;
                DCOMP._IOwnership _out259;
                DCOMP.COMP.FromOwnership(r, _3479_recOwned, expectedOwnership, out _out258, out _out259);
                r = _out258;
                resultingOwnership = _out259;
                readIdents = _3480_recIdents;
              }
            } else if (_source126.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3481___mcc_h42 = _source126.dtor_Tuple_a0;
              {
                RAST._IType _3482_fromTpeGen;
                RAST._IType _out260;
                _out260 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3482_fromTpeGen = _out260;
                RAST._IType _3483_toTpeGen;
                RAST._IType _out261;
                _out261 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3483_toTpeGen = _out261;
                RAST._IExpr _3484_recursiveGen;
                DCOMP._IOwnership _3485_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3486_recIdents;
                RAST._IExpr _out262;
                DCOMP._IOwnership _out263;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out264;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out262, out _out263, out _out264);
                _3484_recursiveGen = _out262;
                _3485_recOwned = _out263;
                _3486_recIdents = _out264;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3484_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3482_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3483_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out265;
                DCOMP._IOwnership _out266;
                DCOMP.COMP.FromOwnership(r, _3485_recOwned, expectedOwnership, out _out265, out _out266);
                r = _out265;
                resultingOwnership = _out266;
                readIdents = _3486_recIdents;
              }
            } else if (_source126.is_Array) {
              DAST._IType _3487___mcc_h44 = _source126.dtor_element;
              BigInteger _3488___mcc_h45 = _source126.dtor_dims;
              {
                RAST._IType _3489_fromTpeGen;
                RAST._IType _out267;
                _out267 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3489_fromTpeGen = _out267;
                RAST._IType _3490_toTpeGen;
                RAST._IType _out268;
                _out268 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3490_toTpeGen = _out268;
                RAST._IExpr _3491_recursiveGen;
                DCOMP._IOwnership _3492_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3493_recIdents;
                RAST._IExpr _out269;
                DCOMP._IOwnership _out270;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out271;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out269, out _out270, out _out271);
                _3491_recursiveGen = _out269;
                _3492_recOwned = _out270;
                _3493_recIdents = _out271;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3491_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3489_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3490_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out272;
                DCOMP._IOwnership _out273;
                DCOMP.COMP.FromOwnership(r, _3492_recOwned, expectedOwnership, out _out272, out _out273);
                r = _out272;
                resultingOwnership = _out273;
                readIdents = _3493_recIdents;
              }
            } else if (_source126.is_Seq) {
              DAST._IType _3494___mcc_h48 = _source126.dtor_element;
              {
                RAST._IType _3495_fromTpeGen;
                RAST._IType _out274;
                _out274 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3495_fromTpeGen = _out274;
                RAST._IType _3496_toTpeGen;
                RAST._IType _out275;
                _out275 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3496_toTpeGen = _out275;
                RAST._IExpr _3497_recursiveGen;
                DCOMP._IOwnership _3498_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3499_recIdents;
                RAST._IExpr _out276;
                DCOMP._IOwnership _out277;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out278;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out276, out _out277, out _out278);
                _3497_recursiveGen = _out276;
                _3498_recOwned = _out277;
                _3499_recIdents = _out278;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3497_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3495_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3496_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out279;
                DCOMP._IOwnership _out280;
                DCOMP.COMP.FromOwnership(r, _3498_recOwned, expectedOwnership, out _out279, out _out280);
                r = _out279;
                resultingOwnership = _out280;
                readIdents = _3499_recIdents;
              }
            } else if (_source126.is_Set) {
              DAST._IType _3500___mcc_h50 = _source126.dtor_element;
              {
                RAST._IType _3501_fromTpeGen;
                RAST._IType _out281;
                _out281 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3501_fromTpeGen = _out281;
                RAST._IType _3502_toTpeGen;
                RAST._IType _out282;
                _out282 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3502_toTpeGen = _out282;
                RAST._IExpr _3503_recursiveGen;
                DCOMP._IOwnership _3504_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3505_recIdents;
                RAST._IExpr _out283;
                DCOMP._IOwnership _out284;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out285;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out283, out _out284, out _out285);
                _3503_recursiveGen = _out283;
                _3504_recOwned = _out284;
                _3505_recIdents = _out285;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3503_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3501_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3502_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out286;
                DCOMP._IOwnership _out287;
                DCOMP.COMP.FromOwnership(r, _3504_recOwned, expectedOwnership, out _out286, out _out287);
                r = _out286;
                resultingOwnership = _out287;
                readIdents = _3505_recIdents;
              }
            } else if (_source126.is_Multiset) {
              DAST._IType _3506___mcc_h52 = _source126.dtor_element;
              {
                RAST._IType _3507_fromTpeGen;
                RAST._IType _out288;
                _out288 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3507_fromTpeGen = _out288;
                RAST._IType _3508_toTpeGen;
                RAST._IType _out289;
                _out289 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3508_toTpeGen = _out289;
                RAST._IExpr _3509_recursiveGen;
                DCOMP._IOwnership _3510_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3511_recIdents;
                RAST._IExpr _out290;
                DCOMP._IOwnership _out291;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out292;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out290, out _out291, out _out292);
                _3509_recursiveGen = _out290;
                _3510_recOwned = _out291;
                _3511_recIdents = _out292;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3509_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3507_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3508_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out293;
                DCOMP._IOwnership _out294;
                DCOMP.COMP.FromOwnership(r, _3510_recOwned, expectedOwnership, out _out293, out _out294);
                r = _out293;
                resultingOwnership = _out294;
                readIdents = _3511_recIdents;
              }
            } else if (_source126.is_Map) {
              DAST._IType _3512___mcc_h54 = _source126.dtor_key;
              DAST._IType _3513___mcc_h55 = _source126.dtor_value;
              {
                RAST._IType _3514_fromTpeGen;
                RAST._IType _out295;
                _out295 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3514_fromTpeGen = _out295;
                RAST._IType _3515_toTpeGen;
                RAST._IType _out296;
                _out296 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3515_toTpeGen = _out296;
                RAST._IExpr _3516_recursiveGen;
                DCOMP._IOwnership _3517_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3518_recIdents;
                RAST._IExpr _out297;
                DCOMP._IOwnership _out298;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out299;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out297, out _out298, out _out299);
                _3516_recursiveGen = _out297;
                _3517_recOwned = _out298;
                _3518_recIdents = _out299;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3516_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3514_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3515_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out300;
                DCOMP._IOwnership _out301;
                DCOMP.COMP.FromOwnership(r, _3517_recOwned, expectedOwnership, out _out300, out _out301);
                r = _out300;
                resultingOwnership = _out301;
                readIdents = _3518_recIdents;
              }
            } else if (_source126.is_SetBuilder) {
              DAST._IType _3519___mcc_h58 = _source126.dtor_element;
              {
                RAST._IType _3520_fromTpeGen;
                RAST._IType _out302;
                _out302 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3520_fromTpeGen = _out302;
                RAST._IType _3521_toTpeGen;
                RAST._IType _out303;
                _out303 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3521_toTpeGen = _out303;
                RAST._IExpr _3522_recursiveGen;
                DCOMP._IOwnership _3523_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3524_recIdents;
                RAST._IExpr _out304;
                DCOMP._IOwnership _out305;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out306;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out304, out _out305, out _out306);
                _3522_recursiveGen = _out304;
                _3523_recOwned = _out305;
                _3524_recIdents = _out306;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3522_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3520_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3521_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out307;
                DCOMP._IOwnership _out308;
                DCOMP.COMP.FromOwnership(r, _3523_recOwned, expectedOwnership, out _out307, out _out308);
                r = _out307;
                resultingOwnership = _out308;
                readIdents = _3524_recIdents;
              }
            } else if (_source126.is_MapBuilder) {
              DAST._IType _3525___mcc_h60 = _source126.dtor_key;
              DAST._IType _3526___mcc_h61 = _source126.dtor_value;
              {
                RAST._IType _3527_fromTpeGen;
                RAST._IType _out309;
                _out309 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3527_fromTpeGen = _out309;
                RAST._IType _3528_toTpeGen;
                RAST._IType _out310;
                _out310 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3528_toTpeGen = _out310;
                RAST._IExpr _3529_recursiveGen;
                DCOMP._IOwnership _3530_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3531_recIdents;
                RAST._IExpr _out311;
                DCOMP._IOwnership _out312;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out313;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out311, out _out312, out _out313);
                _3529_recursiveGen = _out311;
                _3530_recOwned = _out312;
                _3531_recIdents = _out313;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3529_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3527_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3528_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out314;
                DCOMP._IOwnership _out315;
                DCOMP.COMP.FromOwnership(r, _3530_recOwned, expectedOwnership, out _out314, out _out315);
                r = _out314;
                resultingOwnership = _out315;
                readIdents = _3531_recIdents;
              }
            } else if (_source126.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3532___mcc_h64 = _source126.dtor_args;
              DAST._IType _3533___mcc_h65 = _source126.dtor_result;
              {
                RAST._IType _3534_fromTpeGen;
                RAST._IType _out316;
                _out316 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3534_fromTpeGen = _out316;
                RAST._IType _3535_toTpeGen;
                RAST._IType _out317;
                _out317 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3535_toTpeGen = _out317;
                RAST._IExpr _3536_recursiveGen;
                DCOMP._IOwnership _3537_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3538_recIdents;
                RAST._IExpr _out318;
                DCOMP._IOwnership _out319;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out320;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out318, out _out319, out _out320);
                _3536_recursiveGen = _out318;
                _3537_recOwned = _out319;
                _3538_recIdents = _out320;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3536_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3534_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3535_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out321;
                DCOMP._IOwnership _out322;
                DCOMP.COMP.FromOwnership(r, _3537_recOwned, expectedOwnership, out _out321, out _out322);
                r = _out321;
                resultingOwnership = _out322;
                readIdents = _3538_recIdents;
              }
            } else if (_source126.is_Primitive) {
              DAST._IPrimitive _3539___mcc_h68 = _source126.dtor_Primitive_a0;
              {
                RAST._IType _3540_fromTpeGen;
                RAST._IType _out323;
                _out323 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3540_fromTpeGen = _out323;
                RAST._IType _3541_toTpeGen;
                RAST._IType _out324;
                _out324 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3541_toTpeGen = _out324;
                RAST._IExpr _3542_recursiveGen;
                DCOMP._IOwnership _3543_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3544_recIdents;
                RAST._IExpr _out325;
                DCOMP._IOwnership _out326;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out327;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out325, out _out326, out _out327);
                _3542_recursiveGen = _out325;
                _3543_recOwned = _out326;
                _3544_recIdents = _out327;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3542_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3540_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3541_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out328;
                DCOMP._IOwnership _out329;
                DCOMP.COMP.FromOwnership(r, _3543_recOwned, expectedOwnership, out _out328, out _out329);
                r = _out328;
                resultingOwnership = _out329;
                readIdents = _3544_recIdents;
              }
            } else if (_source126.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3545___mcc_h70 = _source126.dtor_Passthrough_a0;
              {
                RAST._IType _3546_fromTpeGen;
                RAST._IType _out330;
                _out330 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3546_fromTpeGen = _out330;
                RAST._IType _3547_toTpeGen;
                RAST._IType _out331;
                _out331 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3547_toTpeGen = _out331;
                RAST._IExpr _3548_recursiveGen;
                DCOMP._IOwnership _3549_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3550_recIdents;
                RAST._IExpr _out332;
                DCOMP._IOwnership _out333;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out334;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out332, out _out333, out _out334);
                _3548_recursiveGen = _out332;
                _3549_recOwned = _out333;
                _3550_recIdents = _out334;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3548_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3546_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3547_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out335;
                DCOMP._IOwnership _out336;
                DCOMP.COMP.FromOwnership(r, _3549_recOwned, expectedOwnership, out _out335, out _out336);
                r = _out335;
                resultingOwnership = _out336;
                readIdents = _3550_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3551___mcc_h72 = _source126.dtor_TypeArg_a0;
              {
                RAST._IType _3552_fromTpeGen;
                RAST._IType _out337;
                _out337 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3552_fromTpeGen = _out337;
                RAST._IType _3553_toTpeGen;
                RAST._IType _out338;
                _out338 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3553_toTpeGen = _out338;
                RAST._IExpr _3554_recursiveGen;
                DCOMP._IOwnership _3555_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3556_recIdents;
                RAST._IExpr _out339;
                DCOMP._IOwnership _out340;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out341;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out339, out _out340, out _out341);
                _3554_recursiveGen = _out339;
                _3555_recOwned = _out340;
                _3556_recIdents = _out341;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3554_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3552_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3553_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out342;
                DCOMP._IOwnership _out343;
                DCOMP.COMP.FromOwnership(r, _3555_recOwned, expectedOwnership, out _out342, out _out343);
                r = _out342;
                resultingOwnership = _out343;
                readIdents = _3556_recIdents;
              }
            }
          } else if (_source125.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3557___mcc_h74 = _source125.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _3558___mcc_h75 = _source125.dtor_attributes;
            DAST._IType _source131 = _3403___mcc_h1;
            if (_source131.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3559___mcc_h82 = _source131.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3560___mcc_h83 = _source131.dtor_typeArgs;
              DAST._IResolvedType _3561___mcc_h84 = _source131.dtor_resolved;
              DAST._IResolvedType _source132 = _3561___mcc_h84;
              if (_source132.is_Datatype) {
                DAST._IDatatypeType _3562___mcc_h88 = _source132.dtor_datatypeType;
                {
                  RAST._IType _3563_fromTpeGen;
                  RAST._IType _out344;
                  _out344 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _3563_fromTpeGen = _out344;
                  RAST._IType _3564_toTpeGen;
                  RAST._IType _out345;
                  _out345 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _3564_toTpeGen = _out345;
                  RAST._IExpr _3565_recursiveGen;
                  DCOMP._IOwnership _3566_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3567_recIdents;
                  RAST._IExpr _out346;
                  DCOMP._IOwnership _out347;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out348;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out346, out _out347, out _out348);
                  _3565_recursiveGen = _out346;
                  _3566_recOwned = _out347;
                  _3567_recIdents = _out348;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3565_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3563_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3564_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out349;
                  DCOMP._IOwnership _out350;
                  DCOMP.COMP.FromOwnership(r, _3566_recOwned, expectedOwnership, out _out349, out _out350);
                  r = _out349;
                  resultingOwnership = _out350;
                  readIdents = _3567_recIdents;
                }
              } else if (_source132.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3568___mcc_h90 = _source132.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3569___mcc_h91 = _source132.dtor_attributes;
                {
                  RAST._IType _3570_fromTpeGen;
                  RAST._IType _out351;
                  _out351 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _3570_fromTpeGen = _out351;
                  RAST._IType _3571_toTpeGen;
                  RAST._IType _out352;
                  _out352 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _3571_toTpeGen = _out352;
                  RAST._IExpr _3572_recursiveGen;
                  DCOMP._IOwnership _3573_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3574_recIdents;
                  RAST._IExpr _out353;
                  DCOMP._IOwnership _out354;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out355;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out353, out _out354, out _out355);
                  _3572_recursiveGen = _out353;
                  _3573_recOwned = _out354;
                  _3574_recIdents = _out355;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3572_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3570_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3571_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out356;
                  DCOMP._IOwnership _out357;
                  DCOMP.COMP.FromOwnership(r, _3573_recOwned, expectedOwnership, out _out356, out _out357);
                  r = _out356;
                  resultingOwnership = _out357;
                  readIdents = _3574_recIdents;
                }
              } else {
                DAST._IType _3575___mcc_h94 = _source132.dtor_baseType;
                DAST._INewtypeRange _3576___mcc_h95 = _source132.dtor_range;
                bool _3577___mcc_h96 = _source132.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3578___mcc_h97 = _source132.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3579_attributes = _3578___mcc_h97;
                bool _3580_erase = _3577___mcc_h96;
                DAST._INewtypeRange _3581_range = _3576___mcc_h95;
                DAST._IType _3582_b = _3575___mcc_h94;
                {
                  Std.Wrappers._IOption<RAST._IType> _3583_nativeToType;
                  _3583_nativeToType = DCOMP.COMP.NewtypeToRustType(_3582_b, _3581_range);
                  if (object.Equals(_3397_fromTpe, _3582_b)) {
                    RAST._IExpr _3584_recursiveGen;
                    DCOMP._IOwnership _3585_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3586_recIdents;
                    RAST._IExpr _out358;
                    DCOMP._IOwnership _out359;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out360;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out358, out _out359, out _out360);
                    _3584_recursiveGen = _out358;
                    _3585_recOwned = _out359;
                    _3586_recIdents = _out360;
                    readIdents = _3586_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source133 = _3583_nativeToType;
                    if (_source133.is_None) {
                      if (_3580_erase) {
                        r = _3584_recursiveGen;
                      } else {
                        RAST._IType _3587_rhsType;
                        RAST._IType _out361;
                        _out361 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                        _3587_rhsType = _out361;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3587_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3584_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out362;
                      DCOMP._IOwnership _out363;
                      DCOMP.COMP.FromOwnership(r, _3585_recOwned, expectedOwnership, out _out362, out _out363);
                      r = _out362;
                      resultingOwnership = _out363;
                    } else {
                      RAST._IType _3588___mcc_h1301 = _source133.dtor_value;
                      RAST._IType _3589_v = _3588___mcc_h1301;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3584_recursiveGen, RAST.Expr.create_ExprFromType(_3589_v)));
                      RAST._IExpr _out364;
                      DCOMP._IOwnership _out365;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out364, out _out365);
                      r = _out364;
                      resultingOwnership = _out365;
                    }
                  } else {
                    if ((_3583_nativeToType).is_Some) {
                      DAST._IType _source134 = _3397_fromTpe;
                      if (_source134.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3590___mcc_h1302 = _source134.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3591___mcc_h1303 = _source134.dtor_typeArgs;
                        DAST._IResolvedType _3592___mcc_h1304 = _source134.dtor_resolved;
                        DAST._IResolvedType _source135 = _3592___mcc_h1304;
                        if (_source135.is_Datatype) {
                          DAST._IDatatypeType _3593___mcc_h1308 = _source135.dtor_datatypeType;
                        } else if (_source135.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3594___mcc_h1310 = _source135.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3595___mcc_h1311 = _source135.dtor_attributes;
                        } else {
                          DAST._IType _3596___mcc_h1314 = _source135.dtor_baseType;
                          DAST._INewtypeRange _3597___mcc_h1315 = _source135.dtor_range;
                          bool _3598___mcc_h1316 = _source135.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3599___mcc_h1317 = _source135.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3600_attributes0 = _3599___mcc_h1317;
                          bool _3601_erase0 = _3598___mcc_h1316;
                          DAST._INewtypeRange _3602_range0 = _3597___mcc_h1315;
                          DAST._IType _3603_b0 = _3596___mcc_h1314;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3604_nativeFromType;
                            _3604_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3603_b0, _3602_range0);
                            if ((_3604_nativeFromType).is_Some) {
                              RAST._IExpr _3605_recursiveGen;
                              DCOMP._IOwnership _3606_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3607_recIdents;
                              RAST._IExpr _out366;
                              DCOMP._IOwnership _out367;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out368;
                              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out366, out _out367, out _out368);
                              _3605_recursiveGen = _out366;
                              _3606_recOwned = _out367;
                              _3607_recIdents = _out368;
                              RAST._IExpr _out369;
                              DCOMP._IOwnership _out370;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3605_recursiveGen, (_3583_nativeToType).dtor_value), _3606_recOwned, expectedOwnership, out _out369, out _out370);
                              r = _out369;
                              resultingOwnership = _out370;
                              readIdents = _3607_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source134.is_Nullable) {
                        DAST._IType _3608___mcc_h1322 = _source134.dtor_Nullable_a0;
                      } else if (_source134.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3609___mcc_h1324 = _source134.dtor_Tuple_a0;
                      } else if (_source134.is_Array) {
                        DAST._IType _3610___mcc_h1326 = _source134.dtor_element;
                        BigInteger _3611___mcc_h1327 = _source134.dtor_dims;
                      } else if (_source134.is_Seq) {
                        DAST._IType _3612___mcc_h1330 = _source134.dtor_element;
                      } else if (_source134.is_Set) {
                        DAST._IType _3613___mcc_h1332 = _source134.dtor_element;
                      } else if (_source134.is_Multiset) {
                        DAST._IType _3614___mcc_h1334 = _source134.dtor_element;
                      } else if (_source134.is_Map) {
                        DAST._IType _3615___mcc_h1336 = _source134.dtor_key;
                        DAST._IType _3616___mcc_h1337 = _source134.dtor_value;
                      } else if (_source134.is_SetBuilder) {
                        DAST._IType _3617___mcc_h1340 = _source134.dtor_element;
                      } else if (_source134.is_MapBuilder) {
                        DAST._IType _3618___mcc_h1342 = _source134.dtor_key;
                        DAST._IType _3619___mcc_h1343 = _source134.dtor_value;
                      } else if (_source134.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3620___mcc_h1346 = _source134.dtor_args;
                        DAST._IType _3621___mcc_h1347 = _source134.dtor_result;
                      } else if (_source134.is_Primitive) {
                        DAST._IPrimitive _3622___mcc_h1350 = _source134.dtor_Primitive_a0;
                      } else if (_source134.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3623___mcc_h1352 = _source134.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3624___mcc_h1354 = _source134.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3625_recursiveGen;
                        DCOMP._IOwnership _3626_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3627_recIdents;
                        RAST._IExpr _out371;
                        DCOMP._IOwnership _out372;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out373;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out371, out _out372, out _out373);
                        _3625_recursiveGen = _out371;
                        _3626_recOwned = _out372;
                        _3627_recIdents = _out373;
                        RAST._IExpr _out374;
                        DCOMP._IOwnership _out375;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3625_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3583_nativeToType).dtor_value), _3626_recOwned, expectedOwnership, out _out374, out _out375);
                        r = _out374;
                        resultingOwnership = _out375;
                        readIdents = _3627_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out376;
                    DCOMP._IOwnership _out377;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out378;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3582_b), _3582_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out376, out _out377, out _out378);
                    r = _out376;
                    resultingOwnership = _out377;
                    readIdents = _out378;
                  }
                }
              }
            } else if (_source131.is_Nullable) {
              DAST._IType _3628___mcc_h102 = _source131.dtor_Nullable_a0;
              {
                RAST._IExpr _3629_recursiveGen;
                DCOMP._IOwnership _3630_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3631_recIdents;
                RAST._IExpr _out379;
                DCOMP._IOwnership _out380;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out381;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out379, out _out380, out _out381);
                _3629_recursiveGen = _out379;
                _3630_recOwned = _out380;
                _3631_recIdents = _out381;
                r = _3629_recursiveGen;
                if (object.Equals(_3630_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out382;
                DCOMP._IOwnership _out383;
                DCOMP.COMP.FromOwnership(r, _3630_recOwned, expectedOwnership, out _out382, out _out383);
                r = _out382;
                resultingOwnership = _out383;
                readIdents = _3631_recIdents;
              }
            } else if (_source131.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3632___mcc_h104 = _source131.dtor_Tuple_a0;
              {
                RAST._IType _3633_fromTpeGen;
                RAST._IType _out384;
                _out384 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3633_fromTpeGen = _out384;
                RAST._IType _3634_toTpeGen;
                RAST._IType _out385;
                _out385 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3634_toTpeGen = _out385;
                RAST._IExpr _3635_recursiveGen;
                DCOMP._IOwnership _3636_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3637_recIdents;
                RAST._IExpr _out386;
                DCOMP._IOwnership _out387;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out388;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out386, out _out387, out _out388);
                _3635_recursiveGen = _out386;
                _3636_recOwned = _out387;
                _3637_recIdents = _out388;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3635_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3633_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3634_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out389;
                DCOMP._IOwnership _out390;
                DCOMP.COMP.FromOwnership(r, _3636_recOwned, expectedOwnership, out _out389, out _out390);
                r = _out389;
                resultingOwnership = _out390;
                readIdents = _3637_recIdents;
              }
            } else if (_source131.is_Array) {
              DAST._IType _3638___mcc_h106 = _source131.dtor_element;
              BigInteger _3639___mcc_h107 = _source131.dtor_dims;
              {
                RAST._IType _3640_fromTpeGen;
                RAST._IType _out391;
                _out391 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3640_fromTpeGen = _out391;
                RAST._IType _3641_toTpeGen;
                RAST._IType _out392;
                _out392 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3641_toTpeGen = _out392;
                RAST._IExpr _3642_recursiveGen;
                DCOMP._IOwnership _3643_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3644_recIdents;
                RAST._IExpr _out393;
                DCOMP._IOwnership _out394;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out395;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out393, out _out394, out _out395);
                _3642_recursiveGen = _out393;
                _3643_recOwned = _out394;
                _3644_recIdents = _out395;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3642_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3640_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3641_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out396;
                DCOMP._IOwnership _out397;
                DCOMP.COMP.FromOwnership(r, _3643_recOwned, expectedOwnership, out _out396, out _out397);
                r = _out396;
                resultingOwnership = _out397;
                readIdents = _3644_recIdents;
              }
            } else if (_source131.is_Seq) {
              DAST._IType _3645___mcc_h110 = _source131.dtor_element;
              {
                RAST._IType _3646_fromTpeGen;
                RAST._IType _out398;
                _out398 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3646_fromTpeGen = _out398;
                RAST._IType _3647_toTpeGen;
                RAST._IType _out399;
                _out399 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3647_toTpeGen = _out399;
                RAST._IExpr _3648_recursiveGen;
                DCOMP._IOwnership _3649_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3650_recIdents;
                RAST._IExpr _out400;
                DCOMP._IOwnership _out401;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out402;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out400, out _out401, out _out402);
                _3648_recursiveGen = _out400;
                _3649_recOwned = _out401;
                _3650_recIdents = _out402;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3648_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3646_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3647_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out403;
                DCOMP._IOwnership _out404;
                DCOMP.COMP.FromOwnership(r, _3649_recOwned, expectedOwnership, out _out403, out _out404);
                r = _out403;
                resultingOwnership = _out404;
                readIdents = _3650_recIdents;
              }
            } else if (_source131.is_Set) {
              DAST._IType _3651___mcc_h112 = _source131.dtor_element;
              {
                RAST._IType _3652_fromTpeGen;
                RAST._IType _out405;
                _out405 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3652_fromTpeGen = _out405;
                RAST._IType _3653_toTpeGen;
                RAST._IType _out406;
                _out406 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3653_toTpeGen = _out406;
                RAST._IExpr _3654_recursiveGen;
                DCOMP._IOwnership _3655_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3656_recIdents;
                RAST._IExpr _out407;
                DCOMP._IOwnership _out408;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out409;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out407, out _out408, out _out409);
                _3654_recursiveGen = _out407;
                _3655_recOwned = _out408;
                _3656_recIdents = _out409;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3654_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3652_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3653_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out410;
                DCOMP._IOwnership _out411;
                DCOMP.COMP.FromOwnership(r, _3655_recOwned, expectedOwnership, out _out410, out _out411);
                r = _out410;
                resultingOwnership = _out411;
                readIdents = _3656_recIdents;
              }
            } else if (_source131.is_Multiset) {
              DAST._IType _3657___mcc_h114 = _source131.dtor_element;
              {
                RAST._IType _3658_fromTpeGen;
                RAST._IType _out412;
                _out412 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3658_fromTpeGen = _out412;
                RAST._IType _3659_toTpeGen;
                RAST._IType _out413;
                _out413 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3659_toTpeGen = _out413;
                RAST._IExpr _3660_recursiveGen;
                DCOMP._IOwnership _3661_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3662_recIdents;
                RAST._IExpr _out414;
                DCOMP._IOwnership _out415;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out416;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out414, out _out415, out _out416);
                _3660_recursiveGen = _out414;
                _3661_recOwned = _out415;
                _3662_recIdents = _out416;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3660_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3658_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3659_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out417;
                DCOMP._IOwnership _out418;
                DCOMP.COMP.FromOwnership(r, _3661_recOwned, expectedOwnership, out _out417, out _out418);
                r = _out417;
                resultingOwnership = _out418;
                readIdents = _3662_recIdents;
              }
            } else if (_source131.is_Map) {
              DAST._IType _3663___mcc_h116 = _source131.dtor_key;
              DAST._IType _3664___mcc_h117 = _source131.dtor_value;
              {
                RAST._IType _3665_fromTpeGen;
                RAST._IType _out419;
                _out419 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3665_fromTpeGen = _out419;
                RAST._IType _3666_toTpeGen;
                RAST._IType _out420;
                _out420 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3666_toTpeGen = _out420;
                RAST._IExpr _3667_recursiveGen;
                DCOMP._IOwnership _3668_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3669_recIdents;
                RAST._IExpr _out421;
                DCOMP._IOwnership _out422;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out423;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out421, out _out422, out _out423);
                _3667_recursiveGen = _out421;
                _3668_recOwned = _out422;
                _3669_recIdents = _out423;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3667_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3665_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3666_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out424;
                DCOMP._IOwnership _out425;
                DCOMP.COMP.FromOwnership(r, _3668_recOwned, expectedOwnership, out _out424, out _out425);
                r = _out424;
                resultingOwnership = _out425;
                readIdents = _3669_recIdents;
              }
            } else if (_source131.is_SetBuilder) {
              DAST._IType _3670___mcc_h120 = _source131.dtor_element;
              {
                RAST._IType _3671_fromTpeGen;
                RAST._IType _out426;
                _out426 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3671_fromTpeGen = _out426;
                RAST._IType _3672_toTpeGen;
                RAST._IType _out427;
                _out427 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3672_toTpeGen = _out427;
                RAST._IExpr _3673_recursiveGen;
                DCOMP._IOwnership _3674_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3675_recIdents;
                RAST._IExpr _out428;
                DCOMP._IOwnership _out429;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out430;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out428, out _out429, out _out430);
                _3673_recursiveGen = _out428;
                _3674_recOwned = _out429;
                _3675_recIdents = _out430;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3673_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3671_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3672_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out431;
                DCOMP._IOwnership _out432;
                DCOMP.COMP.FromOwnership(r, _3674_recOwned, expectedOwnership, out _out431, out _out432);
                r = _out431;
                resultingOwnership = _out432;
                readIdents = _3675_recIdents;
              }
            } else if (_source131.is_MapBuilder) {
              DAST._IType _3676___mcc_h122 = _source131.dtor_key;
              DAST._IType _3677___mcc_h123 = _source131.dtor_value;
              {
                RAST._IType _3678_fromTpeGen;
                RAST._IType _out433;
                _out433 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3678_fromTpeGen = _out433;
                RAST._IType _3679_toTpeGen;
                RAST._IType _out434;
                _out434 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3679_toTpeGen = _out434;
                RAST._IExpr _3680_recursiveGen;
                DCOMP._IOwnership _3681_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3682_recIdents;
                RAST._IExpr _out435;
                DCOMP._IOwnership _out436;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out437;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out435, out _out436, out _out437);
                _3680_recursiveGen = _out435;
                _3681_recOwned = _out436;
                _3682_recIdents = _out437;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3680_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3678_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3679_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out438;
                DCOMP._IOwnership _out439;
                DCOMP.COMP.FromOwnership(r, _3681_recOwned, expectedOwnership, out _out438, out _out439);
                r = _out438;
                resultingOwnership = _out439;
                readIdents = _3682_recIdents;
              }
            } else if (_source131.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3683___mcc_h126 = _source131.dtor_args;
              DAST._IType _3684___mcc_h127 = _source131.dtor_result;
              {
                RAST._IType _3685_fromTpeGen;
                RAST._IType _out440;
                _out440 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3685_fromTpeGen = _out440;
                RAST._IType _3686_toTpeGen;
                RAST._IType _out441;
                _out441 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3686_toTpeGen = _out441;
                RAST._IExpr _3687_recursiveGen;
                DCOMP._IOwnership _3688_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3689_recIdents;
                RAST._IExpr _out442;
                DCOMP._IOwnership _out443;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out444;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out442, out _out443, out _out444);
                _3687_recursiveGen = _out442;
                _3688_recOwned = _out443;
                _3689_recIdents = _out444;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3687_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3685_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3686_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out445;
                DCOMP._IOwnership _out446;
                DCOMP.COMP.FromOwnership(r, _3688_recOwned, expectedOwnership, out _out445, out _out446);
                r = _out445;
                resultingOwnership = _out446;
                readIdents = _3689_recIdents;
              }
            } else if (_source131.is_Primitive) {
              DAST._IPrimitive _3690___mcc_h130 = _source131.dtor_Primitive_a0;
              {
                RAST._IType _3691_fromTpeGen;
                RAST._IType _out447;
                _out447 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3691_fromTpeGen = _out447;
                RAST._IType _3692_toTpeGen;
                RAST._IType _out448;
                _out448 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3692_toTpeGen = _out448;
                RAST._IExpr _3693_recursiveGen;
                DCOMP._IOwnership _3694_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3695_recIdents;
                RAST._IExpr _out449;
                DCOMP._IOwnership _out450;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out451;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out449, out _out450, out _out451);
                _3693_recursiveGen = _out449;
                _3694_recOwned = _out450;
                _3695_recIdents = _out451;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3693_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3691_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3692_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out452;
                DCOMP._IOwnership _out453;
                DCOMP.COMP.FromOwnership(r, _3694_recOwned, expectedOwnership, out _out452, out _out453);
                r = _out452;
                resultingOwnership = _out453;
                readIdents = _3695_recIdents;
              }
            } else if (_source131.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3696___mcc_h132 = _source131.dtor_Passthrough_a0;
              {
                RAST._IType _3697_fromTpeGen;
                RAST._IType _out454;
                _out454 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3697_fromTpeGen = _out454;
                RAST._IType _3698_toTpeGen;
                RAST._IType _out455;
                _out455 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3698_toTpeGen = _out455;
                RAST._IExpr _3699_recursiveGen;
                DCOMP._IOwnership _3700_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3701_recIdents;
                RAST._IExpr _out456;
                DCOMP._IOwnership _out457;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out458;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out456, out _out457, out _out458);
                _3699_recursiveGen = _out456;
                _3700_recOwned = _out457;
                _3701_recIdents = _out458;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3699_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3697_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3698_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out459;
                DCOMP._IOwnership _out460;
                DCOMP.COMP.FromOwnership(r, _3700_recOwned, expectedOwnership, out _out459, out _out460);
                r = _out459;
                resultingOwnership = _out460;
                readIdents = _3701_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3702___mcc_h134 = _source131.dtor_TypeArg_a0;
              {
                RAST._IType _3703_fromTpeGen;
                RAST._IType _out461;
                _out461 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _3703_fromTpeGen = _out461;
                RAST._IType _3704_toTpeGen;
                RAST._IType _out462;
                _out462 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _3704_toTpeGen = _out462;
                RAST._IExpr _3705_recursiveGen;
                DCOMP._IOwnership _3706_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3707_recIdents;
                RAST._IExpr _out463;
                DCOMP._IOwnership _out464;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out465;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out463, out _out464, out _out465);
                _3705_recursiveGen = _out463;
                _3706_recOwned = _out464;
                _3707_recIdents = _out465;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3705_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3703_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3704_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out466;
                DCOMP._IOwnership _out467;
                DCOMP.COMP.FromOwnership(r, _3706_recOwned, expectedOwnership, out _out466, out _out467);
                r = _out466;
                resultingOwnership = _out467;
                readIdents = _3707_recIdents;
              }
            }
          } else {
            DAST._IType _3708___mcc_h136 = _source125.dtor_baseType;
            DAST._INewtypeRange _3709___mcc_h137 = _source125.dtor_range;
            bool _3710___mcc_h138 = _source125.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _3711___mcc_h139 = _source125.dtor_attributes;
            DAST._IType _source136 = _3403___mcc_h1;
            if (_source136.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3712___mcc_h152 = _source136.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3713___mcc_h153 = _source136.dtor_typeArgs;
              DAST._IResolvedType _3714___mcc_h154 = _source136.dtor_resolved;
              DAST._IResolvedType _source137 = _3714___mcc_h154;
              if (_source137.is_Datatype) {
                DAST._IDatatypeType _3715___mcc_h161 = _source137.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _3716_attributes = _3711___mcc_h139;
                bool _3717_erase = _3710___mcc_h138;
                DAST._INewtypeRange _3718_range = _3709___mcc_h137;
                DAST._IType _3719_b = _3708___mcc_h136;
                {
                  Std.Wrappers._IOption<RAST._IType> _3720_nativeFromType;
                  _3720_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3719_b, _3718_range);
                  if (object.Equals(_3719_b, _3398_toTpe)) {
                    RAST._IExpr _3721_recursiveGen;
                    DCOMP._IOwnership _3722_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3723_recIdents;
                    RAST._IExpr _out468;
                    DCOMP._IOwnership _out469;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out470;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out468, out _out469, out _out470);
                    _3721_recursiveGen = _out468;
                    _3722_recOwned = _out469;
                    _3723_recIdents = _out470;
                    readIdents = _3723_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source138 = _3720_nativeFromType;
                    if (_source138.is_None) {
                      if (_3717_erase) {
                        r = _3721_recursiveGen;
                      } else {
                        r = (_3721_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out471;
                      DCOMP._IOwnership _out472;
                      DCOMP.COMP.FromOwnership(r, _3722_recOwned, expectedOwnership, out _out471, out _out472);
                      r = _out471;
                      resultingOwnership = _out472;
                    } else {
                      RAST._IType _3724___mcc_h1356 = _source138.dtor_value;
                      RAST._IType _3725_v = _3724___mcc_h1356;
                      RAST._IType _3726_toTpeRust;
                      RAST._IType _out473;
                      _out473 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                      _3726_toTpeRust = _out473;
                      r = (((_3721_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3726_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out474;
                      DCOMP._IOwnership _out475;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out474, out _out475);
                      r = _out474;
                      resultingOwnership = _out475;
                    }
                  } else {
                    if ((_3720_nativeFromType).is_Some) {
                      if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3727_recursiveGen;
                        DCOMP._IOwnership _3728_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3729_recIdents;
                        RAST._IExpr _out476;
                        DCOMP._IOwnership _out477;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out478;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out476, out _out477, out _out478);
                        _3727_recursiveGen = _out476;
                        _3728_recOwned = _out477;
                        _3729_recIdents = _out478;
                        RAST._IExpr _out479;
                        DCOMP._IOwnership _out480;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3727_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3728_recOwned, expectedOwnership, out _out479, out _out480);
                        r = _out479;
                        resultingOwnership = _out480;
                        readIdents = _3729_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out481;
                    DCOMP._IOwnership _out482;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out483;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3719_b), _3719_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out481, out _out482, out _out483);
                    r = _out481;
                    resultingOwnership = _out482;
                    readIdents = _out483;
                  }
                }
              } else if (_source137.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3730___mcc_h164 = _source137.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3731___mcc_h165 = _source137.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3732_attributes = _3711___mcc_h139;
                bool _3733_erase = _3710___mcc_h138;
                DAST._INewtypeRange _3734_range = _3709___mcc_h137;
                DAST._IType _3735_b = _3708___mcc_h136;
                {
                  Std.Wrappers._IOption<RAST._IType> _3736_nativeFromType;
                  _3736_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3735_b, _3734_range);
                  if (object.Equals(_3735_b, _3398_toTpe)) {
                    RAST._IExpr _3737_recursiveGen;
                    DCOMP._IOwnership _3738_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3739_recIdents;
                    RAST._IExpr _out484;
                    DCOMP._IOwnership _out485;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out486;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out484, out _out485, out _out486);
                    _3737_recursiveGen = _out484;
                    _3738_recOwned = _out485;
                    _3739_recIdents = _out486;
                    readIdents = _3739_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source139 = _3736_nativeFromType;
                    if (_source139.is_None) {
                      if (_3733_erase) {
                        r = _3737_recursiveGen;
                      } else {
                        r = (_3737_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out487;
                      DCOMP._IOwnership _out488;
                      DCOMP.COMP.FromOwnership(r, _3738_recOwned, expectedOwnership, out _out487, out _out488);
                      r = _out487;
                      resultingOwnership = _out488;
                    } else {
                      RAST._IType _3740___mcc_h1357 = _source139.dtor_value;
                      RAST._IType _3741_v = _3740___mcc_h1357;
                      RAST._IType _3742_toTpeRust;
                      RAST._IType _out489;
                      _out489 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                      _3742_toTpeRust = _out489;
                      r = (((_3737_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3742_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out490;
                      DCOMP._IOwnership _out491;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out490, out _out491);
                      r = _out490;
                      resultingOwnership = _out491;
                    }
                  } else {
                    if ((_3736_nativeFromType).is_Some) {
                      if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3743_recursiveGen;
                        DCOMP._IOwnership _3744_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3745_recIdents;
                        RAST._IExpr _out492;
                        DCOMP._IOwnership _out493;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out494;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out492, out _out493, out _out494);
                        _3743_recursiveGen = _out492;
                        _3744_recOwned = _out493;
                        _3745_recIdents = _out494;
                        RAST._IExpr _out495;
                        DCOMP._IOwnership _out496;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3743_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3744_recOwned, expectedOwnership, out _out495, out _out496);
                        r = _out495;
                        resultingOwnership = _out496;
                        readIdents = _3745_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out497;
                    DCOMP._IOwnership _out498;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out499;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3735_b), _3735_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out497, out _out498, out _out499);
                    r = _out497;
                    resultingOwnership = _out498;
                    readIdents = _out499;
                  }
                }
              } else {
                DAST._IType _3746___mcc_h170 = _source137.dtor_baseType;
                DAST._INewtypeRange _3747___mcc_h171 = _source137.dtor_range;
                bool _3748___mcc_h172 = _source137.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3749___mcc_h173 = _source137.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3750_attributes = _3749___mcc_h173;
                bool _3751_erase = _3748___mcc_h172;
                DAST._INewtypeRange _3752_range = _3747___mcc_h171;
                DAST._IType _3753_b = _3746___mcc_h170;
                {
                  Std.Wrappers._IOption<RAST._IType> _3754_nativeToType;
                  _3754_nativeToType = DCOMP.COMP.NewtypeToRustType(_3753_b, _3752_range);
                  if (object.Equals(_3397_fromTpe, _3753_b)) {
                    RAST._IExpr _3755_recursiveGen;
                    DCOMP._IOwnership _3756_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3757_recIdents;
                    RAST._IExpr _out500;
                    DCOMP._IOwnership _out501;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out502;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out500, out _out501, out _out502);
                    _3755_recursiveGen = _out500;
                    _3756_recOwned = _out501;
                    _3757_recIdents = _out502;
                    readIdents = _3757_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source140 = _3754_nativeToType;
                    if (_source140.is_None) {
                      if (_3751_erase) {
                        r = _3755_recursiveGen;
                      } else {
                        RAST._IType _3758_rhsType;
                        RAST._IType _out503;
                        _out503 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                        _3758_rhsType = _out503;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3758_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3755_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out504;
                      DCOMP._IOwnership _out505;
                      DCOMP.COMP.FromOwnership(r, _3756_recOwned, expectedOwnership, out _out504, out _out505);
                      r = _out504;
                      resultingOwnership = _out505;
                    } else {
                      RAST._IType _3759___mcc_h1358 = _source140.dtor_value;
                      RAST._IType _3760_v = _3759___mcc_h1358;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3755_recursiveGen, RAST.Expr.create_ExprFromType(_3760_v)));
                      RAST._IExpr _out506;
                      DCOMP._IOwnership _out507;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out506, out _out507);
                      r = _out506;
                      resultingOwnership = _out507;
                    }
                  } else {
                    if ((_3754_nativeToType).is_Some) {
                      DAST._IType _source141 = _3397_fromTpe;
                      if (_source141.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3761___mcc_h1359 = _source141.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3762___mcc_h1360 = _source141.dtor_typeArgs;
                        DAST._IResolvedType _3763___mcc_h1361 = _source141.dtor_resolved;
                        DAST._IResolvedType _source142 = _3763___mcc_h1361;
                        if (_source142.is_Datatype) {
                          DAST._IDatatypeType _3764___mcc_h1365 = _source142.dtor_datatypeType;
                        } else if (_source142.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3765___mcc_h1367 = _source142.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3766___mcc_h1368 = _source142.dtor_attributes;
                        } else {
                          DAST._IType _3767___mcc_h1371 = _source142.dtor_baseType;
                          DAST._INewtypeRange _3768___mcc_h1372 = _source142.dtor_range;
                          bool _3769___mcc_h1373 = _source142.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3770___mcc_h1374 = _source142.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3771_attributes0 = _3770___mcc_h1374;
                          bool _3772_erase0 = _3769___mcc_h1373;
                          DAST._INewtypeRange _3773_range0 = _3768___mcc_h1372;
                          DAST._IType _3774_b0 = _3767___mcc_h1371;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3775_nativeFromType;
                            _3775_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3774_b0, _3773_range0);
                            if ((_3775_nativeFromType).is_Some) {
                              RAST._IExpr _3776_recursiveGen;
                              DCOMP._IOwnership _3777_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3778_recIdents;
                              RAST._IExpr _out508;
                              DCOMP._IOwnership _out509;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out510;
                              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out508, out _out509, out _out510);
                              _3776_recursiveGen = _out508;
                              _3777_recOwned = _out509;
                              _3778_recIdents = _out510;
                              RAST._IExpr _out511;
                              DCOMP._IOwnership _out512;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3776_recursiveGen, (_3754_nativeToType).dtor_value), _3777_recOwned, expectedOwnership, out _out511, out _out512);
                              r = _out511;
                              resultingOwnership = _out512;
                              readIdents = _3778_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source141.is_Nullable) {
                        DAST._IType _3779___mcc_h1379 = _source141.dtor_Nullable_a0;
                      } else if (_source141.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3780___mcc_h1381 = _source141.dtor_Tuple_a0;
                      } else if (_source141.is_Array) {
                        DAST._IType _3781___mcc_h1383 = _source141.dtor_element;
                        BigInteger _3782___mcc_h1384 = _source141.dtor_dims;
                      } else if (_source141.is_Seq) {
                        DAST._IType _3783___mcc_h1387 = _source141.dtor_element;
                      } else if (_source141.is_Set) {
                        DAST._IType _3784___mcc_h1389 = _source141.dtor_element;
                      } else if (_source141.is_Multiset) {
                        DAST._IType _3785___mcc_h1391 = _source141.dtor_element;
                      } else if (_source141.is_Map) {
                        DAST._IType _3786___mcc_h1393 = _source141.dtor_key;
                        DAST._IType _3787___mcc_h1394 = _source141.dtor_value;
                      } else if (_source141.is_SetBuilder) {
                        DAST._IType _3788___mcc_h1397 = _source141.dtor_element;
                      } else if (_source141.is_MapBuilder) {
                        DAST._IType _3789___mcc_h1399 = _source141.dtor_key;
                        DAST._IType _3790___mcc_h1400 = _source141.dtor_value;
                      } else if (_source141.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3791___mcc_h1403 = _source141.dtor_args;
                        DAST._IType _3792___mcc_h1404 = _source141.dtor_result;
                      } else if (_source141.is_Primitive) {
                        DAST._IPrimitive _3793___mcc_h1407 = _source141.dtor_Primitive_a0;
                      } else if (_source141.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3794___mcc_h1409 = _source141.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3795___mcc_h1411 = _source141.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3796_recursiveGen;
                        DCOMP._IOwnership _3797_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3798_recIdents;
                        RAST._IExpr _out513;
                        DCOMP._IOwnership _out514;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out515;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out513, out _out514, out _out515);
                        _3796_recursiveGen = _out513;
                        _3797_recOwned = _out514;
                        _3798_recIdents = _out515;
                        RAST._IExpr _out516;
                        DCOMP._IOwnership _out517;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3796_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3754_nativeToType).dtor_value), _3797_recOwned, expectedOwnership, out _out516, out _out517);
                        r = _out516;
                        resultingOwnership = _out517;
                        readIdents = _3798_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out518;
                    DCOMP._IOwnership _out519;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out520;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3753_b), _3753_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out518, out _out519, out _out520);
                    r = _out518;
                    resultingOwnership = _out519;
                    readIdents = _out520;
                  }
                }
              }
            } else if (_source136.is_Nullable) {
              DAST._IType _3799___mcc_h182 = _source136.dtor_Nullable_a0;
              {
                RAST._IExpr _3800_recursiveGen;
                DCOMP._IOwnership _3801_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3802_recIdents;
                RAST._IExpr _out521;
                DCOMP._IOwnership _out522;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out523;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out521, out _out522, out _out523);
                _3800_recursiveGen = _out521;
                _3801_recOwned = _out522;
                _3802_recIdents = _out523;
                r = _3800_recursiveGen;
                if (object.Equals(_3801_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out524;
                DCOMP._IOwnership _out525;
                DCOMP.COMP.FromOwnership(r, _3801_recOwned, expectedOwnership, out _out524, out _out525);
                r = _out524;
                resultingOwnership = _out525;
                readIdents = _3802_recIdents;
              }
            } else if (_source136.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3803___mcc_h185 = _source136.dtor_Tuple_a0;
              Dafny.ISequence<DAST._IAttribute> _3804_attributes = _3711___mcc_h139;
              bool _3805_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3806_range = _3709___mcc_h137;
              DAST._IType _3807_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3808_nativeFromType;
                _3808_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3807_b, _3806_range);
                if (object.Equals(_3807_b, _3398_toTpe)) {
                  RAST._IExpr _3809_recursiveGen;
                  DCOMP._IOwnership _3810_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3811_recIdents;
                  RAST._IExpr _out526;
                  DCOMP._IOwnership _out527;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out528;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out526, out _out527, out _out528);
                  _3809_recursiveGen = _out526;
                  _3810_recOwned = _out527;
                  _3811_recIdents = _out528;
                  readIdents = _3811_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source143 = _3808_nativeFromType;
                  if (_source143.is_None) {
                    if (_3805_erase) {
                      r = _3809_recursiveGen;
                    } else {
                      r = (_3809_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out529;
                    DCOMP._IOwnership _out530;
                    DCOMP.COMP.FromOwnership(r, _3810_recOwned, expectedOwnership, out _out529, out _out530);
                    r = _out529;
                    resultingOwnership = _out530;
                  } else {
                    RAST._IType _3812___mcc_h1413 = _source143.dtor_value;
                    RAST._IType _3813_v = _3812___mcc_h1413;
                    RAST._IType _3814_toTpeRust;
                    RAST._IType _out531;
                    _out531 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3814_toTpeRust = _out531;
                    r = (((_3809_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3814_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out532;
                    DCOMP._IOwnership _out533;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out532, out _out533);
                    r = _out532;
                    resultingOwnership = _out533;
                  }
                } else {
                  if ((_3808_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3815_recursiveGen;
                      DCOMP._IOwnership _3816_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3817_recIdents;
                      RAST._IExpr _out534;
                      DCOMP._IOwnership _out535;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out536;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out534, out _out535, out _out536);
                      _3815_recursiveGen = _out534;
                      _3816_recOwned = _out535;
                      _3817_recIdents = _out536;
                      RAST._IExpr _out537;
                      DCOMP._IOwnership _out538;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3815_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3816_recOwned, expectedOwnership, out _out537, out _out538);
                      r = _out537;
                      resultingOwnership = _out538;
                      readIdents = _3817_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out539;
                  DCOMP._IOwnership _out540;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out541;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3807_b), _3807_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out539, out _out540, out _out541);
                  r = _out539;
                  resultingOwnership = _out540;
                  readIdents = _out541;
                }
              }
            } else if (_source136.is_Array) {
              DAST._IType _3818___mcc_h188 = _source136.dtor_element;
              BigInteger _3819___mcc_h189 = _source136.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _3820_attributes = _3711___mcc_h139;
              bool _3821_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3822_range = _3709___mcc_h137;
              DAST._IType _3823_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3824_nativeFromType;
                _3824_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3823_b, _3822_range);
                if (object.Equals(_3823_b, _3398_toTpe)) {
                  RAST._IExpr _3825_recursiveGen;
                  DCOMP._IOwnership _3826_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3827_recIdents;
                  RAST._IExpr _out542;
                  DCOMP._IOwnership _out543;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out544;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out542, out _out543, out _out544);
                  _3825_recursiveGen = _out542;
                  _3826_recOwned = _out543;
                  _3827_recIdents = _out544;
                  readIdents = _3827_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source144 = _3824_nativeFromType;
                  if (_source144.is_None) {
                    if (_3821_erase) {
                      r = _3825_recursiveGen;
                    } else {
                      r = (_3825_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out545;
                    DCOMP._IOwnership _out546;
                    DCOMP.COMP.FromOwnership(r, _3826_recOwned, expectedOwnership, out _out545, out _out546);
                    r = _out545;
                    resultingOwnership = _out546;
                  } else {
                    RAST._IType _3828___mcc_h1414 = _source144.dtor_value;
                    RAST._IType _3829_v = _3828___mcc_h1414;
                    RAST._IType _3830_toTpeRust;
                    RAST._IType _out547;
                    _out547 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3830_toTpeRust = _out547;
                    r = (((_3825_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3830_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out548;
                    DCOMP._IOwnership _out549;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out548, out _out549);
                    r = _out548;
                    resultingOwnership = _out549;
                  }
                } else {
                  if ((_3824_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3831_recursiveGen;
                      DCOMP._IOwnership _3832_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3833_recIdents;
                      RAST._IExpr _out550;
                      DCOMP._IOwnership _out551;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out552;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out550, out _out551, out _out552);
                      _3831_recursiveGen = _out550;
                      _3832_recOwned = _out551;
                      _3833_recIdents = _out552;
                      RAST._IExpr _out553;
                      DCOMP._IOwnership _out554;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3831_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3832_recOwned, expectedOwnership, out _out553, out _out554);
                      r = _out553;
                      resultingOwnership = _out554;
                      readIdents = _3833_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out555;
                  DCOMP._IOwnership _out556;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out557;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3823_b), _3823_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out555, out _out556, out _out557);
                  r = _out555;
                  resultingOwnership = _out556;
                  readIdents = _out557;
                }
              }
            } else if (_source136.is_Seq) {
              DAST._IType _3834___mcc_h194 = _source136.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _3835_attributes = _3711___mcc_h139;
              bool _3836_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3837_range = _3709___mcc_h137;
              DAST._IType _3838_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3839_nativeFromType;
                _3839_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3838_b, _3837_range);
                if (object.Equals(_3838_b, _3398_toTpe)) {
                  RAST._IExpr _3840_recursiveGen;
                  DCOMP._IOwnership _3841_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3842_recIdents;
                  RAST._IExpr _out558;
                  DCOMP._IOwnership _out559;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out560;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out558, out _out559, out _out560);
                  _3840_recursiveGen = _out558;
                  _3841_recOwned = _out559;
                  _3842_recIdents = _out560;
                  readIdents = _3842_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source145 = _3839_nativeFromType;
                  if (_source145.is_None) {
                    if (_3836_erase) {
                      r = _3840_recursiveGen;
                    } else {
                      r = (_3840_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out561;
                    DCOMP._IOwnership _out562;
                    DCOMP.COMP.FromOwnership(r, _3841_recOwned, expectedOwnership, out _out561, out _out562);
                    r = _out561;
                    resultingOwnership = _out562;
                  } else {
                    RAST._IType _3843___mcc_h1415 = _source145.dtor_value;
                    RAST._IType _3844_v = _3843___mcc_h1415;
                    RAST._IType _3845_toTpeRust;
                    RAST._IType _out563;
                    _out563 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3845_toTpeRust = _out563;
                    r = (((_3840_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3845_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out564;
                    DCOMP._IOwnership _out565;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out564, out _out565);
                    r = _out564;
                    resultingOwnership = _out565;
                  }
                } else {
                  if ((_3839_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3846_recursiveGen;
                      DCOMP._IOwnership _3847_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3848_recIdents;
                      RAST._IExpr _out566;
                      DCOMP._IOwnership _out567;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out568;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out566, out _out567, out _out568);
                      _3846_recursiveGen = _out566;
                      _3847_recOwned = _out567;
                      _3848_recIdents = _out568;
                      RAST._IExpr _out569;
                      DCOMP._IOwnership _out570;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3846_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3847_recOwned, expectedOwnership, out _out569, out _out570);
                      r = _out569;
                      resultingOwnership = _out570;
                      readIdents = _3848_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out571;
                  DCOMP._IOwnership _out572;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out573;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3838_b), _3838_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out571, out _out572, out _out573);
                  r = _out571;
                  resultingOwnership = _out572;
                  readIdents = _out573;
                }
              }
            } else if (_source136.is_Set) {
              DAST._IType _3849___mcc_h197 = _source136.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _3850_attributes = _3711___mcc_h139;
              bool _3851_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3852_range = _3709___mcc_h137;
              DAST._IType _3853_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3854_nativeFromType;
                _3854_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3853_b, _3852_range);
                if (object.Equals(_3853_b, _3398_toTpe)) {
                  RAST._IExpr _3855_recursiveGen;
                  DCOMP._IOwnership _3856_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3857_recIdents;
                  RAST._IExpr _out574;
                  DCOMP._IOwnership _out575;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out576;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out574, out _out575, out _out576);
                  _3855_recursiveGen = _out574;
                  _3856_recOwned = _out575;
                  _3857_recIdents = _out576;
                  readIdents = _3857_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source146 = _3854_nativeFromType;
                  if (_source146.is_None) {
                    if (_3851_erase) {
                      r = _3855_recursiveGen;
                    } else {
                      r = (_3855_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out577;
                    DCOMP._IOwnership _out578;
                    DCOMP.COMP.FromOwnership(r, _3856_recOwned, expectedOwnership, out _out577, out _out578);
                    r = _out577;
                    resultingOwnership = _out578;
                  } else {
                    RAST._IType _3858___mcc_h1416 = _source146.dtor_value;
                    RAST._IType _3859_v = _3858___mcc_h1416;
                    RAST._IType _3860_toTpeRust;
                    RAST._IType _out579;
                    _out579 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3860_toTpeRust = _out579;
                    r = (((_3855_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3860_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out580;
                    DCOMP._IOwnership _out581;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out580, out _out581);
                    r = _out580;
                    resultingOwnership = _out581;
                  }
                } else {
                  if ((_3854_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3861_recursiveGen;
                      DCOMP._IOwnership _3862_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3863_recIdents;
                      RAST._IExpr _out582;
                      DCOMP._IOwnership _out583;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out584;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out582, out _out583, out _out584);
                      _3861_recursiveGen = _out582;
                      _3862_recOwned = _out583;
                      _3863_recIdents = _out584;
                      RAST._IExpr _out585;
                      DCOMP._IOwnership _out586;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3861_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3862_recOwned, expectedOwnership, out _out585, out _out586);
                      r = _out585;
                      resultingOwnership = _out586;
                      readIdents = _3863_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out587;
                  DCOMP._IOwnership _out588;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out589;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3853_b), _3853_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out587, out _out588, out _out589);
                  r = _out587;
                  resultingOwnership = _out588;
                  readIdents = _out589;
                }
              }
            } else if (_source136.is_Multiset) {
              DAST._IType _3864___mcc_h200 = _source136.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _3865_attributes = _3711___mcc_h139;
              bool _3866_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3867_range = _3709___mcc_h137;
              DAST._IType _3868_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3869_nativeFromType;
                _3869_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3868_b, _3867_range);
                if (object.Equals(_3868_b, _3398_toTpe)) {
                  RAST._IExpr _3870_recursiveGen;
                  DCOMP._IOwnership _3871_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3872_recIdents;
                  RAST._IExpr _out590;
                  DCOMP._IOwnership _out591;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out592;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out590, out _out591, out _out592);
                  _3870_recursiveGen = _out590;
                  _3871_recOwned = _out591;
                  _3872_recIdents = _out592;
                  readIdents = _3872_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source147 = _3869_nativeFromType;
                  if (_source147.is_None) {
                    if (_3866_erase) {
                      r = _3870_recursiveGen;
                    } else {
                      r = (_3870_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out593;
                    DCOMP._IOwnership _out594;
                    DCOMP.COMP.FromOwnership(r, _3871_recOwned, expectedOwnership, out _out593, out _out594);
                    r = _out593;
                    resultingOwnership = _out594;
                  } else {
                    RAST._IType _3873___mcc_h1417 = _source147.dtor_value;
                    RAST._IType _3874_v = _3873___mcc_h1417;
                    RAST._IType _3875_toTpeRust;
                    RAST._IType _out595;
                    _out595 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3875_toTpeRust = _out595;
                    r = (((_3870_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3875_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out596;
                    DCOMP._IOwnership _out597;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out596, out _out597);
                    r = _out596;
                    resultingOwnership = _out597;
                  }
                } else {
                  if ((_3869_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3876_recursiveGen;
                      DCOMP._IOwnership _3877_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3878_recIdents;
                      RAST._IExpr _out598;
                      DCOMP._IOwnership _out599;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out600;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out598, out _out599, out _out600);
                      _3876_recursiveGen = _out598;
                      _3877_recOwned = _out599;
                      _3878_recIdents = _out600;
                      RAST._IExpr _out601;
                      DCOMP._IOwnership _out602;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3876_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3877_recOwned, expectedOwnership, out _out601, out _out602);
                      r = _out601;
                      resultingOwnership = _out602;
                      readIdents = _3878_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out603;
                  DCOMP._IOwnership _out604;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out605;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3868_b), _3868_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out603, out _out604, out _out605);
                  r = _out603;
                  resultingOwnership = _out604;
                  readIdents = _out605;
                }
              }
            } else if (_source136.is_Map) {
              DAST._IType _3879___mcc_h203 = _source136.dtor_key;
              DAST._IType _3880___mcc_h204 = _source136.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _3881_attributes = _3711___mcc_h139;
              bool _3882_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3883_range = _3709___mcc_h137;
              DAST._IType _3884_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3885_nativeFromType;
                _3885_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3884_b, _3883_range);
                if (object.Equals(_3884_b, _3398_toTpe)) {
                  RAST._IExpr _3886_recursiveGen;
                  DCOMP._IOwnership _3887_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3888_recIdents;
                  RAST._IExpr _out606;
                  DCOMP._IOwnership _out607;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out608;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out606, out _out607, out _out608);
                  _3886_recursiveGen = _out606;
                  _3887_recOwned = _out607;
                  _3888_recIdents = _out608;
                  readIdents = _3888_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source148 = _3885_nativeFromType;
                  if (_source148.is_None) {
                    if (_3882_erase) {
                      r = _3886_recursiveGen;
                    } else {
                      r = (_3886_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out609;
                    DCOMP._IOwnership _out610;
                    DCOMP.COMP.FromOwnership(r, _3887_recOwned, expectedOwnership, out _out609, out _out610);
                    r = _out609;
                    resultingOwnership = _out610;
                  } else {
                    RAST._IType _3889___mcc_h1418 = _source148.dtor_value;
                    RAST._IType _3890_v = _3889___mcc_h1418;
                    RAST._IType _3891_toTpeRust;
                    RAST._IType _out611;
                    _out611 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3891_toTpeRust = _out611;
                    r = (((_3886_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3891_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out612;
                    DCOMP._IOwnership _out613;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out612, out _out613);
                    r = _out612;
                    resultingOwnership = _out613;
                  }
                } else {
                  if ((_3885_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3892_recursiveGen;
                      DCOMP._IOwnership _3893_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3894_recIdents;
                      RAST._IExpr _out614;
                      DCOMP._IOwnership _out615;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out616;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out614, out _out615, out _out616);
                      _3892_recursiveGen = _out614;
                      _3893_recOwned = _out615;
                      _3894_recIdents = _out616;
                      RAST._IExpr _out617;
                      DCOMP._IOwnership _out618;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3892_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3893_recOwned, expectedOwnership, out _out617, out _out618);
                      r = _out617;
                      resultingOwnership = _out618;
                      readIdents = _3894_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out619;
                  DCOMP._IOwnership _out620;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out621;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3884_b), _3884_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out619, out _out620, out _out621);
                  r = _out619;
                  resultingOwnership = _out620;
                  readIdents = _out621;
                }
              }
            } else if (_source136.is_SetBuilder) {
              DAST._IType _3895___mcc_h209 = _source136.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _3896_attributes = _3711___mcc_h139;
              bool _3897_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3898_range = _3709___mcc_h137;
              DAST._IType _3899_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3900_nativeFromType;
                _3900_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3899_b, _3898_range);
                if (object.Equals(_3899_b, _3398_toTpe)) {
                  RAST._IExpr _3901_recursiveGen;
                  DCOMP._IOwnership _3902_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3903_recIdents;
                  RAST._IExpr _out622;
                  DCOMP._IOwnership _out623;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out624;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out622, out _out623, out _out624);
                  _3901_recursiveGen = _out622;
                  _3902_recOwned = _out623;
                  _3903_recIdents = _out624;
                  readIdents = _3903_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source149 = _3900_nativeFromType;
                  if (_source149.is_None) {
                    if (_3897_erase) {
                      r = _3901_recursiveGen;
                    } else {
                      r = (_3901_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out625;
                    DCOMP._IOwnership _out626;
                    DCOMP.COMP.FromOwnership(r, _3902_recOwned, expectedOwnership, out _out625, out _out626);
                    r = _out625;
                    resultingOwnership = _out626;
                  } else {
                    RAST._IType _3904___mcc_h1419 = _source149.dtor_value;
                    RAST._IType _3905_v = _3904___mcc_h1419;
                    RAST._IType _3906_toTpeRust;
                    RAST._IType _out627;
                    _out627 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3906_toTpeRust = _out627;
                    r = (((_3901_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3906_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out628;
                    DCOMP._IOwnership _out629;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out628, out _out629);
                    r = _out628;
                    resultingOwnership = _out629;
                  }
                } else {
                  if ((_3900_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3907_recursiveGen;
                      DCOMP._IOwnership _3908_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3909_recIdents;
                      RAST._IExpr _out630;
                      DCOMP._IOwnership _out631;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out632;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out630, out _out631, out _out632);
                      _3907_recursiveGen = _out630;
                      _3908_recOwned = _out631;
                      _3909_recIdents = _out632;
                      RAST._IExpr _out633;
                      DCOMP._IOwnership _out634;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3907_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3908_recOwned, expectedOwnership, out _out633, out _out634);
                      r = _out633;
                      resultingOwnership = _out634;
                      readIdents = _3909_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out635;
                  DCOMP._IOwnership _out636;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out637;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3899_b), _3899_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out635, out _out636, out _out637);
                  r = _out635;
                  resultingOwnership = _out636;
                  readIdents = _out637;
                }
              }
            } else if (_source136.is_MapBuilder) {
              DAST._IType _3910___mcc_h212 = _source136.dtor_key;
              DAST._IType _3911___mcc_h213 = _source136.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _3912_attributes = _3711___mcc_h139;
              bool _3913_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3914_range = _3709___mcc_h137;
              DAST._IType _3915_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3916_nativeFromType;
                _3916_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3915_b, _3914_range);
                if (object.Equals(_3915_b, _3398_toTpe)) {
                  RAST._IExpr _3917_recursiveGen;
                  DCOMP._IOwnership _3918_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3919_recIdents;
                  RAST._IExpr _out638;
                  DCOMP._IOwnership _out639;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out640;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out638, out _out639, out _out640);
                  _3917_recursiveGen = _out638;
                  _3918_recOwned = _out639;
                  _3919_recIdents = _out640;
                  readIdents = _3919_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source150 = _3916_nativeFromType;
                  if (_source150.is_None) {
                    if (_3913_erase) {
                      r = _3917_recursiveGen;
                    } else {
                      r = (_3917_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out641;
                    DCOMP._IOwnership _out642;
                    DCOMP.COMP.FromOwnership(r, _3918_recOwned, expectedOwnership, out _out641, out _out642);
                    r = _out641;
                    resultingOwnership = _out642;
                  } else {
                    RAST._IType _3920___mcc_h1420 = _source150.dtor_value;
                    RAST._IType _3921_v = _3920___mcc_h1420;
                    RAST._IType _3922_toTpeRust;
                    RAST._IType _out643;
                    _out643 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3922_toTpeRust = _out643;
                    r = (((_3917_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3922_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out644;
                    DCOMP._IOwnership _out645;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out644, out _out645);
                    r = _out644;
                    resultingOwnership = _out645;
                  }
                } else {
                  if ((_3916_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3923_recursiveGen;
                      DCOMP._IOwnership _3924_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3925_recIdents;
                      RAST._IExpr _out646;
                      DCOMP._IOwnership _out647;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out648;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out646, out _out647, out _out648);
                      _3923_recursiveGen = _out646;
                      _3924_recOwned = _out647;
                      _3925_recIdents = _out648;
                      RAST._IExpr _out649;
                      DCOMP._IOwnership _out650;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3923_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3924_recOwned, expectedOwnership, out _out649, out _out650);
                      r = _out649;
                      resultingOwnership = _out650;
                      readIdents = _3925_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out651;
                  DCOMP._IOwnership _out652;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out653;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3915_b), _3915_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out651, out _out652, out _out653);
                  r = _out651;
                  resultingOwnership = _out652;
                  readIdents = _out653;
                }
              }
            } else if (_source136.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3926___mcc_h218 = _source136.dtor_args;
              DAST._IType _3927___mcc_h219 = _source136.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _3928_attributes = _3711___mcc_h139;
              bool _3929_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3930_range = _3709___mcc_h137;
              DAST._IType _3931_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3932_nativeFromType;
                _3932_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3931_b, _3930_range);
                if (object.Equals(_3931_b, _3398_toTpe)) {
                  RAST._IExpr _3933_recursiveGen;
                  DCOMP._IOwnership _3934_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3935_recIdents;
                  RAST._IExpr _out654;
                  DCOMP._IOwnership _out655;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out656;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out654, out _out655, out _out656);
                  _3933_recursiveGen = _out654;
                  _3934_recOwned = _out655;
                  _3935_recIdents = _out656;
                  readIdents = _3935_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source151 = _3932_nativeFromType;
                  if (_source151.is_None) {
                    if (_3929_erase) {
                      r = _3933_recursiveGen;
                    } else {
                      r = (_3933_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out657;
                    DCOMP._IOwnership _out658;
                    DCOMP.COMP.FromOwnership(r, _3934_recOwned, expectedOwnership, out _out657, out _out658);
                    r = _out657;
                    resultingOwnership = _out658;
                  } else {
                    RAST._IType _3936___mcc_h1421 = _source151.dtor_value;
                    RAST._IType _3937_v = _3936___mcc_h1421;
                    RAST._IType _3938_toTpeRust;
                    RAST._IType _out659;
                    _out659 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3938_toTpeRust = _out659;
                    r = (((_3933_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3938_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out660;
                    DCOMP._IOwnership _out661;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out660, out _out661);
                    r = _out660;
                    resultingOwnership = _out661;
                  }
                } else {
                  if ((_3932_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3939_recursiveGen;
                      DCOMP._IOwnership _3940_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3941_recIdents;
                      RAST._IExpr _out662;
                      DCOMP._IOwnership _out663;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out664;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out662, out _out663, out _out664);
                      _3939_recursiveGen = _out662;
                      _3940_recOwned = _out663;
                      _3941_recIdents = _out664;
                      RAST._IExpr _out665;
                      DCOMP._IOwnership _out666;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3939_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3940_recOwned, expectedOwnership, out _out665, out _out666);
                      r = _out665;
                      resultingOwnership = _out666;
                      readIdents = _3941_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out667;
                  DCOMP._IOwnership _out668;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out669;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3931_b), _3931_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out667, out _out668, out _out669);
                  r = _out667;
                  resultingOwnership = _out668;
                  readIdents = _out669;
                }
              }
            } else if (_source136.is_Primitive) {
              DAST._IPrimitive _3942___mcc_h224 = _source136.dtor_Primitive_a0;
              Dafny.ISequence<DAST._IAttribute> _3943_attributes = _3711___mcc_h139;
              bool _3944_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3945_range = _3709___mcc_h137;
              DAST._IType _3946_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3947_nativeFromType;
                _3947_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3946_b, _3945_range);
                if (object.Equals(_3946_b, _3398_toTpe)) {
                  RAST._IExpr _3948_recursiveGen;
                  DCOMP._IOwnership _3949_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3950_recIdents;
                  RAST._IExpr _out670;
                  DCOMP._IOwnership _out671;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out672;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out670, out _out671, out _out672);
                  _3948_recursiveGen = _out670;
                  _3949_recOwned = _out671;
                  _3950_recIdents = _out672;
                  readIdents = _3950_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source152 = _3947_nativeFromType;
                  if (_source152.is_None) {
                    if (_3944_erase) {
                      r = _3948_recursiveGen;
                    } else {
                      r = (_3948_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out673;
                    DCOMP._IOwnership _out674;
                    DCOMP.COMP.FromOwnership(r, _3949_recOwned, expectedOwnership, out _out673, out _out674);
                    r = _out673;
                    resultingOwnership = _out674;
                  } else {
                    RAST._IType _3951___mcc_h1422 = _source152.dtor_value;
                    RAST._IType _3952_v = _3951___mcc_h1422;
                    RAST._IType _3953_toTpeRust;
                    RAST._IType _out675;
                    _out675 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3953_toTpeRust = _out675;
                    r = (((_3948_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3953_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out676;
                    DCOMP._IOwnership _out677;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out676, out _out677);
                    r = _out676;
                    resultingOwnership = _out677;
                  }
                } else {
                  if ((_3947_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3954_recursiveGen;
                      DCOMP._IOwnership _3955_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3956_recIdents;
                      RAST._IExpr _out678;
                      DCOMP._IOwnership _out679;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out680;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out678, out _out679, out _out680);
                      _3954_recursiveGen = _out678;
                      _3955_recOwned = _out679;
                      _3956_recIdents = _out680;
                      RAST._IExpr _out681;
                      DCOMP._IOwnership _out682;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3954_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3955_recOwned, expectedOwnership, out _out681, out _out682);
                      r = _out681;
                      resultingOwnership = _out682;
                      readIdents = _3956_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out683;
                  DCOMP._IOwnership _out684;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out685;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3946_b), _3946_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out683, out _out684, out _out685);
                  r = _out683;
                  resultingOwnership = _out684;
                  readIdents = _out685;
                }
              }
            } else if (_source136.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3957___mcc_h227 = _source136.dtor_Passthrough_a0;
              Dafny.ISequence<DAST._IAttribute> _3958_attributes = _3711___mcc_h139;
              bool _3959_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3960_range = _3709___mcc_h137;
              DAST._IType _3961_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3962_nativeFromType;
                _3962_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3961_b, _3960_range);
                if (object.Equals(_3961_b, _3398_toTpe)) {
                  RAST._IExpr _3963_recursiveGen;
                  DCOMP._IOwnership _3964_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3965_recIdents;
                  RAST._IExpr _out686;
                  DCOMP._IOwnership _out687;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out688;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out686, out _out687, out _out688);
                  _3963_recursiveGen = _out686;
                  _3964_recOwned = _out687;
                  _3965_recIdents = _out688;
                  readIdents = _3965_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source153 = _3962_nativeFromType;
                  if (_source153.is_None) {
                    if (_3959_erase) {
                      r = _3963_recursiveGen;
                    } else {
                      r = (_3963_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out689;
                    DCOMP._IOwnership _out690;
                    DCOMP.COMP.FromOwnership(r, _3964_recOwned, expectedOwnership, out _out689, out _out690);
                    r = _out689;
                    resultingOwnership = _out690;
                  } else {
                    RAST._IType _3966___mcc_h1423 = _source153.dtor_value;
                    RAST._IType _3967_v = _3966___mcc_h1423;
                    RAST._IType _3968_toTpeRust;
                    RAST._IType _out691;
                    _out691 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3968_toTpeRust = _out691;
                    r = (((_3963_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3968_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out692;
                    DCOMP._IOwnership _out693;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out692, out _out693);
                    r = _out692;
                    resultingOwnership = _out693;
                  }
                } else {
                  if ((_3962_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3969_recursiveGen;
                      DCOMP._IOwnership _3970_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3971_recIdents;
                      RAST._IExpr _out694;
                      DCOMP._IOwnership _out695;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out696;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out694, out _out695, out _out696);
                      _3969_recursiveGen = _out694;
                      _3970_recOwned = _out695;
                      _3971_recIdents = _out696;
                      RAST._IExpr _out697;
                      DCOMP._IOwnership _out698;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3969_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3970_recOwned, expectedOwnership, out _out697, out _out698);
                      r = _out697;
                      resultingOwnership = _out698;
                      readIdents = _3971_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out699;
                  DCOMP._IOwnership _out700;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out701;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3961_b), _3961_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out699, out _out700, out _out701);
                  r = _out699;
                  resultingOwnership = _out700;
                  readIdents = _out701;
                }
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3972___mcc_h230 = _source136.dtor_TypeArg_a0;
              Dafny.ISequence<DAST._IAttribute> _3973_attributes = _3711___mcc_h139;
              bool _3974_erase = _3710___mcc_h138;
              DAST._INewtypeRange _3975_range = _3709___mcc_h137;
              DAST._IType _3976_b = _3708___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _3977_nativeFromType;
                _3977_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3976_b, _3975_range);
                if (object.Equals(_3976_b, _3398_toTpe)) {
                  RAST._IExpr _3978_recursiveGen;
                  DCOMP._IOwnership _3979_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3980_recIdents;
                  RAST._IExpr _out702;
                  DCOMP._IOwnership _out703;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out704;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out702, out _out703, out _out704);
                  _3978_recursiveGen = _out702;
                  _3979_recOwned = _out703;
                  _3980_recIdents = _out704;
                  readIdents = _3980_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source154 = _3977_nativeFromType;
                  if (_source154.is_None) {
                    if (_3974_erase) {
                      r = _3978_recursiveGen;
                    } else {
                      r = (_3978_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out705;
                    DCOMP._IOwnership _out706;
                    DCOMP.COMP.FromOwnership(r, _3979_recOwned, expectedOwnership, out _out705, out _out706);
                    r = _out705;
                    resultingOwnership = _out706;
                  } else {
                    RAST._IType _3981___mcc_h1424 = _source154.dtor_value;
                    RAST._IType _3982_v = _3981___mcc_h1424;
                    RAST._IType _3983_toTpeRust;
                    RAST._IType _out707;
                    _out707 = DCOMP.COMP.GenType(_3398_toTpe, false, false);
                    _3983_toTpeRust = _out707;
                    r = (((_3978_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3983_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out708;
                    DCOMP._IOwnership _out709;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out708, out _out709);
                    r = _out708;
                    resultingOwnership = _out709;
                  }
                } else {
                  if ((_3977_nativeFromType).is_Some) {
                    if (object.Equals(_3398_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _3984_recursiveGen;
                      DCOMP._IOwnership _3985_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3986_recIdents;
                      RAST._IExpr _out710;
                      DCOMP._IOwnership _out711;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out712;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out710, out _out711, out _out712);
                      _3984_recursiveGen = _out710;
                      _3985_recOwned = _out711;
                      _3986_recIdents = _out712;
                      RAST._IExpr _out713;
                      DCOMP._IOwnership _out714;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3984_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3985_recOwned, expectedOwnership, out _out713, out _out714);
                      r = _out713;
                      resultingOwnership = _out714;
                      readIdents = _3986_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out715;
                  DCOMP._IOwnership _out716;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out717;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _3976_b), _3976_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out715, out _out716, out _out717);
                  r = _out715;
                  resultingOwnership = _out716;
                  readIdents = _out717;
                }
              }
            }
          }
        } else if (_source124.is_Nullable) {
          DAST._IType _3987___mcc_h233 = _source124.dtor_Nullable_a0;
          DAST._IType _source155 = _3403___mcc_h1;
          if (_source155.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3988___mcc_h237 = _source155.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _3989___mcc_h238 = _source155.dtor_typeArgs;
            DAST._IResolvedType _3990___mcc_h239 = _source155.dtor_resolved;
            DAST._IResolvedType _source156 = _3990___mcc_h239;
            if (_source156.is_Datatype) {
              DAST._IDatatypeType _3991___mcc_h246 = _source156.dtor_datatypeType;
              {
                RAST._IExpr _3992_recursiveGen;
                DCOMP._IOwnership _3993_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3994_recIdents;
                RAST._IExpr _out718;
                DCOMP._IOwnership _out719;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out720;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out718, out _out719, out _out720);
                _3992_recursiveGen = _out718;
                _3993_recOwned = _out719;
                _3994_recIdents = _out720;
                r = _3992_recursiveGen;
                if (object.Equals(_3993_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out721;
                DCOMP._IOwnership _out722;
                DCOMP.COMP.FromOwnership(r, _3993_recOwned, expectedOwnership, out _out721, out _out722);
                r = _out721;
                resultingOwnership = _out722;
                readIdents = _3994_recIdents;
              }
            } else if (_source156.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3995___mcc_h249 = _source156.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _3996___mcc_h250 = _source156.dtor_attributes;
              {
                RAST._IExpr _3997_recursiveGen;
                DCOMP._IOwnership _3998_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3999_recIdents;
                RAST._IExpr _out723;
                DCOMP._IOwnership _out724;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out725;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out723, out _out724, out _out725);
                _3997_recursiveGen = _out723;
                _3998_recOwned = _out724;
                _3999_recIdents = _out725;
                r = _3997_recursiveGen;
                if (object.Equals(_3998_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out726;
                DCOMP._IOwnership _out727;
                DCOMP.COMP.FromOwnership(r, _3998_recOwned, expectedOwnership, out _out726, out _out727);
                r = _out726;
                resultingOwnership = _out727;
                readIdents = _3999_recIdents;
              }
            } else {
              DAST._IType _4000___mcc_h255 = _source156.dtor_baseType;
              DAST._INewtypeRange _4001___mcc_h256 = _source156.dtor_range;
              bool _4002___mcc_h257 = _source156.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4003___mcc_h258 = _source156.dtor_attributes;
              {
                RAST._IExpr _4004_recursiveGen;
                DCOMP._IOwnership _4005_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4006_recIdents;
                RAST._IExpr _out728;
                DCOMP._IOwnership _out729;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out730;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out728, out _out729, out _out730);
                _4004_recursiveGen = _out728;
                _4005_recOwned = _out729;
                _4006_recIdents = _out730;
                r = _4004_recursiveGen;
                if (object.Equals(_4005_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out731;
                DCOMP._IOwnership _out732;
                DCOMP.COMP.FromOwnership(r, _4005_recOwned, expectedOwnership, out _out731, out _out732);
                r = _out731;
                resultingOwnership = _out732;
                readIdents = _4006_recIdents;
              }
            }
          } else if (_source155.is_Nullable) {
            DAST._IType _4007___mcc_h267 = _source155.dtor_Nullable_a0;
            {
              RAST._IExpr _4008_recursiveGen;
              DCOMP._IOwnership _4009_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4010_recIdents;
              RAST._IExpr _out733;
              DCOMP._IOwnership _out734;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out735;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out733, out _out734, out _out735);
              _4008_recursiveGen = _out733;
              _4009_recOwned = _out734;
              _4010_recIdents = _out735;
              r = _4008_recursiveGen;
              if (object.Equals(_4009_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out736;
              DCOMP._IOwnership _out737;
              DCOMP.COMP.FromOwnership(r, _4009_recOwned, expectedOwnership, out _out736, out _out737);
              r = _out736;
              resultingOwnership = _out737;
              readIdents = _4010_recIdents;
            }
          } else if (_source155.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4011___mcc_h270 = _source155.dtor_Tuple_a0;
            {
              RAST._IExpr _4012_recursiveGen;
              DCOMP._IOwnership _4013_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4014_recIdents;
              RAST._IExpr _out738;
              DCOMP._IOwnership _out739;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out740;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out738, out _out739, out _out740);
              _4012_recursiveGen = _out738;
              _4013_recOwned = _out739;
              _4014_recIdents = _out740;
              r = _4012_recursiveGen;
              if (object.Equals(_4013_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out741;
              DCOMP._IOwnership _out742;
              DCOMP.COMP.FromOwnership(r, _4013_recOwned, expectedOwnership, out _out741, out _out742);
              r = _out741;
              resultingOwnership = _out742;
              readIdents = _4014_recIdents;
            }
          } else if (_source155.is_Array) {
            DAST._IType _4015___mcc_h273 = _source155.dtor_element;
            BigInteger _4016___mcc_h274 = _source155.dtor_dims;
            {
              RAST._IExpr _4017_recursiveGen;
              DCOMP._IOwnership _4018_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4019_recIdents;
              RAST._IExpr _out743;
              DCOMP._IOwnership _out744;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out745;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out743, out _out744, out _out745);
              _4017_recursiveGen = _out743;
              _4018_recOwned = _out744;
              _4019_recIdents = _out745;
              r = _4017_recursiveGen;
              if (object.Equals(_4018_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out746;
              DCOMP._IOwnership _out747;
              DCOMP.COMP.FromOwnership(r, _4018_recOwned, expectedOwnership, out _out746, out _out747);
              r = _out746;
              resultingOwnership = _out747;
              readIdents = _4019_recIdents;
            }
          } else if (_source155.is_Seq) {
            DAST._IType _4020___mcc_h279 = _source155.dtor_element;
            {
              RAST._IExpr _4021_recursiveGen;
              DCOMP._IOwnership _4022_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4023_recIdents;
              RAST._IExpr _out748;
              DCOMP._IOwnership _out749;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out750;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out748, out _out749, out _out750);
              _4021_recursiveGen = _out748;
              _4022_recOwned = _out749;
              _4023_recIdents = _out750;
              r = _4021_recursiveGen;
              if (object.Equals(_4022_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out751;
              DCOMP._IOwnership _out752;
              DCOMP.COMP.FromOwnership(r, _4022_recOwned, expectedOwnership, out _out751, out _out752);
              r = _out751;
              resultingOwnership = _out752;
              readIdents = _4023_recIdents;
            }
          } else if (_source155.is_Set) {
            DAST._IType _4024___mcc_h282 = _source155.dtor_element;
            {
              RAST._IExpr _4025_recursiveGen;
              DCOMP._IOwnership _4026_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4027_recIdents;
              RAST._IExpr _out753;
              DCOMP._IOwnership _out754;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out755;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out753, out _out754, out _out755);
              _4025_recursiveGen = _out753;
              _4026_recOwned = _out754;
              _4027_recIdents = _out755;
              r = _4025_recursiveGen;
              if (object.Equals(_4026_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out756;
              DCOMP._IOwnership _out757;
              DCOMP.COMP.FromOwnership(r, _4026_recOwned, expectedOwnership, out _out756, out _out757);
              r = _out756;
              resultingOwnership = _out757;
              readIdents = _4027_recIdents;
            }
          } else if (_source155.is_Multiset) {
            DAST._IType _4028___mcc_h285 = _source155.dtor_element;
            {
              RAST._IExpr _4029_recursiveGen;
              DCOMP._IOwnership _4030_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4031_recIdents;
              RAST._IExpr _out758;
              DCOMP._IOwnership _out759;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out760;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out758, out _out759, out _out760);
              _4029_recursiveGen = _out758;
              _4030_recOwned = _out759;
              _4031_recIdents = _out760;
              r = _4029_recursiveGen;
              if (object.Equals(_4030_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out761;
              DCOMP._IOwnership _out762;
              DCOMP.COMP.FromOwnership(r, _4030_recOwned, expectedOwnership, out _out761, out _out762);
              r = _out761;
              resultingOwnership = _out762;
              readIdents = _4031_recIdents;
            }
          } else if (_source155.is_Map) {
            DAST._IType _4032___mcc_h288 = _source155.dtor_key;
            DAST._IType _4033___mcc_h289 = _source155.dtor_value;
            {
              RAST._IExpr _4034_recursiveGen;
              DCOMP._IOwnership _4035_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4036_recIdents;
              RAST._IExpr _out763;
              DCOMP._IOwnership _out764;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out765;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out763, out _out764, out _out765);
              _4034_recursiveGen = _out763;
              _4035_recOwned = _out764;
              _4036_recIdents = _out765;
              r = _4034_recursiveGen;
              if (object.Equals(_4035_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out766;
              DCOMP._IOwnership _out767;
              DCOMP.COMP.FromOwnership(r, _4035_recOwned, expectedOwnership, out _out766, out _out767);
              r = _out766;
              resultingOwnership = _out767;
              readIdents = _4036_recIdents;
            }
          } else if (_source155.is_SetBuilder) {
            DAST._IType _4037___mcc_h294 = _source155.dtor_element;
            {
              RAST._IExpr _4038_recursiveGen;
              DCOMP._IOwnership _4039_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4040_recIdents;
              RAST._IExpr _out768;
              DCOMP._IOwnership _out769;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out770;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out768, out _out769, out _out770);
              _4038_recursiveGen = _out768;
              _4039_recOwned = _out769;
              _4040_recIdents = _out770;
              r = _4038_recursiveGen;
              if (object.Equals(_4039_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out771;
              DCOMP._IOwnership _out772;
              DCOMP.COMP.FromOwnership(r, _4039_recOwned, expectedOwnership, out _out771, out _out772);
              r = _out771;
              resultingOwnership = _out772;
              readIdents = _4040_recIdents;
            }
          } else if (_source155.is_MapBuilder) {
            DAST._IType _4041___mcc_h297 = _source155.dtor_key;
            DAST._IType _4042___mcc_h298 = _source155.dtor_value;
            {
              RAST._IExpr _4043_recursiveGen;
              DCOMP._IOwnership _4044_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4045_recIdents;
              RAST._IExpr _out773;
              DCOMP._IOwnership _out774;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out775;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out773, out _out774, out _out775);
              _4043_recursiveGen = _out773;
              _4044_recOwned = _out774;
              _4045_recIdents = _out775;
              r = _4043_recursiveGen;
              if (object.Equals(_4044_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out776;
              DCOMP._IOwnership _out777;
              DCOMP.COMP.FromOwnership(r, _4044_recOwned, expectedOwnership, out _out776, out _out777);
              r = _out776;
              resultingOwnership = _out777;
              readIdents = _4045_recIdents;
            }
          } else if (_source155.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4046___mcc_h303 = _source155.dtor_args;
            DAST._IType _4047___mcc_h304 = _source155.dtor_result;
            {
              RAST._IExpr _4048_recursiveGen;
              DCOMP._IOwnership _4049_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4050_recIdents;
              RAST._IExpr _out778;
              DCOMP._IOwnership _out779;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out780;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out778, out _out779, out _out780);
              _4048_recursiveGen = _out778;
              _4049_recOwned = _out779;
              _4050_recIdents = _out780;
              r = _4048_recursiveGen;
              if (object.Equals(_4049_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out781;
              DCOMP._IOwnership _out782;
              DCOMP.COMP.FromOwnership(r, _4049_recOwned, expectedOwnership, out _out781, out _out782);
              r = _out781;
              resultingOwnership = _out782;
              readIdents = _4050_recIdents;
            }
          } else if (_source155.is_Primitive) {
            DAST._IPrimitive _4051___mcc_h309 = _source155.dtor_Primitive_a0;
            {
              RAST._IExpr _4052_recursiveGen;
              DCOMP._IOwnership _4053_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4054_recIdents;
              RAST._IExpr _out783;
              DCOMP._IOwnership _out784;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out785;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out783, out _out784, out _out785);
              _4052_recursiveGen = _out783;
              _4053_recOwned = _out784;
              _4054_recIdents = _out785;
              r = _4052_recursiveGen;
              if (object.Equals(_4053_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out786;
              DCOMP._IOwnership _out787;
              DCOMP.COMP.FromOwnership(r, _4053_recOwned, expectedOwnership, out _out786, out _out787);
              r = _out786;
              resultingOwnership = _out787;
              readIdents = _4054_recIdents;
            }
          } else if (_source155.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4055___mcc_h312 = _source155.dtor_Passthrough_a0;
            {
              RAST._IExpr _4056_recursiveGen;
              DCOMP._IOwnership _4057_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4058_recIdents;
              RAST._IExpr _out788;
              DCOMP._IOwnership _out789;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out790;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out788, out _out789, out _out790);
              _4056_recursiveGen = _out788;
              _4057_recOwned = _out789;
              _4058_recIdents = _out790;
              r = _4056_recursiveGen;
              if (object.Equals(_4057_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out791;
              DCOMP._IOwnership _out792;
              DCOMP.COMP.FromOwnership(r, _4057_recOwned, expectedOwnership, out _out791, out _out792);
              r = _out791;
              resultingOwnership = _out792;
              readIdents = _4058_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4059___mcc_h315 = _source155.dtor_TypeArg_a0;
            {
              RAST._IExpr _4060_recursiveGen;
              DCOMP._IOwnership _4061_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4062_recIdents;
              RAST._IExpr _out793;
              DCOMP._IOwnership _out794;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out795;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out793, out _out794, out _out795);
              _4060_recursiveGen = _out793;
              _4061_recOwned = _out794;
              _4062_recIdents = _out795;
              r = _4060_recursiveGen;
              if (object.Equals(_4061_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out796;
              DCOMP._IOwnership _out797;
              DCOMP.COMP.FromOwnership(r, _4061_recOwned, expectedOwnership, out _out796, out _out797);
              r = _out796;
              resultingOwnership = _out797;
              readIdents = _4062_recIdents;
            }
          }
        } else if (_source124.is_Tuple) {
          Dafny.ISequence<DAST._IType> _4063___mcc_h318 = _source124.dtor_Tuple_a0;
          DAST._IType _source157 = _3403___mcc_h1;
          if (_source157.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4064___mcc_h322 = _source157.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4065___mcc_h323 = _source157.dtor_typeArgs;
            DAST._IResolvedType _4066___mcc_h324 = _source157.dtor_resolved;
            DAST._IResolvedType _source158 = _4066___mcc_h324;
            if (_source158.is_Datatype) {
              DAST._IDatatypeType _4067___mcc_h328 = _source158.dtor_datatypeType;
              {
                RAST._IType _4068_fromTpeGen;
                RAST._IType _out798;
                _out798 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4068_fromTpeGen = _out798;
                RAST._IType _4069_toTpeGen;
                RAST._IType _out799;
                _out799 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4069_toTpeGen = _out799;
                RAST._IExpr _4070_recursiveGen;
                DCOMP._IOwnership _4071_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4072_recIdents;
                RAST._IExpr _out800;
                DCOMP._IOwnership _out801;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out802;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out800, out _out801, out _out802);
                _4070_recursiveGen = _out800;
                _4071_recOwned = _out801;
                _4072_recIdents = _out802;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4070_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4068_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4069_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out803;
                DCOMP._IOwnership _out804;
                DCOMP.COMP.FromOwnership(r, _4071_recOwned, expectedOwnership, out _out803, out _out804);
                r = _out803;
                resultingOwnership = _out804;
                readIdents = _4072_recIdents;
              }
            } else if (_source158.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4073___mcc_h330 = _source158.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4074___mcc_h331 = _source158.dtor_attributes;
              {
                RAST._IType _4075_fromTpeGen;
                RAST._IType _out805;
                _out805 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4075_fromTpeGen = _out805;
                RAST._IType _4076_toTpeGen;
                RAST._IType _out806;
                _out806 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4076_toTpeGen = _out806;
                RAST._IExpr _4077_recursiveGen;
                DCOMP._IOwnership _4078_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4079_recIdents;
                RAST._IExpr _out807;
                DCOMP._IOwnership _out808;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out809;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out807, out _out808, out _out809);
                _4077_recursiveGen = _out807;
                _4078_recOwned = _out808;
                _4079_recIdents = _out809;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4077_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4075_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4076_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out810;
                DCOMP._IOwnership _out811;
                DCOMP.COMP.FromOwnership(r, _4078_recOwned, expectedOwnership, out _out810, out _out811);
                r = _out810;
                resultingOwnership = _out811;
                readIdents = _4079_recIdents;
              }
            } else {
              DAST._IType _4080___mcc_h334 = _source158.dtor_baseType;
              DAST._INewtypeRange _4081___mcc_h335 = _source158.dtor_range;
              bool _4082___mcc_h336 = _source158.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4083___mcc_h337 = _source158.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4084_attributes = _4083___mcc_h337;
              bool _4085_erase = _4082___mcc_h336;
              DAST._INewtypeRange _4086_range = _4081___mcc_h335;
              DAST._IType _4087_b = _4080___mcc_h334;
              {
                Std.Wrappers._IOption<RAST._IType> _4088_nativeToType;
                _4088_nativeToType = DCOMP.COMP.NewtypeToRustType(_4087_b, _4086_range);
                if (object.Equals(_3397_fromTpe, _4087_b)) {
                  RAST._IExpr _4089_recursiveGen;
                  DCOMP._IOwnership _4090_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4091_recIdents;
                  RAST._IExpr _out812;
                  DCOMP._IOwnership _out813;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out814;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out812, out _out813, out _out814);
                  _4089_recursiveGen = _out812;
                  _4090_recOwned = _out813;
                  _4091_recIdents = _out814;
                  readIdents = _4091_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source159 = _4088_nativeToType;
                  if (_source159.is_None) {
                    if (_4085_erase) {
                      r = _4089_recursiveGen;
                    } else {
                      RAST._IType _4092_rhsType;
                      RAST._IType _out815;
                      _out815 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _4092_rhsType = _out815;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4092_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4089_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out816;
                    DCOMP._IOwnership _out817;
                    DCOMP.COMP.FromOwnership(r, _4090_recOwned, expectedOwnership, out _out816, out _out817);
                    r = _out816;
                    resultingOwnership = _out817;
                  } else {
                    RAST._IType _4093___mcc_h1425 = _source159.dtor_value;
                    RAST._IType _4094_v = _4093___mcc_h1425;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4089_recursiveGen, RAST.Expr.create_ExprFromType(_4094_v)));
                    RAST._IExpr _out818;
                    DCOMP._IOwnership _out819;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out818, out _out819);
                    r = _out818;
                    resultingOwnership = _out819;
                  }
                } else {
                  if ((_4088_nativeToType).is_Some) {
                    DAST._IType _source160 = _3397_fromTpe;
                    if (_source160.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4095___mcc_h1426 = _source160.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4096___mcc_h1427 = _source160.dtor_typeArgs;
                      DAST._IResolvedType _4097___mcc_h1428 = _source160.dtor_resolved;
                      DAST._IResolvedType _source161 = _4097___mcc_h1428;
                      if (_source161.is_Datatype) {
                        DAST._IDatatypeType _4098___mcc_h1432 = _source161.dtor_datatypeType;
                      } else if (_source161.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4099___mcc_h1434 = _source161.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4100___mcc_h1435 = _source161.dtor_attributes;
                      } else {
                        DAST._IType _4101___mcc_h1438 = _source161.dtor_baseType;
                        DAST._INewtypeRange _4102___mcc_h1439 = _source161.dtor_range;
                        bool _4103___mcc_h1440 = _source161.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4104___mcc_h1441 = _source161.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4105_attributes0 = _4104___mcc_h1441;
                        bool _4106_erase0 = _4103___mcc_h1440;
                        DAST._INewtypeRange _4107_range0 = _4102___mcc_h1439;
                        DAST._IType _4108_b0 = _4101___mcc_h1438;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4109_nativeFromType;
                          _4109_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4108_b0, _4107_range0);
                          if ((_4109_nativeFromType).is_Some) {
                            RAST._IExpr _4110_recursiveGen;
                            DCOMP._IOwnership _4111_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4112_recIdents;
                            RAST._IExpr _out820;
                            DCOMP._IOwnership _out821;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out822;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out820, out _out821, out _out822);
                            _4110_recursiveGen = _out820;
                            _4111_recOwned = _out821;
                            _4112_recIdents = _out822;
                            RAST._IExpr _out823;
                            DCOMP._IOwnership _out824;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4110_recursiveGen, (_4088_nativeToType).dtor_value), _4111_recOwned, expectedOwnership, out _out823, out _out824);
                            r = _out823;
                            resultingOwnership = _out824;
                            readIdents = _4112_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source160.is_Nullable) {
                      DAST._IType _4113___mcc_h1446 = _source160.dtor_Nullable_a0;
                    } else if (_source160.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4114___mcc_h1448 = _source160.dtor_Tuple_a0;
                    } else if (_source160.is_Array) {
                      DAST._IType _4115___mcc_h1450 = _source160.dtor_element;
                      BigInteger _4116___mcc_h1451 = _source160.dtor_dims;
                    } else if (_source160.is_Seq) {
                      DAST._IType _4117___mcc_h1454 = _source160.dtor_element;
                    } else if (_source160.is_Set) {
                      DAST._IType _4118___mcc_h1456 = _source160.dtor_element;
                    } else if (_source160.is_Multiset) {
                      DAST._IType _4119___mcc_h1458 = _source160.dtor_element;
                    } else if (_source160.is_Map) {
                      DAST._IType _4120___mcc_h1460 = _source160.dtor_key;
                      DAST._IType _4121___mcc_h1461 = _source160.dtor_value;
                    } else if (_source160.is_SetBuilder) {
                      DAST._IType _4122___mcc_h1464 = _source160.dtor_element;
                    } else if (_source160.is_MapBuilder) {
                      DAST._IType _4123___mcc_h1466 = _source160.dtor_key;
                      DAST._IType _4124___mcc_h1467 = _source160.dtor_value;
                    } else if (_source160.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4125___mcc_h1470 = _source160.dtor_args;
                      DAST._IType _4126___mcc_h1471 = _source160.dtor_result;
                    } else if (_source160.is_Primitive) {
                      DAST._IPrimitive _4127___mcc_h1474 = _source160.dtor_Primitive_a0;
                    } else if (_source160.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4128___mcc_h1476 = _source160.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4129___mcc_h1478 = _source160.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4130_recursiveGen;
                      DCOMP._IOwnership _4131_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4132_recIdents;
                      RAST._IExpr _out825;
                      DCOMP._IOwnership _out826;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out827;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out825, out _out826, out _out827);
                      _4130_recursiveGen = _out825;
                      _4131_recOwned = _out826;
                      _4132_recIdents = _out827;
                      RAST._IExpr _out828;
                      DCOMP._IOwnership _out829;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4130_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4088_nativeToType).dtor_value), _4131_recOwned, expectedOwnership, out _out828, out _out829);
                      r = _out828;
                      resultingOwnership = _out829;
                      readIdents = _4132_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out830;
                  DCOMP._IOwnership _out831;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out832;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _4087_b), _4087_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out830, out _out831, out _out832);
                  r = _out830;
                  resultingOwnership = _out831;
                  readIdents = _out832;
                }
              }
            }
          } else if (_source157.is_Nullable) {
            DAST._IType _4133___mcc_h342 = _source157.dtor_Nullable_a0;
            {
              RAST._IExpr _4134_recursiveGen;
              DCOMP._IOwnership _4135_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4136_recIdents;
              RAST._IExpr _out833;
              DCOMP._IOwnership _out834;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out835;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out833, out _out834, out _out835);
              _4134_recursiveGen = _out833;
              _4135_recOwned = _out834;
              _4136_recIdents = _out835;
              r = _4134_recursiveGen;
              if (object.Equals(_4135_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out836;
              DCOMP._IOwnership _out837;
              DCOMP.COMP.FromOwnership(r, _4135_recOwned, expectedOwnership, out _out836, out _out837);
              r = _out836;
              resultingOwnership = _out837;
              readIdents = _4136_recIdents;
            }
          } else if (_source157.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4137___mcc_h344 = _source157.dtor_Tuple_a0;
            {
              RAST._IType _4138_fromTpeGen;
              RAST._IType _out838;
              _out838 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4138_fromTpeGen = _out838;
              RAST._IType _4139_toTpeGen;
              RAST._IType _out839;
              _out839 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4139_toTpeGen = _out839;
              RAST._IExpr _4140_recursiveGen;
              DCOMP._IOwnership _4141_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4142_recIdents;
              RAST._IExpr _out840;
              DCOMP._IOwnership _out841;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out842;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out840, out _out841, out _out842);
              _4140_recursiveGen = _out840;
              _4141_recOwned = _out841;
              _4142_recIdents = _out842;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4140_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4138_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4139_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out843;
              DCOMP._IOwnership _out844;
              DCOMP.COMP.FromOwnership(r, _4141_recOwned, expectedOwnership, out _out843, out _out844);
              r = _out843;
              resultingOwnership = _out844;
              readIdents = _4142_recIdents;
            }
          } else if (_source157.is_Array) {
            DAST._IType _4143___mcc_h346 = _source157.dtor_element;
            BigInteger _4144___mcc_h347 = _source157.dtor_dims;
            {
              RAST._IType _4145_fromTpeGen;
              RAST._IType _out845;
              _out845 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4145_fromTpeGen = _out845;
              RAST._IType _4146_toTpeGen;
              RAST._IType _out846;
              _out846 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4146_toTpeGen = _out846;
              RAST._IExpr _4147_recursiveGen;
              DCOMP._IOwnership _4148_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4149_recIdents;
              RAST._IExpr _out847;
              DCOMP._IOwnership _out848;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out849;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out847, out _out848, out _out849);
              _4147_recursiveGen = _out847;
              _4148_recOwned = _out848;
              _4149_recIdents = _out849;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4147_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4145_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4146_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out850;
              DCOMP._IOwnership _out851;
              DCOMP.COMP.FromOwnership(r, _4148_recOwned, expectedOwnership, out _out850, out _out851);
              r = _out850;
              resultingOwnership = _out851;
              readIdents = _4149_recIdents;
            }
          } else if (_source157.is_Seq) {
            DAST._IType _4150___mcc_h350 = _source157.dtor_element;
            {
              RAST._IType _4151_fromTpeGen;
              RAST._IType _out852;
              _out852 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4151_fromTpeGen = _out852;
              RAST._IType _4152_toTpeGen;
              RAST._IType _out853;
              _out853 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4152_toTpeGen = _out853;
              RAST._IExpr _4153_recursiveGen;
              DCOMP._IOwnership _4154_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4155_recIdents;
              RAST._IExpr _out854;
              DCOMP._IOwnership _out855;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out856;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out854, out _out855, out _out856);
              _4153_recursiveGen = _out854;
              _4154_recOwned = _out855;
              _4155_recIdents = _out856;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4153_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4151_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4152_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out857;
              DCOMP._IOwnership _out858;
              DCOMP.COMP.FromOwnership(r, _4154_recOwned, expectedOwnership, out _out857, out _out858);
              r = _out857;
              resultingOwnership = _out858;
              readIdents = _4155_recIdents;
            }
          } else if (_source157.is_Set) {
            DAST._IType _4156___mcc_h352 = _source157.dtor_element;
            {
              RAST._IType _4157_fromTpeGen;
              RAST._IType _out859;
              _out859 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4157_fromTpeGen = _out859;
              RAST._IType _4158_toTpeGen;
              RAST._IType _out860;
              _out860 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4158_toTpeGen = _out860;
              RAST._IExpr _4159_recursiveGen;
              DCOMP._IOwnership _4160_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4161_recIdents;
              RAST._IExpr _out861;
              DCOMP._IOwnership _out862;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out863;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out861, out _out862, out _out863);
              _4159_recursiveGen = _out861;
              _4160_recOwned = _out862;
              _4161_recIdents = _out863;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4159_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4157_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4158_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out864;
              DCOMP._IOwnership _out865;
              DCOMP.COMP.FromOwnership(r, _4160_recOwned, expectedOwnership, out _out864, out _out865);
              r = _out864;
              resultingOwnership = _out865;
              readIdents = _4161_recIdents;
            }
          } else if (_source157.is_Multiset) {
            DAST._IType _4162___mcc_h354 = _source157.dtor_element;
            {
              RAST._IType _4163_fromTpeGen;
              RAST._IType _out866;
              _out866 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4163_fromTpeGen = _out866;
              RAST._IType _4164_toTpeGen;
              RAST._IType _out867;
              _out867 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4164_toTpeGen = _out867;
              RAST._IExpr _4165_recursiveGen;
              DCOMP._IOwnership _4166_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4167_recIdents;
              RAST._IExpr _out868;
              DCOMP._IOwnership _out869;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out870;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out868, out _out869, out _out870);
              _4165_recursiveGen = _out868;
              _4166_recOwned = _out869;
              _4167_recIdents = _out870;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4165_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4163_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4164_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out871;
              DCOMP._IOwnership _out872;
              DCOMP.COMP.FromOwnership(r, _4166_recOwned, expectedOwnership, out _out871, out _out872);
              r = _out871;
              resultingOwnership = _out872;
              readIdents = _4167_recIdents;
            }
          } else if (_source157.is_Map) {
            DAST._IType _4168___mcc_h356 = _source157.dtor_key;
            DAST._IType _4169___mcc_h357 = _source157.dtor_value;
            {
              RAST._IType _4170_fromTpeGen;
              RAST._IType _out873;
              _out873 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4170_fromTpeGen = _out873;
              RAST._IType _4171_toTpeGen;
              RAST._IType _out874;
              _out874 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4171_toTpeGen = _out874;
              RAST._IExpr _4172_recursiveGen;
              DCOMP._IOwnership _4173_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4174_recIdents;
              RAST._IExpr _out875;
              DCOMP._IOwnership _out876;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out877;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out875, out _out876, out _out877);
              _4172_recursiveGen = _out875;
              _4173_recOwned = _out876;
              _4174_recIdents = _out877;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4172_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4170_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4171_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out878;
              DCOMP._IOwnership _out879;
              DCOMP.COMP.FromOwnership(r, _4173_recOwned, expectedOwnership, out _out878, out _out879);
              r = _out878;
              resultingOwnership = _out879;
              readIdents = _4174_recIdents;
            }
          } else if (_source157.is_SetBuilder) {
            DAST._IType _4175___mcc_h360 = _source157.dtor_element;
            {
              RAST._IType _4176_fromTpeGen;
              RAST._IType _out880;
              _out880 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4176_fromTpeGen = _out880;
              RAST._IType _4177_toTpeGen;
              RAST._IType _out881;
              _out881 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4177_toTpeGen = _out881;
              RAST._IExpr _4178_recursiveGen;
              DCOMP._IOwnership _4179_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4180_recIdents;
              RAST._IExpr _out882;
              DCOMP._IOwnership _out883;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out884;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out882, out _out883, out _out884);
              _4178_recursiveGen = _out882;
              _4179_recOwned = _out883;
              _4180_recIdents = _out884;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4178_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4176_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4177_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out885;
              DCOMP._IOwnership _out886;
              DCOMP.COMP.FromOwnership(r, _4179_recOwned, expectedOwnership, out _out885, out _out886);
              r = _out885;
              resultingOwnership = _out886;
              readIdents = _4180_recIdents;
            }
          } else if (_source157.is_MapBuilder) {
            DAST._IType _4181___mcc_h362 = _source157.dtor_key;
            DAST._IType _4182___mcc_h363 = _source157.dtor_value;
            {
              RAST._IType _4183_fromTpeGen;
              RAST._IType _out887;
              _out887 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4183_fromTpeGen = _out887;
              RAST._IType _4184_toTpeGen;
              RAST._IType _out888;
              _out888 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4184_toTpeGen = _out888;
              RAST._IExpr _4185_recursiveGen;
              DCOMP._IOwnership _4186_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4187_recIdents;
              RAST._IExpr _out889;
              DCOMP._IOwnership _out890;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out891;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out889, out _out890, out _out891);
              _4185_recursiveGen = _out889;
              _4186_recOwned = _out890;
              _4187_recIdents = _out891;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4185_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4183_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4184_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out892;
              DCOMP._IOwnership _out893;
              DCOMP.COMP.FromOwnership(r, _4186_recOwned, expectedOwnership, out _out892, out _out893);
              r = _out892;
              resultingOwnership = _out893;
              readIdents = _4187_recIdents;
            }
          } else if (_source157.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4188___mcc_h366 = _source157.dtor_args;
            DAST._IType _4189___mcc_h367 = _source157.dtor_result;
            {
              RAST._IType _4190_fromTpeGen;
              RAST._IType _out894;
              _out894 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4190_fromTpeGen = _out894;
              RAST._IType _4191_toTpeGen;
              RAST._IType _out895;
              _out895 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4191_toTpeGen = _out895;
              RAST._IExpr _4192_recursiveGen;
              DCOMP._IOwnership _4193_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4194_recIdents;
              RAST._IExpr _out896;
              DCOMP._IOwnership _out897;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out898;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out896, out _out897, out _out898);
              _4192_recursiveGen = _out896;
              _4193_recOwned = _out897;
              _4194_recIdents = _out898;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4192_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4190_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4191_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out899;
              DCOMP._IOwnership _out900;
              DCOMP.COMP.FromOwnership(r, _4193_recOwned, expectedOwnership, out _out899, out _out900);
              r = _out899;
              resultingOwnership = _out900;
              readIdents = _4194_recIdents;
            }
          } else if (_source157.is_Primitive) {
            DAST._IPrimitive _4195___mcc_h370 = _source157.dtor_Primitive_a0;
            {
              RAST._IType _4196_fromTpeGen;
              RAST._IType _out901;
              _out901 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4196_fromTpeGen = _out901;
              RAST._IType _4197_toTpeGen;
              RAST._IType _out902;
              _out902 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4197_toTpeGen = _out902;
              RAST._IExpr _4198_recursiveGen;
              DCOMP._IOwnership _4199_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4200_recIdents;
              RAST._IExpr _out903;
              DCOMP._IOwnership _out904;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out905;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out903, out _out904, out _out905);
              _4198_recursiveGen = _out903;
              _4199_recOwned = _out904;
              _4200_recIdents = _out905;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4198_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4196_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4197_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out906;
              DCOMP._IOwnership _out907;
              DCOMP.COMP.FromOwnership(r, _4199_recOwned, expectedOwnership, out _out906, out _out907);
              r = _out906;
              resultingOwnership = _out907;
              readIdents = _4200_recIdents;
            }
          } else if (_source157.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4201___mcc_h372 = _source157.dtor_Passthrough_a0;
            {
              RAST._IType _4202_fromTpeGen;
              RAST._IType _out908;
              _out908 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4202_fromTpeGen = _out908;
              RAST._IType _4203_toTpeGen;
              RAST._IType _out909;
              _out909 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4203_toTpeGen = _out909;
              RAST._IExpr _4204_recursiveGen;
              DCOMP._IOwnership _4205_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4206_recIdents;
              RAST._IExpr _out910;
              DCOMP._IOwnership _out911;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out912;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out910, out _out911, out _out912);
              _4204_recursiveGen = _out910;
              _4205_recOwned = _out911;
              _4206_recIdents = _out912;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4204_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4202_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4203_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out913;
              DCOMP._IOwnership _out914;
              DCOMP.COMP.FromOwnership(r, _4205_recOwned, expectedOwnership, out _out913, out _out914);
              r = _out913;
              resultingOwnership = _out914;
              readIdents = _4206_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4207___mcc_h374 = _source157.dtor_TypeArg_a0;
            {
              RAST._IType _4208_fromTpeGen;
              RAST._IType _out915;
              _out915 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4208_fromTpeGen = _out915;
              RAST._IType _4209_toTpeGen;
              RAST._IType _out916;
              _out916 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4209_toTpeGen = _out916;
              RAST._IExpr _4210_recursiveGen;
              DCOMP._IOwnership _4211_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4212_recIdents;
              RAST._IExpr _out917;
              DCOMP._IOwnership _out918;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out919;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out917, out _out918, out _out919);
              _4210_recursiveGen = _out917;
              _4211_recOwned = _out918;
              _4212_recIdents = _out919;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4210_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4208_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4209_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out920;
              DCOMP._IOwnership _out921;
              DCOMP.COMP.FromOwnership(r, _4211_recOwned, expectedOwnership, out _out920, out _out921);
              r = _out920;
              resultingOwnership = _out921;
              readIdents = _4212_recIdents;
            }
          }
        } else if (_source124.is_Array) {
          DAST._IType _4213___mcc_h376 = _source124.dtor_element;
          BigInteger _4214___mcc_h377 = _source124.dtor_dims;
          DAST._IType _source162 = _3403___mcc_h1;
          if (_source162.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4215___mcc_h384 = _source162.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4216___mcc_h385 = _source162.dtor_typeArgs;
            DAST._IResolvedType _4217___mcc_h386 = _source162.dtor_resolved;
            DAST._IResolvedType _source163 = _4217___mcc_h386;
            if (_source163.is_Datatype) {
              DAST._IDatatypeType _4218___mcc_h390 = _source163.dtor_datatypeType;
              {
                RAST._IType _4219_fromTpeGen;
                RAST._IType _out922;
                _out922 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4219_fromTpeGen = _out922;
                RAST._IType _4220_toTpeGen;
                RAST._IType _out923;
                _out923 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4220_toTpeGen = _out923;
                RAST._IExpr _4221_recursiveGen;
                DCOMP._IOwnership _4222_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4223_recIdents;
                RAST._IExpr _out924;
                DCOMP._IOwnership _out925;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out926;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out924, out _out925, out _out926);
                _4221_recursiveGen = _out924;
                _4222_recOwned = _out925;
                _4223_recIdents = _out926;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4221_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4219_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4220_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out927;
                DCOMP._IOwnership _out928;
                DCOMP.COMP.FromOwnership(r, _4222_recOwned, expectedOwnership, out _out927, out _out928);
                r = _out927;
                resultingOwnership = _out928;
                readIdents = _4223_recIdents;
              }
            } else if (_source163.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4224___mcc_h392 = _source163.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4225___mcc_h393 = _source163.dtor_attributes;
              {
                RAST._IType _4226_fromTpeGen;
                RAST._IType _out929;
                _out929 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4226_fromTpeGen = _out929;
                RAST._IType _4227_toTpeGen;
                RAST._IType _out930;
                _out930 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4227_toTpeGen = _out930;
                RAST._IExpr _4228_recursiveGen;
                DCOMP._IOwnership _4229_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4230_recIdents;
                RAST._IExpr _out931;
                DCOMP._IOwnership _out932;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out933;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out931, out _out932, out _out933);
                _4228_recursiveGen = _out931;
                _4229_recOwned = _out932;
                _4230_recIdents = _out933;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4228_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4226_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4227_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out934;
                DCOMP._IOwnership _out935;
                DCOMP.COMP.FromOwnership(r, _4229_recOwned, expectedOwnership, out _out934, out _out935);
                r = _out934;
                resultingOwnership = _out935;
                readIdents = _4230_recIdents;
              }
            } else {
              DAST._IType _4231___mcc_h396 = _source163.dtor_baseType;
              DAST._INewtypeRange _4232___mcc_h397 = _source163.dtor_range;
              bool _4233___mcc_h398 = _source163.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4234___mcc_h399 = _source163.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4235_attributes = _4234___mcc_h399;
              bool _4236_erase = _4233___mcc_h398;
              DAST._INewtypeRange _4237_range = _4232___mcc_h397;
              DAST._IType _4238_b = _4231___mcc_h396;
              {
                Std.Wrappers._IOption<RAST._IType> _4239_nativeToType;
                _4239_nativeToType = DCOMP.COMP.NewtypeToRustType(_4238_b, _4237_range);
                if (object.Equals(_3397_fromTpe, _4238_b)) {
                  RAST._IExpr _4240_recursiveGen;
                  DCOMP._IOwnership _4241_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4242_recIdents;
                  RAST._IExpr _out936;
                  DCOMP._IOwnership _out937;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out938;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out936, out _out937, out _out938);
                  _4240_recursiveGen = _out936;
                  _4241_recOwned = _out937;
                  _4242_recIdents = _out938;
                  readIdents = _4242_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source164 = _4239_nativeToType;
                  if (_source164.is_None) {
                    if (_4236_erase) {
                      r = _4240_recursiveGen;
                    } else {
                      RAST._IType _4243_rhsType;
                      RAST._IType _out939;
                      _out939 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _4243_rhsType = _out939;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4243_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4240_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out940;
                    DCOMP._IOwnership _out941;
                    DCOMP.COMP.FromOwnership(r, _4241_recOwned, expectedOwnership, out _out940, out _out941);
                    r = _out940;
                    resultingOwnership = _out941;
                  } else {
                    RAST._IType _4244___mcc_h1480 = _source164.dtor_value;
                    RAST._IType _4245_v = _4244___mcc_h1480;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4240_recursiveGen, RAST.Expr.create_ExprFromType(_4245_v)));
                    RAST._IExpr _out942;
                    DCOMP._IOwnership _out943;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out942, out _out943);
                    r = _out942;
                    resultingOwnership = _out943;
                  }
                } else {
                  if ((_4239_nativeToType).is_Some) {
                    DAST._IType _source165 = _3397_fromTpe;
                    if (_source165.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4246___mcc_h1481 = _source165.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4247___mcc_h1482 = _source165.dtor_typeArgs;
                      DAST._IResolvedType _4248___mcc_h1483 = _source165.dtor_resolved;
                      DAST._IResolvedType _source166 = _4248___mcc_h1483;
                      if (_source166.is_Datatype) {
                        DAST._IDatatypeType _4249___mcc_h1487 = _source166.dtor_datatypeType;
                      } else if (_source166.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4250___mcc_h1489 = _source166.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4251___mcc_h1490 = _source166.dtor_attributes;
                      } else {
                        DAST._IType _4252___mcc_h1493 = _source166.dtor_baseType;
                        DAST._INewtypeRange _4253___mcc_h1494 = _source166.dtor_range;
                        bool _4254___mcc_h1495 = _source166.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4255___mcc_h1496 = _source166.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4256_attributes0 = _4255___mcc_h1496;
                        bool _4257_erase0 = _4254___mcc_h1495;
                        DAST._INewtypeRange _4258_range0 = _4253___mcc_h1494;
                        DAST._IType _4259_b0 = _4252___mcc_h1493;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4260_nativeFromType;
                          _4260_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4259_b0, _4258_range0);
                          if ((_4260_nativeFromType).is_Some) {
                            RAST._IExpr _4261_recursiveGen;
                            DCOMP._IOwnership _4262_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4263_recIdents;
                            RAST._IExpr _out944;
                            DCOMP._IOwnership _out945;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out946;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out944, out _out945, out _out946);
                            _4261_recursiveGen = _out944;
                            _4262_recOwned = _out945;
                            _4263_recIdents = _out946;
                            RAST._IExpr _out947;
                            DCOMP._IOwnership _out948;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4261_recursiveGen, (_4239_nativeToType).dtor_value), _4262_recOwned, expectedOwnership, out _out947, out _out948);
                            r = _out947;
                            resultingOwnership = _out948;
                            readIdents = _4263_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source165.is_Nullable) {
                      DAST._IType _4264___mcc_h1501 = _source165.dtor_Nullable_a0;
                    } else if (_source165.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4265___mcc_h1503 = _source165.dtor_Tuple_a0;
                    } else if (_source165.is_Array) {
                      DAST._IType _4266___mcc_h1505 = _source165.dtor_element;
                      BigInteger _4267___mcc_h1506 = _source165.dtor_dims;
                    } else if (_source165.is_Seq) {
                      DAST._IType _4268___mcc_h1509 = _source165.dtor_element;
                    } else if (_source165.is_Set) {
                      DAST._IType _4269___mcc_h1511 = _source165.dtor_element;
                    } else if (_source165.is_Multiset) {
                      DAST._IType _4270___mcc_h1513 = _source165.dtor_element;
                    } else if (_source165.is_Map) {
                      DAST._IType _4271___mcc_h1515 = _source165.dtor_key;
                      DAST._IType _4272___mcc_h1516 = _source165.dtor_value;
                    } else if (_source165.is_SetBuilder) {
                      DAST._IType _4273___mcc_h1519 = _source165.dtor_element;
                    } else if (_source165.is_MapBuilder) {
                      DAST._IType _4274___mcc_h1521 = _source165.dtor_key;
                      DAST._IType _4275___mcc_h1522 = _source165.dtor_value;
                    } else if (_source165.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4276___mcc_h1525 = _source165.dtor_args;
                      DAST._IType _4277___mcc_h1526 = _source165.dtor_result;
                    } else if (_source165.is_Primitive) {
                      DAST._IPrimitive _4278___mcc_h1529 = _source165.dtor_Primitive_a0;
                    } else if (_source165.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4279___mcc_h1531 = _source165.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4280___mcc_h1533 = _source165.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4281_recursiveGen;
                      DCOMP._IOwnership _4282_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4283_recIdents;
                      RAST._IExpr _out949;
                      DCOMP._IOwnership _out950;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out951;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out949, out _out950, out _out951);
                      _4281_recursiveGen = _out949;
                      _4282_recOwned = _out950;
                      _4283_recIdents = _out951;
                      RAST._IExpr _out952;
                      DCOMP._IOwnership _out953;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4281_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4239_nativeToType).dtor_value), _4282_recOwned, expectedOwnership, out _out952, out _out953);
                      r = _out952;
                      resultingOwnership = _out953;
                      readIdents = _4283_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out954;
                  DCOMP._IOwnership _out955;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out956;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _4238_b), _4238_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out954, out _out955, out _out956);
                  r = _out954;
                  resultingOwnership = _out955;
                  readIdents = _out956;
                }
              }
            }
          } else if (_source162.is_Nullable) {
            DAST._IType _4284___mcc_h404 = _source162.dtor_Nullable_a0;
            {
              RAST._IExpr _4285_recursiveGen;
              DCOMP._IOwnership _4286_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4287_recIdents;
              RAST._IExpr _out957;
              DCOMP._IOwnership _out958;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out959;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out957, out _out958, out _out959);
              _4285_recursiveGen = _out957;
              _4286_recOwned = _out958;
              _4287_recIdents = _out959;
              r = _4285_recursiveGen;
              if (object.Equals(_4286_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out960;
              DCOMP._IOwnership _out961;
              DCOMP.COMP.FromOwnership(r, _4286_recOwned, expectedOwnership, out _out960, out _out961);
              r = _out960;
              resultingOwnership = _out961;
              readIdents = _4287_recIdents;
            }
          } else if (_source162.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4288___mcc_h406 = _source162.dtor_Tuple_a0;
            {
              RAST._IType _4289_fromTpeGen;
              RAST._IType _out962;
              _out962 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4289_fromTpeGen = _out962;
              RAST._IType _4290_toTpeGen;
              RAST._IType _out963;
              _out963 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4290_toTpeGen = _out963;
              RAST._IExpr _4291_recursiveGen;
              DCOMP._IOwnership _4292_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4293_recIdents;
              RAST._IExpr _out964;
              DCOMP._IOwnership _out965;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out966;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out964, out _out965, out _out966);
              _4291_recursiveGen = _out964;
              _4292_recOwned = _out965;
              _4293_recIdents = _out966;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4291_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4289_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4290_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out967;
              DCOMP._IOwnership _out968;
              DCOMP.COMP.FromOwnership(r, _4292_recOwned, expectedOwnership, out _out967, out _out968);
              r = _out967;
              resultingOwnership = _out968;
              readIdents = _4293_recIdents;
            }
          } else if (_source162.is_Array) {
            DAST._IType _4294___mcc_h408 = _source162.dtor_element;
            BigInteger _4295___mcc_h409 = _source162.dtor_dims;
            {
              RAST._IType _4296_fromTpeGen;
              RAST._IType _out969;
              _out969 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4296_fromTpeGen = _out969;
              RAST._IType _4297_toTpeGen;
              RAST._IType _out970;
              _out970 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4297_toTpeGen = _out970;
              RAST._IExpr _4298_recursiveGen;
              DCOMP._IOwnership _4299_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4300_recIdents;
              RAST._IExpr _out971;
              DCOMP._IOwnership _out972;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out973;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out971, out _out972, out _out973);
              _4298_recursiveGen = _out971;
              _4299_recOwned = _out972;
              _4300_recIdents = _out973;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4298_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4296_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4297_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out974;
              DCOMP._IOwnership _out975;
              DCOMP.COMP.FromOwnership(r, _4299_recOwned, expectedOwnership, out _out974, out _out975);
              r = _out974;
              resultingOwnership = _out975;
              readIdents = _4300_recIdents;
            }
          } else if (_source162.is_Seq) {
            DAST._IType _4301___mcc_h412 = _source162.dtor_element;
            {
              RAST._IType _4302_fromTpeGen;
              RAST._IType _out976;
              _out976 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4302_fromTpeGen = _out976;
              RAST._IType _4303_toTpeGen;
              RAST._IType _out977;
              _out977 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4303_toTpeGen = _out977;
              RAST._IExpr _4304_recursiveGen;
              DCOMP._IOwnership _4305_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4306_recIdents;
              RAST._IExpr _out978;
              DCOMP._IOwnership _out979;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out980;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out978, out _out979, out _out980);
              _4304_recursiveGen = _out978;
              _4305_recOwned = _out979;
              _4306_recIdents = _out980;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4304_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4302_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4303_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out981;
              DCOMP._IOwnership _out982;
              DCOMP.COMP.FromOwnership(r, _4305_recOwned, expectedOwnership, out _out981, out _out982);
              r = _out981;
              resultingOwnership = _out982;
              readIdents = _4306_recIdents;
            }
          } else if (_source162.is_Set) {
            DAST._IType _4307___mcc_h414 = _source162.dtor_element;
            {
              RAST._IType _4308_fromTpeGen;
              RAST._IType _out983;
              _out983 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4308_fromTpeGen = _out983;
              RAST._IType _4309_toTpeGen;
              RAST._IType _out984;
              _out984 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4309_toTpeGen = _out984;
              RAST._IExpr _4310_recursiveGen;
              DCOMP._IOwnership _4311_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4312_recIdents;
              RAST._IExpr _out985;
              DCOMP._IOwnership _out986;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out987;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out985, out _out986, out _out987);
              _4310_recursiveGen = _out985;
              _4311_recOwned = _out986;
              _4312_recIdents = _out987;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4310_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4308_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4309_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out988;
              DCOMP._IOwnership _out989;
              DCOMP.COMP.FromOwnership(r, _4311_recOwned, expectedOwnership, out _out988, out _out989);
              r = _out988;
              resultingOwnership = _out989;
              readIdents = _4312_recIdents;
            }
          } else if (_source162.is_Multiset) {
            DAST._IType _4313___mcc_h416 = _source162.dtor_element;
            {
              RAST._IType _4314_fromTpeGen;
              RAST._IType _out990;
              _out990 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4314_fromTpeGen = _out990;
              RAST._IType _4315_toTpeGen;
              RAST._IType _out991;
              _out991 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4315_toTpeGen = _out991;
              RAST._IExpr _4316_recursiveGen;
              DCOMP._IOwnership _4317_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4318_recIdents;
              RAST._IExpr _out992;
              DCOMP._IOwnership _out993;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out994;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out992, out _out993, out _out994);
              _4316_recursiveGen = _out992;
              _4317_recOwned = _out993;
              _4318_recIdents = _out994;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4316_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4314_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4315_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out995;
              DCOMP._IOwnership _out996;
              DCOMP.COMP.FromOwnership(r, _4317_recOwned, expectedOwnership, out _out995, out _out996);
              r = _out995;
              resultingOwnership = _out996;
              readIdents = _4318_recIdents;
            }
          } else if (_source162.is_Map) {
            DAST._IType _4319___mcc_h418 = _source162.dtor_key;
            DAST._IType _4320___mcc_h419 = _source162.dtor_value;
            {
              RAST._IType _4321_fromTpeGen;
              RAST._IType _out997;
              _out997 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4321_fromTpeGen = _out997;
              RAST._IType _4322_toTpeGen;
              RAST._IType _out998;
              _out998 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4322_toTpeGen = _out998;
              RAST._IExpr _4323_recursiveGen;
              DCOMP._IOwnership _4324_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4325_recIdents;
              RAST._IExpr _out999;
              DCOMP._IOwnership _out1000;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1001;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out999, out _out1000, out _out1001);
              _4323_recursiveGen = _out999;
              _4324_recOwned = _out1000;
              _4325_recIdents = _out1001;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4323_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4321_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4322_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1002;
              DCOMP._IOwnership _out1003;
              DCOMP.COMP.FromOwnership(r, _4324_recOwned, expectedOwnership, out _out1002, out _out1003);
              r = _out1002;
              resultingOwnership = _out1003;
              readIdents = _4325_recIdents;
            }
          } else if (_source162.is_SetBuilder) {
            DAST._IType _4326___mcc_h422 = _source162.dtor_element;
            {
              RAST._IType _4327_fromTpeGen;
              RAST._IType _out1004;
              _out1004 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4327_fromTpeGen = _out1004;
              RAST._IType _4328_toTpeGen;
              RAST._IType _out1005;
              _out1005 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4328_toTpeGen = _out1005;
              RAST._IExpr _4329_recursiveGen;
              DCOMP._IOwnership _4330_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4331_recIdents;
              RAST._IExpr _out1006;
              DCOMP._IOwnership _out1007;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1008;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1006, out _out1007, out _out1008);
              _4329_recursiveGen = _out1006;
              _4330_recOwned = _out1007;
              _4331_recIdents = _out1008;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4329_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4327_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4328_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1009;
              DCOMP._IOwnership _out1010;
              DCOMP.COMP.FromOwnership(r, _4330_recOwned, expectedOwnership, out _out1009, out _out1010);
              r = _out1009;
              resultingOwnership = _out1010;
              readIdents = _4331_recIdents;
            }
          } else if (_source162.is_MapBuilder) {
            DAST._IType _4332___mcc_h424 = _source162.dtor_key;
            DAST._IType _4333___mcc_h425 = _source162.dtor_value;
            {
              RAST._IType _4334_fromTpeGen;
              RAST._IType _out1011;
              _out1011 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4334_fromTpeGen = _out1011;
              RAST._IType _4335_toTpeGen;
              RAST._IType _out1012;
              _out1012 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4335_toTpeGen = _out1012;
              RAST._IExpr _4336_recursiveGen;
              DCOMP._IOwnership _4337_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4338_recIdents;
              RAST._IExpr _out1013;
              DCOMP._IOwnership _out1014;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1015;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1013, out _out1014, out _out1015);
              _4336_recursiveGen = _out1013;
              _4337_recOwned = _out1014;
              _4338_recIdents = _out1015;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4336_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4334_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4335_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1016;
              DCOMP._IOwnership _out1017;
              DCOMP.COMP.FromOwnership(r, _4337_recOwned, expectedOwnership, out _out1016, out _out1017);
              r = _out1016;
              resultingOwnership = _out1017;
              readIdents = _4338_recIdents;
            }
          } else if (_source162.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4339___mcc_h428 = _source162.dtor_args;
            DAST._IType _4340___mcc_h429 = _source162.dtor_result;
            {
              RAST._IType _4341_fromTpeGen;
              RAST._IType _out1018;
              _out1018 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4341_fromTpeGen = _out1018;
              RAST._IType _4342_toTpeGen;
              RAST._IType _out1019;
              _out1019 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4342_toTpeGen = _out1019;
              RAST._IExpr _4343_recursiveGen;
              DCOMP._IOwnership _4344_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4345_recIdents;
              RAST._IExpr _out1020;
              DCOMP._IOwnership _out1021;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1022;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1020, out _out1021, out _out1022);
              _4343_recursiveGen = _out1020;
              _4344_recOwned = _out1021;
              _4345_recIdents = _out1022;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4343_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4341_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4342_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1023;
              DCOMP._IOwnership _out1024;
              DCOMP.COMP.FromOwnership(r, _4344_recOwned, expectedOwnership, out _out1023, out _out1024);
              r = _out1023;
              resultingOwnership = _out1024;
              readIdents = _4345_recIdents;
            }
          } else if (_source162.is_Primitive) {
            DAST._IPrimitive _4346___mcc_h432 = _source162.dtor_Primitive_a0;
            {
              RAST._IType _4347_fromTpeGen;
              RAST._IType _out1025;
              _out1025 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4347_fromTpeGen = _out1025;
              RAST._IType _4348_toTpeGen;
              RAST._IType _out1026;
              _out1026 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4348_toTpeGen = _out1026;
              RAST._IExpr _4349_recursiveGen;
              DCOMP._IOwnership _4350_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4351_recIdents;
              RAST._IExpr _out1027;
              DCOMP._IOwnership _out1028;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1029;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1027, out _out1028, out _out1029);
              _4349_recursiveGen = _out1027;
              _4350_recOwned = _out1028;
              _4351_recIdents = _out1029;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4349_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4347_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4348_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1030;
              DCOMP._IOwnership _out1031;
              DCOMP.COMP.FromOwnership(r, _4350_recOwned, expectedOwnership, out _out1030, out _out1031);
              r = _out1030;
              resultingOwnership = _out1031;
              readIdents = _4351_recIdents;
            }
          } else if (_source162.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4352___mcc_h434 = _source162.dtor_Passthrough_a0;
            {
              RAST._IType _4353_fromTpeGen;
              RAST._IType _out1032;
              _out1032 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4353_fromTpeGen = _out1032;
              RAST._IType _4354_toTpeGen;
              RAST._IType _out1033;
              _out1033 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4354_toTpeGen = _out1033;
              RAST._IExpr _4355_recursiveGen;
              DCOMP._IOwnership _4356_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4357_recIdents;
              RAST._IExpr _out1034;
              DCOMP._IOwnership _out1035;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1036;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1034, out _out1035, out _out1036);
              _4355_recursiveGen = _out1034;
              _4356_recOwned = _out1035;
              _4357_recIdents = _out1036;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4355_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4353_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4354_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1037;
              DCOMP._IOwnership _out1038;
              DCOMP.COMP.FromOwnership(r, _4356_recOwned, expectedOwnership, out _out1037, out _out1038);
              r = _out1037;
              resultingOwnership = _out1038;
              readIdents = _4357_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4358___mcc_h436 = _source162.dtor_TypeArg_a0;
            {
              RAST._IType _4359_fromTpeGen;
              RAST._IType _out1039;
              _out1039 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4359_fromTpeGen = _out1039;
              RAST._IType _4360_toTpeGen;
              RAST._IType _out1040;
              _out1040 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4360_toTpeGen = _out1040;
              RAST._IExpr _4361_recursiveGen;
              DCOMP._IOwnership _4362_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4363_recIdents;
              RAST._IExpr _out1041;
              DCOMP._IOwnership _out1042;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1043;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1041, out _out1042, out _out1043);
              _4361_recursiveGen = _out1041;
              _4362_recOwned = _out1042;
              _4363_recIdents = _out1043;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4361_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4359_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4360_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1044;
              DCOMP._IOwnership _out1045;
              DCOMP.COMP.FromOwnership(r, _4362_recOwned, expectedOwnership, out _out1044, out _out1045);
              r = _out1044;
              resultingOwnership = _out1045;
              readIdents = _4363_recIdents;
            }
          }
        } else if (_source124.is_Seq) {
          DAST._IType _4364___mcc_h438 = _source124.dtor_element;
          DAST._IType _source167 = _3403___mcc_h1;
          if (_source167.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4365___mcc_h442 = _source167.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4366___mcc_h443 = _source167.dtor_typeArgs;
            DAST._IResolvedType _4367___mcc_h444 = _source167.dtor_resolved;
            DAST._IResolvedType _source168 = _4367___mcc_h444;
            if (_source168.is_Datatype) {
              DAST._IDatatypeType _4368___mcc_h448 = _source168.dtor_datatypeType;
              {
                RAST._IType _4369_fromTpeGen;
                RAST._IType _out1046;
                _out1046 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4369_fromTpeGen = _out1046;
                RAST._IType _4370_toTpeGen;
                RAST._IType _out1047;
                _out1047 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4370_toTpeGen = _out1047;
                RAST._IExpr _4371_recursiveGen;
                DCOMP._IOwnership _4372_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4373_recIdents;
                RAST._IExpr _out1048;
                DCOMP._IOwnership _out1049;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1050;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1048, out _out1049, out _out1050);
                _4371_recursiveGen = _out1048;
                _4372_recOwned = _out1049;
                _4373_recIdents = _out1050;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4371_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4369_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4370_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1051;
                DCOMP._IOwnership _out1052;
                DCOMP.COMP.FromOwnership(r, _4372_recOwned, expectedOwnership, out _out1051, out _out1052);
                r = _out1051;
                resultingOwnership = _out1052;
                readIdents = _4373_recIdents;
              }
            } else if (_source168.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4374___mcc_h450 = _source168.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4375___mcc_h451 = _source168.dtor_attributes;
              {
                RAST._IType _4376_fromTpeGen;
                RAST._IType _out1053;
                _out1053 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4376_fromTpeGen = _out1053;
                RAST._IType _4377_toTpeGen;
                RAST._IType _out1054;
                _out1054 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4377_toTpeGen = _out1054;
                RAST._IExpr _4378_recursiveGen;
                DCOMP._IOwnership _4379_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4380_recIdents;
                RAST._IExpr _out1055;
                DCOMP._IOwnership _out1056;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1057;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1055, out _out1056, out _out1057);
                _4378_recursiveGen = _out1055;
                _4379_recOwned = _out1056;
                _4380_recIdents = _out1057;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4378_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4376_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4377_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1058;
                DCOMP._IOwnership _out1059;
                DCOMP.COMP.FromOwnership(r, _4379_recOwned, expectedOwnership, out _out1058, out _out1059);
                r = _out1058;
                resultingOwnership = _out1059;
                readIdents = _4380_recIdents;
              }
            } else {
              DAST._IType _4381___mcc_h454 = _source168.dtor_baseType;
              DAST._INewtypeRange _4382___mcc_h455 = _source168.dtor_range;
              bool _4383___mcc_h456 = _source168.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4384___mcc_h457 = _source168.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4385_attributes = _4384___mcc_h457;
              bool _4386_erase = _4383___mcc_h456;
              DAST._INewtypeRange _4387_range = _4382___mcc_h455;
              DAST._IType _4388_b = _4381___mcc_h454;
              {
                Std.Wrappers._IOption<RAST._IType> _4389_nativeToType;
                _4389_nativeToType = DCOMP.COMP.NewtypeToRustType(_4388_b, _4387_range);
                if (object.Equals(_3397_fromTpe, _4388_b)) {
                  RAST._IExpr _4390_recursiveGen;
                  DCOMP._IOwnership _4391_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4392_recIdents;
                  RAST._IExpr _out1060;
                  DCOMP._IOwnership _out1061;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1062;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1060, out _out1061, out _out1062);
                  _4390_recursiveGen = _out1060;
                  _4391_recOwned = _out1061;
                  _4392_recIdents = _out1062;
                  readIdents = _4392_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source169 = _4389_nativeToType;
                  if (_source169.is_None) {
                    if (_4386_erase) {
                      r = _4390_recursiveGen;
                    } else {
                      RAST._IType _4393_rhsType;
                      RAST._IType _out1063;
                      _out1063 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _4393_rhsType = _out1063;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4393_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4390_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1064;
                    DCOMP._IOwnership _out1065;
                    DCOMP.COMP.FromOwnership(r, _4391_recOwned, expectedOwnership, out _out1064, out _out1065);
                    r = _out1064;
                    resultingOwnership = _out1065;
                  } else {
                    RAST._IType _4394___mcc_h1535 = _source169.dtor_value;
                    RAST._IType _4395_v = _4394___mcc_h1535;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4390_recursiveGen, RAST.Expr.create_ExprFromType(_4395_v)));
                    RAST._IExpr _out1066;
                    DCOMP._IOwnership _out1067;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1066, out _out1067);
                    r = _out1066;
                    resultingOwnership = _out1067;
                  }
                } else {
                  if ((_4389_nativeToType).is_Some) {
                    DAST._IType _source170 = _3397_fromTpe;
                    if (_source170.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4396___mcc_h1536 = _source170.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4397___mcc_h1537 = _source170.dtor_typeArgs;
                      DAST._IResolvedType _4398___mcc_h1538 = _source170.dtor_resolved;
                      DAST._IResolvedType _source171 = _4398___mcc_h1538;
                      if (_source171.is_Datatype) {
                        DAST._IDatatypeType _4399___mcc_h1542 = _source171.dtor_datatypeType;
                      } else if (_source171.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4400___mcc_h1544 = _source171.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4401___mcc_h1545 = _source171.dtor_attributes;
                      } else {
                        DAST._IType _4402___mcc_h1548 = _source171.dtor_baseType;
                        DAST._INewtypeRange _4403___mcc_h1549 = _source171.dtor_range;
                        bool _4404___mcc_h1550 = _source171.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4405___mcc_h1551 = _source171.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4406_attributes0 = _4405___mcc_h1551;
                        bool _4407_erase0 = _4404___mcc_h1550;
                        DAST._INewtypeRange _4408_range0 = _4403___mcc_h1549;
                        DAST._IType _4409_b0 = _4402___mcc_h1548;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4410_nativeFromType;
                          _4410_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4409_b0, _4408_range0);
                          if ((_4410_nativeFromType).is_Some) {
                            RAST._IExpr _4411_recursiveGen;
                            DCOMP._IOwnership _4412_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4413_recIdents;
                            RAST._IExpr _out1068;
                            DCOMP._IOwnership _out1069;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1070;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1068, out _out1069, out _out1070);
                            _4411_recursiveGen = _out1068;
                            _4412_recOwned = _out1069;
                            _4413_recIdents = _out1070;
                            RAST._IExpr _out1071;
                            DCOMP._IOwnership _out1072;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4411_recursiveGen, (_4389_nativeToType).dtor_value), _4412_recOwned, expectedOwnership, out _out1071, out _out1072);
                            r = _out1071;
                            resultingOwnership = _out1072;
                            readIdents = _4413_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source170.is_Nullable) {
                      DAST._IType _4414___mcc_h1556 = _source170.dtor_Nullable_a0;
                    } else if (_source170.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4415___mcc_h1558 = _source170.dtor_Tuple_a0;
                    } else if (_source170.is_Array) {
                      DAST._IType _4416___mcc_h1560 = _source170.dtor_element;
                      BigInteger _4417___mcc_h1561 = _source170.dtor_dims;
                    } else if (_source170.is_Seq) {
                      DAST._IType _4418___mcc_h1564 = _source170.dtor_element;
                    } else if (_source170.is_Set) {
                      DAST._IType _4419___mcc_h1566 = _source170.dtor_element;
                    } else if (_source170.is_Multiset) {
                      DAST._IType _4420___mcc_h1568 = _source170.dtor_element;
                    } else if (_source170.is_Map) {
                      DAST._IType _4421___mcc_h1570 = _source170.dtor_key;
                      DAST._IType _4422___mcc_h1571 = _source170.dtor_value;
                    } else if (_source170.is_SetBuilder) {
                      DAST._IType _4423___mcc_h1574 = _source170.dtor_element;
                    } else if (_source170.is_MapBuilder) {
                      DAST._IType _4424___mcc_h1576 = _source170.dtor_key;
                      DAST._IType _4425___mcc_h1577 = _source170.dtor_value;
                    } else if (_source170.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4426___mcc_h1580 = _source170.dtor_args;
                      DAST._IType _4427___mcc_h1581 = _source170.dtor_result;
                    } else if (_source170.is_Primitive) {
                      DAST._IPrimitive _4428___mcc_h1584 = _source170.dtor_Primitive_a0;
                    } else if (_source170.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4429___mcc_h1586 = _source170.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4430___mcc_h1588 = _source170.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4431_recursiveGen;
                      DCOMP._IOwnership _4432_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4433_recIdents;
                      RAST._IExpr _out1073;
                      DCOMP._IOwnership _out1074;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1075;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1073, out _out1074, out _out1075);
                      _4431_recursiveGen = _out1073;
                      _4432_recOwned = _out1074;
                      _4433_recIdents = _out1075;
                      RAST._IExpr _out1076;
                      DCOMP._IOwnership _out1077;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4431_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4389_nativeToType).dtor_value), _4432_recOwned, expectedOwnership, out _out1076, out _out1077);
                      r = _out1076;
                      resultingOwnership = _out1077;
                      readIdents = _4433_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1078;
                  DCOMP._IOwnership _out1079;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1080;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _4388_b), _4388_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out1078, out _out1079, out _out1080);
                  r = _out1078;
                  resultingOwnership = _out1079;
                  readIdents = _out1080;
                }
              }
            }
          } else if (_source167.is_Nullable) {
            DAST._IType _4434___mcc_h462 = _source167.dtor_Nullable_a0;
            {
              RAST._IExpr _4435_recursiveGen;
              DCOMP._IOwnership _4436_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4437_recIdents;
              RAST._IExpr _out1081;
              DCOMP._IOwnership _out1082;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1083;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1081, out _out1082, out _out1083);
              _4435_recursiveGen = _out1081;
              _4436_recOwned = _out1082;
              _4437_recIdents = _out1083;
              r = _4435_recursiveGen;
              if (object.Equals(_4436_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1084;
              DCOMP._IOwnership _out1085;
              DCOMP.COMP.FromOwnership(r, _4436_recOwned, expectedOwnership, out _out1084, out _out1085);
              r = _out1084;
              resultingOwnership = _out1085;
              readIdents = _4437_recIdents;
            }
          } else if (_source167.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4438___mcc_h464 = _source167.dtor_Tuple_a0;
            {
              RAST._IType _4439_fromTpeGen;
              RAST._IType _out1086;
              _out1086 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4439_fromTpeGen = _out1086;
              RAST._IType _4440_toTpeGen;
              RAST._IType _out1087;
              _out1087 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4440_toTpeGen = _out1087;
              RAST._IExpr _4441_recursiveGen;
              DCOMP._IOwnership _4442_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4443_recIdents;
              RAST._IExpr _out1088;
              DCOMP._IOwnership _out1089;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1090;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1088, out _out1089, out _out1090);
              _4441_recursiveGen = _out1088;
              _4442_recOwned = _out1089;
              _4443_recIdents = _out1090;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4441_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4439_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4440_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1091;
              DCOMP._IOwnership _out1092;
              DCOMP.COMP.FromOwnership(r, _4442_recOwned, expectedOwnership, out _out1091, out _out1092);
              r = _out1091;
              resultingOwnership = _out1092;
              readIdents = _4443_recIdents;
            }
          } else if (_source167.is_Array) {
            DAST._IType _4444___mcc_h466 = _source167.dtor_element;
            BigInteger _4445___mcc_h467 = _source167.dtor_dims;
            {
              RAST._IType _4446_fromTpeGen;
              RAST._IType _out1093;
              _out1093 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4446_fromTpeGen = _out1093;
              RAST._IType _4447_toTpeGen;
              RAST._IType _out1094;
              _out1094 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4447_toTpeGen = _out1094;
              RAST._IExpr _4448_recursiveGen;
              DCOMP._IOwnership _4449_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4450_recIdents;
              RAST._IExpr _out1095;
              DCOMP._IOwnership _out1096;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1097;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1095, out _out1096, out _out1097);
              _4448_recursiveGen = _out1095;
              _4449_recOwned = _out1096;
              _4450_recIdents = _out1097;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4448_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4446_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4447_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1098;
              DCOMP._IOwnership _out1099;
              DCOMP.COMP.FromOwnership(r, _4449_recOwned, expectedOwnership, out _out1098, out _out1099);
              r = _out1098;
              resultingOwnership = _out1099;
              readIdents = _4450_recIdents;
            }
          } else if (_source167.is_Seq) {
            DAST._IType _4451___mcc_h470 = _source167.dtor_element;
            {
              RAST._IType _4452_fromTpeGen;
              RAST._IType _out1100;
              _out1100 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4452_fromTpeGen = _out1100;
              RAST._IType _4453_toTpeGen;
              RAST._IType _out1101;
              _out1101 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4453_toTpeGen = _out1101;
              RAST._IExpr _4454_recursiveGen;
              DCOMP._IOwnership _4455_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4456_recIdents;
              RAST._IExpr _out1102;
              DCOMP._IOwnership _out1103;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1104;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1102, out _out1103, out _out1104);
              _4454_recursiveGen = _out1102;
              _4455_recOwned = _out1103;
              _4456_recIdents = _out1104;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4454_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4452_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4453_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1105;
              DCOMP._IOwnership _out1106;
              DCOMP.COMP.FromOwnership(r, _4455_recOwned, expectedOwnership, out _out1105, out _out1106);
              r = _out1105;
              resultingOwnership = _out1106;
              readIdents = _4456_recIdents;
            }
          } else if (_source167.is_Set) {
            DAST._IType _4457___mcc_h472 = _source167.dtor_element;
            {
              RAST._IType _4458_fromTpeGen;
              RAST._IType _out1107;
              _out1107 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4458_fromTpeGen = _out1107;
              RAST._IType _4459_toTpeGen;
              RAST._IType _out1108;
              _out1108 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4459_toTpeGen = _out1108;
              RAST._IExpr _4460_recursiveGen;
              DCOMP._IOwnership _4461_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4462_recIdents;
              RAST._IExpr _out1109;
              DCOMP._IOwnership _out1110;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1111;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1109, out _out1110, out _out1111);
              _4460_recursiveGen = _out1109;
              _4461_recOwned = _out1110;
              _4462_recIdents = _out1111;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4460_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4458_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4459_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1112;
              DCOMP._IOwnership _out1113;
              DCOMP.COMP.FromOwnership(r, _4461_recOwned, expectedOwnership, out _out1112, out _out1113);
              r = _out1112;
              resultingOwnership = _out1113;
              readIdents = _4462_recIdents;
            }
          } else if (_source167.is_Multiset) {
            DAST._IType _4463___mcc_h474 = _source167.dtor_element;
            {
              RAST._IType _4464_fromTpeGen;
              RAST._IType _out1114;
              _out1114 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4464_fromTpeGen = _out1114;
              RAST._IType _4465_toTpeGen;
              RAST._IType _out1115;
              _out1115 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4465_toTpeGen = _out1115;
              RAST._IExpr _4466_recursiveGen;
              DCOMP._IOwnership _4467_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4468_recIdents;
              RAST._IExpr _out1116;
              DCOMP._IOwnership _out1117;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1118;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1116, out _out1117, out _out1118);
              _4466_recursiveGen = _out1116;
              _4467_recOwned = _out1117;
              _4468_recIdents = _out1118;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4466_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4464_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4465_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1119;
              DCOMP._IOwnership _out1120;
              DCOMP.COMP.FromOwnership(r, _4467_recOwned, expectedOwnership, out _out1119, out _out1120);
              r = _out1119;
              resultingOwnership = _out1120;
              readIdents = _4468_recIdents;
            }
          } else if (_source167.is_Map) {
            DAST._IType _4469___mcc_h476 = _source167.dtor_key;
            DAST._IType _4470___mcc_h477 = _source167.dtor_value;
            {
              RAST._IType _4471_fromTpeGen;
              RAST._IType _out1121;
              _out1121 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4471_fromTpeGen = _out1121;
              RAST._IType _4472_toTpeGen;
              RAST._IType _out1122;
              _out1122 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4472_toTpeGen = _out1122;
              RAST._IExpr _4473_recursiveGen;
              DCOMP._IOwnership _4474_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4475_recIdents;
              RAST._IExpr _out1123;
              DCOMP._IOwnership _out1124;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1125;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1123, out _out1124, out _out1125);
              _4473_recursiveGen = _out1123;
              _4474_recOwned = _out1124;
              _4475_recIdents = _out1125;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4473_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4471_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4472_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1126;
              DCOMP._IOwnership _out1127;
              DCOMP.COMP.FromOwnership(r, _4474_recOwned, expectedOwnership, out _out1126, out _out1127);
              r = _out1126;
              resultingOwnership = _out1127;
              readIdents = _4475_recIdents;
            }
          } else if (_source167.is_SetBuilder) {
            DAST._IType _4476___mcc_h480 = _source167.dtor_element;
            {
              RAST._IType _4477_fromTpeGen;
              RAST._IType _out1128;
              _out1128 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4477_fromTpeGen = _out1128;
              RAST._IType _4478_toTpeGen;
              RAST._IType _out1129;
              _out1129 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4478_toTpeGen = _out1129;
              RAST._IExpr _4479_recursiveGen;
              DCOMP._IOwnership _4480_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4481_recIdents;
              RAST._IExpr _out1130;
              DCOMP._IOwnership _out1131;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1132;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1130, out _out1131, out _out1132);
              _4479_recursiveGen = _out1130;
              _4480_recOwned = _out1131;
              _4481_recIdents = _out1132;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4479_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4477_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4478_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1133;
              DCOMP._IOwnership _out1134;
              DCOMP.COMP.FromOwnership(r, _4480_recOwned, expectedOwnership, out _out1133, out _out1134);
              r = _out1133;
              resultingOwnership = _out1134;
              readIdents = _4481_recIdents;
            }
          } else if (_source167.is_MapBuilder) {
            DAST._IType _4482___mcc_h482 = _source167.dtor_key;
            DAST._IType _4483___mcc_h483 = _source167.dtor_value;
            {
              RAST._IType _4484_fromTpeGen;
              RAST._IType _out1135;
              _out1135 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4484_fromTpeGen = _out1135;
              RAST._IType _4485_toTpeGen;
              RAST._IType _out1136;
              _out1136 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4485_toTpeGen = _out1136;
              RAST._IExpr _4486_recursiveGen;
              DCOMP._IOwnership _4487_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4488_recIdents;
              RAST._IExpr _out1137;
              DCOMP._IOwnership _out1138;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1139;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1137, out _out1138, out _out1139);
              _4486_recursiveGen = _out1137;
              _4487_recOwned = _out1138;
              _4488_recIdents = _out1139;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4486_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4484_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4485_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1140;
              DCOMP._IOwnership _out1141;
              DCOMP.COMP.FromOwnership(r, _4487_recOwned, expectedOwnership, out _out1140, out _out1141);
              r = _out1140;
              resultingOwnership = _out1141;
              readIdents = _4488_recIdents;
            }
          } else if (_source167.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4489___mcc_h486 = _source167.dtor_args;
            DAST._IType _4490___mcc_h487 = _source167.dtor_result;
            {
              RAST._IType _4491_fromTpeGen;
              RAST._IType _out1142;
              _out1142 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4491_fromTpeGen = _out1142;
              RAST._IType _4492_toTpeGen;
              RAST._IType _out1143;
              _out1143 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4492_toTpeGen = _out1143;
              RAST._IExpr _4493_recursiveGen;
              DCOMP._IOwnership _4494_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4495_recIdents;
              RAST._IExpr _out1144;
              DCOMP._IOwnership _out1145;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1146;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1144, out _out1145, out _out1146);
              _4493_recursiveGen = _out1144;
              _4494_recOwned = _out1145;
              _4495_recIdents = _out1146;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4493_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4491_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4492_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1147;
              DCOMP._IOwnership _out1148;
              DCOMP.COMP.FromOwnership(r, _4494_recOwned, expectedOwnership, out _out1147, out _out1148);
              r = _out1147;
              resultingOwnership = _out1148;
              readIdents = _4495_recIdents;
            }
          } else if (_source167.is_Primitive) {
            DAST._IPrimitive _4496___mcc_h490 = _source167.dtor_Primitive_a0;
            {
              RAST._IType _4497_fromTpeGen;
              RAST._IType _out1149;
              _out1149 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4497_fromTpeGen = _out1149;
              RAST._IType _4498_toTpeGen;
              RAST._IType _out1150;
              _out1150 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4498_toTpeGen = _out1150;
              RAST._IExpr _4499_recursiveGen;
              DCOMP._IOwnership _4500_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4501_recIdents;
              RAST._IExpr _out1151;
              DCOMP._IOwnership _out1152;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1153;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1151, out _out1152, out _out1153);
              _4499_recursiveGen = _out1151;
              _4500_recOwned = _out1152;
              _4501_recIdents = _out1153;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4499_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4497_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4498_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1154;
              DCOMP._IOwnership _out1155;
              DCOMP.COMP.FromOwnership(r, _4500_recOwned, expectedOwnership, out _out1154, out _out1155);
              r = _out1154;
              resultingOwnership = _out1155;
              readIdents = _4501_recIdents;
            }
          } else if (_source167.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4502___mcc_h492 = _source167.dtor_Passthrough_a0;
            {
              RAST._IType _4503_fromTpeGen;
              RAST._IType _out1156;
              _out1156 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4503_fromTpeGen = _out1156;
              RAST._IType _4504_toTpeGen;
              RAST._IType _out1157;
              _out1157 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4504_toTpeGen = _out1157;
              RAST._IExpr _4505_recursiveGen;
              DCOMP._IOwnership _4506_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4507_recIdents;
              RAST._IExpr _out1158;
              DCOMP._IOwnership _out1159;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1160;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1158, out _out1159, out _out1160);
              _4505_recursiveGen = _out1158;
              _4506_recOwned = _out1159;
              _4507_recIdents = _out1160;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4505_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4503_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4504_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1161;
              DCOMP._IOwnership _out1162;
              DCOMP.COMP.FromOwnership(r, _4506_recOwned, expectedOwnership, out _out1161, out _out1162);
              r = _out1161;
              resultingOwnership = _out1162;
              readIdents = _4507_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4508___mcc_h494 = _source167.dtor_TypeArg_a0;
            {
              RAST._IType _4509_fromTpeGen;
              RAST._IType _out1163;
              _out1163 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4509_fromTpeGen = _out1163;
              RAST._IType _4510_toTpeGen;
              RAST._IType _out1164;
              _out1164 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4510_toTpeGen = _out1164;
              RAST._IExpr _4511_recursiveGen;
              DCOMP._IOwnership _4512_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4513_recIdents;
              RAST._IExpr _out1165;
              DCOMP._IOwnership _out1166;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1167;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1165, out _out1166, out _out1167);
              _4511_recursiveGen = _out1165;
              _4512_recOwned = _out1166;
              _4513_recIdents = _out1167;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4511_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4509_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4510_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1168;
              DCOMP._IOwnership _out1169;
              DCOMP.COMP.FromOwnership(r, _4512_recOwned, expectedOwnership, out _out1168, out _out1169);
              r = _out1168;
              resultingOwnership = _out1169;
              readIdents = _4513_recIdents;
            }
          }
        } else if (_source124.is_Set) {
          DAST._IType _4514___mcc_h496 = _source124.dtor_element;
          DAST._IType _source172 = _3403___mcc_h1;
          if (_source172.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4515___mcc_h500 = _source172.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4516___mcc_h501 = _source172.dtor_typeArgs;
            DAST._IResolvedType _4517___mcc_h502 = _source172.dtor_resolved;
            DAST._IResolvedType _source173 = _4517___mcc_h502;
            if (_source173.is_Datatype) {
              DAST._IDatatypeType _4518___mcc_h506 = _source173.dtor_datatypeType;
              {
                RAST._IType _4519_fromTpeGen;
                RAST._IType _out1170;
                _out1170 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4519_fromTpeGen = _out1170;
                RAST._IType _4520_toTpeGen;
                RAST._IType _out1171;
                _out1171 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4520_toTpeGen = _out1171;
                RAST._IExpr _4521_recursiveGen;
                DCOMP._IOwnership _4522_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4523_recIdents;
                RAST._IExpr _out1172;
                DCOMP._IOwnership _out1173;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1174;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1172, out _out1173, out _out1174);
                _4521_recursiveGen = _out1172;
                _4522_recOwned = _out1173;
                _4523_recIdents = _out1174;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4521_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4519_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4520_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1175;
                DCOMP._IOwnership _out1176;
                DCOMP.COMP.FromOwnership(r, _4522_recOwned, expectedOwnership, out _out1175, out _out1176);
                r = _out1175;
                resultingOwnership = _out1176;
                readIdents = _4523_recIdents;
              }
            } else if (_source173.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4524___mcc_h508 = _source173.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4525___mcc_h509 = _source173.dtor_attributes;
              {
                RAST._IType _4526_fromTpeGen;
                RAST._IType _out1177;
                _out1177 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4526_fromTpeGen = _out1177;
                RAST._IType _4527_toTpeGen;
                RAST._IType _out1178;
                _out1178 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4527_toTpeGen = _out1178;
                RAST._IExpr _4528_recursiveGen;
                DCOMP._IOwnership _4529_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4530_recIdents;
                RAST._IExpr _out1179;
                DCOMP._IOwnership _out1180;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1181;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1179, out _out1180, out _out1181);
                _4528_recursiveGen = _out1179;
                _4529_recOwned = _out1180;
                _4530_recIdents = _out1181;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4528_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4526_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4527_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1182;
                DCOMP._IOwnership _out1183;
                DCOMP.COMP.FromOwnership(r, _4529_recOwned, expectedOwnership, out _out1182, out _out1183);
                r = _out1182;
                resultingOwnership = _out1183;
                readIdents = _4530_recIdents;
              }
            } else {
              DAST._IType _4531___mcc_h512 = _source173.dtor_baseType;
              DAST._INewtypeRange _4532___mcc_h513 = _source173.dtor_range;
              bool _4533___mcc_h514 = _source173.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4534___mcc_h515 = _source173.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4535_attributes = _4534___mcc_h515;
              bool _4536_erase = _4533___mcc_h514;
              DAST._INewtypeRange _4537_range = _4532___mcc_h513;
              DAST._IType _4538_b = _4531___mcc_h512;
              {
                Std.Wrappers._IOption<RAST._IType> _4539_nativeToType;
                _4539_nativeToType = DCOMP.COMP.NewtypeToRustType(_4538_b, _4537_range);
                if (object.Equals(_3397_fromTpe, _4538_b)) {
                  RAST._IExpr _4540_recursiveGen;
                  DCOMP._IOwnership _4541_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4542_recIdents;
                  RAST._IExpr _out1184;
                  DCOMP._IOwnership _out1185;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1186;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1184, out _out1185, out _out1186);
                  _4540_recursiveGen = _out1184;
                  _4541_recOwned = _out1185;
                  _4542_recIdents = _out1186;
                  readIdents = _4542_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source174 = _4539_nativeToType;
                  if (_source174.is_None) {
                    if (_4536_erase) {
                      r = _4540_recursiveGen;
                    } else {
                      RAST._IType _4543_rhsType;
                      RAST._IType _out1187;
                      _out1187 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _4543_rhsType = _out1187;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4543_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4540_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1188;
                    DCOMP._IOwnership _out1189;
                    DCOMP.COMP.FromOwnership(r, _4541_recOwned, expectedOwnership, out _out1188, out _out1189);
                    r = _out1188;
                    resultingOwnership = _out1189;
                  } else {
                    RAST._IType _4544___mcc_h1590 = _source174.dtor_value;
                    RAST._IType _4545_v = _4544___mcc_h1590;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4540_recursiveGen, RAST.Expr.create_ExprFromType(_4545_v)));
                    RAST._IExpr _out1190;
                    DCOMP._IOwnership _out1191;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1190, out _out1191);
                    r = _out1190;
                    resultingOwnership = _out1191;
                  }
                } else {
                  if ((_4539_nativeToType).is_Some) {
                    DAST._IType _source175 = _3397_fromTpe;
                    if (_source175.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4546___mcc_h1591 = _source175.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4547___mcc_h1592 = _source175.dtor_typeArgs;
                      DAST._IResolvedType _4548___mcc_h1593 = _source175.dtor_resolved;
                      DAST._IResolvedType _source176 = _4548___mcc_h1593;
                      if (_source176.is_Datatype) {
                        DAST._IDatatypeType _4549___mcc_h1597 = _source176.dtor_datatypeType;
                      } else if (_source176.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4550___mcc_h1599 = _source176.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4551___mcc_h1600 = _source176.dtor_attributes;
                      } else {
                        DAST._IType _4552___mcc_h1603 = _source176.dtor_baseType;
                        DAST._INewtypeRange _4553___mcc_h1604 = _source176.dtor_range;
                        bool _4554___mcc_h1605 = _source176.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4555___mcc_h1606 = _source176.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4556_attributes0 = _4555___mcc_h1606;
                        bool _4557_erase0 = _4554___mcc_h1605;
                        DAST._INewtypeRange _4558_range0 = _4553___mcc_h1604;
                        DAST._IType _4559_b0 = _4552___mcc_h1603;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4560_nativeFromType;
                          _4560_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4559_b0, _4558_range0);
                          if ((_4560_nativeFromType).is_Some) {
                            RAST._IExpr _4561_recursiveGen;
                            DCOMP._IOwnership _4562_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4563_recIdents;
                            RAST._IExpr _out1192;
                            DCOMP._IOwnership _out1193;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1194;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1192, out _out1193, out _out1194);
                            _4561_recursiveGen = _out1192;
                            _4562_recOwned = _out1193;
                            _4563_recIdents = _out1194;
                            RAST._IExpr _out1195;
                            DCOMP._IOwnership _out1196;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4561_recursiveGen, (_4539_nativeToType).dtor_value), _4562_recOwned, expectedOwnership, out _out1195, out _out1196);
                            r = _out1195;
                            resultingOwnership = _out1196;
                            readIdents = _4563_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source175.is_Nullable) {
                      DAST._IType _4564___mcc_h1611 = _source175.dtor_Nullable_a0;
                    } else if (_source175.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4565___mcc_h1613 = _source175.dtor_Tuple_a0;
                    } else if (_source175.is_Array) {
                      DAST._IType _4566___mcc_h1615 = _source175.dtor_element;
                      BigInteger _4567___mcc_h1616 = _source175.dtor_dims;
                    } else if (_source175.is_Seq) {
                      DAST._IType _4568___mcc_h1619 = _source175.dtor_element;
                    } else if (_source175.is_Set) {
                      DAST._IType _4569___mcc_h1621 = _source175.dtor_element;
                    } else if (_source175.is_Multiset) {
                      DAST._IType _4570___mcc_h1623 = _source175.dtor_element;
                    } else if (_source175.is_Map) {
                      DAST._IType _4571___mcc_h1625 = _source175.dtor_key;
                      DAST._IType _4572___mcc_h1626 = _source175.dtor_value;
                    } else if (_source175.is_SetBuilder) {
                      DAST._IType _4573___mcc_h1629 = _source175.dtor_element;
                    } else if (_source175.is_MapBuilder) {
                      DAST._IType _4574___mcc_h1631 = _source175.dtor_key;
                      DAST._IType _4575___mcc_h1632 = _source175.dtor_value;
                    } else if (_source175.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4576___mcc_h1635 = _source175.dtor_args;
                      DAST._IType _4577___mcc_h1636 = _source175.dtor_result;
                    } else if (_source175.is_Primitive) {
                      DAST._IPrimitive _4578___mcc_h1639 = _source175.dtor_Primitive_a0;
                    } else if (_source175.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4579___mcc_h1641 = _source175.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4580___mcc_h1643 = _source175.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4581_recursiveGen;
                      DCOMP._IOwnership _4582_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4583_recIdents;
                      RAST._IExpr _out1197;
                      DCOMP._IOwnership _out1198;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1199;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1197, out _out1198, out _out1199);
                      _4581_recursiveGen = _out1197;
                      _4582_recOwned = _out1198;
                      _4583_recIdents = _out1199;
                      RAST._IExpr _out1200;
                      DCOMP._IOwnership _out1201;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4581_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4539_nativeToType).dtor_value), _4582_recOwned, expectedOwnership, out _out1200, out _out1201);
                      r = _out1200;
                      resultingOwnership = _out1201;
                      readIdents = _4583_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1202;
                  DCOMP._IOwnership _out1203;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1204;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _4538_b), _4538_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out1202, out _out1203, out _out1204);
                  r = _out1202;
                  resultingOwnership = _out1203;
                  readIdents = _out1204;
                }
              }
            }
          } else if (_source172.is_Nullable) {
            DAST._IType _4584___mcc_h520 = _source172.dtor_Nullable_a0;
            {
              RAST._IExpr _4585_recursiveGen;
              DCOMP._IOwnership _4586_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4587_recIdents;
              RAST._IExpr _out1205;
              DCOMP._IOwnership _out1206;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1207;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1205, out _out1206, out _out1207);
              _4585_recursiveGen = _out1205;
              _4586_recOwned = _out1206;
              _4587_recIdents = _out1207;
              r = _4585_recursiveGen;
              if (object.Equals(_4586_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1208;
              DCOMP._IOwnership _out1209;
              DCOMP.COMP.FromOwnership(r, _4586_recOwned, expectedOwnership, out _out1208, out _out1209);
              r = _out1208;
              resultingOwnership = _out1209;
              readIdents = _4587_recIdents;
            }
          } else if (_source172.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4588___mcc_h522 = _source172.dtor_Tuple_a0;
            {
              RAST._IType _4589_fromTpeGen;
              RAST._IType _out1210;
              _out1210 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4589_fromTpeGen = _out1210;
              RAST._IType _4590_toTpeGen;
              RAST._IType _out1211;
              _out1211 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4590_toTpeGen = _out1211;
              RAST._IExpr _4591_recursiveGen;
              DCOMP._IOwnership _4592_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4593_recIdents;
              RAST._IExpr _out1212;
              DCOMP._IOwnership _out1213;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1214;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1212, out _out1213, out _out1214);
              _4591_recursiveGen = _out1212;
              _4592_recOwned = _out1213;
              _4593_recIdents = _out1214;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4591_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4589_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4590_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1215;
              DCOMP._IOwnership _out1216;
              DCOMP.COMP.FromOwnership(r, _4592_recOwned, expectedOwnership, out _out1215, out _out1216);
              r = _out1215;
              resultingOwnership = _out1216;
              readIdents = _4593_recIdents;
            }
          } else if (_source172.is_Array) {
            DAST._IType _4594___mcc_h524 = _source172.dtor_element;
            BigInteger _4595___mcc_h525 = _source172.dtor_dims;
            {
              RAST._IType _4596_fromTpeGen;
              RAST._IType _out1217;
              _out1217 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4596_fromTpeGen = _out1217;
              RAST._IType _4597_toTpeGen;
              RAST._IType _out1218;
              _out1218 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4597_toTpeGen = _out1218;
              RAST._IExpr _4598_recursiveGen;
              DCOMP._IOwnership _4599_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4600_recIdents;
              RAST._IExpr _out1219;
              DCOMP._IOwnership _out1220;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1221;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1219, out _out1220, out _out1221);
              _4598_recursiveGen = _out1219;
              _4599_recOwned = _out1220;
              _4600_recIdents = _out1221;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4598_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4596_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4597_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1222;
              DCOMP._IOwnership _out1223;
              DCOMP.COMP.FromOwnership(r, _4599_recOwned, expectedOwnership, out _out1222, out _out1223);
              r = _out1222;
              resultingOwnership = _out1223;
              readIdents = _4600_recIdents;
            }
          } else if (_source172.is_Seq) {
            DAST._IType _4601___mcc_h528 = _source172.dtor_element;
            {
              RAST._IType _4602_fromTpeGen;
              RAST._IType _out1224;
              _out1224 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4602_fromTpeGen = _out1224;
              RAST._IType _4603_toTpeGen;
              RAST._IType _out1225;
              _out1225 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4603_toTpeGen = _out1225;
              RAST._IExpr _4604_recursiveGen;
              DCOMP._IOwnership _4605_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4606_recIdents;
              RAST._IExpr _out1226;
              DCOMP._IOwnership _out1227;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1228;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1226, out _out1227, out _out1228);
              _4604_recursiveGen = _out1226;
              _4605_recOwned = _out1227;
              _4606_recIdents = _out1228;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4604_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4602_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4603_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1229;
              DCOMP._IOwnership _out1230;
              DCOMP.COMP.FromOwnership(r, _4605_recOwned, expectedOwnership, out _out1229, out _out1230);
              r = _out1229;
              resultingOwnership = _out1230;
              readIdents = _4606_recIdents;
            }
          } else if (_source172.is_Set) {
            DAST._IType _4607___mcc_h530 = _source172.dtor_element;
            {
              RAST._IType _4608_fromTpeGen;
              RAST._IType _out1231;
              _out1231 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4608_fromTpeGen = _out1231;
              RAST._IType _4609_toTpeGen;
              RAST._IType _out1232;
              _out1232 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4609_toTpeGen = _out1232;
              RAST._IExpr _4610_recursiveGen;
              DCOMP._IOwnership _4611_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4612_recIdents;
              RAST._IExpr _out1233;
              DCOMP._IOwnership _out1234;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1235;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1233, out _out1234, out _out1235);
              _4610_recursiveGen = _out1233;
              _4611_recOwned = _out1234;
              _4612_recIdents = _out1235;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4610_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4608_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4609_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1236;
              DCOMP._IOwnership _out1237;
              DCOMP.COMP.FromOwnership(r, _4611_recOwned, expectedOwnership, out _out1236, out _out1237);
              r = _out1236;
              resultingOwnership = _out1237;
              readIdents = _4612_recIdents;
            }
          } else if (_source172.is_Multiset) {
            DAST._IType _4613___mcc_h532 = _source172.dtor_element;
            {
              RAST._IType _4614_fromTpeGen;
              RAST._IType _out1238;
              _out1238 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4614_fromTpeGen = _out1238;
              RAST._IType _4615_toTpeGen;
              RAST._IType _out1239;
              _out1239 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4615_toTpeGen = _out1239;
              RAST._IExpr _4616_recursiveGen;
              DCOMP._IOwnership _4617_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4618_recIdents;
              RAST._IExpr _out1240;
              DCOMP._IOwnership _out1241;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1242;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1240, out _out1241, out _out1242);
              _4616_recursiveGen = _out1240;
              _4617_recOwned = _out1241;
              _4618_recIdents = _out1242;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4616_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4614_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4615_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1243;
              DCOMP._IOwnership _out1244;
              DCOMP.COMP.FromOwnership(r, _4617_recOwned, expectedOwnership, out _out1243, out _out1244);
              r = _out1243;
              resultingOwnership = _out1244;
              readIdents = _4618_recIdents;
            }
          } else if (_source172.is_Map) {
            DAST._IType _4619___mcc_h534 = _source172.dtor_key;
            DAST._IType _4620___mcc_h535 = _source172.dtor_value;
            {
              RAST._IType _4621_fromTpeGen;
              RAST._IType _out1245;
              _out1245 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4621_fromTpeGen = _out1245;
              RAST._IType _4622_toTpeGen;
              RAST._IType _out1246;
              _out1246 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4622_toTpeGen = _out1246;
              RAST._IExpr _4623_recursiveGen;
              DCOMP._IOwnership _4624_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4625_recIdents;
              RAST._IExpr _out1247;
              DCOMP._IOwnership _out1248;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1249;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1247, out _out1248, out _out1249);
              _4623_recursiveGen = _out1247;
              _4624_recOwned = _out1248;
              _4625_recIdents = _out1249;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4623_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4621_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4622_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1250;
              DCOMP._IOwnership _out1251;
              DCOMP.COMP.FromOwnership(r, _4624_recOwned, expectedOwnership, out _out1250, out _out1251);
              r = _out1250;
              resultingOwnership = _out1251;
              readIdents = _4625_recIdents;
            }
          } else if (_source172.is_SetBuilder) {
            DAST._IType _4626___mcc_h538 = _source172.dtor_element;
            {
              RAST._IType _4627_fromTpeGen;
              RAST._IType _out1252;
              _out1252 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4627_fromTpeGen = _out1252;
              RAST._IType _4628_toTpeGen;
              RAST._IType _out1253;
              _out1253 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4628_toTpeGen = _out1253;
              RAST._IExpr _4629_recursiveGen;
              DCOMP._IOwnership _4630_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4631_recIdents;
              RAST._IExpr _out1254;
              DCOMP._IOwnership _out1255;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1256;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1254, out _out1255, out _out1256);
              _4629_recursiveGen = _out1254;
              _4630_recOwned = _out1255;
              _4631_recIdents = _out1256;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4629_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4627_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4628_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1257;
              DCOMP._IOwnership _out1258;
              DCOMP.COMP.FromOwnership(r, _4630_recOwned, expectedOwnership, out _out1257, out _out1258);
              r = _out1257;
              resultingOwnership = _out1258;
              readIdents = _4631_recIdents;
            }
          } else if (_source172.is_MapBuilder) {
            DAST._IType _4632___mcc_h540 = _source172.dtor_key;
            DAST._IType _4633___mcc_h541 = _source172.dtor_value;
            {
              RAST._IType _4634_fromTpeGen;
              RAST._IType _out1259;
              _out1259 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4634_fromTpeGen = _out1259;
              RAST._IType _4635_toTpeGen;
              RAST._IType _out1260;
              _out1260 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4635_toTpeGen = _out1260;
              RAST._IExpr _4636_recursiveGen;
              DCOMP._IOwnership _4637_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4638_recIdents;
              RAST._IExpr _out1261;
              DCOMP._IOwnership _out1262;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1263;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1261, out _out1262, out _out1263);
              _4636_recursiveGen = _out1261;
              _4637_recOwned = _out1262;
              _4638_recIdents = _out1263;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4636_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4634_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4635_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1264;
              DCOMP._IOwnership _out1265;
              DCOMP.COMP.FromOwnership(r, _4637_recOwned, expectedOwnership, out _out1264, out _out1265);
              r = _out1264;
              resultingOwnership = _out1265;
              readIdents = _4638_recIdents;
            }
          } else if (_source172.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4639___mcc_h544 = _source172.dtor_args;
            DAST._IType _4640___mcc_h545 = _source172.dtor_result;
            {
              RAST._IType _4641_fromTpeGen;
              RAST._IType _out1266;
              _out1266 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4641_fromTpeGen = _out1266;
              RAST._IType _4642_toTpeGen;
              RAST._IType _out1267;
              _out1267 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4642_toTpeGen = _out1267;
              RAST._IExpr _4643_recursiveGen;
              DCOMP._IOwnership _4644_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4645_recIdents;
              RAST._IExpr _out1268;
              DCOMP._IOwnership _out1269;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1270;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1268, out _out1269, out _out1270);
              _4643_recursiveGen = _out1268;
              _4644_recOwned = _out1269;
              _4645_recIdents = _out1270;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4643_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4641_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4642_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1271;
              DCOMP._IOwnership _out1272;
              DCOMP.COMP.FromOwnership(r, _4644_recOwned, expectedOwnership, out _out1271, out _out1272);
              r = _out1271;
              resultingOwnership = _out1272;
              readIdents = _4645_recIdents;
            }
          } else if (_source172.is_Primitive) {
            DAST._IPrimitive _4646___mcc_h548 = _source172.dtor_Primitive_a0;
            {
              RAST._IType _4647_fromTpeGen;
              RAST._IType _out1273;
              _out1273 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4647_fromTpeGen = _out1273;
              RAST._IType _4648_toTpeGen;
              RAST._IType _out1274;
              _out1274 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4648_toTpeGen = _out1274;
              RAST._IExpr _4649_recursiveGen;
              DCOMP._IOwnership _4650_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4651_recIdents;
              RAST._IExpr _out1275;
              DCOMP._IOwnership _out1276;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1277;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1275, out _out1276, out _out1277);
              _4649_recursiveGen = _out1275;
              _4650_recOwned = _out1276;
              _4651_recIdents = _out1277;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4649_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4647_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4648_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1278;
              DCOMP._IOwnership _out1279;
              DCOMP.COMP.FromOwnership(r, _4650_recOwned, expectedOwnership, out _out1278, out _out1279);
              r = _out1278;
              resultingOwnership = _out1279;
              readIdents = _4651_recIdents;
            }
          } else if (_source172.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4652___mcc_h550 = _source172.dtor_Passthrough_a0;
            {
              RAST._IType _4653_fromTpeGen;
              RAST._IType _out1280;
              _out1280 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4653_fromTpeGen = _out1280;
              RAST._IType _4654_toTpeGen;
              RAST._IType _out1281;
              _out1281 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4654_toTpeGen = _out1281;
              RAST._IExpr _4655_recursiveGen;
              DCOMP._IOwnership _4656_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4657_recIdents;
              RAST._IExpr _out1282;
              DCOMP._IOwnership _out1283;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1284;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1282, out _out1283, out _out1284);
              _4655_recursiveGen = _out1282;
              _4656_recOwned = _out1283;
              _4657_recIdents = _out1284;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4655_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4653_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4654_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1285;
              DCOMP._IOwnership _out1286;
              DCOMP.COMP.FromOwnership(r, _4656_recOwned, expectedOwnership, out _out1285, out _out1286);
              r = _out1285;
              resultingOwnership = _out1286;
              readIdents = _4657_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4658___mcc_h552 = _source172.dtor_TypeArg_a0;
            {
              RAST._IType _4659_fromTpeGen;
              RAST._IType _out1287;
              _out1287 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4659_fromTpeGen = _out1287;
              RAST._IType _4660_toTpeGen;
              RAST._IType _out1288;
              _out1288 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4660_toTpeGen = _out1288;
              RAST._IExpr _4661_recursiveGen;
              DCOMP._IOwnership _4662_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4663_recIdents;
              RAST._IExpr _out1289;
              DCOMP._IOwnership _out1290;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1291;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1289, out _out1290, out _out1291);
              _4661_recursiveGen = _out1289;
              _4662_recOwned = _out1290;
              _4663_recIdents = _out1291;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4661_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4659_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4660_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1292;
              DCOMP._IOwnership _out1293;
              DCOMP.COMP.FromOwnership(r, _4662_recOwned, expectedOwnership, out _out1292, out _out1293);
              r = _out1292;
              resultingOwnership = _out1293;
              readIdents = _4663_recIdents;
            }
          }
        } else if (_source124.is_Multiset) {
          DAST._IType _4664___mcc_h554 = _source124.dtor_element;
          DAST._IType _source177 = _3403___mcc_h1;
          if (_source177.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4665___mcc_h558 = _source177.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4666___mcc_h559 = _source177.dtor_typeArgs;
            DAST._IResolvedType _4667___mcc_h560 = _source177.dtor_resolved;
            DAST._IResolvedType _source178 = _4667___mcc_h560;
            if (_source178.is_Datatype) {
              DAST._IDatatypeType _4668___mcc_h564 = _source178.dtor_datatypeType;
              {
                RAST._IType _4669_fromTpeGen;
                RAST._IType _out1294;
                _out1294 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4669_fromTpeGen = _out1294;
                RAST._IType _4670_toTpeGen;
                RAST._IType _out1295;
                _out1295 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4670_toTpeGen = _out1295;
                RAST._IExpr _4671_recursiveGen;
                DCOMP._IOwnership _4672_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4673_recIdents;
                RAST._IExpr _out1296;
                DCOMP._IOwnership _out1297;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1298;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1296, out _out1297, out _out1298);
                _4671_recursiveGen = _out1296;
                _4672_recOwned = _out1297;
                _4673_recIdents = _out1298;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4671_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4669_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4670_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1299;
                DCOMP._IOwnership _out1300;
                DCOMP.COMP.FromOwnership(r, _4672_recOwned, expectedOwnership, out _out1299, out _out1300);
                r = _out1299;
                resultingOwnership = _out1300;
                readIdents = _4673_recIdents;
              }
            } else if (_source178.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4674___mcc_h566 = _source178.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4675___mcc_h567 = _source178.dtor_attributes;
              {
                RAST._IType _4676_fromTpeGen;
                RAST._IType _out1301;
                _out1301 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4676_fromTpeGen = _out1301;
                RAST._IType _4677_toTpeGen;
                RAST._IType _out1302;
                _out1302 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4677_toTpeGen = _out1302;
                RAST._IExpr _4678_recursiveGen;
                DCOMP._IOwnership _4679_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4680_recIdents;
                RAST._IExpr _out1303;
                DCOMP._IOwnership _out1304;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1305;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1303, out _out1304, out _out1305);
                _4678_recursiveGen = _out1303;
                _4679_recOwned = _out1304;
                _4680_recIdents = _out1305;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4678_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4676_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4677_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1306;
                DCOMP._IOwnership _out1307;
                DCOMP.COMP.FromOwnership(r, _4679_recOwned, expectedOwnership, out _out1306, out _out1307);
                r = _out1306;
                resultingOwnership = _out1307;
                readIdents = _4680_recIdents;
              }
            } else {
              DAST._IType _4681___mcc_h570 = _source178.dtor_baseType;
              DAST._INewtypeRange _4682___mcc_h571 = _source178.dtor_range;
              bool _4683___mcc_h572 = _source178.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4684___mcc_h573 = _source178.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4685_attributes = _4684___mcc_h573;
              bool _4686_erase = _4683___mcc_h572;
              DAST._INewtypeRange _4687_range = _4682___mcc_h571;
              DAST._IType _4688_b = _4681___mcc_h570;
              {
                Std.Wrappers._IOption<RAST._IType> _4689_nativeToType;
                _4689_nativeToType = DCOMP.COMP.NewtypeToRustType(_4688_b, _4687_range);
                if (object.Equals(_3397_fromTpe, _4688_b)) {
                  RAST._IExpr _4690_recursiveGen;
                  DCOMP._IOwnership _4691_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4692_recIdents;
                  RAST._IExpr _out1308;
                  DCOMP._IOwnership _out1309;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1310;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1308, out _out1309, out _out1310);
                  _4690_recursiveGen = _out1308;
                  _4691_recOwned = _out1309;
                  _4692_recIdents = _out1310;
                  readIdents = _4692_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source179 = _4689_nativeToType;
                  if (_source179.is_None) {
                    if (_4686_erase) {
                      r = _4690_recursiveGen;
                    } else {
                      RAST._IType _4693_rhsType;
                      RAST._IType _out1311;
                      _out1311 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _4693_rhsType = _out1311;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4693_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4690_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1312;
                    DCOMP._IOwnership _out1313;
                    DCOMP.COMP.FromOwnership(r, _4691_recOwned, expectedOwnership, out _out1312, out _out1313);
                    r = _out1312;
                    resultingOwnership = _out1313;
                  } else {
                    RAST._IType _4694___mcc_h1645 = _source179.dtor_value;
                    RAST._IType _4695_v = _4694___mcc_h1645;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4690_recursiveGen, RAST.Expr.create_ExprFromType(_4695_v)));
                    RAST._IExpr _out1314;
                    DCOMP._IOwnership _out1315;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1314, out _out1315);
                    r = _out1314;
                    resultingOwnership = _out1315;
                  }
                } else {
                  if ((_4689_nativeToType).is_Some) {
                    DAST._IType _source180 = _3397_fromTpe;
                    if (_source180.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4696___mcc_h1646 = _source180.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4697___mcc_h1647 = _source180.dtor_typeArgs;
                      DAST._IResolvedType _4698___mcc_h1648 = _source180.dtor_resolved;
                      DAST._IResolvedType _source181 = _4698___mcc_h1648;
                      if (_source181.is_Datatype) {
                        DAST._IDatatypeType _4699___mcc_h1652 = _source181.dtor_datatypeType;
                      } else if (_source181.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4700___mcc_h1654 = _source181.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4701___mcc_h1655 = _source181.dtor_attributes;
                      } else {
                        DAST._IType _4702___mcc_h1658 = _source181.dtor_baseType;
                        DAST._INewtypeRange _4703___mcc_h1659 = _source181.dtor_range;
                        bool _4704___mcc_h1660 = _source181.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4705___mcc_h1661 = _source181.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4706_attributes0 = _4705___mcc_h1661;
                        bool _4707_erase0 = _4704___mcc_h1660;
                        DAST._INewtypeRange _4708_range0 = _4703___mcc_h1659;
                        DAST._IType _4709_b0 = _4702___mcc_h1658;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4710_nativeFromType;
                          _4710_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4709_b0, _4708_range0);
                          if ((_4710_nativeFromType).is_Some) {
                            RAST._IExpr _4711_recursiveGen;
                            DCOMP._IOwnership _4712_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4713_recIdents;
                            RAST._IExpr _out1316;
                            DCOMP._IOwnership _out1317;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1318;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1316, out _out1317, out _out1318);
                            _4711_recursiveGen = _out1316;
                            _4712_recOwned = _out1317;
                            _4713_recIdents = _out1318;
                            RAST._IExpr _out1319;
                            DCOMP._IOwnership _out1320;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4711_recursiveGen, (_4689_nativeToType).dtor_value), _4712_recOwned, expectedOwnership, out _out1319, out _out1320);
                            r = _out1319;
                            resultingOwnership = _out1320;
                            readIdents = _4713_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source180.is_Nullable) {
                      DAST._IType _4714___mcc_h1666 = _source180.dtor_Nullable_a0;
                    } else if (_source180.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4715___mcc_h1668 = _source180.dtor_Tuple_a0;
                    } else if (_source180.is_Array) {
                      DAST._IType _4716___mcc_h1670 = _source180.dtor_element;
                      BigInteger _4717___mcc_h1671 = _source180.dtor_dims;
                    } else if (_source180.is_Seq) {
                      DAST._IType _4718___mcc_h1674 = _source180.dtor_element;
                    } else if (_source180.is_Set) {
                      DAST._IType _4719___mcc_h1676 = _source180.dtor_element;
                    } else if (_source180.is_Multiset) {
                      DAST._IType _4720___mcc_h1678 = _source180.dtor_element;
                    } else if (_source180.is_Map) {
                      DAST._IType _4721___mcc_h1680 = _source180.dtor_key;
                      DAST._IType _4722___mcc_h1681 = _source180.dtor_value;
                    } else if (_source180.is_SetBuilder) {
                      DAST._IType _4723___mcc_h1684 = _source180.dtor_element;
                    } else if (_source180.is_MapBuilder) {
                      DAST._IType _4724___mcc_h1686 = _source180.dtor_key;
                      DAST._IType _4725___mcc_h1687 = _source180.dtor_value;
                    } else if (_source180.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4726___mcc_h1690 = _source180.dtor_args;
                      DAST._IType _4727___mcc_h1691 = _source180.dtor_result;
                    } else if (_source180.is_Primitive) {
                      DAST._IPrimitive _4728___mcc_h1694 = _source180.dtor_Primitive_a0;
                    } else if (_source180.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4729___mcc_h1696 = _source180.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4730___mcc_h1698 = _source180.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4731_recursiveGen;
                      DCOMP._IOwnership _4732_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4733_recIdents;
                      RAST._IExpr _out1321;
                      DCOMP._IOwnership _out1322;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1323;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1321, out _out1322, out _out1323);
                      _4731_recursiveGen = _out1321;
                      _4732_recOwned = _out1322;
                      _4733_recIdents = _out1323;
                      RAST._IExpr _out1324;
                      DCOMP._IOwnership _out1325;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4731_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4689_nativeToType).dtor_value), _4732_recOwned, expectedOwnership, out _out1324, out _out1325);
                      r = _out1324;
                      resultingOwnership = _out1325;
                      readIdents = _4733_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1326;
                  DCOMP._IOwnership _out1327;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1328;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _4688_b), _4688_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out1326, out _out1327, out _out1328);
                  r = _out1326;
                  resultingOwnership = _out1327;
                  readIdents = _out1328;
                }
              }
            }
          } else if (_source177.is_Nullable) {
            DAST._IType _4734___mcc_h578 = _source177.dtor_Nullable_a0;
            {
              RAST._IExpr _4735_recursiveGen;
              DCOMP._IOwnership _4736_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4737_recIdents;
              RAST._IExpr _out1329;
              DCOMP._IOwnership _out1330;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1331;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1329, out _out1330, out _out1331);
              _4735_recursiveGen = _out1329;
              _4736_recOwned = _out1330;
              _4737_recIdents = _out1331;
              r = _4735_recursiveGen;
              if (object.Equals(_4736_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1332;
              DCOMP._IOwnership _out1333;
              DCOMP.COMP.FromOwnership(r, _4736_recOwned, expectedOwnership, out _out1332, out _out1333);
              r = _out1332;
              resultingOwnership = _out1333;
              readIdents = _4737_recIdents;
            }
          } else if (_source177.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4738___mcc_h580 = _source177.dtor_Tuple_a0;
            {
              RAST._IType _4739_fromTpeGen;
              RAST._IType _out1334;
              _out1334 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4739_fromTpeGen = _out1334;
              RAST._IType _4740_toTpeGen;
              RAST._IType _out1335;
              _out1335 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4740_toTpeGen = _out1335;
              RAST._IExpr _4741_recursiveGen;
              DCOMP._IOwnership _4742_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4743_recIdents;
              RAST._IExpr _out1336;
              DCOMP._IOwnership _out1337;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1338;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1336, out _out1337, out _out1338);
              _4741_recursiveGen = _out1336;
              _4742_recOwned = _out1337;
              _4743_recIdents = _out1338;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4741_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4739_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4740_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1339;
              DCOMP._IOwnership _out1340;
              DCOMP.COMP.FromOwnership(r, _4742_recOwned, expectedOwnership, out _out1339, out _out1340);
              r = _out1339;
              resultingOwnership = _out1340;
              readIdents = _4743_recIdents;
            }
          } else if (_source177.is_Array) {
            DAST._IType _4744___mcc_h582 = _source177.dtor_element;
            BigInteger _4745___mcc_h583 = _source177.dtor_dims;
            {
              RAST._IType _4746_fromTpeGen;
              RAST._IType _out1341;
              _out1341 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4746_fromTpeGen = _out1341;
              RAST._IType _4747_toTpeGen;
              RAST._IType _out1342;
              _out1342 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4747_toTpeGen = _out1342;
              RAST._IExpr _4748_recursiveGen;
              DCOMP._IOwnership _4749_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4750_recIdents;
              RAST._IExpr _out1343;
              DCOMP._IOwnership _out1344;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1345;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1343, out _out1344, out _out1345);
              _4748_recursiveGen = _out1343;
              _4749_recOwned = _out1344;
              _4750_recIdents = _out1345;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4748_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4746_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4747_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1346;
              DCOMP._IOwnership _out1347;
              DCOMP.COMP.FromOwnership(r, _4749_recOwned, expectedOwnership, out _out1346, out _out1347);
              r = _out1346;
              resultingOwnership = _out1347;
              readIdents = _4750_recIdents;
            }
          } else if (_source177.is_Seq) {
            DAST._IType _4751___mcc_h586 = _source177.dtor_element;
            {
              RAST._IType _4752_fromTpeGen;
              RAST._IType _out1348;
              _out1348 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4752_fromTpeGen = _out1348;
              RAST._IType _4753_toTpeGen;
              RAST._IType _out1349;
              _out1349 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4753_toTpeGen = _out1349;
              RAST._IExpr _4754_recursiveGen;
              DCOMP._IOwnership _4755_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4756_recIdents;
              RAST._IExpr _out1350;
              DCOMP._IOwnership _out1351;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1352;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1350, out _out1351, out _out1352);
              _4754_recursiveGen = _out1350;
              _4755_recOwned = _out1351;
              _4756_recIdents = _out1352;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4754_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4752_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4753_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1353;
              DCOMP._IOwnership _out1354;
              DCOMP.COMP.FromOwnership(r, _4755_recOwned, expectedOwnership, out _out1353, out _out1354);
              r = _out1353;
              resultingOwnership = _out1354;
              readIdents = _4756_recIdents;
            }
          } else if (_source177.is_Set) {
            DAST._IType _4757___mcc_h588 = _source177.dtor_element;
            {
              RAST._IType _4758_fromTpeGen;
              RAST._IType _out1355;
              _out1355 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4758_fromTpeGen = _out1355;
              RAST._IType _4759_toTpeGen;
              RAST._IType _out1356;
              _out1356 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4759_toTpeGen = _out1356;
              RAST._IExpr _4760_recursiveGen;
              DCOMP._IOwnership _4761_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4762_recIdents;
              RAST._IExpr _out1357;
              DCOMP._IOwnership _out1358;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1359;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1357, out _out1358, out _out1359);
              _4760_recursiveGen = _out1357;
              _4761_recOwned = _out1358;
              _4762_recIdents = _out1359;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4760_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4758_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4759_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1360;
              DCOMP._IOwnership _out1361;
              DCOMP.COMP.FromOwnership(r, _4761_recOwned, expectedOwnership, out _out1360, out _out1361);
              r = _out1360;
              resultingOwnership = _out1361;
              readIdents = _4762_recIdents;
            }
          } else if (_source177.is_Multiset) {
            DAST._IType _4763___mcc_h590 = _source177.dtor_element;
            {
              RAST._IType _4764_fromTpeGen;
              RAST._IType _out1362;
              _out1362 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4764_fromTpeGen = _out1362;
              RAST._IType _4765_toTpeGen;
              RAST._IType _out1363;
              _out1363 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4765_toTpeGen = _out1363;
              RAST._IExpr _4766_recursiveGen;
              DCOMP._IOwnership _4767_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4768_recIdents;
              RAST._IExpr _out1364;
              DCOMP._IOwnership _out1365;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1366;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1364, out _out1365, out _out1366);
              _4766_recursiveGen = _out1364;
              _4767_recOwned = _out1365;
              _4768_recIdents = _out1366;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4766_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4764_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4765_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1367;
              DCOMP._IOwnership _out1368;
              DCOMP.COMP.FromOwnership(r, _4767_recOwned, expectedOwnership, out _out1367, out _out1368);
              r = _out1367;
              resultingOwnership = _out1368;
              readIdents = _4768_recIdents;
            }
          } else if (_source177.is_Map) {
            DAST._IType _4769___mcc_h592 = _source177.dtor_key;
            DAST._IType _4770___mcc_h593 = _source177.dtor_value;
            {
              RAST._IType _4771_fromTpeGen;
              RAST._IType _out1369;
              _out1369 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4771_fromTpeGen = _out1369;
              RAST._IType _4772_toTpeGen;
              RAST._IType _out1370;
              _out1370 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4772_toTpeGen = _out1370;
              RAST._IExpr _4773_recursiveGen;
              DCOMP._IOwnership _4774_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4775_recIdents;
              RAST._IExpr _out1371;
              DCOMP._IOwnership _out1372;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1373;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1371, out _out1372, out _out1373);
              _4773_recursiveGen = _out1371;
              _4774_recOwned = _out1372;
              _4775_recIdents = _out1373;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4773_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4771_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4772_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1374;
              DCOMP._IOwnership _out1375;
              DCOMP.COMP.FromOwnership(r, _4774_recOwned, expectedOwnership, out _out1374, out _out1375);
              r = _out1374;
              resultingOwnership = _out1375;
              readIdents = _4775_recIdents;
            }
          } else if (_source177.is_SetBuilder) {
            DAST._IType _4776___mcc_h596 = _source177.dtor_element;
            {
              RAST._IType _4777_fromTpeGen;
              RAST._IType _out1376;
              _out1376 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4777_fromTpeGen = _out1376;
              RAST._IType _4778_toTpeGen;
              RAST._IType _out1377;
              _out1377 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4778_toTpeGen = _out1377;
              RAST._IExpr _4779_recursiveGen;
              DCOMP._IOwnership _4780_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4781_recIdents;
              RAST._IExpr _out1378;
              DCOMP._IOwnership _out1379;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1380;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1378, out _out1379, out _out1380);
              _4779_recursiveGen = _out1378;
              _4780_recOwned = _out1379;
              _4781_recIdents = _out1380;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4779_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4777_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4778_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1381;
              DCOMP._IOwnership _out1382;
              DCOMP.COMP.FromOwnership(r, _4780_recOwned, expectedOwnership, out _out1381, out _out1382);
              r = _out1381;
              resultingOwnership = _out1382;
              readIdents = _4781_recIdents;
            }
          } else if (_source177.is_MapBuilder) {
            DAST._IType _4782___mcc_h598 = _source177.dtor_key;
            DAST._IType _4783___mcc_h599 = _source177.dtor_value;
            {
              RAST._IType _4784_fromTpeGen;
              RAST._IType _out1383;
              _out1383 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4784_fromTpeGen = _out1383;
              RAST._IType _4785_toTpeGen;
              RAST._IType _out1384;
              _out1384 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4785_toTpeGen = _out1384;
              RAST._IExpr _4786_recursiveGen;
              DCOMP._IOwnership _4787_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4788_recIdents;
              RAST._IExpr _out1385;
              DCOMP._IOwnership _out1386;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1387;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1385, out _out1386, out _out1387);
              _4786_recursiveGen = _out1385;
              _4787_recOwned = _out1386;
              _4788_recIdents = _out1387;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4786_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4784_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4785_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1388;
              DCOMP._IOwnership _out1389;
              DCOMP.COMP.FromOwnership(r, _4787_recOwned, expectedOwnership, out _out1388, out _out1389);
              r = _out1388;
              resultingOwnership = _out1389;
              readIdents = _4788_recIdents;
            }
          } else if (_source177.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4789___mcc_h602 = _source177.dtor_args;
            DAST._IType _4790___mcc_h603 = _source177.dtor_result;
            {
              RAST._IType _4791_fromTpeGen;
              RAST._IType _out1390;
              _out1390 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4791_fromTpeGen = _out1390;
              RAST._IType _4792_toTpeGen;
              RAST._IType _out1391;
              _out1391 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4792_toTpeGen = _out1391;
              RAST._IExpr _4793_recursiveGen;
              DCOMP._IOwnership _4794_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4795_recIdents;
              RAST._IExpr _out1392;
              DCOMP._IOwnership _out1393;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1394;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1392, out _out1393, out _out1394);
              _4793_recursiveGen = _out1392;
              _4794_recOwned = _out1393;
              _4795_recIdents = _out1394;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4793_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4791_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4792_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1395;
              DCOMP._IOwnership _out1396;
              DCOMP.COMP.FromOwnership(r, _4794_recOwned, expectedOwnership, out _out1395, out _out1396);
              r = _out1395;
              resultingOwnership = _out1396;
              readIdents = _4795_recIdents;
            }
          } else if (_source177.is_Primitive) {
            DAST._IPrimitive _4796___mcc_h606 = _source177.dtor_Primitive_a0;
            {
              RAST._IType _4797_fromTpeGen;
              RAST._IType _out1397;
              _out1397 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4797_fromTpeGen = _out1397;
              RAST._IType _4798_toTpeGen;
              RAST._IType _out1398;
              _out1398 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4798_toTpeGen = _out1398;
              RAST._IExpr _4799_recursiveGen;
              DCOMP._IOwnership _4800_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4801_recIdents;
              RAST._IExpr _out1399;
              DCOMP._IOwnership _out1400;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1401;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1399, out _out1400, out _out1401);
              _4799_recursiveGen = _out1399;
              _4800_recOwned = _out1400;
              _4801_recIdents = _out1401;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4799_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4797_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4798_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1402;
              DCOMP._IOwnership _out1403;
              DCOMP.COMP.FromOwnership(r, _4800_recOwned, expectedOwnership, out _out1402, out _out1403);
              r = _out1402;
              resultingOwnership = _out1403;
              readIdents = _4801_recIdents;
            }
          } else if (_source177.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4802___mcc_h608 = _source177.dtor_Passthrough_a0;
            {
              RAST._IType _4803_fromTpeGen;
              RAST._IType _out1404;
              _out1404 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4803_fromTpeGen = _out1404;
              RAST._IType _4804_toTpeGen;
              RAST._IType _out1405;
              _out1405 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4804_toTpeGen = _out1405;
              RAST._IExpr _4805_recursiveGen;
              DCOMP._IOwnership _4806_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4807_recIdents;
              RAST._IExpr _out1406;
              DCOMP._IOwnership _out1407;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1408;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1406, out _out1407, out _out1408);
              _4805_recursiveGen = _out1406;
              _4806_recOwned = _out1407;
              _4807_recIdents = _out1408;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4805_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4803_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4804_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1409;
              DCOMP._IOwnership _out1410;
              DCOMP.COMP.FromOwnership(r, _4806_recOwned, expectedOwnership, out _out1409, out _out1410);
              r = _out1409;
              resultingOwnership = _out1410;
              readIdents = _4807_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4808___mcc_h610 = _source177.dtor_TypeArg_a0;
            {
              RAST._IType _4809_fromTpeGen;
              RAST._IType _out1411;
              _out1411 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4809_fromTpeGen = _out1411;
              RAST._IType _4810_toTpeGen;
              RAST._IType _out1412;
              _out1412 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4810_toTpeGen = _out1412;
              RAST._IExpr _4811_recursiveGen;
              DCOMP._IOwnership _4812_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4813_recIdents;
              RAST._IExpr _out1413;
              DCOMP._IOwnership _out1414;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1415;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1413, out _out1414, out _out1415);
              _4811_recursiveGen = _out1413;
              _4812_recOwned = _out1414;
              _4813_recIdents = _out1415;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4811_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4809_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4810_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1416;
              DCOMP._IOwnership _out1417;
              DCOMP.COMP.FromOwnership(r, _4812_recOwned, expectedOwnership, out _out1416, out _out1417);
              r = _out1416;
              resultingOwnership = _out1417;
              readIdents = _4813_recIdents;
            }
          }
        } else if (_source124.is_Map) {
          DAST._IType _4814___mcc_h612 = _source124.dtor_key;
          DAST._IType _4815___mcc_h613 = _source124.dtor_value;
          DAST._IType _source182 = _3403___mcc_h1;
          if (_source182.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4816___mcc_h620 = _source182.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4817___mcc_h621 = _source182.dtor_typeArgs;
            DAST._IResolvedType _4818___mcc_h622 = _source182.dtor_resolved;
            DAST._IResolvedType _source183 = _4818___mcc_h622;
            if (_source183.is_Datatype) {
              DAST._IDatatypeType _4819___mcc_h626 = _source183.dtor_datatypeType;
              {
                RAST._IType _4820_fromTpeGen;
                RAST._IType _out1418;
                _out1418 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4820_fromTpeGen = _out1418;
                RAST._IType _4821_toTpeGen;
                RAST._IType _out1419;
                _out1419 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4821_toTpeGen = _out1419;
                RAST._IExpr _4822_recursiveGen;
                DCOMP._IOwnership _4823_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4824_recIdents;
                RAST._IExpr _out1420;
                DCOMP._IOwnership _out1421;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1422;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1420, out _out1421, out _out1422);
                _4822_recursiveGen = _out1420;
                _4823_recOwned = _out1421;
                _4824_recIdents = _out1422;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4822_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4820_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4821_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1423;
                DCOMP._IOwnership _out1424;
                DCOMP.COMP.FromOwnership(r, _4823_recOwned, expectedOwnership, out _out1423, out _out1424);
                r = _out1423;
                resultingOwnership = _out1424;
                readIdents = _4824_recIdents;
              }
            } else if (_source183.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4825___mcc_h628 = _source183.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4826___mcc_h629 = _source183.dtor_attributes;
              {
                RAST._IType _4827_fromTpeGen;
                RAST._IType _out1425;
                _out1425 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4827_fromTpeGen = _out1425;
                RAST._IType _4828_toTpeGen;
                RAST._IType _out1426;
                _out1426 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4828_toTpeGen = _out1426;
                RAST._IExpr _4829_recursiveGen;
                DCOMP._IOwnership _4830_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4831_recIdents;
                RAST._IExpr _out1427;
                DCOMP._IOwnership _out1428;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1429;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1427, out _out1428, out _out1429);
                _4829_recursiveGen = _out1427;
                _4830_recOwned = _out1428;
                _4831_recIdents = _out1429;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4829_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4827_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4828_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1430;
                DCOMP._IOwnership _out1431;
                DCOMP.COMP.FromOwnership(r, _4830_recOwned, expectedOwnership, out _out1430, out _out1431);
                r = _out1430;
                resultingOwnership = _out1431;
                readIdents = _4831_recIdents;
              }
            } else {
              DAST._IType _4832___mcc_h632 = _source183.dtor_baseType;
              DAST._INewtypeRange _4833___mcc_h633 = _source183.dtor_range;
              bool _4834___mcc_h634 = _source183.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4835___mcc_h635 = _source183.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4836_attributes = _4835___mcc_h635;
              bool _4837_erase = _4834___mcc_h634;
              DAST._INewtypeRange _4838_range = _4833___mcc_h633;
              DAST._IType _4839_b = _4832___mcc_h632;
              {
                Std.Wrappers._IOption<RAST._IType> _4840_nativeToType;
                _4840_nativeToType = DCOMP.COMP.NewtypeToRustType(_4839_b, _4838_range);
                if (object.Equals(_3397_fromTpe, _4839_b)) {
                  RAST._IExpr _4841_recursiveGen;
                  DCOMP._IOwnership _4842_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4843_recIdents;
                  RAST._IExpr _out1432;
                  DCOMP._IOwnership _out1433;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1434;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1432, out _out1433, out _out1434);
                  _4841_recursiveGen = _out1432;
                  _4842_recOwned = _out1433;
                  _4843_recIdents = _out1434;
                  readIdents = _4843_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source184 = _4840_nativeToType;
                  if (_source184.is_None) {
                    if (_4837_erase) {
                      r = _4841_recursiveGen;
                    } else {
                      RAST._IType _4844_rhsType;
                      RAST._IType _out1435;
                      _out1435 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _4844_rhsType = _out1435;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4844_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4841_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1436;
                    DCOMP._IOwnership _out1437;
                    DCOMP.COMP.FromOwnership(r, _4842_recOwned, expectedOwnership, out _out1436, out _out1437);
                    r = _out1436;
                    resultingOwnership = _out1437;
                  } else {
                    RAST._IType _4845___mcc_h1700 = _source184.dtor_value;
                    RAST._IType _4846_v = _4845___mcc_h1700;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4841_recursiveGen, RAST.Expr.create_ExprFromType(_4846_v)));
                    RAST._IExpr _out1438;
                    DCOMP._IOwnership _out1439;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1438, out _out1439);
                    r = _out1438;
                    resultingOwnership = _out1439;
                  }
                } else {
                  if ((_4840_nativeToType).is_Some) {
                    DAST._IType _source185 = _3397_fromTpe;
                    if (_source185.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4847___mcc_h1701 = _source185.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4848___mcc_h1702 = _source185.dtor_typeArgs;
                      DAST._IResolvedType _4849___mcc_h1703 = _source185.dtor_resolved;
                      DAST._IResolvedType _source186 = _4849___mcc_h1703;
                      if (_source186.is_Datatype) {
                        DAST._IDatatypeType _4850___mcc_h1707 = _source186.dtor_datatypeType;
                      } else if (_source186.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4851___mcc_h1709 = _source186.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4852___mcc_h1710 = _source186.dtor_attributes;
                      } else {
                        DAST._IType _4853___mcc_h1713 = _source186.dtor_baseType;
                        DAST._INewtypeRange _4854___mcc_h1714 = _source186.dtor_range;
                        bool _4855___mcc_h1715 = _source186.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4856___mcc_h1716 = _source186.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4857_attributes0 = _4856___mcc_h1716;
                        bool _4858_erase0 = _4855___mcc_h1715;
                        DAST._INewtypeRange _4859_range0 = _4854___mcc_h1714;
                        DAST._IType _4860_b0 = _4853___mcc_h1713;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4861_nativeFromType;
                          _4861_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4860_b0, _4859_range0);
                          if ((_4861_nativeFromType).is_Some) {
                            RAST._IExpr _4862_recursiveGen;
                            DCOMP._IOwnership _4863_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4864_recIdents;
                            RAST._IExpr _out1440;
                            DCOMP._IOwnership _out1441;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1442;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1440, out _out1441, out _out1442);
                            _4862_recursiveGen = _out1440;
                            _4863_recOwned = _out1441;
                            _4864_recIdents = _out1442;
                            RAST._IExpr _out1443;
                            DCOMP._IOwnership _out1444;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4862_recursiveGen, (_4840_nativeToType).dtor_value), _4863_recOwned, expectedOwnership, out _out1443, out _out1444);
                            r = _out1443;
                            resultingOwnership = _out1444;
                            readIdents = _4864_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source185.is_Nullable) {
                      DAST._IType _4865___mcc_h1721 = _source185.dtor_Nullable_a0;
                    } else if (_source185.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4866___mcc_h1723 = _source185.dtor_Tuple_a0;
                    } else if (_source185.is_Array) {
                      DAST._IType _4867___mcc_h1725 = _source185.dtor_element;
                      BigInteger _4868___mcc_h1726 = _source185.dtor_dims;
                    } else if (_source185.is_Seq) {
                      DAST._IType _4869___mcc_h1729 = _source185.dtor_element;
                    } else if (_source185.is_Set) {
                      DAST._IType _4870___mcc_h1731 = _source185.dtor_element;
                    } else if (_source185.is_Multiset) {
                      DAST._IType _4871___mcc_h1733 = _source185.dtor_element;
                    } else if (_source185.is_Map) {
                      DAST._IType _4872___mcc_h1735 = _source185.dtor_key;
                      DAST._IType _4873___mcc_h1736 = _source185.dtor_value;
                    } else if (_source185.is_SetBuilder) {
                      DAST._IType _4874___mcc_h1739 = _source185.dtor_element;
                    } else if (_source185.is_MapBuilder) {
                      DAST._IType _4875___mcc_h1741 = _source185.dtor_key;
                      DAST._IType _4876___mcc_h1742 = _source185.dtor_value;
                    } else if (_source185.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4877___mcc_h1745 = _source185.dtor_args;
                      DAST._IType _4878___mcc_h1746 = _source185.dtor_result;
                    } else if (_source185.is_Primitive) {
                      DAST._IPrimitive _4879___mcc_h1749 = _source185.dtor_Primitive_a0;
                    } else if (_source185.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4880___mcc_h1751 = _source185.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4881___mcc_h1753 = _source185.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4882_recursiveGen;
                      DCOMP._IOwnership _4883_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4884_recIdents;
                      RAST._IExpr _out1445;
                      DCOMP._IOwnership _out1446;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1447;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1445, out _out1446, out _out1447);
                      _4882_recursiveGen = _out1445;
                      _4883_recOwned = _out1446;
                      _4884_recIdents = _out1447;
                      RAST._IExpr _out1448;
                      DCOMP._IOwnership _out1449;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4882_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4840_nativeToType).dtor_value), _4883_recOwned, expectedOwnership, out _out1448, out _out1449);
                      r = _out1448;
                      resultingOwnership = _out1449;
                      readIdents = _4884_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1450;
                  DCOMP._IOwnership _out1451;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1452;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _4839_b), _4839_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out1450, out _out1451, out _out1452);
                  r = _out1450;
                  resultingOwnership = _out1451;
                  readIdents = _out1452;
                }
              }
            }
          } else if (_source182.is_Nullable) {
            DAST._IType _4885___mcc_h640 = _source182.dtor_Nullable_a0;
            {
              RAST._IExpr _4886_recursiveGen;
              DCOMP._IOwnership _4887_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4888_recIdents;
              RAST._IExpr _out1453;
              DCOMP._IOwnership _out1454;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1455;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1453, out _out1454, out _out1455);
              _4886_recursiveGen = _out1453;
              _4887_recOwned = _out1454;
              _4888_recIdents = _out1455;
              r = _4886_recursiveGen;
              if (object.Equals(_4887_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1456;
              DCOMP._IOwnership _out1457;
              DCOMP.COMP.FromOwnership(r, _4887_recOwned, expectedOwnership, out _out1456, out _out1457);
              r = _out1456;
              resultingOwnership = _out1457;
              readIdents = _4888_recIdents;
            }
          } else if (_source182.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4889___mcc_h642 = _source182.dtor_Tuple_a0;
            {
              RAST._IType _4890_fromTpeGen;
              RAST._IType _out1458;
              _out1458 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4890_fromTpeGen = _out1458;
              RAST._IType _4891_toTpeGen;
              RAST._IType _out1459;
              _out1459 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4891_toTpeGen = _out1459;
              RAST._IExpr _4892_recursiveGen;
              DCOMP._IOwnership _4893_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4894_recIdents;
              RAST._IExpr _out1460;
              DCOMP._IOwnership _out1461;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1462;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1460, out _out1461, out _out1462);
              _4892_recursiveGen = _out1460;
              _4893_recOwned = _out1461;
              _4894_recIdents = _out1462;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4892_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4890_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4891_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1463;
              DCOMP._IOwnership _out1464;
              DCOMP.COMP.FromOwnership(r, _4893_recOwned, expectedOwnership, out _out1463, out _out1464);
              r = _out1463;
              resultingOwnership = _out1464;
              readIdents = _4894_recIdents;
            }
          } else if (_source182.is_Array) {
            DAST._IType _4895___mcc_h644 = _source182.dtor_element;
            BigInteger _4896___mcc_h645 = _source182.dtor_dims;
            {
              RAST._IType _4897_fromTpeGen;
              RAST._IType _out1465;
              _out1465 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4897_fromTpeGen = _out1465;
              RAST._IType _4898_toTpeGen;
              RAST._IType _out1466;
              _out1466 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4898_toTpeGen = _out1466;
              RAST._IExpr _4899_recursiveGen;
              DCOMP._IOwnership _4900_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4901_recIdents;
              RAST._IExpr _out1467;
              DCOMP._IOwnership _out1468;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1469;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1467, out _out1468, out _out1469);
              _4899_recursiveGen = _out1467;
              _4900_recOwned = _out1468;
              _4901_recIdents = _out1469;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4899_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4897_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4898_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1470;
              DCOMP._IOwnership _out1471;
              DCOMP.COMP.FromOwnership(r, _4900_recOwned, expectedOwnership, out _out1470, out _out1471);
              r = _out1470;
              resultingOwnership = _out1471;
              readIdents = _4901_recIdents;
            }
          } else if (_source182.is_Seq) {
            DAST._IType _4902___mcc_h648 = _source182.dtor_element;
            {
              RAST._IType _4903_fromTpeGen;
              RAST._IType _out1472;
              _out1472 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4903_fromTpeGen = _out1472;
              RAST._IType _4904_toTpeGen;
              RAST._IType _out1473;
              _out1473 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4904_toTpeGen = _out1473;
              RAST._IExpr _4905_recursiveGen;
              DCOMP._IOwnership _4906_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4907_recIdents;
              RAST._IExpr _out1474;
              DCOMP._IOwnership _out1475;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1476;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1474, out _out1475, out _out1476);
              _4905_recursiveGen = _out1474;
              _4906_recOwned = _out1475;
              _4907_recIdents = _out1476;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4905_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4903_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4904_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1477;
              DCOMP._IOwnership _out1478;
              DCOMP.COMP.FromOwnership(r, _4906_recOwned, expectedOwnership, out _out1477, out _out1478);
              r = _out1477;
              resultingOwnership = _out1478;
              readIdents = _4907_recIdents;
            }
          } else if (_source182.is_Set) {
            DAST._IType _4908___mcc_h650 = _source182.dtor_element;
            {
              RAST._IType _4909_fromTpeGen;
              RAST._IType _out1479;
              _out1479 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4909_fromTpeGen = _out1479;
              RAST._IType _4910_toTpeGen;
              RAST._IType _out1480;
              _out1480 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4910_toTpeGen = _out1480;
              RAST._IExpr _4911_recursiveGen;
              DCOMP._IOwnership _4912_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4913_recIdents;
              RAST._IExpr _out1481;
              DCOMP._IOwnership _out1482;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1483;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1481, out _out1482, out _out1483);
              _4911_recursiveGen = _out1481;
              _4912_recOwned = _out1482;
              _4913_recIdents = _out1483;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4911_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4909_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4910_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1484;
              DCOMP._IOwnership _out1485;
              DCOMP.COMP.FromOwnership(r, _4912_recOwned, expectedOwnership, out _out1484, out _out1485);
              r = _out1484;
              resultingOwnership = _out1485;
              readIdents = _4913_recIdents;
            }
          } else if (_source182.is_Multiset) {
            DAST._IType _4914___mcc_h652 = _source182.dtor_element;
            {
              RAST._IType _4915_fromTpeGen;
              RAST._IType _out1486;
              _out1486 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4915_fromTpeGen = _out1486;
              RAST._IType _4916_toTpeGen;
              RAST._IType _out1487;
              _out1487 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4916_toTpeGen = _out1487;
              RAST._IExpr _4917_recursiveGen;
              DCOMP._IOwnership _4918_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4919_recIdents;
              RAST._IExpr _out1488;
              DCOMP._IOwnership _out1489;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1490;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1488, out _out1489, out _out1490);
              _4917_recursiveGen = _out1488;
              _4918_recOwned = _out1489;
              _4919_recIdents = _out1490;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4917_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4915_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4916_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1491;
              DCOMP._IOwnership _out1492;
              DCOMP.COMP.FromOwnership(r, _4918_recOwned, expectedOwnership, out _out1491, out _out1492);
              r = _out1491;
              resultingOwnership = _out1492;
              readIdents = _4919_recIdents;
            }
          } else if (_source182.is_Map) {
            DAST._IType _4920___mcc_h654 = _source182.dtor_key;
            DAST._IType _4921___mcc_h655 = _source182.dtor_value;
            {
              RAST._IType _4922_fromTpeGen;
              RAST._IType _out1493;
              _out1493 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4922_fromTpeGen = _out1493;
              RAST._IType _4923_toTpeGen;
              RAST._IType _out1494;
              _out1494 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4923_toTpeGen = _out1494;
              RAST._IExpr _4924_recursiveGen;
              DCOMP._IOwnership _4925_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4926_recIdents;
              RAST._IExpr _out1495;
              DCOMP._IOwnership _out1496;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1497;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1495, out _out1496, out _out1497);
              _4924_recursiveGen = _out1495;
              _4925_recOwned = _out1496;
              _4926_recIdents = _out1497;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4924_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4922_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4923_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1498;
              DCOMP._IOwnership _out1499;
              DCOMP.COMP.FromOwnership(r, _4925_recOwned, expectedOwnership, out _out1498, out _out1499);
              r = _out1498;
              resultingOwnership = _out1499;
              readIdents = _4926_recIdents;
            }
          } else if (_source182.is_SetBuilder) {
            DAST._IType _4927___mcc_h658 = _source182.dtor_element;
            {
              RAST._IType _4928_fromTpeGen;
              RAST._IType _out1500;
              _out1500 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4928_fromTpeGen = _out1500;
              RAST._IType _4929_toTpeGen;
              RAST._IType _out1501;
              _out1501 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4929_toTpeGen = _out1501;
              RAST._IExpr _4930_recursiveGen;
              DCOMP._IOwnership _4931_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4932_recIdents;
              RAST._IExpr _out1502;
              DCOMP._IOwnership _out1503;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1504;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1502, out _out1503, out _out1504);
              _4930_recursiveGen = _out1502;
              _4931_recOwned = _out1503;
              _4932_recIdents = _out1504;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4930_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4928_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4929_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1505;
              DCOMP._IOwnership _out1506;
              DCOMP.COMP.FromOwnership(r, _4931_recOwned, expectedOwnership, out _out1505, out _out1506);
              r = _out1505;
              resultingOwnership = _out1506;
              readIdents = _4932_recIdents;
            }
          } else if (_source182.is_MapBuilder) {
            DAST._IType _4933___mcc_h660 = _source182.dtor_key;
            DAST._IType _4934___mcc_h661 = _source182.dtor_value;
            {
              RAST._IType _4935_fromTpeGen;
              RAST._IType _out1507;
              _out1507 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4935_fromTpeGen = _out1507;
              RAST._IType _4936_toTpeGen;
              RAST._IType _out1508;
              _out1508 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4936_toTpeGen = _out1508;
              RAST._IExpr _4937_recursiveGen;
              DCOMP._IOwnership _4938_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4939_recIdents;
              RAST._IExpr _out1509;
              DCOMP._IOwnership _out1510;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1511;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1509, out _out1510, out _out1511);
              _4937_recursiveGen = _out1509;
              _4938_recOwned = _out1510;
              _4939_recIdents = _out1511;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4937_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4935_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4936_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1512;
              DCOMP._IOwnership _out1513;
              DCOMP.COMP.FromOwnership(r, _4938_recOwned, expectedOwnership, out _out1512, out _out1513);
              r = _out1512;
              resultingOwnership = _out1513;
              readIdents = _4939_recIdents;
            }
          } else if (_source182.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4940___mcc_h664 = _source182.dtor_args;
            DAST._IType _4941___mcc_h665 = _source182.dtor_result;
            {
              RAST._IType _4942_fromTpeGen;
              RAST._IType _out1514;
              _out1514 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4942_fromTpeGen = _out1514;
              RAST._IType _4943_toTpeGen;
              RAST._IType _out1515;
              _out1515 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4943_toTpeGen = _out1515;
              RAST._IExpr _4944_recursiveGen;
              DCOMP._IOwnership _4945_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4946_recIdents;
              RAST._IExpr _out1516;
              DCOMP._IOwnership _out1517;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1518;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1516, out _out1517, out _out1518);
              _4944_recursiveGen = _out1516;
              _4945_recOwned = _out1517;
              _4946_recIdents = _out1518;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4944_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4942_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4943_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1519;
              DCOMP._IOwnership _out1520;
              DCOMP.COMP.FromOwnership(r, _4945_recOwned, expectedOwnership, out _out1519, out _out1520);
              r = _out1519;
              resultingOwnership = _out1520;
              readIdents = _4946_recIdents;
            }
          } else if (_source182.is_Primitive) {
            DAST._IPrimitive _4947___mcc_h668 = _source182.dtor_Primitive_a0;
            {
              RAST._IType _4948_fromTpeGen;
              RAST._IType _out1521;
              _out1521 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4948_fromTpeGen = _out1521;
              RAST._IType _4949_toTpeGen;
              RAST._IType _out1522;
              _out1522 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4949_toTpeGen = _out1522;
              RAST._IExpr _4950_recursiveGen;
              DCOMP._IOwnership _4951_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4952_recIdents;
              RAST._IExpr _out1523;
              DCOMP._IOwnership _out1524;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1525;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1523, out _out1524, out _out1525);
              _4950_recursiveGen = _out1523;
              _4951_recOwned = _out1524;
              _4952_recIdents = _out1525;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4950_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4948_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4949_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1526;
              DCOMP._IOwnership _out1527;
              DCOMP.COMP.FromOwnership(r, _4951_recOwned, expectedOwnership, out _out1526, out _out1527);
              r = _out1526;
              resultingOwnership = _out1527;
              readIdents = _4952_recIdents;
            }
          } else if (_source182.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4953___mcc_h670 = _source182.dtor_Passthrough_a0;
            {
              RAST._IType _4954_fromTpeGen;
              RAST._IType _out1528;
              _out1528 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4954_fromTpeGen = _out1528;
              RAST._IType _4955_toTpeGen;
              RAST._IType _out1529;
              _out1529 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4955_toTpeGen = _out1529;
              RAST._IExpr _4956_recursiveGen;
              DCOMP._IOwnership _4957_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4958_recIdents;
              RAST._IExpr _out1530;
              DCOMP._IOwnership _out1531;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1532;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1530, out _out1531, out _out1532);
              _4956_recursiveGen = _out1530;
              _4957_recOwned = _out1531;
              _4958_recIdents = _out1532;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4956_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4954_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4955_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1533;
              DCOMP._IOwnership _out1534;
              DCOMP.COMP.FromOwnership(r, _4957_recOwned, expectedOwnership, out _out1533, out _out1534);
              r = _out1533;
              resultingOwnership = _out1534;
              readIdents = _4958_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4959___mcc_h672 = _source182.dtor_TypeArg_a0;
            {
              RAST._IType _4960_fromTpeGen;
              RAST._IType _out1535;
              _out1535 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _4960_fromTpeGen = _out1535;
              RAST._IType _4961_toTpeGen;
              RAST._IType _out1536;
              _out1536 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _4961_toTpeGen = _out1536;
              RAST._IExpr _4962_recursiveGen;
              DCOMP._IOwnership _4963_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4964_recIdents;
              RAST._IExpr _out1537;
              DCOMP._IOwnership _out1538;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1539;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1537, out _out1538, out _out1539);
              _4962_recursiveGen = _out1537;
              _4963_recOwned = _out1538;
              _4964_recIdents = _out1539;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4962_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4960_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4961_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1540;
              DCOMP._IOwnership _out1541;
              DCOMP.COMP.FromOwnership(r, _4963_recOwned, expectedOwnership, out _out1540, out _out1541);
              r = _out1540;
              resultingOwnership = _out1541;
              readIdents = _4964_recIdents;
            }
          }
        } else if (_source124.is_SetBuilder) {
          DAST._IType _4965___mcc_h674 = _source124.dtor_element;
          DAST._IType _source187 = _3403___mcc_h1;
          if (_source187.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4966___mcc_h678 = _source187.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4967___mcc_h679 = _source187.dtor_typeArgs;
            DAST._IResolvedType _4968___mcc_h680 = _source187.dtor_resolved;
            DAST._IResolvedType _source188 = _4968___mcc_h680;
            if (_source188.is_Datatype) {
              DAST._IDatatypeType _4969___mcc_h684 = _source188.dtor_datatypeType;
              {
                RAST._IType _4970_fromTpeGen;
                RAST._IType _out1542;
                _out1542 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4970_fromTpeGen = _out1542;
                RAST._IType _4971_toTpeGen;
                RAST._IType _out1543;
                _out1543 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4971_toTpeGen = _out1543;
                RAST._IExpr _4972_recursiveGen;
                DCOMP._IOwnership _4973_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4974_recIdents;
                RAST._IExpr _out1544;
                DCOMP._IOwnership _out1545;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1546;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1544, out _out1545, out _out1546);
                _4972_recursiveGen = _out1544;
                _4973_recOwned = _out1545;
                _4974_recIdents = _out1546;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4972_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4970_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4971_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1547;
                DCOMP._IOwnership _out1548;
                DCOMP.COMP.FromOwnership(r, _4973_recOwned, expectedOwnership, out _out1547, out _out1548);
                r = _out1547;
                resultingOwnership = _out1548;
                readIdents = _4974_recIdents;
              }
            } else if (_source188.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4975___mcc_h686 = _source188.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4976___mcc_h687 = _source188.dtor_attributes;
              {
                RAST._IType _4977_fromTpeGen;
                RAST._IType _out1549;
                _out1549 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _4977_fromTpeGen = _out1549;
                RAST._IType _4978_toTpeGen;
                RAST._IType _out1550;
                _out1550 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _4978_toTpeGen = _out1550;
                RAST._IExpr _4979_recursiveGen;
                DCOMP._IOwnership _4980_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4981_recIdents;
                RAST._IExpr _out1551;
                DCOMP._IOwnership _out1552;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1553;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1551, out _out1552, out _out1553);
                _4979_recursiveGen = _out1551;
                _4980_recOwned = _out1552;
                _4981_recIdents = _out1553;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4979_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4977_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4978_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1554;
                DCOMP._IOwnership _out1555;
                DCOMP.COMP.FromOwnership(r, _4980_recOwned, expectedOwnership, out _out1554, out _out1555);
                r = _out1554;
                resultingOwnership = _out1555;
                readIdents = _4981_recIdents;
              }
            } else {
              DAST._IType _4982___mcc_h690 = _source188.dtor_baseType;
              DAST._INewtypeRange _4983___mcc_h691 = _source188.dtor_range;
              bool _4984___mcc_h692 = _source188.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4985___mcc_h693 = _source188.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4986_attributes = _4985___mcc_h693;
              bool _4987_erase = _4984___mcc_h692;
              DAST._INewtypeRange _4988_range = _4983___mcc_h691;
              DAST._IType _4989_b = _4982___mcc_h690;
              {
                Std.Wrappers._IOption<RAST._IType> _4990_nativeToType;
                _4990_nativeToType = DCOMP.COMP.NewtypeToRustType(_4989_b, _4988_range);
                if (object.Equals(_3397_fromTpe, _4989_b)) {
                  RAST._IExpr _4991_recursiveGen;
                  DCOMP._IOwnership _4992_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4993_recIdents;
                  RAST._IExpr _out1556;
                  DCOMP._IOwnership _out1557;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1558;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1556, out _out1557, out _out1558);
                  _4991_recursiveGen = _out1556;
                  _4992_recOwned = _out1557;
                  _4993_recIdents = _out1558;
                  readIdents = _4993_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source189 = _4990_nativeToType;
                  if (_source189.is_None) {
                    if (_4987_erase) {
                      r = _4991_recursiveGen;
                    } else {
                      RAST._IType _4994_rhsType;
                      RAST._IType _out1559;
                      _out1559 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _4994_rhsType = _out1559;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4994_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4991_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1560;
                    DCOMP._IOwnership _out1561;
                    DCOMP.COMP.FromOwnership(r, _4992_recOwned, expectedOwnership, out _out1560, out _out1561);
                    r = _out1560;
                    resultingOwnership = _out1561;
                  } else {
                    RAST._IType _4995___mcc_h1755 = _source189.dtor_value;
                    RAST._IType _4996_v = _4995___mcc_h1755;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4991_recursiveGen, RAST.Expr.create_ExprFromType(_4996_v)));
                    RAST._IExpr _out1562;
                    DCOMP._IOwnership _out1563;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1562, out _out1563);
                    r = _out1562;
                    resultingOwnership = _out1563;
                  }
                } else {
                  if ((_4990_nativeToType).is_Some) {
                    DAST._IType _source190 = _3397_fromTpe;
                    if (_source190.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4997___mcc_h1756 = _source190.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4998___mcc_h1757 = _source190.dtor_typeArgs;
                      DAST._IResolvedType _4999___mcc_h1758 = _source190.dtor_resolved;
                      DAST._IResolvedType _source191 = _4999___mcc_h1758;
                      if (_source191.is_Datatype) {
                        DAST._IDatatypeType _5000___mcc_h1762 = _source191.dtor_datatypeType;
                      } else if (_source191.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5001___mcc_h1764 = _source191.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5002___mcc_h1765 = _source191.dtor_attributes;
                      } else {
                        DAST._IType _5003___mcc_h1768 = _source191.dtor_baseType;
                        DAST._INewtypeRange _5004___mcc_h1769 = _source191.dtor_range;
                        bool _5005___mcc_h1770 = _source191.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5006___mcc_h1771 = _source191.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5007_attributes0 = _5006___mcc_h1771;
                        bool _5008_erase0 = _5005___mcc_h1770;
                        DAST._INewtypeRange _5009_range0 = _5004___mcc_h1769;
                        DAST._IType _5010_b0 = _5003___mcc_h1768;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5011_nativeFromType;
                          _5011_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5010_b0, _5009_range0);
                          if ((_5011_nativeFromType).is_Some) {
                            RAST._IExpr _5012_recursiveGen;
                            DCOMP._IOwnership _5013_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5014_recIdents;
                            RAST._IExpr _out1564;
                            DCOMP._IOwnership _out1565;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1566;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1564, out _out1565, out _out1566);
                            _5012_recursiveGen = _out1564;
                            _5013_recOwned = _out1565;
                            _5014_recIdents = _out1566;
                            RAST._IExpr _out1567;
                            DCOMP._IOwnership _out1568;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5012_recursiveGen, (_4990_nativeToType).dtor_value), _5013_recOwned, expectedOwnership, out _out1567, out _out1568);
                            r = _out1567;
                            resultingOwnership = _out1568;
                            readIdents = _5014_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source190.is_Nullable) {
                      DAST._IType _5015___mcc_h1776 = _source190.dtor_Nullable_a0;
                    } else if (_source190.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5016___mcc_h1778 = _source190.dtor_Tuple_a0;
                    } else if (_source190.is_Array) {
                      DAST._IType _5017___mcc_h1780 = _source190.dtor_element;
                      BigInteger _5018___mcc_h1781 = _source190.dtor_dims;
                    } else if (_source190.is_Seq) {
                      DAST._IType _5019___mcc_h1784 = _source190.dtor_element;
                    } else if (_source190.is_Set) {
                      DAST._IType _5020___mcc_h1786 = _source190.dtor_element;
                    } else if (_source190.is_Multiset) {
                      DAST._IType _5021___mcc_h1788 = _source190.dtor_element;
                    } else if (_source190.is_Map) {
                      DAST._IType _5022___mcc_h1790 = _source190.dtor_key;
                      DAST._IType _5023___mcc_h1791 = _source190.dtor_value;
                    } else if (_source190.is_SetBuilder) {
                      DAST._IType _5024___mcc_h1794 = _source190.dtor_element;
                    } else if (_source190.is_MapBuilder) {
                      DAST._IType _5025___mcc_h1796 = _source190.dtor_key;
                      DAST._IType _5026___mcc_h1797 = _source190.dtor_value;
                    } else if (_source190.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5027___mcc_h1800 = _source190.dtor_args;
                      DAST._IType _5028___mcc_h1801 = _source190.dtor_result;
                    } else if (_source190.is_Primitive) {
                      DAST._IPrimitive _5029___mcc_h1804 = _source190.dtor_Primitive_a0;
                    } else if (_source190.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5030___mcc_h1806 = _source190.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5031___mcc_h1808 = _source190.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5032_recursiveGen;
                      DCOMP._IOwnership _5033_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5034_recIdents;
                      RAST._IExpr _out1569;
                      DCOMP._IOwnership _out1570;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1571;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1569, out _out1570, out _out1571);
                      _5032_recursiveGen = _out1569;
                      _5033_recOwned = _out1570;
                      _5034_recIdents = _out1571;
                      RAST._IExpr _out1572;
                      DCOMP._IOwnership _out1573;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5032_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4990_nativeToType).dtor_value), _5033_recOwned, expectedOwnership, out _out1572, out _out1573);
                      r = _out1572;
                      resultingOwnership = _out1573;
                      readIdents = _5034_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1574;
                  DCOMP._IOwnership _out1575;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1576;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _4989_b), _4989_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out1574, out _out1575, out _out1576);
                  r = _out1574;
                  resultingOwnership = _out1575;
                  readIdents = _out1576;
                }
              }
            }
          } else if (_source187.is_Nullable) {
            DAST._IType _5035___mcc_h698 = _source187.dtor_Nullable_a0;
            {
              RAST._IExpr _5036_recursiveGen;
              DCOMP._IOwnership _5037_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5038_recIdents;
              RAST._IExpr _out1577;
              DCOMP._IOwnership _out1578;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1579;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1577, out _out1578, out _out1579);
              _5036_recursiveGen = _out1577;
              _5037_recOwned = _out1578;
              _5038_recIdents = _out1579;
              r = _5036_recursiveGen;
              if (object.Equals(_5037_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1580;
              DCOMP._IOwnership _out1581;
              DCOMP.COMP.FromOwnership(r, _5037_recOwned, expectedOwnership, out _out1580, out _out1581);
              r = _out1580;
              resultingOwnership = _out1581;
              readIdents = _5038_recIdents;
            }
          } else if (_source187.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5039___mcc_h700 = _source187.dtor_Tuple_a0;
            {
              RAST._IType _5040_fromTpeGen;
              RAST._IType _out1582;
              _out1582 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5040_fromTpeGen = _out1582;
              RAST._IType _5041_toTpeGen;
              RAST._IType _out1583;
              _out1583 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5041_toTpeGen = _out1583;
              RAST._IExpr _5042_recursiveGen;
              DCOMP._IOwnership _5043_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5044_recIdents;
              RAST._IExpr _out1584;
              DCOMP._IOwnership _out1585;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1586;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1584, out _out1585, out _out1586);
              _5042_recursiveGen = _out1584;
              _5043_recOwned = _out1585;
              _5044_recIdents = _out1586;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5042_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5040_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5041_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1587;
              DCOMP._IOwnership _out1588;
              DCOMP.COMP.FromOwnership(r, _5043_recOwned, expectedOwnership, out _out1587, out _out1588);
              r = _out1587;
              resultingOwnership = _out1588;
              readIdents = _5044_recIdents;
            }
          } else if (_source187.is_Array) {
            DAST._IType _5045___mcc_h702 = _source187.dtor_element;
            BigInteger _5046___mcc_h703 = _source187.dtor_dims;
            {
              RAST._IType _5047_fromTpeGen;
              RAST._IType _out1589;
              _out1589 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5047_fromTpeGen = _out1589;
              RAST._IType _5048_toTpeGen;
              RAST._IType _out1590;
              _out1590 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5048_toTpeGen = _out1590;
              RAST._IExpr _5049_recursiveGen;
              DCOMP._IOwnership _5050_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5051_recIdents;
              RAST._IExpr _out1591;
              DCOMP._IOwnership _out1592;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1593;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1591, out _out1592, out _out1593);
              _5049_recursiveGen = _out1591;
              _5050_recOwned = _out1592;
              _5051_recIdents = _out1593;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5049_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5047_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5048_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1594;
              DCOMP._IOwnership _out1595;
              DCOMP.COMP.FromOwnership(r, _5050_recOwned, expectedOwnership, out _out1594, out _out1595);
              r = _out1594;
              resultingOwnership = _out1595;
              readIdents = _5051_recIdents;
            }
          } else if (_source187.is_Seq) {
            DAST._IType _5052___mcc_h706 = _source187.dtor_element;
            {
              RAST._IType _5053_fromTpeGen;
              RAST._IType _out1596;
              _out1596 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5053_fromTpeGen = _out1596;
              RAST._IType _5054_toTpeGen;
              RAST._IType _out1597;
              _out1597 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5054_toTpeGen = _out1597;
              RAST._IExpr _5055_recursiveGen;
              DCOMP._IOwnership _5056_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5057_recIdents;
              RAST._IExpr _out1598;
              DCOMP._IOwnership _out1599;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1600;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1598, out _out1599, out _out1600);
              _5055_recursiveGen = _out1598;
              _5056_recOwned = _out1599;
              _5057_recIdents = _out1600;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5055_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5053_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5054_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1601;
              DCOMP._IOwnership _out1602;
              DCOMP.COMP.FromOwnership(r, _5056_recOwned, expectedOwnership, out _out1601, out _out1602);
              r = _out1601;
              resultingOwnership = _out1602;
              readIdents = _5057_recIdents;
            }
          } else if (_source187.is_Set) {
            DAST._IType _5058___mcc_h708 = _source187.dtor_element;
            {
              RAST._IType _5059_fromTpeGen;
              RAST._IType _out1603;
              _out1603 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5059_fromTpeGen = _out1603;
              RAST._IType _5060_toTpeGen;
              RAST._IType _out1604;
              _out1604 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5060_toTpeGen = _out1604;
              RAST._IExpr _5061_recursiveGen;
              DCOMP._IOwnership _5062_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5063_recIdents;
              RAST._IExpr _out1605;
              DCOMP._IOwnership _out1606;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1607;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1605, out _out1606, out _out1607);
              _5061_recursiveGen = _out1605;
              _5062_recOwned = _out1606;
              _5063_recIdents = _out1607;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5061_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5059_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5060_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1608;
              DCOMP._IOwnership _out1609;
              DCOMP.COMP.FromOwnership(r, _5062_recOwned, expectedOwnership, out _out1608, out _out1609);
              r = _out1608;
              resultingOwnership = _out1609;
              readIdents = _5063_recIdents;
            }
          } else if (_source187.is_Multiset) {
            DAST._IType _5064___mcc_h710 = _source187.dtor_element;
            {
              RAST._IType _5065_fromTpeGen;
              RAST._IType _out1610;
              _out1610 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5065_fromTpeGen = _out1610;
              RAST._IType _5066_toTpeGen;
              RAST._IType _out1611;
              _out1611 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5066_toTpeGen = _out1611;
              RAST._IExpr _5067_recursiveGen;
              DCOMP._IOwnership _5068_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5069_recIdents;
              RAST._IExpr _out1612;
              DCOMP._IOwnership _out1613;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1614;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1612, out _out1613, out _out1614);
              _5067_recursiveGen = _out1612;
              _5068_recOwned = _out1613;
              _5069_recIdents = _out1614;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5067_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5065_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5066_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1615;
              DCOMP._IOwnership _out1616;
              DCOMP.COMP.FromOwnership(r, _5068_recOwned, expectedOwnership, out _out1615, out _out1616);
              r = _out1615;
              resultingOwnership = _out1616;
              readIdents = _5069_recIdents;
            }
          } else if (_source187.is_Map) {
            DAST._IType _5070___mcc_h712 = _source187.dtor_key;
            DAST._IType _5071___mcc_h713 = _source187.dtor_value;
            {
              RAST._IType _5072_fromTpeGen;
              RAST._IType _out1617;
              _out1617 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5072_fromTpeGen = _out1617;
              RAST._IType _5073_toTpeGen;
              RAST._IType _out1618;
              _out1618 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5073_toTpeGen = _out1618;
              RAST._IExpr _5074_recursiveGen;
              DCOMP._IOwnership _5075_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5076_recIdents;
              RAST._IExpr _out1619;
              DCOMP._IOwnership _out1620;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1621;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1619, out _out1620, out _out1621);
              _5074_recursiveGen = _out1619;
              _5075_recOwned = _out1620;
              _5076_recIdents = _out1621;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5074_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5072_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5073_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1622;
              DCOMP._IOwnership _out1623;
              DCOMP.COMP.FromOwnership(r, _5075_recOwned, expectedOwnership, out _out1622, out _out1623);
              r = _out1622;
              resultingOwnership = _out1623;
              readIdents = _5076_recIdents;
            }
          } else if (_source187.is_SetBuilder) {
            DAST._IType _5077___mcc_h716 = _source187.dtor_element;
            {
              RAST._IType _5078_fromTpeGen;
              RAST._IType _out1624;
              _out1624 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5078_fromTpeGen = _out1624;
              RAST._IType _5079_toTpeGen;
              RAST._IType _out1625;
              _out1625 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5079_toTpeGen = _out1625;
              RAST._IExpr _5080_recursiveGen;
              DCOMP._IOwnership _5081_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5082_recIdents;
              RAST._IExpr _out1626;
              DCOMP._IOwnership _out1627;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1628;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1626, out _out1627, out _out1628);
              _5080_recursiveGen = _out1626;
              _5081_recOwned = _out1627;
              _5082_recIdents = _out1628;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5080_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5078_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5079_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1629;
              DCOMP._IOwnership _out1630;
              DCOMP.COMP.FromOwnership(r, _5081_recOwned, expectedOwnership, out _out1629, out _out1630);
              r = _out1629;
              resultingOwnership = _out1630;
              readIdents = _5082_recIdents;
            }
          } else if (_source187.is_MapBuilder) {
            DAST._IType _5083___mcc_h718 = _source187.dtor_key;
            DAST._IType _5084___mcc_h719 = _source187.dtor_value;
            {
              RAST._IType _5085_fromTpeGen;
              RAST._IType _out1631;
              _out1631 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5085_fromTpeGen = _out1631;
              RAST._IType _5086_toTpeGen;
              RAST._IType _out1632;
              _out1632 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5086_toTpeGen = _out1632;
              RAST._IExpr _5087_recursiveGen;
              DCOMP._IOwnership _5088_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5089_recIdents;
              RAST._IExpr _out1633;
              DCOMP._IOwnership _out1634;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1635;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1633, out _out1634, out _out1635);
              _5087_recursiveGen = _out1633;
              _5088_recOwned = _out1634;
              _5089_recIdents = _out1635;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5087_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5085_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5086_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1636;
              DCOMP._IOwnership _out1637;
              DCOMP.COMP.FromOwnership(r, _5088_recOwned, expectedOwnership, out _out1636, out _out1637);
              r = _out1636;
              resultingOwnership = _out1637;
              readIdents = _5089_recIdents;
            }
          } else if (_source187.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5090___mcc_h722 = _source187.dtor_args;
            DAST._IType _5091___mcc_h723 = _source187.dtor_result;
            {
              RAST._IType _5092_fromTpeGen;
              RAST._IType _out1638;
              _out1638 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5092_fromTpeGen = _out1638;
              RAST._IType _5093_toTpeGen;
              RAST._IType _out1639;
              _out1639 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5093_toTpeGen = _out1639;
              RAST._IExpr _5094_recursiveGen;
              DCOMP._IOwnership _5095_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5096_recIdents;
              RAST._IExpr _out1640;
              DCOMP._IOwnership _out1641;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1642;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1640, out _out1641, out _out1642);
              _5094_recursiveGen = _out1640;
              _5095_recOwned = _out1641;
              _5096_recIdents = _out1642;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5094_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5092_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5093_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1643;
              DCOMP._IOwnership _out1644;
              DCOMP.COMP.FromOwnership(r, _5095_recOwned, expectedOwnership, out _out1643, out _out1644);
              r = _out1643;
              resultingOwnership = _out1644;
              readIdents = _5096_recIdents;
            }
          } else if (_source187.is_Primitive) {
            DAST._IPrimitive _5097___mcc_h726 = _source187.dtor_Primitive_a0;
            {
              RAST._IType _5098_fromTpeGen;
              RAST._IType _out1645;
              _out1645 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5098_fromTpeGen = _out1645;
              RAST._IType _5099_toTpeGen;
              RAST._IType _out1646;
              _out1646 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5099_toTpeGen = _out1646;
              RAST._IExpr _5100_recursiveGen;
              DCOMP._IOwnership _5101_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5102_recIdents;
              RAST._IExpr _out1647;
              DCOMP._IOwnership _out1648;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1649;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1647, out _out1648, out _out1649);
              _5100_recursiveGen = _out1647;
              _5101_recOwned = _out1648;
              _5102_recIdents = _out1649;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5100_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5098_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5099_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1650;
              DCOMP._IOwnership _out1651;
              DCOMP.COMP.FromOwnership(r, _5101_recOwned, expectedOwnership, out _out1650, out _out1651);
              r = _out1650;
              resultingOwnership = _out1651;
              readIdents = _5102_recIdents;
            }
          } else if (_source187.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5103___mcc_h728 = _source187.dtor_Passthrough_a0;
            {
              RAST._IType _5104_fromTpeGen;
              RAST._IType _out1652;
              _out1652 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5104_fromTpeGen = _out1652;
              RAST._IType _5105_toTpeGen;
              RAST._IType _out1653;
              _out1653 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5105_toTpeGen = _out1653;
              RAST._IExpr _5106_recursiveGen;
              DCOMP._IOwnership _5107_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5108_recIdents;
              RAST._IExpr _out1654;
              DCOMP._IOwnership _out1655;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1656;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1654, out _out1655, out _out1656);
              _5106_recursiveGen = _out1654;
              _5107_recOwned = _out1655;
              _5108_recIdents = _out1656;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5106_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5104_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5105_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1657;
              DCOMP._IOwnership _out1658;
              DCOMP.COMP.FromOwnership(r, _5107_recOwned, expectedOwnership, out _out1657, out _out1658);
              r = _out1657;
              resultingOwnership = _out1658;
              readIdents = _5108_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5109___mcc_h730 = _source187.dtor_TypeArg_a0;
            {
              RAST._IType _5110_fromTpeGen;
              RAST._IType _out1659;
              _out1659 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5110_fromTpeGen = _out1659;
              RAST._IType _5111_toTpeGen;
              RAST._IType _out1660;
              _out1660 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5111_toTpeGen = _out1660;
              RAST._IExpr _5112_recursiveGen;
              DCOMP._IOwnership _5113_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5114_recIdents;
              RAST._IExpr _out1661;
              DCOMP._IOwnership _out1662;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1663;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1661, out _out1662, out _out1663);
              _5112_recursiveGen = _out1661;
              _5113_recOwned = _out1662;
              _5114_recIdents = _out1663;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5112_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5110_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5111_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1664;
              DCOMP._IOwnership _out1665;
              DCOMP.COMP.FromOwnership(r, _5113_recOwned, expectedOwnership, out _out1664, out _out1665);
              r = _out1664;
              resultingOwnership = _out1665;
              readIdents = _5114_recIdents;
            }
          }
        } else if (_source124.is_MapBuilder) {
          DAST._IType _5115___mcc_h732 = _source124.dtor_key;
          DAST._IType _5116___mcc_h733 = _source124.dtor_value;
          DAST._IType _source192 = _3403___mcc_h1;
          if (_source192.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5117___mcc_h740 = _source192.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5118___mcc_h741 = _source192.dtor_typeArgs;
            DAST._IResolvedType _5119___mcc_h742 = _source192.dtor_resolved;
            DAST._IResolvedType _source193 = _5119___mcc_h742;
            if (_source193.is_Datatype) {
              DAST._IDatatypeType _5120___mcc_h746 = _source193.dtor_datatypeType;
              {
                RAST._IType _5121_fromTpeGen;
                RAST._IType _out1666;
                _out1666 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5121_fromTpeGen = _out1666;
                RAST._IType _5122_toTpeGen;
                RAST._IType _out1667;
                _out1667 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5122_toTpeGen = _out1667;
                RAST._IExpr _5123_recursiveGen;
                DCOMP._IOwnership _5124_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5125_recIdents;
                RAST._IExpr _out1668;
                DCOMP._IOwnership _out1669;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1670;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1668, out _out1669, out _out1670);
                _5123_recursiveGen = _out1668;
                _5124_recOwned = _out1669;
                _5125_recIdents = _out1670;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5123_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5121_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5122_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1671;
                DCOMP._IOwnership _out1672;
                DCOMP.COMP.FromOwnership(r, _5124_recOwned, expectedOwnership, out _out1671, out _out1672);
                r = _out1671;
                resultingOwnership = _out1672;
                readIdents = _5125_recIdents;
              }
            } else if (_source193.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5126___mcc_h748 = _source193.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5127___mcc_h749 = _source193.dtor_attributes;
              {
                RAST._IType _5128_fromTpeGen;
                RAST._IType _out1673;
                _out1673 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5128_fromTpeGen = _out1673;
                RAST._IType _5129_toTpeGen;
                RAST._IType _out1674;
                _out1674 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5129_toTpeGen = _out1674;
                RAST._IExpr _5130_recursiveGen;
                DCOMP._IOwnership _5131_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5132_recIdents;
                RAST._IExpr _out1675;
                DCOMP._IOwnership _out1676;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1677;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1675, out _out1676, out _out1677);
                _5130_recursiveGen = _out1675;
                _5131_recOwned = _out1676;
                _5132_recIdents = _out1677;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5130_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5128_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5129_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1678;
                DCOMP._IOwnership _out1679;
                DCOMP.COMP.FromOwnership(r, _5131_recOwned, expectedOwnership, out _out1678, out _out1679);
                r = _out1678;
                resultingOwnership = _out1679;
                readIdents = _5132_recIdents;
              }
            } else {
              DAST._IType _5133___mcc_h752 = _source193.dtor_baseType;
              DAST._INewtypeRange _5134___mcc_h753 = _source193.dtor_range;
              bool _5135___mcc_h754 = _source193.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5136___mcc_h755 = _source193.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5137_attributes = _5136___mcc_h755;
              bool _5138_erase = _5135___mcc_h754;
              DAST._INewtypeRange _5139_range = _5134___mcc_h753;
              DAST._IType _5140_b = _5133___mcc_h752;
              {
                Std.Wrappers._IOption<RAST._IType> _5141_nativeToType;
                _5141_nativeToType = DCOMP.COMP.NewtypeToRustType(_5140_b, _5139_range);
                if (object.Equals(_3397_fromTpe, _5140_b)) {
                  RAST._IExpr _5142_recursiveGen;
                  DCOMP._IOwnership _5143_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5144_recIdents;
                  RAST._IExpr _out1680;
                  DCOMP._IOwnership _out1681;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1682;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1680, out _out1681, out _out1682);
                  _5142_recursiveGen = _out1680;
                  _5143_recOwned = _out1681;
                  _5144_recIdents = _out1682;
                  readIdents = _5144_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source194 = _5141_nativeToType;
                  if (_source194.is_None) {
                    if (_5138_erase) {
                      r = _5142_recursiveGen;
                    } else {
                      RAST._IType _5145_rhsType;
                      RAST._IType _out1683;
                      _out1683 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _5145_rhsType = _out1683;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5145_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5142_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1684;
                    DCOMP._IOwnership _out1685;
                    DCOMP.COMP.FromOwnership(r, _5143_recOwned, expectedOwnership, out _out1684, out _out1685);
                    r = _out1684;
                    resultingOwnership = _out1685;
                  } else {
                    RAST._IType _5146___mcc_h1810 = _source194.dtor_value;
                    RAST._IType _5147_v = _5146___mcc_h1810;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5142_recursiveGen, RAST.Expr.create_ExprFromType(_5147_v)));
                    RAST._IExpr _out1686;
                    DCOMP._IOwnership _out1687;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1686, out _out1687);
                    r = _out1686;
                    resultingOwnership = _out1687;
                  }
                } else {
                  if ((_5141_nativeToType).is_Some) {
                    DAST._IType _source195 = _3397_fromTpe;
                    if (_source195.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5148___mcc_h1811 = _source195.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5149___mcc_h1812 = _source195.dtor_typeArgs;
                      DAST._IResolvedType _5150___mcc_h1813 = _source195.dtor_resolved;
                      DAST._IResolvedType _source196 = _5150___mcc_h1813;
                      if (_source196.is_Datatype) {
                        DAST._IDatatypeType _5151___mcc_h1817 = _source196.dtor_datatypeType;
                      } else if (_source196.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5152___mcc_h1819 = _source196.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5153___mcc_h1820 = _source196.dtor_attributes;
                      } else {
                        DAST._IType _5154___mcc_h1823 = _source196.dtor_baseType;
                        DAST._INewtypeRange _5155___mcc_h1824 = _source196.dtor_range;
                        bool _5156___mcc_h1825 = _source196.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5157___mcc_h1826 = _source196.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5158_attributes0 = _5157___mcc_h1826;
                        bool _5159_erase0 = _5156___mcc_h1825;
                        DAST._INewtypeRange _5160_range0 = _5155___mcc_h1824;
                        DAST._IType _5161_b0 = _5154___mcc_h1823;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5162_nativeFromType;
                          _5162_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5161_b0, _5160_range0);
                          if ((_5162_nativeFromType).is_Some) {
                            RAST._IExpr _5163_recursiveGen;
                            DCOMP._IOwnership _5164_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5165_recIdents;
                            RAST._IExpr _out1688;
                            DCOMP._IOwnership _out1689;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1690;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1688, out _out1689, out _out1690);
                            _5163_recursiveGen = _out1688;
                            _5164_recOwned = _out1689;
                            _5165_recIdents = _out1690;
                            RAST._IExpr _out1691;
                            DCOMP._IOwnership _out1692;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5163_recursiveGen, (_5141_nativeToType).dtor_value), _5164_recOwned, expectedOwnership, out _out1691, out _out1692);
                            r = _out1691;
                            resultingOwnership = _out1692;
                            readIdents = _5165_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source195.is_Nullable) {
                      DAST._IType _5166___mcc_h1831 = _source195.dtor_Nullable_a0;
                    } else if (_source195.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5167___mcc_h1833 = _source195.dtor_Tuple_a0;
                    } else if (_source195.is_Array) {
                      DAST._IType _5168___mcc_h1835 = _source195.dtor_element;
                      BigInteger _5169___mcc_h1836 = _source195.dtor_dims;
                    } else if (_source195.is_Seq) {
                      DAST._IType _5170___mcc_h1839 = _source195.dtor_element;
                    } else if (_source195.is_Set) {
                      DAST._IType _5171___mcc_h1841 = _source195.dtor_element;
                    } else if (_source195.is_Multiset) {
                      DAST._IType _5172___mcc_h1843 = _source195.dtor_element;
                    } else if (_source195.is_Map) {
                      DAST._IType _5173___mcc_h1845 = _source195.dtor_key;
                      DAST._IType _5174___mcc_h1846 = _source195.dtor_value;
                    } else if (_source195.is_SetBuilder) {
                      DAST._IType _5175___mcc_h1849 = _source195.dtor_element;
                    } else if (_source195.is_MapBuilder) {
                      DAST._IType _5176___mcc_h1851 = _source195.dtor_key;
                      DAST._IType _5177___mcc_h1852 = _source195.dtor_value;
                    } else if (_source195.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5178___mcc_h1855 = _source195.dtor_args;
                      DAST._IType _5179___mcc_h1856 = _source195.dtor_result;
                    } else if (_source195.is_Primitive) {
                      DAST._IPrimitive _5180___mcc_h1859 = _source195.dtor_Primitive_a0;
                    } else if (_source195.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5181___mcc_h1861 = _source195.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5182___mcc_h1863 = _source195.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5183_recursiveGen;
                      DCOMP._IOwnership _5184_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5185_recIdents;
                      RAST._IExpr _out1693;
                      DCOMP._IOwnership _out1694;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1695;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1693, out _out1694, out _out1695);
                      _5183_recursiveGen = _out1693;
                      _5184_recOwned = _out1694;
                      _5185_recIdents = _out1695;
                      RAST._IExpr _out1696;
                      DCOMP._IOwnership _out1697;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5183_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5141_nativeToType).dtor_value), _5184_recOwned, expectedOwnership, out _out1696, out _out1697);
                      r = _out1696;
                      resultingOwnership = _out1697;
                      readIdents = _5185_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1698;
                  DCOMP._IOwnership _out1699;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1700;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _5140_b), _5140_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out1698, out _out1699, out _out1700);
                  r = _out1698;
                  resultingOwnership = _out1699;
                  readIdents = _out1700;
                }
              }
            }
          } else if (_source192.is_Nullable) {
            DAST._IType _5186___mcc_h760 = _source192.dtor_Nullable_a0;
            {
              RAST._IExpr _5187_recursiveGen;
              DCOMP._IOwnership _5188_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5189_recIdents;
              RAST._IExpr _out1701;
              DCOMP._IOwnership _out1702;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1703;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1701, out _out1702, out _out1703);
              _5187_recursiveGen = _out1701;
              _5188_recOwned = _out1702;
              _5189_recIdents = _out1703;
              r = _5187_recursiveGen;
              if (object.Equals(_5188_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1704;
              DCOMP._IOwnership _out1705;
              DCOMP.COMP.FromOwnership(r, _5188_recOwned, expectedOwnership, out _out1704, out _out1705);
              r = _out1704;
              resultingOwnership = _out1705;
              readIdents = _5189_recIdents;
            }
          } else if (_source192.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5190___mcc_h762 = _source192.dtor_Tuple_a0;
            {
              RAST._IType _5191_fromTpeGen;
              RAST._IType _out1706;
              _out1706 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5191_fromTpeGen = _out1706;
              RAST._IType _5192_toTpeGen;
              RAST._IType _out1707;
              _out1707 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5192_toTpeGen = _out1707;
              RAST._IExpr _5193_recursiveGen;
              DCOMP._IOwnership _5194_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5195_recIdents;
              RAST._IExpr _out1708;
              DCOMP._IOwnership _out1709;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1710;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1708, out _out1709, out _out1710);
              _5193_recursiveGen = _out1708;
              _5194_recOwned = _out1709;
              _5195_recIdents = _out1710;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5193_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5191_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5192_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1711;
              DCOMP._IOwnership _out1712;
              DCOMP.COMP.FromOwnership(r, _5194_recOwned, expectedOwnership, out _out1711, out _out1712);
              r = _out1711;
              resultingOwnership = _out1712;
              readIdents = _5195_recIdents;
            }
          } else if (_source192.is_Array) {
            DAST._IType _5196___mcc_h764 = _source192.dtor_element;
            BigInteger _5197___mcc_h765 = _source192.dtor_dims;
            {
              RAST._IType _5198_fromTpeGen;
              RAST._IType _out1713;
              _out1713 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5198_fromTpeGen = _out1713;
              RAST._IType _5199_toTpeGen;
              RAST._IType _out1714;
              _out1714 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5199_toTpeGen = _out1714;
              RAST._IExpr _5200_recursiveGen;
              DCOMP._IOwnership _5201_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5202_recIdents;
              RAST._IExpr _out1715;
              DCOMP._IOwnership _out1716;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1717;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1715, out _out1716, out _out1717);
              _5200_recursiveGen = _out1715;
              _5201_recOwned = _out1716;
              _5202_recIdents = _out1717;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5200_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5198_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5199_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1718;
              DCOMP._IOwnership _out1719;
              DCOMP.COMP.FromOwnership(r, _5201_recOwned, expectedOwnership, out _out1718, out _out1719);
              r = _out1718;
              resultingOwnership = _out1719;
              readIdents = _5202_recIdents;
            }
          } else if (_source192.is_Seq) {
            DAST._IType _5203___mcc_h768 = _source192.dtor_element;
            {
              RAST._IType _5204_fromTpeGen;
              RAST._IType _out1720;
              _out1720 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5204_fromTpeGen = _out1720;
              RAST._IType _5205_toTpeGen;
              RAST._IType _out1721;
              _out1721 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5205_toTpeGen = _out1721;
              RAST._IExpr _5206_recursiveGen;
              DCOMP._IOwnership _5207_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5208_recIdents;
              RAST._IExpr _out1722;
              DCOMP._IOwnership _out1723;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1724;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1722, out _out1723, out _out1724);
              _5206_recursiveGen = _out1722;
              _5207_recOwned = _out1723;
              _5208_recIdents = _out1724;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5206_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5204_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5205_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1725;
              DCOMP._IOwnership _out1726;
              DCOMP.COMP.FromOwnership(r, _5207_recOwned, expectedOwnership, out _out1725, out _out1726);
              r = _out1725;
              resultingOwnership = _out1726;
              readIdents = _5208_recIdents;
            }
          } else if (_source192.is_Set) {
            DAST._IType _5209___mcc_h770 = _source192.dtor_element;
            {
              RAST._IType _5210_fromTpeGen;
              RAST._IType _out1727;
              _out1727 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5210_fromTpeGen = _out1727;
              RAST._IType _5211_toTpeGen;
              RAST._IType _out1728;
              _out1728 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5211_toTpeGen = _out1728;
              RAST._IExpr _5212_recursiveGen;
              DCOMP._IOwnership _5213_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5214_recIdents;
              RAST._IExpr _out1729;
              DCOMP._IOwnership _out1730;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1731;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1729, out _out1730, out _out1731);
              _5212_recursiveGen = _out1729;
              _5213_recOwned = _out1730;
              _5214_recIdents = _out1731;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5212_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5210_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5211_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1732;
              DCOMP._IOwnership _out1733;
              DCOMP.COMP.FromOwnership(r, _5213_recOwned, expectedOwnership, out _out1732, out _out1733);
              r = _out1732;
              resultingOwnership = _out1733;
              readIdents = _5214_recIdents;
            }
          } else if (_source192.is_Multiset) {
            DAST._IType _5215___mcc_h772 = _source192.dtor_element;
            {
              RAST._IType _5216_fromTpeGen;
              RAST._IType _out1734;
              _out1734 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5216_fromTpeGen = _out1734;
              RAST._IType _5217_toTpeGen;
              RAST._IType _out1735;
              _out1735 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5217_toTpeGen = _out1735;
              RAST._IExpr _5218_recursiveGen;
              DCOMP._IOwnership _5219_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5220_recIdents;
              RAST._IExpr _out1736;
              DCOMP._IOwnership _out1737;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1738;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1736, out _out1737, out _out1738);
              _5218_recursiveGen = _out1736;
              _5219_recOwned = _out1737;
              _5220_recIdents = _out1738;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5218_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5216_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5217_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1739;
              DCOMP._IOwnership _out1740;
              DCOMP.COMP.FromOwnership(r, _5219_recOwned, expectedOwnership, out _out1739, out _out1740);
              r = _out1739;
              resultingOwnership = _out1740;
              readIdents = _5220_recIdents;
            }
          } else if (_source192.is_Map) {
            DAST._IType _5221___mcc_h774 = _source192.dtor_key;
            DAST._IType _5222___mcc_h775 = _source192.dtor_value;
            {
              RAST._IType _5223_fromTpeGen;
              RAST._IType _out1741;
              _out1741 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5223_fromTpeGen = _out1741;
              RAST._IType _5224_toTpeGen;
              RAST._IType _out1742;
              _out1742 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5224_toTpeGen = _out1742;
              RAST._IExpr _5225_recursiveGen;
              DCOMP._IOwnership _5226_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5227_recIdents;
              RAST._IExpr _out1743;
              DCOMP._IOwnership _out1744;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1745;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1743, out _out1744, out _out1745);
              _5225_recursiveGen = _out1743;
              _5226_recOwned = _out1744;
              _5227_recIdents = _out1745;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5225_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5223_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5224_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1746;
              DCOMP._IOwnership _out1747;
              DCOMP.COMP.FromOwnership(r, _5226_recOwned, expectedOwnership, out _out1746, out _out1747);
              r = _out1746;
              resultingOwnership = _out1747;
              readIdents = _5227_recIdents;
            }
          } else if (_source192.is_SetBuilder) {
            DAST._IType _5228___mcc_h778 = _source192.dtor_element;
            {
              RAST._IType _5229_fromTpeGen;
              RAST._IType _out1748;
              _out1748 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5229_fromTpeGen = _out1748;
              RAST._IType _5230_toTpeGen;
              RAST._IType _out1749;
              _out1749 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5230_toTpeGen = _out1749;
              RAST._IExpr _5231_recursiveGen;
              DCOMP._IOwnership _5232_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5233_recIdents;
              RAST._IExpr _out1750;
              DCOMP._IOwnership _out1751;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1752;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1750, out _out1751, out _out1752);
              _5231_recursiveGen = _out1750;
              _5232_recOwned = _out1751;
              _5233_recIdents = _out1752;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5231_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5229_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5230_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1753;
              DCOMP._IOwnership _out1754;
              DCOMP.COMP.FromOwnership(r, _5232_recOwned, expectedOwnership, out _out1753, out _out1754);
              r = _out1753;
              resultingOwnership = _out1754;
              readIdents = _5233_recIdents;
            }
          } else if (_source192.is_MapBuilder) {
            DAST._IType _5234___mcc_h780 = _source192.dtor_key;
            DAST._IType _5235___mcc_h781 = _source192.dtor_value;
            {
              RAST._IType _5236_fromTpeGen;
              RAST._IType _out1755;
              _out1755 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5236_fromTpeGen = _out1755;
              RAST._IType _5237_toTpeGen;
              RAST._IType _out1756;
              _out1756 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5237_toTpeGen = _out1756;
              RAST._IExpr _5238_recursiveGen;
              DCOMP._IOwnership _5239_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5240_recIdents;
              RAST._IExpr _out1757;
              DCOMP._IOwnership _out1758;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1759;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1757, out _out1758, out _out1759);
              _5238_recursiveGen = _out1757;
              _5239_recOwned = _out1758;
              _5240_recIdents = _out1759;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5238_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5236_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5237_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1760;
              DCOMP._IOwnership _out1761;
              DCOMP.COMP.FromOwnership(r, _5239_recOwned, expectedOwnership, out _out1760, out _out1761);
              r = _out1760;
              resultingOwnership = _out1761;
              readIdents = _5240_recIdents;
            }
          } else if (_source192.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5241___mcc_h784 = _source192.dtor_args;
            DAST._IType _5242___mcc_h785 = _source192.dtor_result;
            {
              RAST._IType _5243_fromTpeGen;
              RAST._IType _out1762;
              _out1762 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5243_fromTpeGen = _out1762;
              RAST._IType _5244_toTpeGen;
              RAST._IType _out1763;
              _out1763 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5244_toTpeGen = _out1763;
              RAST._IExpr _5245_recursiveGen;
              DCOMP._IOwnership _5246_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5247_recIdents;
              RAST._IExpr _out1764;
              DCOMP._IOwnership _out1765;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1766;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1764, out _out1765, out _out1766);
              _5245_recursiveGen = _out1764;
              _5246_recOwned = _out1765;
              _5247_recIdents = _out1766;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5245_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5243_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5244_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1767;
              DCOMP._IOwnership _out1768;
              DCOMP.COMP.FromOwnership(r, _5246_recOwned, expectedOwnership, out _out1767, out _out1768);
              r = _out1767;
              resultingOwnership = _out1768;
              readIdents = _5247_recIdents;
            }
          } else if (_source192.is_Primitive) {
            DAST._IPrimitive _5248___mcc_h788 = _source192.dtor_Primitive_a0;
            {
              RAST._IType _5249_fromTpeGen;
              RAST._IType _out1769;
              _out1769 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5249_fromTpeGen = _out1769;
              RAST._IType _5250_toTpeGen;
              RAST._IType _out1770;
              _out1770 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5250_toTpeGen = _out1770;
              RAST._IExpr _5251_recursiveGen;
              DCOMP._IOwnership _5252_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5253_recIdents;
              RAST._IExpr _out1771;
              DCOMP._IOwnership _out1772;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1773;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1771, out _out1772, out _out1773);
              _5251_recursiveGen = _out1771;
              _5252_recOwned = _out1772;
              _5253_recIdents = _out1773;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5251_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5249_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5250_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1774;
              DCOMP._IOwnership _out1775;
              DCOMP.COMP.FromOwnership(r, _5252_recOwned, expectedOwnership, out _out1774, out _out1775);
              r = _out1774;
              resultingOwnership = _out1775;
              readIdents = _5253_recIdents;
            }
          } else if (_source192.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5254___mcc_h790 = _source192.dtor_Passthrough_a0;
            {
              RAST._IType _5255_fromTpeGen;
              RAST._IType _out1776;
              _out1776 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5255_fromTpeGen = _out1776;
              RAST._IType _5256_toTpeGen;
              RAST._IType _out1777;
              _out1777 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5256_toTpeGen = _out1777;
              RAST._IExpr _5257_recursiveGen;
              DCOMP._IOwnership _5258_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5259_recIdents;
              RAST._IExpr _out1778;
              DCOMP._IOwnership _out1779;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1780;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1778, out _out1779, out _out1780);
              _5257_recursiveGen = _out1778;
              _5258_recOwned = _out1779;
              _5259_recIdents = _out1780;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5257_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5255_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5256_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1781;
              DCOMP._IOwnership _out1782;
              DCOMP.COMP.FromOwnership(r, _5258_recOwned, expectedOwnership, out _out1781, out _out1782);
              r = _out1781;
              resultingOwnership = _out1782;
              readIdents = _5259_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5260___mcc_h792 = _source192.dtor_TypeArg_a0;
            {
              RAST._IType _5261_fromTpeGen;
              RAST._IType _out1783;
              _out1783 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5261_fromTpeGen = _out1783;
              RAST._IType _5262_toTpeGen;
              RAST._IType _out1784;
              _out1784 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5262_toTpeGen = _out1784;
              RAST._IExpr _5263_recursiveGen;
              DCOMP._IOwnership _5264_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5265_recIdents;
              RAST._IExpr _out1785;
              DCOMP._IOwnership _out1786;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1787;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1785, out _out1786, out _out1787);
              _5263_recursiveGen = _out1785;
              _5264_recOwned = _out1786;
              _5265_recIdents = _out1787;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5263_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5261_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5262_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1788;
              DCOMP._IOwnership _out1789;
              DCOMP.COMP.FromOwnership(r, _5264_recOwned, expectedOwnership, out _out1788, out _out1789);
              r = _out1788;
              resultingOwnership = _out1789;
              readIdents = _5265_recIdents;
            }
          }
        } else if (_source124.is_Arrow) {
          Dafny.ISequence<DAST._IType> _5266___mcc_h794 = _source124.dtor_args;
          DAST._IType _5267___mcc_h795 = _source124.dtor_result;
          DAST._IType _source197 = _3403___mcc_h1;
          if (_source197.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5268___mcc_h802 = _source197.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5269___mcc_h803 = _source197.dtor_typeArgs;
            DAST._IResolvedType _5270___mcc_h804 = _source197.dtor_resolved;
            DAST._IResolvedType _source198 = _5270___mcc_h804;
            if (_source198.is_Datatype) {
              DAST._IDatatypeType _5271___mcc_h808 = _source198.dtor_datatypeType;
              {
                RAST._IType _5272_fromTpeGen;
                RAST._IType _out1790;
                _out1790 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5272_fromTpeGen = _out1790;
                RAST._IType _5273_toTpeGen;
                RAST._IType _out1791;
                _out1791 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5273_toTpeGen = _out1791;
                RAST._IExpr _5274_recursiveGen;
                DCOMP._IOwnership _5275_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5276_recIdents;
                RAST._IExpr _out1792;
                DCOMP._IOwnership _out1793;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1794;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1792, out _out1793, out _out1794);
                _5274_recursiveGen = _out1792;
                _5275_recOwned = _out1793;
                _5276_recIdents = _out1794;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5274_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5272_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5273_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1795;
                DCOMP._IOwnership _out1796;
                DCOMP.COMP.FromOwnership(r, _5275_recOwned, expectedOwnership, out _out1795, out _out1796);
                r = _out1795;
                resultingOwnership = _out1796;
                readIdents = _5276_recIdents;
              }
            } else if (_source198.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5277___mcc_h810 = _source198.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5278___mcc_h811 = _source198.dtor_attributes;
              {
                RAST._IType _5279_fromTpeGen;
                RAST._IType _out1797;
                _out1797 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5279_fromTpeGen = _out1797;
                RAST._IType _5280_toTpeGen;
                RAST._IType _out1798;
                _out1798 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5280_toTpeGen = _out1798;
                RAST._IExpr _5281_recursiveGen;
                DCOMP._IOwnership _5282_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5283_recIdents;
                RAST._IExpr _out1799;
                DCOMP._IOwnership _out1800;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1801;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1799, out _out1800, out _out1801);
                _5281_recursiveGen = _out1799;
                _5282_recOwned = _out1800;
                _5283_recIdents = _out1801;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5281_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5279_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5280_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1802;
                DCOMP._IOwnership _out1803;
                DCOMP.COMP.FromOwnership(r, _5282_recOwned, expectedOwnership, out _out1802, out _out1803);
                r = _out1802;
                resultingOwnership = _out1803;
                readIdents = _5283_recIdents;
              }
            } else {
              DAST._IType _5284___mcc_h814 = _source198.dtor_baseType;
              DAST._INewtypeRange _5285___mcc_h815 = _source198.dtor_range;
              bool _5286___mcc_h816 = _source198.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5287___mcc_h817 = _source198.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5288_attributes = _5287___mcc_h817;
              bool _5289_erase = _5286___mcc_h816;
              DAST._INewtypeRange _5290_range = _5285___mcc_h815;
              DAST._IType _5291_b = _5284___mcc_h814;
              {
                Std.Wrappers._IOption<RAST._IType> _5292_nativeToType;
                _5292_nativeToType = DCOMP.COMP.NewtypeToRustType(_5291_b, _5290_range);
                if (object.Equals(_3397_fromTpe, _5291_b)) {
                  RAST._IExpr _5293_recursiveGen;
                  DCOMP._IOwnership _5294_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5295_recIdents;
                  RAST._IExpr _out1804;
                  DCOMP._IOwnership _out1805;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1806;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1804, out _out1805, out _out1806);
                  _5293_recursiveGen = _out1804;
                  _5294_recOwned = _out1805;
                  _5295_recIdents = _out1806;
                  readIdents = _5295_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source199 = _5292_nativeToType;
                  if (_source199.is_None) {
                    if (_5289_erase) {
                      r = _5293_recursiveGen;
                    } else {
                      RAST._IType _5296_rhsType;
                      RAST._IType _out1807;
                      _out1807 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _5296_rhsType = _out1807;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5296_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5293_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1808;
                    DCOMP._IOwnership _out1809;
                    DCOMP.COMP.FromOwnership(r, _5294_recOwned, expectedOwnership, out _out1808, out _out1809);
                    r = _out1808;
                    resultingOwnership = _out1809;
                  } else {
                    RAST._IType _5297___mcc_h1865 = _source199.dtor_value;
                    RAST._IType _5298_v = _5297___mcc_h1865;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5293_recursiveGen, RAST.Expr.create_ExprFromType(_5298_v)));
                    RAST._IExpr _out1810;
                    DCOMP._IOwnership _out1811;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1810, out _out1811);
                    r = _out1810;
                    resultingOwnership = _out1811;
                  }
                } else {
                  if ((_5292_nativeToType).is_Some) {
                    DAST._IType _source200 = _3397_fromTpe;
                    if (_source200.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5299___mcc_h1866 = _source200.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5300___mcc_h1867 = _source200.dtor_typeArgs;
                      DAST._IResolvedType _5301___mcc_h1868 = _source200.dtor_resolved;
                      DAST._IResolvedType _source201 = _5301___mcc_h1868;
                      if (_source201.is_Datatype) {
                        DAST._IDatatypeType _5302___mcc_h1872 = _source201.dtor_datatypeType;
                      } else if (_source201.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5303___mcc_h1874 = _source201.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5304___mcc_h1875 = _source201.dtor_attributes;
                      } else {
                        DAST._IType _5305___mcc_h1878 = _source201.dtor_baseType;
                        DAST._INewtypeRange _5306___mcc_h1879 = _source201.dtor_range;
                        bool _5307___mcc_h1880 = _source201.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5308___mcc_h1881 = _source201.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5309_attributes0 = _5308___mcc_h1881;
                        bool _5310_erase0 = _5307___mcc_h1880;
                        DAST._INewtypeRange _5311_range0 = _5306___mcc_h1879;
                        DAST._IType _5312_b0 = _5305___mcc_h1878;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5313_nativeFromType;
                          _5313_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5312_b0, _5311_range0);
                          if ((_5313_nativeFromType).is_Some) {
                            RAST._IExpr _5314_recursiveGen;
                            DCOMP._IOwnership _5315_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5316_recIdents;
                            RAST._IExpr _out1812;
                            DCOMP._IOwnership _out1813;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1814;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1812, out _out1813, out _out1814);
                            _5314_recursiveGen = _out1812;
                            _5315_recOwned = _out1813;
                            _5316_recIdents = _out1814;
                            RAST._IExpr _out1815;
                            DCOMP._IOwnership _out1816;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5314_recursiveGen, (_5292_nativeToType).dtor_value), _5315_recOwned, expectedOwnership, out _out1815, out _out1816);
                            r = _out1815;
                            resultingOwnership = _out1816;
                            readIdents = _5316_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source200.is_Nullable) {
                      DAST._IType _5317___mcc_h1886 = _source200.dtor_Nullable_a0;
                    } else if (_source200.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5318___mcc_h1888 = _source200.dtor_Tuple_a0;
                    } else if (_source200.is_Array) {
                      DAST._IType _5319___mcc_h1890 = _source200.dtor_element;
                      BigInteger _5320___mcc_h1891 = _source200.dtor_dims;
                    } else if (_source200.is_Seq) {
                      DAST._IType _5321___mcc_h1894 = _source200.dtor_element;
                    } else if (_source200.is_Set) {
                      DAST._IType _5322___mcc_h1896 = _source200.dtor_element;
                    } else if (_source200.is_Multiset) {
                      DAST._IType _5323___mcc_h1898 = _source200.dtor_element;
                    } else if (_source200.is_Map) {
                      DAST._IType _5324___mcc_h1900 = _source200.dtor_key;
                      DAST._IType _5325___mcc_h1901 = _source200.dtor_value;
                    } else if (_source200.is_SetBuilder) {
                      DAST._IType _5326___mcc_h1904 = _source200.dtor_element;
                    } else if (_source200.is_MapBuilder) {
                      DAST._IType _5327___mcc_h1906 = _source200.dtor_key;
                      DAST._IType _5328___mcc_h1907 = _source200.dtor_value;
                    } else if (_source200.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5329___mcc_h1910 = _source200.dtor_args;
                      DAST._IType _5330___mcc_h1911 = _source200.dtor_result;
                    } else if (_source200.is_Primitive) {
                      DAST._IPrimitive _5331___mcc_h1914 = _source200.dtor_Primitive_a0;
                    } else if (_source200.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5332___mcc_h1916 = _source200.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5333___mcc_h1918 = _source200.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5334_recursiveGen;
                      DCOMP._IOwnership _5335_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5336_recIdents;
                      RAST._IExpr _out1817;
                      DCOMP._IOwnership _out1818;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1819;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1817, out _out1818, out _out1819);
                      _5334_recursiveGen = _out1817;
                      _5335_recOwned = _out1818;
                      _5336_recIdents = _out1819;
                      RAST._IExpr _out1820;
                      DCOMP._IOwnership _out1821;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5334_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5292_nativeToType).dtor_value), _5335_recOwned, expectedOwnership, out _out1820, out _out1821);
                      r = _out1820;
                      resultingOwnership = _out1821;
                      readIdents = _5336_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1822;
                  DCOMP._IOwnership _out1823;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1824;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _5291_b), _5291_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out1822, out _out1823, out _out1824);
                  r = _out1822;
                  resultingOwnership = _out1823;
                  readIdents = _out1824;
                }
              }
            }
          } else if (_source197.is_Nullable) {
            DAST._IType _5337___mcc_h822 = _source197.dtor_Nullable_a0;
            {
              RAST._IExpr _5338_recursiveGen;
              DCOMP._IOwnership _5339_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5340_recIdents;
              RAST._IExpr _out1825;
              DCOMP._IOwnership _out1826;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1827;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1825, out _out1826, out _out1827);
              _5338_recursiveGen = _out1825;
              _5339_recOwned = _out1826;
              _5340_recIdents = _out1827;
              r = _5338_recursiveGen;
              if (object.Equals(_5339_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1828;
              DCOMP._IOwnership _out1829;
              DCOMP.COMP.FromOwnership(r, _5339_recOwned, expectedOwnership, out _out1828, out _out1829);
              r = _out1828;
              resultingOwnership = _out1829;
              readIdents = _5340_recIdents;
            }
          } else if (_source197.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5341___mcc_h824 = _source197.dtor_Tuple_a0;
            {
              RAST._IType _5342_fromTpeGen;
              RAST._IType _out1830;
              _out1830 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5342_fromTpeGen = _out1830;
              RAST._IType _5343_toTpeGen;
              RAST._IType _out1831;
              _out1831 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5343_toTpeGen = _out1831;
              RAST._IExpr _5344_recursiveGen;
              DCOMP._IOwnership _5345_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5346_recIdents;
              RAST._IExpr _out1832;
              DCOMP._IOwnership _out1833;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1834;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1832, out _out1833, out _out1834);
              _5344_recursiveGen = _out1832;
              _5345_recOwned = _out1833;
              _5346_recIdents = _out1834;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5344_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5342_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5343_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1835;
              DCOMP._IOwnership _out1836;
              DCOMP.COMP.FromOwnership(r, _5345_recOwned, expectedOwnership, out _out1835, out _out1836);
              r = _out1835;
              resultingOwnership = _out1836;
              readIdents = _5346_recIdents;
            }
          } else if (_source197.is_Array) {
            DAST._IType _5347___mcc_h826 = _source197.dtor_element;
            BigInteger _5348___mcc_h827 = _source197.dtor_dims;
            {
              RAST._IType _5349_fromTpeGen;
              RAST._IType _out1837;
              _out1837 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5349_fromTpeGen = _out1837;
              RAST._IType _5350_toTpeGen;
              RAST._IType _out1838;
              _out1838 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5350_toTpeGen = _out1838;
              RAST._IExpr _5351_recursiveGen;
              DCOMP._IOwnership _5352_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5353_recIdents;
              RAST._IExpr _out1839;
              DCOMP._IOwnership _out1840;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1841;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1839, out _out1840, out _out1841);
              _5351_recursiveGen = _out1839;
              _5352_recOwned = _out1840;
              _5353_recIdents = _out1841;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5351_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5349_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5350_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1842;
              DCOMP._IOwnership _out1843;
              DCOMP.COMP.FromOwnership(r, _5352_recOwned, expectedOwnership, out _out1842, out _out1843);
              r = _out1842;
              resultingOwnership = _out1843;
              readIdents = _5353_recIdents;
            }
          } else if (_source197.is_Seq) {
            DAST._IType _5354___mcc_h830 = _source197.dtor_element;
            {
              RAST._IType _5355_fromTpeGen;
              RAST._IType _out1844;
              _out1844 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5355_fromTpeGen = _out1844;
              RAST._IType _5356_toTpeGen;
              RAST._IType _out1845;
              _out1845 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5356_toTpeGen = _out1845;
              RAST._IExpr _5357_recursiveGen;
              DCOMP._IOwnership _5358_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5359_recIdents;
              RAST._IExpr _out1846;
              DCOMP._IOwnership _out1847;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1848;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1846, out _out1847, out _out1848);
              _5357_recursiveGen = _out1846;
              _5358_recOwned = _out1847;
              _5359_recIdents = _out1848;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5357_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5355_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5356_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1849;
              DCOMP._IOwnership _out1850;
              DCOMP.COMP.FromOwnership(r, _5358_recOwned, expectedOwnership, out _out1849, out _out1850);
              r = _out1849;
              resultingOwnership = _out1850;
              readIdents = _5359_recIdents;
            }
          } else if (_source197.is_Set) {
            DAST._IType _5360___mcc_h832 = _source197.dtor_element;
            {
              RAST._IType _5361_fromTpeGen;
              RAST._IType _out1851;
              _out1851 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5361_fromTpeGen = _out1851;
              RAST._IType _5362_toTpeGen;
              RAST._IType _out1852;
              _out1852 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5362_toTpeGen = _out1852;
              RAST._IExpr _5363_recursiveGen;
              DCOMP._IOwnership _5364_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5365_recIdents;
              RAST._IExpr _out1853;
              DCOMP._IOwnership _out1854;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1855;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1853, out _out1854, out _out1855);
              _5363_recursiveGen = _out1853;
              _5364_recOwned = _out1854;
              _5365_recIdents = _out1855;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5363_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5361_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5362_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1856;
              DCOMP._IOwnership _out1857;
              DCOMP.COMP.FromOwnership(r, _5364_recOwned, expectedOwnership, out _out1856, out _out1857);
              r = _out1856;
              resultingOwnership = _out1857;
              readIdents = _5365_recIdents;
            }
          } else if (_source197.is_Multiset) {
            DAST._IType _5366___mcc_h834 = _source197.dtor_element;
            {
              RAST._IType _5367_fromTpeGen;
              RAST._IType _out1858;
              _out1858 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5367_fromTpeGen = _out1858;
              RAST._IType _5368_toTpeGen;
              RAST._IType _out1859;
              _out1859 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5368_toTpeGen = _out1859;
              RAST._IExpr _5369_recursiveGen;
              DCOMP._IOwnership _5370_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5371_recIdents;
              RAST._IExpr _out1860;
              DCOMP._IOwnership _out1861;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1862;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1860, out _out1861, out _out1862);
              _5369_recursiveGen = _out1860;
              _5370_recOwned = _out1861;
              _5371_recIdents = _out1862;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5369_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5367_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5368_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1863;
              DCOMP._IOwnership _out1864;
              DCOMP.COMP.FromOwnership(r, _5370_recOwned, expectedOwnership, out _out1863, out _out1864);
              r = _out1863;
              resultingOwnership = _out1864;
              readIdents = _5371_recIdents;
            }
          } else if (_source197.is_Map) {
            DAST._IType _5372___mcc_h836 = _source197.dtor_key;
            DAST._IType _5373___mcc_h837 = _source197.dtor_value;
            {
              RAST._IType _5374_fromTpeGen;
              RAST._IType _out1865;
              _out1865 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5374_fromTpeGen = _out1865;
              RAST._IType _5375_toTpeGen;
              RAST._IType _out1866;
              _out1866 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5375_toTpeGen = _out1866;
              RAST._IExpr _5376_recursiveGen;
              DCOMP._IOwnership _5377_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5378_recIdents;
              RAST._IExpr _out1867;
              DCOMP._IOwnership _out1868;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1869;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1867, out _out1868, out _out1869);
              _5376_recursiveGen = _out1867;
              _5377_recOwned = _out1868;
              _5378_recIdents = _out1869;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5376_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5374_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5375_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1870;
              DCOMP._IOwnership _out1871;
              DCOMP.COMP.FromOwnership(r, _5377_recOwned, expectedOwnership, out _out1870, out _out1871);
              r = _out1870;
              resultingOwnership = _out1871;
              readIdents = _5378_recIdents;
            }
          } else if (_source197.is_SetBuilder) {
            DAST._IType _5379___mcc_h840 = _source197.dtor_element;
            {
              RAST._IType _5380_fromTpeGen;
              RAST._IType _out1872;
              _out1872 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5380_fromTpeGen = _out1872;
              RAST._IType _5381_toTpeGen;
              RAST._IType _out1873;
              _out1873 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5381_toTpeGen = _out1873;
              RAST._IExpr _5382_recursiveGen;
              DCOMP._IOwnership _5383_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5384_recIdents;
              RAST._IExpr _out1874;
              DCOMP._IOwnership _out1875;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1876;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1874, out _out1875, out _out1876);
              _5382_recursiveGen = _out1874;
              _5383_recOwned = _out1875;
              _5384_recIdents = _out1876;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5382_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5380_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5381_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1877;
              DCOMP._IOwnership _out1878;
              DCOMP.COMP.FromOwnership(r, _5383_recOwned, expectedOwnership, out _out1877, out _out1878);
              r = _out1877;
              resultingOwnership = _out1878;
              readIdents = _5384_recIdents;
            }
          } else if (_source197.is_MapBuilder) {
            DAST._IType _5385___mcc_h842 = _source197.dtor_key;
            DAST._IType _5386___mcc_h843 = _source197.dtor_value;
            {
              RAST._IType _5387_fromTpeGen;
              RAST._IType _out1879;
              _out1879 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5387_fromTpeGen = _out1879;
              RAST._IType _5388_toTpeGen;
              RAST._IType _out1880;
              _out1880 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5388_toTpeGen = _out1880;
              RAST._IExpr _5389_recursiveGen;
              DCOMP._IOwnership _5390_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5391_recIdents;
              RAST._IExpr _out1881;
              DCOMP._IOwnership _out1882;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1883;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1881, out _out1882, out _out1883);
              _5389_recursiveGen = _out1881;
              _5390_recOwned = _out1882;
              _5391_recIdents = _out1883;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5389_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5387_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5388_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1884;
              DCOMP._IOwnership _out1885;
              DCOMP.COMP.FromOwnership(r, _5390_recOwned, expectedOwnership, out _out1884, out _out1885);
              r = _out1884;
              resultingOwnership = _out1885;
              readIdents = _5391_recIdents;
            }
          } else if (_source197.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5392___mcc_h846 = _source197.dtor_args;
            DAST._IType _5393___mcc_h847 = _source197.dtor_result;
            {
              RAST._IType _5394_fromTpeGen;
              RAST._IType _out1886;
              _out1886 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5394_fromTpeGen = _out1886;
              RAST._IType _5395_toTpeGen;
              RAST._IType _out1887;
              _out1887 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5395_toTpeGen = _out1887;
              RAST._IExpr _5396_recursiveGen;
              DCOMP._IOwnership _5397_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5398_recIdents;
              RAST._IExpr _out1888;
              DCOMP._IOwnership _out1889;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1890;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1888, out _out1889, out _out1890);
              _5396_recursiveGen = _out1888;
              _5397_recOwned = _out1889;
              _5398_recIdents = _out1890;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5396_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5394_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5395_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1891;
              DCOMP._IOwnership _out1892;
              DCOMP.COMP.FromOwnership(r, _5397_recOwned, expectedOwnership, out _out1891, out _out1892);
              r = _out1891;
              resultingOwnership = _out1892;
              readIdents = _5398_recIdents;
            }
          } else if (_source197.is_Primitive) {
            DAST._IPrimitive _5399___mcc_h850 = _source197.dtor_Primitive_a0;
            {
              RAST._IType _5400_fromTpeGen;
              RAST._IType _out1893;
              _out1893 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5400_fromTpeGen = _out1893;
              RAST._IType _5401_toTpeGen;
              RAST._IType _out1894;
              _out1894 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5401_toTpeGen = _out1894;
              RAST._IExpr _5402_recursiveGen;
              DCOMP._IOwnership _5403_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5404_recIdents;
              RAST._IExpr _out1895;
              DCOMP._IOwnership _out1896;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1897;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1895, out _out1896, out _out1897);
              _5402_recursiveGen = _out1895;
              _5403_recOwned = _out1896;
              _5404_recIdents = _out1897;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5402_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5400_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5401_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1898;
              DCOMP._IOwnership _out1899;
              DCOMP.COMP.FromOwnership(r, _5403_recOwned, expectedOwnership, out _out1898, out _out1899);
              r = _out1898;
              resultingOwnership = _out1899;
              readIdents = _5404_recIdents;
            }
          } else if (_source197.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5405___mcc_h852 = _source197.dtor_Passthrough_a0;
            {
              RAST._IType _5406_fromTpeGen;
              RAST._IType _out1900;
              _out1900 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5406_fromTpeGen = _out1900;
              RAST._IType _5407_toTpeGen;
              RAST._IType _out1901;
              _out1901 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5407_toTpeGen = _out1901;
              RAST._IExpr _5408_recursiveGen;
              DCOMP._IOwnership _5409_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5410_recIdents;
              RAST._IExpr _out1902;
              DCOMP._IOwnership _out1903;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1904;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1902, out _out1903, out _out1904);
              _5408_recursiveGen = _out1902;
              _5409_recOwned = _out1903;
              _5410_recIdents = _out1904;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5408_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5406_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5407_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1905;
              DCOMP._IOwnership _out1906;
              DCOMP.COMP.FromOwnership(r, _5409_recOwned, expectedOwnership, out _out1905, out _out1906);
              r = _out1905;
              resultingOwnership = _out1906;
              readIdents = _5410_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5411___mcc_h854 = _source197.dtor_TypeArg_a0;
            {
              RAST._IType _5412_fromTpeGen;
              RAST._IType _out1907;
              _out1907 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _5412_fromTpeGen = _out1907;
              RAST._IType _5413_toTpeGen;
              RAST._IType _out1908;
              _out1908 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _5413_toTpeGen = _out1908;
              RAST._IExpr _5414_recursiveGen;
              DCOMP._IOwnership _5415_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5416_recIdents;
              RAST._IExpr _out1909;
              DCOMP._IOwnership _out1910;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1911;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1909, out _out1910, out _out1911);
              _5414_recursiveGen = _out1909;
              _5415_recOwned = _out1910;
              _5416_recIdents = _out1911;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5414_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5412_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5413_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1912;
              DCOMP._IOwnership _out1913;
              DCOMP.COMP.FromOwnership(r, _5415_recOwned, expectedOwnership, out _out1912, out _out1913);
              r = _out1912;
              resultingOwnership = _out1913;
              readIdents = _5416_recIdents;
            }
          }
        } else if (_source124.is_Primitive) {
          DAST._IPrimitive _5417___mcc_h856 = _source124.dtor_Primitive_a0;
          DAST._IPrimitive _source202 = _5417___mcc_h856;
          if (_source202.is_Int) {
            DAST._IType _source203 = _3403___mcc_h1;
            if (_source203.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5418___mcc_h860 = _source203.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _5419___mcc_h861 = _source203.dtor_typeArgs;
              DAST._IResolvedType _5420___mcc_h862 = _source203.dtor_resolved;
              DAST._IResolvedType _source204 = _5420___mcc_h862;
              if (_source204.is_Datatype) {
                DAST._IDatatypeType _5421___mcc_h866 = _source204.dtor_datatypeType;
                {
                  RAST._IType _5422_fromTpeGen;
                  RAST._IType _out1914;
                  _out1914 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5422_fromTpeGen = _out1914;
                  RAST._IType _5423_toTpeGen;
                  RAST._IType _out1915;
                  _out1915 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5423_toTpeGen = _out1915;
                  RAST._IExpr _5424_recursiveGen;
                  DCOMP._IOwnership _5425_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5426_recIdents;
                  RAST._IExpr _out1916;
                  DCOMP._IOwnership _out1917;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1918;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1916, out _out1917, out _out1918);
                  _5424_recursiveGen = _out1916;
                  _5425_recOwned = _out1917;
                  _5426_recIdents = _out1918;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5424_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5422_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5423_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out1919;
                  DCOMP._IOwnership _out1920;
                  DCOMP.COMP.FromOwnership(r, _5425_recOwned, expectedOwnership, out _out1919, out _out1920);
                  r = _out1919;
                  resultingOwnership = _out1920;
                  readIdents = _5426_recIdents;
                }
              } else if (_source204.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5427___mcc_h868 = _source204.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _5428___mcc_h869 = _source204.dtor_attributes;
                {
                  RAST._IType _5429_fromTpeGen;
                  RAST._IType _out1921;
                  _out1921 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5429_fromTpeGen = _out1921;
                  RAST._IType _5430_toTpeGen;
                  RAST._IType _out1922;
                  _out1922 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5430_toTpeGen = _out1922;
                  RAST._IExpr _5431_recursiveGen;
                  DCOMP._IOwnership _5432_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5433_recIdents;
                  RAST._IExpr _out1923;
                  DCOMP._IOwnership _out1924;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1925;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1923, out _out1924, out _out1925);
                  _5431_recursiveGen = _out1923;
                  _5432_recOwned = _out1924;
                  _5433_recIdents = _out1925;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5431_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5429_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5430_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out1926;
                  DCOMP._IOwnership _out1927;
                  DCOMP.COMP.FromOwnership(r, _5432_recOwned, expectedOwnership, out _out1926, out _out1927);
                  r = _out1926;
                  resultingOwnership = _out1927;
                  readIdents = _5433_recIdents;
                }
              } else {
                DAST._IType _5434___mcc_h872 = _source204.dtor_baseType;
                DAST._INewtypeRange _5435___mcc_h873 = _source204.dtor_range;
                bool _5436___mcc_h874 = _source204.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _5437___mcc_h875 = _source204.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _5438_attributes = _5437___mcc_h875;
                bool _5439_erase = _5436___mcc_h874;
                DAST._INewtypeRange _5440_range = _5435___mcc_h873;
                DAST._IType _5441_b = _5434___mcc_h872;
                {
                  Std.Wrappers._IOption<RAST._IType> _5442_nativeToType;
                  _5442_nativeToType = DCOMP.COMP.NewtypeToRustType(_5441_b, _5440_range);
                  if (object.Equals(_3397_fromTpe, _5441_b)) {
                    RAST._IExpr _5443_recursiveGen;
                    DCOMP._IOwnership _5444_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5445_recIdents;
                    RAST._IExpr _out1928;
                    DCOMP._IOwnership _out1929;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1930;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1928, out _out1929, out _out1930);
                    _5443_recursiveGen = _out1928;
                    _5444_recOwned = _out1929;
                    _5445_recIdents = _out1930;
                    readIdents = _5445_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source205 = _5442_nativeToType;
                    if (_source205.is_None) {
                      if (_5439_erase) {
                        r = _5443_recursiveGen;
                      } else {
                        RAST._IType _5446_rhsType;
                        RAST._IType _out1931;
                        _out1931 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                        _5446_rhsType = _out1931;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5446_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5443_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out1932;
                      DCOMP._IOwnership _out1933;
                      DCOMP.COMP.FromOwnership(r, _5444_recOwned, expectedOwnership, out _out1932, out _out1933);
                      r = _out1932;
                      resultingOwnership = _out1933;
                    } else {
                      RAST._IType _5447___mcc_h1920 = _source205.dtor_value;
                      RAST._IType _5448_v = _5447___mcc_h1920;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5443_recursiveGen, RAST.Expr.create_ExprFromType(_5448_v)));
                      RAST._IExpr _out1934;
                      DCOMP._IOwnership _out1935;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1934, out _out1935);
                      r = _out1934;
                      resultingOwnership = _out1935;
                    }
                  } else {
                    if ((_5442_nativeToType).is_Some) {
                      DAST._IType _source206 = _3397_fromTpe;
                      if (_source206.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5449___mcc_h1921 = _source206.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _5450___mcc_h1922 = _source206.dtor_typeArgs;
                        DAST._IResolvedType _5451___mcc_h1923 = _source206.dtor_resolved;
                        DAST._IResolvedType _source207 = _5451___mcc_h1923;
                        if (_source207.is_Datatype) {
                          DAST._IDatatypeType _5452___mcc_h1927 = _source207.dtor_datatypeType;
                        } else if (_source207.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5453___mcc_h1929 = _source207.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _5454___mcc_h1930 = _source207.dtor_attributes;
                        } else {
                          DAST._IType _5455___mcc_h1933 = _source207.dtor_baseType;
                          DAST._INewtypeRange _5456___mcc_h1934 = _source207.dtor_range;
                          bool _5457___mcc_h1935 = _source207.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _5458___mcc_h1936 = _source207.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _5459_attributes0 = _5458___mcc_h1936;
                          bool _5460_erase0 = _5457___mcc_h1935;
                          DAST._INewtypeRange _5461_range0 = _5456___mcc_h1934;
                          DAST._IType _5462_b0 = _5455___mcc_h1933;
                          {
                            Std.Wrappers._IOption<RAST._IType> _5463_nativeFromType;
                            _5463_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5462_b0, _5461_range0);
                            if ((_5463_nativeFromType).is_Some) {
                              RAST._IExpr _5464_recursiveGen;
                              DCOMP._IOwnership _5465_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5466_recIdents;
                              RAST._IExpr _out1936;
                              DCOMP._IOwnership _out1937;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1938;
                              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1936, out _out1937, out _out1938);
                              _5464_recursiveGen = _out1936;
                              _5465_recOwned = _out1937;
                              _5466_recIdents = _out1938;
                              RAST._IExpr _out1939;
                              DCOMP._IOwnership _out1940;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5464_recursiveGen, (_5442_nativeToType).dtor_value), _5465_recOwned, expectedOwnership, out _out1939, out _out1940);
                              r = _out1939;
                              resultingOwnership = _out1940;
                              readIdents = _5466_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source206.is_Nullable) {
                        DAST._IType _5467___mcc_h1941 = _source206.dtor_Nullable_a0;
                      } else if (_source206.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _5468___mcc_h1943 = _source206.dtor_Tuple_a0;
                      } else if (_source206.is_Array) {
                        DAST._IType _5469___mcc_h1945 = _source206.dtor_element;
                        BigInteger _5470___mcc_h1946 = _source206.dtor_dims;
                      } else if (_source206.is_Seq) {
                        DAST._IType _5471___mcc_h1949 = _source206.dtor_element;
                      } else if (_source206.is_Set) {
                        DAST._IType _5472___mcc_h1951 = _source206.dtor_element;
                      } else if (_source206.is_Multiset) {
                        DAST._IType _5473___mcc_h1953 = _source206.dtor_element;
                      } else if (_source206.is_Map) {
                        DAST._IType _5474___mcc_h1955 = _source206.dtor_key;
                        DAST._IType _5475___mcc_h1956 = _source206.dtor_value;
                      } else if (_source206.is_SetBuilder) {
                        DAST._IType _5476___mcc_h1959 = _source206.dtor_element;
                      } else if (_source206.is_MapBuilder) {
                        DAST._IType _5477___mcc_h1961 = _source206.dtor_key;
                        DAST._IType _5478___mcc_h1962 = _source206.dtor_value;
                      } else if (_source206.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _5479___mcc_h1965 = _source206.dtor_args;
                        DAST._IType _5480___mcc_h1966 = _source206.dtor_result;
                      } else if (_source206.is_Primitive) {
                        DAST._IPrimitive _5481___mcc_h1969 = _source206.dtor_Primitive_a0;
                      } else if (_source206.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _5482___mcc_h1971 = _source206.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _5483___mcc_h1973 = _source206.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _5484_recursiveGen;
                        DCOMP._IOwnership _5485_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5486_recIdents;
                        RAST._IExpr _out1941;
                        DCOMP._IOwnership _out1942;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1943;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1941, out _out1942, out _out1943);
                        _5484_recursiveGen = _out1941;
                        _5485_recOwned = _out1942;
                        _5486_recIdents = _out1943;
                        RAST._IExpr _out1944;
                        DCOMP._IOwnership _out1945;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5484_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5442_nativeToType).dtor_value), _5485_recOwned, expectedOwnership, out _out1944, out _out1945);
                        r = _out1944;
                        resultingOwnership = _out1945;
                        readIdents = _5486_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out1946;
                    DCOMP._IOwnership _out1947;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1948;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _5441_b), _5441_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out1946, out _out1947, out _out1948);
                    r = _out1946;
                    resultingOwnership = _out1947;
                    readIdents = _out1948;
                  }
                }
              }
            } else if (_source203.is_Nullable) {
              DAST._IType _5487___mcc_h880 = _source203.dtor_Nullable_a0;
              {
                RAST._IExpr _5488_recursiveGen;
                DCOMP._IOwnership _5489_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5490_recIdents;
                RAST._IExpr _out1949;
                DCOMP._IOwnership _out1950;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1951;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1949, out _out1950, out _out1951);
                _5488_recursiveGen = _out1949;
                _5489_recOwned = _out1950;
                _5490_recIdents = _out1951;
                r = _5488_recursiveGen;
                if (object.Equals(_5489_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out1952;
                DCOMP._IOwnership _out1953;
                DCOMP.COMP.FromOwnership(r, _5489_recOwned, expectedOwnership, out _out1952, out _out1953);
                r = _out1952;
                resultingOwnership = _out1953;
                readIdents = _5490_recIdents;
              }
            } else if (_source203.is_Tuple) {
              Dafny.ISequence<DAST._IType> _5491___mcc_h882 = _source203.dtor_Tuple_a0;
              {
                RAST._IType _5492_fromTpeGen;
                RAST._IType _out1954;
                _out1954 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5492_fromTpeGen = _out1954;
                RAST._IType _5493_toTpeGen;
                RAST._IType _out1955;
                _out1955 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5493_toTpeGen = _out1955;
                RAST._IExpr _5494_recursiveGen;
                DCOMP._IOwnership _5495_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5496_recIdents;
                RAST._IExpr _out1956;
                DCOMP._IOwnership _out1957;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1958;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1956, out _out1957, out _out1958);
                _5494_recursiveGen = _out1956;
                _5495_recOwned = _out1957;
                _5496_recIdents = _out1958;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5494_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5492_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5493_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1959;
                DCOMP._IOwnership _out1960;
                DCOMP.COMP.FromOwnership(r, _5495_recOwned, expectedOwnership, out _out1959, out _out1960);
                r = _out1959;
                resultingOwnership = _out1960;
                readIdents = _5496_recIdents;
              }
            } else if (_source203.is_Array) {
              DAST._IType _5497___mcc_h884 = _source203.dtor_element;
              BigInteger _5498___mcc_h885 = _source203.dtor_dims;
              {
                RAST._IType _5499_fromTpeGen;
                RAST._IType _out1961;
                _out1961 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5499_fromTpeGen = _out1961;
                RAST._IType _5500_toTpeGen;
                RAST._IType _out1962;
                _out1962 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5500_toTpeGen = _out1962;
                RAST._IExpr _5501_recursiveGen;
                DCOMP._IOwnership _5502_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5503_recIdents;
                RAST._IExpr _out1963;
                DCOMP._IOwnership _out1964;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1965;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1963, out _out1964, out _out1965);
                _5501_recursiveGen = _out1963;
                _5502_recOwned = _out1964;
                _5503_recIdents = _out1965;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5501_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5499_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5500_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1966;
                DCOMP._IOwnership _out1967;
                DCOMP.COMP.FromOwnership(r, _5502_recOwned, expectedOwnership, out _out1966, out _out1967);
                r = _out1966;
                resultingOwnership = _out1967;
                readIdents = _5503_recIdents;
              }
            } else if (_source203.is_Seq) {
              DAST._IType _5504___mcc_h888 = _source203.dtor_element;
              {
                RAST._IType _5505_fromTpeGen;
                RAST._IType _out1968;
                _out1968 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5505_fromTpeGen = _out1968;
                RAST._IType _5506_toTpeGen;
                RAST._IType _out1969;
                _out1969 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5506_toTpeGen = _out1969;
                RAST._IExpr _5507_recursiveGen;
                DCOMP._IOwnership _5508_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5509_recIdents;
                RAST._IExpr _out1970;
                DCOMP._IOwnership _out1971;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1972;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1970, out _out1971, out _out1972);
                _5507_recursiveGen = _out1970;
                _5508_recOwned = _out1971;
                _5509_recIdents = _out1972;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5507_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5505_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5506_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1973;
                DCOMP._IOwnership _out1974;
                DCOMP.COMP.FromOwnership(r, _5508_recOwned, expectedOwnership, out _out1973, out _out1974);
                r = _out1973;
                resultingOwnership = _out1974;
                readIdents = _5509_recIdents;
              }
            } else if (_source203.is_Set) {
              DAST._IType _5510___mcc_h890 = _source203.dtor_element;
              {
                RAST._IType _5511_fromTpeGen;
                RAST._IType _out1975;
                _out1975 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5511_fromTpeGen = _out1975;
                RAST._IType _5512_toTpeGen;
                RAST._IType _out1976;
                _out1976 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5512_toTpeGen = _out1976;
                RAST._IExpr _5513_recursiveGen;
                DCOMP._IOwnership _5514_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5515_recIdents;
                RAST._IExpr _out1977;
                DCOMP._IOwnership _out1978;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1979;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1977, out _out1978, out _out1979);
                _5513_recursiveGen = _out1977;
                _5514_recOwned = _out1978;
                _5515_recIdents = _out1979;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5513_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5511_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5512_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1980;
                DCOMP._IOwnership _out1981;
                DCOMP.COMP.FromOwnership(r, _5514_recOwned, expectedOwnership, out _out1980, out _out1981);
                r = _out1980;
                resultingOwnership = _out1981;
                readIdents = _5515_recIdents;
              }
            } else if (_source203.is_Multiset) {
              DAST._IType _5516___mcc_h892 = _source203.dtor_element;
              {
                RAST._IType _5517_fromTpeGen;
                RAST._IType _out1982;
                _out1982 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5517_fromTpeGen = _out1982;
                RAST._IType _5518_toTpeGen;
                RAST._IType _out1983;
                _out1983 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5518_toTpeGen = _out1983;
                RAST._IExpr _5519_recursiveGen;
                DCOMP._IOwnership _5520_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5521_recIdents;
                RAST._IExpr _out1984;
                DCOMP._IOwnership _out1985;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1986;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1984, out _out1985, out _out1986);
                _5519_recursiveGen = _out1984;
                _5520_recOwned = _out1985;
                _5521_recIdents = _out1986;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5519_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5517_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5518_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1987;
                DCOMP._IOwnership _out1988;
                DCOMP.COMP.FromOwnership(r, _5520_recOwned, expectedOwnership, out _out1987, out _out1988);
                r = _out1987;
                resultingOwnership = _out1988;
                readIdents = _5521_recIdents;
              }
            } else if (_source203.is_Map) {
              DAST._IType _5522___mcc_h894 = _source203.dtor_key;
              DAST._IType _5523___mcc_h895 = _source203.dtor_value;
              {
                RAST._IType _5524_fromTpeGen;
                RAST._IType _out1989;
                _out1989 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5524_fromTpeGen = _out1989;
                RAST._IType _5525_toTpeGen;
                RAST._IType _out1990;
                _out1990 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5525_toTpeGen = _out1990;
                RAST._IExpr _5526_recursiveGen;
                DCOMP._IOwnership _5527_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5528_recIdents;
                RAST._IExpr _out1991;
                DCOMP._IOwnership _out1992;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1993;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1991, out _out1992, out _out1993);
                _5526_recursiveGen = _out1991;
                _5527_recOwned = _out1992;
                _5528_recIdents = _out1993;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5526_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5524_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5525_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1994;
                DCOMP._IOwnership _out1995;
                DCOMP.COMP.FromOwnership(r, _5527_recOwned, expectedOwnership, out _out1994, out _out1995);
                r = _out1994;
                resultingOwnership = _out1995;
                readIdents = _5528_recIdents;
              }
            } else if (_source203.is_SetBuilder) {
              DAST._IType _5529___mcc_h898 = _source203.dtor_element;
              {
                RAST._IType _5530_fromTpeGen;
                RAST._IType _out1996;
                _out1996 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5530_fromTpeGen = _out1996;
                RAST._IType _5531_toTpeGen;
                RAST._IType _out1997;
                _out1997 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5531_toTpeGen = _out1997;
                RAST._IExpr _5532_recursiveGen;
                DCOMP._IOwnership _5533_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5534_recIdents;
                RAST._IExpr _out1998;
                DCOMP._IOwnership _out1999;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2000;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out1998, out _out1999, out _out2000);
                _5532_recursiveGen = _out1998;
                _5533_recOwned = _out1999;
                _5534_recIdents = _out2000;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5532_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5530_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5531_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2001;
                DCOMP._IOwnership _out2002;
                DCOMP.COMP.FromOwnership(r, _5533_recOwned, expectedOwnership, out _out2001, out _out2002);
                r = _out2001;
                resultingOwnership = _out2002;
                readIdents = _5534_recIdents;
              }
            } else if (_source203.is_MapBuilder) {
              DAST._IType _5535___mcc_h900 = _source203.dtor_key;
              DAST._IType _5536___mcc_h901 = _source203.dtor_value;
              {
                RAST._IType _5537_fromTpeGen;
                RAST._IType _out2003;
                _out2003 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5537_fromTpeGen = _out2003;
                RAST._IType _5538_toTpeGen;
                RAST._IType _out2004;
                _out2004 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5538_toTpeGen = _out2004;
                RAST._IExpr _5539_recursiveGen;
                DCOMP._IOwnership _5540_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5541_recIdents;
                RAST._IExpr _out2005;
                DCOMP._IOwnership _out2006;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2007;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2005, out _out2006, out _out2007);
                _5539_recursiveGen = _out2005;
                _5540_recOwned = _out2006;
                _5541_recIdents = _out2007;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5539_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5537_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5538_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2008;
                DCOMP._IOwnership _out2009;
                DCOMP.COMP.FromOwnership(r, _5540_recOwned, expectedOwnership, out _out2008, out _out2009);
                r = _out2008;
                resultingOwnership = _out2009;
                readIdents = _5541_recIdents;
              }
            } else if (_source203.is_Arrow) {
              Dafny.ISequence<DAST._IType> _5542___mcc_h904 = _source203.dtor_args;
              DAST._IType _5543___mcc_h905 = _source203.dtor_result;
              {
                RAST._IType _5544_fromTpeGen;
                RAST._IType _out2010;
                _out2010 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5544_fromTpeGen = _out2010;
                RAST._IType _5545_toTpeGen;
                RAST._IType _out2011;
                _out2011 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5545_toTpeGen = _out2011;
                RAST._IExpr _5546_recursiveGen;
                DCOMP._IOwnership _5547_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5548_recIdents;
                RAST._IExpr _out2012;
                DCOMP._IOwnership _out2013;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2014;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2012, out _out2013, out _out2014);
                _5546_recursiveGen = _out2012;
                _5547_recOwned = _out2013;
                _5548_recIdents = _out2014;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5546_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5544_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5545_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2015;
                DCOMP._IOwnership _out2016;
                DCOMP.COMP.FromOwnership(r, _5547_recOwned, expectedOwnership, out _out2015, out _out2016);
                r = _out2015;
                resultingOwnership = _out2016;
                readIdents = _5548_recIdents;
              }
            } else if (_source203.is_Primitive) {
              DAST._IPrimitive _5549___mcc_h908 = _source203.dtor_Primitive_a0;
              DAST._IPrimitive _source208 = _5549___mcc_h908;
              if (_source208.is_Int) {
                {
                  RAST._IType _5550_fromTpeGen;
                  RAST._IType _out2017;
                  _out2017 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5550_fromTpeGen = _out2017;
                  RAST._IType _5551_toTpeGen;
                  RAST._IType _out2018;
                  _out2018 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5551_toTpeGen = _out2018;
                  RAST._IExpr _5552_recursiveGen;
                  DCOMP._IOwnership _5553_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5554_recIdents;
                  RAST._IExpr _out2019;
                  DCOMP._IOwnership _out2020;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2021;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2019, out _out2020, out _out2021);
                  _5552_recursiveGen = _out2019;
                  _5553_recOwned = _out2020;
                  _5554_recIdents = _out2021;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5552_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5550_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5551_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2022;
                  DCOMP._IOwnership _out2023;
                  DCOMP.COMP.FromOwnership(r, _5553_recOwned, expectedOwnership, out _out2022, out _out2023);
                  r = _out2022;
                  resultingOwnership = _out2023;
                  readIdents = _5554_recIdents;
                }
              } else if (_source208.is_Real) {
                {
                  RAST._IExpr _5555_recursiveGen;
                  DCOMP._IOwnership _5556___v91;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5557_recIdents;
                  RAST._IExpr _out2024;
                  DCOMP._IOwnership _out2025;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2026;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2024, out _out2025, out _out2026);
                  _5555_recursiveGen = _out2024;
                  _5556___v91 = _out2025;
                  _5557_recIdents = _out2026;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_5555_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out2027;
                  DCOMP._IOwnership _out2028;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2027, out _out2028);
                  r = _out2027;
                  resultingOwnership = _out2028;
                  readIdents = _5557_recIdents;
                }
              } else if (_source208.is_String) {
                {
                  RAST._IType _5558_fromTpeGen;
                  RAST._IType _out2029;
                  _out2029 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5558_fromTpeGen = _out2029;
                  RAST._IType _5559_toTpeGen;
                  RAST._IType _out2030;
                  _out2030 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5559_toTpeGen = _out2030;
                  RAST._IExpr _5560_recursiveGen;
                  DCOMP._IOwnership _5561_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5562_recIdents;
                  RAST._IExpr _out2031;
                  DCOMP._IOwnership _out2032;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2033;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2031, out _out2032, out _out2033);
                  _5560_recursiveGen = _out2031;
                  _5561_recOwned = _out2032;
                  _5562_recIdents = _out2033;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5560_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5558_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5559_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2034;
                  DCOMP._IOwnership _out2035;
                  DCOMP.COMP.FromOwnership(r, _5561_recOwned, expectedOwnership, out _out2034, out _out2035);
                  r = _out2034;
                  resultingOwnership = _out2035;
                  readIdents = _5562_recIdents;
                }
              } else if (_source208.is_Bool) {
                {
                  RAST._IType _5563_fromTpeGen;
                  RAST._IType _out2036;
                  _out2036 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5563_fromTpeGen = _out2036;
                  RAST._IType _5564_toTpeGen;
                  RAST._IType _out2037;
                  _out2037 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5564_toTpeGen = _out2037;
                  RAST._IExpr _5565_recursiveGen;
                  DCOMP._IOwnership _5566_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5567_recIdents;
                  RAST._IExpr _out2038;
                  DCOMP._IOwnership _out2039;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2040;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2038, out _out2039, out _out2040);
                  _5565_recursiveGen = _out2038;
                  _5566_recOwned = _out2039;
                  _5567_recIdents = _out2040;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5565_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5563_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5564_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2041;
                  DCOMP._IOwnership _out2042;
                  DCOMP.COMP.FromOwnership(r, _5566_recOwned, expectedOwnership, out _out2041, out _out2042);
                  r = _out2041;
                  resultingOwnership = _out2042;
                  readIdents = _5567_recIdents;
                }
              } else {
                {
                  RAST._IType _5568_rhsType;
                  RAST._IType _out2043;
                  _out2043 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5568_rhsType = _out2043;
                  RAST._IExpr _5569_recursiveGen;
                  DCOMP._IOwnership _5570___v97;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5571_recIdents;
                  RAST._IExpr _out2044;
                  DCOMP._IOwnership _out2045;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2046;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2044, out _out2045, out _out2046);
                  _5569_recursiveGen = _out2044;
                  _5570___v97 = _out2045;
                  _5571_recIdents = _out2046;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_5569_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out2047;
                  DCOMP._IOwnership _out2048;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2047, out _out2048);
                  r = _out2047;
                  resultingOwnership = _out2048;
                  readIdents = _5571_recIdents;
                }
              }
            } else if (_source203.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _5572___mcc_h910 = _source203.dtor_Passthrough_a0;
              {
                RAST._IType _5573_rhsType;
                RAST._IType _out2049;
                _out2049 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5573_rhsType = _out2049;
                RAST._IExpr _5574_recursiveGen;
                DCOMP._IOwnership _5575___v94;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5576_recIdents;
                RAST._IExpr _out2050;
                DCOMP._IOwnership _out2051;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2052;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2050, out _out2051, out _out2052);
                _5574_recursiveGen = _out2050;
                _5575___v94 = _out2051;
                _5576_recIdents = _out2052;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_5573_rhsType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_5574_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out2053;
                DCOMP._IOwnership _out2054;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2053, out _out2054);
                r = _out2053;
                resultingOwnership = _out2054;
                readIdents = _5576_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _5577___mcc_h912 = _source203.dtor_TypeArg_a0;
              {
                RAST._IType _5578_fromTpeGen;
                RAST._IType _out2055;
                _out2055 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5578_fromTpeGen = _out2055;
                RAST._IType _5579_toTpeGen;
                RAST._IType _out2056;
                _out2056 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5579_toTpeGen = _out2056;
                RAST._IExpr _5580_recursiveGen;
                DCOMP._IOwnership _5581_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5582_recIdents;
                RAST._IExpr _out2057;
                DCOMP._IOwnership _out2058;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2059;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2057, out _out2058, out _out2059);
                _5580_recursiveGen = _out2057;
                _5581_recOwned = _out2058;
                _5582_recIdents = _out2059;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5580_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5578_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5579_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2060;
                DCOMP._IOwnership _out2061;
                DCOMP.COMP.FromOwnership(r, _5581_recOwned, expectedOwnership, out _out2060, out _out2061);
                r = _out2060;
                resultingOwnership = _out2061;
                readIdents = _5582_recIdents;
              }
            }
          } else if (_source202.is_Real) {
            DAST._IType _source209 = _3403___mcc_h1;
            if (_source209.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5583___mcc_h914 = _source209.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _5584___mcc_h915 = _source209.dtor_typeArgs;
              DAST._IResolvedType _5585___mcc_h916 = _source209.dtor_resolved;
              DAST._IResolvedType _source210 = _5585___mcc_h916;
              if (_source210.is_Datatype) {
                DAST._IDatatypeType _5586___mcc_h920 = _source210.dtor_datatypeType;
                {
                  RAST._IType _5587_fromTpeGen;
                  RAST._IType _out2062;
                  _out2062 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5587_fromTpeGen = _out2062;
                  RAST._IType _5588_toTpeGen;
                  RAST._IType _out2063;
                  _out2063 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5588_toTpeGen = _out2063;
                  RAST._IExpr _5589_recursiveGen;
                  DCOMP._IOwnership _5590_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5591_recIdents;
                  RAST._IExpr _out2064;
                  DCOMP._IOwnership _out2065;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2066;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2064, out _out2065, out _out2066);
                  _5589_recursiveGen = _out2064;
                  _5590_recOwned = _out2065;
                  _5591_recIdents = _out2066;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5589_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5587_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5588_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2067;
                  DCOMP._IOwnership _out2068;
                  DCOMP.COMP.FromOwnership(r, _5590_recOwned, expectedOwnership, out _out2067, out _out2068);
                  r = _out2067;
                  resultingOwnership = _out2068;
                  readIdents = _5591_recIdents;
                }
              } else if (_source210.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5592___mcc_h922 = _source210.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _5593___mcc_h923 = _source210.dtor_attributes;
                {
                  RAST._IType _5594_fromTpeGen;
                  RAST._IType _out2069;
                  _out2069 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5594_fromTpeGen = _out2069;
                  RAST._IType _5595_toTpeGen;
                  RAST._IType _out2070;
                  _out2070 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5595_toTpeGen = _out2070;
                  RAST._IExpr _5596_recursiveGen;
                  DCOMP._IOwnership _5597_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5598_recIdents;
                  RAST._IExpr _out2071;
                  DCOMP._IOwnership _out2072;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2073;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2071, out _out2072, out _out2073);
                  _5596_recursiveGen = _out2071;
                  _5597_recOwned = _out2072;
                  _5598_recIdents = _out2073;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5596_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5594_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5595_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2074;
                  DCOMP._IOwnership _out2075;
                  DCOMP.COMP.FromOwnership(r, _5597_recOwned, expectedOwnership, out _out2074, out _out2075);
                  r = _out2074;
                  resultingOwnership = _out2075;
                  readIdents = _5598_recIdents;
                }
              } else {
                DAST._IType _5599___mcc_h926 = _source210.dtor_baseType;
                DAST._INewtypeRange _5600___mcc_h927 = _source210.dtor_range;
                bool _5601___mcc_h928 = _source210.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _5602___mcc_h929 = _source210.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _5603_attributes = _5602___mcc_h929;
                bool _5604_erase = _5601___mcc_h928;
                DAST._INewtypeRange _5605_range = _5600___mcc_h927;
                DAST._IType _5606_b = _5599___mcc_h926;
                {
                  Std.Wrappers._IOption<RAST._IType> _5607_nativeToType;
                  _5607_nativeToType = DCOMP.COMP.NewtypeToRustType(_5606_b, _5605_range);
                  if (object.Equals(_3397_fromTpe, _5606_b)) {
                    RAST._IExpr _5608_recursiveGen;
                    DCOMP._IOwnership _5609_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5610_recIdents;
                    RAST._IExpr _out2076;
                    DCOMP._IOwnership _out2077;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2078;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2076, out _out2077, out _out2078);
                    _5608_recursiveGen = _out2076;
                    _5609_recOwned = _out2077;
                    _5610_recIdents = _out2078;
                    readIdents = _5610_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source211 = _5607_nativeToType;
                    if (_source211.is_None) {
                      if (_5604_erase) {
                        r = _5608_recursiveGen;
                      } else {
                        RAST._IType _5611_rhsType;
                        RAST._IType _out2079;
                        _out2079 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                        _5611_rhsType = _out2079;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5611_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5608_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2080;
                      DCOMP._IOwnership _out2081;
                      DCOMP.COMP.FromOwnership(r, _5609_recOwned, expectedOwnership, out _out2080, out _out2081);
                      r = _out2080;
                      resultingOwnership = _out2081;
                    } else {
                      RAST._IType _5612___mcc_h1975 = _source211.dtor_value;
                      RAST._IType _5613_v = _5612___mcc_h1975;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5608_recursiveGen, RAST.Expr.create_ExprFromType(_5613_v)));
                      RAST._IExpr _out2082;
                      DCOMP._IOwnership _out2083;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2082, out _out2083);
                      r = _out2082;
                      resultingOwnership = _out2083;
                    }
                  } else {
                    if ((_5607_nativeToType).is_Some) {
                      DAST._IType _source212 = _3397_fromTpe;
                      if (_source212.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5614___mcc_h1976 = _source212.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _5615___mcc_h1977 = _source212.dtor_typeArgs;
                        DAST._IResolvedType _5616___mcc_h1978 = _source212.dtor_resolved;
                        DAST._IResolvedType _source213 = _5616___mcc_h1978;
                        if (_source213.is_Datatype) {
                          DAST._IDatatypeType _5617___mcc_h1982 = _source213.dtor_datatypeType;
                        } else if (_source213.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5618___mcc_h1984 = _source213.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _5619___mcc_h1985 = _source213.dtor_attributes;
                        } else {
                          DAST._IType _5620___mcc_h1988 = _source213.dtor_baseType;
                          DAST._INewtypeRange _5621___mcc_h1989 = _source213.dtor_range;
                          bool _5622___mcc_h1990 = _source213.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _5623___mcc_h1991 = _source213.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _5624_attributes0 = _5623___mcc_h1991;
                          bool _5625_erase0 = _5622___mcc_h1990;
                          DAST._INewtypeRange _5626_range0 = _5621___mcc_h1989;
                          DAST._IType _5627_b0 = _5620___mcc_h1988;
                          {
                            Std.Wrappers._IOption<RAST._IType> _5628_nativeFromType;
                            _5628_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5627_b0, _5626_range0);
                            if ((_5628_nativeFromType).is_Some) {
                              RAST._IExpr _5629_recursiveGen;
                              DCOMP._IOwnership _5630_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5631_recIdents;
                              RAST._IExpr _out2084;
                              DCOMP._IOwnership _out2085;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2086;
                              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2084, out _out2085, out _out2086);
                              _5629_recursiveGen = _out2084;
                              _5630_recOwned = _out2085;
                              _5631_recIdents = _out2086;
                              RAST._IExpr _out2087;
                              DCOMP._IOwnership _out2088;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5629_recursiveGen, (_5607_nativeToType).dtor_value), _5630_recOwned, expectedOwnership, out _out2087, out _out2088);
                              r = _out2087;
                              resultingOwnership = _out2088;
                              readIdents = _5631_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source212.is_Nullable) {
                        DAST._IType _5632___mcc_h1996 = _source212.dtor_Nullable_a0;
                      } else if (_source212.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _5633___mcc_h1998 = _source212.dtor_Tuple_a0;
                      } else if (_source212.is_Array) {
                        DAST._IType _5634___mcc_h2000 = _source212.dtor_element;
                        BigInteger _5635___mcc_h2001 = _source212.dtor_dims;
                      } else if (_source212.is_Seq) {
                        DAST._IType _5636___mcc_h2004 = _source212.dtor_element;
                      } else if (_source212.is_Set) {
                        DAST._IType _5637___mcc_h2006 = _source212.dtor_element;
                      } else if (_source212.is_Multiset) {
                        DAST._IType _5638___mcc_h2008 = _source212.dtor_element;
                      } else if (_source212.is_Map) {
                        DAST._IType _5639___mcc_h2010 = _source212.dtor_key;
                        DAST._IType _5640___mcc_h2011 = _source212.dtor_value;
                      } else if (_source212.is_SetBuilder) {
                        DAST._IType _5641___mcc_h2014 = _source212.dtor_element;
                      } else if (_source212.is_MapBuilder) {
                        DAST._IType _5642___mcc_h2016 = _source212.dtor_key;
                        DAST._IType _5643___mcc_h2017 = _source212.dtor_value;
                      } else if (_source212.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _5644___mcc_h2020 = _source212.dtor_args;
                        DAST._IType _5645___mcc_h2021 = _source212.dtor_result;
                      } else if (_source212.is_Primitive) {
                        DAST._IPrimitive _5646___mcc_h2024 = _source212.dtor_Primitive_a0;
                      } else if (_source212.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _5647___mcc_h2026 = _source212.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _5648___mcc_h2028 = _source212.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _5649_recursiveGen;
                        DCOMP._IOwnership _5650_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5651_recIdents;
                        RAST._IExpr _out2089;
                        DCOMP._IOwnership _out2090;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2091;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2089, out _out2090, out _out2091);
                        _5649_recursiveGen = _out2089;
                        _5650_recOwned = _out2090;
                        _5651_recIdents = _out2091;
                        RAST._IExpr _out2092;
                        DCOMP._IOwnership _out2093;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5649_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5607_nativeToType).dtor_value), _5650_recOwned, expectedOwnership, out _out2092, out _out2093);
                        r = _out2092;
                        resultingOwnership = _out2093;
                        readIdents = _5651_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2094;
                    DCOMP._IOwnership _out2095;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2096;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _5606_b), _5606_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out2094, out _out2095, out _out2096);
                    r = _out2094;
                    resultingOwnership = _out2095;
                    readIdents = _out2096;
                  }
                }
              }
            } else if (_source209.is_Nullable) {
              DAST._IType _5652___mcc_h934 = _source209.dtor_Nullable_a0;
              {
                RAST._IExpr _5653_recursiveGen;
                DCOMP._IOwnership _5654_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5655_recIdents;
                RAST._IExpr _out2097;
                DCOMP._IOwnership _out2098;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2099;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2097, out _out2098, out _out2099);
                _5653_recursiveGen = _out2097;
                _5654_recOwned = _out2098;
                _5655_recIdents = _out2099;
                r = _5653_recursiveGen;
                if (object.Equals(_5654_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2100;
                DCOMP._IOwnership _out2101;
                DCOMP.COMP.FromOwnership(r, _5654_recOwned, expectedOwnership, out _out2100, out _out2101);
                r = _out2100;
                resultingOwnership = _out2101;
                readIdents = _5655_recIdents;
              }
            } else if (_source209.is_Tuple) {
              Dafny.ISequence<DAST._IType> _5656___mcc_h936 = _source209.dtor_Tuple_a0;
              {
                RAST._IType _5657_fromTpeGen;
                RAST._IType _out2102;
                _out2102 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5657_fromTpeGen = _out2102;
                RAST._IType _5658_toTpeGen;
                RAST._IType _out2103;
                _out2103 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5658_toTpeGen = _out2103;
                RAST._IExpr _5659_recursiveGen;
                DCOMP._IOwnership _5660_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5661_recIdents;
                RAST._IExpr _out2104;
                DCOMP._IOwnership _out2105;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2106;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2104, out _out2105, out _out2106);
                _5659_recursiveGen = _out2104;
                _5660_recOwned = _out2105;
                _5661_recIdents = _out2106;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5659_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5657_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5658_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2107;
                DCOMP._IOwnership _out2108;
                DCOMP.COMP.FromOwnership(r, _5660_recOwned, expectedOwnership, out _out2107, out _out2108);
                r = _out2107;
                resultingOwnership = _out2108;
                readIdents = _5661_recIdents;
              }
            } else if (_source209.is_Array) {
              DAST._IType _5662___mcc_h938 = _source209.dtor_element;
              BigInteger _5663___mcc_h939 = _source209.dtor_dims;
              {
                RAST._IType _5664_fromTpeGen;
                RAST._IType _out2109;
                _out2109 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5664_fromTpeGen = _out2109;
                RAST._IType _5665_toTpeGen;
                RAST._IType _out2110;
                _out2110 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5665_toTpeGen = _out2110;
                RAST._IExpr _5666_recursiveGen;
                DCOMP._IOwnership _5667_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5668_recIdents;
                RAST._IExpr _out2111;
                DCOMP._IOwnership _out2112;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2113;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2111, out _out2112, out _out2113);
                _5666_recursiveGen = _out2111;
                _5667_recOwned = _out2112;
                _5668_recIdents = _out2113;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5666_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5664_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5665_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2114;
                DCOMP._IOwnership _out2115;
                DCOMP.COMP.FromOwnership(r, _5667_recOwned, expectedOwnership, out _out2114, out _out2115);
                r = _out2114;
                resultingOwnership = _out2115;
                readIdents = _5668_recIdents;
              }
            } else if (_source209.is_Seq) {
              DAST._IType _5669___mcc_h942 = _source209.dtor_element;
              {
                RAST._IType _5670_fromTpeGen;
                RAST._IType _out2116;
                _out2116 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5670_fromTpeGen = _out2116;
                RAST._IType _5671_toTpeGen;
                RAST._IType _out2117;
                _out2117 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5671_toTpeGen = _out2117;
                RAST._IExpr _5672_recursiveGen;
                DCOMP._IOwnership _5673_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5674_recIdents;
                RAST._IExpr _out2118;
                DCOMP._IOwnership _out2119;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2120;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2118, out _out2119, out _out2120);
                _5672_recursiveGen = _out2118;
                _5673_recOwned = _out2119;
                _5674_recIdents = _out2120;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5672_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5670_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5671_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2121;
                DCOMP._IOwnership _out2122;
                DCOMP.COMP.FromOwnership(r, _5673_recOwned, expectedOwnership, out _out2121, out _out2122);
                r = _out2121;
                resultingOwnership = _out2122;
                readIdents = _5674_recIdents;
              }
            } else if (_source209.is_Set) {
              DAST._IType _5675___mcc_h944 = _source209.dtor_element;
              {
                RAST._IType _5676_fromTpeGen;
                RAST._IType _out2123;
                _out2123 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5676_fromTpeGen = _out2123;
                RAST._IType _5677_toTpeGen;
                RAST._IType _out2124;
                _out2124 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5677_toTpeGen = _out2124;
                RAST._IExpr _5678_recursiveGen;
                DCOMP._IOwnership _5679_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5680_recIdents;
                RAST._IExpr _out2125;
                DCOMP._IOwnership _out2126;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2127;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2125, out _out2126, out _out2127);
                _5678_recursiveGen = _out2125;
                _5679_recOwned = _out2126;
                _5680_recIdents = _out2127;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5678_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5676_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5677_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2128;
                DCOMP._IOwnership _out2129;
                DCOMP.COMP.FromOwnership(r, _5679_recOwned, expectedOwnership, out _out2128, out _out2129);
                r = _out2128;
                resultingOwnership = _out2129;
                readIdents = _5680_recIdents;
              }
            } else if (_source209.is_Multiset) {
              DAST._IType _5681___mcc_h946 = _source209.dtor_element;
              {
                RAST._IType _5682_fromTpeGen;
                RAST._IType _out2130;
                _out2130 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5682_fromTpeGen = _out2130;
                RAST._IType _5683_toTpeGen;
                RAST._IType _out2131;
                _out2131 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5683_toTpeGen = _out2131;
                RAST._IExpr _5684_recursiveGen;
                DCOMP._IOwnership _5685_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5686_recIdents;
                RAST._IExpr _out2132;
                DCOMP._IOwnership _out2133;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2134;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2132, out _out2133, out _out2134);
                _5684_recursiveGen = _out2132;
                _5685_recOwned = _out2133;
                _5686_recIdents = _out2134;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5684_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5682_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5683_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2135;
                DCOMP._IOwnership _out2136;
                DCOMP.COMP.FromOwnership(r, _5685_recOwned, expectedOwnership, out _out2135, out _out2136);
                r = _out2135;
                resultingOwnership = _out2136;
                readIdents = _5686_recIdents;
              }
            } else if (_source209.is_Map) {
              DAST._IType _5687___mcc_h948 = _source209.dtor_key;
              DAST._IType _5688___mcc_h949 = _source209.dtor_value;
              {
                RAST._IType _5689_fromTpeGen;
                RAST._IType _out2137;
                _out2137 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5689_fromTpeGen = _out2137;
                RAST._IType _5690_toTpeGen;
                RAST._IType _out2138;
                _out2138 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5690_toTpeGen = _out2138;
                RAST._IExpr _5691_recursiveGen;
                DCOMP._IOwnership _5692_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5693_recIdents;
                RAST._IExpr _out2139;
                DCOMP._IOwnership _out2140;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2141;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2139, out _out2140, out _out2141);
                _5691_recursiveGen = _out2139;
                _5692_recOwned = _out2140;
                _5693_recIdents = _out2141;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5691_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5689_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5690_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2142;
                DCOMP._IOwnership _out2143;
                DCOMP.COMP.FromOwnership(r, _5692_recOwned, expectedOwnership, out _out2142, out _out2143);
                r = _out2142;
                resultingOwnership = _out2143;
                readIdents = _5693_recIdents;
              }
            } else if (_source209.is_SetBuilder) {
              DAST._IType _5694___mcc_h952 = _source209.dtor_element;
              {
                RAST._IType _5695_fromTpeGen;
                RAST._IType _out2144;
                _out2144 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5695_fromTpeGen = _out2144;
                RAST._IType _5696_toTpeGen;
                RAST._IType _out2145;
                _out2145 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5696_toTpeGen = _out2145;
                RAST._IExpr _5697_recursiveGen;
                DCOMP._IOwnership _5698_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5699_recIdents;
                RAST._IExpr _out2146;
                DCOMP._IOwnership _out2147;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2148;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2146, out _out2147, out _out2148);
                _5697_recursiveGen = _out2146;
                _5698_recOwned = _out2147;
                _5699_recIdents = _out2148;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5697_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5695_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5696_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2149;
                DCOMP._IOwnership _out2150;
                DCOMP.COMP.FromOwnership(r, _5698_recOwned, expectedOwnership, out _out2149, out _out2150);
                r = _out2149;
                resultingOwnership = _out2150;
                readIdents = _5699_recIdents;
              }
            } else if (_source209.is_MapBuilder) {
              DAST._IType _5700___mcc_h954 = _source209.dtor_key;
              DAST._IType _5701___mcc_h955 = _source209.dtor_value;
              {
                RAST._IType _5702_fromTpeGen;
                RAST._IType _out2151;
                _out2151 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5702_fromTpeGen = _out2151;
                RAST._IType _5703_toTpeGen;
                RAST._IType _out2152;
                _out2152 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5703_toTpeGen = _out2152;
                RAST._IExpr _5704_recursiveGen;
                DCOMP._IOwnership _5705_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5706_recIdents;
                RAST._IExpr _out2153;
                DCOMP._IOwnership _out2154;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2155;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2153, out _out2154, out _out2155);
                _5704_recursiveGen = _out2153;
                _5705_recOwned = _out2154;
                _5706_recIdents = _out2155;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5704_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5702_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5703_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2156;
                DCOMP._IOwnership _out2157;
                DCOMP.COMP.FromOwnership(r, _5705_recOwned, expectedOwnership, out _out2156, out _out2157);
                r = _out2156;
                resultingOwnership = _out2157;
                readIdents = _5706_recIdents;
              }
            } else if (_source209.is_Arrow) {
              Dafny.ISequence<DAST._IType> _5707___mcc_h958 = _source209.dtor_args;
              DAST._IType _5708___mcc_h959 = _source209.dtor_result;
              {
                RAST._IType _5709_fromTpeGen;
                RAST._IType _out2158;
                _out2158 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5709_fromTpeGen = _out2158;
                RAST._IType _5710_toTpeGen;
                RAST._IType _out2159;
                _out2159 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5710_toTpeGen = _out2159;
                RAST._IExpr _5711_recursiveGen;
                DCOMP._IOwnership _5712_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5713_recIdents;
                RAST._IExpr _out2160;
                DCOMP._IOwnership _out2161;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2162;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2160, out _out2161, out _out2162);
                _5711_recursiveGen = _out2160;
                _5712_recOwned = _out2161;
                _5713_recIdents = _out2162;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5711_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5709_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5710_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2163;
                DCOMP._IOwnership _out2164;
                DCOMP.COMP.FromOwnership(r, _5712_recOwned, expectedOwnership, out _out2163, out _out2164);
                r = _out2163;
                resultingOwnership = _out2164;
                readIdents = _5713_recIdents;
              }
            } else if (_source209.is_Primitive) {
              DAST._IPrimitive _5714___mcc_h962 = _source209.dtor_Primitive_a0;
              DAST._IPrimitive _source214 = _5714___mcc_h962;
              if (_source214.is_Int) {
                {
                  RAST._IExpr _5715_recursiveGen;
                  DCOMP._IOwnership _5716___v92;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5717_recIdents;
                  RAST._IExpr _out2165;
                  DCOMP._IOwnership _out2166;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2167;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2165, out _out2166, out _out2167);
                  _5715_recursiveGen = _out2165;
                  _5716___v92 = _out2166;
                  _5717_recIdents = _out2167;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_5715_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out2168;
                  DCOMP._IOwnership _out2169;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2168, out _out2169);
                  r = _out2168;
                  resultingOwnership = _out2169;
                  readIdents = _5717_recIdents;
                }
              } else if (_source214.is_Real) {
                {
                  RAST._IType _5718_fromTpeGen;
                  RAST._IType _out2170;
                  _out2170 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5718_fromTpeGen = _out2170;
                  RAST._IType _5719_toTpeGen;
                  RAST._IType _out2171;
                  _out2171 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5719_toTpeGen = _out2171;
                  RAST._IExpr _5720_recursiveGen;
                  DCOMP._IOwnership _5721_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5722_recIdents;
                  RAST._IExpr _out2172;
                  DCOMP._IOwnership _out2173;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2174;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2172, out _out2173, out _out2174);
                  _5720_recursiveGen = _out2172;
                  _5721_recOwned = _out2173;
                  _5722_recIdents = _out2174;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5720_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5718_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5719_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2175;
                  DCOMP._IOwnership _out2176;
                  DCOMP.COMP.FromOwnership(r, _5721_recOwned, expectedOwnership, out _out2175, out _out2176);
                  r = _out2175;
                  resultingOwnership = _out2176;
                  readIdents = _5722_recIdents;
                }
              } else if (_source214.is_String) {
                {
                  RAST._IType _5723_fromTpeGen;
                  RAST._IType _out2177;
                  _out2177 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5723_fromTpeGen = _out2177;
                  RAST._IType _5724_toTpeGen;
                  RAST._IType _out2178;
                  _out2178 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5724_toTpeGen = _out2178;
                  RAST._IExpr _5725_recursiveGen;
                  DCOMP._IOwnership _5726_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5727_recIdents;
                  RAST._IExpr _out2179;
                  DCOMP._IOwnership _out2180;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2181;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2179, out _out2180, out _out2181);
                  _5725_recursiveGen = _out2179;
                  _5726_recOwned = _out2180;
                  _5727_recIdents = _out2181;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5725_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5723_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5724_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2182;
                  DCOMP._IOwnership _out2183;
                  DCOMP.COMP.FromOwnership(r, _5726_recOwned, expectedOwnership, out _out2182, out _out2183);
                  r = _out2182;
                  resultingOwnership = _out2183;
                  readIdents = _5727_recIdents;
                }
              } else if (_source214.is_Bool) {
                {
                  RAST._IType _5728_fromTpeGen;
                  RAST._IType _out2184;
                  _out2184 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5728_fromTpeGen = _out2184;
                  RAST._IType _5729_toTpeGen;
                  RAST._IType _out2185;
                  _out2185 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5729_toTpeGen = _out2185;
                  RAST._IExpr _5730_recursiveGen;
                  DCOMP._IOwnership _5731_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5732_recIdents;
                  RAST._IExpr _out2186;
                  DCOMP._IOwnership _out2187;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2188;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2186, out _out2187, out _out2188);
                  _5730_recursiveGen = _out2186;
                  _5731_recOwned = _out2187;
                  _5732_recIdents = _out2188;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5730_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5728_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5729_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2189;
                  DCOMP._IOwnership _out2190;
                  DCOMP.COMP.FromOwnership(r, _5731_recOwned, expectedOwnership, out _out2189, out _out2190);
                  r = _out2189;
                  resultingOwnership = _out2190;
                  readIdents = _5732_recIdents;
                }
              } else {
                {
                  RAST._IType _5733_fromTpeGen;
                  RAST._IType _out2191;
                  _out2191 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5733_fromTpeGen = _out2191;
                  RAST._IType _5734_toTpeGen;
                  RAST._IType _out2192;
                  _out2192 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5734_toTpeGen = _out2192;
                  RAST._IExpr _5735_recursiveGen;
                  DCOMP._IOwnership _5736_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5737_recIdents;
                  RAST._IExpr _out2193;
                  DCOMP._IOwnership _out2194;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2195;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2193, out _out2194, out _out2195);
                  _5735_recursiveGen = _out2193;
                  _5736_recOwned = _out2194;
                  _5737_recIdents = _out2195;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5735_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5733_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5734_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2196;
                  DCOMP._IOwnership _out2197;
                  DCOMP.COMP.FromOwnership(r, _5736_recOwned, expectedOwnership, out _out2196, out _out2197);
                  r = _out2196;
                  resultingOwnership = _out2197;
                  readIdents = _5737_recIdents;
                }
              }
            } else if (_source209.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _5738___mcc_h964 = _source209.dtor_Passthrough_a0;
              {
                RAST._IType _5739_fromTpeGen;
                RAST._IType _out2198;
                _out2198 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5739_fromTpeGen = _out2198;
                RAST._IType _5740_toTpeGen;
                RAST._IType _out2199;
                _out2199 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5740_toTpeGen = _out2199;
                RAST._IExpr _5741_recursiveGen;
                DCOMP._IOwnership _5742_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5743_recIdents;
                RAST._IExpr _out2200;
                DCOMP._IOwnership _out2201;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2202;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2200, out _out2201, out _out2202);
                _5741_recursiveGen = _out2200;
                _5742_recOwned = _out2201;
                _5743_recIdents = _out2202;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5741_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5739_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5740_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2203;
                DCOMP._IOwnership _out2204;
                DCOMP.COMP.FromOwnership(r, _5742_recOwned, expectedOwnership, out _out2203, out _out2204);
                r = _out2203;
                resultingOwnership = _out2204;
                readIdents = _5743_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _5744___mcc_h966 = _source209.dtor_TypeArg_a0;
              {
                RAST._IType _5745_fromTpeGen;
                RAST._IType _out2205;
                _out2205 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5745_fromTpeGen = _out2205;
                RAST._IType _5746_toTpeGen;
                RAST._IType _out2206;
                _out2206 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5746_toTpeGen = _out2206;
                RAST._IExpr _5747_recursiveGen;
                DCOMP._IOwnership _5748_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5749_recIdents;
                RAST._IExpr _out2207;
                DCOMP._IOwnership _out2208;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2209;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2207, out _out2208, out _out2209);
                _5747_recursiveGen = _out2207;
                _5748_recOwned = _out2208;
                _5749_recIdents = _out2209;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5747_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5745_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5746_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2210;
                DCOMP._IOwnership _out2211;
                DCOMP.COMP.FromOwnership(r, _5748_recOwned, expectedOwnership, out _out2210, out _out2211);
                r = _out2210;
                resultingOwnership = _out2211;
                readIdents = _5749_recIdents;
              }
            }
          } else if (_source202.is_String) {
            DAST._IType _source215 = _3403___mcc_h1;
            if (_source215.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5750___mcc_h968 = _source215.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _5751___mcc_h969 = _source215.dtor_typeArgs;
              DAST._IResolvedType _5752___mcc_h970 = _source215.dtor_resolved;
              DAST._IResolvedType _source216 = _5752___mcc_h970;
              if (_source216.is_Datatype) {
                DAST._IDatatypeType _5753___mcc_h974 = _source216.dtor_datatypeType;
                {
                  RAST._IType _5754_fromTpeGen;
                  RAST._IType _out2212;
                  _out2212 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5754_fromTpeGen = _out2212;
                  RAST._IType _5755_toTpeGen;
                  RAST._IType _out2213;
                  _out2213 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5755_toTpeGen = _out2213;
                  RAST._IExpr _5756_recursiveGen;
                  DCOMP._IOwnership _5757_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5758_recIdents;
                  RAST._IExpr _out2214;
                  DCOMP._IOwnership _out2215;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2216;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2214, out _out2215, out _out2216);
                  _5756_recursiveGen = _out2214;
                  _5757_recOwned = _out2215;
                  _5758_recIdents = _out2216;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5756_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5754_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5755_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2217;
                  DCOMP._IOwnership _out2218;
                  DCOMP.COMP.FromOwnership(r, _5757_recOwned, expectedOwnership, out _out2217, out _out2218);
                  r = _out2217;
                  resultingOwnership = _out2218;
                  readIdents = _5758_recIdents;
                }
              } else if (_source216.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5759___mcc_h976 = _source216.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _5760___mcc_h977 = _source216.dtor_attributes;
                {
                  RAST._IType _5761_fromTpeGen;
                  RAST._IType _out2219;
                  _out2219 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5761_fromTpeGen = _out2219;
                  RAST._IType _5762_toTpeGen;
                  RAST._IType _out2220;
                  _out2220 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5762_toTpeGen = _out2220;
                  RAST._IExpr _5763_recursiveGen;
                  DCOMP._IOwnership _5764_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5765_recIdents;
                  RAST._IExpr _out2221;
                  DCOMP._IOwnership _out2222;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2223;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2221, out _out2222, out _out2223);
                  _5763_recursiveGen = _out2221;
                  _5764_recOwned = _out2222;
                  _5765_recIdents = _out2223;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5763_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5761_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5762_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2224;
                  DCOMP._IOwnership _out2225;
                  DCOMP.COMP.FromOwnership(r, _5764_recOwned, expectedOwnership, out _out2224, out _out2225);
                  r = _out2224;
                  resultingOwnership = _out2225;
                  readIdents = _5765_recIdents;
                }
              } else {
                DAST._IType _5766___mcc_h980 = _source216.dtor_baseType;
                DAST._INewtypeRange _5767___mcc_h981 = _source216.dtor_range;
                bool _5768___mcc_h982 = _source216.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _5769___mcc_h983 = _source216.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _5770_attributes = _5769___mcc_h983;
                bool _5771_erase = _5768___mcc_h982;
                DAST._INewtypeRange _5772_range = _5767___mcc_h981;
                DAST._IType _5773_b = _5766___mcc_h980;
                {
                  Std.Wrappers._IOption<RAST._IType> _5774_nativeToType;
                  _5774_nativeToType = DCOMP.COMP.NewtypeToRustType(_5773_b, _5772_range);
                  if (object.Equals(_3397_fromTpe, _5773_b)) {
                    RAST._IExpr _5775_recursiveGen;
                    DCOMP._IOwnership _5776_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5777_recIdents;
                    RAST._IExpr _out2226;
                    DCOMP._IOwnership _out2227;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2228;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2226, out _out2227, out _out2228);
                    _5775_recursiveGen = _out2226;
                    _5776_recOwned = _out2227;
                    _5777_recIdents = _out2228;
                    readIdents = _5777_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source217 = _5774_nativeToType;
                    if (_source217.is_None) {
                      if (_5771_erase) {
                        r = _5775_recursiveGen;
                      } else {
                        RAST._IType _5778_rhsType;
                        RAST._IType _out2229;
                        _out2229 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                        _5778_rhsType = _out2229;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5778_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5775_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2230;
                      DCOMP._IOwnership _out2231;
                      DCOMP.COMP.FromOwnership(r, _5776_recOwned, expectedOwnership, out _out2230, out _out2231);
                      r = _out2230;
                      resultingOwnership = _out2231;
                    } else {
                      RAST._IType _5779___mcc_h2030 = _source217.dtor_value;
                      RAST._IType _5780_v = _5779___mcc_h2030;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5775_recursiveGen, RAST.Expr.create_ExprFromType(_5780_v)));
                      RAST._IExpr _out2232;
                      DCOMP._IOwnership _out2233;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2232, out _out2233);
                      r = _out2232;
                      resultingOwnership = _out2233;
                    }
                  } else {
                    if ((_5774_nativeToType).is_Some) {
                      DAST._IType _source218 = _3397_fromTpe;
                      if (_source218.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5781___mcc_h2031 = _source218.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _5782___mcc_h2032 = _source218.dtor_typeArgs;
                        DAST._IResolvedType _5783___mcc_h2033 = _source218.dtor_resolved;
                        DAST._IResolvedType _source219 = _5783___mcc_h2033;
                        if (_source219.is_Datatype) {
                          DAST._IDatatypeType _5784___mcc_h2037 = _source219.dtor_datatypeType;
                        } else if (_source219.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5785___mcc_h2039 = _source219.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _5786___mcc_h2040 = _source219.dtor_attributes;
                        } else {
                          DAST._IType _5787___mcc_h2043 = _source219.dtor_baseType;
                          DAST._INewtypeRange _5788___mcc_h2044 = _source219.dtor_range;
                          bool _5789___mcc_h2045 = _source219.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _5790___mcc_h2046 = _source219.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _5791_attributes0 = _5790___mcc_h2046;
                          bool _5792_erase0 = _5789___mcc_h2045;
                          DAST._INewtypeRange _5793_range0 = _5788___mcc_h2044;
                          DAST._IType _5794_b0 = _5787___mcc_h2043;
                          {
                            Std.Wrappers._IOption<RAST._IType> _5795_nativeFromType;
                            _5795_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5794_b0, _5793_range0);
                            if ((_5795_nativeFromType).is_Some) {
                              RAST._IExpr _5796_recursiveGen;
                              DCOMP._IOwnership _5797_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5798_recIdents;
                              RAST._IExpr _out2234;
                              DCOMP._IOwnership _out2235;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2236;
                              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2234, out _out2235, out _out2236);
                              _5796_recursiveGen = _out2234;
                              _5797_recOwned = _out2235;
                              _5798_recIdents = _out2236;
                              RAST._IExpr _out2237;
                              DCOMP._IOwnership _out2238;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5796_recursiveGen, (_5774_nativeToType).dtor_value), _5797_recOwned, expectedOwnership, out _out2237, out _out2238);
                              r = _out2237;
                              resultingOwnership = _out2238;
                              readIdents = _5798_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source218.is_Nullable) {
                        DAST._IType _5799___mcc_h2051 = _source218.dtor_Nullable_a0;
                      } else if (_source218.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _5800___mcc_h2053 = _source218.dtor_Tuple_a0;
                      } else if (_source218.is_Array) {
                        DAST._IType _5801___mcc_h2055 = _source218.dtor_element;
                        BigInteger _5802___mcc_h2056 = _source218.dtor_dims;
                      } else if (_source218.is_Seq) {
                        DAST._IType _5803___mcc_h2059 = _source218.dtor_element;
                      } else if (_source218.is_Set) {
                        DAST._IType _5804___mcc_h2061 = _source218.dtor_element;
                      } else if (_source218.is_Multiset) {
                        DAST._IType _5805___mcc_h2063 = _source218.dtor_element;
                      } else if (_source218.is_Map) {
                        DAST._IType _5806___mcc_h2065 = _source218.dtor_key;
                        DAST._IType _5807___mcc_h2066 = _source218.dtor_value;
                      } else if (_source218.is_SetBuilder) {
                        DAST._IType _5808___mcc_h2069 = _source218.dtor_element;
                      } else if (_source218.is_MapBuilder) {
                        DAST._IType _5809___mcc_h2071 = _source218.dtor_key;
                        DAST._IType _5810___mcc_h2072 = _source218.dtor_value;
                      } else if (_source218.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _5811___mcc_h2075 = _source218.dtor_args;
                        DAST._IType _5812___mcc_h2076 = _source218.dtor_result;
                      } else if (_source218.is_Primitive) {
                        DAST._IPrimitive _5813___mcc_h2079 = _source218.dtor_Primitive_a0;
                      } else if (_source218.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _5814___mcc_h2081 = _source218.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _5815___mcc_h2083 = _source218.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _5816_recursiveGen;
                        DCOMP._IOwnership _5817_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5818_recIdents;
                        RAST._IExpr _out2239;
                        DCOMP._IOwnership _out2240;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2241;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2239, out _out2240, out _out2241);
                        _5816_recursiveGen = _out2239;
                        _5817_recOwned = _out2240;
                        _5818_recIdents = _out2241;
                        RAST._IExpr _out2242;
                        DCOMP._IOwnership _out2243;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5816_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5774_nativeToType).dtor_value), _5817_recOwned, expectedOwnership, out _out2242, out _out2243);
                        r = _out2242;
                        resultingOwnership = _out2243;
                        readIdents = _5818_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2244;
                    DCOMP._IOwnership _out2245;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2246;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _5773_b), _5773_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out2244, out _out2245, out _out2246);
                    r = _out2244;
                    resultingOwnership = _out2245;
                    readIdents = _out2246;
                  }
                }
              }
            } else if (_source215.is_Nullable) {
              DAST._IType _5819___mcc_h988 = _source215.dtor_Nullable_a0;
              {
                RAST._IExpr _5820_recursiveGen;
                DCOMP._IOwnership _5821_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5822_recIdents;
                RAST._IExpr _out2247;
                DCOMP._IOwnership _out2248;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2249;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2247, out _out2248, out _out2249);
                _5820_recursiveGen = _out2247;
                _5821_recOwned = _out2248;
                _5822_recIdents = _out2249;
                r = _5820_recursiveGen;
                if (object.Equals(_5821_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2250;
                DCOMP._IOwnership _out2251;
                DCOMP.COMP.FromOwnership(r, _5821_recOwned, expectedOwnership, out _out2250, out _out2251);
                r = _out2250;
                resultingOwnership = _out2251;
                readIdents = _5822_recIdents;
              }
            } else if (_source215.is_Tuple) {
              Dafny.ISequence<DAST._IType> _5823___mcc_h990 = _source215.dtor_Tuple_a0;
              {
                RAST._IType _5824_fromTpeGen;
                RAST._IType _out2252;
                _out2252 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5824_fromTpeGen = _out2252;
                RAST._IType _5825_toTpeGen;
                RAST._IType _out2253;
                _out2253 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5825_toTpeGen = _out2253;
                RAST._IExpr _5826_recursiveGen;
                DCOMP._IOwnership _5827_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5828_recIdents;
                RAST._IExpr _out2254;
                DCOMP._IOwnership _out2255;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2256;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2254, out _out2255, out _out2256);
                _5826_recursiveGen = _out2254;
                _5827_recOwned = _out2255;
                _5828_recIdents = _out2256;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5826_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5824_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5825_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2257;
                DCOMP._IOwnership _out2258;
                DCOMP.COMP.FromOwnership(r, _5827_recOwned, expectedOwnership, out _out2257, out _out2258);
                r = _out2257;
                resultingOwnership = _out2258;
                readIdents = _5828_recIdents;
              }
            } else if (_source215.is_Array) {
              DAST._IType _5829___mcc_h992 = _source215.dtor_element;
              BigInteger _5830___mcc_h993 = _source215.dtor_dims;
              {
                RAST._IType _5831_fromTpeGen;
                RAST._IType _out2259;
                _out2259 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5831_fromTpeGen = _out2259;
                RAST._IType _5832_toTpeGen;
                RAST._IType _out2260;
                _out2260 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5832_toTpeGen = _out2260;
                RAST._IExpr _5833_recursiveGen;
                DCOMP._IOwnership _5834_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5835_recIdents;
                RAST._IExpr _out2261;
                DCOMP._IOwnership _out2262;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2263;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2261, out _out2262, out _out2263);
                _5833_recursiveGen = _out2261;
                _5834_recOwned = _out2262;
                _5835_recIdents = _out2263;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5833_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5831_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5832_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2264;
                DCOMP._IOwnership _out2265;
                DCOMP.COMP.FromOwnership(r, _5834_recOwned, expectedOwnership, out _out2264, out _out2265);
                r = _out2264;
                resultingOwnership = _out2265;
                readIdents = _5835_recIdents;
              }
            } else if (_source215.is_Seq) {
              DAST._IType _5836___mcc_h996 = _source215.dtor_element;
              {
                RAST._IType _5837_fromTpeGen;
                RAST._IType _out2266;
                _out2266 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5837_fromTpeGen = _out2266;
                RAST._IType _5838_toTpeGen;
                RAST._IType _out2267;
                _out2267 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5838_toTpeGen = _out2267;
                RAST._IExpr _5839_recursiveGen;
                DCOMP._IOwnership _5840_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5841_recIdents;
                RAST._IExpr _out2268;
                DCOMP._IOwnership _out2269;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2270;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2268, out _out2269, out _out2270);
                _5839_recursiveGen = _out2268;
                _5840_recOwned = _out2269;
                _5841_recIdents = _out2270;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5839_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5837_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5838_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2271;
                DCOMP._IOwnership _out2272;
                DCOMP.COMP.FromOwnership(r, _5840_recOwned, expectedOwnership, out _out2271, out _out2272);
                r = _out2271;
                resultingOwnership = _out2272;
                readIdents = _5841_recIdents;
              }
            } else if (_source215.is_Set) {
              DAST._IType _5842___mcc_h998 = _source215.dtor_element;
              {
                RAST._IType _5843_fromTpeGen;
                RAST._IType _out2273;
                _out2273 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5843_fromTpeGen = _out2273;
                RAST._IType _5844_toTpeGen;
                RAST._IType _out2274;
                _out2274 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5844_toTpeGen = _out2274;
                RAST._IExpr _5845_recursiveGen;
                DCOMP._IOwnership _5846_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5847_recIdents;
                RAST._IExpr _out2275;
                DCOMP._IOwnership _out2276;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2277;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2275, out _out2276, out _out2277);
                _5845_recursiveGen = _out2275;
                _5846_recOwned = _out2276;
                _5847_recIdents = _out2277;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5845_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5843_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5844_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2278;
                DCOMP._IOwnership _out2279;
                DCOMP.COMP.FromOwnership(r, _5846_recOwned, expectedOwnership, out _out2278, out _out2279);
                r = _out2278;
                resultingOwnership = _out2279;
                readIdents = _5847_recIdents;
              }
            } else if (_source215.is_Multiset) {
              DAST._IType _5848___mcc_h1000 = _source215.dtor_element;
              {
                RAST._IType _5849_fromTpeGen;
                RAST._IType _out2280;
                _out2280 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5849_fromTpeGen = _out2280;
                RAST._IType _5850_toTpeGen;
                RAST._IType _out2281;
                _out2281 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5850_toTpeGen = _out2281;
                RAST._IExpr _5851_recursiveGen;
                DCOMP._IOwnership _5852_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5853_recIdents;
                RAST._IExpr _out2282;
                DCOMP._IOwnership _out2283;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2284;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2282, out _out2283, out _out2284);
                _5851_recursiveGen = _out2282;
                _5852_recOwned = _out2283;
                _5853_recIdents = _out2284;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5851_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5849_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5850_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2285;
                DCOMP._IOwnership _out2286;
                DCOMP.COMP.FromOwnership(r, _5852_recOwned, expectedOwnership, out _out2285, out _out2286);
                r = _out2285;
                resultingOwnership = _out2286;
                readIdents = _5853_recIdents;
              }
            } else if (_source215.is_Map) {
              DAST._IType _5854___mcc_h1002 = _source215.dtor_key;
              DAST._IType _5855___mcc_h1003 = _source215.dtor_value;
              {
                RAST._IType _5856_fromTpeGen;
                RAST._IType _out2287;
                _out2287 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5856_fromTpeGen = _out2287;
                RAST._IType _5857_toTpeGen;
                RAST._IType _out2288;
                _out2288 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5857_toTpeGen = _out2288;
                RAST._IExpr _5858_recursiveGen;
                DCOMP._IOwnership _5859_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5860_recIdents;
                RAST._IExpr _out2289;
                DCOMP._IOwnership _out2290;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2291;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2289, out _out2290, out _out2291);
                _5858_recursiveGen = _out2289;
                _5859_recOwned = _out2290;
                _5860_recIdents = _out2291;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5858_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5856_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5857_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2292;
                DCOMP._IOwnership _out2293;
                DCOMP.COMP.FromOwnership(r, _5859_recOwned, expectedOwnership, out _out2292, out _out2293);
                r = _out2292;
                resultingOwnership = _out2293;
                readIdents = _5860_recIdents;
              }
            } else if (_source215.is_SetBuilder) {
              DAST._IType _5861___mcc_h1006 = _source215.dtor_element;
              {
                RAST._IType _5862_fromTpeGen;
                RAST._IType _out2294;
                _out2294 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5862_fromTpeGen = _out2294;
                RAST._IType _5863_toTpeGen;
                RAST._IType _out2295;
                _out2295 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5863_toTpeGen = _out2295;
                RAST._IExpr _5864_recursiveGen;
                DCOMP._IOwnership _5865_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5866_recIdents;
                RAST._IExpr _out2296;
                DCOMP._IOwnership _out2297;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2298;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2296, out _out2297, out _out2298);
                _5864_recursiveGen = _out2296;
                _5865_recOwned = _out2297;
                _5866_recIdents = _out2298;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5864_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5862_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5863_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2299;
                DCOMP._IOwnership _out2300;
                DCOMP.COMP.FromOwnership(r, _5865_recOwned, expectedOwnership, out _out2299, out _out2300);
                r = _out2299;
                resultingOwnership = _out2300;
                readIdents = _5866_recIdents;
              }
            } else if (_source215.is_MapBuilder) {
              DAST._IType _5867___mcc_h1008 = _source215.dtor_key;
              DAST._IType _5868___mcc_h1009 = _source215.dtor_value;
              {
                RAST._IType _5869_fromTpeGen;
                RAST._IType _out2301;
                _out2301 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5869_fromTpeGen = _out2301;
                RAST._IType _5870_toTpeGen;
                RAST._IType _out2302;
                _out2302 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5870_toTpeGen = _out2302;
                RAST._IExpr _5871_recursiveGen;
                DCOMP._IOwnership _5872_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5873_recIdents;
                RAST._IExpr _out2303;
                DCOMP._IOwnership _out2304;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2305;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2303, out _out2304, out _out2305);
                _5871_recursiveGen = _out2303;
                _5872_recOwned = _out2304;
                _5873_recIdents = _out2305;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5871_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5869_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5870_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2306;
                DCOMP._IOwnership _out2307;
                DCOMP.COMP.FromOwnership(r, _5872_recOwned, expectedOwnership, out _out2306, out _out2307);
                r = _out2306;
                resultingOwnership = _out2307;
                readIdents = _5873_recIdents;
              }
            } else if (_source215.is_Arrow) {
              Dafny.ISequence<DAST._IType> _5874___mcc_h1012 = _source215.dtor_args;
              DAST._IType _5875___mcc_h1013 = _source215.dtor_result;
              {
                RAST._IType _5876_fromTpeGen;
                RAST._IType _out2308;
                _out2308 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5876_fromTpeGen = _out2308;
                RAST._IType _5877_toTpeGen;
                RAST._IType _out2309;
                _out2309 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5877_toTpeGen = _out2309;
                RAST._IExpr _5878_recursiveGen;
                DCOMP._IOwnership _5879_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5880_recIdents;
                RAST._IExpr _out2310;
                DCOMP._IOwnership _out2311;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2312;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2310, out _out2311, out _out2312);
                _5878_recursiveGen = _out2310;
                _5879_recOwned = _out2311;
                _5880_recIdents = _out2312;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5878_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5876_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5877_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2313;
                DCOMP._IOwnership _out2314;
                DCOMP.COMP.FromOwnership(r, _5879_recOwned, expectedOwnership, out _out2313, out _out2314);
                r = _out2313;
                resultingOwnership = _out2314;
                readIdents = _5880_recIdents;
              }
            } else if (_source215.is_Primitive) {
              DAST._IPrimitive _5881___mcc_h1016 = _source215.dtor_Primitive_a0;
              {
                RAST._IType _5882_fromTpeGen;
                RAST._IType _out2315;
                _out2315 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5882_fromTpeGen = _out2315;
                RAST._IType _5883_toTpeGen;
                RAST._IType _out2316;
                _out2316 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5883_toTpeGen = _out2316;
                RAST._IExpr _5884_recursiveGen;
                DCOMP._IOwnership _5885_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5886_recIdents;
                RAST._IExpr _out2317;
                DCOMP._IOwnership _out2318;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2319;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2317, out _out2318, out _out2319);
                _5884_recursiveGen = _out2317;
                _5885_recOwned = _out2318;
                _5886_recIdents = _out2319;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5884_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5882_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5883_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2320;
                DCOMP._IOwnership _out2321;
                DCOMP.COMP.FromOwnership(r, _5885_recOwned, expectedOwnership, out _out2320, out _out2321);
                r = _out2320;
                resultingOwnership = _out2321;
                readIdents = _5886_recIdents;
              }
            } else if (_source215.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _5887___mcc_h1018 = _source215.dtor_Passthrough_a0;
              {
                RAST._IType _5888_fromTpeGen;
                RAST._IType _out2322;
                _out2322 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5888_fromTpeGen = _out2322;
                RAST._IType _5889_toTpeGen;
                RAST._IType _out2323;
                _out2323 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5889_toTpeGen = _out2323;
                RAST._IExpr _5890_recursiveGen;
                DCOMP._IOwnership _5891_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5892_recIdents;
                RAST._IExpr _out2324;
                DCOMP._IOwnership _out2325;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2326;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2324, out _out2325, out _out2326);
                _5890_recursiveGen = _out2324;
                _5891_recOwned = _out2325;
                _5892_recIdents = _out2326;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5890_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5888_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5889_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2327;
                DCOMP._IOwnership _out2328;
                DCOMP.COMP.FromOwnership(r, _5891_recOwned, expectedOwnership, out _out2327, out _out2328);
                r = _out2327;
                resultingOwnership = _out2328;
                readIdents = _5892_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _5893___mcc_h1020 = _source215.dtor_TypeArg_a0;
              {
                RAST._IType _5894_fromTpeGen;
                RAST._IType _out2329;
                _out2329 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5894_fromTpeGen = _out2329;
                RAST._IType _5895_toTpeGen;
                RAST._IType _out2330;
                _out2330 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5895_toTpeGen = _out2330;
                RAST._IExpr _5896_recursiveGen;
                DCOMP._IOwnership _5897_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5898_recIdents;
                RAST._IExpr _out2331;
                DCOMP._IOwnership _out2332;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2333;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2331, out _out2332, out _out2333);
                _5896_recursiveGen = _out2331;
                _5897_recOwned = _out2332;
                _5898_recIdents = _out2333;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5896_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5894_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5895_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2334;
                DCOMP._IOwnership _out2335;
                DCOMP.COMP.FromOwnership(r, _5897_recOwned, expectedOwnership, out _out2334, out _out2335);
                r = _out2334;
                resultingOwnership = _out2335;
                readIdents = _5898_recIdents;
              }
            }
          } else if (_source202.is_Bool) {
            DAST._IType _source220 = _3403___mcc_h1;
            if (_source220.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5899___mcc_h1022 = _source220.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _5900___mcc_h1023 = _source220.dtor_typeArgs;
              DAST._IResolvedType _5901___mcc_h1024 = _source220.dtor_resolved;
              DAST._IResolvedType _source221 = _5901___mcc_h1024;
              if (_source221.is_Datatype) {
                DAST._IDatatypeType _5902___mcc_h1028 = _source221.dtor_datatypeType;
                {
                  RAST._IType _5903_fromTpeGen;
                  RAST._IType _out2336;
                  _out2336 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5903_fromTpeGen = _out2336;
                  RAST._IType _5904_toTpeGen;
                  RAST._IType _out2337;
                  _out2337 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5904_toTpeGen = _out2337;
                  RAST._IExpr _5905_recursiveGen;
                  DCOMP._IOwnership _5906_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5907_recIdents;
                  RAST._IExpr _out2338;
                  DCOMP._IOwnership _out2339;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2340;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2338, out _out2339, out _out2340);
                  _5905_recursiveGen = _out2338;
                  _5906_recOwned = _out2339;
                  _5907_recIdents = _out2340;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5905_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5903_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5904_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2341;
                  DCOMP._IOwnership _out2342;
                  DCOMP.COMP.FromOwnership(r, _5906_recOwned, expectedOwnership, out _out2341, out _out2342);
                  r = _out2341;
                  resultingOwnership = _out2342;
                  readIdents = _5907_recIdents;
                }
              } else if (_source221.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5908___mcc_h1030 = _source221.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _5909___mcc_h1031 = _source221.dtor_attributes;
                {
                  RAST._IType _5910_fromTpeGen;
                  RAST._IType _out2343;
                  _out2343 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _5910_fromTpeGen = _out2343;
                  RAST._IType _5911_toTpeGen;
                  RAST._IType _out2344;
                  _out2344 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _5911_toTpeGen = _out2344;
                  RAST._IExpr _5912_recursiveGen;
                  DCOMP._IOwnership _5913_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5914_recIdents;
                  RAST._IExpr _out2345;
                  DCOMP._IOwnership _out2346;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2347;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2345, out _out2346, out _out2347);
                  _5912_recursiveGen = _out2345;
                  _5913_recOwned = _out2346;
                  _5914_recIdents = _out2347;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5912_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5910_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5911_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2348;
                  DCOMP._IOwnership _out2349;
                  DCOMP.COMP.FromOwnership(r, _5913_recOwned, expectedOwnership, out _out2348, out _out2349);
                  r = _out2348;
                  resultingOwnership = _out2349;
                  readIdents = _5914_recIdents;
                }
              } else {
                DAST._IType _5915___mcc_h1034 = _source221.dtor_baseType;
                DAST._INewtypeRange _5916___mcc_h1035 = _source221.dtor_range;
                bool _5917___mcc_h1036 = _source221.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _5918___mcc_h1037 = _source221.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _5919_attributes = _5918___mcc_h1037;
                bool _5920_erase = _5917___mcc_h1036;
                DAST._INewtypeRange _5921_range = _5916___mcc_h1035;
                DAST._IType _5922_b = _5915___mcc_h1034;
                {
                  Std.Wrappers._IOption<RAST._IType> _5923_nativeToType;
                  _5923_nativeToType = DCOMP.COMP.NewtypeToRustType(_5922_b, _5921_range);
                  if (object.Equals(_3397_fromTpe, _5922_b)) {
                    RAST._IExpr _5924_recursiveGen;
                    DCOMP._IOwnership _5925_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5926_recIdents;
                    RAST._IExpr _out2350;
                    DCOMP._IOwnership _out2351;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2352;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2350, out _out2351, out _out2352);
                    _5924_recursiveGen = _out2350;
                    _5925_recOwned = _out2351;
                    _5926_recIdents = _out2352;
                    readIdents = _5926_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source222 = _5923_nativeToType;
                    if (_source222.is_None) {
                      if (_5920_erase) {
                        r = _5924_recursiveGen;
                      } else {
                        RAST._IType _5927_rhsType;
                        RAST._IType _out2353;
                        _out2353 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                        _5927_rhsType = _out2353;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5927_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5924_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2354;
                      DCOMP._IOwnership _out2355;
                      DCOMP.COMP.FromOwnership(r, _5925_recOwned, expectedOwnership, out _out2354, out _out2355);
                      r = _out2354;
                      resultingOwnership = _out2355;
                    } else {
                      RAST._IType _5928___mcc_h2085 = _source222.dtor_value;
                      RAST._IType _5929_v = _5928___mcc_h2085;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5924_recursiveGen, RAST.Expr.create_ExprFromType(_5929_v)));
                      RAST._IExpr _out2356;
                      DCOMP._IOwnership _out2357;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2356, out _out2357);
                      r = _out2356;
                      resultingOwnership = _out2357;
                    }
                  } else {
                    if ((_5923_nativeToType).is_Some) {
                      DAST._IType _source223 = _3397_fromTpe;
                      if (_source223.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5930___mcc_h2086 = _source223.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _5931___mcc_h2087 = _source223.dtor_typeArgs;
                        DAST._IResolvedType _5932___mcc_h2088 = _source223.dtor_resolved;
                        DAST._IResolvedType _source224 = _5932___mcc_h2088;
                        if (_source224.is_Datatype) {
                          DAST._IDatatypeType _5933___mcc_h2092 = _source224.dtor_datatypeType;
                        } else if (_source224.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5934___mcc_h2094 = _source224.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _5935___mcc_h2095 = _source224.dtor_attributes;
                        } else {
                          DAST._IType _5936___mcc_h2098 = _source224.dtor_baseType;
                          DAST._INewtypeRange _5937___mcc_h2099 = _source224.dtor_range;
                          bool _5938___mcc_h2100 = _source224.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _5939___mcc_h2101 = _source224.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _5940_attributes0 = _5939___mcc_h2101;
                          bool _5941_erase0 = _5938___mcc_h2100;
                          DAST._INewtypeRange _5942_range0 = _5937___mcc_h2099;
                          DAST._IType _5943_b0 = _5936___mcc_h2098;
                          {
                            Std.Wrappers._IOption<RAST._IType> _5944_nativeFromType;
                            _5944_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5943_b0, _5942_range0);
                            if ((_5944_nativeFromType).is_Some) {
                              RAST._IExpr _5945_recursiveGen;
                              DCOMP._IOwnership _5946_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5947_recIdents;
                              RAST._IExpr _out2358;
                              DCOMP._IOwnership _out2359;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2360;
                              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2358, out _out2359, out _out2360);
                              _5945_recursiveGen = _out2358;
                              _5946_recOwned = _out2359;
                              _5947_recIdents = _out2360;
                              RAST._IExpr _out2361;
                              DCOMP._IOwnership _out2362;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5945_recursiveGen, (_5923_nativeToType).dtor_value), _5946_recOwned, expectedOwnership, out _out2361, out _out2362);
                              r = _out2361;
                              resultingOwnership = _out2362;
                              readIdents = _5947_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source223.is_Nullable) {
                        DAST._IType _5948___mcc_h2106 = _source223.dtor_Nullable_a0;
                      } else if (_source223.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _5949___mcc_h2108 = _source223.dtor_Tuple_a0;
                      } else if (_source223.is_Array) {
                        DAST._IType _5950___mcc_h2110 = _source223.dtor_element;
                        BigInteger _5951___mcc_h2111 = _source223.dtor_dims;
                      } else if (_source223.is_Seq) {
                        DAST._IType _5952___mcc_h2114 = _source223.dtor_element;
                      } else if (_source223.is_Set) {
                        DAST._IType _5953___mcc_h2116 = _source223.dtor_element;
                      } else if (_source223.is_Multiset) {
                        DAST._IType _5954___mcc_h2118 = _source223.dtor_element;
                      } else if (_source223.is_Map) {
                        DAST._IType _5955___mcc_h2120 = _source223.dtor_key;
                        DAST._IType _5956___mcc_h2121 = _source223.dtor_value;
                      } else if (_source223.is_SetBuilder) {
                        DAST._IType _5957___mcc_h2124 = _source223.dtor_element;
                      } else if (_source223.is_MapBuilder) {
                        DAST._IType _5958___mcc_h2126 = _source223.dtor_key;
                        DAST._IType _5959___mcc_h2127 = _source223.dtor_value;
                      } else if (_source223.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _5960___mcc_h2130 = _source223.dtor_args;
                        DAST._IType _5961___mcc_h2131 = _source223.dtor_result;
                      } else if (_source223.is_Primitive) {
                        DAST._IPrimitive _5962___mcc_h2134 = _source223.dtor_Primitive_a0;
                      } else if (_source223.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _5963___mcc_h2136 = _source223.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _5964___mcc_h2138 = _source223.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _5965_recursiveGen;
                        DCOMP._IOwnership _5966_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5967_recIdents;
                        RAST._IExpr _out2363;
                        DCOMP._IOwnership _out2364;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2365;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2363, out _out2364, out _out2365);
                        _5965_recursiveGen = _out2363;
                        _5966_recOwned = _out2364;
                        _5967_recIdents = _out2365;
                        RAST._IExpr _out2366;
                        DCOMP._IOwnership _out2367;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5965_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5923_nativeToType).dtor_value), _5966_recOwned, expectedOwnership, out _out2366, out _out2367);
                        r = _out2366;
                        resultingOwnership = _out2367;
                        readIdents = _5967_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2368;
                    DCOMP._IOwnership _out2369;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2370;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _5922_b), _5922_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out2368, out _out2369, out _out2370);
                    r = _out2368;
                    resultingOwnership = _out2369;
                    readIdents = _out2370;
                  }
                }
              }
            } else if (_source220.is_Nullable) {
              DAST._IType _5968___mcc_h1042 = _source220.dtor_Nullable_a0;
              {
                RAST._IExpr _5969_recursiveGen;
                DCOMP._IOwnership _5970_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5971_recIdents;
                RAST._IExpr _out2371;
                DCOMP._IOwnership _out2372;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2373;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2371, out _out2372, out _out2373);
                _5969_recursiveGen = _out2371;
                _5970_recOwned = _out2372;
                _5971_recIdents = _out2373;
                r = _5969_recursiveGen;
                if (object.Equals(_5970_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2374;
                DCOMP._IOwnership _out2375;
                DCOMP.COMP.FromOwnership(r, _5970_recOwned, expectedOwnership, out _out2374, out _out2375);
                r = _out2374;
                resultingOwnership = _out2375;
                readIdents = _5971_recIdents;
              }
            } else if (_source220.is_Tuple) {
              Dafny.ISequence<DAST._IType> _5972___mcc_h1044 = _source220.dtor_Tuple_a0;
              {
                RAST._IType _5973_fromTpeGen;
                RAST._IType _out2376;
                _out2376 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5973_fromTpeGen = _out2376;
                RAST._IType _5974_toTpeGen;
                RAST._IType _out2377;
                _out2377 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5974_toTpeGen = _out2377;
                RAST._IExpr _5975_recursiveGen;
                DCOMP._IOwnership _5976_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5977_recIdents;
                RAST._IExpr _out2378;
                DCOMP._IOwnership _out2379;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2380;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2378, out _out2379, out _out2380);
                _5975_recursiveGen = _out2378;
                _5976_recOwned = _out2379;
                _5977_recIdents = _out2380;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5975_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5973_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5974_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2381;
                DCOMP._IOwnership _out2382;
                DCOMP.COMP.FromOwnership(r, _5976_recOwned, expectedOwnership, out _out2381, out _out2382);
                r = _out2381;
                resultingOwnership = _out2382;
                readIdents = _5977_recIdents;
              }
            } else if (_source220.is_Array) {
              DAST._IType _5978___mcc_h1046 = _source220.dtor_element;
              BigInteger _5979___mcc_h1047 = _source220.dtor_dims;
              {
                RAST._IType _5980_fromTpeGen;
                RAST._IType _out2383;
                _out2383 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5980_fromTpeGen = _out2383;
                RAST._IType _5981_toTpeGen;
                RAST._IType _out2384;
                _out2384 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5981_toTpeGen = _out2384;
                RAST._IExpr _5982_recursiveGen;
                DCOMP._IOwnership _5983_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5984_recIdents;
                RAST._IExpr _out2385;
                DCOMP._IOwnership _out2386;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2387;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2385, out _out2386, out _out2387);
                _5982_recursiveGen = _out2385;
                _5983_recOwned = _out2386;
                _5984_recIdents = _out2387;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5982_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5980_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5981_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2388;
                DCOMP._IOwnership _out2389;
                DCOMP.COMP.FromOwnership(r, _5983_recOwned, expectedOwnership, out _out2388, out _out2389);
                r = _out2388;
                resultingOwnership = _out2389;
                readIdents = _5984_recIdents;
              }
            } else if (_source220.is_Seq) {
              DAST._IType _5985___mcc_h1050 = _source220.dtor_element;
              {
                RAST._IType _5986_fromTpeGen;
                RAST._IType _out2390;
                _out2390 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5986_fromTpeGen = _out2390;
                RAST._IType _5987_toTpeGen;
                RAST._IType _out2391;
                _out2391 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5987_toTpeGen = _out2391;
                RAST._IExpr _5988_recursiveGen;
                DCOMP._IOwnership _5989_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5990_recIdents;
                RAST._IExpr _out2392;
                DCOMP._IOwnership _out2393;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2394;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2392, out _out2393, out _out2394);
                _5988_recursiveGen = _out2392;
                _5989_recOwned = _out2393;
                _5990_recIdents = _out2394;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5988_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5986_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5987_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2395;
                DCOMP._IOwnership _out2396;
                DCOMP.COMP.FromOwnership(r, _5989_recOwned, expectedOwnership, out _out2395, out _out2396);
                r = _out2395;
                resultingOwnership = _out2396;
                readIdents = _5990_recIdents;
              }
            } else if (_source220.is_Set) {
              DAST._IType _5991___mcc_h1052 = _source220.dtor_element;
              {
                RAST._IType _5992_fromTpeGen;
                RAST._IType _out2397;
                _out2397 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5992_fromTpeGen = _out2397;
                RAST._IType _5993_toTpeGen;
                RAST._IType _out2398;
                _out2398 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5993_toTpeGen = _out2398;
                RAST._IExpr _5994_recursiveGen;
                DCOMP._IOwnership _5995_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5996_recIdents;
                RAST._IExpr _out2399;
                DCOMP._IOwnership _out2400;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2401;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2399, out _out2400, out _out2401);
                _5994_recursiveGen = _out2399;
                _5995_recOwned = _out2400;
                _5996_recIdents = _out2401;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5994_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5992_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5993_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2402;
                DCOMP._IOwnership _out2403;
                DCOMP.COMP.FromOwnership(r, _5995_recOwned, expectedOwnership, out _out2402, out _out2403);
                r = _out2402;
                resultingOwnership = _out2403;
                readIdents = _5996_recIdents;
              }
            } else if (_source220.is_Multiset) {
              DAST._IType _5997___mcc_h1054 = _source220.dtor_element;
              {
                RAST._IType _5998_fromTpeGen;
                RAST._IType _out2404;
                _out2404 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _5998_fromTpeGen = _out2404;
                RAST._IType _5999_toTpeGen;
                RAST._IType _out2405;
                _out2405 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _5999_toTpeGen = _out2405;
                RAST._IExpr _6000_recursiveGen;
                DCOMP._IOwnership _6001_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6002_recIdents;
                RAST._IExpr _out2406;
                DCOMP._IOwnership _out2407;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2408;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2406, out _out2407, out _out2408);
                _6000_recursiveGen = _out2406;
                _6001_recOwned = _out2407;
                _6002_recIdents = _out2408;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6000_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5998_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5999_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2409;
                DCOMP._IOwnership _out2410;
                DCOMP.COMP.FromOwnership(r, _6001_recOwned, expectedOwnership, out _out2409, out _out2410);
                r = _out2409;
                resultingOwnership = _out2410;
                readIdents = _6002_recIdents;
              }
            } else if (_source220.is_Map) {
              DAST._IType _6003___mcc_h1056 = _source220.dtor_key;
              DAST._IType _6004___mcc_h1057 = _source220.dtor_value;
              {
                RAST._IType _6005_fromTpeGen;
                RAST._IType _out2411;
                _out2411 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6005_fromTpeGen = _out2411;
                RAST._IType _6006_toTpeGen;
                RAST._IType _out2412;
                _out2412 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6006_toTpeGen = _out2412;
                RAST._IExpr _6007_recursiveGen;
                DCOMP._IOwnership _6008_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6009_recIdents;
                RAST._IExpr _out2413;
                DCOMP._IOwnership _out2414;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2415;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2413, out _out2414, out _out2415);
                _6007_recursiveGen = _out2413;
                _6008_recOwned = _out2414;
                _6009_recIdents = _out2415;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6007_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6005_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6006_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2416;
                DCOMP._IOwnership _out2417;
                DCOMP.COMP.FromOwnership(r, _6008_recOwned, expectedOwnership, out _out2416, out _out2417);
                r = _out2416;
                resultingOwnership = _out2417;
                readIdents = _6009_recIdents;
              }
            } else if (_source220.is_SetBuilder) {
              DAST._IType _6010___mcc_h1060 = _source220.dtor_element;
              {
                RAST._IType _6011_fromTpeGen;
                RAST._IType _out2418;
                _out2418 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6011_fromTpeGen = _out2418;
                RAST._IType _6012_toTpeGen;
                RAST._IType _out2419;
                _out2419 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6012_toTpeGen = _out2419;
                RAST._IExpr _6013_recursiveGen;
                DCOMP._IOwnership _6014_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6015_recIdents;
                RAST._IExpr _out2420;
                DCOMP._IOwnership _out2421;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2422;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2420, out _out2421, out _out2422);
                _6013_recursiveGen = _out2420;
                _6014_recOwned = _out2421;
                _6015_recIdents = _out2422;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6013_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6011_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6012_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2423;
                DCOMP._IOwnership _out2424;
                DCOMP.COMP.FromOwnership(r, _6014_recOwned, expectedOwnership, out _out2423, out _out2424);
                r = _out2423;
                resultingOwnership = _out2424;
                readIdents = _6015_recIdents;
              }
            } else if (_source220.is_MapBuilder) {
              DAST._IType _6016___mcc_h1062 = _source220.dtor_key;
              DAST._IType _6017___mcc_h1063 = _source220.dtor_value;
              {
                RAST._IType _6018_fromTpeGen;
                RAST._IType _out2425;
                _out2425 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6018_fromTpeGen = _out2425;
                RAST._IType _6019_toTpeGen;
                RAST._IType _out2426;
                _out2426 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6019_toTpeGen = _out2426;
                RAST._IExpr _6020_recursiveGen;
                DCOMP._IOwnership _6021_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6022_recIdents;
                RAST._IExpr _out2427;
                DCOMP._IOwnership _out2428;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2429;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2427, out _out2428, out _out2429);
                _6020_recursiveGen = _out2427;
                _6021_recOwned = _out2428;
                _6022_recIdents = _out2429;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6020_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6018_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6019_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2430;
                DCOMP._IOwnership _out2431;
                DCOMP.COMP.FromOwnership(r, _6021_recOwned, expectedOwnership, out _out2430, out _out2431);
                r = _out2430;
                resultingOwnership = _out2431;
                readIdents = _6022_recIdents;
              }
            } else if (_source220.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6023___mcc_h1066 = _source220.dtor_args;
              DAST._IType _6024___mcc_h1067 = _source220.dtor_result;
              {
                RAST._IType _6025_fromTpeGen;
                RAST._IType _out2432;
                _out2432 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6025_fromTpeGen = _out2432;
                RAST._IType _6026_toTpeGen;
                RAST._IType _out2433;
                _out2433 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6026_toTpeGen = _out2433;
                RAST._IExpr _6027_recursiveGen;
                DCOMP._IOwnership _6028_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6029_recIdents;
                RAST._IExpr _out2434;
                DCOMP._IOwnership _out2435;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2436;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2434, out _out2435, out _out2436);
                _6027_recursiveGen = _out2434;
                _6028_recOwned = _out2435;
                _6029_recIdents = _out2436;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6027_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6025_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6026_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2437;
                DCOMP._IOwnership _out2438;
                DCOMP.COMP.FromOwnership(r, _6028_recOwned, expectedOwnership, out _out2437, out _out2438);
                r = _out2437;
                resultingOwnership = _out2438;
                readIdents = _6029_recIdents;
              }
            } else if (_source220.is_Primitive) {
              DAST._IPrimitive _6030___mcc_h1070 = _source220.dtor_Primitive_a0;
              {
                RAST._IType _6031_fromTpeGen;
                RAST._IType _out2439;
                _out2439 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6031_fromTpeGen = _out2439;
                RAST._IType _6032_toTpeGen;
                RAST._IType _out2440;
                _out2440 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6032_toTpeGen = _out2440;
                RAST._IExpr _6033_recursiveGen;
                DCOMP._IOwnership _6034_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6035_recIdents;
                RAST._IExpr _out2441;
                DCOMP._IOwnership _out2442;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2443;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2441, out _out2442, out _out2443);
                _6033_recursiveGen = _out2441;
                _6034_recOwned = _out2442;
                _6035_recIdents = _out2443;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6033_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6031_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6032_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2444;
                DCOMP._IOwnership _out2445;
                DCOMP.COMP.FromOwnership(r, _6034_recOwned, expectedOwnership, out _out2444, out _out2445);
                r = _out2444;
                resultingOwnership = _out2445;
                readIdents = _6035_recIdents;
              }
            } else if (_source220.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6036___mcc_h1072 = _source220.dtor_Passthrough_a0;
              {
                RAST._IType _6037_fromTpeGen;
                RAST._IType _out2446;
                _out2446 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6037_fromTpeGen = _out2446;
                RAST._IType _6038_toTpeGen;
                RAST._IType _out2447;
                _out2447 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6038_toTpeGen = _out2447;
                RAST._IExpr _6039_recursiveGen;
                DCOMP._IOwnership _6040_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6041_recIdents;
                RAST._IExpr _out2448;
                DCOMP._IOwnership _out2449;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2450;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2448, out _out2449, out _out2450);
                _6039_recursiveGen = _out2448;
                _6040_recOwned = _out2449;
                _6041_recIdents = _out2450;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6039_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6037_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6038_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2451;
                DCOMP._IOwnership _out2452;
                DCOMP.COMP.FromOwnership(r, _6040_recOwned, expectedOwnership, out _out2451, out _out2452);
                r = _out2451;
                resultingOwnership = _out2452;
                readIdents = _6041_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6042___mcc_h1074 = _source220.dtor_TypeArg_a0;
              {
                RAST._IType _6043_fromTpeGen;
                RAST._IType _out2453;
                _out2453 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6043_fromTpeGen = _out2453;
                RAST._IType _6044_toTpeGen;
                RAST._IType _out2454;
                _out2454 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6044_toTpeGen = _out2454;
                RAST._IExpr _6045_recursiveGen;
                DCOMP._IOwnership _6046_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6047_recIdents;
                RAST._IExpr _out2455;
                DCOMP._IOwnership _out2456;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2457;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2455, out _out2456, out _out2457);
                _6045_recursiveGen = _out2455;
                _6046_recOwned = _out2456;
                _6047_recIdents = _out2457;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6045_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6043_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6044_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2458;
                DCOMP._IOwnership _out2459;
                DCOMP.COMP.FromOwnership(r, _6046_recOwned, expectedOwnership, out _out2458, out _out2459);
                r = _out2458;
                resultingOwnership = _out2459;
                readIdents = _6047_recIdents;
              }
            }
          } else {
            DAST._IType _source225 = _3403___mcc_h1;
            if (_source225.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6048___mcc_h1076 = _source225.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6049___mcc_h1077 = _source225.dtor_typeArgs;
              DAST._IResolvedType _6050___mcc_h1078 = _source225.dtor_resolved;
              DAST._IResolvedType _source226 = _6050___mcc_h1078;
              if (_source226.is_Datatype) {
                DAST._IDatatypeType _6051___mcc_h1082 = _source226.dtor_datatypeType;
                {
                  RAST._IType _6052_fromTpeGen;
                  RAST._IType _out2460;
                  _out2460 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _6052_fromTpeGen = _out2460;
                  RAST._IType _6053_toTpeGen;
                  RAST._IType _out2461;
                  _out2461 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _6053_toTpeGen = _out2461;
                  RAST._IExpr _6054_recursiveGen;
                  DCOMP._IOwnership _6055_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6056_recIdents;
                  RAST._IExpr _out2462;
                  DCOMP._IOwnership _out2463;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2464;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2462, out _out2463, out _out2464);
                  _6054_recursiveGen = _out2462;
                  _6055_recOwned = _out2463;
                  _6056_recIdents = _out2464;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6054_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6052_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6053_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2465;
                  DCOMP._IOwnership _out2466;
                  DCOMP.COMP.FromOwnership(r, _6055_recOwned, expectedOwnership, out _out2465, out _out2466);
                  r = _out2465;
                  resultingOwnership = _out2466;
                  readIdents = _6056_recIdents;
                }
              } else if (_source226.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6057___mcc_h1084 = _source226.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6058___mcc_h1085 = _source226.dtor_attributes;
                {
                  RAST._IType _6059_fromTpeGen;
                  RAST._IType _out2467;
                  _out2467 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _6059_fromTpeGen = _out2467;
                  RAST._IType _6060_toTpeGen;
                  RAST._IType _out2468;
                  _out2468 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _6060_toTpeGen = _out2468;
                  RAST._IExpr _6061_recursiveGen;
                  DCOMP._IOwnership _6062_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6063_recIdents;
                  RAST._IExpr _out2469;
                  DCOMP._IOwnership _out2470;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2471;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2469, out _out2470, out _out2471);
                  _6061_recursiveGen = _out2469;
                  _6062_recOwned = _out2470;
                  _6063_recIdents = _out2471;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6061_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6059_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6060_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2472;
                  DCOMP._IOwnership _out2473;
                  DCOMP.COMP.FromOwnership(r, _6062_recOwned, expectedOwnership, out _out2472, out _out2473);
                  r = _out2472;
                  resultingOwnership = _out2473;
                  readIdents = _6063_recIdents;
                }
              } else {
                DAST._IType _6064___mcc_h1088 = _source226.dtor_baseType;
                DAST._INewtypeRange _6065___mcc_h1089 = _source226.dtor_range;
                bool _6066___mcc_h1090 = _source226.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6067___mcc_h1091 = _source226.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6068_attributes = _6067___mcc_h1091;
                bool _6069_erase = _6066___mcc_h1090;
                DAST._INewtypeRange _6070_range = _6065___mcc_h1089;
                DAST._IType _6071_b = _6064___mcc_h1088;
                {
                  Std.Wrappers._IOption<RAST._IType> _6072_nativeToType;
                  _6072_nativeToType = DCOMP.COMP.NewtypeToRustType(_6071_b, _6070_range);
                  if (object.Equals(_3397_fromTpe, _6071_b)) {
                    RAST._IExpr _6073_recursiveGen;
                    DCOMP._IOwnership _6074_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6075_recIdents;
                    RAST._IExpr _out2474;
                    DCOMP._IOwnership _out2475;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2476;
                    DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2474, out _out2475, out _out2476);
                    _6073_recursiveGen = _out2474;
                    _6074_recOwned = _out2475;
                    _6075_recIdents = _out2476;
                    readIdents = _6075_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source227 = _6072_nativeToType;
                    if (_source227.is_None) {
                      if (_6069_erase) {
                        r = _6073_recursiveGen;
                      } else {
                        RAST._IType _6076_rhsType;
                        RAST._IType _out2477;
                        _out2477 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                        _6076_rhsType = _out2477;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6076_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6073_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2478;
                      DCOMP._IOwnership _out2479;
                      DCOMP.COMP.FromOwnership(r, _6074_recOwned, expectedOwnership, out _out2478, out _out2479);
                      r = _out2478;
                      resultingOwnership = _out2479;
                    } else {
                      RAST._IType _6077___mcc_h2140 = _source227.dtor_value;
                      RAST._IType _6078_v = _6077___mcc_h2140;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6073_recursiveGen, RAST.Expr.create_ExprFromType(_6078_v)));
                      RAST._IExpr _out2480;
                      DCOMP._IOwnership _out2481;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2480, out _out2481);
                      r = _out2480;
                      resultingOwnership = _out2481;
                    }
                  } else {
                    if ((_6072_nativeToType).is_Some) {
                      DAST._IType _source228 = _3397_fromTpe;
                      if (_source228.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6079___mcc_h2141 = _source228.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6080___mcc_h2142 = _source228.dtor_typeArgs;
                        DAST._IResolvedType _6081___mcc_h2143 = _source228.dtor_resolved;
                        DAST._IResolvedType _source229 = _6081___mcc_h2143;
                        if (_source229.is_Datatype) {
                          DAST._IDatatypeType _6082___mcc_h2147 = _source229.dtor_datatypeType;
                        } else if (_source229.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6083___mcc_h2149 = _source229.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6084___mcc_h2150 = _source229.dtor_attributes;
                        } else {
                          DAST._IType _6085___mcc_h2153 = _source229.dtor_baseType;
                          DAST._INewtypeRange _6086___mcc_h2154 = _source229.dtor_range;
                          bool _6087___mcc_h2155 = _source229.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6088___mcc_h2156 = _source229.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6089_attributes0 = _6088___mcc_h2156;
                          bool _6090_erase0 = _6087___mcc_h2155;
                          DAST._INewtypeRange _6091_range0 = _6086___mcc_h2154;
                          DAST._IType _6092_b0 = _6085___mcc_h2153;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6093_nativeFromType;
                            _6093_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6092_b0, _6091_range0);
                            if ((_6093_nativeFromType).is_Some) {
                              RAST._IExpr _6094_recursiveGen;
                              DCOMP._IOwnership _6095_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6096_recIdents;
                              RAST._IExpr _out2482;
                              DCOMP._IOwnership _out2483;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2484;
                              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2482, out _out2483, out _out2484);
                              _6094_recursiveGen = _out2482;
                              _6095_recOwned = _out2483;
                              _6096_recIdents = _out2484;
                              RAST._IExpr _out2485;
                              DCOMP._IOwnership _out2486;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6094_recursiveGen, (_6072_nativeToType).dtor_value), _6095_recOwned, expectedOwnership, out _out2485, out _out2486);
                              r = _out2485;
                              resultingOwnership = _out2486;
                              readIdents = _6096_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source228.is_Nullable) {
                        DAST._IType _6097___mcc_h2161 = _source228.dtor_Nullable_a0;
                      } else if (_source228.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6098___mcc_h2163 = _source228.dtor_Tuple_a0;
                      } else if (_source228.is_Array) {
                        DAST._IType _6099___mcc_h2165 = _source228.dtor_element;
                        BigInteger _6100___mcc_h2166 = _source228.dtor_dims;
                      } else if (_source228.is_Seq) {
                        DAST._IType _6101___mcc_h2169 = _source228.dtor_element;
                      } else if (_source228.is_Set) {
                        DAST._IType _6102___mcc_h2171 = _source228.dtor_element;
                      } else if (_source228.is_Multiset) {
                        DAST._IType _6103___mcc_h2173 = _source228.dtor_element;
                      } else if (_source228.is_Map) {
                        DAST._IType _6104___mcc_h2175 = _source228.dtor_key;
                        DAST._IType _6105___mcc_h2176 = _source228.dtor_value;
                      } else if (_source228.is_SetBuilder) {
                        DAST._IType _6106___mcc_h2179 = _source228.dtor_element;
                      } else if (_source228.is_MapBuilder) {
                        DAST._IType _6107___mcc_h2181 = _source228.dtor_key;
                        DAST._IType _6108___mcc_h2182 = _source228.dtor_value;
                      } else if (_source228.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6109___mcc_h2185 = _source228.dtor_args;
                        DAST._IType _6110___mcc_h2186 = _source228.dtor_result;
                      } else if (_source228.is_Primitive) {
                        DAST._IPrimitive _6111___mcc_h2189 = _source228.dtor_Primitive_a0;
                      } else if (_source228.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6112___mcc_h2191 = _source228.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6113___mcc_h2193 = _source228.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6114_recursiveGen;
                        DCOMP._IOwnership _6115_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6116_recIdents;
                        RAST._IExpr _out2487;
                        DCOMP._IOwnership _out2488;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2489;
                        DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2487, out _out2488, out _out2489);
                        _6114_recursiveGen = _out2487;
                        _6115_recOwned = _out2488;
                        _6116_recIdents = _out2489;
                        RAST._IExpr _out2490;
                        DCOMP._IOwnership _out2491;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6114_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6072_nativeToType).dtor_value), _6115_recOwned, expectedOwnership, out _out2490, out _out2491);
                        r = _out2490;
                        resultingOwnership = _out2491;
                        readIdents = _6116_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2492;
                    DCOMP._IOwnership _out2493;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2494;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _6071_b), _6071_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out2492, out _out2493, out _out2494);
                    r = _out2492;
                    resultingOwnership = _out2493;
                    readIdents = _out2494;
                  }
                }
              }
            } else if (_source225.is_Nullable) {
              DAST._IType _6117___mcc_h1096 = _source225.dtor_Nullable_a0;
              {
                RAST._IExpr _6118_recursiveGen;
                DCOMP._IOwnership _6119_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6120_recIdents;
                RAST._IExpr _out2495;
                DCOMP._IOwnership _out2496;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2497;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2495, out _out2496, out _out2497);
                _6118_recursiveGen = _out2495;
                _6119_recOwned = _out2496;
                _6120_recIdents = _out2497;
                r = _6118_recursiveGen;
                if (object.Equals(_6119_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2498;
                DCOMP._IOwnership _out2499;
                DCOMP.COMP.FromOwnership(r, _6119_recOwned, expectedOwnership, out _out2498, out _out2499);
                r = _out2498;
                resultingOwnership = _out2499;
                readIdents = _6120_recIdents;
              }
            } else if (_source225.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6121___mcc_h1098 = _source225.dtor_Tuple_a0;
              {
                RAST._IType _6122_fromTpeGen;
                RAST._IType _out2500;
                _out2500 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6122_fromTpeGen = _out2500;
                RAST._IType _6123_toTpeGen;
                RAST._IType _out2501;
                _out2501 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6123_toTpeGen = _out2501;
                RAST._IExpr _6124_recursiveGen;
                DCOMP._IOwnership _6125_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6126_recIdents;
                RAST._IExpr _out2502;
                DCOMP._IOwnership _out2503;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2504;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2502, out _out2503, out _out2504);
                _6124_recursiveGen = _out2502;
                _6125_recOwned = _out2503;
                _6126_recIdents = _out2504;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6124_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6122_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6123_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2505;
                DCOMP._IOwnership _out2506;
                DCOMP.COMP.FromOwnership(r, _6125_recOwned, expectedOwnership, out _out2505, out _out2506);
                r = _out2505;
                resultingOwnership = _out2506;
                readIdents = _6126_recIdents;
              }
            } else if (_source225.is_Array) {
              DAST._IType _6127___mcc_h1100 = _source225.dtor_element;
              BigInteger _6128___mcc_h1101 = _source225.dtor_dims;
              {
                RAST._IType _6129_fromTpeGen;
                RAST._IType _out2507;
                _out2507 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6129_fromTpeGen = _out2507;
                RAST._IType _6130_toTpeGen;
                RAST._IType _out2508;
                _out2508 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6130_toTpeGen = _out2508;
                RAST._IExpr _6131_recursiveGen;
                DCOMP._IOwnership _6132_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6133_recIdents;
                RAST._IExpr _out2509;
                DCOMP._IOwnership _out2510;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2511;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2509, out _out2510, out _out2511);
                _6131_recursiveGen = _out2509;
                _6132_recOwned = _out2510;
                _6133_recIdents = _out2511;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6131_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6129_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6130_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2512;
                DCOMP._IOwnership _out2513;
                DCOMP.COMP.FromOwnership(r, _6132_recOwned, expectedOwnership, out _out2512, out _out2513);
                r = _out2512;
                resultingOwnership = _out2513;
                readIdents = _6133_recIdents;
              }
            } else if (_source225.is_Seq) {
              DAST._IType _6134___mcc_h1104 = _source225.dtor_element;
              {
                RAST._IType _6135_fromTpeGen;
                RAST._IType _out2514;
                _out2514 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6135_fromTpeGen = _out2514;
                RAST._IType _6136_toTpeGen;
                RAST._IType _out2515;
                _out2515 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6136_toTpeGen = _out2515;
                RAST._IExpr _6137_recursiveGen;
                DCOMP._IOwnership _6138_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6139_recIdents;
                RAST._IExpr _out2516;
                DCOMP._IOwnership _out2517;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2518;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2516, out _out2517, out _out2518);
                _6137_recursiveGen = _out2516;
                _6138_recOwned = _out2517;
                _6139_recIdents = _out2518;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6137_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6135_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6136_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2519;
                DCOMP._IOwnership _out2520;
                DCOMP.COMP.FromOwnership(r, _6138_recOwned, expectedOwnership, out _out2519, out _out2520);
                r = _out2519;
                resultingOwnership = _out2520;
                readIdents = _6139_recIdents;
              }
            } else if (_source225.is_Set) {
              DAST._IType _6140___mcc_h1106 = _source225.dtor_element;
              {
                RAST._IType _6141_fromTpeGen;
                RAST._IType _out2521;
                _out2521 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6141_fromTpeGen = _out2521;
                RAST._IType _6142_toTpeGen;
                RAST._IType _out2522;
                _out2522 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6142_toTpeGen = _out2522;
                RAST._IExpr _6143_recursiveGen;
                DCOMP._IOwnership _6144_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6145_recIdents;
                RAST._IExpr _out2523;
                DCOMP._IOwnership _out2524;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2525;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2523, out _out2524, out _out2525);
                _6143_recursiveGen = _out2523;
                _6144_recOwned = _out2524;
                _6145_recIdents = _out2525;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6143_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6141_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6142_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2526;
                DCOMP._IOwnership _out2527;
                DCOMP.COMP.FromOwnership(r, _6144_recOwned, expectedOwnership, out _out2526, out _out2527);
                r = _out2526;
                resultingOwnership = _out2527;
                readIdents = _6145_recIdents;
              }
            } else if (_source225.is_Multiset) {
              DAST._IType _6146___mcc_h1108 = _source225.dtor_element;
              {
                RAST._IType _6147_fromTpeGen;
                RAST._IType _out2528;
                _out2528 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6147_fromTpeGen = _out2528;
                RAST._IType _6148_toTpeGen;
                RAST._IType _out2529;
                _out2529 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6148_toTpeGen = _out2529;
                RAST._IExpr _6149_recursiveGen;
                DCOMP._IOwnership _6150_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6151_recIdents;
                RAST._IExpr _out2530;
                DCOMP._IOwnership _out2531;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2532;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2530, out _out2531, out _out2532);
                _6149_recursiveGen = _out2530;
                _6150_recOwned = _out2531;
                _6151_recIdents = _out2532;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6149_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6147_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6148_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2533;
                DCOMP._IOwnership _out2534;
                DCOMP.COMP.FromOwnership(r, _6150_recOwned, expectedOwnership, out _out2533, out _out2534);
                r = _out2533;
                resultingOwnership = _out2534;
                readIdents = _6151_recIdents;
              }
            } else if (_source225.is_Map) {
              DAST._IType _6152___mcc_h1110 = _source225.dtor_key;
              DAST._IType _6153___mcc_h1111 = _source225.dtor_value;
              {
                RAST._IType _6154_fromTpeGen;
                RAST._IType _out2535;
                _out2535 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6154_fromTpeGen = _out2535;
                RAST._IType _6155_toTpeGen;
                RAST._IType _out2536;
                _out2536 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6155_toTpeGen = _out2536;
                RAST._IExpr _6156_recursiveGen;
                DCOMP._IOwnership _6157_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6158_recIdents;
                RAST._IExpr _out2537;
                DCOMP._IOwnership _out2538;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2539;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2537, out _out2538, out _out2539);
                _6156_recursiveGen = _out2537;
                _6157_recOwned = _out2538;
                _6158_recIdents = _out2539;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6156_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6154_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6155_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2540;
                DCOMP._IOwnership _out2541;
                DCOMP.COMP.FromOwnership(r, _6157_recOwned, expectedOwnership, out _out2540, out _out2541);
                r = _out2540;
                resultingOwnership = _out2541;
                readIdents = _6158_recIdents;
              }
            } else if (_source225.is_SetBuilder) {
              DAST._IType _6159___mcc_h1114 = _source225.dtor_element;
              {
                RAST._IType _6160_fromTpeGen;
                RAST._IType _out2542;
                _out2542 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6160_fromTpeGen = _out2542;
                RAST._IType _6161_toTpeGen;
                RAST._IType _out2543;
                _out2543 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6161_toTpeGen = _out2543;
                RAST._IExpr _6162_recursiveGen;
                DCOMP._IOwnership _6163_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6164_recIdents;
                RAST._IExpr _out2544;
                DCOMP._IOwnership _out2545;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2546;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2544, out _out2545, out _out2546);
                _6162_recursiveGen = _out2544;
                _6163_recOwned = _out2545;
                _6164_recIdents = _out2546;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6162_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6160_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6161_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2547;
                DCOMP._IOwnership _out2548;
                DCOMP.COMP.FromOwnership(r, _6163_recOwned, expectedOwnership, out _out2547, out _out2548);
                r = _out2547;
                resultingOwnership = _out2548;
                readIdents = _6164_recIdents;
              }
            } else if (_source225.is_MapBuilder) {
              DAST._IType _6165___mcc_h1116 = _source225.dtor_key;
              DAST._IType _6166___mcc_h1117 = _source225.dtor_value;
              {
                RAST._IType _6167_fromTpeGen;
                RAST._IType _out2549;
                _out2549 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6167_fromTpeGen = _out2549;
                RAST._IType _6168_toTpeGen;
                RAST._IType _out2550;
                _out2550 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6168_toTpeGen = _out2550;
                RAST._IExpr _6169_recursiveGen;
                DCOMP._IOwnership _6170_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6171_recIdents;
                RAST._IExpr _out2551;
                DCOMP._IOwnership _out2552;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2553;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2551, out _out2552, out _out2553);
                _6169_recursiveGen = _out2551;
                _6170_recOwned = _out2552;
                _6171_recIdents = _out2553;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6169_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6167_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6168_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2554;
                DCOMP._IOwnership _out2555;
                DCOMP.COMP.FromOwnership(r, _6170_recOwned, expectedOwnership, out _out2554, out _out2555);
                r = _out2554;
                resultingOwnership = _out2555;
                readIdents = _6171_recIdents;
              }
            } else if (_source225.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6172___mcc_h1120 = _source225.dtor_args;
              DAST._IType _6173___mcc_h1121 = _source225.dtor_result;
              {
                RAST._IType _6174_fromTpeGen;
                RAST._IType _out2556;
                _out2556 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6174_fromTpeGen = _out2556;
                RAST._IType _6175_toTpeGen;
                RAST._IType _out2557;
                _out2557 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6175_toTpeGen = _out2557;
                RAST._IExpr _6176_recursiveGen;
                DCOMP._IOwnership _6177_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6178_recIdents;
                RAST._IExpr _out2558;
                DCOMP._IOwnership _out2559;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2560;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2558, out _out2559, out _out2560);
                _6176_recursiveGen = _out2558;
                _6177_recOwned = _out2559;
                _6178_recIdents = _out2560;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6176_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6174_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6175_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2561;
                DCOMP._IOwnership _out2562;
                DCOMP.COMP.FromOwnership(r, _6177_recOwned, expectedOwnership, out _out2561, out _out2562);
                r = _out2561;
                resultingOwnership = _out2562;
                readIdents = _6178_recIdents;
              }
            } else if (_source225.is_Primitive) {
              DAST._IPrimitive _6179___mcc_h1124 = _source225.dtor_Primitive_a0;
              DAST._IPrimitive _source230 = _6179___mcc_h1124;
              if (_source230.is_Int) {
                {
                  RAST._IType _6180_rhsType;
                  RAST._IType _out2563;
                  _out2563 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _6180_rhsType = _out2563;
                  RAST._IExpr _6181_recursiveGen;
                  DCOMP._IOwnership _6182___v98;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6183_recIdents;
                  RAST._IExpr _out2564;
                  DCOMP._IOwnership _out2565;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2566;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2564, out _out2565, out _out2566);
                  _6181_recursiveGen = _out2564;
                  _6182___v98 = _out2565;
                  _6183_recIdents = _out2566;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_6181_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as u32)}")));
                  RAST._IExpr _out2567;
                  DCOMP._IOwnership _out2568;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2567, out _out2568);
                  r = _out2567;
                  resultingOwnership = _out2568;
                  readIdents = _6183_recIdents;
                }
              } else if (_source230.is_Real) {
                {
                  RAST._IType _6184_fromTpeGen;
                  RAST._IType _out2569;
                  _out2569 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _6184_fromTpeGen = _out2569;
                  RAST._IType _6185_toTpeGen;
                  RAST._IType _out2570;
                  _out2570 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _6185_toTpeGen = _out2570;
                  RAST._IExpr _6186_recursiveGen;
                  DCOMP._IOwnership _6187_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6188_recIdents;
                  RAST._IExpr _out2571;
                  DCOMP._IOwnership _out2572;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2573;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2571, out _out2572, out _out2573);
                  _6186_recursiveGen = _out2571;
                  _6187_recOwned = _out2572;
                  _6188_recIdents = _out2573;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6186_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6184_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6185_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2574;
                  DCOMP._IOwnership _out2575;
                  DCOMP.COMP.FromOwnership(r, _6187_recOwned, expectedOwnership, out _out2574, out _out2575);
                  r = _out2574;
                  resultingOwnership = _out2575;
                  readIdents = _6188_recIdents;
                }
              } else if (_source230.is_String) {
                {
                  RAST._IType _6189_fromTpeGen;
                  RAST._IType _out2576;
                  _out2576 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _6189_fromTpeGen = _out2576;
                  RAST._IType _6190_toTpeGen;
                  RAST._IType _out2577;
                  _out2577 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _6190_toTpeGen = _out2577;
                  RAST._IExpr _6191_recursiveGen;
                  DCOMP._IOwnership _6192_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6193_recIdents;
                  RAST._IExpr _out2578;
                  DCOMP._IOwnership _out2579;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2580;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2578, out _out2579, out _out2580);
                  _6191_recursiveGen = _out2578;
                  _6192_recOwned = _out2579;
                  _6193_recIdents = _out2580;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6191_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6189_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6190_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2581;
                  DCOMP._IOwnership _out2582;
                  DCOMP.COMP.FromOwnership(r, _6192_recOwned, expectedOwnership, out _out2581, out _out2582);
                  r = _out2581;
                  resultingOwnership = _out2582;
                  readIdents = _6193_recIdents;
                }
              } else if (_source230.is_Bool) {
                {
                  RAST._IType _6194_fromTpeGen;
                  RAST._IType _out2583;
                  _out2583 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _6194_fromTpeGen = _out2583;
                  RAST._IType _6195_toTpeGen;
                  RAST._IType _out2584;
                  _out2584 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _6195_toTpeGen = _out2584;
                  RAST._IExpr _6196_recursiveGen;
                  DCOMP._IOwnership _6197_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6198_recIdents;
                  RAST._IExpr _out2585;
                  DCOMP._IOwnership _out2586;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2587;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2585, out _out2586, out _out2587);
                  _6196_recursiveGen = _out2585;
                  _6197_recOwned = _out2586;
                  _6198_recIdents = _out2587;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6196_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6194_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6195_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2588;
                  DCOMP._IOwnership _out2589;
                  DCOMP.COMP.FromOwnership(r, _6197_recOwned, expectedOwnership, out _out2588, out _out2589);
                  r = _out2588;
                  resultingOwnership = _out2589;
                  readIdents = _6198_recIdents;
                }
              } else {
                {
                  RAST._IType _6199_fromTpeGen;
                  RAST._IType _out2590;
                  _out2590 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                  _6199_fromTpeGen = _out2590;
                  RAST._IType _6200_toTpeGen;
                  RAST._IType _out2591;
                  _out2591 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                  _6200_toTpeGen = _out2591;
                  RAST._IExpr _6201_recursiveGen;
                  DCOMP._IOwnership _6202_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6203_recIdents;
                  RAST._IExpr _out2592;
                  DCOMP._IOwnership _out2593;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2594;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2592, out _out2593, out _out2594);
                  _6201_recursiveGen = _out2592;
                  _6202_recOwned = _out2593;
                  _6203_recIdents = _out2594;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6201_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6199_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6200_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2595;
                  DCOMP._IOwnership _out2596;
                  DCOMP.COMP.FromOwnership(r, _6202_recOwned, expectedOwnership, out _out2595, out _out2596);
                  r = _out2595;
                  resultingOwnership = _out2596;
                  readIdents = _6203_recIdents;
                }
              }
            } else if (_source225.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6204___mcc_h1126 = _source225.dtor_Passthrough_a0;
              {
                RAST._IType _6205_fromTpeGen;
                RAST._IType _out2597;
                _out2597 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6205_fromTpeGen = _out2597;
                RAST._IType _6206_toTpeGen;
                RAST._IType _out2598;
                _out2598 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6206_toTpeGen = _out2598;
                RAST._IExpr _6207_recursiveGen;
                DCOMP._IOwnership _6208_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6209_recIdents;
                RAST._IExpr _out2599;
                DCOMP._IOwnership _out2600;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2601;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2599, out _out2600, out _out2601);
                _6207_recursiveGen = _out2599;
                _6208_recOwned = _out2600;
                _6209_recIdents = _out2601;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6207_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6205_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6206_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2602;
                DCOMP._IOwnership _out2603;
                DCOMP.COMP.FromOwnership(r, _6208_recOwned, expectedOwnership, out _out2602, out _out2603);
                r = _out2602;
                resultingOwnership = _out2603;
                readIdents = _6209_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6210___mcc_h1128 = _source225.dtor_TypeArg_a0;
              {
                RAST._IType _6211_fromTpeGen;
                RAST._IType _out2604;
                _out2604 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6211_fromTpeGen = _out2604;
                RAST._IType _6212_toTpeGen;
                RAST._IType _out2605;
                _out2605 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6212_toTpeGen = _out2605;
                RAST._IExpr _6213_recursiveGen;
                DCOMP._IOwnership _6214_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6215_recIdents;
                RAST._IExpr _out2606;
                DCOMP._IOwnership _out2607;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2608;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2606, out _out2607, out _out2608);
                _6213_recursiveGen = _out2606;
                _6214_recOwned = _out2607;
                _6215_recIdents = _out2608;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6213_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6211_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6212_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2609;
                DCOMP._IOwnership _out2610;
                DCOMP.COMP.FromOwnership(r, _6214_recOwned, expectedOwnership, out _out2609, out _out2610);
                r = _out2609;
                resultingOwnership = _out2610;
                readIdents = _6215_recIdents;
              }
            }
          }
        } else if (_source124.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _6216___mcc_h1130 = _source124.dtor_Passthrough_a0;
          DAST._IType _source231 = _3403___mcc_h1;
          if (_source231.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6217___mcc_h1134 = _source231.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _6218___mcc_h1135 = _source231.dtor_typeArgs;
            DAST._IResolvedType _6219___mcc_h1136 = _source231.dtor_resolved;
            DAST._IResolvedType _source232 = _6219___mcc_h1136;
            if (_source232.is_Datatype) {
              DAST._IDatatypeType _6220___mcc_h1140 = _source232.dtor_datatypeType;
              {
                RAST._IType _6221_fromTpeGen;
                RAST._IType _out2611;
                _out2611 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6221_fromTpeGen = _out2611;
                RAST._IType _6222_toTpeGen;
                RAST._IType _out2612;
                _out2612 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6222_toTpeGen = _out2612;
                RAST._IExpr _6223_recursiveGen;
                DCOMP._IOwnership _6224_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6225_recIdents;
                RAST._IExpr _out2613;
                DCOMP._IOwnership _out2614;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2615;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2613, out _out2614, out _out2615);
                _6223_recursiveGen = _out2613;
                _6224_recOwned = _out2614;
                _6225_recIdents = _out2615;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6223_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6221_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6222_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2616;
                DCOMP._IOwnership _out2617;
                DCOMP.COMP.FromOwnership(r, _6224_recOwned, expectedOwnership, out _out2616, out _out2617);
                r = _out2616;
                resultingOwnership = _out2617;
                readIdents = _6225_recIdents;
              }
            } else if (_source232.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6226___mcc_h1142 = _source232.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _6227___mcc_h1143 = _source232.dtor_attributes;
              {
                RAST._IType _6228_fromTpeGen;
                RAST._IType _out2618;
                _out2618 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6228_fromTpeGen = _out2618;
                RAST._IType _6229_toTpeGen;
                RAST._IType _out2619;
                _out2619 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6229_toTpeGen = _out2619;
                RAST._IExpr _6230_recursiveGen;
                DCOMP._IOwnership _6231_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6232_recIdents;
                RAST._IExpr _out2620;
                DCOMP._IOwnership _out2621;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2622;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2620, out _out2621, out _out2622);
                _6230_recursiveGen = _out2620;
                _6231_recOwned = _out2621;
                _6232_recIdents = _out2622;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6230_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6228_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6229_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2623;
                DCOMP._IOwnership _out2624;
                DCOMP.COMP.FromOwnership(r, _6231_recOwned, expectedOwnership, out _out2623, out _out2624);
                r = _out2623;
                resultingOwnership = _out2624;
                readIdents = _6232_recIdents;
              }
            } else {
              DAST._IType _6233___mcc_h1146 = _source232.dtor_baseType;
              DAST._INewtypeRange _6234___mcc_h1147 = _source232.dtor_range;
              bool _6235___mcc_h1148 = _source232.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _6236___mcc_h1149 = _source232.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _6237_attributes = _6236___mcc_h1149;
              bool _6238_erase = _6235___mcc_h1148;
              DAST._INewtypeRange _6239_range = _6234___mcc_h1147;
              DAST._IType _6240_b = _6233___mcc_h1146;
              {
                Std.Wrappers._IOption<RAST._IType> _6241_nativeToType;
                _6241_nativeToType = DCOMP.COMP.NewtypeToRustType(_6240_b, _6239_range);
                if (object.Equals(_3397_fromTpe, _6240_b)) {
                  RAST._IExpr _6242_recursiveGen;
                  DCOMP._IOwnership _6243_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6244_recIdents;
                  RAST._IExpr _out2625;
                  DCOMP._IOwnership _out2626;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2627;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2625, out _out2626, out _out2627);
                  _6242_recursiveGen = _out2625;
                  _6243_recOwned = _out2626;
                  _6244_recIdents = _out2627;
                  readIdents = _6244_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source233 = _6241_nativeToType;
                  if (_source233.is_None) {
                    if (_6238_erase) {
                      r = _6242_recursiveGen;
                    } else {
                      RAST._IType _6245_rhsType;
                      RAST._IType _out2628;
                      _out2628 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _6245_rhsType = _out2628;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6245_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6242_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out2629;
                    DCOMP._IOwnership _out2630;
                    DCOMP.COMP.FromOwnership(r, _6243_recOwned, expectedOwnership, out _out2629, out _out2630);
                    r = _out2629;
                    resultingOwnership = _out2630;
                  } else {
                    RAST._IType _6246___mcc_h2195 = _source233.dtor_value;
                    RAST._IType _6247_v = _6246___mcc_h2195;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6242_recursiveGen, RAST.Expr.create_ExprFromType(_6247_v)));
                    RAST._IExpr _out2631;
                    DCOMP._IOwnership _out2632;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2631, out _out2632);
                    r = _out2631;
                    resultingOwnership = _out2632;
                  }
                } else {
                  if ((_6241_nativeToType).is_Some) {
                    DAST._IType _source234 = _3397_fromTpe;
                    if (_source234.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6248___mcc_h2196 = _source234.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _6249___mcc_h2197 = _source234.dtor_typeArgs;
                      DAST._IResolvedType _6250___mcc_h2198 = _source234.dtor_resolved;
                      DAST._IResolvedType _source235 = _6250___mcc_h2198;
                      if (_source235.is_Datatype) {
                        DAST._IDatatypeType _6251___mcc_h2202 = _source235.dtor_datatypeType;
                      } else if (_source235.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6252___mcc_h2204 = _source235.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _6253___mcc_h2205 = _source235.dtor_attributes;
                      } else {
                        DAST._IType _6254___mcc_h2208 = _source235.dtor_baseType;
                        DAST._INewtypeRange _6255___mcc_h2209 = _source235.dtor_range;
                        bool _6256___mcc_h2210 = _source235.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _6257___mcc_h2211 = _source235.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _6258_attributes0 = _6257___mcc_h2211;
                        bool _6259_erase0 = _6256___mcc_h2210;
                        DAST._INewtypeRange _6260_range0 = _6255___mcc_h2209;
                        DAST._IType _6261_b0 = _6254___mcc_h2208;
                        {
                          Std.Wrappers._IOption<RAST._IType> _6262_nativeFromType;
                          _6262_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6261_b0, _6260_range0);
                          if ((_6262_nativeFromType).is_Some) {
                            RAST._IExpr _6263_recursiveGen;
                            DCOMP._IOwnership _6264_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6265_recIdents;
                            RAST._IExpr _out2633;
                            DCOMP._IOwnership _out2634;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2635;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2633, out _out2634, out _out2635);
                            _6263_recursiveGen = _out2633;
                            _6264_recOwned = _out2634;
                            _6265_recIdents = _out2635;
                            RAST._IExpr _out2636;
                            DCOMP._IOwnership _out2637;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6263_recursiveGen, (_6241_nativeToType).dtor_value), _6264_recOwned, expectedOwnership, out _out2636, out _out2637);
                            r = _out2636;
                            resultingOwnership = _out2637;
                            readIdents = _6265_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source234.is_Nullable) {
                      DAST._IType _6266___mcc_h2216 = _source234.dtor_Nullable_a0;
                    } else if (_source234.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _6267___mcc_h2218 = _source234.dtor_Tuple_a0;
                    } else if (_source234.is_Array) {
                      DAST._IType _6268___mcc_h2220 = _source234.dtor_element;
                      BigInteger _6269___mcc_h2221 = _source234.dtor_dims;
                    } else if (_source234.is_Seq) {
                      DAST._IType _6270___mcc_h2224 = _source234.dtor_element;
                    } else if (_source234.is_Set) {
                      DAST._IType _6271___mcc_h2226 = _source234.dtor_element;
                    } else if (_source234.is_Multiset) {
                      DAST._IType _6272___mcc_h2228 = _source234.dtor_element;
                    } else if (_source234.is_Map) {
                      DAST._IType _6273___mcc_h2230 = _source234.dtor_key;
                      DAST._IType _6274___mcc_h2231 = _source234.dtor_value;
                    } else if (_source234.is_SetBuilder) {
                      DAST._IType _6275___mcc_h2234 = _source234.dtor_element;
                    } else if (_source234.is_MapBuilder) {
                      DAST._IType _6276___mcc_h2236 = _source234.dtor_key;
                      DAST._IType _6277___mcc_h2237 = _source234.dtor_value;
                    } else if (_source234.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _6278___mcc_h2240 = _source234.dtor_args;
                      DAST._IType _6279___mcc_h2241 = _source234.dtor_result;
                    } else if (_source234.is_Primitive) {
                      DAST._IPrimitive _6280___mcc_h2244 = _source234.dtor_Primitive_a0;
                    } else if (_source234.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _6281___mcc_h2246 = _source234.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _6282___mcc_h2248 = _source234.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _6283_recursiveGen;
                      DCOMP._IOwnership _6284_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6285_recIdents;
                      RAST._IExpr _out2638;
                      DCOMP._IOwnership _out2639;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2640;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2638, out _out2639, out _out2640);
                      _6283_recursiveGen = _out2638;
                      _6284_recOwned = _out2639;
                      _6285_recIdents = _out2640;
                      RAST._IExpr _out2641;
                      DCOMP._IOwnership _out2642;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6283_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6241_nativeToType).dtor_value), _6284_recOwned, expectedOwnership, out _out2641, out _out2642);
                      r = _out2641;
                      resultingOwnership = _out2642;
                      readIdents = _6285_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out2643;
                  DCOMP._IOwnership _out2644;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2645;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _6240_b), _6240_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out2643, out _out2644, out _out2645);
                  r = _out2643;
                  resultingOwnership = _out2644;
                  readIdents = _out2645;
                }
              }
            }
          } else if (_source231.is_Nullable) {
            DAST._IType _6286___mcc_h1154 = _source231.dtor_Nullable_a0;
            {
              RAST._IExpr _6287_recursiveGen;
              DCOMP._IOwnership _6288_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6289_recIdents;
              RAST._IExpr _out2646;
              DCOMP._IOwnership _out2647;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2648;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2646, out _out2647, out _out2648);
              _6287_recursiveGen = _out2646;
              _6288_recOwned = _out2647;
              _6289_recIdents = _out2648;
              r = _6287_recursiveGen;
              if (object.Equals(_6288_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out2649;
              DCOMP._IOwnership _out2650;
              DCOMP.COMP.FromOwnership(r, _6288_recOwned, expectedOwnership, out _out2649, out _out2650);
              r = _out2649;
              resultingOwnership = _out2650;
              readIdents = _6289_recIdents;
            }
          } else if (_source231.is_Tuple) {
            Dafny.ISequence<DAST._IType> _6290___mcc_h1156 = _source231.dtor_Tuple_a0;
            {
              RAST._IType _6291_fromTpeGen;
              RAST._IType _out2651;
              _out2651 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6291_fromTpeGen = _out2651;
              RAST._IType _6292_toTpeGen;
              RAST._IType _out2652;
              _out2652 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6292_toTpeGen = _out2652;
              RAST._IExpr _6293_recursiveGen;
              DCOMP._IOwnership _6294_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6295_recIdents;
              RAST._IExpr _out2653;
              DCOMP._IOwnership _out2654;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2655;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2653, out _out2654, out _out2655);
              _6293_recursiveGen = _out2653;
              _6294_recOwned = _out2654;
              _6295_recIdents = _out2655;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6293_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6291_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6292_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2656;
              DCOMP._IOwnership _out2657;
              DCOMP.COMP.FromOwnership(r, _6294_recOwned, expectedOwnership, out _out2656, out _out2657);
              r = _out2656;
              resultingOwnership = _out2657;
              readIdents = _6295_recIdents;
            }
          } else if (_source231.is_Array) {
            DAST._IType _6296___mcc_h1158 = _source231.dtor_element;
            BigInteger _6297___mcc_h1159 = _source231.dtor_dims;
            {
              RAST._IType _6298_fromTpeGen;
              RAST._IType _out2658;
              _out2658 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6298_fromTpeGen = _out2658;
              RAST._IType _6299_toTpeGen;
              RAST._IType _out2659;
              _out2659 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6299_toTpeGen = _out2659;
              RAST._IExpr _6300_recursiveGen;
              DCOMP._IOwnership _6301_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6302_recIdents;
              RAST._IExpr _out2660;
              DCOMP._IOwnership _out2661;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2662;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2660, out _out2661, out _out2662);
              _6300_recursiveGen = _out2660;
              _6301_recOwned = _out2661;
              _6302_recIdents = _out2662;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6300_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6298_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6299_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2663;
              DCOMP._IOwnership _out2664;
              DCOMP.COMP.FromOwnership(r, _6301_recOwned, expectedOwnership, out _out2663, out _out2664);
              r = _out2663;
              resultingOwnership = _out2664;
              readIdents = _6302_recIdents;
            }
          } else if (_source231.is_Seq) {
            DAST._IType _6303___mcc_h1162 = _source231.dtor_element;
            {
              RAST._IType _6304_fromTpeGen;
              RAST._IType _out2665;
              _out2665 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6304_fromTpeGen = _out2665;
              RAST._IType _6305_toTpeGen;
              RAST._IType _out2666;
              _out2666 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6305_toTpeGen = _out2666;
              RAST._IExpr _6306_recursiveGen;
              DCOMP._IOwnership _6307_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6308_recIdents;
              RAST._IExpr _out2667;
              DCOMP._IOwnership _out2668;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2669;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2667, out _out2668, out _out2669);
              _6306_recursiveGen = _out2667;
              _6307_recOwned = _out2668;
              _6308_recIdents = _out2669;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6306_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6304_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6305_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2670;
              DCOMP._IOwnership _out2671;
              DCOMP.COMP.FromOwnership(r, _6307_recOwned, expectedOwnership, out _out2670, out _out2671);
              r = _out2670;
              resultingOwnership = _out2671;
              readIdents = _6308_recIdents;
            }
          } else if (_source231.is_Set) {
            DAST._IType _6309___mcc_h1164 = _source231.dtor_element;
            {
              RAST._IType _6310_fromTpeGen;
              RAST._IType _out2672;
              _out2672 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6310_fromTpeGen = _out2672;
              RAST._IType _6311_toTpeGen;
              RAST._IType _out2673;
              _out2673 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6311_toTpeGen = _out2673;
              RAST._IExpr _6312_recursiveGen;
              DCOMP._IOwnership _6313_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6314_recIdents;
              RAST._IExpr _out2674;
              DCOMP._IOwnership _out2675;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2676;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2674, out _out2675, out _out2676);
              _6312_recursiveGen = _out2674;
              _6313_recOwned = _out2675;
              _6314_recIdents = _out2676;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6312_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6310_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6311_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2677;
              DCOMP._IOwnership _out2678;
              DCOMP.COMP.FromOwnership(r, _6313_recOwned, expectedOwnership, out _out2677, out _out2678);
              r = _out2677;
              resultingOwnership = _out2678;
              readIdents = _6314_recIdents;
            }
          } else if (_source231.is_Multiset) {
            DAST._IType _6315___mcc_h1166 = _source231.dtor_element;
            {
              RAST._IType _6316_fromTpeGen;
              RAST._IType _out2679;
              _out2679 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6316_fromTpeGen = _out2679;
              RAST._IType _6317_toTpeGen;
              RAST._IType _out2680;
              _out2680 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6317_toTpeGen = _out2680;
              RAST._IExpr _6318_recursiveGen;
              DCOMP._IOwnership _6319_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6320_recIdents;
              RAST._IExpr _out2681;
              DCOMP._IOwnership _out2682;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2683;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2681, out _out2682, out _out2683);
              _6318_recursiveGen = _out2681;
              _6319_recOwned = _out2682;
              _6320_recIdents = _out2683;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6318_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6316_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6317_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2684;
              DCOMP._IOwnership _out2685;
              DCOMP.COMP.FromOwnership(r, _6319_recOwned, expectedOwnership, out _out2684, out _out2685);
              r = _out2684;
              resultingOwnership = _out2685;
              readIdents = _6320_recIdents;
            }
          } else if (_source231.is_Map) {
            DAST._IType _6321___mcc_h1168 = _source231.dtor_key;
            DAST._IType _6322___mcc_h1169 = _source231.dtor_value;
            {
              RAST._IType _6323_fromTpeGen;
              RAST._IType _out2686;
              _out2686 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6323_fromTpeGen = _out2686;
              RAST._IType _6324_toTpeGen;
              RAST._IType _out2687;
              _out2687 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6324_toTpeGen = _out2687;
              RAST._IExpr _6325_recursiveGen;
              DCOMP._IOwnership _6326_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6327_recIdents;
              RAST._IExpr _out2688;
              DCOMP._IOwnership _out2689;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2690;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2688, out _out2689, out _out2690);
              _6325_recursiveGen = _out2688;
              _6326_recOwned = _out2689;
              _6327_recIdents = _out2690;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6325_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6323_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6324_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2691;
              DCOMP._IOwnership _out2692;
              DCOMP.COMP.FromOwnership(r, _6326_recOwned, expectedOwnership, out _out2691, out _out2692);
              r = _out2691;
              resultingOwnership = _out2692;
              readIdents = _6327_recIdents;
            }
          } else if (_source231.is_SetBuilder) {
            DAST._IType _6328___mcc_h1172 = _source231.dtor_element;
            {
              RAST._IType _6329_fromTpeGen;
              RAST._IType _out2693;
              _out2693 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6329_fromTpeGen = _out2693;
              RAST._IType _6330_toTpeGen;
              RAST._IType _out2694;
              _out2694 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6330_toTpeGen = _out2694;
              RAST._IExpr _6331_recursiveGen;
              DCOMP._IOwnership _6332_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6333_recIdents;
              RAST._IExpr _out2695;
              DCOMP._IOwnership _out2696;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2697;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2695, out _out2696, out _out2697);
              _6331_recursiveGen = _out2695;
              _6332_recOwned = _out2696;
              _6333_recIdents = _out2697;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6331_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6329_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6330_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2698;
              DCOMP._IOwnership _out2699;
              DCOMP.COMP.FromOwnership(r, _6332_recOwned, expectedOwnership, out _out2698, out _out2699);
              r = _out2698;
              resultingOwnership = _out2699;
              readIdents = _6333_recIdents;
            }
          } else if (_source231.is_MapBuilder) {
            DAST._IType _6334___mcc_h1174 = _source231.dtor_key;
            DAST._IType _6335___mcc_h1175 = _source231.dtor_value;
            {
              RAST._IType _6336_fromTpeGen;
              RAST._IType _out2700;
              _out2700 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6336_fromTpeGen = _out2700;
              RAST._IType _6337_toTpeGen;
              RAST._IType _out2701;
              _out2701 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6337_toTpeGen = _out2701;
              RAST._IExpr _6338_recursiveGen;
              DCOMP._IOwnership _6339_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6340_recIdents;
              RAST._IExpr _out2702;
              DCOMP._IOwnership _out2703;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2704;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2702, out _out2703, out _out2704);
              _6338_recursiveGen = _out2702;
              _6339_recOwned = _out2703;
              _6340_recIdents = _out2704;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6338_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6336_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6337_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2705;
              DCOMP._IOwnership _out2706;
              DCOMP.COMP.FromOwnership(r, _6339_recOwned, expectedOwnership, out _out2705, out _out2706);
              r = _out2705;
              resultingOwnership = _out2706;
              readIdents = _6340_recIdents;
            }
          } else if (_source231.is_Arrow) {
            Dafny.ISequence<DAST._IType> _6341___mcc_h1178 = _source231.dtor_args;
            DAST._IType _6342___mcc_h1179 = _source231.dtor_result;
            {
              RAST._IType _6343_fromTpeGen;
              RAST._IType _out2707;
              _out2707 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6343_fromTpeGen = _out2707;
              RAST._IType _6344_toTpeGen;
              RAST._IType _out2708;
              _out2708 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6344_toTpeGen = _out2708;
              RAST._IExpr _6345_recursiveGen;
              DCOMP._IOwnership _6346_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6347_recIdents;
              RAST._IExpr _out2709;
              DCOMP._IOwnership _out2710;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2711;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2709, out _out2710, out _out2711);
              _6345_recursiveGen = _out2709;
              _6346_recOwned = _out2710;
              _6347_recIdents = _out2711;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6345_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6343_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6344_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2712;
              DCOMP._IOwnership _out2713;
              DCOMP.COMP.FromOwnership(r, _6346_recOwned, expectedOwnership, out _out2712, out _out2713);
              r = _out2712;
              resultingOwnership = _out2713;
              readIdents = _6347_recIdents;
            }
          } else if (_source231.is_Primitive) {
            DAST._IPrimitive _6348___mcc_h1182 = _source231.dtor_Primitive_a0;
            DAST._IPrimitive _source236 = _6348___mcc_h1182;
            if (_source236.is_Int) {
              {
                RAST._IType _6349_rhsType;
                RAST._IType _out2714;
                _out2714 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6349_rhsType = _out2714;
                RAST._IExpr _6350_recursiveGen;
                DCOMP._IOwnership _6351___v96;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6352_recIdents;
                RAST._IExpr _out2715;
                DCOMP._IOwnership _out2716;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2717;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2715, out _out2716, out _out2717);
                _6350_recursiveGen = _out2715;
                _6351___v96 = _out2716;
                _6352_recIdents = _out2717;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_6350_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")}")));
                RAST._IExpr _out2718;
                DCOMP._IOwnership _out2719;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2718, out _out2719);
                r = _out2718;
                resultingOwnership = _out2719;
                readIdents = _6352_recIdents;
              }
            } else if (_source236.is_Real) {
              {
                RAST._IType _6353_fromTpeGen;
                RAST._IType _out2720;
                _out2720 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6353_fromTpeGen = _out2720;
                RAST._IType _6354_toTpeGen;
                RAST._IType _out2721;
                _out2721 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6354_toTpeGen = _out2721;
                RAST._IExpr _6355_recursiveGen;
                DCOMP._IOwnership _6356_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6357_recIdents;
                RAST._IExpr _out2722;
                DCOMP._IOwnership _out2723;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2724;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2722, out _out2723, out _out2724);
                _6355_recursiveGen = _out2722;
                _6356_recOwned = _out2723;
                _6357_recIdents = _out2724;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6355_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6353_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6354_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2725;
                DCOMP._IOwnership _out2726;
                DCOMP.COMP.FromOwnership(r, _6356_recOwned, expectedOwnership, out _out2725, out _out2726);
                r = _out2725;
                resultingOwnership = _out2726;
                readIdents = _6357_recIdents;
              }
            } else if (_source236.is_String) {
              {
                RAST._IType _6358_fromTpeGen;
                RAST._IType _out2727;
                _out2727 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6358_fromTpeGen = _out2727;
                RAST._IType _6359_toTpeGen;
                RAST._IType _out2728;
                _out2728 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6359_toTpeGen = _out2728;
                RAST._IExpr _6360_recursiveGen;
                DCOMP._IOwnership _6361_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6362_recIdents;
                RAST._IExpr _out2729;
                DCOMP._IOwnership _out2730;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2731;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2729, out _out2730, out _out2731);
                _6360_recursiveGen = _out2729;
                _6361_recOwned = _out2730;
                _6362_recIdents = _out2731;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6360_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6358_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6359_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2732;
                DCOMP._IOwnership _out2733;
                DCOMP.COMP.FromOwnership(r, _6361_recOwned, expectedOwnership, out _out2732, out _out2733);
                r = _out2732;
                resultingOwnership = _out2733;
                readIdents = _6362_recIdents;
              }
            } else if (_source236.is_Bool) {
              {
                RAST._IType _6363_fromTpeGen;
                RAST._IType _out2734;
                _out2734 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6363_fromTpeGen = _out2734;
                RAST._IType _6364_toTpeGen;
                RAST._IType _out2735;
                _out2735 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6364_toTpeGen = _out2735;
                RAST._IExpr _6365_recursiveGen;
                DCOMP._IOwnership _6366_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6367_recIdents;
                RAST._IExpr _out2736;
                DCOMP._IOwnership _out2737;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2738;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2736, out _out2737, out _out2738);
                _6365_recursiveGen = _out2736;
                _6366_recOwned = _out2737;
                _6367_recIdents = _out2738;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6365_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6363_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6364_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2739;
                DCOMP._IOwnership _out2740;
                DCOMP.COMP.FromOwnership(r, _6366_recOwned, expectedOwnership, out _out2739, out _out2740);
                r = _out2739;
                resultingOwnership = _out2740;
                readIdents = _6367_recIdents;
              }
            } else {
              {
                RAST._IType _6368_fromTpeGen;
                RAST._IType _out2741;
                _out2741 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6368_fromTpeGen = _out2741;
                RAST._IType _6369_toTpeGen;
                RAST._IType _out2742;
                _out2742 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6369_toTpeGen = _out2742;
                RAST._IExpr _6370_recursiveGen;
                DCOMP._IOwnership _6371_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6372_recIdents;
                RAST._IExpr _out2743;
                DCOMP._IOwnership _out2744;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2745;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2743, out _out2744, out _out2745);
                _6370_recursiveGen = _out2743;
                _6371_recOwned = _out2744;
                _6372_recIdents = _out2745;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6370_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6368_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6369_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2746;
                DCOMP._IOwnership _out2747;
                DCOMP.COMP.FromOwnership(r, _6371_recOwned, expectedOwnership, out _out2746, out _out2747);
                r = _out2746;
                resultingOwnership = _out2747;
                readIdents = _6372_recIdents;
              }
            }
          } else if (_source231.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _6373___mcc_h1184 = _source231.dtor_Passthrough_a0;
            {
              RAST._IExpr _6374_recursiveGen;
              DCOMP._IOwnership _6375___v101;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6376_recIdents;
              RAST._IExpr _out2748;
              DCOMP._IOwnership _out2749;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2750;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2748, out _out2749, out _out2750);
              _6374_recursiveGen = _out2748;
              _6375___v101 = _out2749;
              _6376_recIdents = _out2750;
              RAST._IType _6377_toTpeGen;
              RAST._IType _out2751;
              _out2751 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6377_toTpeGen = _out2751;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_6374_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_6377_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out2752;
              DCOMP._IOwnership _out2753;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2752, out _out2753);
              r = _out2752;
              resultingOwnership = _out2753;
              readIdents = _6376_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _6378___mcc_h1186 = _source231.dtor_TypeArg_a0;
            {
              RAST._IType _6379_fromTpeGen;
              RAST._IType _out2754;
              _out2754 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6379_fromTpeGen = _out2754;
              RAST._IType _6380_toTpeGen;
              RAST._IType _out2755;
              _out2755 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6380_toTpeGen = _out2755;
              RAST._IExpr _6381_recursiveGen;
              DCOMP._IOwnership _6382_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6383_recIdents;
              RAST._IExpr _out2756;
              DCOMP._IOwnership _out2757;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2758;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2756, out _out2757, out _out2758);
              _6381_recursiveGen = _out2756;
              _6382_recOwned = _out2757;
              _6383_recIdents = _out2758;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6381_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6379_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6380_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2759;
              DCOMP._IOwnership _out2760;
              DCOMP.COMP.FromOwnership(r, _6382_recOwned, expectedOwnership, out _out2759, out _out2760);
              r = _out2759;
              resultingOwnership = _out2760;
              readIdents = _6383_recIdents;
            }
          }
        } else {
          Dafny.ISequence<Dafny.Rune> _6384___mcc_h1188 = _source124.dtor_TypeArg_a0;
          DAST._IType _source237 = _3403___mcc_h1;
          if (_source237.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6385___mcc_h1192 = _source237.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _6386___mcc_h1193 = _source237.dtor_typeArgs;
            DAST._IResolvedType _6387___mcc_h1194 = _source237.dtor_resolved;
            DAST._IResolvedType _source238 = _6387___mcc_h1194;
            if (_source238.is_Datatype) {
              DAST._IDatatypeType _6388___mcc_h1198 = _source238.dtor_datatypeType;
              {
                RAST._IType _6389_fromTpeGen;
                RAST._IType _out2761;
                _out2761 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6389_fromTpeGen = _out2761;
                RAST._IType _6390_toTpeGen;
                RAST._IType _out2762;
                _out2762 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6390_toTpeGen = _out2762;
                RAST._IExpr _6391_recursiveGen;
                DCOMP._IOwnership _6392_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6393_recIdents;
                RAST._IExpr _out2763;
                DCOMP._IOwnership _out2764;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2765;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2763, out _out2764, out _out2765);
                _6391_recursiveGen = _out2763;
                _6392_recOwned = _out2764;
                _6393_recIdents = _out2765;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6391_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6389_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6390_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2766;
                DCOMP._IOwnership _out2767;
                DCOMP.COMP.FromOwnership(r, _6392_recOwned, expectedOwnership, out _out2766, out _out2767);
                r = _out2766;
                resultingOwnership = _out2767;
                readIdents = _6393_recIdents;
              }
            } else if (_source238.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6394___mcc_h1200 = _source238.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _6395___mcc_h1201 = _source238.dtor_attributes;
              {
                RAST._IType _6396_fromTpeGen;
                RAST._IType _out2768;
                _out2768 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
                _6396_fromTpeGen = _out2768;
                RAST._IType _6397_toTpeGen;
                RAST._IType _out2769;
                _out2769 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                _6397_toTpeGen = _out2769;
                RAST._IExpr _6398_recursiveGen;
                DCOMP._IOwnership _6399_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6400_recIdents;
                RAST._IExpr _out2770;
                DCOMP._IOwnership _out2771;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2772;
                DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2770, out _out2771, out _out2772);
                _6398_recursiveGen = _out2770;
                _6399_recOwned = _out2771;
                _6400_recIdents = _out2772;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6398_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6396_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6397_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2773;
                DCOMP._IOwnership _out2774;
                DCOMP.COMP.FromOwnership(r, _6399_recOwned, expectedOwnership, out _out2773, out _out2774);
                r = _out2773;
                resultingOwnership = _out2774;
                readIdents = _6400_recIdents;
              }
            } else {
              DAST._IType _6401___mcc_h1204 = _source238.dtor_baseType;
              DAST._INewtypeRange _6402___mcc_h1205 = _source238.dtor_range;
              bool _6403___mcc_h1206 = _source238.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _6404___mcc_h1207 = _source238.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _6405_attributes = _6404___mcc_h1207;
              bool _6406_erase = _6403___mcc_h1206;
              DAST._INewtypeRange _6407_range = _6402___mcc_h1205;
              DAST._IType _6408_b = _6401___mcc_h1204;
              {
                Std.Wrappers._IOption<RAST._IType> _6409_nativeToType;
                _6409_nativeToType = DCOMP.COMP.NewtypeToRustType(_6408_b, _6407_range);
                if (object.Equals(_3397_fromTpe, _6408_b)) {
                  RAST._IExpr _6410_recursiveGen;
                  DCOMP._IOwnership _6411_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6412_recIdents;
                  RAST._IExpr _out2775;
                  DCOMP._IOwnership _out2776;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2777;
                  DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2775, out _out2776, out _out2777);
                  _6410_recursiveGen = _out2775;
                  _6411_recOwned = _out2776;
                  _6412_recIdents = _out2777;
                  readIdents = _6412_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source239 = _6409_nativeToType;
                  if (_source239.is_None) {
                    if (_6406_erase) {
                      r = _6410_recursiveGen;
                    } else {
                      RAST._IType _6413_rhsType;
                      RAST._IType _out2778;
                      _out2778 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
                      _6413_rhsType = _out2778;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6413_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6410_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out2779;
                    DCOMP._IOwnership _out2780;
                    DCOMP.COMP.FromOwnership(r, _6411_recOwned, expectedOwnership, out _out2779, out _out2780);
                    r = _out2779;
                    resultingOwnership = _out2780;
                  } else {
                    RAST._IType _6414___mcc_h2250 = _source239.dtor_value;
                    RAST._IType _6415_v = _6414___mcc_h2250;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6410_recursiveGen, RAST.Expr.create_ExprFromType(_6415_v)));
                    RAST._IExpr _out2781;
                    DCOMP._IOwnership _out2782;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2781, out _out2782);
                    r = _out2781;
                    resultingOwnership = _out2782;
                  }
                } else {
                  if ((_6409_nativeToType).is_Some) {
                    DAST._IType _source240 = _3397_fromTpe;
                    if (_source240.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6416___mcc_h2251 = _source240.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _6417___mcc_h2252 = _source240.dtor_typeArgs;
                      DAST._IResolvedType _6418___mcc_h2253 = _source240.dtor_resolved;
                      DAST._IResolvedType _source241 = _6418___mcc_h2253;
                      if (_source241.is_Datatype) {
                        DAST._IDatatypeType _6419___mcc_h2257 = _source241.dtor_datatypeType;
                      } else if (_source241.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6420___mcc_h2259 = _source241.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _6421___mcc_h2260 = _source241.dtor_attributes;
                      } else {
                        DAST._IType _6422___mcc_h2263 = _source241.dtor_baseType;
                        DAST._INewtypeRange _6423___mcc_h2264 = _source241.dtor_range;
                        bool _6424___mcc_h2265 = _source241.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _6425___mcc_h2266 = _source241.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _6426_attributes0 = _6425___mcc_h2266;
                        bool _6427_erase0 = _6424___mcc_h2265;
                        DAST._INewtypeRange _6428_range0 = _6423___mcc_h2264;
                        DAST._IType _6429_b0 = _6422___mcc_h2263;
                        {
                          Std.Wrappers._IOption<RAST._IType> _6430_nativeFromType;
                          _6430_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6429_b0, _6428_range0);
                          if ((_6430_nativeFromType).is_Some) {
                            RAST._IExpr _6431_recursiveGen;
                            DCOMP._IOwnership _6432_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6433_recIdents;
                            RAST._IExpr _out2783;
                            DCOMP._IOwnership _out2784;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2785;
                            DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2783, out _out2784, out _out2785);
                            _6431_recursiveGen = _out2783;
                            _6432_recOwned = _out2784;
                            _6433_recIdents = _out2785;
                            RAST._IExpr _out2786;
                            DCOMP._IOwnership _out2787;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6431_recursiveGen, (_6409_nativeToType).dtor_value), _6432_recOwned, expectedOwnership, out _out2786, out _out2787);
                            r = _out2786;
                            resultingOwnership = _out2787;
                            readIdents = _6433_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source240.is_Nullable) {
                      DAST._IType _6434___mcc_h2271 = _source240.dtor_Nullable_a0;
                    } else if (_source240.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _6435___mcc_h2273 = _source240.dtor_Tuple_a0;
                    } else if (_source240.is_Array) {
                      DAST._IType _6436___mcc_h2275 = _source240.dtor_element;
                      BigInteger _6437___mcc_h2276 = _source240.dtor_dims;
                    } else if (_source240.is_Seq) {
                      DAST._IType _6438___mcc_h2279 = _source240.dtor_element;
                    } else if (_source240.is_Set) {
                      DAST._IType _6439___mcc_h2281 = _source240.dtor_element;
                    } else if (_source240.is_Multiset) {
                      DAST._IType _6440___mcc_h2283 = _source240.dtor_element;
                    } else if (_source240.is_Map) {
                      DAST._IType _6441___mcc_h2285 = _source240.dtor_key;
                      DAST._IType _6442___mcc_h2286 = _source240.dtor_value;
                    } else if (_source240.is_SetBuilder) {
                      DAST._IType _6443___mcc_h2289 = _source240.dtor_element;
                    } else if (_source240.is_MapBuilder) {
                      DAST._IType _6444___mcc_h2291 = _source240.dtor_key;
                      DAST._IType _6445___mcc_h2292 = _source240.dtor_value;
                    } else if (_source240.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _6446___mcc_h2295 = _source240.dtor_args;
                      DAST._IType _6447___mcc_h2296 = _source240.dtor_result;
                    } else if (_source240.is_Primitive) {
                      DAST._IPrimitive _6448___mcc_h2299 = _source240.dtor_Primitive_a0;
                    } else if (_source240.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _6449___mcc_h2301 = _source240.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _6450___mcc_h2303 = _source240.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3397_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _6451_recursiveGen;
                      DCOMP._IOwnership _6452_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6453_recIdents;
                      RAST._IExpr _out2788;
                      DCOMP._IOwnership _out2789;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2790;
                      DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2788, out _out2789, out _out2790);
                      _6451_recursiveGen = _out2788;
                      _6452_recOwned = _out2789;
                      _6453_recIdents = _out2790;
                      RAST._IExpr _out2791;
                      DCOMP._IOwnership _out2792;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6451_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6409_nativeToType).dtor_value), _6452_recOwned, expectedOwnership, out _out2791, out _out2792);
                      r = _out2791;
                      resultingOwnership = _out2792;
                      readIdents = _6453_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out2793;
                  DCOMP._IOwnership _out2794;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2795;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3396_expr, _3397_fromTpe, _6408_b), _6408_b, _3398_toTpe), selfIdent, env, expectedOwnership, out _out2793, out _out2794, out _out2795);
                  r = _out2793;
                  resultingOwnership = _out2794;
                  readIdents = _out2795;
                }
              }
            }
          } else if (_source237.is_Nullable) {
            DAST._IType _6454___mcc_h1212 = _source237.dtor_Nullable_a0;
            {
              RAST._IExpr _6455_recursiveGen;
              DCOMP._IOwnership _6456_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6457_recIdents;
              RAST._IExpr _out2796;
              DCOMP._IOwnership _out2797;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2798;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2796, out _out2797, out _out2798);
              _6455_recursiveGen = _out2796;
              _6456_recOwned = _out2797;
              _6457_recIdents = _out2798;
              r = _6455_recursiveGen;
              if (object.Equals(_6456_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out2799;
              DCOMP._IOwnership _out2800;
              DCOMP.COMP.FromOwnership(r, _6456_recOwned, expectedOwnership, out _out2799, out _out2800);
              r = _out2799;
              resultingOwnership = _out2800;
              readIdents = _6457_recIdents;
            }
          } else if (_source237.is_Tuple) {
            Dafny.ISequence<DAST._IType> _6458___mcc_h1214 = _source237.dtor_Tuple_a0;
            {
              RAST._IType _6459_fromTpeGen;
              RAST._IType _out2801;
              _out2801 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6459_fromTpeGen = _out2801;
              RAST._IType _6460_toTpeGen;
              RAST._IType _out2802;
              _out2802 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6460_toTpeGen = _out2802;
              RAST._IExpr _6461_recursiveGen;
              DCOMP._IOwnership _6462_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6463_recIdents;
              RAST._IExpr _out2803;
              DCOMP._IOwnership _out2804;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2805;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2803, out _out2804, out _out2805);
              _6461_recursiveGen = _out2803;
              _6462_recOwned = _out2804;
              _6463_recIdents = _out2805;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6461_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6459_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6460_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2806;
              DCOMP._IOwnership _out2807;
              DCOMP.COMP.FromOwnership(r, _6462_recOwned, expectedOwnership, out _out2806, out _out2807);
              r = _out2806;
              resultingOwnership = _out2807;
              readIdents = _6463_recIdents;
            }
          } else if (_source237.is_Array) {
            DAST._IType _6464___mcc_h1216 = _source237.dtor_element;
            BigInteger _6465___mcc_h1217 = _source237.dtor_dims;
            {
              RAST._IType _6466_fromTpeGen;
              RAST._IType _out2808;
              _out2808 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6466_fromTpeGen = _out2808;
              RAST._IType _6467_toTpeGen;
              RAST._IType _out2809;
              _out2809 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6467_toTpeGen = _out2809;
              RAST._IExpr _6468_recursiveGen;
              DCOMP._IOwnership _6469_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6470_recIdents;
              RAST._IExpr _out2810;
              DCOMP._IOwnership _out2811;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2812;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2810, out _out2811, out _out2812);
              _6468_recursiveGen = _out2810;
              _6469_recOwned = _out2811;
              _6470_recIdents = _out2812;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6468_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6466_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6467_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2813;
              DCOMP._IOwnership _out2814;
              DCOMP.COMP.FromOwnership(r, _6469_recOwned, expectedOwnership, out _out2813, out _out2814);
              r = _out2813;
              resultingOwnership = _out2814;
              readIdents = _6470_recIdents;
            }
          } else if (_source237.is_Seq) {
            DAST._IType _6471___mcc_h1220 = _source237.dtor_element;
            {
              RAST._IType _6472_fromTpeGen;
              RAST._IType _out2815;
              _out2815 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6472_fromTpeGen = _out2815;
              RAST._IType _6473_toTpeGen;
              RAST._IType _out2816;
              _out2816 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6473_toTpeGen = _out2816;
              RAST._IExpr _6474_recursiveGen;
              DCOMP._IOwnership _6475_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6476_recIdents;
              RAST._IExpr _out2817;
              DCOMP._IOwnership _out2818;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2819;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2817, out _out2818, out _out2819);
              _6474_recursiveGen = _out2817;
              _6475_recOwned = _out2818;
              _6476_recIdents = _out2819;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6474_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6472_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6473_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2820;
              DCOMP._IOwnership _out2821;
              DCOMP.COMP.FromOwnership(r, _6475_recOwned, expectedOwnership, out _out2820, out _out2821);
              r = _out2820;
              resultingOwnership = _out2821;
              readIdents = _6476_recIdents;
            }
          } else if (_source237.is_Set) {
            DAST._IType _6477___mcc_h1222 = _source237.dtor_element;
            {
              RAST._IType _6478_fromTpeGen;
              RAST._IType _out2822;
              _out2822 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6478_fromTpeGen = _out2822;
              RAST._IType _6479_toTpeGen;
              RAST._IType _out2823;
              _out2823 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6479_toTpeGen = _out2823;
              RAST._IExpr _6480_recursiveGen;
              DCOMP._IOwnership _6481_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6482_recIdents;
              RAST._IExpr _out2824;
              DCOMP._IOwnership _out2825;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2826;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2824, out _out2825, out _out2826);
              _6480_recursiveGen = _out2824;
              _6481_recOwned = _out2825;
              _6482_recIdents = _out2826;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6480_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6478_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6479_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2827;
              DCOMP._IOwnership _out2828;
              DCOMP.COMP.FromOwnership(r, _6481_recOwned, expectedOwnership, out _out2827, out _out2828);
              r = _out2827;
              resultingOwnership = _out2828;
              readIdents = _6482_recIdents;
            }
          } else if (_source237.is_Multiset) {
            DAST._IType _6483___mcc_h1224 = _source237.dtor_element;
            {
              RAST._IType _6484_fromTpeGen;
              RAST._IType _out2829;
              _out2829 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6484_fromTpeGen = _out2829;
              RAST._IType _6485_toTpeGen;
              RAST._IType _out2830;
              _out2830 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6485_toTpeGen = _out2830;
              RAST._IExpr _6486_recursiveGen;
              DCOMP._IOwnership _6487_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6488_recIdents;
              RAST._IExpr _out2831;
              DCOMP._IOwnership _out2832;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2833;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2831, out _out2832, out _out2833);
              _6486_recursiveGen = _out2831;
              _6487_recOwned = _out2832;
              _6488_recIdents = _out2833;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6486_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6484_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6485_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2834;
              DCOMP._IOwnership _out2835;
              DCOMP.COMP.FromOwnership(r, _6487_recOwned, expectedOwnership, out _out2834, out _out2835);
              r = _out2834;
              resultingOwnership = _out2835;
              readIdents = _6488_recIdents;
            }
          } else if (_source237.is_Map) {
            DAST._IType _6489___mcc_h1226 = _source237.dtor_key;
            DAST._IType _6490___mcc_h1227 = _source237.dtor_value;
            {
              RAST._IType _6491_fromTpeGen;
              RAST._IType _out2836;
              _out2836 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6491_fromTpeGen = _out2836;
              RAST._IType _6492_toTpeGen;
              RAST._IType _out2837;
              _out2837 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6492_toTpeGen = _out2837;
              RAST._IExpr _6493_recursiveGen;
              DCOMP._IOwnership _6494_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6495_recIdents;
              RAST._IExpr _out2838;
              DCOMP._IOwnership _out2839;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2840;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2838, out _out2839, out _out2840);
              _6493_recursiveGen = _out2838;
              _6494_recOwned = _out2839;
              _6495_recIdents = _out2840;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6493_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6491_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6492_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2841;
              DCOMP._IOwnership _out2842;
              DCOMP.COMP.FromOwnership(r, _6494_recOwned, expectedOwnership, out _out2841, out _out2842);
              r = _out2841;
              resultingOwnership = _out2842;
              readIdents = _6495_recIdents;
            }
          } else if (_source237.is_SetBuilder) {
            DAST._IType _6496___mcc_h1230 = _source237.dtor_element;
            {
              RAST._IType _6497_fromTpeGen;
              RAST._IType _out2843;
              _out2843 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6497_fromTpeGen = _out2843;
              RAST._IType _6498_toTpeGen;
              RAST._IType _out2844;
              _out2844 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6498_toTpeGen = _out2844;
              RAST._IExpr _6499_recursiveGen;
              DCOMP._IOwnership _6500_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6501_recIdents;
              RAST._IExpr _out2845;
              DCOMP._IOwnership _out2846;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2847;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2845, out _out2846, out _out2847);
              _6499_recursiveGen = _out2845;
              _6500_recOwned = _out2846;
              _6501_recIdents = _out2847;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6499_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6497_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6498_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2848;
              DCOMP._IOwnership _out2849;
              DCOMP.COMP.FromOwnership(r, _6500_recOwned, expectedOwnership, out _out2848, out _out2849);
              r = _out2848;
              resultingOwnership = _out2849;
              readIdents = _6501_recIdents;
            }
          } else if (_source237.is_MapBuilder) {
            DAST._IType _6502___mcc_h1232 = _source237.dtor_key;
            DAST._IType _6503___mcc_h1233 = _source237.dtor_value;
            {
              RAST._IType _6504_fromTpeGen;
              RAST._IType _out2850;
              _out2850 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6504_fromTpeGen = _out2850;
              RAST._IType _6505_toTpeGen;
              RAST._IType _out2851;
              _out2851 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6505_toTpeGen = _out2851;
              RAST._IExpr _6506_recursiveGen;
              DCOMP._IOwnership _6507_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6508_recIdents;
              RAST._IExpr _out2852;
              DCOMP._IOwnership _out2853;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2854;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2852, out _out2853, out _out2854);
              _6506_recursiveGen = _out2852;
              _6507_recOwned = _out2853;
              _6508_recIdents = _out2854;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6506_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6504_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6505_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2855;
              DCOMP._IOwnership _out2856;
              DCOMP.COMP.FromOwnership(r, _6507_recOwned, expectedOwnership, out _out2855, out _out2856);
              r = _out2855;
              resultingOwnership = _out2856;
              readIdents = _6508_recIdents;
            }
          } else if (_source237.is_Arrow) {
            Dafny.ISequence<DAST._IType> _6509___mcc_h1236 = _source237.dtor_args;
            DAST._IType _6510___mcc_h1237 = _source237.dtor_result;
            {
              RAST._IType _6511_fromTpeGen;
              RAST._IType _out2857;
              _out2857 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6511_fromTpeGen = _out2857;
              RAST._IType _6512_toTpeGen;
              RAST._IType _out2858;
              _out2858 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6512_toTpeGen = _out2858;
              RAST._IExpr _6513_recursiveGen;
              DCOMP._IOwnership _6514_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6515_recIdents;
              RAST._IExpr _out2859;
              DCOMP._IOwnership _out2860;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2861;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2859, out _out2860, out _out2861);
              _6513_recursiveGen = _out2859;
              _6514_recOwned = _out2860;
              _6515_recIdents = _out2861;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6513_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6511_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6512_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2862;
              DCOMP._IOwnership _out2863;
              DCOMP.COMP.FromOwnership(r, _6514_recOwned, expectedOwnership, out _out2862, out _out2863);
              r = _out2862;
              resultingOwnership = _out2863;
              readIdents = _6515_recIdents;
            }
          } else if (_source237.is_Primitive) {
            DAST._IPrimitive _6516___mcc_h1240 = _source237.dtor_Primitive_a0;
            {
              RAST._IType _6517_fromTpeGen;
              RAST._IType _out2864;
              _out2864 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6517_fromTpeGen = _out2864;
              RAST._IType _6518_toTpeGen;
              RAST._IType _out2865;
              _out2865 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6518_toTpeGen = _out2865;
              RAST._IExpr _6519_recursiveGen;
              DCOMP._IOwnership _6520_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6521_recIdents;
              RAST._IExpr _out2866;
              DCOMP._IOwnership _out2867;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2868;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2866, out _out2867, out _out2868);
              _6519_recursiveGen = _out2866;
              _6520_recOwned = _out2867;
              _6521_recIdents = _out2868;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6519_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6517_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6518_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2869;
              DCOMP._IOwnership _out2870;
              DCOMP.COMP.FromOwnership(r, _6520_recOwned, expectedOwnership, out _out2869, out _out2870);
              r = _out2869;
              resultingOwnership = _out2870;
              readIdents = _6521_recIdents;
            }
          } else if (_source237.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _6522___mcc_h1242 = _source237.dtor_Passthrough_a0;
            {
              RAST._IType _6523_fromTpeGen;
              RAST._IType _out2871;
              _out2871 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6523_fromTpeGen = _out2871;
              RAST._IType _6524_toTpeGen;
              RAST._IType _out2872;
              _out2872 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6524_toTpeGen = _out2872;
              RAST._IExpr _6525_recursiveGen;
              DCOMP._IOwnership _6526_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6527_recIdents;
              RAST._IExpr _out2873;
              DCOMP._IOwnership _out2874;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2875;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2873, out _out2874, out _out2875);
              _6525_recursiveGen = _out2873;
              _6526_recOwned = _out2874;
              _6527_recIdents = _out2875;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6525_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6523_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6524_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2876;
              DCOMP._IOwnership _out2877;
              DCOMP.COMP.FromOwnership(r, _6526_recOwned, expectedOwnership, out _out2876, out _out2877);
              r = _out2876;
              resultingOwnership = _out2877;
              readIdents = _6527_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _6528___mcc_h1244 = _source237.dtor_TypeArg_a0;
            {
              RAST._IType _6529_fromTpeGen;
              RAST._IType _out2878;
              _out2878 = DCOMP.COMP.GenType(_3397_fromTpe, true, false);
              _6529_fromTpeGen = _out2878;
              RAST._IType _6530_toTpeGen;
              RAST._IType _out2879;
              _out2879 = DCOMP.COMP.GenType(_3398_toTpe, true, false);
              _6530_toTpeGen = _out2879;
              RAST._IExpr _6531_recursiveGen;
              DCOMP._IOwnership _6532_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6533_recIdents;
              RAST._IExpr _out2880;
              DCOMP._IOwnership _out2881;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2882;
              DCOMP.COMP.GenExpr(_3396_expr, selfIdent, env, expectedOwnership, out _out2880, out _out2881, out _out2882);
              _6531_recursiveGen = _out2880;
              _6532_recOwned = _out2881;
              _6533_recIdents = _out2882;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6531_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6529_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6530_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2883;
              DCOMP._IOwnership _out2884;
              DCOMP.COMP.FromOwnership(r, _6532_recOwned, expectedOwnership, out _out2883, out _out2884);
              r = _out2883;
              resultingOwnership = _out2884;
              readIdents = _6533_recIdents;
            }
          }
        }
      }
      return ;
    }
    public static void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source242 = e;
      if (_source242.is_Literal) {
        DAST._ILiteral _6534___mcc_h0 = _source242.dtor_Literal_a0;
        RAST._IExpr _out2885;
        DCOMP._IOwnership _out2886;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2887;
        DCOMP.COMP.GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out2885, out _out2886, out _out2887);
        r = _out2885;
        resultingOwnership = _out2886;
        readIdents = _out2887;
      } else if (_source242.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _6535___mcc_h1 = _source242.dtor_Ident_a0;
        Dafny.ISequence<Dafny.Rune> _6536_name = _6535___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _6537_rName;
          _6537_rName = DCOMP.__default.escapeIdent(_6536_name);
          r = RAST.Expr.create_Identifier(_6537_rName);
          Std.Wrappers._IOption<RAST._IType> _6538_tpe;
          _6538_tpe = (env).GetType(_6537_rName);
          Std.Wrappers._IOption<RAST._IType> _6539_placeboOpt;
          _6539_placeboOpt = (((_6538_tpe).is_Some) ? (((_6538_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
          bool _6540_currentlyBorrowed;
          _6540_currentlyBorrowed = (env).IsBorrowed(_6536_name);
          bool _6541_noNeedOfClone;
          _6541_noNeedOfClone = (env).HasCopySemantics(_6536_name);
          if ((_6539_placeboOpt).is_Some) {
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            _6540_currentlyBorrowed = false;
            _6541_noNeedOfClone = true;
          }
          if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowedMut())) {
            r = RAST.__default.BorrowMut(r);
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
            if (!(_6541_noNeedOfClone)) {
              r = RAST.__default.Clone(r);
            }
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else if (_6540_currentlyBorrowed) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          } else {
            r = RAST.__default.Borrow(r);
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_6536_name);
          return ;
        }
      } else if (_source242.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6542___mcc_h2 = _source242.dtor_Companion_a0;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6543_path = _6542___mcc_h2;
        {
          RAST._IExpr _out2888;
          _out2888 = DCOMP.COMP.GenPathExpr(_6543_path);
          r = _out2888;
          RAST._IExpr _out2889;
          DCOMP._IOwnership _out2890;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2889, out _out2890);
          r = _out2889;
          resultingOwnership = _out2890;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source242.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _6544___mcc_h3 = _source242.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IExpression> _6545_values = _6544___mcc_h3;
        {
          Dafny.ISequence<Dafny.Rune> _6546_s;
          _6546_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(");
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _6547_i;
          _6547_i = BigInteger.Zero;
          while ((_6547_i) < (new BigInteger((_6545_values).Count))) {
            if ((_6547_i).Sign == 1) {
              _6546_s = Dafny.Sequence<Dafny.Rune>.Concat(_6546_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
            }
            RAST._IExpr _6548_recursiveGen;
            DCOMP._IOwnership _6549___v104;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6550_recIdents;
            RAST._IExpr _out2891;
            DCOMP._IOwnership _out2892;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2893;
            DCOMP.COMP.GenExpr((_6545_values).Select(_6547_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2891, out _out2892, out _out2893);
            _6548_recursiveGen = _out2891;
            _6549___v104 = _out2892;
            _6550_recIdents = _out2893;
            _6546_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_6546_s, (_6548_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6550_recIdents);
            _6547_i = (_6547_i) + (BigInteger.One);
          }
          _6546_s = Dafny.Sequence<Dafny.Rune>.Concat(_6546_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          r = RAST.Expr.create_RawExpr(_6546_s);
          RAST._IExpr _out2894;
          DCOMP._IOwnership _out2895;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2894, out _out2895);
          r = _out2894;
          resultingOwnership = _out2895;
          return ;
        }
      } else if (_source242.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6551___mcc_h4 = _source242.dtor_path;
        Dafny.ISequence<DAST._IType> _6552___mcc_h5 = _source242.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _6553___mcc_h6 = _source242.dtor_args;
        Dafny.ISequence<DAST._IExpression> _6554_args = _6553___mcc_h6;
        Dafny.ISequence<DAST._IType> _6555_typeArgs = _6552___mcc_h5;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6556_path = _6551___mcc_h4;
        {
          RAST._IExpr _out2896;
          _out2896 = DCOMP.COMP.GenPathExpr(_6556_path);
          r = _out2896;
          if ((new BigInteger((_6555_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _6557_typeExprs;
            _6557_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi11 = new BigInteger((_6555_typeArgs).Count);
            for (BigInteger _6558_i = BigInteger.Zero; _6558_i < _hi11; _6558_i++) {
              RAST._IType _6559_typeExpr;
              RAST._IType _out2897;
              _out2897 = DCOMP.COMP.GenType((_6555_typeArgs).Select(_6558_i), false, false);
              _6559_typeExpr = _out2897;
              _6557_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_6557_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_6559_typeExpr));
            }
            r = (r).ApplyType(_6557_typeExprs);
          }
          r = (r).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _6560_arguments;
          _6560_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi12 = new BigInteger((_6554_args).Count);
          for (BigInteger _6561_i = BigInteger.Zero; _6561_i < _hi12; _6561_i++) {
            RAST._IExpr _6562_recursiveGen;
            DCOMP._IOwnership _6563___v105;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6564_recIdents;
            RAST._IExpr _out2898;
            DCOMP._IOwnership _out2899;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2900;
            DCOMP.COMP.GenExpr((_6554_args).Select(_6561_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2898, out _out2899, out _out2900);
            _6562_recursiveGen = _out2898;
            _6563___v105 = _out2899;
            _6564_recIdents = _out2900;
            _6560_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_6560_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_6562_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6564_recIdents);
          }
          r = (r).Apply(_6560_arguments);
          r = RAST.__default.RcNew(r);
          RAST._IExpr _out2901;
          DCOMP._IOwnership _out2902;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2901, out _out2902);
          r = _out2901;
          resultingOwnership = _out2902;
          return ;
        }
      } else if (_source242.is_NewArray) {
        Dafny.ISequence<DAST._IExpression> _6565___mcc_h7 = _source242.dtor_dims;
        DAST._IType _6566___mcc_h8 = _source242.dtor_typ;
        DAST._IType _6567_typ = _6566___mcc_h8;
        Dafny.ISequence<DAST._IExpression> _6568_dims = _6565___mcc_h7;
        {
          BigInteger _6569_i;
          _6569_i = (new BigInteger((_6568_dims).Count)) - (BigInteger.One);
          RAST._IType _6570_genTyp;
          RAST._IType _out2903;
          _out2903 = DCOMP.COMP.GenType(_6567_typ, false, false);
          _6570_genTyp = _out2903;
          Dafny.ISequence<Dafny.Rune> _6571_s;
          _6571_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_6570_genTyp)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::std::default::Default>::default()"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          while ((_6569_i).Sign != -1) {
            RAST._IExpr _6572_recursiveGen;
            DCOMP._IOwnership _6573___v106;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6574_recIdents;
            RAST._IExpr _out2904;
            DCOMP._IOwnership _out2905;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2906;
            DCOMP.COMP.GenExpr((_6568_dims).Select(_6569_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2904, out _out2905, out _out2906);
            _6572_recursiveGen = _out2904;
            _6573___v106 = _out2905;
            _6574_recIdents = _out2906;
            _6571_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(::std::cell::RefCell::new(vec!["), _6571_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("; <usize as ::dafny_runtime::NumCast>::from(")), (_6572_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()]))"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6574_recIdents);
            _6569_i = (_6569_i) - (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(_6571_s);
          RAST._IExpr _out2907;
          DCOMP._IOwnership _out2908;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2907, out _out2908);
          r = _out2907;
          resultingOwnership = _out2908;
          return ;
        }
      } else if (_source242.is_DatatypeValue) {
        DAST._IDatatypeType _6575___mcc_h9 = _source242.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _6576___mcc_h10 = _source242.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _6577___mcc_h11 = _source242.dtor_variant;
        bool _6578___mcc_h12 = _source242.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _6579___mcc_h13 = _source242.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _6580_values = _6579___mcc_h13;
        bool _6581_isCo = _6578___mcc_h12;
        Dafny.ISequence<Dafny.Rune> _6582_variant = _6577___mcc_h11;
        Dafny.ISequence<DAST._IType> _6583_typeArgs = _6576___mcc_h10;
        DAST._IDatatypeType _6584_datatypeType = _6575___mcc_h9;
        {
          RAST._IExpr _out2909;
          _out2909 = DCOMP.COMP.GenPathExpr((_6584_datatypeType).dtor_path);
          r = _out2909;
          Dafny.ISequence<RAST._IType> _6585_genTypeArgs;
          _6585_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi13 = new BigInteger((_6583_typeArgs).Count);
          for (BigInteger _6586_i = BigInteger.Zero; _6586_i < _hi13; _6586_i++) {
            RAST._IType _6587_typeExpr;
            RAST._IType _out2910;
            _out2910 = DCOMP.COMP.GenType((_6583_typeArgs).Select(_6586_i), false, false);
            _6587_typeExpr = _out2910;
            _6585_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_6585_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_6587_typeExpr));
          }
          if ((new BigInteger((_6583_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_6585_genTypeArgs);
          }
          r = (r).MSel(DCOMP.__default.escapeIdent(_6582_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _6588_assignments;
          _6588_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi14 = new BigInteger((_6580_values).Count);
          for (BigInteger _6589_i = BigInteger.Zero; _6589_i < _hi14; _6589_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs52 = (_6580_values).Select(_6589_i);
            Dafny.ISequence<Dafny.Rune> _6590_name = _let_tmp_rhs52.dtor__0;
            DAST._IExpression _6591_value = _let_tmp_rhs52.dtor__1;
            if (_6581_isCo) {
              RAST._IExpr _6592_recursiveGen;
              DCOMP._IOwnership _6593___v107;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6594_recIdents;
              RAST._IExpr _out2911;
              DCOMP._IOwnership _out2912;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2913;
              DCOMP.COMP.GenExpr(_6591_value, selfIdent, DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out2911, out _out2912, out _out2913);
              _6592_recursiveGen = _out2911;
              _6593___v107 = _out2912;
              _6594_recIdents = _out2913;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6594_recIdents);
              Dafny.ISequence<Dafny.Rune> _6595_allReadCloned;
              _6595_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_6594_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _6596_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_2 in (_6594_recIdents).Elements) {
                  _6596_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_2;
                  if ((_6594_recIdents).Contains(_6596_next)) {
                    goto after__ASSIGN_SUCH_THAT_2;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 2972)");
              after__ASSIGN_SUCH_THAT_2: ;
                _6595_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_6595_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent(_6596_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMP.__default.escapeIdent(_6596_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _6594_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_6594_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_6596_next));
              }
              Dafny.ISequence<Dafny.Rune> _6597_assigned;
              _6597_assigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _6595_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_6592_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _6588_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_6588_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_6590_name), RAST.Expr.create_RawExpr(_6597_assigned))));
            } else {
              RAST._IExpr _6598_recursiveGen;
              DCOMP._IOwnership _6599___v108;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6600_recIdents;
              RAST._IExpr _out2914;
              DCOMP._IOwnership _out2915;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2916;
              DCOMP.COMP.GenExpr(_6591_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2914, out _out2915, out _out2916);
              _6598_recursiveGen = _out2914;
              _6599___v108 = _out2915;
              _6600_recIdents = _out2916;
              _6588_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_6588_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_6590_name), _6598_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6600_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _6588_assignments);
          if (DCOMP.COMP.IsRcWrapped((_6584_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out2917;
          DCOMP._IOwnership _out2918;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2917, out _out2918);
          r = _out2917;
          resultingOwnership = _out2918;
          return ;
        }
      } else if (_source242.is_Convert) {
        DAST._IExpression _6601___mcc_h14 = _source242.dtor_value;
        DAST._IType _6602___mcc_h15 = _source242.dtor_from;
        DAST._IType _6603___mcc_h16 = _source242.dtor_typ;
        {
          RAST._IExpr _out2919;
          DCOMP._IOwnership _out2920;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2921;
          DCOMP.COMP.GenExprConvert(e, selfIdent, env, expectedOwnership, out _out2919, out _out2920, out _out2921);
          r = _out2919;
          resultingOwnership = _out2920;
          readIdents = _out2921;
        }
      } else if (_source242.is_SeqConstruct) {
        DAST._IExpression _6604___mcc_h17 = _source242.dtor_length;
        DAST._IExpression _6605___mcc_h18 = _source242.dtor_elem;
        DAST._IExpression _6606_expr = _6605___mcc_h18;
        DAST._IExpression _6607_length = _6604___mcc_h17;
        {
          RAST._IExpr _6608_recursiveGen;
          DCOMP._IOwnership _6609___v112;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6610_recIdents;
          RAST._IExpr _out2922;
          DCOMP._IOwnership _out2923;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2924;
          DCOMP.COMP.GenExpr(_6606_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2922, out _out2923, out _out2924);
          _6608_recursiveGen = _out2922;
          _6609___v112 = _out2923;
          _6610_recIdents = _out2924;
          RAST._IExpr _6611_lengthGen;
          DCOMP._IOwnership _6612___v113;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6613_lengthIdents;
          RAST._IExpr _out2925;
          DCOMP._IOwnership _out2926;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2927;
          DCOMP.COMP.GenExpr(_6607_length, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2925, out _out2926, out _out2927);
          _6611_lengthGen = _out2925;
          _6612___v113 = _out2926;
          _6613_lengthIdents = _out2927;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_6608_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_6611_lengthGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer.0(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_6610_recIdents, _6613_lengthIdents);
          RAST._IExpr _out2928;
          DCOMP._IOwnership _out2929;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2928, out _out2929);
          r = _out2928;
          resultingOwnership = _out2929;
          return ;
        }
      } else if (_source242.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _6614___mcc_h19 = _source242.dtor_elements;
        DAST._IType _6615___mcc_h20 = _source242.dtor_typ;
        DAST._IType _6616_typ = _6615___mcc_h20;
        Dafny.ISequence<DAST._IExpression> _6617_exprs = _6614___mcc_h19;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _6618_genTpe;
          RAST._IType _out2930;
          _out2930 = DCOMP.COMP.GenType(_6616_typ, false, false);
          _6618_genTpe = _out2930;
          BigInteger _6619_i;
          _6619_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _6620_args;
          _6620_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_6619_i) < (new BigInteger((_6617_exprs).Count))) {
            RAST._IExpr _6621_recursiveGen;
            DCOMP._IOwnership _6622___v114;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6623_recIdents;
            RAST._IExpr _out2931;
            DCOMP._IOwnership _out2932;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2933;
            DCOMP.COMP.GenExpr((_6617_exprs).Select(_6619_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2931, out _out2932, out _out2933);
            _6621_recursiveGen = _out2931;
            _6622___v114 = _out2932;
            _6623_recIdents = _out2933;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6623_recIdents);
            _6620_args = Dafny.Sequence<RAST._IExpr>.Concat(_6620_args, Dafny.Sequence<RAST._IExpr>.FromElements(_6621_recursiveGen));
            _6619_i = (_6619_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_6620_args);
          if ((new BigInteger((_6620_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_6618_genTpe));
          }
          RAST._IExpr _out2934;
          DCOMP._IOwnership _out2935;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2934, out _out2935);
          r = _out2934;
          resultingOwnership = _out2935;
          return ;
        }
      } else if (_source242.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _6624___mcc_h21 = _source242.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _6625_exprs = _6624___mcc_h21;
        {
          Dafny.ISequence<RAST._IExpr> _6626_generatedValues;
          _6626_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _6627_i;
          _6627_i = BigInteger.Zero;
          while ((_6627_i) < (new BigInteger((_6625_exprs).Count))) {
            RAST._IExpr _6628_recursiveGen;
            DCOMP._IOwnership _6629___v115;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6630_recIdents;
            RAST._IExpr _out2936;
            DCOMP._IOwnership _out2937;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2938;
            DCOMP.COMP.GenExpr((_6625_exprs).Select(_6627_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2936, out _out2937, out _out2938);
            _6628_recursiveGen = _out2936;
            _6629___v115 = _out2937;
            _6630_recIdents = _out2938;
            _6626_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_6626_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_6628_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6630_recIdents);
            _6627_i = (_6627_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_6626_generatedValues);
          RAST._IExpr _out2939;
          DCOMP._IOwnership _out2940;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2939, out _out2940);
          r = _out2939;
          resultingOwnership = _out2940;
          return ;
        }
      } else if (_source242.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _6631___mcc_h22 = _source242.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _6632_exprs = _6631___mcc_h22;
        {
          Dafny.ISequence<RAST._IExpr> _6633_generatedValues;
          _6633_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _6634_i;
          _6634_i = BigInteger.Zero;
          while ((_6634_i) < (new BigInteger((_6632_exprs).Count))) {
            RAST._IExpr _6635_recursiveGen;
            DCOMP._IOwnership _6636___v116;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6637_recIdents;
            RAST._IExpr _out2941;
            DCOMP._IOwnership _out2942;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2943;
            DCOMP.COMP.GenExpr((_6632_exprs).Select(_6634_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2941, out _out2942, out _out2943);
            _6635_recursiveGen = _out2941;
            _6636___v116 = _out2942;
            _6637_recIdents = _out2943;
            _6633_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_6633_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_6635_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6637_recIdents);
            _6634_i = (_6634_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_6633_generatedValues);
          RAST._IExpr _out2944;
          DCOMP._IOwnership _out2945;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2944, out _out2945);
          r = _out2944;
          resultingOwnership = _out2945;
          return ;
        }
      } else if (_source242.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _6638___mcc_h23 = _source242.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _6639_mapElems = _6638___mcc_h23;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _6640_generatedValues;
          _6640_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _6641_i;
          _6641_i = BigInteger.Zero;
          while ((_6641_i) < (new BigInteger((_6639_mapElems).Count))) {
            RAST._IExpr _6642_recursiveGenKey;
            DCOMP._IOwnership _6643___v118;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6644_recIdentsKey;
            RAST._IExpr _out2946;
            DCOMP._IOwnership _out2947;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2948;
            DCOMP.COMP.GenExpr(((_6639_mapElems).Select(_6641_i)).dtor__0, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2946, out _out2947, out _out2948);
            _6642_recursiveGenKey = _out2946;
            _6643___v118 = _out2947;
            _6644_recIdentsKey = _out2948;
            RAST._IExpr _6645_recursiveGenValue;
            DCOMP._IOwnership _6646___v119;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6647_recIdentsValue;
            RAST._IExpr _out2949;
            DCOMP._IOwnership _out2950;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2951;
            DCOMP.COMP.GenExpr(((_6639_mapElems).Select(_6641_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2949, out _out2950, out _out2951);
            _6645_recursiveGenValue = _out2949;
            _6646___v119 = _out2950;
            _6647_recIdentsValue = _out2951;
            _6640_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_6640_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_6642_recursiveGenKey, _6645_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6644_recIdentsKey), _6647_recIdentsValue);
            _6641_i = (_6641_i) + (BigInteger.One);
          }
          _6641_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _6648_arguments;
          _6648_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_6641_i) < (new BigInteger((_6640_generatedValues).Count))) {
            RAST._IExpr _6649_genKey;
            _6649_genKey = ((_6640_generatedValues).Select(_6641_i)).dtor__0;
            RAST._IExpr _6650_genValue;
            _6650_genValue = ((_6640_generatedValues).Select(_6641_i)).dtor__1;
            _6648_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_6648_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _6649_genKey, _6650_genValue, DAST.Format.BinOpFormat.create_NoFormat())));
            _6641_i = (_6641_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_6648_arguments);
          RAST._IExpr _out2952;
          DCOMP._IOwnership _out2953;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2952, out _out2953);
          r = _out2952;
          resultingOwnership = _out2953;
          return ;
        }
      } else if (_source242.is_MapBuilder) {
        DAST._IType _6651___mcc_h24 = _source242.dtor_keyType;
        DAST._IType _6652___mcc_h25 = _source242.dtor_valueType;
        DAST._IType _6653_valueType = _6652___mcc_h25;
        DAST._IType _6654_keyType = _6651___mcc_h24;
        {
          RAST._IType _6655_kType;
          RAST._IType _out2954;
          _out2954 = DCOMP.COMP.GenType(_6654_keyType, false, false);
          _6655_kType = _out2954;
          RAST._IType _6656_vType;
          RAST._IType _out2955;
          _out2955 = DCOMP.COMP.GenType(_6653_valueType, false, false);
          _6656_vType = _out2955;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::MapBuilder::<"), (_6655_kType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_6656_vType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out2956;
          DCOMP._IOwnership _out2957;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2956, out _out2957);
          r = _out2956;
          resultingOwnership = _out2957;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source242.is_SeqUpdate) {
        DAST._IExpression _6657___mcc_h26 = _source242.dtor_expr;
        DAST._IExpression _6658___mcc_h27 = _source242.dtor_indexExpr;
        DAST._IExpression _6659___mcc_h28 = _source242.dtor_value;
        DAST._IExpression _6660_value = _6659___mcc_h28;
        DAST._IExpression _6661_index = _6658___mcc_h27;
        DAST._IExpression _6662_expr = _6657___mcc_h26;
        {
          RAST._IExpr _6663_exprR;
          DCOMP._IOwnership _6664___v120;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6665_exprIdents;
          RAST._IExpr _out2958;
          DCOMP._IOwnership _out2959;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2960;
          DCOMP.COMP.GenExpr(_6662_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2958, out _out2959, out _out2960);
          _6663_exprR = _out2958;
          _6664___v120 = _out2959;
          _6665_exprIdents = _out2960;
          RAST._IExpr _6666_indexR;
          DCOMP._IOwnership _6667_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6668_indexIdents;
          RAST._IExpr _out2961;
          DCOMP._IOwnership _out2962;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2963;
          DCOMP.COMP.GenExpr(_6661_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2961, out _out2962, out _out2963);
          _6666_indexR = _out2961;
          _6667_indexOwnership = _out2962;
          _6668_indexIdents = _out2963;
          RAST._IExpr _6669_valueR;
          DCOMP._IOwnership _6670_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6671_valueIdents;
          RAST._IExpr _out2964;
          DCOMP._IOwnership _out2965;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2966;
          DCOMP.COMP.GenExpr(_6660_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2964, out _out2965, out _out2966);
          _6669_valueR = _out2964;
          _6670_valueOwnership = _out2965;
          _6671_valueIdents = _out2966;
          r = ((_6663_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6666_indexR, _6669_valueR));
          RAST._IExpr _out2967;
          DCOMP._IOwnership _out2968;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2967, out _out2968);
          r = _out2967;
          resultingOwnership = _out2968;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_6665_exprIdents, _6668_indexIdents), _6671_valueIdents);
          return ;
        }
      } else if (_source242.is_MapUpdate) {
        DAST._IExpression _6672___mcc_h29 = _source242.dtor_expr;
        DAST._IExpression _6673___mcc_h30 = _source242.dtor_indexExpr;
        DAST._IExpression _6674___mcc_h31 = _source242.dtor_value;
        DAST._IExpression _6675_value = _6674___mcc_h31;
        DAST._IExpression _6676_index = _6673___mcc_h30;
        DAST._IExpression _6677_expr = _6672___mcc_h29;
        {
          RAST._IExpr _6678_exprR;
          DCOMP._IOwnership _6679___v121;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6680_exprIdents;
          RAST._IExpr _out2969;
          DCOMP._IOwnership _out2970;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2971;
          DCOMP.COMP.GenExpr(_6677_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2969, out _out2970, out _out2971);
          _6678_exprR = _out2969;
          _6679___v121 = _out2970;
          _6680_exprIdents = _out2971;
          RAST._IExpr _6681_indexR;
          DCOMP._IOwnership _6682_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6683_indexIdents;
          RAST._IExpr _out2972;
          DCOMP._IOwnership _out2973;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2974;
          DCOMP.COMP.GenExpr(_6676_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2972, out _out2973, out _out2974);
          _6681_indexR = _out2972;
          _6682_indexOwnership = _out2973;
          _6683_indexIdents = _out2974;
          RAST._IExpr _6684_valueR;
          DCOMP._IOwnership _6685_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6686_valueIdents;
          RAST._IExpr _out2975;
          DCOMP._IOwnership _out2976;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2977;
          DCOMP.COMP.GenExpr(_6675_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2975, out _out2976, out _out2977);
          _6684_valueR = _out2975;
          _6685_valueOwnership = _out2976;
          _6686_valueIdents = _out2977;
          r = ((_6678_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6681_indexR, _6684_valueR));
          RAST._IExpr _out2978;
          DCOMP._IOwnership _out2979;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2978, out _out2979);
          r = _out2978;
          resultingOwnership = _out2979;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_6680_exprIdents, _6683_indexIdents), _6686_valueIdents);
          return ;
        }
      } else if (_source242.is_SetBuilder) {
        DAST._IType _6687___mcc_h32 = _source242.dtor_elemType;
        DAST._IType _6688_elemType = _6687___mcc_h32;
        {
          RAST._IType _6689_eType;
          RAST._IType _out2980;
          _out2980 = DCOMP.COMP.GenType(_6688_elemType, false, false);
          _6689_eType = _out2980;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::SetBuilder::<"), (_6689_eType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out2981;
          DCOMP._IOwnership _out2982;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2981, out _out2982);
          r = _out2981;
          resultingOwnership = _out2982;
          return ;
        }
      } else if (_source242.is_ToMultiset) {
        DAST._IExpression _6690___mcc_h33 = _source242.dtor_ToMultiset_a0;
        DAST._IExpression _6691_expr = _6690___mcc_h33;
        {
          RAST._IExpr _6692_recursiveGen;
          DCOMP._IOwnership _6693___v117;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6694_recIdents;
          RAST._IExpr _out2983;
          DCOMP._IOwnership _out2984;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2985;
          DCOMP.COMP.GenExpr(_6691_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2983, out _out2984, out _out2985);
          _6692_recursiveGen = _out2983;
          _6693___v117 = _out2984;
          _6694_recIdents = _out2985;
          r = ((_6692_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _6694_recIdents;
          RAST._IExpr _out2986;
          DCOMP._IOwnership _out2987;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2986, out _out2987);
          r = _out2986;
          resultingOwnership = _out2987;
          return ;
        }
      } else if (_source242.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source243 = selfIdent;
          if (_source243.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out2988;
              DCOMP._IOwnership _out2989;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2988, out _out2989);
              r = _out2988;
              resultingOwnership = _out2989;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _6695___mcc_h273 = _source243.dtor_value;
            Dafny.ISequence<Dafny.Rune> _6696_id = _6695___mcc_h273;
            {
              r = RAST.Expr.create_RawExpr(_6696_id);
              if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
                r = RAST.__default.Clone(r);
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_6696_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_6696_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_6696_id);
            }
          }
          return ;
        }
      } else if (_source242.is_Ite) {
        DAST._IExpression _6697___mcc_h34 = _source242.dtor_cond;
        DAST._IExpression _6698___mcc_h35 = _source242.dtor_thn;
        DAST._IExpression _6699___mcc_h36 = _source242.dtor_els;
        DAST._IExpression _6700_f = _6699___mcc_h36;
        DAST._IExpression _6701_t = _6698___mcc_h35;
        DAST._IExpression _6702_cond = _6697___mcc_h34;
        {
          RAST._IExpr _6703_cond;
          DCOMP._IOwnership _6704___v122;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6705_recIdentsCond;
          RAST._IExpr _out2990;
          DCOMP._IOwnership _out2991;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2992;
          DCOMP.COMP.GenExpr(_6702_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2990, out _out2991, out _out2992);
          _6703_cond = _out2990;
          _6704___v122 = _out2991;
          _6705_recIdentsCond = _out2992;
          Dafny.ISequence<Dafny.Rune> _6706_condString;
          _6706_condString = (_6703_cond)._ToString(DCOMP.__default.IND);
          RAST._IExpr _6707___v123;
          DCOMP._IOwnership _6708_tHasToBeOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6709___v124;
          RAST._IExpr _out2993;
          DCOMP._IOwnership _out2994;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2995;
          DCOMP.COMP.GenExpr(_6701_t, selfIdent, env, expectedOwnership, out _out2993, out _out2994, out _out2995);
          _6707___v123 = _out2993;
          _6708_tHasToBeOwned = _out2994;
          _6709___v124 = _out2995;
          RAST._IExpr _6710_fExpr;
          DCOMP._IOwnership _6711_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6712_recIdentsF;
          RAST._IExpr _out2996;
          DCOMP._IOwnership _out2997;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2998;
          DCOMP.COMP.GenExpr(_6700_f, selfIdent, env, _6708_tHasToBeOwned, out _out2996, out _out2997, out _out2998);
          _6710_fExpr = _out2996;
          _6711_fOwned = _out2997;
          _6712_recIdentsF = _out2998;
          Dafny.ISequence<Dafny.Rune> _6713_fString;
          _6713_fString = (_6710_fExpr)._ToString(DCOMP.__default.IND);
          RAST._IExpr _6714_tExpr;
          DCOMP._IOwnership _6715___v125;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6716_recIdentsT;
          RAST._IExpr _out2999;
          DCOMP._IOwnership _out3000;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3001;
          DCOMP.COMP.GenExpr(_6701_t, selfIdent, env, _6711_fOwned, out _out2999, out _out3000, out _out3001);
          _6714_tExpr = _out2999;
          _6715___v125 = _out3000;
          _6716_recIdentsT = _out3001;
          Dafny.ISequence<Dafny.Rune> _6717_tString;
          _6717_tString = (_6714_tExpr)._ToString(DCOMP.__default.IND);
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(if "), _6706_condString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), _6717_tString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n} else {\n")), _6713_fString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})")));
          RAST._IExpr _out3002;
          DCOMP._IOwnership _out3003;
          DCOMP.COMP.FromOwnership(r, _6711_fOwned, expectedOwnership, out _out3002, out _out3003);
          r = _out3002;
          resultingOwnership = _out3003;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_6705_recIdentsCond, _6716_recIdentsT), _6712_recIdentsF);
          return ;
        }
      } else if (_source242.is_UnOp) {
        DAST._IUnaryOp _6718___mcc_h37 = _source242.dtor_unOp;
        DAST._IExpression _6719___mcc_h38 = _source242.dtor_expr;
        DAST.Format._IUnOpFormat _6720___mcc_h39 = _source242.dtor_format1;
        DAST._IUnaryOp _source244 = _6718___mcc_h37;
        if (_source244.is_Not) {
          DAST.Format._IUnOpFormat _6721_format = _6720___mcc_h39;
          DAST._IExpression _6722_e = _6719___mcc_h38;
          {
            RAST._IExpr _6723_recursiveGen;
            DCOMP._IOwnership _6724___v126;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6725_recIdents;
            RAST._IExpr _out3004;
            DCOMP._IOwnership _out3005;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3006;
            DCOMP.COMP.GenExpr(_6722_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3004, out _out3005, out _out3006);
            _6723_recursiveGen = _out3004;
            _6724___v126 = _out3005;
            _6725_recIdents = _out3006;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _6723_recursiveGen, _6721_format);
            RAST._IExpr _out3007;
            DCOMP._IOwnership _out3008;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3007, out _out3008);
            r = _out3007;
            resultingOwnership = _out3008;
            readIdents = _6725_recIdents;
            return ;
          }
        } else if (_source244.is_BitwiseNot) {
          DAST.Format._IUnOpFormat _6726_format = _6720___mcc_h39;
          DAST._IExpression _6727_e = _6719___mcc_h38;
          {
            RAST._IExpr _6728_recursiveGen;
            DCOMP._IOwnership _6729___v127;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6730_recIdents;
            RAST._IExpr _out3009;
            DCOMP._IOwnership _out3010;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3011;
            DCOMP.COMP.GenExpr(_6727_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3009, out _out3010, out _out3011);
            _6728_recursiveGen = _out3009;
            _6729___v127 = _out3010;
            _6730_recIdents = _out3011;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _6728_recursiveGen, _6726_format);
            RAST._IExpr _out3012;
            DCOMP._IOwnership _out3013;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3012, out _out3013);
            r = _out3012;
            resultingOwnership = _out3013;
            readIdents = _6730_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnOpFormat _6731_format = _6720___mcc_h39;
          DAST._IExpression _6732_e = _6719___mcc_h38;
          {
            RAST._IExpr _6733_recursiveGen;
            DCOMP._IOwnership _6734_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6735_recIdents;
            RAST._IExpr _out3014;
            DCOMP._IOwnership _out3015;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3016;
            DCOMP.COMP.GenExpr(_6732_e, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3014, out _out3015, out _out3016);
            _6733_recursiveGen = _out3014;
            _6734_recOwned = _out3015;
            _6735_recIdents = _out3016;
            r = ((_6733_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out3017;
            DCOMP._IOwnership _out3018;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3017, out _out3018);
            r = _out3017;
            resultingOwnership = _out3018;
            readIdents = _6735_recIdents;
            return ;
          }
        }
      } else if (_source242.is_BinOp) {
        DAST._IBinOp _6736___mcc_h40 = _source242.dtor_op;
        DAST._IExpression _6737___mcc_h41 = _source242.dtor_left;
        DAST._IExpression _6738___mcc_h42 = _source242.dtor_right;
        DAST.Format._IBinOpFormat _6739___mcc_h43 = _source242.dtor_format2;
        RAST._IExpr _out3019;
        DCOMP._IOwnership _out3020;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3021;
        DCOMP.COMP.GenExprBinary(e, selfIdent, env, expectedOwnership, out _out3019, out _out3020, out _out3021);
        r = _out3019;
        resultingOwnership = _out3020;
        readIdents = _out3021;
      } else if (_source242.is_ArrayLen) {
        DAST._IExpression _6740___mcc_h44 = _source242.dtor_expr;
        BigInteger _6741___mcc_h45 = _source242.dtor_dim;
        BigInteger _6742_dim = _6741___mcc_h45;
        DAST._IExpression _6743_expr = _6740___mcc_h44;
        {
          RAST._IExpr _6744_recursiveGen;
          DCOMP._IOwnership _6745___v132;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6746_recIdents;
          RAST._IExpr _out3022;
          DCOMP._IOwnership _out3023;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3024;
          DCOMP.COMP.GenExpr(_6743_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3022, out _out3023, out _out3024);
          _6744_recursiveGen = _out3022;
          _6745___v132 = _out3023;
          _6746_recIdents = _out3024;
          if ((_6742_dim).Sign == 0) {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(("), (_6744_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").borrow().len())")));
          } else {
            Dafny.ISequence<Dafny.Rune> _6747_s;
            _6747_s = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(m.borrow().len())")))._ToString(DCOMP.__default.IND);
            BigInteger _6748_i;
            _6748_i = BigInteger.One;
            while ((_6748_i) < (_6742_dim)) {
              _6747_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("m.borrow().get(0).map(|m| "), _6747_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"));
              _6748_i = (_6748_i) + (BigInteger.One);
            }
            r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6744_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow().get(0).map(|m| ")), _6747_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"))));
          }
          RAST._IExpr _out3025;
          DCOMP._IOwnership _out3026;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3025, out _out3026);
          r = _out3025;
          resultingOwnership = _out3026;
          readIdents = _6746_recIdents;
          return ;
        }
      } else if (_source242.is_MapKeys) {
        DAST._IExpression _6749___mcc_h46 = _source242.dtor_expr;
        DAST._IExpression _6750_expr = _6749___mcc_h46;
        {
          RAST._IExpr _6751_recursiveGen;
          DCOMP._IOwnership _6752___v133;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6753_recIdents;
          RAST._IExpr _out3027;
          DCOMP._IOwnership _out3028;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3029;
          DCOMP.COMP.GenExpr(_6750_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3027, out _out3028, out _out3029);
          _6751_recursiveGen = _out3027;
          _6752___v133 = _out3028;
          _6753_recIdents = _out3029;
          readIdents = _6753_recIdents;
          r = ((_6751_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out3030;
          DCOMP._IOwnership _out3031;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3030, out _out3031);
          r = _out3030;
          resultingOwnership = _out3031;
          return ;
        }
      } else if (_source242.is_MapValues) {
        DAST._IExpression _6754___mcc_h47 = _source242.dtor_expr;
        DAST._IExpression _6755_expr = _6754___mcc_h47;
        {
          RAST._IExpr _6756_recursiveGen;
          DCOMP._IOwnership _6757___v134;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6758_recIdents;
          RAST._IExpr _out3032;
          DCOMP._IOwnership _out3033;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3034;
          DCOMP.COMP.GenExpr(_6755_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3032, out _out3033, out _out3034);
          _6756_recursiveGen = _out3032;
          _6757___v134 = _out3033;
          _6758_recIdents = _out3034;
          readIdents = _6758_recIdents;
          r = ((_6756_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out3035;
          DCOMP._IOwnership _out3036;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3035, out _out3036);
          r = _out3035;
          resultingOwnership = _out3036;
          return ;
        }
      } else if (_source242.is_Select) {
        DAST._IExpression _6759___mcc_h48 = _source242.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _6760___mcc_h49 = _source242.dtor_field;
        bool _6761___mcc_h50 = _source242.dtor_isConstant;
        bool _6762___mcc_h51 = _source242.dtor_onDatatype;
        DAST._IExpression _source245 = _6759___mcc_h48;
        if (_source245.is_Literal) {
          DAST._ILiteral _6763___mcc_h52 = _source245.dtor_Literal_a0;
          bool _6764_isDatatype = _6762___mcc_h51;
          bool _6765_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6766_field = _6760___mcc_h49;
          DAST._IExpression _6767_on = _6759___mcc_h48;
          {
            RAST._IExpr _6768_onExpr;
            DCOMP._IOwnership _6769_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6770_recIdents;
            RAST._IExpr _out3037;
            DCOMP._IOwnership _out3038;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3039;
            DCOMP.COMP.GenExpr(_6767_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3037, out _out3038, out _out3039);
            _6768_onExpr = _out3037;
            _6769_onOwned = _out3038;
            _6770_recIdents = _out3039;
            if ((_6764_isDatatype) || (_6765_isConstant)) {
              r = ((_6768_onExpr).Sel(DCOMP.__default.escapeIdent(_6766_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3040;
              DCOMP._IOwnership _out3041;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3040, out _out3041);
              r = _out3040;
              resultingOwnership = _out3041;
            } else {
              Dafny.ISequence<Dafny.Rune> _6771_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6771_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6768_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6766_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3042;
              DCOMP._IOwnership _out3043;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6771_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3042, out _out3043);
              r = _out3042;
              resultingOwnership = _out3043;
            }
            readIdents = _6770_recIdents;
            return ;
          }
        } else if (_source245.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _6772___mcc_h54 = _source245.dtor_Ident_a0;
          bool _6773_isDatatype = _6762___mcc_h51;
          bool _6774_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6775_field = _6760___mcc_h49;
          DAST._IExpression _6776_on = _6759___mcc_h48;
          {
            RAST._IExpr _6777_onExpr;
            DCOMP._IOwnership _6778_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6779_recIdents;
            RAST._IExpr _out3044;
            DCOMP._IOwnership _out3045;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3046;
            DCOMP.COMP.GenExpr(_6776_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3044, out _out3045, out _out3046);
            _6777_onExpr = _out3044;
            _6778_onOwned = _out3045;
            _6779_recIdents = _out3046;
            if ((_6773_isDatatype) || (_6774_isConstant)) {
              r = ((_6777_onExpr).Sel(DCOMP.__default.escapeIdent(_6775_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3047;
              DCOMP._IOwnership _out3048;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3047, out _out3048);
              r = _out3047;
              resultingOwnership = _out3048;
            } else {
              Dafny.ISequence<Dafny.Rune> _6780_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6780_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6777_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6775_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3049;
              DCOMP._IOwnership _out3050;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6780_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3049, out _out3050);
              r = _out3049;
              resultingOwnership = _out3050;
            }
            readIdents = _6779_recIdents;
            return ;
          }
        } else if (_source245.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6781___mcc_h56 = _source245.dtor_Companion_a0;
          bool _6782_isDatatype = _6762___mcc_h51;
          bool _6783_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6784_field = _6760___mcc_h49;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6785_c = _6781___mcc_h56;
          {
            RAST._IExpr _6786_onExpr;
            DCOMP._IOwnership _6787_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6788_recIdents;
            RAST._IExpr _out3051;
            DCOMP._IOwnership _out3052;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3053;
            DCOMP.COMP.GenExpr(DAST.Expression.create_Companion(_6785_c), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3051, out _out3052, out _out3053);
            _6786_onExpr = _out3051;
            _6787_onOwned = _out3052;
            _6788_recIdents = _out3053;
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6786_onExpr)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent(_6784_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("()")));
            RAST._IExpr _out3054;
            DCOMP._IOwnership _out3055;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3054, out _out3055);
            r = _out3054;
            resultingOwnership = _out3055;
            readIdents = _6788_recIdents;
            return ;
          }
        } else if (_source245.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _6789___mcc_h58 = _source245.dtor_Tuple_a0;
          bool _6790_isDatatype = _6762___mcc_h51;
          bool _6791_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6792_field = _6760___mcc_h49;
          DAST._IExpression _6793_on = _6759___mcc_h48;
          {
            RAST._IExpr _6794_onExpr;
            DCOMP._IOwnership _6795_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6796_recIdents;
            RAST._IExpr _out3056;
            DCOMP._IOwnership _out3057;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3058;
            DCOMP.COMP.GenExpr(_6793_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3056, out _out3057, out _out3058);
            _6794_onExpr = _out3056;
            _6795_onOwned = _out3057;
            _6796_recIdents = _out3058;
            if ((_6790_isDatatype) || (_6791_isConstant)) {
              r = ((_6794_onExpr).Sel(DCOMP.__default.escapeIdent(_6792_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3059;
              DCOMP._IOwnership _out3060;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3059, out _out3060);
              r = _out3059;
              resultingOwnership = _out3060;
            } else {
              Dafny.ISequence<Dafny.Rune> _6797_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6797_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6794_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6792_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3061;
              DCOMP._IOwnership _out3062;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6797_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3061, out _out3062);
              r = _out3061;
              resultingOwnership = _out3062;
            }
            readIdents = _6796_recIdents;
            return ;
          }
        } else if (_source245.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6798___mcc_h60 = _source245.dtor_path;
          Dafny.ISequence<DAST._IType> _6799___mcc_h61 = _source245.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _6800___mcc_h62 = _source245.dtor_args;
          bool _6801_isDatatype = _6762___mcc_h51;
          bool _6802_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6803_field = _6760___mcc_h49;
          DAST._IExpression _6804_on = _6759___mcc_h48;
          {
            RAST._IExpr _6805_onExpr;
            DCOMP._IOwnership _6806_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6807_recIdents;
            RAST._IExpr _out3063;
            DCOMP._IOwnership _out3064;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3065;
            DCOMP.COMP.GenExpr(_6804_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3063, out _out3064, out _out3065);
            _6805_onExpr = _out3063;
            _6806_onOwned = _out3064;
            _6807_recIdents = _out3065;
            if ((_6801_isDatatype) || (_6802_isConstant)) {
              r = ((_6805_onExpr).Sel(DCOMP.__default.escapeIdent(_6803_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3066;
              DCOMP._IOwnership _out3067;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3066, out _out3067);
              r = _out3066;
              resultingOwnership = _out3067;
            } else {
              Dafny.ISequence<Dafny.Rune> _6808_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6808_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6805_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6803_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3068;
              DCOMP._IOwnership _out3069;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6808_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3068, out _out3069);
              r = _out3068;
              resultingOwnership = _out3069;
            }
            readIdents = _6807_recIdents;
            return ;
          }
        } else if (_source245.is_NewArray) {
          Dafny.ISequence<DAST._IExpression> _6809___mcc_h66 = _source245.dtor_dims;
          DAST._IType _6810___mcc_h67 = _source245.dtor_typ;
          bool _6811_isDatatype = _6762___mcc_h51;
          bool _6812_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6813_field = _6760___mcc_h49;
          DAST._IExpression _6814_on = _6759___mcc_h48;
          {
            RAST._IExpr _6815_onExpr;
            DCOMP._IOwnership _6816_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6817_recIdents;
            RAST._IExpr _out3070;
            DCOMP._IOwnership _out3071;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3072;
            DCOMP.COMP.GenExpr(_6814_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3070, out _out3071, out _out3072);
            _6815_onExpr = _out3070;
            _6816_onOwned = _out3071;
            _6817_recIdents = _out3072;
            if ((_6811_isDatatype) || (_6812_isConstant)) {
              r = ((_6815_onExpr).Sel(DCOMP.__default.escapeIdent(_6813_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3073;
              DCOMP._IOwnership _out3074;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3073, out _out3074);
              r = _out3073;
              resultingOwnership = _out3074;
            } else {
              Dafny.ISequence<Dafny.Rune> _6818_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6818_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6815_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6813_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3075;
              DCOMP._IOwnership _out3076;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6818_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3075, out _out3076);
              r = _out3075;
              resultingOwnership = _out3076;
            }
            readIdents = _6817_recIdents;
            return ;
          }
        } else if (_source245.is_DatatypeValue) {
          DAST._IDatatypeType _6819___mcc_h70 = _source245.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _6820___mcc_h71 = _source245.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _6821___mcc_h72 = _source245.dtor_variant;
          bool _6822___mcc_h73 = _source245.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _6823___mcc_h74 = _source245.dtor_contents;
          bool _6824_isDatatype = _6762___mcc_h51;
          bool _6825_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6826_field = _6760___mcc_h49;
          DAST._IExpression _6827_on = _6759___mcc_h48;
          {
            RAST._IExpr _6828_onExpr;
            DCOMP._IOwnership _6829_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6830_recIdents;
            RAST._IExpr _out3077;
            DCOMP._IOwnership _out3078;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3079;
            DCOMP.COMP.GenExpr(_6827_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3077, out _out3078, out _out3079);
            _6828_onExpr = _out3077;
            _6829_onOwned = _out3078;
            _6830_recIdents = _out3079;
            if ((_6824_isDatatype) || (_6825_isConstant)) {
              r = ((_6828_onExpr).Sel(DCOMP.__default.escapeIdent(_6826_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3080;
              DCOMP._IOwnership _out3081;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3080, out _out3081);
              r = _out3080;
              resultingOwnership = _out3081;
            } else {
              Dafny.ISequence<Dafny.Rune> _6831_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6831_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6828_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6826_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3082;
              DCOMP._IOwnership _out3083;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6831_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3082, out _out3083);
              r = _out3082;
              resultingOwnership = _out3083;
            }
            readIdents = _6830_recIdents;
            return ;
          }
        } else if (_source245.is_Convert) {
          DAST._IExpression _6832___mcc_h80 = _source245.dtor_value;
          DAST._IType _6833___mcc_h81 = _source245.dtor_from;
          DAST._IType _6834___mcc_h82 = _source245.dtor_typ;
          bool _6835_isDatatype = _6762___mcc_h51;
          bool _6836_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6837_field = _6760___mcc_h49;
          DAST._IExpression _6838_on = _6759___mcc_h48;
          {
            RAST._IExpr _6839_onExpr;
            DCOMP._IOwnership _6840_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6841_recIdents;
            RAST._IExpr _out3084;
            DCOMP._IOwnership _out3085;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3086;
            DCOMP.COMP.GenExpr(_6838_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3084, out _out3085, out _out3086);
            _6839_onExpr = _out3084;
            _6840_onOwned = _out3085;
            _6841_recIdents = _out3086;
            if ((_6835_isDatatype) || (_6836_isConstant)) {
              r = ((_6839_onExpr).Sel(DCOMP.__default.escapeIdent(_6837_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3087;
              DCOMP._IOwnership _out3088;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3087, out _out3088);
              r = _out3087;
              resultingOwnership = _out3088;
            } else {
              Dafny.ISequence<Dafny.Rune> _6842_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6842_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6839_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6837_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3089;
              DCOMP._IOwnership _out3090;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6842_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3089, out _out3090);
              r = _out3089;
              resultingOwnership = _out3090;
            }
            readIdents = _6841_recIdents;
            return ;
          }
        } else if (_source245.is_SeqConstruct) {
          DAST._IExpression _6843___mcc_h86 = _source245.dtor_length;
          DAST._IExpression _6844___mcc_h87 = _source245.dtor_elem;
          bool _6845_isDatatype = _6762___mcc_h51;
          bool _6846_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6847_field = _6760___mcc_h49;
          DAST._IExpression _6848_on = _6759___mcc_h48;
          {
            RAST._IExpr _6849_onExpr;
            DCOMP._IOwnership _6850_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6851_recIdents;
            RAST._IExpr _out3091;
            DCOMP._IOwnership _out3092;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3093;
            DCOMP.COMP.GenExpr(_6848_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3091, out _out3092, out _out3093);
            _6849_onExpr = _out3091;
            _6850_onOwned = _out3092;
            _6851_recIdents = _out3093;
            if ((_6845_isDatatype) || (_6846_isConstant)) {
              r = ((_6849_onExpr).Sel(DCOMP.__default.escapeIdent(_6847_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3094;
              DCOMP._IOwnership _out3095;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3094, out _out3095);
              r = _out3094;
              resultingOwnership = _out3095;
            } else {
              Dafny.ISequence<Dafny.Rune> _6852_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6852_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6849_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6847_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3096;
              DCOMP._IOwnership _out3097;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6852_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3096, out _out3097);
              r = _out3096;
              resultingOwnership = _out3097;
            }
            readIdents = _6851_recIdents;
            return ;
          }
        } else if (_source245.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _6853___mcc_h90 = _source245.dtor_elements;
          DAST._IType _6854___mcc_h91 = _source245.dtor_typ;
          bool _6855_isDatatype = _6762___mcc_h51;
          bool _6856_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6857_field = _6760___mcc_h49;
          DAST._IExpression _6858_on = _6759___mcc_h48;
          {
            RAST._IExpr _6859_onExpr;
            DCOMP._IOwnership _6860_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6861_recIdents;
            RAST._IExpr _out3098;
            DCOMP._IOwnership _out3099;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3100;
            DCOMP.COMP.GenExpr(_6858_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3098, out _out3099, out _out3100);
            _6859_onExpr = _out3098;
            _6860_onOwned = _out3099;
            _6861_recIdents = _out3100;
            if ((_6855_isDatatype) || (_6856_isConstant)) {
              r = ((_6859_onExpr).Sel(DCOMP.__default.escapeIdent(_6857_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3101;
              DCOMP._IOwnership _out3102;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3101, out _out3102);
              r = _out3101;
              resultingOwnership = _out3102;
            } else {
              Dafny.ISequence<Dafny.Rune> _6862_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6862_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6859_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6857_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3103;
              DCOMP._IOwnership _out3104;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6862_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3103, out _out3104);
              r = _out3103;
              resultingOwnership = _out3104;
            }
            readIdents = _6861_recIdents;
            return ;
          }
        } else if (_source245.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _6863___mcc_h94 = _source245.dtor_elements;
          bool _6864_isDatatype = _6762___mcc_h51;
          bool _6865_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6866_field = _6760___mcc_h49;
          DAST._IExpression _6867_on = _6759___mcc_h48;
          {
            RAST._IExpr _6868_onExpr;
            DCOMP._IOwnership _6869_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6870_recIdents;
            RAST._IExpr _out3105;
            DCOMP._IOwnership _out3106;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3107;
            DCOMP.COMP.GenExpr(_6867_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3105, out _out3106, out _out3107);
            _6868_onExpr = _out3105;
            _6869_onOwned = _out3106;
            _6870_recIdents = _out3107;
            if ((_6864_isDatatype) || (_6865_isConstant)) {
              r = ((_6868_onExpr).Sel(DCOMP.__default.escapeIdent(_6866_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3108;
              DCOMP._IOwnership _out3109;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3108, out _out3109);
              r = _out3108;
              resultingOwnership = _out3109;
            } else {
              Dafny.ISequence<Dafny.Rune> _6871_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6871_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6868_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6866_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3110;
              DCOMP._IOwnership _out3111;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6871_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3110, out _out3111);
              r = _out3110;
              resultingOwnership = _out3111;
            }
            readIdents = _6870_recIdents;
            return ;
          }
        } else if (_source245.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _6872___mcc_h96 = _source245.dtor_elements;
          bool _6873_isDatatype = _6762___mcc_h51;
          bool _6874_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6875_field = _6760___mcc_h49;
          DAST._IExpression _6876_on = _6759___mcc_h48;
          {
            RAST._IExpr _6877_onExpr;
            DCOMP._IOwnership _6878_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6879_recIdents;
            RAST._IExpr _out3112;
            DCOMP._IOwnership _out3113;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3114;
            DCOMP.COMP.GenExpr(_6876_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3112, out _out3113, out _out3114);
            _6877_onExpr = _out3112;
            _6878_onOwned = _out3113;
            _6879_recIdents = _out3114;
            if ((_6873_isDatatype) || (_6874_isConstant)) {
              r = ((_6877_onExpr).Sel(DCOMP.__default.escapeIdent(_6875_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3115;
              DCOMP._IOwnership _out3116;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3115, out _out3116);
              r = _out3115;
              resultingOwnership = _out3116;
            } else {
              Dafny.ISequence<Dafny.Rune> _6880_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6880_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6877_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6875_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3117;
              DCOMP._IOwnership _out3118;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6880_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3117, out _out3118);
              r = _out3117;
              resultingOwnership = _out3118;
            }
            readIdents = _6879_recIdents;
            return ;
          }
        } else if (_source245.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _6881___mcc_h98 = _source245.dtor_mapElems;
          bool _6882_isDatatype = _6762___mcc_h51;
          bool _6883_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6884_field = _6760___mcc_h49;
          DAST._IExpression _6885_on = _6759___mcc_h48;
          {
            RAST._IExpr _6886_onExpr;
            DCOMP._IOwnership _6887_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6888_recIdents;
            RAST._IExpr _out3119;
            DCOMP._IOwnership _out3120;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3121;
            DCOMP.COMP.GenExpr(_6885_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3119, out _out3120, out _out3121);
            _6886_onExpr = _out3119;
            _6887_onOwned = _out3120;
            _6888_recIdents = _out3121;
            if ((_6882_isDatatype) || (_6883_isConstant)) {
              r = ((_6886_onExpr).Sel(DCOMP.__default.escapeIdent(_6884_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3122;
              DCOMP._IOwnership _out3123;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3122, out _out3123);
              r = _out3122;
              resultingOwnership = _out3123;
            } else {
              Dafny.ISequence<Dafny.Rune> _6889_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6889_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6886_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6884_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3124;
              DCOMP._IOwnership _out3125;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6889_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3124, out _out3125);
              r = _out3124;
              resultingOwnership = _out3125;
            }
            readIdents = _6888_recIdents;
            return ;
          }
        } else if (_source245.is_MapBuilder) {
          DAST._IType _6890___mcc_h100 = _source245.dtor_keyType;
          DAST._IType _6891___mcc_h101 = _source245.dtor_valueType;
          bool _6892_isDatatype = _6762___mcc_h51;
          bool _6893_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6894_field = _6760___mcc_h49;
          DAST._IExpression _6895_on = _6759___mcc_h48;
          {
            RAST._IExpr _6896_onExpr;
            DCOMP._IOwnership _6897_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6898_recIdents;
            RAST._IExpr _out3126;
            DCOMP._IOwnership _out3127;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3128;
            DCOMP.COMP.GenExpr(_6895_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3126, out _out3127, out _out3128);
            _6896_onExpr = _out3126;
            _6897_onOwned = _out3127;
            _6898_recIdents = _out3128;
            if ((_6892_isDatatype) || (_6893_isConstant)) {
              r = ((_6896_onExpr).Sel(DCOMP.__default.escapeIdent(_6894_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3129;
              DCOMP._IOwnership _out3130;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3129, out _out3130);
              r = _out3129;
              resultingOwnership = _out3130;
            } else {
              Dafny.ISequence<Dafny.Rune> _6899_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6899_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6896_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6894_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3131;
              DCOMP._IOwnership _out3132;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6899_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3131, out _out3132);
              r = _out3131;
              resultingOwnership = _out3132;
            }
            readIdents = _6898_recIdents;
            return ;
          }
        } else if (_source245.is_SeqUpdate) {
          DAST._IExpression _6900___mcc_h104 = _source245.dtor_expr;
          DAST._IExpression _6901___mcc_h105 = _source245.dtor_indexExpr;
          DAST._IExpression _6902___mcc_h106 = _source245.dtor_value;
          bool _6903_isDatatype = _6762___mcc_h51;
          bool _6904_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6905_field = _6760___mcc_h49;
          DAST._IExpression _6906_on = _6759___mcc_h48;
          {
            RAST._IExpr _6907_onExpr;
            DCOMP._IOwnership _6908_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6909_recIdents;
            RAST._IExpr _out3133;
            DCOMP._IOwnership _out3134;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3135;
            DCOMP.COMP.GenExpr(_6906_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3133, out _out3134, out _out3135);
            _6907_onExpr = _out3133;
            _6908_onOwned = _out3134;
            _6909_recIdents = _out3135;
            if ((_6903_isDatatype) || (_6904_isConstant)) {
              r = ((_6907_onExpr).Sel(DCOMP.__default.escapeIdent(_6905_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3136;
              DCOMP._IOwnership _out3137;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3136, out _out3137);
              r = _out3136;
              resultingOwnership = _out3137;
            } else {
              Dafny.ISequence<Dafny.Rune> _6910_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6910_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6907_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6905_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3138;
              DCOMP._IOwnership _out3139;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6910_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3138, out _out3139);
              r = _out3138;
              resultingOwnership = _out3139;
            }
            readIdents = _6909_recIdents;
            return ;
          }
        } else if (_source245.is_MapUpdate) {
          DAST._IExpression _6911___mcc_h110 = _source245.dtor_expr;
          DAST._IExpression _6912___mcc_h111 = _source245.dtor_indexExpr;
          DAST._IExpression _6913___mcc_h112 = _source245.dtor_value;
          bool _6914_isDatatype = _6762___mcc_h51;
          bool _6915_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6916_field = _6760___mcc_h49;
          DAST._IExpression _6917_on = _6759___mcc_h48;
          {
            RAST._IExpr _6918_onExpr;
            DCOMP._IOwnership _6919_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6920_recIdents;
            RAST._IExpr _out3140;
            DCOMP._IOwnership _out3141;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3142;
            DCOMP.COMP.GenExpr(_6917_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3140, out _out3141, out _out3142);
            _6918_onExpr = _out3140;
            _6919_onOwned = _out3141;
            _6920_recIdents = _out3142;
            if ((_6914_isDatatype) || (_6915_isConstant)) {
              r = ((_6918_onExpr).Sel(DCOMP.__default.escapeIdent(_6916_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3143;
              DCOMP._IOwnership _out3144;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3143, out _out3144);
              r = _out3143;
              resultingOwnership = _out3144;
            } else {
              Dafny.ISequence<Dafny.Rune> _6921_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6921_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6918_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6916_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3145;
              DCOMP._IOwnership _out3146;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6921_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3145, out _out3146);
              r = _out3145;
              resultingOwnership = _out3146;
            }
            readIdents = _6920_recIdents;
            return ;
          }
        } else if (_source245.is_SetBuilder) {
          DAST._IType _6922___mcc_h116 = _source245.dtor_elemType;
          bool _6923_isDatatype = _6762___mcc_h51;
          bool _6924_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6925_field = _6760___mcc_h49;
          DAST._IExpression _6926_on = _6759___mcc_h48;
          {
            RAST._IExpr _6927_onExpr;
            DCOMP._IOwnership _6928_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6929_recIdents;
            RAST._IExpr _out3147;
            DCOMP._IOwnership _out3148;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3149;
            DCOMP.COMP.GenExpr(_6926_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3147, out _out3148, out _out3149);
            _6927_onExpr = _out3147;
            _6928_onOwned = _out3148;
            _6929_recIdents = _out3149;
            if ((_6923_isDatatype) || (_6924_isConstant)) {
              r = ((_6927_onExpr).Sel(DCOMP.__default.escapeIdent(_6925_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3150;
              DCOMP._IOwnership _out3151;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3150, out _out3151);
              r = _out3150;
              resultingOwnership = _out3151;
            } else {
              Dafny.ISequence<Dafny.Rune> _6930_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6930_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6927_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6925_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3152;
              DCOMP._IOwnership _out3153;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6930_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3152, out _out3153);
              r = _out3152;
              resultingOwnership = _out3153;
            }
            readIdents = _6929_recIdents;
            return ;
          }
        } else if (_source245.is_ToMultiset) {
          DAST._IExpression _6931___mcc_h118 = _source245.dtor_ToMultiset_a0;
          bool _6932_isDatatype = _6762___mcc_h51;
          bool _6933_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6934_field = _6760___mcc_h49;
          DAST._IExpression _6935_on = _6759___mcc_h48;
          {
            RAST._IExpr _6936_onExpr;
            DCOMP._IOwnership _6937_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6938_recIdents;
            RAST._IExpr _out3154;
            DCOMP._IOwnership _out3155;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3156;
            DCOMP.COMP.GenExpr(_6935_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3154, out _out3155, out _out3156);
            _6936_onExpr = _out3154;
            _6937_onOwned = _out3155;
            _6938_recIdents = _out3156;
            if ((_6932_isDatatype) || (_6933_isConstant)) {
              r = ((_6936_onExpr).Sel(DCOMP.__default.escapeIdent(_6934_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3157;
              DCOMP._IOwnership _out3158;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3157, out _out3158);
              r = _out3157;
              resultingOwnership = _out3158;
            } else {
              Dafny.ISequence<Dafny.Rune> _6939_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6939_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6936_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6934_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3159;
              DCOMP._IOwnership _out3160;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6939_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3159, out _out3160);
              r = _out3159;
              resultingOwnership = _out3160;
            }
            readIdents = _6938_recIdents;
            return ;
          }
        } else if (_source245.is_This) {
          bool _6940_isDatatype = _6762___mcc_h51;
          bool _6941_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6942_field = _6760___mcc_h49;
          DAST._IExpression _6943_on = _6759___mcc_h48;
          {
            RAST._IExpr _6944_onExpr;
            DCOMP._IOwnership _6945_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6946_recIdents;
            RAST._IExpr _out3161;
            DCOMP._IOwnership _out3162;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3163;
            DCOMP.COMP.GenExpr(_6943_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3161, out _out3162, out _out3163);
            _6944_onExpr = _out3161;
            _6945_onOwned = _out3162;
            _6946_recIdents = _out3163;
            if ((_6940_isDatatype) || (_6941_isConstant)) {
              r = ((_6944_onExpr).Sel(DCOMP.__default.escapeIdent(_6942_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3164;
              DCOMP._IOwnership _out3165;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3164, out _out3165);
              r = _out3164;
              resultingOwnership = _out3165;
            } else {
              Dafny.ISequence<Dafny.Rune> _6947_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6947_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6944_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6942_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3166;
              DCOMP._IOwnership _out3167;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6947_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3166, out _out3167);
              r = _out3166;
              resultingOwnership = _out3167;
            }
            readIdents = _6946_recIdents;
            return ;
          }
        } else if (_source245.is_Ite) {
          DAST._IExpression _6948___mcc_h120 = _source245.dtor_cond;
          DAST._IExpression _6949___mcc_h121 = _source245.dtor_thn;
          DAST._IExpression _6950___mcc_h122 = _source245.dtor_els;
          bool _6951_isDatatype = _6762___mcc_h51;
          bool _6952_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6953_field = _6760___mcc_h49;
          DAST._IExpression _6954_on = _6759___mcc_h48;
          {
            RAST._IExpr _6955_onExpr;
            DCOMP._IOwnership _6956_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6957_recIdents;
            RAST._IExpr _out3168;
            DCOMP._IOwnership _out3169;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3170;
            DCOMP.COMP.GenExpr(_6954_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3168, out _out3169, out _out3170);
            _6955_onExpr = _out3168;
            _6956_onOwned = _out3169;
            _6957_recIdents = _out3170;
            if ((_6951_isDatatype) || (_6952_isConstant)) {
              r = ((_6955_onExpr).Sel(DCOMP.__default.escapeIdent(_6953_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3171;
              DCOMP._IOwnership _out3172;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3171, out _out3172);
              r = _out3171;
              resultingOwnership = _out3172;
            } else {
              Dafny.ISequence<Dafny.Rune> _6958_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6958_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6955_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6953_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3173;
              DCOMP._IOwnership _out3174;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6958_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3173, out _out3174);
              r = _out3173;
              resultingOwnership = _out3174;
            }
            readIdents = _6957_recIdents;
            return ;
          }
        } else if (_source245.is_UnOp) {
          DAST._IUnaryOp _6959___mcc_h126 = _source245.dtor_unOp;
          DAST._IExpression _6960___mcc_h127 = _source245.dtor_expr;
          DAST.Format._IUnOpFormat _6961___mcc_h128 = _source245.dtor_format1;
          bool _6962_isDatatype = _6762___mcc_h51;
          bool _6963_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6964_field = _6760___mcc_h49;
          DAST._IExpression _6965_on = _6759___mcc_h48;
          {
            RAST._IExpr _6966_onExpr;
            DCOMP._IOwnership _6967_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6968_recIdents;
            RAST._IExpr _out3175;
            DCOMP._IOwnership _out3176;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3177;
            DCOMP.COMP.GenExpr(_6965_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3175, out _out3176, out _out3177);
            _6966_onExpr = _out3175;
            _6967_onOwned = _out3176;
            _6968_recIdents = _out3177;
            if ((_6962_isDatatype) || (_6963_isConstant)) {
              r = ((_6966_onExpr).Sel(DCOMP.__default.escapeIdent(_6964_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3178;
              DCOMP._IOwnership _out3179;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3178, out _out3179);
              r = _out3178;
              resultingOwnership = _out3179;
            } else {
              Dafny.ISequence<Dafny.Rune> _6969_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6969_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6966_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6964_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3180;
              DCOMP._IOwnership _out3181;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6969_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3180, out _out3181);
              r = _out3180;
              resultingOwnership = _out3181;
            }
            readIdents = _6968_recIdents;
            return ;
          }
        } else if (_source245.is_BinOp) {
          DAST._IBinOp _6970___mcc_h132 = _source245.dtor_op;
          DAST._IExpression _6971___mcc_h133 = _source245.dtor_left;
          DAST._IExpression _6972___mcc_h134 = _source245.dtor_right;
          DAST.Format._IBinOpFormat _6973___mcc_h135 = _source245.dtor_format2;
          bool _6974_isDatatype = _6762___mcc_h51;
          bool _6975_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6976_field = _6760___mcc_h49;
          DAST._IExpression _6977_on = _6759___mcc_h48;
          {
            RAST._IExpr _6978_onExpr;
            DCOMP._IOwnership _6979_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6980_recIdents;
            RAST._IExpr _out3182;
            DCOMP._IOwnership _out3183;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3184;
            DCOMP.COMP.GenExpr(_6977_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3182, out _out3183, out _out3184);
            _6978_onExpr = _out3182;
            _6979_onOwned = _out3183;
            _6980_recIdents = _out3184;
            if ((_6974_isDatatype) || (_6975_isConstant)) {
              r = ((_6978_onExpr).Sel(DCOMP.__default.escapeIdent(_6976_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3185;
              DCOMP._IOwnership _out3186;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3185, out _out3186);
              r = _out3185;
              resultingOwnership = _out3186;
            } else {
              Dafny.ISequence<Dafny.Rune> _6981_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6981_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6978_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6976_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3187;
              DCOMP._IOwnership _out3188;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6981_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3187, out _out3188);
              r = _out3187;
              resultingOwnership = _out3188;
            }
            readIdents = _6980_recIdents;
            return ;
          }
        } else if (_source245.is_ArrayLen) {
          DAST._IExpression _6982___mcc_h140 = _source245.dtor_expr;
          BigInteger _6983___mcc_h141 = _source245.dtor_dim;
          bool _6984_isDatatype = _6762___mcc_h51;
          bool _6985_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6986_field = _6760___mcc_h49;
          DAST._IExpression _6987_on = _6759___mcc_h48;
          {
            RAST._IExpr _6988_onExpr;
            DCOMP._IOwnership _6989_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6990_recIdents;
            RAST._IExpr _out3189;
            DCOMP._IOwnership _out3190;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3191;
            DCOMP.COMP.GenExpr(_6987_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3189, out _out3190, out _out3191);
            _6988_onExpr = _out3189;
            _6989_onOwned = _out3190;
            _6990_recIdents = _out3191;
            if ((_6984_isDatatype) || (_6985_isConstant)) {
              r = ((_6988_onExpr).Sel(DCOMP.__default.escapeIdent(_6986_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3192;
              DCOMP._IOwnership _out3193;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3192, out _out3193);
              r = _out3192;
              resultingOwnership = _out3193;
            } else {
              Dafny.ISequence<Dafny.Rune> _6991_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _6991_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6988_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6986_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3194;
              DCOMP._IOwnership _out3195;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_6991_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3194, out _out3195);
              r = _out3194;
              resultingOwnership = _out3195;
            }
            readIdents = _6990_recIdents;
            return ;
          }
        } else if (_source245.is_MapKeys) {
          DAST._IExpression _6992___mcc_h144 = _source245.dtor_expr;
          bool _6993_isDatatype = _6762___mcc_h51;
          bool _6994_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _6995_field = _6760___mcc_h49;
          DAST._IExpression _6996_on = _6759___mcc_h48;
          {
            RAST._IExpr _6997_onExpr;
            DCOMP._IOwnership _6998_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6999_recIdents;
            RAST._IExpr _out3196;
            DCOMP._IOwnership _out3197;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3198;
            DCOMP.COMP.GenExpr(_6996_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3196, out _out3197, out _out3198);
            _6997_onExpr = _out3196;
            _6998_onOwned = _out3197;
            _6999_recIdents = _out3198;
            if ((_6993_isDatatype) || (_6994_isConstant)) {
              r = ((_6997_onExpr).Sel(DCOMP.__default.escapeIdent(_6995_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3199;
              DCOMP._IOwnership _out3200;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3199, out _out3200);
              r = _out3199;
              resultingOwnership = _out3200;
            } else {
              Dafny.ISequence<Dafny.Rune> _7000_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7000_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_6997_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_6995_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3201;
              DCOMP._IOwnership _out3202;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7000_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3201, out _out3202);
              r = _out3201;
              resultingOwnership = _out3202;
            }
            readIdents = _6999_recIdents;
            return ;
          }
        } else if (_source245.is_MapValues) {
          DAST._IExpression _7001___mcc_h146 = _source245.dtor_expr;
          bool _7002_isDatatype = _6762___mcc_h51;
          bool _7003_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7004_field = _6760___mcc_h49;
          DAST._IExpression _7005_on = _6759___mcc_h48;
          {
            RAST._IExpr _7006_onExpr;
            DCOMP._IOwnership _7007_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7008_recIdents;
            RAST._IExpr _out3203;
            DCOMP._IOwnership _out3204;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3205;
            DCOMP.COMP.GenExpr(_7005_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3203, out _out3204, out _out3205);
            _7006_onExpr = _out3203;
            _7007_onOwned = _out3204;
            _7008_recIdents = _out3205;
            if ((_7002_isDatatype) || (_7003_isConstant)) {
              r = ((_7006_onExpr).Sel(DCOMP.__default.escapeIdent(_7004_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3206;
              DCOMP._IOwnership _out3207;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3206, out _out3207);
              r = _out3206;
              resultingOwnership = _out3207;
            } else {
              Dafny.ISequence<Dafny.Rune> _7009_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7009_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7006_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7004_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3208;
              DCOMP._IOwnership _out3209;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7009_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3208, out _out3209);
              r = _out3208;
              resultingOwnership = _out3209;
            }
            readIdents = _7008_recIdents;
            return ;
          }
        } else if (_source245.is_Select) {
          DAST._IExpression _7010___mcc_h148 = _source245.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _7011___mcc_h149 = _source245.dtor_field;
          bool _7012___mcc_h150 = _source245.dtor_isConstant;
          bool _7013___mcc_h151 = _source245.dtor_onDatatype;
          bool _7014_isDatatype = _6762___mcc_h51;
          bool _7015_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7016_field = _6760___mcc_h49;
          DAST._IExpression _7017_on = _6759___mcc_h48;
          {
            RAST._IExpr _7018_onExpr;
            DCOMP._IOwnership _7019_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7020_recIdents;
            RAST._IExpr _out3210;
            DCOMP._IOwnership _out3211;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3212;
            DCOMP.COMP.GenExpr(_7017_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3210, out _out3211, out _out3212);
            _7018_onExpr = _out3210;
            _7019_onOwned = _out3211;
            _7020_recIdents = _out3212;
            if ((_7014_isDatatype) || (_7015_isConstant)) {
              r = ((_7018_onExpr).Sel(DCOMP.__default.escapeIdent(_7016_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3213;
              DCOMP._IOwnership _out3214;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3213, out _out3214);
              r = _out3213;
              resultingOwnership = _out3214;
            } else {
              Dafny.ISequence<Dafny.Rune> _7021_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7021_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7018_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7016_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3215;
              DCOMP._IOwnership _out3216;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7021_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3215, out _out3216);
              r = _out3215;
              resultingOwnership = _out3216;
            }
            readIdents = _7020_recIdents;
            return ;
          }
        } else if (_source245.is_SelectFn) {
          DAST._IExpression _7022___mcc_h156 = _source245.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _7023___mcc_h157 = _source245.dtor_field;
          bool _7024___mcc_h158 = _source245.dtor_onDatatype;
          bool _7025___mcc_h159 = _source245.dtor_isStatic;
          BigInteger _7026___mcc_h160 = _source245.dtor_arity;
          bool _7027_isDatatype = _6762___mcc_h51;
          bool _7028_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7029_field = _6760___mcc_h49;
          DAST._IExpression _7030_on = _6759___mcc_h48;
          {
            RAST._IExpr _7031_onExpr;
            DCOMP._IOwnership _7032_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7033_recIdents;
            RAST._IExpr _out3217;
            DCOMP._IOwnership _out3218;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3219;
            DCOMP.COMP.GenExpr(_7030_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3217, out _out3218, out _out3219);
            _7031_onExpr = _out3217;
            _7032_onOwned = _out3218;
            _7033_recIdents = _out3219;
            if ((_7027_isDatatype) || (_7028_isConstant)) {
              r = ((_7031_onExpr).Sel(DCOMP.__default.escapeIdent(_7029_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3220;
              DCOMP._IOwnership _out3221;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3220, out _out3221);
              r = _out3220;
              resultingOwnership = _out3221;
            } else {
              Dafny.ISequence<Dafny.Rune> _7034_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7034_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7031_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7029_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3222;
              DCOMP._IOwnership _out3223;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7034_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3222, out _out3223);
              r = _out3222;
              resultingOwnership = _out3223;
            }
            readIdents = _7033_recIdents;
            return ;
          }
        } else if (_source245.is_Index) {
          DAST._IExpression _7035___mcc_h166 = _source245.dtor_expr;
          DAST._ICollKind _7036___mcc_h167 = _source245.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _7037___mcc_h168 = _source245.dtor_indices;
          bool _7038_isDatatype = _6762___mcc_h51;
          bool _7039_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7040_field = _6760___mcc_h49;
          DAST._IExpression _7041_on = _6759___mcc_h48;
          {
            RAST._IExpr _7042_onExpr;
            DCOMP._IOwnership _7043_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7044_recIdents;
            RAST._IExpr _out3224;
            DCOMP._IOwnership _out3225;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3226;
            DCOMP.COMP.GenExpr(_7041_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3224, out _out3225, out _out3226);
            _7042_onExpr = _out3224;
            _7043_onOwned = _out3225;
            _7044_recIdents = _out3226;
            if ((_7038_isDatatype) || (_7039_isConstant)) {
              r = ((_7042_onExpr).Sel(DCOMP.__default.escapeIdent(_7040_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3227;
              DCOMP._IOwnership _out3228;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3227, out _out3228);
              r = _out3227;
              resultingOwnership = _out3228;
            } else {
              Dafny.ISequence<Dafny.Rune> _7045_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7045_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7042_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7040_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3229;
              DCOMP._IOwnership _out3230;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7045_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3229, out _out3230);
              r = _out3229;
              resultingOwnership = _out3230;
            }
            readIdents = _7044_recIdents;
            return ;
          }
        } else if (_source245.is_IndexRange) {
          DAST._IExpression _7046___mcc_h172 = _source245.dtor_expr;
          bool _7047___mcc_h173 = _source245.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _7048___mcc_h174 = _source245.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _7049___mcc_h175 = _source245.dtor_high;
          bool _7050_isDatatype = _6762___mcc_h51;
          bool _7051_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7052_field = _6760___mcc_h49;
          DAST._IExpression _7053_on = _6759___mcc_h48;
          {
            RAST._IExpr _7054_onExpr;
            DCOMP._IOwnership _7055_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7056_recIdents;
            RAST._IExpr _out3231;
            DCOMP._IOwnership _out3232;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3233;
            DCOMP.COMP.GenExpr(_7053_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3231, out _out3232, out _out3233);
            _7054_onExpr = _out3231;
            _7055_onOwned = _out3232;
            _7056_recIdents = _out3233;
            if ((_7050_isDatatype) || (_7051_isConstant)) {
              r = ((_7054_onExpr).Sel(DCOMP.__default.escapeIdent(_7052_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3234;
              DCOMP._IOwnership _out3235;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3234, out _out3235);
              r = _out3234;
              resultingOwnership = _out3235;
            } else {
              Dafny.ISequence<Dafny.Rune> _7057_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7057_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7054_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7052_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3236;
              DCOMP._IOwnership _out3237;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7057_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3236, out _out3237);
              r = _out3236;
              resultingOwnership = _out3237;
            }
            readIdents = _7056_recIdents;
            return ;
          }
        } else if (_source245.is_TupleSelect) {
          DAST._IExpression _7058___mcc_h180 = _source245.dtor_expr;
          BigInteger _7059___mcc_h181 = _source245.dtor_index;
          bool _7060_isDatatype = _6762___mcc_h51;
          bool _7061_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7062_field = _6760___mcc_h49;
          DAST._IExpression _7063_on = _6759___mcc_h48;
          {
            RAST._IExpr _7064_onExpr;
            DCOMP._IOwnership _7065_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7066_recIdents;
            RAST._IExpr _out3238;
            DCOMP._IOwnership _out3239;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3240;
            DCOMP.COMP.GenExpr(_7063_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3238, out _out3239, out _out3240);
            _7064_onExpr = _out3238;
            _7065_onOwned = _out3239;
            _7066_recIdents = _out3240;
            if ((_7060_isDatatype) || (_7061_isConstant)) {
              r = ((_7064_onExpr).Sel(DCOMP.__default.escapeIdent(_7062_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3241;
              DCOMP._IOwnership _out3242;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3241, out _out3242);
              r = _out3241;
              resultingOwnership = _out3242;
            } else {
              Dafny.ISequence<Dafny.Rune> _7067_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7067_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7064_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7062_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3243;
              DCOMP._IOwnership _out3244;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7067_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3243, out _out3244);
              r = _out3243;
              resultingOwnership = _out3244;
            }
            readIdents = _7066_recIdents;
            return ;
          }
        } else if (_source245.is_Call) {
          DAST._IExpression _7068___mcc_h184 = _source245.dtor_on;
          DAST._ICallName _7069___mcc_h185 = _source245.dtor_callName;
          Dafny.ISequence<DAST._IType> _7070___mcc_h186 = _source245.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _7071___mcc_h187 = _source245.dtor_args;
          bool _7072_isDatatype = _6762___mcc_h51;
          bool _7073_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7074_field = _6760___mcc_h49;
          DAST._IExpression _7075_on = _6759___mcc_h48;
          {
            RAST._IExpr _7076_onExpr;
            DCOMP._IOwnership _7077_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7078_recIdents;
            RAST._IExpr _out3245;
            DCOMP._IOwnership _out3246;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3247;
            DCOMP.COMP.GenExpr(_7075_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3245, out _out3246, out _out3247);
            _7076_onExpr = _out3245;
            _7077_onOwned = _out3246;
            _7078_recIdents = _out3247;
            if ((_7072_isDatatype) || (_7073_isConstant)) {
              r = ((_7076_onExpr).Sel(DCOMP.__default.escapeIdent(_7074_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3248;
              DCOMP._IOwnership _out3249;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3248, out _out3249);
              r = _out3248;
              resultingOwnership = _out3249;
            } else {
              Dafny.ISequence<Dafny.Rune> _7079_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7079_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7076_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7074_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3250;
              DCOMP._IOwnership _out3251;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7079_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3250, out _out3251);
              r = _out3250;
              resultingOwnership = _out3251;
            }
            readIdents = _7078_recIdents;
            return ;
          }
        } else if (_source245.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _7080___mcc_h192 = _source245.dtor_params;
          DAST._IType _7081___mcc_h193 = _source245.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _7082___mcc_h194 = _source245.dtor_body;
          bool _7083_isDatatype = _6762___mcc_h51;
          bool _7084_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7085_field = _6760___mcc_h49;
          DAST._IExpression _7086_on = _6759___mcc_h48;
          {
            RAST._IExpr _7087_onExpr;
            DCOMP._IOwnership _7088_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7089_recIdents;
            RAST._IExpr _out3252;
            DCOMP._IOwnership _out3253;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3254;
            DCOMP.COMP.GenExpr(_7086_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3252, out _out3253, out _out3254);
            _7087_onExpr = _out3252;
            _7088_onOwned = _out3253;
            _7089_recIdents = _out3254;
            if ((_7083_isDatatype) || (_7084_isConstant)) {
              r = ((_7087_onExpr).Sel(DCOMP.__default.escapeIdent(_7085_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3255;
              DCOMP._IOwnership _out3256;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3255, out _out3256);
              r = _out3255;
              resultingOwnership = _out3256;
            } else {
              Dafny.ISequence<Dafny.Rune> _7090_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7090_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7087_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7085_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3257;
              DCOMP._IOwnership _out3258;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7090_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3257, out _out3258);
              r = _out3257;
              resultingOwnership = _out3258;
            }
            readIdents = _7089_recIdents;
            return ;
          }
        } else if (_source245.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7091___mcc_h198 = _source245.dtor_values;
          DAST._IType _7092___mcc_h199 = _source245.dtor_retType;
          DAST._IExpression _7093___mcc_h200 = _source245.dtor_expr;
          bool _7094_isDatatype = _6762___mcc_h51;
          bool _7095_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7096_field = _6760___mcc_h49;
          DAST._IExpression _7097_on = _6759___mcc_h48;
          {
            RAST._IExpr _7098_onExpr;
            DCOMP._IOwnership _7099_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7100_recIdents;
            RAST._IExpr _out3259;
            DCOMP._IOwnership _out3260;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3261;
            DCOMP.COMP.GenExpr(_7097_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3259, out _out3260, out _out3261);
            _7098_onExpr = _out3259;
            _7099_onOwned = _out3260;
            _7100_recIdents = _out3261;
            if ((_7094_isDatatype) || (_7095_isConstant)) {
              r = ((_7098_onExpr).Sel(DCOMP.__default.escapeIdent(_7096_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3262;
              DCOMP._IOwnership _out3263;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3262, out _out3263);
              r = _out3262;
              resultingOwnership = _out3263;
            } else {
              Dafny.ISequence<Dafny.Rune> _7101_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7101_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7098_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7096_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3264;
              DCOMP._IOwnership _out3265;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7101_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3264, out _out3265);
              r = _out3264;
              resultingOwnership = _out3265;
            }
            readIdents = _7100_recIdents;
            return ;
          }
        } else if (_source245.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _7102___mcc_h204 = _source245.dtor_name;
          DAST._IType _7103___mcc_h205 = _source245.dtor_typ;
          DAST._IExpression _7104___mcc_h206 = _source245.dtor_value;
          DAST._IExpression _7105___mcc_h207 = _source245.dtor_iifeBody;
          bool _7106_isDatatype = _6762___mcc_h51;
          bool _7107_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7108_field = _6760___mcc_h49;
          DAST._IExpression _7109_on = _6759___mcc_h48;
          {
            RAST._IExpr _7110_onExpr;
            DCOMP._IOwnership _7111_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7112_recIdents;
            RAST._IExpr _out3266;
            DCOMP._IOwnership _out3267;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3268;
            DCOMP.COMP.GenExpr(_7109_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3266, out _out3267, out _out3268);
            _7110_onExpr = _out3266;
            _7111_onOwned = _out3267;
            _7112_recIdents = _out3268;
            if ((_7106_isDatatype) || (_7107_isConstant)) {
              r = ((_7110_onExpr).Sel(DCOMP.__default.escapeIdent(_7108_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3269;
              DCOMP._IOwnership _out3270;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3269, out _out3270);
              r = _out3269;
              resultingOwnership = _out3270;
            } else {
              Dafny.ISequence<Dafny.Rune> _7113_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7113_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7110_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7108_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3271;
              DCOMP._IOwnership _out3272;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7113_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3271, out _out3272);
              r = _out3271;
              resultingOwnership = _out3272;
            }
            readIdents = _7112_recIdents;
            return ;
          }
        } else if (_source245.is_Apply) {
          DAST._IExpression _7114___mcc_h212 = _source245.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _7115___mcc_h213 = _source245.dtor_args;
          bool _7116_isDatatype = _6762___mcc_h51;
          bool _7117_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7118_field = _6760___mcc_h49;
          DAST._IExpression _7119_on = _6759___mcc_h48;
          {
            RAST._IExpr _7120_onExpr;
            DCOMP._IOwnership _7121_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7122_recIdents;
            RAST._IExpr _out3273;
            DCOMP._IOwnership _out3274;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3275;
            DCOMP.COMP.GenExpr(_7119_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3273, out _out3274, out _out3275);
            _7120_onExpr = _out3273;
            _7121_onOwned = _out3274;
            _7122_recIdents = _out3275;
            if ((_7116_isDatatype) || (_7117_isConstant)) {
              r = ((_7120_onExpr).Sel(DCOMP.__default.escapeIdent(_7118_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3276;
              DCOMP._IOwnership _out3277;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3276, out _out3277);
              r = _out3276;
              resultingOwnership = _out3277;
            } else {
              Dafny.ISequence<Dafny.Rune> _7123_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7123_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7120_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7118_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3278;
              DCOMP._IOwnership _out3279;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7123_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3278, out _out3279);
              r = _out3278;
              resultingOwnership = _out3279;
            }
            readIdents = _7122_recIdents;
            return ;
          }
        } else if (_source245.is_TypeTest) {
          DAST._IExpression _7124___mcc_h216 = _source245.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7125___mcc_h217 = _source245.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _7126___mcc_h218 = _source245.dtor_variant;
          bool _7127_isDatatype = _6762___mcc_h51;
          bool _7128_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7129_field = _6760___mcc_h49;
          DAST._IExpression _7130_on = _6759___mcc_h48;
          {
            RAST._IExpr _7131_onExpr;
            DCOMP._IOwnership _7132_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7133_recIdents;
            RAST._IExpr _out3280;
            DCOMP._IOwnership _out3281;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3282;
            DCOMP.COMP.GenExpr(_7130_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3280, out _out3281, out _out3282);
            _7131_onExpr = _out3280;
            _7132_onOwned = _out3281;
            _7133_recIdents = _out3282;
            if ((_7127_isDatatype) || (_7128_isConstant)) {
              r = ((_7131_onExpr).Sel(DCOMP.__default.escapeIdent(_7129_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3283;
              DCOMP._IOwnership _out3284;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3283, out _out3284);
              r = _out3283;
              resultingOwnership = _out3284;
            } else {
              Dafny.ISequence<Dafny.Rune> _7134_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7134_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7131_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7129_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3285;
              DCOMP._IOwnership _out3286;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7134_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3285, out _out3286);
              r = _out3285;
              resultingOwnership = _out3286;
            }
            readIdents = _7133_recIdents;
            return ;
          }
        } else if (_source245.is_InitializationValue) {
          DAST._IType _7135___mcc_h222 = _source245.dtor_typ;
          bool _7136_isDatatype = _6762___mcc_h51;
          bool _7137_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7138_field = _6760___mcc_h49;
          DAST._IExpression _7139_on = _6759___mcc_h48;
          {
            RAST._IExpr _7140_onExpr;
            DCOMP._IOwnership _7141_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7142_recIdents;
            RAST._IExpr _out3287;
            DCOMP._IOwnership _out3288;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3289;
            DCOMP.COMP.GenExpr(_7139_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3287, out _out3288, out _out3289);
            _7140_onExpr = _out3287;
            _7141_onOwned = _out3288;
            _7142_recIdents = _out3289;
            if ((_7136_isDatatype) || (_7137_isConstant)) {
              r = ((_7140_onExpr).Sel(DCOMP.__default.escapeIdent(_7138_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3290;
              DCOMP._IOwnership _out3291;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3290, out _out3291);
              r = _out3290;
              resultingOwnership = _out3291;
            } else {
              Dafny.ISequence<Dafny.Rune> _7143_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7143_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7140_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7138_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3292;
              DCOMP._IOwnership _out3293;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7143_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3292, out _out3293);
              r = _out3292;
              resultingOwnership = _out3293;
            }
            readIdents = _7142_recIdents;
            return ;
          }
        } else if (_source245.is_BoolBoundedPool) {
          bool _7144_isDatatype = _6762___mcc_h51;
          bool _7145_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7146_field = _6760___mcc_h49;
          DAST._IExpression _7147_on = _6759___mcc_h48;
          {
            RAST._IExpr _7148_onExpr;
            DCOMP._IOwnership _7149_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7150_recIdents;
            RAST._IExpr _out3294;
            DCOMP._IOwnership _out3295;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3296;
            DCOMP.COMP.GenExpr(_7147_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3294, out _out3295, out _out3296);
            _7148_onExpr = _out3294;
            _7149_onOwned = _out3295;
            _7150_recIdents = _out3296;
            if ((_7144_isDatatype) || (_7145_isConstant)) {
              r = ((_7148_onExpr).Sel(DCOMP.__default.escapeIdent(_7146_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3297;
              DCOMP._IOwnership _out3298;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3297, out _out3298);
              r = _out3297;
              resultingOwnership = _out3298;
            } else {
              Dafny.ISequence<Dafny.Rune> _7151_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7151_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7148_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7146_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3299;
              DCOMP._IOwnership _out3300;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7151_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3299, out _out3300);
              r = _out3299;
              resultingOwnership = _out3300;
            }
            readIdents = _7150_recIdents;
            return ;
          }
        } else if (_source245.is_SetBoundedPool) {
          DAST._IExpression _7152___mcc_h224 = _source245.dtor_of;
          bool _7153_isDatatype = _6762___mcc_h51;
          bool _7154_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7155_field = _6760___mcc_h49;
          DAST._IExpression _7156_on = _6759___mcc_h48;
          {
            RAST._IExpr _7157_onExpr;
            DCOMP._IOwnership _7158_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7159_recIdents;
            RAST._IExpr _out3301;
            DCOMP._IOwnership _out3302;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3303;
            DCOMP.COMP.GenExpr(_7156_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3301, out _out3302, out _out3303);
            _7157_onExpr = _out3301;
            _7158_onOwned = _out3302;
            _7159_recIdents = _out3303;
            if ((_7153_isDatatype) || (_7154_isConstant)) {
              r = ((_7157_onExpr).Sel(DCOMP.__default.escapeIdent(_7155_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3304;
              DCOMP._IOwnership _out3305;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3304, out _out3305);
              r = _out3304;
              resultingOwnership = _out3305;
            } else {
              Dafny.ISequence<Dafny.Rune> _7160_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7160_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7157_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7155_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3306;
              DCOMP._IOwnership _out3307;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7160_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3306, out _out3307);
              r = _out3306;
              resultingOwnership = _out3307;
            }
            readIdents = _7159_recIdents;
            return ;
          }
        } else if (_source245.is_SeqBoundedPool) {
          DAST._IExpression _7161___mcc_h226 = _source245.dtor_of;
          bool _7162___mcc_h227 = _source245.dtor_includeDuplicates;
          bool _7163_isDatatype = _6762___mcc_h51;
          bool _7164_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7165_field = _6760___mcc_h49;
          DAST._IExpression _7166_on = _6759___mcc_h48;
          {
            RAST._IExpr _7167_onExpr;
            DCOMP._IOwnership _7168_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7169_recIdents;
            RAST._IExpr _out3308;
            DCOMP._IOwnership _out3309;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3310;
            DCOMP.COMP.GenExpr(_7166_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3308, out _out3309, out _out3310);
            _7167_onExpr = _out3308;
            _7168_onOwned = _out3309;
            _7169_recIdents = _out3310;
            if ((_7163_isDatatype) || (_7164_isConstant)) {
              r = ((_7167_onExpr).Sel(DCOMP.__default.escapeIdent(_7165_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3311;
              DCOMP._IOwnership _out3312;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3311, out _out3312);
              r = _out3311;
              resultingOwnership = _out3312;
            } else {
              Dafny.ISequence<Dafny.Rune> _7170_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7170_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7167_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7165_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3313;
              DCOMP._IOwnership _out3314;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7170_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3313, out _out3314);
              r = _out3313;
              resultingOwnership = _out3314;
            }
            readIdents = _7169_recIdents;
            return ;
          }
        } else {
          DAST._IExpression _7171___mcc_h230 = _source245.dtor_lo;
          DAST._IExpression _7172___mcc_h231 = _source245.dtor_hi;
          bool _7173_isDatatype = _6762___mcc_h51;
          bool _7174_isConstant = _6761___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7175_field = _6760___mcc_h49;
          DAST._IExpression _7176_on = _6759___mcc_h48;
          {
            RAST._IExpr _7177_onExpr;
            DCOMP._IOwnership _7178_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7179_recIdents;
            RAST._IExpr _out3315;
            DCOMP._IOwnership _out3316;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3317;
            DCOMP.COMP.GenExpr(_7176_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3315, out _out3316, out _out3317);
            _7177_onExpr = _out3315;
            _7178_onOwned = _out3316;
            _7179_recIdents = _out3317;
            if ((_7173_isDatatype) || (_7174_isConstant)) {
              r = ((_7177_onExpr).Sel(DCOMP.__default.escapeIdent(_7175_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3318;
              DCOMP._IOwnership _out3319;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3318, out _out3319);
              r = _out3318;
              resultingOwnership = _out3319;
            } else {
              Dafny.ISequence<Dafny.Rune> _7180_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _7180_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_7177_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent(_7175_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out3320;
              DCOMP._IOwnership _out3321;
              DCOMP.COMP.FromOwnership(RAST.Expr.create_RawExpr(_7180_s), DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3320, out _out3321);
              r = _out3320;
              resultingOwnership = _out3321;
            }
            readIdents = _7179_recIdents;
            return ;
          }
        }
      } else if (_source242.is_SelectFn) {
        DAST._IExpression _7181___mcc_h234 = _source242.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _7182___mcc_h235 = _source242.dtor_field;
        bool _7183___mcc_h236 = _source242.dtor_onDatatype;
        bool _7184___mcc_h237 = _source242.dtor_isStatic;
        BigInteger _7185___mcc_h238 = _source242.dtor_arity;
        BigInteger _7186_arity = _7185___mcc_h238;
        bool _7187_isStatic = _7184___mcc_h237;
        bool _7188_isDatatype = _7183___mcc_h236;
        Dafny.ISequence<Dafny.Rune> _7189_field = _7182___mcc_h235;
        DAST._IExpression _7190_on = _7181___mcc_h234;
        {
          RAST._IExpr _7191_onExpr;
          DCOMP._IOwnership _7192_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7193_recIdents;
          RAST._IExpr _out3322;
          DCOMP._IOwnership _out3323;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3324;
          DCOMP.COMP.GenExpr(_7190_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3322, out _out3323, out _out3324);
          _7191_onExpr = _out3322;
          _7192_onOwned = _out3323;
          _7193_recIdents = _out3324;
          Dafny.ISequence<Dafny.Rune> _7194_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _7195_onString;
          _7195_onString = (_7191_onExpr)._ToString(DCOMP.__default.IND);
          if (_7187_isStatic) {
            _7194_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7195_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent(_7189_field));
          } else {
            _7194_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _7194_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7194_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _7195_onString), ((object.Equals(_7192_onOwned, DCOMP.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _7196_args;
            _7196_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _7197_i;
            _7197_i = BigInteger.Zero;
            while ((_7197_i) < (_7186_arity)) {
              if ((_7197_i).Sign == 1) {
                _7196_args = Dafny.Sequence<Dafny.Rune>.Concat(_7196_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _7196_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7196_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_7197_i));
              _7197_i = (_7197_i) + (BigInteger.One);
            }
            _7194_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7194_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _7196_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _7194_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7194_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), _7189_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _7196_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _7194_s = Dafny.Sequence<Dafny.Rune>.Concat(_7194_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _7194_s = Dafny.Sequence<Dafny.Rune>.Concat(_7194_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _7198_typeShape;
          _7198_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _7199_i;
          _7199_i = BigInteger.Zero;
          while ((_7199_i) < (_7186_arity)) {
            if ((_7199_i).Sign == 1) {
              _7198_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7198_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _7198_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7198_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _7199_i = (_7199_i) + (BigInteger.One);
          }
          _7198_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7198_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _7194_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper(::std::rc::Rc::new("), _7194_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _7198_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">)"));
          r = RAST.Expr.create_RawExpr(_7194_s);
          RAST._IExpr _out3325;
          DCOMP._IOwnership _out3326;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3325, out _out3326);
          r = _out3325;
          resultingOwnership = _out3326;
          readIdents = _7193_recIdents;
          return ;
        }
      } else if (_source242.is_Index) {
        DAST._IExpression _7200___mcc_h239 = _source242.dtor_expr;
        DAST._ICollKind _7201___mcc_h240 = _source242.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _7202___mcc_h241 = _source242.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _7203_indices = _7202___mcc_h241;
        DAST._ICollKind _7204_collKind = _7201___mcc_h240;
        DAST._IExpression _7205_on = _7200___mcc_h239;
        {
          RAST._IExpr _7206_onExpr;
          DCOMP._IOwnership _7207_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7208_recIdents;
          RAST._IExpr _out3327;
          DCOMP._IOwnership _out3328;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3329;
          DCOMP.COMP.GenExpr(_7205_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3327, out _out3328, out _out3329);
          _7206_onExpr = _out3327;
          _7207_onOwned = _out3328;
          _7208_recIdents = _out3329;
          readIdents = _7208_recIdents;
          r = _7206_onExpr;
          BigInteger _7209_i;
          _7209_i = BigInteger.Zero;
          while ((_7209_i) < (new BigInteger((_7203_indices).Count))) {
            if (object.Equals(_7204_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _7210_idx;
            DCOMP._IOwnership _7211_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7212_recIdentsIdx;
            RAST._IExpr _out3330;
            DCOMP._IOwnership _out3331;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3332;
            DCOMP.COMP.GenExpr((_7203_indices).Select(_7209_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3330, out _out3331, out _out3332);
            _7210_idx = _out3330;
            _7211_idxOwned = _out3331;
            _7212_recIdentsIdx = _out3332;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_7210_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7212_recIdentsIdx);
            _7209_i = (_7209_i) + (BigInteger.One);
          }
          RAST._IExpr _out3333;
          DCOMP._IOwnership _out3334;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3333, out _out3334);
          r = _out3333;
          resultingOwnership = _out3334;
          return ;
        }
      } else if (_source242.is_IndexRange) {
        DAST._IExpression _7213___mcc_h242 = _source242.dtor_expr;
        bool _7214___mcc_h243 = _source242.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _7215___mcc_h244 = _source242.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _7216___mcc_h245 = _source242.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _7217_high = _7216___mcc_h245;
        Std.Wrappers._IOption<DAST._IExpression> _7218_low = _7215___mcc_h244;
        bool _7219_isArray = _7214___mcc_h243;
        DAST._IExpression _7220_on = _7213___mcc_h242;
        {
          RAST._IExpr _7221_onExpr;
          DCOMP._IOwnership _7222_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7223_recIdents;
          RAST._IExpr _out3335;
          DCOMP._IOwnership _out3336;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3337;
          DCOMP.COMP.GenExpr(_7220_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3335, out _out3336, out _out3337);
          _7221_onExpr = _out3335;
          _7222_onOwned = _out3336;
          _7223_recIdents = _out3337;
          readIdents = _7223_recIdents;
          Dafny.ISequence<Dafny.Rune> _7224_methodName;
          _7224_methodName = (((_7218_low).is_Some) ? ((((_7217_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_7217_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _7225_arguments;
          _7225_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source246 = _7218_low;
          if (_source246.is_None) {
          } else {
            DAST._IExpression _7226___mcc_h274 = _source246.dtor_value;
            DAST._IExpression _7227_l = _7226___mcc_h274;
            {
              RAST._IExpr _7228_lExpr;
              DCOMP._IOwnership _7229___v135;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7230_recIdentsL;
              RAST._IExpr _out3338;
              DCOMP._IOwnership _out3339;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3340;
              DCOMP.COMP.GenExpr(_7227_l, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3338, out _out3339, out _out3340);
              _7228_lExpr = _out3338;
              _7229___v135 = _out3339;
              _7230_recIdentsL = _out3340;
              _7225_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7225_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7228_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7230_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source247 = _7217_high;
          if (_source247.is_None) {
          } else {
            DAST._IExpression _7231___mcc_h275 = _source247.dtor_value;
            DAST._IExpression _7232_h = _7231___mcc_h275;
            {
              RAST._IExpr _7233_hExpr;
              DCOMP._IOwnership _7234___v136;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7235_recIdentsH;
              RAST._IExpr _out3341;
              DCOMP._IOwnership _out3342;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3343;
              DCOMP.COMP.GenExpr(_7232_h, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3341, out _out3342, out _out3343);
              _7233_hExpr = _out3341;
              _7234___v136 = _out3342;
              _7235_recIdentsH = _out3343;
              _7225_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7225_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7233_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7235_recIdentsH);
            }
          }
          r = _7221_onExpr;
          if (_7219_isArray) {
            if (!(_7224_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _7224_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _7224_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _7224_methodName))).Apply(_7225_arguments);
          } else {
            if (!(_7224_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_7224_methodName)).Apply(_7225_arguments);
            }
          }
          RAST._IExpr _out3344;
          DCOMP._IOwnership _out3345;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3344, out _out3345);
          r = _out3344;
          resultingOwnership = _out3345;
          return ;
        }
      } else if (_source242.is_TupleSelect) {
        DAST._IExpression _7236___mcc_h246 = _source242.dtor_expr;
        BigInteger _7237___mcc_h247 = _source242.dtor_index;
        BigInteger _7238_idx = _7237___mcc_h247;
        DAST._IExpression _7239_on = _7236___mcc_h246;
        {
          RAST._IExpr _7240_onExpr;
          DCOMP._IOwnership _7241_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7242_recIdents;
          RAST._IExpr _out3346;
          DCOMP._IOwnership _out3347;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3348;
          DCOMP.COMP.GenExpr(_7239_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3346, out _out3347, out _out3348);
          _7240_onExpr = _out3346;
          _7241_onOwnership = _out3347;
          _7242_recIdents = _out3348;
          r = (_7240_onExpr).Sel(Std.Strings.__default.OfNat(_7238_idx));
          RAST._IExpr _out3349;
          DCOMP._IOwnership _out3350;
          DCOMP.COMP.FromOwnership(r, _7241_onOwnership, expectedOwnership, out _out3349, out _out3350);
          r = _out3349;
          resultingOwnership = _out3350;
          readIdents = _7242_recIdents;
          return ;
        }
      } else if (_source242.is_Call) {
        DAST._IExpression _7243___mcc_h248 = _source242.dtor_on;
        DAST._ICallName _7244___mcc_h249 = _source242.dtor_callName;
        Dafny.ISequence<DAST._IType> _7245___mcc_h250 = _source242.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _7246___mcc_h251 = _source242.dtor_args;
        Dafny.ISequence<DAST._IExpression> _7247_args = _7246___mcc_h251;
        Dafny.ISequence<DAST._IType> _7248_typeArgs = _7245___mcc_h250;
        DAST._ICallName _7249_name = _7244___mcc_h249;
        DAST._IExpression _7250_on = _7243___mcc_h248;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _7251_onExpr;
          DCOMP._IOwnership _7252___v137;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7253_recIdents;
          RAST._IExpr _out3351;
          DCOMP._IOwnership _out3352;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3353;
          DCOMP.COMP.GenExpr(_7250_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3351, out _out3352, out _out3353);
          _7251_onExpr = _out3351;
          _7252___v137 = _out3352;
          _7253_recIdents = _out3353;
          Dafny.ISequence<RAST._IType> _7254_typeExprs;
          _7254_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_7248_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi15 = new BigInteger((_7248_typeArgs).Count);
            for (BigInteger _7255_typeI = BigInteger.Zero; _7255_typeI < _hi15; _7255_typeI++) {
              RAST._IType _7256_typeExpr;
              RAST._IType _out3354;
              _out3354 = DCOMP.COMP.GenType((_7248_typeArgs).Select(_7255_typeI), false, false);
              _7256_typeExpr = _out3354;
              _7254_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_7254_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_7256_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _7257_argExprs;
          _7257_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi16 = new BigInteger((_7247_args).Count);
          for (BigInteger _7258_i = BigInteger.Zero; _7258_i < _hi16; _7258_i++) {
            DCOMP._IOwnership _7259_argOwnership;
            _7259_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_7249_name).is_Name) && ((_7258_i) < (new BigInteger((((_7249_name).dtor_signature)).Count)))) {
              RAST._IType _7260_tpe;
              RAST._IType _out3355;
              _out3355 = DCOMP.COMP.GenType(((((_7249_name).dtor_signature)).Select(_7258_i)).dtor_typ, false, false);
              _7260_tpe = _out3355;
              if ((_7260_tpe).HasCopySemantics()) {
                _7259_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _7261_argExpr;
            DCOMP._IOwnership _7262___v138;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7263_argIdents;
            RAST._IExpr _out3356;
            DCOMP._IOwnership _out3357;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3358;
            DCOMP.COMP.GenExpr((_7247_args).Select(_7258_i), selfIdent, env, _7259_argOwnership, out _out3356, out _out3357, out _out3358);
            _7261_argExpr = _out3356;
            _7262___v138 = _out3357;
            _7263_argIdents = _out3358;
            _7257_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_7257_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_7261_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7263_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7253_recIdents);
          Dafny.ISequence<Dafny.Rune> _7264_renderedName;
          _7264_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source248) => {
            if (_source248.is_Name) {
              Dafny.ISequence<Dafny.Rune> _7265___mcc_h276 = _source248.dtor_name;
              Dafny.ISequence<DAST._IFormal> _7266___mcc_h277 = _source248.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _7267_ident = _7265___mcc_h276;
              return DCOMP.__default.escapeIdent(_7267_ident);
            } else if (_source248.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source248.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source248.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_7249_name);
          DAST._IExpression _source249 = _7250_on;
          if (_source249.is_Literal) {
            DAST._ILiteral _7268___mcc_h278 = _source249.dtor_Literal_a0;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _7269___mcc_h280 = _source249.dtor_Ident_a0;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7270___mcc_h282 = _source249.dtor_Companion_a0;
            {
              _7251_onExpr = (_7251_onExpr).MSel(_7264_renderedName);
            }
          } else if (_source249.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _7271___mcc_h284 = _source249.dtor_Tuple_a0;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7272___mcc_h286 = _source249.dtor_path;
            Dafny.ISequence<DAST._IType> _7273___mcc_h287 = _source249.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _7274___mcc_h288 = _source249.dtor_args;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _7275___mcc_h292 = _source249.dtor_dims;
            DAST._IType _7276___mcc_h293 = _source249.dtor_typ;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_DatatypeValue) {
            DAST._IDatatypeType _7277___mcc_h296 = _source249.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _7278___mcc_h297 = _source249.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _7279___mcc_h298 = _source249.dtor_variant;
            bool _7280___mcc_h299 = _source249.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7281___mcc_h300 = _source249.dtor_contents;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_Convert) {
            DAST._IExpression _7282___mcc_h306 = _source249.dtor_value;
            DAST._IType _7283___mcc_h307 = _source249.dtor_from;
            DAST._IType _7284___mcc_h308 = _source249.dtor_typ;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_SeqConstruct) {
            DAST._IExpression _7285___mcc_h312 = _source249.dtor_length;
            DAST._IExpression _7286___mcc_h313 = _source249.dtor_elem;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _7287___mcc_h316 = _source249.dtor_elements;
            DAST._IType _7288___mcc_h317 = _source249.dtor_typ;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _7289___mcc_h320 = _source249.dtor_elements;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _7290___mcc_h322 = _source249.dtor_elements;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7291___mcc_h324 = _source249.dtor_mapElems;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_MapBuilder) {
            DAST._IType _7292___mcc_h326 = _source249.dtor_keyType;
            DAST._IType _7293___mcc_h327 = _source249.dtor_valueType;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_SeqUpdate) {
            DAST._IExpression _7294___mcc_h330 = _source249.dtor_expr;
            DAST._IExpression _7295___mcc_h331 = _source249.dtor_indexExpr;
            DAST._IExpression _7296___mcc_h332 = _source249.dtor_value;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_MapUpdate) {
            DAST._IExpression _7297___mcc_h336 = _source249.dtor_expr;
            DAST._IExpression _7298___mcc_h337 = _source249.dtor_indexExpr;
            DAST._IExpression _7299___mcc_h338 = _source249.dtor_value;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_SetBuilder) {
            DAST._IType _7300___mcc_h342 = _source249.dtor_elemType;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_ToMultiset) {
            DAST._IExpression _7301___mcc_h344 = _source249.dtor_ToMultiset_a0;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_This) {
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_Ite) {
            DAST._IExpression _7302___mcc_h346 = _source249.dtor_cond;
            DAST._IExpression _7303___mcc_h347 = _source249.dtor_thn;
            DAST._IExpression _7304___mcc_h348 = _source249.dtor_els;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_UnOp) {
            DAST._IUnaryOp _7305___mcc_h352 = _source249.dtor_unOp;
            DAST._IExpression _7306___mcc_h353 = _source249.dtor_expr;
            DAST.Format._IUnOpFormat _7307___mcc_h354 = _source249.dtor_format1;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_BinOp) {
            DAST._IBinOp _7308___mcc_h358 = _source249.dtor_op;
            DAST._IExpression _7309___mcc_h359 = _source249.dtor_left;
            DAST._IExpression _7310___mcc_h360 = _source249.dtor_right;
            DAST.Format._IBinOpFormat _7311___mcc_h361 = _source249.dtor_format2;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_ArrayLen) {
            DAST._IExpression _7312___mcc_h366 = _source249.dtor_expr;
            BigInteger _7313___mcc_h367 = _source249.dtor_dim;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_MapKeys) {
            DAST._IExpression _7314___mcc_h370 = _source249.dtor_expr;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_MapValues) {
            DAST._IExpression _7315___mcc_h372 = _source249.dtor_expr;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_Select) {
            DAST._IExpression _7316___mcc_h374 = _source249.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _7317___mcc_h375 = _source249.dtor_field;
            bool _7318___mcc_h376 = _source249.dtor_isConstant;
            bool _7319___mcc_h377 = _source249.dtor_onDatatype;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_SelectFn) {
            DAST._IExpression _7320___mcc_h382 = _source249.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _7321___mcc_h383 = _source249.dtor_field;
            bool _7322___mcc_h384 = _source249.dtor_onDatatype;
            bool _7323___mcc_h385 = _source249.dtor_isStatic;
            BigInteger _7324___mcc_h386 = _source249.dtor_arity;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_Index) {
            DAST._IExpression _7325___mcc_h392 = _source249.dtor_expr;
            DAST._ICollKind _7326___mcc_h393 = _source249.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _7327___mcc_h394 = _source249.dtor_indices;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_IndexRange) {
            DAST._IExpression _7328___mcc_h398 = _source249.dtor_expr;
            bool _7329___mcc_h399 = _source249.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _7330___mcc_h400 = _source249.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _7331___mcc_h401 = _source249.dtor_high;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_TupleSelect) {
            DAST._IExpression _7332___mcc_h406 = _source249.dtor_expr;
            BigInteger _7333___mcc_h407 = _source249.dtor_index;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_Call) {
            DAST._IExpression _7334___mcc_h410 = _source249.dtor_on;
            DAST._ICallName _7335___mcc_h411 = _source249.dtor_callName;
            Dafny.ISequence<DAST._IType> _7336___mcc_h412 = _source249.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _7337___mcc_h413 = _source249.dtor_args;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _7338___mcc_h418 = _source249.dtor_params;
            DAST._IType _7339___mcc_h419 = _source249.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _7340___mcc_h420 = _source249.dtor_body;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7341___mcc_h424 = _source249.dtor_values;
            DAST._IType _7342___mcc_h425 = _source249.dtor_retType;
            DAST._IExpression _7343___mcc_h426 = _source249.dtor_expr;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _7344___mcc_h430 = _source249.dtor_name;
            DAST._IType _7345___mcc_h431 = _source249.dtor_typ;
            DAST._IExpression _7346___mcc_h432 = _source249.dtor_value;
            DAST._IExpression _7347___mcc_h433 = _source249.dtor_iifeBody;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_Apply) {
            DAST._IExpression _7348___mcc_h438 = _source249.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _7349___mcc_h439 = _source249.dtor_args;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_TypeTest) {
            DAST._IExpression _7350___mcc_h442 = _source249.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7351___mcc_h443 = _source249.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _7352___mcc_h444 = _source249.dtor_variant;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_InitializationValue) {
            DAST._IType _7353___mcc_h448 = _source249.dtor_typ;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_BoolBoundedPool) {
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_SetBoundedPool) {
            DAST._IExpression _7354___mcc_h450 = _source249.dtor_of;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else if (_source249.is_SeqBoundedPool) {
            DAST._IExpression _7355___mcc_h452 = _source249.dtor_of;
            bool _7356___mcc_h453 = _source249.dtor_includeDuplicates;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          } else {
            DAST._IExpression _7357___mcc_h456 = _source249.dtor_lo;
            DAST._IExpression _7358___mcc_h457 = _source249.dtor_hi;
            {
              _7251_onExpr = (_7251_onExpr).Sel(_7264_renderedName);
            }
          }
          r = _7251_onExpr;
          if ((new BigInteger((_7254_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_7254_typeExprs);
          }
          r = (r).Apply(_7257_argExprs);
          RAST._IExpr _out3359;
          DCOMP._IOwnership _out3360;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3359, out _out3360);
          r = _out3359;
          resultingOwnership = _out3360;
          return ;
        }
      } else if (_source242.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _7359___mcc_h252 = _source242.dtor_params;
        DAST._IType _7360___mcc_h253 = _source242.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _7361___mcc_h254 = _source242.dtor_body;
        Dafny.ISequence<DAST._IStatement> _7362_body = _7361___mcc_h254;
        DAST._IType _7363_retType = _7360___mcc_h253;
        Dafny.ISequence<DAST._IFormal> _7364_paramsDafny = _7359___mcc_h252;
        {
          Dafny.ISequence<RAST._IFormal> _7365_params;
          Dafny.ISequence<RAST._IFormal> _out3361;
          _out3361 = DCOMP.COMP.GenParams(_7364_paramsDafny);
          _7365_params = _out3361;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7366_paramNames;
          _7366_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _7367_paramTypesMap;
          _7367_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi17 = new BigInteger((_7365_params).Count);
          for (BigInteger _7368_i = BigInteger.Zero; _7368_i < _hi17; _7368_i++) {
            Dafny.ISequence<Dafny.Rune> _7369_name;
            _7369_name = ((_7365_params).Select(_7368_i)).dtor_name;
            _7366_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_7366_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_7369_name));
            _7367_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_7367_paramTypesMap, _7369_name, ((_7365_params).Select(_7368_i)).dtor_tpe);
          }
          DCOMP._IEnvironment _7370_env;
          _7370_env = DCOMP.Environment.create(_7366_paramNames, _7367_paramTypesMap);
          RAST._IExpr _7371_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7372_recIdents;
          DCOMP._IEnvironment _7373___v142;
          RAST._IExpr _out3362;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3363;
          DCOMP._IEnvironment _out3364;
          DCOMP.COMP.GenStmts(_7362_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _7370_env, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out3362, out _out3363, out _out3364);
          _7371_recursiveGen = _out3362;
          _7372_recIdents = _out3363;
          _7373___v142 = _out3364;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _7374_allReadCloned;
          _7374_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          while (!(_7372_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _7375_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_3 in (_7372_recIdents).Elements) {
              _7375_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_3;
              if ((_7372_recIdents).Contains(_7375_next)) {
                goto after__ASSIGN_SUCH_THAT_3;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 3413)");
          after__ASSIGN_SUCH_THAT_3: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_7375_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
                _7374_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(_7374_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let _this = self.clone();\n"));
              }
            } else if (!((_7366_paramNames).Contains(_7375_next))) {
              _7374_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7374_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent(_7375_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMP.__default.escapeIdent(_7375_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7375_next));
            }
            _7372_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_7372_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7375_next));
          }
          Dafny.ISequence<Dafny.Rune> _7376_paramsString;
          _7376_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          Dafny.ISequence<Dafny.Rune> _7377_paramTypes;
          _7377_paramTypes = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi18 = new BigInteger((_7365_params).Count);
          for (BigInteger _7378_i = BigInteger.Zero; _7378_i < _hi18; _7378_i++) {
            if ((_7378_i).Sign == 1) {
              _7376_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_7376_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              _7377_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_7377_paramTypes, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _7376_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7376_paramsString, DCOMP.__default.escapeIdent(((_7365_params).Select(_7378_i)).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (RAST.Type.create_Borrowed(((_7365_params).Select(_7378_i)).dtor_tpe))._ToString(DCOMP.__default.IND));
            _7377_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_7377_paramTypes, (RAST.Type.create_Borrowed(((_7365_params).Select(_7378_i)).dtor_tpe))._ToString(DCOMP.__default.IND));
          }
          RAST._IType _7379_retTypeGen;
          RAST._IType _out3365;
          _out3365 = DCOMP.COMP.GenType(_7363_retType, false, true);
          _7379_retTypeGen = _out3365;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper::<::std::rc::Rc<dyn ::std::ops::Fn("), _7377_paramTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_7379_retTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>({\n")), _7374_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(move |")), _7376_paramsString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| -> ")), (_7379_retTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), (_7371_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})})")));
          RAST._IExpr _out3366;
          DCOMP._IOwnership _out3367;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3366, out _out3367);
          r = _out3366;
          resultingOwnership = _out3367;
          return ;
        }
      } else if (_source242.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7380___mcc_h255 = _source242.dtor_values;
        DAST._IType _7381___mcc_h256 = _source242.dtor_retType;
        DAST._IExpression _7382___mcc_h257 = _source242.dtor_expr;
        DAST._IExpression _7383_expr = _7382___mcc_h257;
        DAST._IType _7384_retType = _7381___mcc_h256;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7385_values = _7380___mcc_h255;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7386_paramNames;
          _7386_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _7387_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out3368;
          _out3368 = DCOMP.COMP.GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_7388_value) => {
            return (_7388_value).dtor__0;
          })), _7385_values));
          _7387_paramFormals = _out3368;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _7389_paramTypes;
          _7389_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7390_paramNamesSet;
          _7390_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi19 = new BigInteger((_7385_values).Count);
          for (BigInteger _7391_i = BigInteger.Zero; _7391_i < _hi19; _7391_i++) {
            Dafny.ISequence<Dafny.Rune> _7392_name;
            _7392_name = (((_7385_values).Select(_7391_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _7393_rName;
            _7393_rName = DCOMP.__default.escapeIdent(_7392_name);
            _7386_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_7386_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_7393_rName));
            _7389_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_7389_paramTypes, _7393_rName, ((_7387_paramFormals).Select(_7391_i)).dtor_tpe);
            _7390_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7390_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7392_name));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _7394_s;
          _7394_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          Dafny.ISequence<Dafny.Rune> _7395_paramsString;
          _7395_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi20 = new BigInteger((_7385_values).Count);
          for (BigInteger _7396_i = BigInteger.Zero; _7396_i < _hi20; _7396_i++) {
            if ((_7396_i).Sign == 1) {
              _7395_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_7395_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IType _7397_typStr;
            RAST._IType _out3369;
            _out3369 = DCOMP.COMP.GenType((((_7385_values).Select(_7396_i)).dtor__0).dtor_typ, false, true);
            _7397_typStr = _out3369;
            RAST._IExpr _7398_valueGen;
            DCOMP._IOwnership _7399___v143;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7400_recIdents;
            RAST._IExpr _out3370;
            DCOMP._IOwnership _out3371;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3372;
            DCOMP.COMP.GenExpr(((_7385_values).Select(_7396_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3370, out _out3371, out _out3372);
            _7398_valueGen = _out3370;
            _7399___v143 = _out3371;
            _7400_recIdents = _out3372;
            _7394_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7394_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent((((_7385_values).Select(_7396_i)).dtor__0).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_7397_typStr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7400_recIdents);
            _7394_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7394_s, (_7398_valueGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
          }
          DCOMP._IEnvironment _7401_newEnv;
          _7401_newEnv = DCOMP.Environment.create(_7386_paramNames, _7389_paramTypes);
          RAST._IExpr _7402_recGen;
          DCOMP._IOwnership _7403_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7404_recIdents;
          RAST._IExpr _out3373;
          DCOMP._IOwnership _out3374;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3375;
          DCOMP.COMP.GenExpr(_7383_expr, selfIdent, _7401_newEnv, expectedOwnership, out _out3373, out _out3374, out _out3375);
          _7402_recGen = _out3373;
          _7403_recOwned = _out3374;
          _7404_recIdents = _out3375;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_7404_recIdents, _7390_paramNamesSet);
          _7394_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7394_s, (_7402_recGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}"));
          r = RAST.Expr.create_RawExpr(_7394_s);
          RAST._IExpr _out3376;
          DCOMP._IOwnership _out3377;
          DCOMP.COMP.FromOwnership(r, _7403_recOwned, expectedOwnership, out _out3376, out _out3377);
          r = _out3376;
          resultingOwnership = _out3377;
          return ;
        }
      } else if (_source242.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _7405___mcc_h258 = _source242.dtor_name;
        DAST._IType _7406___mcc_h259 = _source242.dtor_typ;
        DAST._IExpression _7407___mcc_h260 = _source242.dtor_value;
        DAST._IExpression _7408___mcc_h261 = _source242.dtor_iifeBody;
        DAST._IExpression _7409_iifeBody = _7408___mcc_h261;
        DAST._IExpression _7410_value = _7407___mcc_h260;
        DAST._IType _7411_tpe = _7406___mcc_h259;
        Dafny.ISequence<Dafny.Rune> _7412_name = _7405___mcc_h258;
        {
          RAST._IExpr _7413_valueGen;
          DCOMP._IOwnership _7414___v144;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7415_recIdents;
          RAST._IExpr _out3378;
          DCOMP._IOwnership _out3379;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3380;
          DCOMP.COMP.GenExpr(_7410_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3378, out _out3379, out _out3380);
          _7413_valueGen = _out3378;
          _7414___v144 = _out3379;
          _7415_recIdents = _out3380;
          readIdents = _7415_recIdents;
          RAST._IType _7416_valueTypeGen;
          RAST._IType _out3381;
          _out3381 = DCOMP.COMP.GenType(_7411_tpe, false, true);
          _7416_valueTypeGen = _out3381;
          RAST._IExpr _7417_bodyGen;
          DCOMP._IOwnership _7418___v145;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7419_bodyIdents;
          RAST._IExpr _out3382;
          DCOMP._IOwnership _out3383;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3384;
          DCOMP.COMP.GenExpr(_7409_iifeBody, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3382, out _out3383, out _out3384);
          _7417_bodyGen = _out3382;
          _7418___v145 = _out3383;
          _7419_bodyIdents = _out3384;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_7419_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_7412_name))));
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet "), DCOMP.__default.escapeIdent((_7412_name))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_7416_valueTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (_7413_valueGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n")), (_7417_bodyGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}")));
          RAST._IExpr _out3385;
          DCOMP._IOwnership _out3386;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3385, out _out3386);
          r = _out3385;
          resultingOwnership = _out3386;
          return ;
        }
      } else if (_source242.is_Apply) {
        DAST._IExpression _7420___mcc_h262 = _source242.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _7421___mcc_h263 = _source242.dtor_args;
        Dafny.ISequence<DAST._IExpression> _7422_args = _7421___mcc_h263;
        DAST._IExpression _7423_func = _7420___mcc_h262;
        {
          RAST._IExpr _7424_funcExpr;
          DCOMP._IOwnership _7425___v146;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7426_recIdents;
          RAST._IExpr _out3387;
          DCOMP._IOwnership _out3388;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3389;
          DCOMP.COMP.GenExpr(_7423_func, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3387, out _out3388, out _out3389);
          _7424_funcExpr = _out3387;
          _7425___v146 = _out3388;
          _7426_recIdents = _out3389;
          readIdents = _7426_recIdents;
          Dafny.ISequence<Dafny.Rune> _7427_argString;
          _7427_argString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _7428_i;
          _7428_i = BigInteger.Zero;
          while ((_7428_i) < (new BigInteger((_7422_args).Count))) {
            if ((_7428_i).Sign == 1) {
              _7427_argString = Dafny.Sequence<Dafny.Rune>.Concat(_7427_argString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IExpr _7429_argExpr;
            DCOMP._IOwnership _7430_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7431_argIdents;
            RAST._IExpr _out3390;
            DCOMP._IOwnership _out3391;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3392;
            DCOMP.COMP.GenExpr((_7422_args).Select(_7428_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3390, out _out3391, out _out3392);
            _7429_argExpr = _out3390;
            _7430_argOwned = _out3391;
            _7431_argIdents = _out3392;
            Dafny.ISequence<Dafny.Rune> _7432_argExprString;
            _7432_argExprString = (_7429_argExpr)._ToString(DCOMP.__default.IND);
            if (object.Equals(_7430_argOwned, DCOMP.Ownership.create_OwnershipOwned())) {
              _7432_argExprString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _7432_argExprString);
            }
            _7427_argString = Dafny.Sequence<Dafny.Rune>.Concat(_7427_argString, _7432_argExprString);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7431_argIdents);
            _7428_i = (_7428_i) + (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_7424_funcExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _7427_argString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("))")));
          RAST._IExpr _out3393;
          DCOMP._IOwnership _out3394;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3393, out _out3394);
          r = _out3393;
          resultingOwnership = _out3394;
          return ;
        }
      } else if (_source242.is_TypeTest) {
        DAST._IExpression _7433___mcc_h264 = _source242.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7434___mcc_h265 = _source242.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _7435___mcc_h266 = _source242.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _7436_variant = _7435___mcc_h266;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7437_dType = _7434___mcc_h265;
        DAST._IExpression _7438_on = _7433___mcc_h264;
        {
          RAST._IExpr _7439_exprGen;
          DCOMP._IOwnership _7440___v147;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7441_recIdents;
          RAST._IExpr _out3395;
          DCOMP._IOwnership _out3396;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3397;
          DCOMP.COMP.GenExpr(_7438_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3395, out _out3396, out _out3397);
          _7439_exprGen = _out3395;
          _7440___v147 = _out3396;
          _7441_recIdents = _out3397;
          RAST._IType _7442_dTypePath;
          RAST._IType _out3398;
          _out3398 = DCOMP.COMP.GenPath(_7437_dType);
          _7442_dTypePath = _out3398;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_7439_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_7442_dTypePath).MSel(DCOMP.__default.escapeIdent(_7436_variant)))._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out3399;
          DCOMP._IOwnership _out3400;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3399, out _out3400);
          r = _out3399;
          resultingOwnership = _out3400;
          readIdents = _7441_recIdents;
          return ;
        }
      } else if (_source242.is_InitializationValue) {
        DAST._IType _7443___mcc_h267 = _source242.dtor_typ;
        DAST._IType _7444_typ = _7443___mcc_h267;
        {
          RAST._IType _7445_typExpr;
          RAST._IType _out3401;
          _out3401 = DCOMP.COMP.GenType(_7444_typ, false, false);
          _7445_typExpr = _out3401;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_7445_typExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          RAST._IExpr _out3402;
          DCOMP._IOwnership _out3403;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3402, out _out3403);
          r = _out3402;
          resultingOwnership = _out3403;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source242.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out3404;
          DCOMP._IOwnership _out3405;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3404, out _out3405);
          r = _out3404;
          resultingOwnership = _out3405;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source242.is_SetBoundedPool) {
        DAST._IExpression _7446___mcc_h268 = _source242.dtor_of;
        DAST._IExpression _7447_of = _7446___mcc_h268;
        {
          RAST._IExpr _7448_exprGen;
          DCOMP._IOwnership _7449___v148;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7450_recIdents;
          RAST._IExpr _out3406;
          DCOMP._IOwnership _out3407;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3408;
          DCOMP.COMP.GenExpr(_7447_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3406, out _out3407, out _out3408);
          _7448_exprGen = _out3406;
          _7449___v148 = _out3407;
          _7450_recIdents = _out3408;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7448_exprGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()")));
          RAST._IExpr _out3409;
          DCOMP._IOwnership _out3410;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3409, out _out3410);
          r = _out3409;
          resultingOwnership = _out3410;
          readIdents = _7450_recIdents;
          return ;
        }
      } else if (_source242.is_SeqBoundedPool) {
        DAST._IExpression _7451___mcc_h269 = _source242.dtor_of;
        bool _7452___mcc_h270 = _source242.dtor_includeDuplicates;
        bool _7453_includeDuplicates = _7452___mcc_h270;
        DAST._IExpression _7454_of = _7451___mcc_h269;
        {
          RAST._IExpr _7455_exprGen;
          DCOMP._IOwnership _7456___v149;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7457_recIdents;
          RAST._IExpr _out3411;
          DCOMP._IOwnership _out3412;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3413;
          DCOMP.COMP.GenExpr(_7454_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3411, out _out3412, out _out3413);
          _7455_exprGen = _out3411;
          _7456___v149 = _out3412;
          _7457_recIdents = _out3413;
          Dafny.ISequence<Dafny.Rune> _7458_s;
          _7458_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7455_exprGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()"));
          if (!(_7453_includeDuplicates)) {
            _7458_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::itertools::Itertools::unique("), _7458_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          }
          r = RAST.Expr.create_RawExpr(_7458_s);
          RAST._IExpr _out3414;
          DCOMP._IOwnership _out3415;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3414, out _out3415);
          r = _out3414;
          resultingOwnership = _out3415;
          readIdents = _7457_recIdents;
          return ;
        }
      } else {
        DAST._IExpression _7459___mcc_h271 = _source242.dtor_lo;
        DAST._IExpression _7460___mcc_h272 = _source242.dtor_hi;
        DAST._IExpression _7461_hi = _7460___mcc_h272;
        DAST._IExpression _7462_lo = _7459___mcc_h271;
        {
          RAST._IExpr _7463_lo;
          DCOMP._IOwnership _7464___v150;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7465_recIdentsLo;
          RAST._IExpr _out3416;
          DCOMP._IOwnership _out3417;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3418;
          DCOMP.COMP.GenExpr(_7462_lo, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3416, out _out3417, out _out3418);
          _7463_lo = _out3416;
          _7464___v150 = _out3417;
          _7465_recIdentsLo = _out3418;
          RAST._IExpr _7466_hi;
          DCOMP._IOwnership _7467___v151;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7468_recIdentsHi;
          RAST._IExpr _out3419;
          DCOMP._IOwnership _out3420;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3421;
          DCOMP.COMP.GenExpr(_7461_hi, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3419, out _out3420, out _out3421);
          _7466_hi = _out3419;
          _7467___v151 = _out3420;
          _7468_recIdentsHi = _out3421;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::integer_range("), (_7463_lo)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_7466_hi)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          RAST._IExpr _out3422;
          DCOMP._IOwnership _out3423;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3422, out _out3423);
          r = _out3422;
          resultingOwnership = _out3423;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7465_recIdentsLo, _7468_recIdentsHi);
          return ;
        }
      }
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern crate dafny_runtime;\n"));
      BigInteger _7469_i;
      _7469_i = BigInteger.Zero;
      while ((_7469_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _7470_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _7471_m;
        RAST._IMod _out3424;
        _out3424 = DCOMP.COMP.GenModule((p).Select(_7469_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _7471_m = _out3424;
        _7470_generated = (_7471_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_7469_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _7470_generated);
        _7469_i = (_7469_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _7472_i;
      _7472_i = BigInteger.Zero;
      while ((_7472_i) < (new BigInteger((fullName).Count))) {
        if ((_7472_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMP.__default.escapeIdent((fullName).Select(_7472_i)));
        _7472_i = (_7472_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMP
namespace DCOMPUTF16 {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in119 = (i).Drop(new BigInteger(2));
            i = _in119;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in120 = (i).Drop(BigInteger.One);
        i = _in120;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _7473___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_7473___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _7473___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_7473___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in121 = (i).Drop(new BigInteger(2));
        i = _in121;
        goto TAIL_CALL_START;
      } else {
        _7473___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_7473___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in122 = (i).Drop(BigInteger.One);
        i = _in122;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _7474___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_7474___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _7474___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_7474___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in123 = (i).Drop(BigInteger.One);
        i = _in123;
        goto TAIL_CALL_START;
      } else {
        _7474___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_7474___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in124 = (i).Drop(BigInteger.One);
        i = _in124;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMPUTF16.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMPUTF16.__default.has__special(i)))) && (!(DCOMPUTF16.__default.reserved__rust).Contains(i))) && (!(DCOMPUTF16.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMPUTF16.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMPUTF16.__default.is__tuple__builder(i)) {
        return DCOMPUTF16.__default.better__tuple__builder__name(i);
      } else if ((DCOMPUTF16.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMPUTF16.__default.is__idiomatic__rust__id(i)) {
        return DCOMPUTF16.__default.idiomatic__rust(i);
      } else if (DCOMPUTF16.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _7475_r = DCOMPUTF16.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _7475_r);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static bool UnicodeChars { get {
      return false;
    } }
    public static Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if (DCOMPUTF16.__default.UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public static RAST._IType DafnyCharUnderlying { get {
      if (DCOMPUTF16.__default.UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMPUTF16._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMPUTF16._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IOwnership>(DCOMPUTF16.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IUnassignedStatus {
    bool is_Unassigned { get; }
    bool is_WithTracker { get; }
    Dafny.ISequence<Dafny.Rune> dtor_tracker__name { get; }
    _IUnassignedStatus DowncastClone();
  }
  public abstract class UnassignedStatus : _IUnassignedStatus {
    public UnassignedStatus() {
    }
    private static readonly DCOMPUTF16._IUnassignedStatus theDefault = create_Unassigned();
    public static DCOMPUTF16._IUnassignedStatus Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus>(DCOMPUTF16.UnassignedStatus.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnassignedStatus create_Unassigned() {
      return new UnassignedStatus_Unassigned();
    }
    public static _IUnassignedStatus create_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) {
      return new UnassignedStatus_WithTracker(tracker__name);
    }
    public bool is_Unassigned { get { return this is UnassignedStatus_Unassigned; } }
    public bool is_WithTracker { get { return this is UnassignedStatus_WithTracker; } }
    public Dafny.ISequence<Dafny.Rune> dtor_tracker__name {
      get {
        var d = this;
        return ((UnassignedStatus_WithTracker)d)._tracker__name;
      }
    }
    public abstract _IUnassignedStatus DowncastClone();
  }
  public class UnassignedStatus_Unassigned : UnassignedStatus {
    public UnassignedStatus_Unassigned() : base() {
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_Unassigned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.UnassignedStatus_Unassigned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.UnassignedStatus.Unassigned";
      return s;
    }
  }
  public class UnassignedStatus_WithTracker : UnassignedStatus {
    public readonly Dafny.ISequence<Dafny.Rune> _tracker__name;
    public UnassignedStatus_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) : base() {
      this._tracker__name = tracker__name;
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_WithTracker(_tracker__name);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.UnassignedStatus_WithTracker;
      return oth != null && object.Equals(this._tracker__name, oth._tracker__name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tracker__name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.UnassignedStatus.WithTracker";
      s += "(";
      s += this._tracker__name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMPUTF16._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._names = names;
      this._types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_names, _types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Environment;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
    private static readonly DCOMPUTF16._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMPUTF16._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment>(DCOMPUTF16.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._types;
      }
    }
    public static DCOMPUTF16._IEnvironment Empty() {
      return DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).HasCopySemantics());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).HasCopySemantics(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMPUTF16._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
  }

  public partial class COMP {
    public COMP() {
    }
    public static RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<RAST._IModDecl> _7476_body;
      Dafny.ISequence<RAST._IModDecl> _out3425;
      _out3425 = DCOMPUTF16.COMP.GenModuleBody((mod).dtor_body, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
      _7476_body = _out3425;
      s = (((mod).dtor_isExtern) ? (RAST.Mod.create_ExternMod(DCOMPUTF16.__default.escapeIdent((mod).dtor_name))) : (RAST.Mod.create_Mod(DCOMPUTF16.__default.escapeIdent((mod).dtor_name), _7476_body)));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      BigInteger _7477_i;
      _7477_i = BigInteger.Zero;
      while ((_7477_i) < (new BigInteger((body).Count))) {
        Dafny.ISequence<RAST._IModDecl> _7478_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source250 = (body).Select(_7477_i);
        if (_source250.is_Module) {
          DAST._IModule _7479___mcc_h0 = _source250.dtor_Module_a0;
          DAST._IModule _7480_m = _7479___mcc_h0;
          RAST._IMod _7481_mm;
          RAST._IMod _out3426;
          _out3426 = DCOMPUTF16.COMP.GenModule(_7480_m, containingPath);
          _7481_mm = _out3426;
          _7478_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_7481_mm));
        } else if (_source250.is_Class) {
          DAST._IClass _7482___mcc_h1 = _source250.dtor_Class_a0;
          DAST._IClass _7483_c = _7482___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out3427;
          _out3427 = DCOMPUTF16.COMP.GenClass(_7483_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_7483_c).dtor_name)));
          _7478_generated = _out3427;
        } else if (_source250.is_Trait) {
          DAST._ITrait _7484___mcc_h2 = _source250.dtor_Trait_a0;
          DAST._ITrait _7485_t = _7484___mcc_h2;
          Dafny.ISequence<Dafny.Rune> _7486_tt;
          Dafny.ISequence<Dafny.Rune> _out3428;
          _out3428 = DCOMPUTF16.COMP.GenTrait(_7485_t, containingPath);
          _7486_tt = _out3428;
          _7478_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_RawDecl(_7486_tt));
        } else if (_source250.is_Newtype) {
          DAST._INewtype _7487___mcc_h3 = _source250.dtor_Newtype_a0;
          DAST._INewtype _7488_n = _7487___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out3429;
          _out3429 = DCOMPUTF16.COMP.GenNewtype(_7488_n);
          _7478_generated = _out3429;
        } else {
          DAST._IDatatype _7489___mcc_h4 = _source250.dtor_Datatype_a0;
          DAST._IDatatype _7490_d = _7489___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out3430;
          _out3430 = DCOMPUTF16.COMP.GenDatatype(_7490_d);
          _7478_generated = _out3430;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _7478_generated);
        _7477_i = (_7477_i) + (BigInteger.One);
      }
      return s;
    }
    public static void GenTypeParameters(Dafny.ISequence<DAST._IType> @params, out Dafny.ISet<DAST._IType> typeParamsSet, out Dafny.ISequence<RAST._ITypeParam> typeParams, out Dafny.ISequence<RAST._ITypeParam> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSet = Dafny.Set<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      BigInteger _7491_tpI;
      _7491_tpI = BigInteger.Zero;
      if ((new BigInteger((@params).Count)).Sign == 1) {
        while ((_7491_tpI) < (new BigInteger((@params).Count))) {
          DAST._IType _7492_tp;
          _7492_tp = (@params).Select(_7491_tpI);
          typeParamsSet = Dafny.Set<DAST._IType>.Union(typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_7492_tp));
          RAST._IType _7493_genTp;
          RAST._IType _out3431;
          _out3431 = DCOMPUTF16.COMP.GenType(_7492_tp, false, false);
          _7493_genTp = _out3431;
          typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_7493_genTp)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<RAST._IType>.FromElements())));
          _7491_tpI = (_7491_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<RAST._IType> _7494_baseConstraints;
      _7494_baseConstraints = Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.StaticTrait);
      constrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(typeParams, _7494_baseConstraints);
    }
    public static Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _7495_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _7496_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _7497_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _7498_whereConstraints;
      Dafny.ISet<DAST._IType> _out3432;
      Dafny.ISequence<RAST._ITypeParam> _out3433;
      Dafny.ISequence<RAST._ITypeParam> _out3434;
      Dafny.ISequence<Dafny.Rune> _out3435;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3432, out _out3433, out _out3434, out _out3435);
      _7495_typeParamsSet = _out3432;
      _7496_sTypeParams = _out3433;
      _7497_sConstrainedTypeParams = _out3434;
      _7498_whereConstraints = _out3435;
      Dafny.ISequence<Dafny.Rune> _7499_constrainedTypeParams;
      _7499_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_7497_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IFormal> _7500_fields;
      _7500_fields = Dafny.Sequence<RAST._IFormal>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _7501_fieldInits;
      _7501_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _7502_fieldI;
      _7502_fieldI = BigInteger.Zero;
      while ((_7502_fieldI) < (new BigInteger(((c).dtor_fields).Count))) {
        DAST._IField _7503_field;
        _7503_field = ((c).dtor_fields).Select(_7502_fieldI);
        RAST._IType _7504_fieldType;
        RAST._IType _out3436;
        _out3436 = DCOMPUTF16.COMP.GenType(((_7503_field).dtor_formal).dtor_typ, false, false);
        _7504_fieldType = _out3436;
        _7500_fields = Dafny.Sequence<RAST._IFormal>.Concat(_7500_fields, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub "), DCOMPUTF16.__default.escapeIdent(((_7503_field).dtor_formal).dtor_name)), RAST.Type.create_TypeApp(RAST.__default.refcell__type, Dafny.Sequence<RAST._IType>.FromElements(_7504_fieldType)))));
        Std.Wrappers._IOption<DAST._IExpression> _source251 = (_7503_field).dtor_defaultValue;
        if (_source251.is_None) {
          {
            RAST._IExpr _7505_RefCellNew;
            _7505_RefCellNew = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
            RAST._IExpr _7506_default;
            _7506_default = RAST.__default.std__Default__default;
            _7501_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7501_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(((_7503_field).dtor_formal).dtor_name), (_7505_RefCellNew).Apply1(_7506_default))));
          }
        } else {
          DAST._IExpression _7507___mcc_h0 = _source251.dtor_value;
          DAST._IExpression _7508_e = _7507___mcc_h0;
          {
            RAST._IExpr _7509_expr;
            DCOMPUTF16._IOwnership _7510___v40;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7511___v41;
            RAST._IExpr _out3437;
            DCOMPUTF16._IOwnership _out3438;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3439;
            DCOMPUTF16.COMP.GenExpr(_7508_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3437, out _out3438, out _out3439);
            _7509_expr = _out3437;
            _7510___v40 = _out3438;
            _7511___v41 = _out3439;
            RAST._IExpr _7512_RefCellNew;
            _7512_RefCellNew = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
            _7501_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7501_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(((_7503_field).dtor_formal).dtor_name), (_7512_RefCellNew).Apply1(_7509_expr))));
          }
        }
        _7502_fieldI = (_7502_fieldI) + (BigInteger.One);
      }
      BigInteger _7513_typeParamI;
      _7513_typeParamI = BigInteger.Zero;
      while ((_7513_typeParamI) < (new BigInteger(((c).dtor_typeParams).Count))) {
        RAST._IType _7514_tpeGen;
        RAST._IType _out3440;
        _out3440 = DCOMPUTF16.COMP.GenType(((c).dtor_typeParams).Select(_7513_typeParamI), false, false);
        _7514_tpeGen = _out3440;
        _7500_fields = Dafny.Sequence<RAST._IFormal>.Concat(_7500_fields, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_7513_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_7514_tpeGen)))));
        _7501_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7501_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_7513_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
        _7513_typeParamI = (_7513_typeParamI) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.Rune> _7515_datatypeName;
      _7515_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      RAST._IStruct _7516_struct;
      _7516_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _7515_datatypeName, _7496_sTypeParams, RAST.Formals.create_NamedFormals(_7500_fields));
      Dafny.ISequence<RAST._IType> _7517_typeParamsAsTypes;
      _7517_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_7518_typeParam) => {
        return RAST.__default.RawType((_7518_typeParam).dtor_content);
      })), _7496_sTypeParams);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_7516_struct));
      Dafny.ISequence<RAST._IImplMember> _7519_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _7520_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out3441;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3442;
      DCOMPUTF16.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(path, (c).dtor_attributes))), _7495_typeParamsSet, out _out3441, out _out3442);
      _7519_implBodyRaw = _out3441;
      _7520_traitBodies = _out3442;
      Dafny.ISequence<RAST._IImplMember> _7521_implBody;
      _7521_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(RAST.Expr.create_Identifier(_7515_datatypeName), _7501_fieldInits))))), _7519_implBodyRaw);
      RAST._IImpl _7522_i;
      _7522_i = RAST.Impl.create_Impl(_7497_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7515_datatypeName), _7517_typeParamsAsTypes), _7498_whereConstraints, _7521_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_7522_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _7523_i;
        _7523_i = BigInteger.Zero;
        while ((_7523_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _7524_superClass;
          _7524_superClass = ((c).dtor_superClasses).Select(_7523_i);
          DAST._IType _source252 = _7524_superClass;
          if (_source252.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7525___mcc_h1 = _source252.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _7526___mcc_h2 = _source252.dtor_typeArgs;
            DAST._IResolvedType _7527___mcc_h3 = _source252.dtor_resolved;
            DAST._IResolvedType _source253 = _7527___mcc_h3;
            if (_source253.is_Datatype) {
              DAST._IDatatypeType _7528___mcc_h7 = _source253.dtor_datatypeType;
            } else if (_source253.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7529___mcc_h9 = _source253.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _7530___mcc_h10 = _source253.dtor_attributes;
              Dafny.ISequence<DAST._IType> _7531_typeArgs = _7526___mcc_h2;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7532_traitPath = _7525___mcc_h1;
              {
                RAST._IType _7533_pathStr;
                RAST._IType _out3443;
                _out3443 = DCOMPUTF16.COMP.GenPath(_7532_traitPath);
                _7533_pathStr = _out3443;
                Dafny.ISequence<RAST._IType> _7534_typeArgs;
                Dafny.ISequence<RAST._IType> _out3444;
                _out3444 = DCOMPUTF16.COMP.GenTypeArgs(_7531_typeArgs, false, false);
                _7534_typeArgs = _out3444;
                Dafny.ISequence<RAST._IImplMember> _7535_body;
                _7535_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_7520_traitBodies).Contains(_7532_traitPath)) {
                  _7535_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_7520_traitBodies,_7532_traitPath);
                }
                RAST._IType _7536_genSelfPath;
                RAST._IType _out3445;
                _out3445 = DCOMPUTF16.COMP.GenPath(path);
                _7536_genSelfPath = _out3445;
                RAST._IModDecl _7537_x;
                _7537_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7497_sConstrainedTypeParams, RAST.Type.create_TypeApp(_7533_pathStr, _7534_typeArgs), RAST.__default.Rc(RAST.Type.create_TypeApp(_7536_genSelfPath, _7517_typeParamsAsTypes)), _7498_whereConstraints, _7535_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_7537_x));
              }
            } else {
              DAST._IType _7538___mcc_h13 = _source253.dtor_baseType;
              DAST._INewtypeRange _7539___mcc_h14 = _source253.dtor_range;
              bool _7540___mcc_h15 = _source253.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _7541___mcc_h16 = _source253.dtor_attributes;
            }
          } else if (_source252.is_Nullable) {
            DAST._IType _7542___mcc_h21 = _source252.dtor_Nullable_a0;
          } else if (_source252.is_Tuple) {
            Dafny.ISequence<DAST._IType> _7543___mcc_h23 = _source252.dtor_Tuple_a0;
          } else if (_source252.is_Array) {
            DAST._IType _7544___mcc_h25 = _source252.dtor_element;
            BigInteger _7545___mcc_h26 = _source252.dtor_dims;
          } else if (_source252.is_Seq) {
            DAST._IType _7546___mcc_h29 = _source252.dtor_element;
          } else if (_source252.is_Set) {
            DAST._IType _7547___mcc_h31 = _source252.dtor_element;
          } else if (_source252.is_Multiset) {
            DAST._IType _7548___mcc_h33 = _source252.dtor_element;
          } else if (_source252.is_Map) {
            DAST._IType _7549___mcc_h35 = _source252.dtor_key;
            DAST._IType _7550___mcc_h36 = _source252.dtor_value;
          } else if (_source252.is_SetBuilder) {
            DAST._IType _7551___mcc_h39 = _source252.dtor_element;
          } else if (_source252.is_MapBuilder) {
            DAST._IType _7552___mcc_h41 = _source252.dtor_key;
            DAST._IType _7553___mcc_h42 = _source252.dtor_value;
          } else if (_source252.is_Arrow) {
            Dafny.ISequence<DAST._IType> _7554___mcc_h45 = _source252.dtor_args;
            DAST._IType _7555___mcc_h46 = _source252.dtor_result;
          } else if (_source252.is_Primitive) {
            DAST._IPrimitive _7556___mcc_h49 = _source252.dtor_Primitive_a0;
          } else if (_source252.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _7557___mcc_h51 = _source252.dtor_Passthrough_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _7558___mcc_h53 = _source252.dtor_TypeArg_a0;
          }
          _7523_i = (_7523_i) + (BigInteger.One);
        }
      }
      RAST._IImpl _7559_d;
      _7559_d = RAST.Impl.create_ImplFor(_7497_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7515_datatypeName), _7517_typeParamsAsTypes), _7498_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(_7515_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::new()"))))))));
      Dafny.ISequence<RAST._IModDecl> _7560_defaultImpl;
      _7560_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_7559_d));
      RAST._IImpl _7561_p;
      _7561_p = RAST.Impl.create_ImplFor(_7497_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7515_datatypeName), _7517_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), ((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")"))))))));
      Dafny.ISequence<RAST._IModDecl> _7562_printImpl;
      _7562_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_7561_p));
      RAST._IImpl _7563_pp;
      _7563_pp = RAST.Impl.create_ImplFor(_7496_sTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::cmp::PartialEq")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7515_datatypeName), _7517_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("eq"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("other"), RAST.__default.SelfBorrowed)), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ptr::eq(self, other)")))))));
      Dafny.ISequence<RAST._IModDecl> _7564_ptrPartialEqImpl;
      _7564_ptrPartialEqImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_7563_pp));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(s, _7560_defaultImpl), _7562_printImpl), _7564_ptrPartialEqImpl);
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISet<DAST._IType> _7565_typeParamsSet;
      _7565_typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._IType> _7566_typeParams;
      _7566_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _7567_tpI;
      _7567_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_7567_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._IType _7568_tp;
          _7568_tp = ((t).dtor_typeParams).Select(_7567_tpI);
          _7565_typeParamsSet = Dafny.Set<DAST._IType>.Union(_7565_typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_7568_tp));
          RAST._IType _7569_genTp;
          RAST._IType _out3446;
          _out3446 = DCOMPUTF16.COMP.GenType(_7568_tp, false, false);
          _7569_genTp = _out3446;
          _7566_typeParams = Dafny.Sequence<RAST._IType>.Concat(_7566_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_7569_genTp));
          _7567_tpI = (_7567_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7570_fullPath;
      _7570_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _7571_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _7572___v45;
      Dafny.ISequence<RAST._IImplMember> _out3447;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3448;
      DCOMPUTF16.COMP.GenClassImplBody((t).dtor_body, true, DAST.Type.create_Path(_7570_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Trait(_7570_fullPath, (t).dtor_attributes)), _7565_typeParamsSet, out _out3447, out _out3448);
      _7571_implBody = _out3447;
      _7572___v45 = _out3448;
      s = (RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMPUTF16.__default.escapeIdent((t).dtor_name)), _7566_typeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _7571_implBody)))._ToString(DCOMPUTF16.__default.IND);
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _7573_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _7574_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _7575_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _7576_whereConstraints;
      Dafny.ISet<DAST._IType> _out3449;
      Dafny.ISequence<RAST._ITypeParam> _out3450;
      Dafny.ISequence<RAST._ITypeParam> _out3451;
      Dafny.ISequence<Dafny.Rune> _out3452;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3449, out _out3450, out _out3451, out _out3452);
      _7573_typeParamsSet = _out3449;
      _7574_sTypeParams = _out3450;
      _7575_sConstrainedTypeParams = _out3451;
      _7576_whereConstraints = _out3452;
      Dafny.ISequence<RAST._IType> _7577_typeParamsAsTypes;
      _7577_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_7578_t) => {
        return RAST.__default.RawType((_7578_t).dtor_content);
      })), _7574_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _7579_constrainedTypeParams;
      _7579_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_7575_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _7580_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source254 = DCOMPUTF16.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source254.is_None) {
        RAST._IType _out3453;
        _out3453 = DCOMPUTF16.COMP.GenType((c).dtor_base, false, false);
        _7580_underlyingType = _out3453;
      } else {
        RAST._IType _7581___mcc_h0 = _source254.dtor_value;
        RAST._IType _7582_v = _7581___mcc_h0;
        _7580_underlyingType = _7582_v;
      }
      DAST._IType _7583_resultingType;
      _7583_resultingType = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Newtype((c).dtor_base, (c).dtor_range, false, (c).dtor_attributes));
      Dafny.ISequence<Dafny.Rune> _7584_datatypeName;
      _7584_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _7584_datatypeName, _7574_sTypeParams, RAST.Formals.create_NamelessFormals(Dafny.Sequence<RAST._INamelessFormal>.FromElements(RAST.NamelessFormal.create(RAST.Visibility.create_PUB(), _7580_underlyingType))))));
      RAST._IExpr _7585_fnBody;
      _7585_fnBody = RAST.Expr.create_Identifier(_7584_datatypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source255 = (c).dtor_witnessExpr;
      if (_source255.is_None) {
        {
          _7585_fnBody = (_7585_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _7586___mcc_h1 = _source255.dtor_value;
        DAST._IExpression _7587_e = _7586___mcc_h1;
        {
          DAST._IExpression _7588_e;
          _7588_e = ((object.Equals((c).dtor_base, _7583_resultingType)) ? (_7587_e) : (DAST.Expression.create_Convert(_7587_e, (c).dtor_base, _7583_resultingType)));
          RAST._IExpr _7589_eStr;
          DCOMPUTF16._IOwnership _7590___v46;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7591___v47;
          RAST._IExpr _out3454;
          DCOMPUTF16._IOwnership _out3455;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3456;
          DCOMPUTF16.COMP.GenExpr(_7588_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3454, out _out3455, out _out3456);
          _7589_eStr = _out3454;
          _7590___v46 = _out3455;
          _7591___v47 = _out3456;
          _7585_fnBody = (_7585_fnBody).Apply1(_7589_eStr);
        }
      }
      RAST._IImplMember _7592_body;
      _7592_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_7585_fnBody)));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7575_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7584_datatypeName), _7577_typeParamsAsTypes), _7576_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_7592_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7575_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7584_datatypeName), _7577_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7575_sConstrainedTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7584_datatypeName), _7577_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_7580_underlyingType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _7593_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _7594_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _7595_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _7596_whereConstraints;
      Dafny.ISet<DAST._IType> _out3457;
      Dafny.ISequence<RAST._ITypeParam> _out3458;
      Dafny.ISequence<RAST._ITypeParam> _out3459;
      Dafny.ISequence<Dafny.Rune> _out3460;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3457, out _out3458, out _out3459, out _out3460);
      _7593_typeParamsSet = _out3457;
      _7594_sTypeParams = _out3458;
      _7595_sConstrainedTypeParams = _out3459;
      _7596_whereConstraints = _out3460;
      Dafny.ISequence<RAST._IType> _7597_typeParamsAsTypes;
      _7597_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_7598_t) => {
        return RAST.__default.RawType((_7598_t).dtor_content);
      })), _7594_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _7599_constrainedTypeParams;
      _7599_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_7595_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.IND, DCOMPUTF16.__default.IND));
      Dafny.ISequence<Dafny.Rune> _7600_datatypeName;
      _7600_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _7601_ctors;
      _7601_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _7602_i;
      _7602_i = BigInteger.Zero;
      while ((_7602_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _7603_ctor;
        _7603_ctor = ((c).dtor_ctors).Select(_7602_i);
        Dafny.ISequence<RAST._IFormal> _7604_ctorArgs;
        _7604_ctorArgs = Dafny.Sequence<RAST._IFormal>.FromElements();
        BigInteger _7605_j;
        _7605_j = BigInteger.Zero;
        while ((_7605_j) < (new BigInteger(((_7603_ctor).dtor_args).Count))) {
          DAST._IFormal _7606_formal;
          _7606_formal = ((_7603_ctor).dtor_args).Select(_7605_j);
          RAST._IType _7607_formalType;
          RAST._IType _out3461;
          _out3461 = DCOMPUTF16.COMP.GenType((_7606_formal).dtor_typ, false, false);
          _7607_formalType = _out3461;
          if ((c).dtor_isCo) {
            _7604_ctorArgs = Dafny.Sequence<RAST._IFormal>.Concat(_7604_ctorArgs, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_7606_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_7607_formalType)))));
          } else {
            _7604_ctorArgs = Dafny.Sequence<RAST._IFormal>.Concat(_7604_ctorArgs, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_7606_formal).dtor_name), _7607_formalType)));
          }
          _7605_j = (_7605_j) + (BigInteger.One);
        }
        _7601_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_7601_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMPUTF16.__default.escapeIdent((_7603_ctor).dtor_name), RAST.Formals.create_NamedFormals(_7604_ctorArgs))));
        _7602_i = (_7602_i) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7608_selfPath;
      _7608_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _7609_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _7610_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out3462;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3463;
      DCOMPUTF16.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(_7608_selfPath, (c).dtor_attributes))), _7593_typeParamsSet, out _out3462, out _out3463);
      _7609_implBodyRaw = _out3462;
      _7610_traitBodies = _out3463;
      Dafny.ISequence<RAST._IImplMember> _7611_implBody;
      _7611_implBody = _7609_implBodyRaw;
      _7602_i = BigInteger.Zero;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7612_emittedFields;
      _7612_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      while ((_7602_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _7613_ctor;
        _7613_ctor = ((c).dtor_ctors).Select(_7602_i);
        BigInteger _7614_j;
        _7614_j = BigInteger.Zero;
        while ((_7614_j) < (new BigInteger(((_7613_ctor).dtor_args).Count))) {
          DAST._IFormal _7615_formal;
          _7615_formal = ((_7613_ctor).dtor_args).Select(_7614_j);
          if (!((_7612_emittedFields).Contains((_7615_formal).dtor_name))) {
            _7612_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7612_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_7615_formal).dtor_name));
            RAST._IType _7616_formalType;
            RAST._IType _out3464;
            _out3464 = DCOMPUTF16.COMP.GenType((_7615_formal).dtor_typ, false, false);
            _7616_formalType = _out3464;
            Dafny.ISequence<RAST._IMatchCase> _7617_cases;
            _7617_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _7618_k;
            _7618_k = BigInteger.Zero;
            while ((_7618_k) < (new BigInteger(((c).dtor_ctors).Count))) {
              DAST._IDatatypeCtor _7619_ctor2;
              _7619_ctor2 = ((c).dtor_ctors).Select(_7618_k);
              Dafny.ISequence<Dafny.Rune> _7620_pattern;
              _7620_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7600_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent((_7619_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _7621_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              BigInteger _7622_l;
              _7622_l = BigInteger.Zero;
              bool _7623_hasMatchingField;
              _7623_hasMatchingField = false;
              while ((_7622_l) < (new BigInteger(((_7619_ctor2).dtor_args).Count))) {
                DAST._IFormal _7624_formal2;
                _7624_formal2 = ((_7619_ctor2).dtor_args).Select(_7622_l);
                if (((_7615_formal).dtor_name).Equals((_7624_formal2).dtor_name)) {
                  _7623_hasMatchingField = true;
                }
                _7620_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7620_pattern, DCOMPUTF16.__default.escapeIdent((_7624_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
                _7622_l = (_7622_l) + (BigInteger.One);
              }
              _7620_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_7620_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_7623_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _7621_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMPUTF16.__default.escapeIdent((_7615_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _7621_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.escapeIdent((_7615_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _7621_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _7625_ctorMatch;
              _7625_ctorMatch = RAST.MatchCase.create(_7620_pattern, RAST.Expr.create_RawExpr(_7621_rhs));
              _7617_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_7617_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_7625_ctorMatch));
              _7618_k = (_7618_k) + (BigInteger.One);
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _7617_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_7617_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_7600_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _7626_methodBody;
            _7626_methodBody = RAST.Expr.create_Match(RAST.__default.self, _7617_cases);
            _7611_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_7611_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMPUTF16.__default.escapeIdent((_7615_formal).dtor_name), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_7616_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_7626_methodBody)))));
          }
          _7614_j = (_7614_j) + (BigInteger.One);
        }
        _7602_i = (_7602_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        BigInteger _7627_typeI;
        _7627_typeI = BigInteger.Zero;
        Dafny.ISequence<RAST._IType> _7628_types;
        _7628_types = Dafny.Sequence<RAST._IType>.FromElements();
        while ((_7627_typeI) < (new BigInteger(((c).dtor_typeParams).Count))) {
          RAST._IType _7629_genTp;
          RAST._IType _out3465;
          _out3465 = DCOMPUTF16.COMP.GenType(((c).dtor_typeParams).Select(_7627_typeI), false, false);
          _7629_genTp = _out3465;
          _7628_types = Dafny.Sequence<RAST._IType>.Concat(_7628_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData::")), Dafny.Sequence<RAST._IType>.FromElements(_7629_genTp))));
          _7627_typeI = (_7627_typeI) + (BigInteger.One);
        }
        _7601_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_7601_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Formals.create_NamelessFormals(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessFormal>(((System.Func<RAST._IType, RAST._INamelessFormal>)((_7630_tpe) => {
  return RAST.NamelessFormal.create(RAST.Visibility.create_PRIV(), _7630_tpe);
})), _7628_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _7631_enumBody;
      _7631_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _7600_datatypeName, _7594_sTypeParams, _7601_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_7595_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7600_datatypeName), _7597_typeParamsAsTypes), _7596_whereConstraints, _7611_implBody)));
      _7602_i = BigInteger.Zero;
      Dafny.ISequence<RAST._IMatchCase> _7632_printImplBodyCases;
      _7632_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      while ((_7602_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _7633_ctor;
        _7633_ctor = ((c).dtor_ctors).Select(_7602_i);
        Dafny.ISequence<Dafny.Rune> _7634_ctorMatch;
        _7634_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.escapeIdent((_7633_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _7635_modulePrefix;
        _7635_modulePrefix = (((((c).dtor_enclosingModule)).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(((c).dtor_enclosingModule), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _7636_printRhs;
        _7636_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _7635_modulePrefix), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent((_7633_ctor).dtor_name)), (((_7633_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        BigInteger _7637_j;
        _7637_j = BigInteger.Zero;
        while ((_7637_j) < (new BigInteger(((_7633_ctor).dtor_args).Count))) {
          DAST._IFormal _7638_formal;
          _7638_formal = ((_7633_ctor).dtor_args).Select(_7637_j);
          _7634_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7634_ctorMatch, DCOMPUTF16.__default.escapeIdent((_7638_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          if ((_7637_j).Sign == 1) {
            _7636_printRhs = (_7636_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _7636_printRhs = (_7636_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMPUTF16.__default.escapeIdent((_7638_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
          _7637_j = (_7637_j) + (BigInteger.One);
        }
        _7634_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_7634_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_7633_ctor).dtor_hasAnyArgs) {
          _7636_printRhs = (_7636_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _7636_printRhs = (_7636_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _7632_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_7632_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7600_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _7634_ctorMatch), RAST.Expr.create_Block(_7636_printRhs))));
        _7602_i = (_7602_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _7632_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_7632_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_7600_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      RAST._IExpr _7639_printImplBody;
      _7639_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _7632_printImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _7640_printImpl;
      _7640_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7595_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7600_datatypeName), _7597_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_7639_printImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _7641_defaultImpl;
      _7641_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _7642_asRefImpl;
      _7642_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        _7602_i = BigInteger.Zero;
        RAST._IExpr _7643_structName;
        _7643_structName = (RAST.Expr.create_Identifier(_7600_datatypeName)).MSel(DCOMPUTF16.__default.escapeIdent((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _7644_structAssignments;
        _7644_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        while ((_7602_i) < (new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count))) {
          DAST._IFormal _7645_formal;
          _7645_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_7602_i);
          _7644_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7644_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent((_7645_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
          _7602_i = (_7602_i) + (BigInteger.One);
        }
        Dafny.ISequence<RAST._ITypeParam> _7646_defaultConstrainedTypeParams;
        _7646_defaultConstrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(_7594_sTypeParams, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _7647_fullType;
        _7647_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7600_datatypeName), _7597_typeParamsAsTypes);
        _7641_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7646_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _7647_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_7647_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_7643_structName, _7644_structAssignments))))))));
        _7642_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7646_defaultConstrainedTypeParams, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_7647_fullType), RAST.Type.create_Borrowed(_7647_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_7631_enumBody, _7640_printImpl), _7641_defaultImpl), _7642_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi21 = new BigInteger((p).Count);
        for (BigInteger _7648_i = BigInteger.Zero; _7648_i < _hi21; _7648_i++) {
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(((p).Select(_7648_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi22 = new BigInteger((p).Count);
        for (BigInteger _7649_i = BigInteger.Zero; _7649_i < _hi22; _7649_i++) {
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(((p).Select(_7649_i))));
        }
      }
      return r;
    }
    public static Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, bool inBinding, bool inFn)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _7650_i;
        _7650_i = BigInteger.Zero;
        while ((_7650_i) < (new BigInteger((args).Count))) {
          RAST._IType _7651_genTp;
          RAST._IType _out3466;
          _out3466 = DCOMPUTF16.COMP.GenType((args).Select(_7650_i), inBinding, inFn);
          _7651_genTp = _out3466;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_7651_genTp));
          _7650_i = (_7650_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public static bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public static RAST._IType GenType(DAST._IType c, bool inBinding, bool inFn)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source256 = c;
      if (_source256.is_Path) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7652___mcc_h0 = _source256.dtor_Path_a0;
        Dafny.ISequence<DAST._IType> _7653___mcc_h1 = _source256.dtor_typeArgs;
        DAST._IResolvedType _7654___mcc_h2 = _source256.dtor_resolved;
        DAST._IResolvedType _7655_resolved = _7654___mcc_h2;
        Dafny.ISequence<DAST._IType> _7656_args = _7653___mcc_h1;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7657_p = _7652___mcc_h0;
        {
          RAST._IType _7658_t;
          RAST._IType _out3467;
          _out3467 = DCOMPUTF16.COMP.GenPath(_7657_p);
          _7658_t = _out3467;
          Dafny.ISequence<RAST._IType> _7659_typeArgs;
          Dafny.ISequence<RAST._IType> _out3468;
          _out3468 = DCOMPUTF16.COMP.GenTypeArgs(_7656_args, inBinding, inFn);
          _7659_typeArgs = _out3468;
          s = RAST.Type.create_TypeApp(_7658_t, _7659_typeArgs);
          DAST._IResolvedType _source257 = _7655_resolved;
          if (_source257.is_Datatype) {
            DAST._IDatatypeType _7660___mcc_h21 = _source257.dtor_datatypeType;
            DAST._IDatatypeType _source258 = _7660___mcc_h21;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7661___mcc_h22 = _source258.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _7662___mcc_h23 = _source258.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _7663_attributes = _7662___mcc_h23;
            {
              if (DCOMPUTF16.COMP.IsRcWrapped(_7663_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source257.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7664___mcc_h24 = _source257.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _7665___mcc_h25 = _source257.dtor_attributes;
            {
              if ((_7657_p).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = RAST.__default.Rc(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::any::Any")));
              } else {
                if (inBinding) {
                  s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
                } else {
                  s = RAST.Type.create_ImplType(s);
                }
              }
            }
          } else {
            DAST._IType _7666___mcc_h26 = _source257.dtor_baseType;
            DAST._INewtypeRange _7667___mcc_h27 = _source257.dtor_range;
            bool _7668___mcc_h28 = _source257.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _7669___mcc_h29 = _source257.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _7670_attributes = _7669___mcc_h29;
            bool _7671_erased = _7668___mcc_h28;
            DAST._INewtypeRange _7672_range = _7667___mcc_h27;
            DAST._IType _7673_t = _7666___mcc_h26;
            {
              if (_7671_erased) {
                Std.Wrappers._IOption<RAST._IType> _source259 = DCOMPUTF16.COMP.NewtypeToRustType(_7673_t, _7672_range);
                if (_source259.is_None) {
                } else {
                  RAST._IType _7674___mcc_h30 = _source259.dtor_value;
                  RAST._IType _7675_v = _7674___mcc_h30;
                  s = _7675_v;
                }
              }
            }
          }
        }
      } else if (_source256.is_Nullable) {
        DAST._IType _7676___mcc_h3 = _source256.dtor_Nullable_a0;
        DAST._IType _7677_inner = _7676___mcc_h3;
        {
          RAST._IType _7678_innerExpr;
          RAST._IType _out3469;
          _out3469 = DCOMPUTF16.COMP.GenType(_7677_inner, inBinding, inFn);
          _7678_innerExpr = _out3469;
          s = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::option::Option")), Dafny.Sequence<RAST._IType>.FromElements(_7678_innerExpr));
        }
      } else if (_source256.is_Tuple) {
        Dafny.ISequence<DAST._IType> _7679___mcc_h4 = _source256.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IType> _7680_types = _7679___mcc_h4;
        {
          Dafny.ISequence<RAST._IType> _7681_args;
          _7681_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _7682_i;
          _7682_i = BigInteger.Zero;
          while ((_7682_i) < (new BigInteger((_7680_types).Count))) {
            RAST._IType _7683_generated;
            RAST._IType _out3470;
            _out3470 = DCOMPUTF16.COMP.GenType((_7680_types).Select(_7682_i), inBinding, inFn);
            _7683_generated = _out3470;
            _7681_args = Dafny.Sequence<RAST._IType>.Concat(_7681_args, Dafny.Sequence<RAST._IType>.FromElements(_7683_generated));
            _7682_i = (_7682_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_7681_args);
        }
      } else if (_source256.is_Array) {
        DAST._IType _7684___mcc_h5 = _source256.dtor_element;
        BigInteger _7685___mcc_h6 = _source256.dtor_dims;
        BigInteger _7686_dims = _7685___mcc_h6;
        DAST._IType _7687_element = _7684___mcc_h5;
        {
          RAST._IType _7688_elem;
          RAST._IType _out3471;
          _out3471 = DCOMPUTF16.COMP.GenType(_7687_element, inBinding, inFn);
          _7688_elem = _out3471;
          s = _7688_elem;
          BigInteger _7689_i;
          _7689_i = BigInteger.Zero;
          while ((_7689_i) < (_7686_dims)) {
            s = RAST.__default.Rc(RAST.__default.RefCell(RAST.__default.Vec(s)));
            _7689_i = (_7689_i) + (BigInteger.One);
          }
        }
      } else if (_source256.is_Seq) {
        DAST._IType _7690___mcc_h7 = _source256.dtor_element;
        DAST._IType _7691_element = _7690___mcc_h7;
        {
          RAST._IType _7692_elem;
          RAST._IType _out3472;
          _out3472 = DCOMPUTF16.COMP.GenType(_7691_element, inBinding, inFn);
          _7692_elem = _out3472;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_7692_elem));
        }
      } else if (_source256.is_Set) {
        DAST._IType _7693___mcc_h8 = _source256.dtor_element;
        DAST._IType _7694_element = _7693___mcc_h8;
        {
          RAST._IType _7695_elem;
          RAST._IType _out3473;
          _out3473 = DCOMPUTF16.COMP.GenType(_7694_element, inBinding, inFn);
          _7695_elem = _out3473;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_7695_elem));
        }
      } else if (_source256.is_Multiset) {
        DAST._IType _7696___mcc_h9 = _source256.dtor_element;
        DAST._IType _7697_element = _7696___mcc_h9;
        {
          RAST._IType _7698_elem;
          RAST._IType _out3474;
          _out3474 = DCOMPUTF16.COMP.GenType(_7697_element, inBinding, inFn);
          _7698_elem = _out3474;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_7698_elem));
        }
      } else if (_source256.is_Map) {
        DAST._IType _7699___mcc_h10 = _source256.dtor_key;
        DAST._IType _7700___mcc_h11 = _source256.dtor_value;
        DAST._IType _7701_value = _7700___mcc_h11;
        DAST._IType _7702_key = _7699___mcc_h10;
        {
          RAST._IType _7703_keyType;
          RAST._IType _out3475;
          _out3475 = DCOMPUTF16.COMP.GenType(_7702_key, inBinding, inFn);
          _7703_keyType = _out3475;
          RAST._IType _7704_valueType;
          RAST._IType _out3476;
          _out3476 = DCOMPUTF16.COMP.GenType(_7701_value, inBinding, inFn);
          _7704_valueType = _out3476;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_7703_keyType, _7704_valueType));
        }
      } else if (_source256.is_SetBuilder) {
        DAST._IType _7705___mcc_h12 = _source256.dtor_element;
        DAST._IType _7706_elem = _7705___mcc_h12;
        {
          RAST._IType _7707_elemType;
          RAST._IType _out3477;
          _out3477 = DCOMPUTF16.COMP.GenType(_7706_elem, inBinding, inFn);
          _7707_elemType = _out3477;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_7707_elemType));
        }
      } else if (_source256.is_MapBuilder) {
        DAST._IType _7708___mcc_h13 = _source256.dtor_key;
        DAST._IType _7709___mcc_h14 = _source256.dtor_value;
        DAST._IType _7710_value = _7709___mcc_h14;
        DAST._IType _7711_key = _7708___mcc_h13;
        {
          RAST._IType _7712_keyType;
          RAST._IType _out3478;
          _out3478 = DCOMPUTF16.COMP.GenType(_7711_key, inBinding, inFn);
          _7712_keyType = _out3478;
          RAST._IType _7713_valueType;
          RAST._IType _out3479;
          _out3479 = DCOMPUTF16.COMP.GenType(_7710_value, inBinding, inFn);
          _7713_valueType = _out3479;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_7712_keyType, _7713_valueType));
        }
      } else if (_source256.is_Arrow) {
        Dafny.ISequence<DAST._IType> _7714___mcc_h15 = _source256.dtor_args;
        DAST._IType _7715___mcc_h16 = _source256.dtor_result;
        DAST._IType _7716_result = _7715___mcc_h16;
        Dafny.ISequence<DAST._IType> _7717_args = _7714___mcc_h15;
        {
          Dafny.ISequence<RAST._IType> _7718_argTypes;
          _7718_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _7719_i;
          _7719_i = BigInteger.Zero;
          while ((_7719_i) < (new BigInteger((_7717_args).Count))) {
            RAST._IType _7720_generated;
            RAST._IType _out3480;
            _out3480 = DCOMPUTF16.COMP.GenType((_7717_args).Select(_7719_i), inBinding, true);
            _7720_generated = _out3480;
            _7718_argTypes = Dafny.Sequence<RAST._IType>.Concat(_7718_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_7720_generated)));
            _7719_i = (_7719_i) + (BigInteger.One);
          }
          RAST._IType _7721_resultType;
          RAST._IType _out3481;
          _out3481 = DCOMPUTF16.COMP.GenType(_7716_result, inBinding, (inFn) || (inBinding));
          _7721_resultType = _out3481;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("FunctionWrapper")), Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_FnType(_7718_argTypes, RAST.Type.create_IntersectionType(_7721_resultType, RAST.__default.StaticTrait))));
        }
      } else if (_source256.is_Primitive) {
        DAST._IPrimitive _7722___mcc_h17 = _source256.dtor_Primitive_a0;
        DAST._IPrimitive _7723_p = _7722___mcc_h17;
        {
          DAST._IPrimitive _source260 = _7723_p;
          if (_source260.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source260.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source260.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel(DCOMPUTF16.__default.DafnyChar)));
          } else if (_source260.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel(DCOMPUTF16.__default.DafnyChar);
          }
        }
      } else if (_source256.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _7724___mcc_h18 = _source256.dtor_Passthrough_a0;
        Dafny.ISequence<Dafny.Rune> _7725_v = _7724___mcc_h18;
        s = RAST.__default.RawType(_7725_v);
      } else {
        Dafny.ISequence<Dafny.Rune> _7726___mcc_h19 = _source256.dtor_TypeArg_a0;
        Dafny.ISequence<Dafny.Rune> _source261 = _7726___mcc_h19;
        Dafny.ISequence<Dafny.Rune> _7727___mcc_h20 = _source261;
        Dafny.ISequence<Dafny.Rune> _7728_name = _7727___mcc_h20;
        s = RAST.__default.RawType(DCOMPUTF16.__default.escapeIdent(_7728_name));
      }
      return s;
    }
    public static void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _7729_i;
      _7729_i = BigInteger.Zero;
      while ((_7729_i) < (new BigInteger((body).Count))) {
        DAST._IMethod _source262 = (body).Select(_7729_i);
        DAST._IMethod _7730___mcc_h0 = _source262;
        DAST._IMethod _7731_m = _7730___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source263 = (_7731_m).dtor_overridingPath;
          if (_source263.is_None) {
            {
              RAST._IImplMember _7732_generated;
              RAST._IImplMember _out3482;
              _out3482 = DCOMPUTF16.COMP.GenMethod(_7731_m, forTrait, enclosingType, enclosingTypeParams);
              _7732_generated = _out3482;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_7732_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7733___mcc_h1 = _source263.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7734_p = _7733___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _7735_existing;
              _7735_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_7734_p)) {
                _7735_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_7734_p);
              }
              RAST._IImplMember _7736_genMethod;
              RAST._IImplMember _out3483;
              _out3483 = DCOMPUTF16.COMP.GenMethod(_7731_m, true, enclosingType, enclosingTypeParams);
              _7736_genMethod = _out3483;
              _7735_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_7735_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_7736_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_7734_p, _7735_existing)));
            }
          }
        }
        _7729_i = (_7729_i) + (BigInteger.One);
      }
    }
    public static Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _7737_i;
      _7737_i = BigInteger.Zero;
      while ((_7737_i) < (new BigInteger((@params).Count))) {
        DAST._IFormal _7738_param;
        _7738_param = (@params).Select(_7737_i);
        RAST._IType _7739_paramType;
        RAST._IType _out3484;
        _out3484 = DCOMPUTF16.COMP.GenType((_7738_param).dtor_typ, false, false);
        _7739_paramType = _out3484;
        if (!((_7739_paramType).HasCopySemantics())) {
          _7739_paramType = RAST.Type.create_Borrowed(_7739_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_7738_param).dtor_name), _7739_paramType)));
        _7737_i = (_7737_i) + (BigInteger.One);
      }
      return s;
    }
    public static RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _7740_params;
      Dafny.ISequence<RAST._IFormal> _out3485;
      _out3485 = DCOMPUTF16.COMP.GenParams((m).dtor_params);
      _7740_params = _out3485;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7741_paramNames;
      _7741_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _7742_paramTypes;
      _7742_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi23 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _7743_paramI = BigInteger.Zero; _7743_paramI < _hi23; _7743_paramI++) {
        DAST._IFormal _7744_dafny__formal;
        _7744_dafny__formal = ((m).dtor_params).Select(_7743_paramI);
        RAST._IFormal _7745_formal;
        _7745_formal = (_7740_params).Select(_7743_paramI);
        Dafny.ISequence<Dafny.Rune> _7746_name;
        _7746_name = (_7745_formal).dtor_name;
        _7741_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_7741_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_7746_name));
        _7742_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_7742_paramTypes, _7746_name, (_7745_formal).dtor_tpe);
      }
      if (!((m).dtor_isStatic)) {
        if (forTrait) {
          _7740_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), _7740_params);
        } else {
          RAST._IType _7747_tpe;
          RAST._IType _out3486;
          _out3486 = DCOMPUTF16.COMP.GenType(enclosingType, false, false);
          _7747_tpe = _out3486;
          _7740_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_Borrowed(_7747_tpe))), _7740_params);
        }
      }
      Dafny.ISequence<RAST._IType> _7748_retTypeArgs;
      _7748_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _7749_typeI;
      _7749_typeI = BigInteger.Zero;
      while ((_7749_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _7750_typeExpr;
        RAST._IType _out3487;
        _out3487 = DCOMPUTF16.COMP.GenType(((m).dtor_outTypes).Select(_7749_typeI), false, false);
        _7750_typeExpr = _out3487;
        _7748_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_7748_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_7750_typeExpr));
        _7749_typeI = (_7749_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _7751_visibility;
      _7751_visibility = RAST.Visibility.create_PUB();
      Dafny.ISequence<Dafny.Rune> _7752_fnName;
      _7752_fnName = DCOMPUTF16.__default.escapeIdent((m).dtor_name);
      Dafny.ISequence<DAST._IType> _7753_typeParamsFiltered;
      _7753_typeParamsFiltered = Dafny.Sequence<DAST._IType>.FromElements();
      BigInteger _7754_typeParamI;
      _7754_typeParamI = BigInteger.Zero;
      while ((_7754_typeParamI) < (new BigInteger(((m).dtor_typeParams).Count))) {
        DAST._IType _7755_typeParam;
        _7755_typeParam = ((m).dtor_typeParams).Select(_7754_typeParamI);
        if (!((enclosingTypeParams).Contains(_7755_typeParam))) {
          _7753_typeParamsFiltered = Dafny.Sequence<DAST._IType>.Concat(_7753_typeParamsFiltered, Dafny.Sequence<DAST._IType>.FromElements(_7755_typeParam));
        }
        _7754_typeParamI = (_7754_typeParamI) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.Rune> _7756_whereClauses;
      _7756_whereClauses = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      Dafny.ISequence<RAST._ITypeParam> _7757_typeParams;
      _7757_typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      if ((new BigInteger((_7753_typeParamsFiltered).Count)).Sign == 1) {
        _7756_whereClauses = Dafny.Sequence<Dafny.Rune>.Concat(_7756_whereClauses, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" where "));
        BigInteger _7758_i;
        _7758_i = BigInteger.Zero;
        while ((_7758_i) < (new BigInteger((_7753_typeParamsFiltered).Count))) {
          RAST._IType _7759_typeExpr;
          RAST._IType _out3488;
          _out3488 = DCOMPUTF16.COMP.GenType((_7753_typeParamsFiltered).Select(_7758_i), false, false);
          _7759_typeExpr = _out3488;
          _7757_typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(_7757_typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_7759_typeExpr)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.DefaultTrait, RAST.__default.StaticTrait))));
          _7758_i = (_7758_i) + (BigInteger.One);
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _7760_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMPUTF16._IEnvironment _7761_env = DCOMPUTF16.Environment.Default();
      if ((m).dtor_hasBody) {
        RAST._IExpr _7762_earlyReturn;
        _7762_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source264 = (m).dtor_outVars;
        if (_source264.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7763___mcc_h0 = _source264.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7764_outVars = _7763___mcc_h0;
          {
            Dafny.ISequence<RAST._IExpr> _7765_tupleArgs;
            _7765_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
            BigInteger _hi24 = new BigInteger((_7764_outVars).Count);
            for (BigInteger _7766_outI = BigInteger.Zero; _7766_outI < _hi24; _7766_outI++) {
              Dafny.ISequence<Dafny.Rune> _7767_outVar;
              _7767_outVar = (_7764_outVars).Select(_7766_outI);
              RAST._IType _7768_outType;
              RAST._IType _out3489;
              _out3489 = DCOMPUTF16.COMP.GenType(((m).dtor_outTypes).Select(_7766_outI), false, false);
              _7768_outType = _out3489;
              Dafny.ISequence<Dafny.Rune> _7769_outName;
              _7769_outName = DCOMPUTF16.__default.escapeIdent((_7767_outVar));
              _7741_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_7741_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_7769_outName));
              RAST._IType _7770_outMaybeType;
              _7770_outMaybeType = (((_7768_outType).HasCopySemantics()) ? (_7768_outType) : (RAST.__default.MaybePlaceboType(_7768_outType)));
              _7742_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_7742_paramTypes, _7769_outName, _7770_outMaybeType);
              RAST._IExpr _7771_outVarReturn;
              DCOMPUTF16._IOwnership _7772___v51;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7773___v52;
              RAST._IExpr _out3490;
              DCOMPUTF16._IOwnership _out3491;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3492;
              DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Ident((_7767_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_7769_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_7769_outName, _7770_outMaybeType))), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3490, out _out3491, out _out3492);
              _7771_outVarReturn = _out3490;
              _7772___v51 = _out3491;
              _7773___v52 = _out3492;
              _7765_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_7765_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_7771_outVarReturn));
            }
            if ((new BigInteger((_7765_tupleArgs).Count)) == (BigInteger.One)) {
              _7762_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_7765_tupleArgs).Select(BigInteger.Zero)));
            } else {
              _7762_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_7765_tupleArgs)));
            }
          }
        }
        _7761_env = DCOMPUTF16.Environment.create(_7741_paramNames, _7742_paramTypes);
        RAST._IExpr _7774_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7775___v53;
        DCOMPUTF16._IEnvironment _7776___v54;
        RAST._IExpr _out3493;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3494;
        DCOMPUTF16._IEnvironment _out3495;
        DCOMPUTF16.COMP.GenStmts((m).dtor_body, (((m).dtor_isStatic) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))), _7761_env, true, _7762_earlyReturn, out _out3493, out _out3494, out _out3495);
        _7774_body = _out3493;
        _7775___v53 = _out3494;
        _7776___v54 = _out3495;
        _7760_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some(_7774_body);
      } else {
        _7761_env = DCOMPUTF16.Environment.create(_7741_paramNames, _7742_paramTypes);
        _7760_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_7751_visibility, RAST.Fn.create(_7752_fnName, _7757_typeParams, _7740_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_7748_retTypeArgs).Count)) == (BigInteger.One)) ? ((_7748_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_7748_retTypeArgs)))), _7756_whereClauses, _7760_fBody));
      return s;
    }
    public static void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMPUTF16._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMPUTF16.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7777_declarations;
      _7777_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _7778_i;
      _7778_i = BigInteger.Zero;
      newEnv = env;
      while ((_7778_i) < (new BigInteger((stmts).Count))) {
        DAST._IStatement _7779_stmt;
        _7779_stmt = (stmts).Select(_7778_i);
        RAST._IExpr _7780_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7781_recIdents;
        DCOMPUTF16._IEnvironment _7782_newEnv2;
        RAST._IExpr _out3496;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3497;
        DCOMPUTF16._IEnvironment _out3498;
        DCOMPUTF16.COMP.GenStmt(_7779_stmt, selfIdent, newEnv, (isLast) && ((_7778_i) == ((new BigInteger((stmts).Count)) - (BigInteger.One))), earlyReturn, out _out3496, out _out3497, out _out3498);
        _7780_stmtExpr = _out3496;
        _7781_recIdents = _out3497;
        _7782_newEnv2 = _out3498;
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_7781_recIdents, _7777_declarations));
        newEnv = _7782_newEnv2;
        DAST._IStatement _source265 = _7779_stmt;
        if (_source265.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _7783___mcc_h0 = _source265.dtor_name;
          DAST._IType _7784___mcc_h1 = _source265.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _7785___mcc_h2 = _source265.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _7786_name = _7783___mcc_h0;
          {
            _7777_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7777_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7786_name));
          }
        } else if (_source265.is_Assign) {
          DAST._IAssignLhs _7787___mcc_h6 = _source265.dtor_lhs;
          DAST._IExpression _7788___mcc_h7 = _source265.dtor_value;
        } else if (_source265.is_If) {
          DAST._IExpression _7789___mcc_h10 = _source265.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _7790___mcc_h11 = _source265.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _7791___mcc_h12 = _source265.dtor_els;
        } else if (_source265.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _7792___mcc_h16 = _source265.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _7793___mcc_h17 = _source265.dtor_body;
        } else if (_source265.is_While) {
          DAST._IExpression _7794___mcc_h20 = _source265.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _7795___mcc_h21 = _source265.dtor_body;
        } else if (_source265.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _7796___mcc_h24 = _source265.dtor_boundName;
          DAST._IType _7797___mcc_h25 = _source265.dtor_boundType;
          DAST._IExpression _7798___mcc_h26 = _source265.dtor_over;
          Dafny.ISequence<DAST._IStatement> _7799___mcc_h27 = _source265.dtor_body;
        } else if (_source265.is_Call) {
          DAST._IExpression _7800___mcc_h32 = _source265.dtor_on;
          DAST._ICallName _7801___mcc_h33 = _source265.dtor_callName;
          Dafny.ISequence<DAST._IType> _7802___mcc_h34 = _source265.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _7803___mcc_h35 = _source265.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _7804___mcc_h36 = _source265.dtor_outs;
        } else if (_source265.is_Return) {
          DAST._IExpression _7805___mcc_h42 = _source265.dtor_expr;
        } else if (_source265.is_EarlyReturn) {
        } else if (_source265.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7806___mcc_h44 = _source265.dtor_toLabel;
        } else if (_source265.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _7807___mcc_h46 = _source265.dtor_body;
        } else if (_source265.is_JumpTailCallStart) {
        } else if (_source265.is_Halt) {
        } else {
          DAST._IExpression _7808___mcc_h48 = _source265.dtor_Print_a0;
        }
        generated = (generated).Then(_7780_stmtExpr);
        _7778_i = (_7778_i) + (BigInteger.One);
      }
    }
    public static void GenAssignLhs(DAST._IAssignLhs lhs, Dafny.ISequence<Dafny.Rune> rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, out Dafny.ISequence<Dafny.Rune> generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      generated = Dafny.Sequence<Dafny.Rune>.Empty;
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IAssignLhs _source266 = lhs;
      if (_source266.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _7809___mcc_h0 = _source266.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source267 = _7809___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _7810___mcc_h1 = _source267;
        Dafny.ISequence<Dafny.Rune> _7811_id = _7810___mcc_h1;
        {
          if (((env).IsBorrowed(_7811_id)) || ((env).IsBorrowedMut(_7811_id))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), DCOMPUTF16.__default.escapeIdent(_7811_id));
          } else {
            generated = DCOMPUTF16.__default.escapeIdent(_7811_id);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7811_id);
          needsIIFE = false;
        }
      } else if (_source266.is_Select) {
        DAST._IExpression _7812___mcc_h2 = _source266.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _7813___mcc_h3 = _source266.dtor_field;
        Dafny.ISequence<Dafny.Rune> _7814_field = _7813___mcc_h3;
        DAST._IExpression _7815_on = _7812___mcc_h2;
        {
          RAST._IExpr _7816_onExpr;
          DCOMPUTF16._IOwnership _7817_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7818_recIdents;
          RAST._IExpr _out3499;
          DCOMPUTF16._IOwnership _out3500;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3501;
          DCOMPUTF16.COMP.GenExpr(_7815_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3499, out _out3500, out _out3501);
          _7816_onExpr = _out3499;
          _7817_onOwned = _out3500;
          _7818_recIdents = _out3501;
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*("), (_7816_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _7814_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()) = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
          readIdents = _7818_recIdents;
          needsIIFE = true;
        }
      } else {
        DAST._IExpression _7819___mcc_h4 = _source266.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _7820___mcc_h5 = _source266.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _7821_indices = _7820___mcc_h5;
        DAST._IExpression _7822_on = _7819___mcc_h4;
        {
          RAST._IExpr _7823_onExpr;
          DCOMPUTF16._IOwnership _7824_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7825_recIdents;
          RAST._IExpr _out3502;
          DCOMPUTF16._IOwnership _out3503;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3504;
          DCOMPUTF16.COMP.GenExpr(_7822_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3502, out _out3503, out _out3504);
          _7823_onExpr = _out3502;
          _7824_onOwned = _out3503;
          _7825_recIdents = _out3504;
          readIdents = _7825_recIdents;
          generated = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          BigInteger _7826_i;
          _7826_i = BigInteger.Zero;
          while ((_7826_i) < (new BigInteger((_7821_indices).Count))) {
            RAST._IExpr _7827_idx;
            DCOMPUTF16._IOwnership _7828___v58;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7829_recIdentsIdx;
            RAST._IExpr _out3505;
            DCOMPUTF16._IOwnership _out3506;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3507;
            DCOMPUTF16.COMP.GenExpr((_7821_indices).Select(_7826_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3505, out _out3506, out _out3507);
            _7827_idx = _out3505;
            _7828___v58 = _out3506;
            _7829_recIdentsIdx = _out3507;
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let __idx")), Std.Strings.__default.OfNat(_7826_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = <usize as ::dafny_runtime::NumCast>::from(")), (_7827_idx)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap();\n"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7829_recIdentsIdx);
            _7826_i = (_7826_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, (_7823_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()"));
          _7826_i = BigInteger.Zero;
          while ((_7826_i) < (new BigInteger((_7821_indices).Count))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[__idx")), Std.Strings.__default.OfNat(_7826_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            _7826_i = (_7826_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n}"));
          needsIIFE = true;
        }
      }
    }
    public static void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMPUTF16._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMPUTF16.Environment.Default();
      DAST._IStatement _source268 = stmt;
      if (_source268.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _7830___mcc_h0 = _source268.dtor_name;
        DAST._IType _7831___mcc_h1 = _source268.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _7832___mcc_h2 = _source268.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source269 = _7832___mcc_h2;
        if (_source269.is_None) {
          DAST._IType _7833_typ = _7831___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _7834_name = _7830___mcc_h0;
          {
            DAST._IStatement _7835_newStmt;
            _7835_newStmt = DAST.Statement.create_DeclareVar(_7834_name, _7833_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_7833_typ)));
            RAST._IExpr _out3508;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3509;
            DCOMPUTF16._IEnvironment _out3510;
            DCOMPUTF16.COMP.GenStmt(_7835_newStmt, selfIdent, env, isLast, earlyReturn, out _out3508, out _out3509, out _out3510);
            generated = _out3508;
            readIdents = _out3509;
            newEnv = _out3510;
          }
        } else {
          DAST._IExpression _7836___mcc_h3 = _source269.dtor_value;
          DAST._IExpression _7837_expression = _7836___mcc_h3;
          DAST._IType _7838_typ = _7831___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _7839_name = _7830___mcc_h0;
          {
            RAST._IType _7840_tpe;
            RAST._IType _out3511;
            _out3511 = DCOMPUTF16.COMP.GenType(_7838_typ, true, false);
            _7840_tpe = _out3511;
            Dafny.ISequence<Dafny.Rune> _7841_varName;
            _7841_varName = DCOMPUTF16.__default.escapeIdent(_7839_name);
            bool _7842_hasCopySemantics;
            _7842_hasCopySemantics = (_7840_tpe).HasCopySemantics();
            if (((_7837_expression).is_InitializationValue) && (!(_7842_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _7841_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_7840_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_7841_varName, RAST.__default.MaybePlaceboType(_7840_tpe));
            } else {
              RAST._IExpr _7843_expr;
              DCOMPUTF16._IOwnership _7844___v59;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7845_recIdents;
              RAST._IExpr _out3512;
              DCOMPUTF16._IOwnership _out3513;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3514;
              DCOMPUTF16.COMP.GenExpr(_7837_expression, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3512, out _out3513, out _out3514);
              _7843_expr = _out3512;
              _7844___v59 = _out3513;
              _7845_recIdents = _out3514;
              readIdents = _7845_recIdents;
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMPUTF16.__default.escapeIdent(_7839_name), Std.Wrappers.Option<RAST._IType>.create_Some(_7840_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_7843_expr));
              newEnv = (env).AddAssigned(DCOMPUTF16.__default.escapeIdent(_7839_name), _7840_tpe);
            }
          }
        }
      } else if (_source268.is_Assign) {
        DAST._IAssignLhs _7846___mcc_h4 = _source268.dtor_lhs;
        DAST._IExpression _7847___mcc_h5 = _source268.dtor_value;
        DAST._IExpression _7848_expression = _7847___mcc_h5;
        DAST._IAssignLhs _7849_lhs = _7846___mcc_h4;
        {
          Dafny.ISequence<Dafny.Rune> _7850_lhsGen;
          bool _7851_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7852_recIdents;
          Dafny.ISequence<Dafny.Rune> _out3515;
          bool _out3516;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3517;
          DCOMPUTF16.COMP.GenAssignLhs(_7849_lhs, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), selfIdent, env, out _out3515, out _out3516, out _out3517);
          _7850_lhsGen = _out3515;
          _7851_needsIIFE = _out3516;
          _7852_recIdents = _out3517;
          RAST._IExpr _7853_exprGen;
          DCOMPUTF16._IOwnership _7854___v60;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7855_exprIdents;
          RAST._IExpr _out3518;
          DCOMPUTF16._IOwnership _out3519;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3520;
          DCOMPUTF16.COMP.GenExpr(_7848_expression, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3518, out _out3519, out _out3520);
          _7853_exprGen = _out3518;
          _7854___v60 = _out3519;
          _7855_exprIdents = _out3520;
          if (_7851_needsIIFE) {
            newEnv = env;
            generated = RAST.Expr.create_Block(RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_7853_exprGen)), RAST.Expr.create_RawExpr(_7850_lhsGen)));
          } else {
            if ((_7849_lhs).is_Ident) {
              Dafny.ISequence<Dafny.Rune> _7856_rustId;
              _7856_rustId = DCOMPUTF16.__default.escapeIdent(((_7849_lhs).dtor_ident));
              Std.Wrappers._IOption<RAST._IType> _7857_tpe;
              _7857_tpe = (env).GetType(_7856_rustId);
              if (((_7857_tpe).is_Some) && ((((_7857_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
                _7853_exprGen = RAST.__default.MaybePlacebo(_7853_exprGen);
              }
            }
            generated = RAST.__default.AssignVar(_7850_lhsGen, _7853_exprGen);
            newEnv = env;
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7852_recIdents, _7855_exprIdents);
        }
      } else if (_source268.is_If) {
        DAST._IExpression _7858___mcc_h6 = _source268.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _7859___mcc_h7 = _source268.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _7860___mcc_h8 = _source268.dtor_els;
        Dafny.ISequence<DAST._IStatement> _7861_elsDafny = _7860___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _7862_thnDafny = _7859___mcc_h7;
        DAST._IExpression _7863_cond = _7858___mcc_h6;
        {
          RAST._IExpr _7864_cond;
          DCOMPUTF16._IOwnership _7865___v61;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7866_recIdents;
          RAST._IExpr _out3521;
          DCOMPUTF16._IOwnership _out3522;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3523;
          DCOMPUTF16.COMP.GenExpr(_7863_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3521, out _out3522, out _out3523);
          _7864_cond = _out3521;
          _7865___v61 = _out3522;
          _7866_recIdents = _out3523;
          Dafny.ISequence<Dafny.Rune> _7867_condString;
          _7867_condString = (_7864_cond)._ToString(DCOMPUTF16.__default.IND);
          readIdents = _7866_recIdents;
          RAST._IExpr _7868_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7869_thnIdents;
          DCOMPUTF16._IEnvironment _7870_thnEnv;
          RAST._IExpr _out3524;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3525;
          DCOMPUTF16._IEnvironment _out3526;
          DCOMPUTF16.COMP.GenStmts(_7862_thnDafny, selfIdent, env, isLast, earlyReturn, out _out3524, out _out3525, out _out3526);
          _7868_thn = _out3524;
          _7869_thnIdents = _out3525;
          _7870_thnEnv = _out3526;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7869_thnIdents);
          RAST._IExpr _7871_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7872_elsIdents;
          DCOMPUTF16._IEnvironment _7873_elsEnv;
          RAST._IExpr _out3527;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3528;
          DCOMPUTF16._IEnvironment _out3529;
          DCOMPUTF16.COMP.GenStmts(_7861_elsDafny, selfIdent, env, isLast, earlyReturn, out _out3527, out _out3528, out _out3529);
          _7871_els = _out3527;
          _7872_elsIdents = _out3528;
          _7873_elsEnv = _out3529;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7872_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_7864_cond, _7868_thn, _7871_els);
        }
      } else if (_source268.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _7874___mcc_h9 = _source268.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _7875___mcc_h10 = _source268.dtor_body;
        Dafny.ISequence<DAST._IStatement> _7876_body = _7875___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _7877_lbl = _7874___mcc_h9;
        {
          RAST._IExpr _7878_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7879_bodyIdents;
          DCOMPUTF16._IEnvironment _7880_env2;
          RAST._IExpr _out3530;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3531;
          DCOMPUTF16._IEnvironment _out3532;
          DCOMPUTF16.COMP.GenStmts(_7876_body, selfIdent, env, isLast, earlyReturn, out _out3530, out _out3531, out _out3532);
          _7878_body = _out3530;
          _7879_bodyIdents = _out3531;
          _7880_env2 = _out3532;
          readIdents = _7879_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _7877_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_7878_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source268.is_While) {
        DAST._IExpression _7881___mcc_h11 = _source268.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _7882___mcc_h12 = _source268.dtor_body;
        Dafny.ISequence<DAST._IStatement> _7883_body = _7882___mcc_h12;
        DAST._IExpression _7884_cond = _7881___mcc_h11;
        {
          RAST._IExpr _7885_cond;
          DCOMPUTF16._IOwnership _7886___v62;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7887_recIdents;
          RAST._IExpr _out3533;
          DCOMPUTF16._IOwnership _out3534;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3535;
          DCOMPUTF16.COMP.GenExpr(_7884_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3533, out _out3534, out _out3535);
          _7885_cond = _out3533;
          _7886___v62 = _out3534;
          _7887_recIdents = _out3535;
          readIdents = _7887_recIdents;
          RAST._IExpr _7888_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7889_bodyIdents;
          DCOMPUTF16._IEnvironment _7890_bodyEnv;
          RAST._IExpr _out3536;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3537;
          DCOMPUTF16._IEnvironment _out3538;
          DCOMPUTF16.COMP.GenStmts(_7883_body, selfIdent, env, false, earlyReturn, out _out3536, out _out3537, out _out3538);
          _7888_bodyExpr = _out3536;
          _7889_bodyIdents = _out3537;
          _7890_bodyEnv = _out3538;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7889_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_7885_cond), _7888_bodyExpr);
        }
      } else if (_source268.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _7891___mcc_h13 = _source268.dtor_boundName;
        DAST._IType _7892___mcc_h14 = _source268.dtor_boundType;
        DAST._IExpression _7893___mcc_h15 = _source268.dtor_over;
        Dafny.ISequence<DAST._IStatement> _7894___mcc_h16 = _source268.dtor_body;
        Dafny.ISequence<DAST._IStatement> _7895_body = _7894___mcc_h16;
        DAST._IExpression _7896_over = _7893___mcc_h15;
        DAST._IType _7897_boundType = _7892___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _7898_boundName = _7891___mcc_h13;
        {
          RAST._IExpr _7899_over;
          DCOMPUTF16._IOwnership _7900___v63;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7901_recIdents;
          RAST._IExpr _out3539;
          DCOMPUTF16._IOwnership _out3540;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3541;
          DCOMPUTF16.COMP.GenExpr(_7896_over, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3539, out _out3540, out _out3541);
          _7899_over = _out3539;
          _7900___v63 = _out3540;
          _7901_recIdents = _out3541;
          RAST._IType _7902_boundTpe;
          RAST._IType _out3542;
          _out3542 = DCOMPUTF16.COMP.GenType(_7897_boundType, false, false);
          _7902_boundTpe = _out3542;
          readIdents = _7901_recIdents;
          RAST._IExpr _7903_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7904_bodyIdents;
          DCOMPUTF16._IEnvironment _7905_bodyEnv;
          RAST._IExpr _out3543;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3544;
          DCOMPUTF16._IEnvironment _out3545;
          DCOMPUTF16.COMP.GenStmts(_7895_body, selfIdent, (env).AddAssigned(_7898_boundName, RAST.Type.create_Borrowed(_7902_boundTpe)), false, earlyReturn, out _out3543, out _out3544, out _out3545);
          _7903_bodyExpr = _out3543;
          _7904_bodyIdents = _out3544;
          _7905_bodyEnv = _out3545;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7904_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7898_boundName));
          newEnv = env;
          generated = RAST.Expr.create_For(DCOMPUTF16.__default.escapeIdent(_7898_boundName), _7899_over, _7903_bodyExpr);
        }
      } else if (_source268.is_Call) {
        DAST._IExpression _7906___mcc_h17 = _source268.dtor_on;
        DAST._ICallName _7907___mcc_h18 = _source268.dtor_callName;
        Dafny.ISequence<DAST._IType> _7908___mcc_h19 = _source268.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _7909___mcc_h20 = _source268.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _7910___mcc_h21 = _source268.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _7911_maybeOutVars = _7910___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _7912_args = _7909___mcc_h20;
        Dafny.ISequence<DAST._IType> _7913_typeArgs = _7908___mcc_h19;
        DAST._ICallName _7914_name = _7907___mcc_h18;
        DAST._IExpression _7915_on = _7906___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _7916_onExpr;
          DCOMPUTF16._IOwnership _7917___v66;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7918_enclosingIdents;
          RAST._IExpr _out3546;
          DCOMPUTF16._IOwnership _out3547;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3548;
          DCOMPUTF16.COMP.GenExpr(_7915_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out3546, out _out3547, out _out3548);
          _7916_onExpr = _out3546;
          _7917___v66 = _out3547;
          _7918_enclosingIdents = _out3548;
          Dafny.ISequence<RAST._IType> _7919_typeExprs;
          _7919_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_7913_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _7920_typeI;
            _7920_typeI = BigInteger.Zero;
            Dafny.ISequence<RAST._IType> _7921_typeArgsR;
            _7921_typeArgsR = Dafny.Sequence<RAST._IType>.FromElements();
            while ((_7920_typeI) < (new BigInteger((_7913_typeArgs).Count))) {
              RAST._IType _7922_tpe;
              RAST._IType _out3549;
              _out3549 = DCOMPUTF16.COMP.GenType((_7913_typeArgs).Select(_7920_typeI), false, false);
              _7922_tpe = _out3549;
              _7921_typeArgsR = Dafny.Sequence<RAST._IType>.Concat(_7921_typeArgsR, Dafny.Sequence<RAST._IType>.FromElements(_7922_tpe));
              _7920_typeI = (_7920_typeI) + (BigInteger.One);
            }
          }
          Dafny.ISequence<RAST._IExpr> _7923_argExprs;
          _7923_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi25 = new BigInteger((_7912_args).Count);
          for (BigInteger _7924_i = BigInteger.Zero; _7924_i < _hi25; _7924_i++) {
            DCOMPUTF16._IOwnership _7925_argOwnership;
            _7925_argOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
            if (((_7914_name).is_Name) && ((_7924_i) < (new BigInteger((((_7914_name).dtor_signature)).Count)))) {
              RAST._IType _7926_tpe;
              RAST._IType _out3550;
              _out3550 = DCOMPUTF16.COMP.GenType(((((_7914_name).dtor_signature)).Select(_7924_i)).dtor_typ, false, false);
              _7926_tpe = _out3550;
              if ((_7926_tpe).HasCopySemantics()) {
                _7925_argOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _7927_argExpr;
            DCOMPUTF16._IOwnership _7928_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7929_argIdents;
            RAST._IExpr _out3551;
            DCOMPUTF16._IOwnership _out3552;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3553;
            DCOMPUTF16.COMP.GenExpr((_7912_args).Select(_7924_i), selfIdent, env, _7925_argOwnership, out _out3551, out _out3552, out _out3553);
            _7927_argExpr = _out3551;
            _7928_ownership = _out3552;
            _7929_argIdents = _out3553;
            _7923_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_7923_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_7927_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7929_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7918_enclosingIdents);
          Dafny.ISequence<Dafny.Rune> _7930_renderedName;
          _7930_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source270) => {
            if (_source270.is_Name) {
              Dafny.ISequence<Dafny.Rune> _7931___mcc_h26 = _source270.dtor_name;
              Dafny.ISequence<DAST._IFormal> _7932___mcc_h27 = _source270.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _7933_name = _7931___mcc_h26;
              return DCOMPUTF16.__default.escapeIdent(_7933_name);
            } else if (_source270.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source270.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source270.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_7914_name);
          DAST._IExpression _source271 = _7915_on;
          if (_source271.is_Literal) {
            DAST._ILiteral _7934___mcc_h28 = _source271.dtor_Literal_a0;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _7935___mcc_h30 = _source271.dtor_Ident_a0;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7936___mcc_h32 = _source271.dtor_Companion_a0;
            {
              _7916_onExpr = (_7916_onExpr).MSel(_7930_renderedName);
            }
          } else if (_source271.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _7937___mcc_h34 = _source271.dtor_Tuple_a0;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7938___mcc_h36 = _source271.dtor_path;
            Dafny.ISequence<DAST._IType> _7939___mcc_h37 = _source271.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _7940___mcc_h38 = _source271.dtor_args;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _7941___mcc_h42 = _source271.dtor_dims;
            DAST._IType _7942___mcc_h43 = _source271.dtor_typ;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_DatatypeValue) {
            DAST._IDatatypeType _7943___mcc_h46 = _source271.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _7944___mcc_h47 = _source271.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _7945___mcc_h48 = _source271.dtor_variant;
            bool _7946___mcc_h49 = _source271.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7947___mcc_h50 = _source271.dtor_contents;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_Convert) {
            DAST._IExpression _7948___mcc_h56 = _source271.dtor_value;
            DAST._IType _7949___mcc_h57 = _source271.dtor_from;
            DAST._IType _7950___mcc_h58 = _source271.dtor_typ;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_SeqConstruct) {
            DAST._IExpression _7951___mcc_h62 = _source271.dtor_length;
            DAST._IExpression _7952___mcc_h63 = _source271.dtor_elem;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _7953___mcc_h66 = _source271.dtor_elements;
            DAST._IType _7954___mcc_h67 = _source271.dtor_typ;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _7955___mcc_h70 = _source271.dtor_elements;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _7956___mcc_h72 = _source271.dtor_elements;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7957___mcc_h74 = _source271.dtor_mapElems;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_MapBuilder) {
            DAST._IType _7958___mcc_h76 = _source271.dtor_keyType;
            DAST._IType _7959___mcc_h77 = _source271.dtor_valueType;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_SeqUpdate) {
            DAST._IExpression _7960___mcc_h80 = _source271.dtor_expr;
            DAST._IExpression _7961___mcc_h81 = _source271.dtor_indexExpr;
            DAST._IExpression _7962___mcc_h82 = _source271.dtor_value;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_MapUpdate) {
            DAST._IExpression _7963___mcc_h86 = _source271.dtor_expr;
            DAST._IExpression _7964___mcc_h87 = _source271.dtor_indexExpr;
            DAST._IExpression _7965___mcc_h88 = _source271.dtor_value;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_SetBuilder) {
            DAST._IType _7966___mcc_h92 = _source271.dtor_elemType;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_ToMultiset) {
            DAST._IExpression _7967___mcc_h94 = _source271.dtor_ToMultiset_a0;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_This) {
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_Ite) {
            DAST._IExpression _7968___mcc_h96 = _source271.dtor_cond;
            DAST._IExpression _7969___mcc_h97 = _source271.dtor_thn;
            DAST._IExpression _7970___mcc_h98 = _source271.dtor_els;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_UnOp) {
            DAST._IUnaryOp _7971___mcc_h102 = _source271.dtor_unOp;
            DAST._IExpression _7972___mcc_h103 = _source271.dtor_expr;
            DAST.Format._IUnOpFormat _7973___mcc_h104 = _source271.dtor_format1;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_BinOp) {
            DAST._IBinOp _7974___mcc_h108 = _source271.dtor_op;
            DAST._IExpression _7975___mcc_h109 = _source271.dtor_left;
            DAST._IExpression _7976___mcc_h110 = _source271.dtor_right;
            DAST.Format._IBinOpFormat _7977___mcc_h111 = _source271.dtor_format2;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_ArrayLen) {
            DAST._IExpression _7978___mcc_h116 = _source271.dtor_expr;
            BigInteger _7979___mcc_h117 = _source271.dtor_dim;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_MapKeys) {
            DAST._IExpression _7980___mcc_h120 = _source271.dtor_expr;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_MapValues) {
            DAST._IExpression _7981___mcc_h122 = _source271.dtor_expr;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_Select) {
            DAST._IExpression _7982___mcc_h124 = _source271.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _7983___mcc_h125 = _source271.dtor_field;
            bool _7984___mcc_h126 = _source271.dtor_isConstant;
            bool _7985___mcc_h127 = _source271.dtor_onDatatype;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_SelectFn) {
            DAST._IExpression _7986___mcc_h132 = _source271.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _7987___mcc_h133 = _source271.dtor_field;
            bool _7988___mcc_h134 = _source271.dtor_onDatatype;
            bool _7989___mcc_h135 = _source271.dtor_isStatic;
            BigInteger _7990___mcc_h136 = _source271.dtor_arity;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_Index) {
            DAST._IExpression _7991___mcc_h142 = _source271.dtor_expr;
            DAST._ICollKind _7992___mcc_h143 = _source271.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _7993___mcc_h144 = _source271.dtor_indices;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_IndexRange) {
            DAST._IExpression _7994___mcc_h148 = _source271.dtor_expr;
            bool _7995___mcc_h149 = _source271.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _7996___mcc_h150 = _source271.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _7997___mcc_h151 = _source271.dtor_high;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_TupleSelect) {
            DAST._IExpression _7998___mcc_h156 = _source271.dtor_expr;
            BigInteger _7999___mcc_h157 = _source271.dtor_index;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_Call) {
            DAST._IExpression _8000___mcc_h160 = _source271.dtor_on;
            DAST._ICallName _8001___mcc_h161 = _source271.dtor_callName;
            Dafny.ISequence<DAST._IType> _8002___mcc_h162 = _source271.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _8003___mcc_h163 = _source271.dtor_args;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _8004___mcc_h168 = _source271.dtor_params;
            DAST._IType _8005___mcc_h169 = _source271.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _8006___mcc_h170 = _source271.dtor_body;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _8007___mcc_h174 = _source271.dtor_values;
            DAST._IType _8008___mcc_h175 = _source271.dtor_retType;
            DAST._IExpression _8009___mcc_h176 = _source271.dtor_expr;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _8010___mcc_h180 = _source271.dtor_name;
            DAST._IType _8011___mcc_h181 = _source271.dtor_typ;
            DAST._IExpression _8012___mcc_h182 = _source271.dtor_value;
            DAST._IExpression _8013___mcc_h183 = _source271.dtor_iifeBody;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_Apply) {
            DAST._IExpression _8014___mcc_h188 = _source271.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _8015___mcc_h189 = _source271.dtor_args;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_TypeTest) {
            DAST._IExpression _8016___mcc_h192 = _source271.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8017___mcc_h193 = _source271.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _8018___mcc_h194 = _source271.dtor_variant;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_InitializationValue) {
            DAST._IType _8019___mcc_h198 = _source271.dtor_typ;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_BoolBoundedPool) {
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_SetBoundedPool) {
            DAST._IExpression _8020___mcc_h200 = _source271.dtor_of;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else if (_source271.is_SeqBoundedPool) {
            DAST._IExpression _8021___mcc_h202 = _source271.dtor_of;
            bool _8022___mcc_h203 = _source271.dtor_includeDuplicates;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          } else {
            DAST._IExpression _8023___mcc_h206 = _source271.dtor_lo;
            DAST._IExpression _8024___mcc_h207 = _source271.dtor_hi;
            {
              _7916_onExpr = (_7916_onExpr).Sel(_7930_renderedName);
            }
          }
          generated = _7916_onExpr;
          if ((new BigInteger((_7919_typeExprs).Count)).Sign == 1) {
            generated = (generated).ApplyType(_7919_typeExprs);
          }
          generated = (generated).Apply(_7923_argExprs);
          if (((_7911_maybeOutVars).is_Some) && ((new BigInteger(((_7911_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _8025_outVar;
            _8025_outVar = (((_7911_maybeOutVars).dtor_value).Select(BigInteger.Zero));
            if (!((env).HasCopySemantics(_8025_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_8025_outVar, generated);
          } else if (((_7911_maybeOutVars).is_None) || ((new BigInteger(((_7911_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _8026_tmpVar;
            _8026_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _8027_tmpId;
            _8027_tmpId = RAST.Expr.create_Identifier(_8026_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _8026_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8028_outVars;
            _8028_outVars = (_7911_maybeOutVars).dtor_value;
            BigInteger _hi26 = new BigInteger((_8028_outVars).Count);
            for (BigInteger _8029_outI = BigInteger.Zero; _8029_outI < _hi26; _8029_outI++) {
              Dafny.ISequence<Dafny.Rune> _8030_outVar;
              _8030_outVar = ((_8028_outVars).Select(_8029_outI));
              RAST._IExpr _8031_rhs;
              _8031_rhs = (_8027_tmpId).Sel(Std.Strings.__default.OfNat(_8029_outI));
              if (!((env).HasCopySemantics(_8030_outVar))) {
                _8031_rhs = RAST.__default.MaybePlacebo(_8031_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_8030_outVar, _8031_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source268.is_Return) {
        DAST._IExpression _8032___mcc_h22 = _source268.dtor_expr;
        DAST._IExpression _8033_exprDafny = _8032___mcc_h22;
        {
          RAST._IExpr _8034_expr;
          DCOMPUTF16._IOwnership _8035___v70;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8036_recIdents;
          RAST._IExpr _out3554;
          DCOMPUTF16._IOwnership _out3555;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3556;
          DCOMPUTF16.COMP.GenExpr(_8033_exprDafny, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3554, out _out3555, out _out3556);
          _8034_expr = _out3554;
          _8035___v70 = _out3555;
          _8036_recIdents = _out3556;
          readIdents = _8036_recIdents;
          if (isLast) {
            generated = _8034_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_8034_expr));
          }
          newEnv = env;
        }
      } else if (_source268.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source268.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8037___mcc_h23 = _source268.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8038_toLabel = _8037___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source272 = _8038_toLabel;
          if (_source272.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _8039___mcc_h210 = _source272.dtor_value;
            Dafny.ISequence<Dafny.Rune> _8040_lbl = _8039___mcc_h210;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _8040_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source268.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _8041___mcc_h24 = _source268.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8042_body = _8041___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          BigInteger _hi27 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _8043_paramI = BigInteger.Zero; _8043_paramI < _hi27; _8043_paramI++) {
            Dafny.ISequence<Dafny.Rune> _8044_param;
            _8044_param = ((env).dtor_names).Select(_8043_paramI);
            RAST._IExpr _8045_paramInit;
            DCOMPUTF16._IOwnership _8046___v64;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8047___v65;
            RAST._IExpr _out3557;
            DCOMPUTF16._IOwnership _out3558;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3559;
            DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Ident(_8044_param), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3557, out _out3558, out _out3559);
            _8045_paramInit = _out3557;
            _8046___v64 = _out3558;
            _8047___v65 = _out3559;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMPUTF16.__default.escapeIdent(_8044_param), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8045_paramInit)));
          }
          RAST._IExpr _8048_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8049_bodyIdents;
          DCOMPUTF16._IEnvironment _8050_bodyEnv;
          RAST._IExpr _out3560;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3561;
          DCOMPUTF16._IEnvironment _out3562;
          DCOMPUTF16.COMP.GenStmts(_8042_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), env, false, earlyReturn, out _out3560, out _out3561, out _out3562);
          _8048_bodyExpr = _out3560;
          _8049_bodyIdents = _out3561;
          _8050_bodyEnv = _out3562;
          newEnv = env;
          readIdents = _8049_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _8048_bodyExpr)));
        }
      } else if (_source268.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source268.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else {
        DAST._IExpression _8051___mcc_h25 = _source268.dtor_Print_a0;
        DAST._IExpression _8052_e = _8051___mcc_h25;
        {
          RAST._IExpr _8053_printedExpr;
          DCOMPUTF16._IOwnership _8054_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8055_recIdents;
          RAST._IExpr _out3563;
          DCOMPUTF16._IOwnership _out3564;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3565;
          DCOMPUTF16.COMP.GenExpr(_8052_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3563, out _out3564, out _out3565);
          _8053_printedExpr = _out3563;
          _8054_recOwnership = _out3564;
          _8055_recIdents = _out3565;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_8053_printedExpr)));
          readIdents = _8055_recIdents;
          newEnv = env;
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source273 = range;
      if (_source273.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source273.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source273.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source273.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source273.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source273.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source273.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source273.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source273.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source273.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source273.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public static void FromOwned(RAST._IExpr r, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMPUTF16._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
      } else {
        @out = RAST.__default.BorrowMut(r);
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public static void FromOwnership(RAST._IExpr r, DCOMPUTF16._IOwnership ownership, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMPUTF16._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      if (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out3566;
        DCOMPUTF16._IOwnership _out3567;
        DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3566, out _out3567);
        @out = _out3566;
        resultingOwnership = _out3567;
        return ;
      } else if ((object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          @out = RAST.__default.Clone(r);
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMPUTF16._IOwnership expectedOwnership, DCOMPUTF16._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()));
    }
    public static void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source274 = e;
      DAST._ILiteral _8056___mcc_h0 = _source274.dtor_Literal_a0;
      DAST._ILiteral _source275 = _8056___mcc_h0;
      if (_source275.is_BoolLiteral) {
        bool _8057___mcc_h1 = _source275.dtor_BoolLiteral_a0;
        if ((_8057___mcc_h1) == (false)) {
          {
            RAST._IExpr _out3568;
            DCOMPUTF16._IOwnership _out3569;
            DCOMPUTF16.COMP.FromOwned(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")), expectedOwnership, out _out3568, out _out3569);
            r = _out3568;
            resultingOwnership = _out3569;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            return ;
          }
        } else {
          {
            RAST._IExpr _out3570;
            DCOMPUTF16._IOwnership _out3571;
            DCOMPUTF16.COMP.FromOwned(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")), expectedOwnership, out _out3570, out _out3571);
            r = _out3570;
            resultingOwnership = _out3571;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            return ;
          }
        }
      } else if (_source275.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _8058___mcc_h2 = _source275.dtor_IntLiteral_a0;
        DAST._IType _8059___mcc_h3 = _source275.dtor_IntLiteral_a1;
        DAST._IType _8060_t = _8059___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _8061_i = _8058___mcc_h2;
        {
          DAST._IType _source276 = _8060_t;
          if (_source276.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8062___mcc_h100 = _source276.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _8063___mcc_h101 = _source276.dtor_typeArgs;
            DAST._IResolvedType _8064___mcc_h102 = _source276.dtor_resolved;
            DAST._IType _8065_o = _8060_t;
            {
              RAST._IType _8066_genType;
              RAST._IType _out3572;
              _out3572 = DCOMPUTF16.COMP.GenType(_8065_o, false, false);
              _8066_genType = _out3572;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8066_genType);
            }
          } else if (_source276.is_Nullable) {
            DAST._IType _8067___mcc_h106 = _source276.dtor_Nullable_a0;
            DAST._IType _8068_o = _8060_t;
            {
              RAST._IType _8069_genType;
              RAST._IType _out3573;
              _out3573 = DCOMPUTF16.COMP.GenType(_8068_o, false, false);
              _8069_genType = _out3573;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8069_genType);
            }
          } else if (_source276.is_Tuple) {
            Dafny.ISequence<DAST._IType> _8070___mcc_h108 = _source276.dtor_Tuple_a0;
            DAST._IType _8071_o = _8060_t;
            {
              RAST._IType _8072_genType;
              RAST._IType _out3574;
              _out3574 = DCOMPUTF16.COMP.GenType(_8071_o, false, false);
              _8072_genType = _out3574;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8072_genType);
            }
          } else if (_source276.is_Array) {
            DAST._IType _8073___mcc_h110 = _source276.dtor_element;
            BigInteger _8074___mcc_h111 = _source276.dtor_dims;
            DAST._IType _8075_o = _8060_t;
            {
              RAST._IType _8076_genType;
              RAST._IType _out3575;
              _out3575 = DCOMPUTF16.COMP.GenType(_8075_o, false, false);
              _8076_genType = _out3575;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8076_genType);
            }
          } else if (_source276.is_Seq) {
            DAST._IType _8077___mcc_h114 = _source276.dtor_element;
            DAST._IType _8078_o = _8060_t;
            {
              RAST._IType _8079_genType;
              RAST._IType _out3576;
              _out3576 = DCOMPUTF16.COMP.GenType(_8078_o, false, false);
              _8079_genType = _out3576;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8079_genType);
            }
          } else if (_source276.is_Set) {
            DAST._IType _8080___mcc_h116 = _source276.dtor_element;
            DAST._IType _8081_o = _8060_t;
            {
              RAST._IType _8082_genType;
              RAST._IType _out3577;
              _out3577 = DCOMPUTF16.COMP.GenType(_8081_o, false, false);
              _8082_genType = _out3577;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8082_genType);
            }
          } else if (_source276.is_Multiset) {
            DAST._IType _8083___mcc_h118 = _source276.dtor_element;
            DAST._IType _8084_o = _8060_t;
            {
              RAST._IType _8085_genType;
              RAST._IType _out3578;
              _out3578 = DCOMPUTF16.COMP.GenType(_8084_o, false, false);
              _8085_genType = _out3578;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8085_genType);
            }
          } else if (_source276.is_Map) {
            DAST._IType _8086___mcc_h120 = _source276.dtor_key;
            DAST._IType _8087___mcc_h121 = _source276.dtor_value;
            DAST._IType _8088_o = _8060_t;
            {
              RAST._IType _8089_genType;
              RAST._IType _out3579;
              _out3579 = DCOMPUTF16.COMP.GenType(_8088_o, false, false);
              _8089_genType = _out3579;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8089_genType);
            }
          } else if (_source276.is_SetBuilder) {
            DAST._IType _8090___mcc_h124 = _source276.dtor_element;
            DAST._IType _8091_o = _8060_t;
            {
              RAST._IType _8092_genType;
              RAST._IType _out3580;
              _out3580 = DCOMPUTF16.COMP.GenType(_8091_o, false, false);
              _8092_genType = _out3580;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8092_genType);
            }
          } else if (_source276.is_MapBuilder) {
            DAST._IType _8093___mcc_h126 = _source276.dtor_key;
            DAST._IType _8094___mcc_h127 = _source276.dtor_value;
            DAST._IType _8095_o = _8060_t;
            {
              RAST._IType _8096_genType;
              RAST._IType _out3581;
              _out3581 = DCOMPUTF16.COMP.GenType(_8095_o, false, false);
              _8096_genType = _out3581;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8096_genType);
            }
          } else if (_source276.is_Arrow) {
            Dafny.ISequence<DAST._IType> _8097___mcc_h130 = _source276.dtor_args;
            DAST._IType _8098___mcc_h131 = _source276.dtor_result;
            DAST._IType _8099_o = _8060_t;
            {
              RAST._IType _8100_genType;
              RAST._IType _out3582;
              _out3582 = DCOMPUTF16.COMP.GenType(_8099_o, false, false);
              _8100_genType = _out3582;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8100_genType);
            }
          } else if (_source276.is_Primitive) {
            DAST._IPrimitive _8101___mcc_h134 = _source276.dtor_Primitive_a0;
            DAST._IPrimitive _source277 = _8101___mcc_h134;
            if (_source277.is_Int) {
              {
                if ((new BigInteger((_8061_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_8061_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_8061_i, true));
                }
              }
            } else if (_source277.is_Real) {
              DAST._IType _8102_o = _8060_t;
              {
                RAST._IType _8103_genType;
                RAST._IType _out3583;
                _out3583 = DCOMPUTF16.COMP.GenType(_8102_o, false, false);
                _8103_genType = _out3583;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8103_genType);
              }
            } else if (_source277.is_String) {
              DAST._IType _8104_o = _8060_t;
              {
                RAST._IType _8105_genType;
                RAST._IType _out3584;
                _out3584 = DCOMPUTF16.COMP.GenType(_8104_o, false, false);
                _8105_genType = _out3584;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8105_genType);
              }
            } else if (_source277.is_Bool) {
              DAST._IType _8106_o = _8060_t;
              {
                RAST._IType _8107_genType;
                RAST._IType _out3585;
                _out3585 = DCOMPUTF16.COMP.GenType(_8106_o, false, false);
                _8107_genType = _out3585;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8107_genType);
              }
            } else {
              DAST._IType _8108_o = _8060_t;
              {
                RAST._IType _8109_genType;
                RAST._IType _out3586;
                _out3586 = DCOMPUTF16.COMP.GenType(_8108_o, false, false);
                _8109_genType = _out3586;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8109_genType);
              }
            }
          } else if (_source276.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _8110___mcc_h136 = _source276.dtor_Passthrough_a0;
            DAST._IType _8111_o = _8060_t;
            {
              RAST._IType _8112_genType;
              RAST._IType _out3587;
              _out3587 = DCOMPUTF16.COMP.GenType(_8111_o, false, false);
              _8112_genType = _out3587;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8112_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _8113___mcc_h138 = _source276.dtor_TypeArg_a0;
            DAST._IType _8114_o = _8060_t;
            {
              RAST._IType _8115_genType;
              RAST._IType _out3588;
              _out3588 = DCOMPUTF16.COMP.GenType(_8114_o, false, false);
              _8115_genType = _out3588;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8061_i), _8115_genType);
            }
          }
          RAST._IExpr _out3589;
          DCOMPUTF16._IOwnership _out3590;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3589, out _out3590);
          r = _out3589;
          resultingOwnership = _out3590;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source275.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _8116___mcc_h4 = _source275.dtor_DecLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _8117___mcc_h5 = _source275.dtor_DecLiteral_a1;
        DAST._IType _8118___mcc_h6 = _source275.dtor_DecLiteral_a2;
        DAST._IType _8119_t = _8118___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _8120_d = _8117___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _8121_n = _8116___mcc_h4;
        {
          DAST._IType _source278 = _8119_t;
          if (_source278.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8122___mcc_h140 = _source278.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _8123___mcc_h141 = _source278.dtor_typeArgs;
            DAST._IResolvedType _8124___mcc_h142 = _source278.dtor_resolved;
            DAST._IType _8125_o = _8119_t;
            {
              RAST._IType _8126_genType;
              RAST._IType _out3591;
              _out3591 = DCOMPUTF16.COMP.GenType(_8125_o, false, false);
              _8126_genType = _out3591;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8126_genType);
            }
          } else if (_source278.is_Nullable) {
            DAST._IType _8127___mcc_h146 = _source278.dtor_Nullable_a0;
            DAST._IType _8128_o = _8119_t;
            {
              RAST._IType _8129_genType;
              RAST._IType _out3592;
              _out3592 = DCOMPUTF16.COMP.GenType(_8128_o, false, false);
              _8129_genType = _out3592;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8129_genType);
            }
          } else if (_source278.is_Tuple) {
            Dafny.ISequence<DAST._IType> _8130___mcc_h148 = _source278.dtor_Tuple_a0;
            DAST._IType _8131_o = _8119_t;
            {
              RAST._IType _8132_genType;
              RAST._IType _out3593;
              _out3593 = DCOMPUTF16.COMP.GenType(_8131_o, false, false);
              _8132_genType = _out3593;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8132_genType);
            }
          } else if (_source278.is_Array) {
            DAST._IType _8133___mcc_h150 = _source278.dtor_element;
            BigInteger _8134___mcc_h151 = _source278.dtor_dims;
            DAST._IType _8135_o = _8119_t;
            {
              RAST._IType _8136_genType;
              RAST._IType _out3594;
              _out3594 = DCOMPUTF16.COMP.GenType(_8135_o, false, false);
              _8136_genType = _out3594;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8136_genType);
            }
          } else if (_source278.is_Seq) {
            DAST._IType _8137___mcc_h154 = _source278.dtor_element;
            DAST._IType _8138_o = _8119_t;
            {
              RAST._IType _8139_genType;
              RAST._IType _out3595;
              _out3595 = DCOMPUTF16.COMP.GenType(_8138_o, false, false);
              _8139_genType = _out3595;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8139_genType);
            }
          } else if (_source278.is_Set) {
            DAST._IType _8140___mcc_h156 = _source278.dtor_element;
            DAST._IType _8141_o = _8119_t;
            {
              RAST._IType _8142_genType;
              RAST._IType _out3596;
              _out3596 = DCOMPUTF16.COMP.GenType(_8141_o, false, false);
              _8142_genType = _out3596;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8142_genType);
            }
          } else if (_source278.is_Multiset) {
            DAST._IType _8143___mcc_h158 = _source278.dtor_element;
            DAST._IType _8144_o = _8119_t;
            {
              RAST._IType _8145_genType;
              RAST._IType _out3597;
              _out3597 = DCOMPUTF16.COMP.GenType(_8144_o, false, false);
              _8145_genType = _out3597;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8145_genType);
            }
          } else if (_source278.is_Map) {
            DAST._IType _8146___mcc_h160 = _source278.dtor_key;
            DAST._IType _8147___mcc_h161 = _source278.dtor_value;
            DAST._IType _8148_o = _8119_t;
            {
              RAST._IType _8149_genType;
              RAST._IType _out3598;
              _out3598 = DCOMPUTF16.COMP.GenType(_8148_o, false, false);
              _8149_genType = _out3598;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8149_genType);
            }
          } else if (_source278.is_SetBuilder) {
            DAST._IType _8150___mcc_h164 = _source278.dtor_element;
            DAST._IType _8151_o = _8119_t;
            {
              RAST._IType _8152_genType;
              RAST._IType _out3599;
              _out3599 = DCOMPUTF16.COMP.GenType(_8151_o, false, false);
              _8152_genType = _out3599;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8152_genType);
            }
          } else if (_source278.is_MapBuilder) {
            DAST._IType _8153___mcc_h166 = _source278.dtor_key;
            DAST._IType _8154___mcc_h167 = _source278.dtor_value;
            DAST._IType _8155_o = _8119_t;
            {
              RAST._IType _8156_genType;
              RAST._IType _out3600;
              _out3600 = DCOMPUTF16.COMP.GenType(_8155_o, false, false);
              _8156_genType = _out3600;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8156_genType);
            }
          } else if (_source278.is_Arrow) {
            Dafny.ISequence<DAST._IType> _8157___mcc_h170 = _source278.dtor_args;
            DAST._IType _8158___mcc_h171 = _source278.dtor_result;
            DAST._IType _8159_o = _8119_t;
            {
              RAST._IType _8160_genType;
              RAST._IType _out3601;
              _out3601 = DCOMPUTF16.COMP.GenType(_8159_o, false, false);
              _8160_genType = _out3601;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8160_genType);
            }
          } else if (_source278.is_Primitive) {
            DAST._IPrimitive _8161___mcc_h174 = _source278.dtor_Primitive_a0;
            DAST._IPrimitive _source279 = _8161___mcc_h174;
            if (_source279.is_Int) {
              DAST._IType _8162_o = _8119_t;
              {
                RAST._IType _8163_genType;
                RAST._IType _out3602;
                _out3602 = DCOMPUTF16.COMP.GenType(_8162_o, false, false);
                _8163_genType = _out3602;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8163_genType);
              }
            } else if (_source279.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source279.is_String) {
              DAST._IType _8164_o = _8119_t;
              {
                RAST._IType _8165_genType;
                RAST._IType _out3603;
                _out3603 = DCOMPUTF16.COMP.GenType(_8164_o, false, false);
                _8165_genType = _out3603;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8165_genType);
              }
            } else if (_source279.is_Bool) {
              DAST._IType _8166_o = _8119_t;
              {
                RAST._IType _8167_genType;
                RAST._IType _out3604;
                _out3604 = DCOMPUTF16.COMP.GenType(_8166_o, false, false);
                _8167_genType = _out3604;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8167_genType);
              }
            } else {
              DAST._IType _8168_o = _8119_t;
              {
                RAST._IType _8169_genType;
                RAST._IType _out3605;
                _out3605 = DCOMPUTF16.COMP.GenType(_8168_o, false, false);
                _8169_genType = _out3605;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8169_genType);
              }
            }
          } else if (_source278.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _8170___mcc_h176 = _source278.dtor_Passthrough_a0;
            DAST._IType _8171_o = _8119_t;
            {
              RAST._IType _8172_genType;
              RAST._IType _out3606;
              _out3606 = DCOMPUTF16.COMP.GenType(_8171_o, false, false);
              _8172_genType = _out3606;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8172_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _8173___mcc_h178 = _source278.dtor_TypeArg_a0;
            DAST._IType _8174_o = _8119_t;
            {
              RAST._IType _8175_genType;
              RAST._IType _out3607;
              _out3607 = DCOMPUTF16.COMP.GenType(_8174_o, false, false);
              _8175_genType = _out3607;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8121_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8120_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8175_genType);
            }
          }
          RAST._IExpr _out3608;
          DCOMPUTF16._IOwnership _out3609;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3608, out _out3609);
          r = _out3608;
          resultingOwnership = _out3609;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source275.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _8176___mcc_h7 = _source275.dtor_StringLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _8177_l = _8176___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of"))).Apply1(RAST.Expr.create_LiteralString(_8177_l, false));
          RAST._IExpr _out3610;
          DCOMPUTF16._IOwnership _out3611;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3610, out _out3611);
          r = _out3610;
          resultingOwnership = _out3611;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source275.is_CharLiteral) {
        Dafny.Rune _8178___mcc_h8 = _source275.dtor_CharLiteral_a0;
        Dafny.Rune _8179_c = _8178___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_8179_c).Value)));
          r = RAST.Expr.create_TypeAscription(r, DCOMPUTF16.__default.DafnyCharUnderlying);
          r = ((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(r);
          RAST._IExpr _out3612;
          DCOMPUTF16._IOwnership _out3613;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3612, out _out3613);
          r = _out3612;
          resultingOwnership = _out3613;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _8180___mcc_h9 = _source275.dtor_Null_a0;
        DAST._IType _8181_tpe = _8180___mcc_h9;
        {
          RAST._IType _8182_tpeGen;
          RAST._IType _out3614;
          _out3614 = DCOMPUTF16.COMP.GenType(_8181_tpe, false, false);
          _8182_tpeGen = _out3614;
          r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None")), _8182_tpeGen);
          RAST._IExpr _out3615;
          DCOMPUTF16._IOwnership _out3616;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3615, out _out3616);
          r = _out3615;
          resultingOwnership = _out3616;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public static void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs53 = e;
      DAST._IBinOp _8183_op = _let_tmp_rhs53.dtor_op;
      DAST._IExpression _8184_lExpr = _let_tmp_rhs53.dtor_left;
      DAST._IExpression _8185_rExpr = _let_tmp_rhs53.dtor_right;
      DAST.Format._IBinOpFormat _8186_format = _let_tmp_rhs53.dtor_format2;
      bool _8187_becomesLeftCallsRight;
      _8187_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source280) => {
        if (_source280.is_Eq) {
          bool _8188___mcc_h0 = _source280.dtor_referential;
          bool _8189___mcc_h1 = _source280.dtor_nullable;
          return false;
        } else if (_source280.is_Div) {
          return false;
        } else if (_source280.is_EuclidianDiv) {
          return false;
        } else if (_source280.is_Mod) {
          return false;
        } else if (_source280.is_EuclidianMod) {
          return false;
        } else if (_source280.is_Lt) {
          return false;
        } else if (_source280.is_LtChar) {
          return false;
        } else if (_source280.is_Plus) {
          return false;
        } else if (_source280.is_Minus) {
          return false;
        } else if (_source280.is_Times) {
          return false;
        } else if (_source280.is_BitwiseAnd) {
          return false;
        } else if (_source280.is_BitwiseOr) {
          return false;
        } else if (_source280.is_BitwiseXor) {
          return false;
        } else if (_source280.is_BitwiseShiftRight) {
          return false;
        } else if (_source280.is_BitwiseShiftLeft) {
          return false;
        } else if (_source280.is_And) {
          return false;
        } else if (_source280.is_Or) {
          return false;
        } else if (_source280.is_In) {
          return false;
        } else if (_source280.is_SeqProperPrefix) {
          return false;
        } else if (_source280.is_SeqPrefix) {
          return false;
        } else if (_source280.is_SetMerge) {
          return true;
        } else if (_source280.is_SetSubtraction) {
          return true;
        } else if (_source280.is_SetIntersection) {
          return true;
        } else if (_source280.is_Subset) {
          return false;
        } else if (_source280.is_ProperSubset) {
          return false;
        } else if (_source280.is_SetDisjoint) {
          return true;
        } else if (_source280.is_MapMerge) {
          return true;
        } else if (_source280.is_MapSubtraction) {
          return true;
        } else if (_source280.is_MultisetMerge) {
          return true;
        } else if (_source280.is_MultisetSubtraction) {
          return true;
        } else if (_source280.is_MultisetIntersection) {
          return true;
        } else if (_source280.is_Submultiset) {
          return false;
        } else if (_source280.is_ProperSubmultiset) {
          return false;
        } else if (_source280.is_MultisetDisjoint) {
          return true;
        } else if (_source280.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _8190___mcc_h4 = _source280.dtor_Passthrough_a0;
          return false;
        }
      }))(_8183_op);
      bool _8191_becomesRightCallsLeft;
      _8191_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source281) => {
        if (_source281.is_Eq) {
          bool _8192___mcc_h6 = _source281.dtor_referential;
          bool _8193___mcc_h7 = _source281.dtor_nullable;
          return false;
        } else if (_source281.is_Div) {
          return false;
        } else if (_source281.is_EuclidianDiv) {
          return false;
        } else if (_source281.is_Mod) {
          return false;
        } else if (_source281.is_EuclidianMod) {
          return false;
        } else if (_source281.is_Lt) {
          return false;
        } else if (_source281.is_LtChar) {
          return false;
        } else if (_source281.is_Plus) {
          return false;
        } else if (_source281.is_Minus) {
          return false;
        } else if (_source281.is_Times) {
          return false;
        } else if (_source281.is_BitwiseAnd) {
          return false;
        } else if (_source281.is_BitwiseOr) {
          return false;
        } else if (_source281.is_BitwiseXor) {
          return false;
        } else if (_source281.is_BitwiseShiftRight) {
          return false;
        } else if (_source281.is_BitwiseShiftLeft) {
          return false;
        } else if (_source281.is_And) {
          return false;
        } else if (_source281.is_Or) {
          return false;
        } else if (_source281.is_In) {
          return true;
        } else if (_source281.is_SeqProperPrefix) {
          return false;
        } else if (_source281.is_SeqPrefix) {
          return false;
        } else if (_source281.is_SetMerge) {
          return false;
        } else if (_source281.is_SetSubtraction) {
          return false;
        } else if (_source281.is_SetIntersection) {
          return false;
        } else if (_source281.is_Subset) {
          return false;
        } else if (_source281.is_ProperSubset) {
          return false;
        } else if (_source281.is_SetDisjoint) {
          return false;
        } else if (_source281.is_MapMerge) {
          return false;
        } else if (_source281.is_MapSubtraction) {
          return false;
        } else if (_source281.is_MultisetMerge) {
          return false;
        } else if (_source281.is_MultisetSubtraction) {
          return false;
        } else if (_source281.is_MultisetIntersection) {
          return false;
        } else if (_source281.is_Submultiset) {
          return false;
        } else if (_source281.is_ProperSubmultiset) {
          return false;
        } else if (_source281.is_MultisetDisjoint) {
          return false;
        } else if (_source281.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _8194___mcc_h10 = _source281.dtor_Passthrough_a0;
          return false;
        }
      }))(_8183_op);
      bool _8195_becomesCallLeftRight;
      _8195_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source282) => {
        if (_source282.is_Eq) {
          bool _8196___mcc_h12 = _source282.dtor_referential;
          bool _8197___mcc_h13 = _source282.dtor_nullable;
          if ((_8196___mcc_h12) == (true)) {
            if ((_8197___mcc_h13) == (false)) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else if (_source282.is_Div) {
          return false;
        } else if (_source282.is_EuclidianDiv) {
          return false;
        } else if (_source282.is_Mod) {
          return false;
        } else if (_source282.is_EuclidianMod) {
          return false;
        } else if (_source282.is_Lt) {
          return false;
        } else if (_source282.is_LtChar) {
          return false;
        } else if (_source282.is_Plus) {
          return false;
        } else if (_source282.is_Minus) {
          return false;
        } else if (_source282.is_Times) {
          return false;
        } else if (_source282.is_BitwiseAnd) {
          return false;
        } else if (_source282.is_BitwiseOr) {
          return false;
        } else if (_source282.is_BitwiseXor) {
          return false;
        } else if (_source282.is_BitwiseShiftRight) {
          return false;
        } else if (_source282.is_BitwiseShiftLeft) {
          return false;
        } else if (_source282.is_And) {
          return false;
        } else if (_source282.is_Or) {
          return false;
        } else if (_source282.is_In) {
          return false;
        } else if (_source282.is_SeqProperPrefix) {
          return false;
        } else if (_source282.is_SeqPrefix) {
          return false;
        } else if (_source282.is_SetMerge) {
          return false;
        } else if (_source282.is_SetSubtraction) {
          return false;
        } else if (_source282.is_SetIntersection) {
          return false;
        } else if (_source282.is_Subset) {
          return false;
        } else if (_source282.is_ProperSubset) {
          return false;
        } else if (_source282.is_SetDisjoint) {
          return false;
        } else if (_source282.is_MapMerge) {
          return false;
        } else if (_source282.is_MapSubtraction) {
          return false;
        } else if (_source282.is_MultisetMerge) {
          return false;
        } else if (_source282.is_MultisetSubtraction) {
          return false;
        } else if (_source282.is_MultisetIntersection) {
          return false;
        } else if (_source282.is_Submultiset) {
          return false;
        } else if (_source282.is_ProperSubmultiset) {
          return false;
        } else if (_source282.is_MultisetDisjoint) {
          return false;
        } else if (_source282.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _8198___mcc_h16 = _source282.dtor_Passthrough_a0;
          return false;
        }
      }))(_8183_op);
      DCOMPUTF16._IOwnership _8199_expectedLeftOwnership;
      _8199_expectedLeftOwnership = ((_8187_becomesLeftCallsRight) ? (DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()) : ((((_8191_becomesRightCallsLeft) || (_8195_becomesCallLeftRight)) ? (DCOMPUTF16.Ownership.create_OwnershipBorrowed()) : (DCOMPUTF16.Ownership.create_OwnershipOwned()))));
      DCOMPUTF16._IOwnership _8200_expectedRightOwnership;
      _8200_expectedRightOwnership = (((_8187_becomesLeftCallsRight) || (_8195_becomesCallLeftRight)) ? (DCOMPUTF16.Ownership.create_OwnershipBorrowed()) : (((_8191_becomesRightCallsLeft) ? (DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()) : (DCOMPUTF16.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _8201_left;
      DCOMPUTF16._IOwnership _8202___v75;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8203_recIdentsL;
      RAST._IExpr _out3617;
      DCOMPUTF16._IOwnership _out3618;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3619;
      DCOMPUTF16.COMP.GenExpr(_8184_lExpr, selfIdent, env, _8199_expectedLeftOwnership, out _out3617, out _out3618, out _out3619);
      _8201_left = _out3617;
      _8202___v75 = _out3618;
      _8203_recIdentsL = _out3619;
      RAST._IExpr _8204_right;
      DCOMPUTF16._IOwnership _8205___v76;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8206_recIdentsR;
      RAST._IExpr _out3620;
      DCOMPUTF16._IOwnership _out3621;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3622;
      DCOMPUTF16.COMP.GenExpr(_8185_rExpr, selfIdent, env, _8200_expectedRightOwnership, out _out3620, out _out3621, out _out3622);
      _8204_right = _out3620;
      _8205___v76 = _out3621;
      _8206_recIdentsR = _out3622;
      DAST._IBinOp _source283 = _8183_op;
      if (_source283.is_Eq) {
        bool _8207___mcc_h18 = _source283.dtor_referential;
        bool _8208___mcc_h19 = _source283.dtor_nullable;
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source284 = _8183_op;
            if (_source284.is_Eq) {
              bool _8209___mcc_h24 = _source284.dtor_referential;
              bool _8210___mcc_h25 = _source284.dtor_nullable;
              bool _8211_nullable = _8210___mcc_h25;
              bool _8212_referential = _8209___mcc_h24;
              {
                if (_8212_referential) {
                  if (_8211_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source284.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source284.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8213___mcc_h26 = _source284.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8214_op = _8213___mcc_h26;
              {
                r = RAST.Expr.create_BinaryOp(_8214_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_Div) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source285 = _8183_op;
            if (_source285.is_Eq) {
              bool _8215___mcc_h27 = _source285.dtor_referential;
              bool _8216___mcc_h28 = _source285.dtor_nullable;
              bool _8217_nullable = _8216___mcc_h28;
              bool _8218_referential = _8215___mcc_h27;
              {
                if (_8218_referential) {
                  if (_8217_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source285.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source285.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8219___mcc_h29 = _source285.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8220_op = _8219___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_8220_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_EuclidianDiv) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source286 = _8183_op;
            if (_source286.is_Eq) {
              bool _8221___mcc_h30 = _source286.dtor_referential;
              bool _8222___mcc_h31 = _source286.dtor_nullable;
              bool _8223_nullable = _8222___mcc_h31;
              bool _8224_referential = _8221___mcc_h30;
              {
                if (_8224_referential) {
                  if (_8223_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source286.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source286.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8225___mcc_h32 = _source286.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8226_op = _8225___mcc_h32;
              {
                r = RAST.Expr.create_BinaryOp(_8226_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_Mod) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source287 = _8183_op;
            if (_source287.is_Eq) {
              bool _8227___mcc_h33 = _source287.dtor_referential;
              bool _8228___mcc_h34 = _source287.dtor_nullable;
              bool _8229_nullable = _8228___mcc_h34;
              bool _8230_referential = _8227___mcc_h33;
              {
                if (_8230_referential) {
                  if (_8229_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source287.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source287.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8231___mcc_h35 = _source287.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8232_op = _8231___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_8232_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_EuclidianMod) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source288 = _8183_op;
            if (_source288.is_Eq) {
              bool _8233___mcc_h36 = _source288.dtor_referential;
              bool _8234___mcc_h37 = _source288.dtor_nullable;
              bool _8235_nullable = _8234___mcc_h37;
              bool _8236_referential = _8233___mcc_h36;
              {
                if (_8236_referential) {
                  if (_8235_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source288.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source288.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8237___mcc_h38 = _source288.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8238_op = _8237___mcc_h38;
              {
                r = RAST.Expr.create_BinaryOp(_8238_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_Lt) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source289 = _8183_op;
            if (_source289.is_Eq) {
              bool _8239___mcc_h39 = _source289.dtor_referential;
              bool _8240___mcc_h40 = _source289.dtor_nullable;
              bool _8241_nullable = _8240___mcc_h40;
              bool _8242_referential = _8239___mcc_h39;
              {
                if (_8242_referential) {
                  if (_8241_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source289.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source289.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8243___mcc_h41 = _source289.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8244_op = _8243___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_8244_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_LtChar) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source290 = _8183_op;
            if (_source290.is_Eq) {
              bool _8245___mcc_h42 = _source290.dtor_referential;
              bool _8246___mcc_h43 = _source290.dtor_nullable;
              bool _8247_nullable = _8246___mcc_h43;
              bool _8248_referential = _8245___mcc_h42;
              {
                if (_8248_referential) {
                  if (_8247_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source290.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source290.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8249___mcc_h44 = _source290.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8250_op = _8249___mcc_h44;
              {
                r = RAST.Expr.create_BinaryOp(_8250_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_Plus) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source291 = _8183_op;
            if (_source291.is_Eq) {
              bool _8251___mcc_h45 = _source291.dtor_referential;
              bool _8252___mcc_h46 = _source291.dtor_nullable;
              bool _8253_nullable = _8252___mcc_h46;
              bool _8254_referential = _8251___mcc_h45;
              {
                if (_8254_referential) {
                  if (_8253_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source291.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source291.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8255___mcc_h47 = _source291.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8256_op = _8255___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_8256_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_Minus) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source292 = _8183_op;
            if (_source292.is_Eq) {
              bool _8257___mcc_h48 = _source292.dtor_referential;
              bool _8258___mcc_h49 = _source292.dtor_nullable;
              bool _8259_nullable = _8258___mcc_h49;
              bool _8260_referential = _8257___mcc_h48;
              {
                if (_8260_referential) {
                  if (_8259_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source292.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source292.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8261___mcc_h50 = _source292.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8262_op = _8261___mcc_h50;
              {
                r = RAST.Expr.create_BinaryOp(_8262_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_Times) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source293 = _8183_op;
            if (_source293.is_Eq) {
              bool _8263___mcc_h51 = _source293.dtor_referential;
              bool _8264___mcc_h52 = _source293.dtor_nullable;
              bool _8265_nullable = _8264___mcc_h52;
              bool _8266_referential = _8263___mcc_h51;
              {
                if (_8266_referential) {
                  if (_8265_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source293.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source293.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8267___mcc_h53 = _source293.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8268_op = _8267___mcc_h53;
              {
                r = RAST.Expr.create_BinaryOp(_8268_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_BitwiseAnd) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source294 = _8183_op;
            if (_source294.is_Eq) {
              bool _8269___mcc_h54 = _source294.dtor_referential;
              bool _8270___mcc_h55 = _source294.dtor_nullable;
              bool _8271_nullable = _8270___mcc_h55;
              bool _8272_referential = _8269___mcc_h54;
              {
                if (_8272_referential) {
                  if (_8271_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source294.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source294.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8273___mcc_h56 = _source294.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8274_op = _8273___mcc_h56;
              {
                r = RAST.Expr.create_BinaryOp(_8274_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_BitwiseOr) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source295 = _8183_op;
            if (_source295.is_Eq) {
              bool _8275___mcc_h57 = _source295.dtor_referential;
              bool _8276___mcc_h58 = _source295.dtor_nullable;
              bool _8277_nullable = _8276___mcc_h58;
              bool _8278_referential = _8275___mcc_h57;
              {
                if (_8278_referential) {
                  if (_8277_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source295.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source295.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8279___mcc_h59 = _source295.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8280_op = _8279___mcc_h59;
              {
                r = RAST.Expr.create_BinaryOp(_8280_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_BitwiseXor) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source296 = _8183_op;
            if (_source296.is_Eq) {
              bool _8281___mcc_h60 = _source296.dtor_referential;
              bool _8282___mcc_h61 = _source296.dtor_nullable;
              bool _8283_nullable = _8282___mcc_h61;
              bool _8284_referential = _8281___mcc_h60;
              {
                if (_8284_referential) {
                  if (_8283_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source296.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source296.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8285___mcc_h62 = _source296.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8286_op = _8285___mcc_h62;
              {
                r = RAST.Expr.create_BinaryOp(_8286_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_BitwiseShiftRight) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source297 = _8183_op;
            if (_source297.is_Eq) {
              bool _8287___mcc_h63 = _source297.dtor_referential;
              bool _8288___mcc_h64 = _source297.dtor_nullable;
              bool _8289_nullable = _8288___mcc_h64;
              bool _8290_referential = _8287___mcc_h63;
              {
                if (_8290_referential) {
                  if (_8289_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source297.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source297.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8291___mcc_h65 = _source297.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8292_op = _8291___mcc_h65;
              {
                r = RAST.Expr.create_BinaryOp(_8292_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_BitwiseShiftLeft) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source298 = _8183_op;
            if (_source298.is_Eq) {
              bool _8293___mcc_h66 = _source298.dtor_referential;
              bool _8294___mcc_h67 = _source298.dtor_nullable;
              bool _8295_nullable = _8294___mcc_h67;
              bool _8296_referential = _8293___mcc_h66;
              {
                if (_8296_referential) {
                  if (_8295_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source298.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source298.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8297___mcc_h68 = _source298.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8298_op = _8297___mcc_h68;
              {
                r = RAST.Expr.create_BinaryOp(_8298_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_And) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source299 = _8183_op;
            if (_source299.is_Eq) {
              bool _8299___mcc_h69 = _source299.dtor_referential;
              bool _8300___mcc_h70 = _source299.dtor_nullable;
              bool _8301_nullable = _8300___mcc_h70;
              bool _8302_referential = _8299___mcc_h69;
              {
                if (_8302_referential) {
                  if (_8301_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source299.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source299.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8303___mcc_h71 = _source299.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8304_op = _8303___mcc_h71;
              {
                r = RAST.Expr.create_BinaryOp(_8304_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_Or) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source300 = _8183_op;
            if (_source300.is_Eq) {
              bool _8305___mcc_h72 = _source300.dtor_referential;
              bool _8306___mcc_h73 = _source300.dtor_nullable;
              bool _8307_nullable = _8306___mcc_h73;
              bool _8308_referential = _8305___mcc_h72;
              {
                if (_8308_referential) {
                  if (_8307_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source300.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source300.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8309___mcc_h74 = _source300.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8310_op = _8309___mcc_h74;
              {
                r = RAST.Expr.create_BinaryOp(_8310_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      } else if (_source283.is_In) {
        {
          r = ((_8204_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_8201_left);
        }
      } else if (_source283.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _8201_left, _8204_right, _8186_format);
      } else if (_source283.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _8201_left, _8204_right, _8186_format);
      } else if (_source283.is_SetMerge) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_8204_right);
        }
      } else if (_source283.is_SetSubtraction) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_8204_right);
        }
      } else if (_source283.is_SetIntersection) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_8204_right);
        }
      } else if (_source283.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _8201_left, _8204_right, _8186_format);
        }
      } else if (_source283.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _8201_left, _8204_right, _8186_format);
        }
      } else if (_source283.is_SetDisjoint) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_8204_right);
        }
      } else if (_source283.is_MapMerge) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_8204_right);
        }
      } else if (_source283.is_MapSubtraction) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_8204_right);
        }
      } else if (_source283.is_MultisetMerge) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_8204_right);
        }
      } else if (_source283.is_MultisetSubtraction) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_8204_right);
        }
      } else if (_source283.is_MultisetIntersection) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_8204_right);
        }
      } else if (_source283.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _8201_left, _8204_right, _8186_format);
        }
      } else if (_source283.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _8201_left, _8204_right, _8186_format);
        }
      } else if (_source283.is_MultisetDisjoint) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_8204_right);
        }
      } else if (_source283.is_Concat) {
        {
          r = ((_8201_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_8204_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _8311___mcc_h22 = _source283.dtor_Passthrough_a0;
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8183_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8183_op), _8201_left, _8204_right, _8186_format);
          } else {
            DAST._IBinOp _source301 = _8183_op;
            if (_source301.is_Eq) {
              bool _8312___mcc_h75 = _source301.dtor_referential;
              bool _8313___mcc_h76 = _source301.dtor_nullable;
              bool _8314_nullable = _8313___mcc_h76;
              bool _8315_referential = _8312___mcc_h75;
              {
                if (_8315_referential) {
                  if (_8314_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8201_left, _8204_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source301.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else if (_source301.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8201_left, _8204_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8316___mcc_h77 = _source301.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8317_op = _8316___mcc_h77;
              {
                r = RAST.Expr.create_BinaryOp(_8317_op, _8201_left, _8204_right, _8186_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out3623;
      DCOMPUTF16._IOwnership _out3624;
      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3623, out _out3624);
      r = _out3623;
      resultingOwnership = _out3624;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8203_recIdentsL, _8206_recIdentsR);
      return ;
    }
    public static void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs54 = e;
      DAST._IExpression _8318_expr = _let_tmp_rhs54.dtor_value;
      DAST._IType _8319_fromTpe = _let_tmp_rhs54.dtor_from;
      DAST._IType _8320_toTpe = _let_tmp_rhs54.dtor_typ;
      if (object.Equals(_8319_fromTpe, _8320_toTpe)) {
        RAST._IExpr _8321_recursiveGen;
        DCOMPUTF16._IOwnership _8322_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8323_recIdents;
        RAST._IExpr _out3625;
        DCOMPUTF16._IOwnership _out3626;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3627;
        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3625, out _out3626, out _out3627);
        _8321_recursiveGen = _out3625;
        _8322_recOwned = _out3626;
        _8323_recIdents = _out3627;
        r = _8321_recursiveGen;
        RAST._IExpr _out3628;
        DCOMPUTF16._IOwnership _out3629;
        DCOMPUTF16.COMP.FromOwnership(r, _8322_recOwned, expectedOwnership, out _out3628, out _out3629);
        r = _out3628;
        resultingOwnership = _out3629;
        readIdents = _8323_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source302 = _System.Tuple2<DAST._IType, DAST._IType>.create(_8319_fromTpe, _8320_toTpe);
        DAST._IType _8324___mcc_h0 = _source302.dtor__0;
        DAST._IType _8325___mcc_h1 = _source302.dtor__1;
        DAST._IType _source303 = _8324___mcc_h0;
        if (_source303.is_Path) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8326___mcc_h4 = _source303.dtor_Path_a0;
          Dafny.ISequence<DAST._IType> _8327___mcc_h5 = _source303.dtor_typeArgs;
          DAST._IResolvedType _8328___mcc_h6 = _source303.dtor_resolved;
          DAST._IResolvedType _source304 = _8328___mcc_h6;
          if (_source304.is_Datatype) {
            DAST._IDatatypeType _8329___mcc_h16 = _source304.dtor_datatypeType;
            DAST._IType _source305 = _8325___mcc_h1;
            if (_source305.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8330___mcc_h20 = _source305.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _8331___mcc_h21 = _source305.dtor_typeArgs;
              DAST._IResolvedType _8332___mcc_h22 = _source305.dtor_resolved;
              DAST._IResolvedType _source306 = _8332___mcc_h22;
              if (_source306.is_Datatype) {
                DAST._IDatatypeType _8333___mcc_h26 = _source306.dtor_datatypeType;
                {
                  RAST._IType _8334_fromTpeGen;
                  RAST._IType _out3630;
                  _out3630 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _8334_fromTpeGen = _out3630;
                  RAST._IType _8335_toTpeGen;
                  RAST._IType _out3631;
                  _out3631 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _8335_toTpeGen = _out3631;
                  RAST._IExpr _8336_recursiveGen;
                  DCOMPUTF16._IOwnership _8337_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8338_recIdents;
                  RAST._IExpr _out3632;
                  DCOMPUTF16._IOwnership _out3633;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3634;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3632, out _out3633, out _out3634);
                  _8336_recursiveGen = _out3632;
                  _8337_recOwned = _out3633;
                  _8338_recIdents = _out3634;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8336_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8334_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8335_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out3635;
                  DCOMPUTF16._IOwnership _out3636;
                  DCOMPUTF16.COMP.FromOwnership(r, _8337_recOwned, expectedOwnership, out _out3635, out _out3636);
                  r = _out3635;
                  resultingOwnership = _out3636;
                  readIdents = _8338_recIdents;
                }
              } else if (_source306.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8339___mcc_h28 = _source306.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _8340___mcc_h29 = _source306.dtor_attributes;
                {
                  RAST._IType _8341_fromTpeGen;
                  RAST._IType _out3637;
                  _out3637 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _8341_fromTpeGen = _out3637;
                  RAST._IType _8342_toTpeGen;
                  RAST._IType _out3638;
                  _out3638 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _8342_toTpeGen = _out3638;
                  RAST._IExpr _8343_recursiveGen;
                  DCOMPUTF16._IOwnership _8344_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8345_recIdents;
                  RAST._IExpr _out3639;
                  DCOMPUTF16._IOwnership _out3640;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3641;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3639, out _out3640, out _out3641);
                  _8343_recursiveGen = _out3639;
                  _8344_recOwned = _out3640;
                  _8345_recIdents = _out3641;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8343_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8341_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8342_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out3642;
                  DCOMPUTF16._IOwnership _out3643;
                  DCOMPUTF16.COMP.FromOwnership(r, _8344_recOwned, expectedOwnership, out _out3642, out _out3643);
                  r = _out3642;
                  resultingOwnership = _out3643;
                  readIdents = _8345_recIdents;
                }
              } else {
                DAST._IType _8346___mcc_h32 = _source306.dtor_baseType;
                DAST._INewtypeRange _8347___mcc_h33 = _source306.dtor_range;
                bool _8348___mcc_h34 = _source306.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _8349___mcc_h35 = _source306.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _8350_attributes = _8349___mcc_h35;
                bool _8351_erase = _8348___mcc_h34;
                DAST._INewtypeRange _8352_range = _8347___mcc_h33;
                DAST._IType _8353_b = _8346___mcc_h32;
                {
                  Std.Wrappers._IOption<RAST._IType> _8354_nativeToType;
                  _8354_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_8353_b, _8352_range);
                  if (object.Equals(_8319_fromTpe, _8353_b)) {
                    RAST._IExpr _8355_recursiveGen;
                    DCOMPUTF16._IOwnership _8356_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8357_recIdents;
                    RAST._IExpr _out3644;
                    DCOMPUTF16._IOwnership _out3645;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3646;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3644, out _out3645, out _out3646);
                    _8355_recursiveGen = _out3644;
                    _8356_recOwned = _out3645;
                    _8357_recIdents = _out3646;
                    readIdents = _8357_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source307 = _8354_nativeToType;
                    if (_source307.is_None) {
                      if (_8351_erase) {
                        r = _8355_recursiveGen;
                      } else {
                        RAST._IType _8358_rhsType;
                        RAST._IType _out3647;
                        _out3647 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                        _8358_rhsType = _out3647;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_8358_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_8355_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out3648;
                      DCOMPUTF16._IOwnership _out3649;
                      DCOMPUTF16.COMP.FromOwnership(r, _8356_recOwned, expectedOwnership, out _out3648, out _out3649);
                      r = _out3648;
                      resultingOwnership = _out3649;
                    } else {
                      RAST._IType _8359___mcc_h1246 = _source307.dtor_value;
                      RAST._IType _8360_v = _8359___mcc_h1246;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8355_recursiveGen, RAST.Expr.create_ExprFromType(_8360_v)));
                      RAST._IExpr _out3650;
                      DCOMPUTF16._IOwnership _out3651;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3650, out _out3651);
                      r = _out3650;
                      resultingOwnership = _out3651;
                    }
                  } else {
                    if ((_8354_nativeToType).is_Some) {
                      DAST._IType _source308 = _8319_fromTpe;
                      if (_source308.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8361___mcc_h1247 = _source308.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _8362___mcc_h1248 = _source308.dtor_typeArgs;
                        DAST._IResolvedType _8363___mcc_h1249 = _source308.dtor_resolved;
                        DAST._IResolvedType _source309 = _8363___mcc_h1249;
                        if (_source309.is_Datatype) {
                          DAST._IDatatypeType _8364___mcc_h1253 = _source309.dtor_datatypeType;
                        } else if (_source309.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8365___mcc_h1255 = _source309.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _8366___mcc_h1256 = _source309.dtor_attributes;
                        } else {
                          DAST._IType _8367___mcc_h1259 = _source309.dtor_baseType;
                          DAST._INewtypeRange _8368___mcc_h1260 = _source309.dtor_range;
                          bool _8369___mcc_h1261 = _source309.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _8370___mcc_h1262 = _source309.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _8371_attributes0 = _8370___mcc_h1262;
                          bool _8372_erase0 = _8369___mcc_h1261;
                          DAST._INewtypeRange _8373_range0 = _8368___mcc_h1260;
                          DAST._IType _8374_b0 = _8367___mcc_h1259;
                          {
                            Std.Wrappers._IOption<RAST._IType> _8375_nativeFromType;
                            _8375_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8374_b0, _8373_range0);
                            if ((_8375_nativeFromType).is_Some) {
                              RAST._IExpr _8376_recursiveGen;
                              DCOMPUTF16._IOwnership _8377_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8378_recIdents;
                              RAST._IExpr _out3652;
                              DCOMPUTF16._IOwnership _out3653;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3654;
                              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3652, out _out3653, out _out3654);
                              _8376_recursiveGen = _out3652;
                              _8377_recOwned = _out3653;
                              _8378_recIdents = _out3654;
                              RAST._IExpr _out3655;
                              DCOMPUTF16._IOwnership _out3656;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_8376_recursiveGen, (_8354_nativeToType).dtor_value), _8377_recOwned, expectedOwnership, out _out3655, out _out3656);
                              r = _out3655;
                              resultingOwnership = _out3656;
                              readIdents = _8378_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source308.is_Nullable) {
                        DAST._IType _8379___mcc_h1267 = _source308.dtor_Nullable_a0;
                      } else if (_source308.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _8380___mcc_h1269 = _source308.dtor_Tuple_a0;
                      } else if (_source308.is_Array) {
                        DAST._IType _8381___mcc_h1271 = _source308.dtor_element;
                        BigInteger _8382___mcc_h1272 = _source308.dtor_dims;
                      } else if (_source308.is_Seq) {
                        DAST._IType _8383___mcc_h1275 = _source308.dtor_element;
                      } else if (_source308.is_Set) {
                        DAST._IType _8384___mcc_h1277 = _source308.dtor_element;
                      } else if (_source308.is_Multiset) {
                        DAST._IType _8385___mcc_h1279 = _source308.dtor_element;
                      } else if (_source308.is_Map) {
                        DAST._IType _8386___mcc_h1281 = _source308.dtor_key;
                        DAST._IType _8387___mcc_h1282 = _source308.dtor_value;
                      } else if (_source308.is_SetBuilder) {
                        DAST._IType _8388___mcc_h1285 = _source308.dtor_element;
                      } else if (_source308.is_MapBuilder) {
                        DAST._IType _8389___mcc_h1287 = _source308.dtor_key;
                        DAST._IType _8390___mcc_h1288 = _source308.dtor_value;
                      } else if (_source308.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _8391___mcc_h1291 = _source308.dtor_args;
                        DAST._IType _8392___mcc_h1292 = _source308.dtor_result;
                      } else if (_source308.is_Primitive) {
                        DAST._IPrimitive _8393___mcc_h1295 = _source308.dtor_Primitive_a0;
                      } else if (_source308.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _8394___mcc_h1297 = _source308.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _8395___mcc_h1299 = _source308.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _8396_recursiveGen;
                        DCOMPUTF16._IOwnership _8397_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8398_recIdents;
                        RAST._IExpr _out3657;
                        DCOMPUTF16._IOwnership _out3658;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3659;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3657, out _out3658, out _out3659);
                        _8396_recursiveGen = _out3657;
                        _8397_recOwned = _out3658;
                        _8398_recIdents = _out3659;
                        RAST._IExpr _out3660;
                        DCOMPUTF16._IOwnership _out3661;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_8396_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_8354_nativeToType).dtor_value), _8397_recOwned, expectedOwnership, out _out3660, out _out3661);
                        r = _out3660;
                        resultingOwnership = _out3661;
                        readIdents = _8398_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out3662;
                    DCOMPUTF16._IOwnership _out3663;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3664;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8353_b), _8353_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out3662, out _out3663, out _out3664);
                    r = _out3662;
                    resultingOwnership = _out3663;
                    readIdents = _out3664;
                  }
                }
              }
            } else if (_source305.is_Nullable) {
              DAST._IType _8399___mcc_h40 = _source305.dtor_Nullable_a0;
              {
                RAST._IExpr _8400_recursiveGen;
                DCOMPUTF16._IOwnership _8401_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8402_recIdents;
                RAST._IExpr _out3665;
                DCOMPUTF16._IOwnership _out3666;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3667;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3665, out _out3666, out _out3667);
                _8400_recursiveGen = _out3665;
                _8401_recOwned = _out3666;
                _8402_recIdents = _out3667;
                r = _8400_recursiveGen;
                if (object.Equals(_8401_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out3668;
                DCOMPUTF16._IOwnership _out3669;
                DCOMPUTF16.COMP.FromOwnership(r, _8401_recOwned, expectedOwnership, out _out3668, out _out3669);
                r = _out3668;
                resultingOwnership = _out3669;
                readIdents = _8402_recIdents;
              }
            } else if (_source305.is_Tuple) {
              Dafny.ISequence<DAST._IType> _8403___mcc_h42 = _source305.dtor_Tuple_a0;
              {
                RAST._IType _8404_fromTpeGen;
                RAST._IType _out3670;
                _out3670 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8404_fromTpeGen = _out3670;
                RAST._IType _8405_toTpeGen;
                RAST._IType _out3671;
                _out3671 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8405_toTpeGen = _out3671;
                RAST._IExpr _8406_recursiveGen;
                DCOMPUTF16._IOwnership _8407_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8408_recIdents;
                RAST._IExpr _out3672;
                DCOMPUTF16._IOwnership _out3673;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3674;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3672, out _out3673, out _out3674);
                _8406_recursiveGen = _out3672;
                _8407_recOwned = _out3673;
                _8408_recIdents = _out3674;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8406_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8404_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8405_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3675;
                DCOMPUTF16._IOwnership _out3676;
                DCOMPUTF16.COMP.FromOwnership(r, _8407_recOwned, expectedOwnership, out _out3675, out _out3676);
                r = _out3675;
                resultingOwnership = _out3676;
                readIdents = _8408_recIdents;
              }
            } else if (_source305.is_Array) {
              DAST._IType _8409___mcc_h44 = _source305.dtor_element;
              BigInteger _8410___mcc_h45 = _source305.dtor_dims;
              {
                RAST._IType _8411_fromTpeGen;
                RAST._IType _out3677;
                _out3677 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8411_fromTpeGen = _out3677;
                RAST._IType _8412_toTpeGen;
                RAST._IType _out3678;
                _out3678 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8412_toTpeGen = _out3678;
                RAST._IExpr _8413_recursiveGen;
                DCOMPUTF16._IOwnership _8414_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8415_recIdents;
                RAST._IExpr _out3679;
                DCOMPUTF16._IOwnership _out3680;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3681;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3679, out _out3680, out _out3681);
                _8413_recursiveGen = _out3679;
                _8414_recOwned = _out3680;
                _8415_recIdents = _out3681;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8413_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8411_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8412_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3682;
                DCOMPUTF16._IOwnership _out3683;
                DCOMPUTF16.COMP.FromOwnership(r, _8414_recOwned, expectedOwnership, out _out3682, out _out3683);
                r = _out3682;
                resultingOwnership = _out3683;
                readIdents = _8415_recIdents;
              }
            } else if (_source305.is_Seq) {
              DAST._IType _8416___mcc_h48 = _source305.dtor_element;
              {
                RAST._IType _8417_fromTpeGen;
                RAST._IType _out3684;
                _out3684 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8417_fromTpeGen = _out3684;
                RAST._IType _8418_toTpeGen;
                RAST._IType _out3685;
                _out3685 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8418_toTpeGen = _out3685;
                RAST._IExpr _8419_recursiveGen;
                DCOMPUTF16._IOwnership _8420_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8421_recIdents;
                RAST._IExpr _out3686;
                DCOMPUTF16._IOwnership _out3687;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3688;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3686, out _out3687, out _out3688);
                _8419_recursiveGen = _out3686;
                _8420_recOwned = _out3687;
                _8421_recIdents = _out3688;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8419_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8417_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8418_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3689;
                DCOMPUTF16._IOwnership _out3690;
                DCOMPUTF16.COMP.FromOwnership(r, _8420_recOwned, expectedOwnership, out _out3689, out _out3690);
                r = _out3689;
                resultingOwnership = _out3690;
                readIdents = _8421_recIdents;
              }
            } else if (_source305.is_Set) {
              DAST._IType _8422___mcc_h50 = _source305.dtor_element;
              {
                RAST._IType _8423_fromTpeGen;
                RAST._IType _out3691;
                _out3691 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8423_fromTpeGen = _out3691;
                RAST._IType _8424_toTpeGen;
                RAST._IType _out3692;
                _out3692 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8424_toTpeGen = _out3692;
                RAST._IExpr _8425_recursiveGen;
                DCOMPUTF16._IOwnership _8426_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8427_recIdents;
                RAST._IExpr _out3693;
                DCOMPUTF16._IOwnership _out3694;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3695;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3693, out _out3694, out _out3695);
                _8425_recursiveGen = _out3693;
                _8426_recOwned = _out3694;
                _8427_recIdents = _out3695;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8425_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8423_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8424_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3696;
                DCOMPUTF16._IOwnership _out3697;
                DCOMPUTF16.COMP.FromOwnership(r, _8426_recOwned, expectedOwnership, out _out3696, out _out3697);
                r = _out3696;
                resultingOwnership = _out3697;
                readIdents = _8427_recIdents;
              }
            } else if (_source305.is_Multiset) {
              DAST._IType _8428___mcc_h52 = _source305.dtor_element;
              {
                RAST._IType _8429_fromTpeGen;
                RAST._IType _out3698;
                _out3698 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8429_fromTpeGen = _out3698;
                RAST._IType _8430_toTpeGen;
                RAST._IType _out3699;
                _out3699 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8430_toTpeGen = _out3699;
                RAST._IExpr _8431_recursiveGen;
                DCOMPUTF16._IOwnership _8432_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8433_recIdents;
                RAST._IExpr _out3700;
                DCOMPUTF16._IOwnership _out3701;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3702;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3700, out _out3701, out _out3702);
                _8431_recursiveGen = _out3700;
                _8432_recOwned = _out3701;
                _8433_recIdents = _out3702;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8431_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8429_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8430_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3703;
                DCOMPUTF16._IOwnership _out3704;
                DCOMPUTF16.COMP.FromOwnership(r, _8432_recOwned, expectedOwnership, out _out3703, out _out3704);
                r = _out3703;
                resultingOwnership = _out3704;
                readIdents = _8433_recIdents;
              }
            } else if (_source305.is_Map) {
              DAST._IType _8434___mcc_h54 = _source305.dtor_key;
              DAST._IType _8435___mcc_h55 = _source305.dtor_value;
              {
                RAST._IType _8436_fromTpeGen;
                RAST._IType _out3705;
                _out3705 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8436_fromTpeGen = _out3705;
                RAST._IType _8437_toTpeGen;
                RAST._IType _out3706;
                _out3706 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8437_toTpeGen = _out3706;
                RAST._IExpr _8438_recursiveGen;
                DCOMPUTF16._IOwnership _8439_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8440_recIdents;
                RAST._IExpr _out3707;
                DCOMPUTF16._IOwnership _out3708;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3709;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3707, out _out3708, out _out3709);
                _8438_recursiveGen = _out3707;
                _8439_recOwned = _out3708;
                _8440_recIdents = _out3709;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8438_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8436_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8437_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3710;
                DCOMPUTF16._IOwnership _out3711;
                DCOMPUTF16.COMP.FromOwnership(r, _8439_recOwned, expectedOwnership, out _out3710, out _out3711);
                r = _out3710;
                resultingOwnership = _out3711;
                readIdents = _8440_recIdents;
              }
            } else if (_source305.is_SetBuilder) {
              DAST._IType _8441___mcc_h58 = _source305.dtor_element;
              {
                RAST._IType _8442_fromTpeGen;
                RAST._IType _out3712;
                _out3712 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8442_fromTpeGen = _out3712;
                RAST._IType _8443_toTpeGen;
                RAST._IType _out3713;
                _out3713 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8443_toTpeGen = _out3713;
                RAST._IExpr _8444_recursiveGen;
                DCOMPUTF16._IOwnership _8445_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8446_recIdents;
                RAST._IExpr _out3714;
                DCOMPUTF16._IOwnership _out3715;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3716;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3714, out _out3715, out _out3716);
                _8444_recursiveGen = _out3714;
                _8445_recOwned = _out3715;
                _8446_recIdents = _out3716;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8444_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8442_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8443_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3717;
                DCOMPUTF16._IOwnership _out3718;
                DCOMPUTF16.COMP.FromOwnership(r, _8445_recOwned, expectedOwnership, out _out3717, out _out3718);
                r = _out3717;
                resultingOwnership = _out3718;
                readIdents = _8446_recIdents;
              }
            } else if (_source305.is_MapBuilder) {
              DAST._IType _8447___mcc_h60 = _source305.dtor_key;
              DAST._IType _8448___mcc_h61 = _source305.dtor_value;
              {
                RAST._IType _8449_fromTpeGen;
                RAST._IType _out3719;
                _out3719 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8449_fromTpeGen = _out3719;
                RAST._IType _8450_toTpeGen;
                RAST._IType _out3720;
                _out3720 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8450_toTpeGen = _out3720;
                RAST._IExpr _8451_recursiveGen;
                DCOMPUTF16._IOwnership _8452_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8453_recIdents;
                RAST._IExpr _out3721;
                DCOMPUTF16._IOwnership _out3722;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3723;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3721, out _out3722, out _out3723);
                _8451_recursiveGen = _out3721;
                _8452_recOwned = _out3722;
                _8453_recIdents = _out3723;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8451_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8449_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8450_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3724;
                DCOMPUTF16._IOwnership _out3725;
                DCOMPUTF16.COMP.FromOwnership(r, _8452_recOwned, expectedOwnership, out _out3724, out _out3725);
                r = _out3724;
                resultingOwnership = _out3725;
                readIdents = _8453_recIdents;
              }
            } else if (_source305.is_Arrow) {
              Dafny.ISequence<DAST._IType> _8454___mcc_h64 = _source305.dtor_args;
              DAST._IType _8455___mcc_h65 = _source305.dtor_result;
              {
                RAST._IType _8456_fromTpeGen;
                RAST._IType _out3726;
                _out3726 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8456_fromTpeGen = _out3726;
                RAST._IType _8457_toTpeGen;
                RAST._IType _out3727;
                _out3727 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8457_toTpeGen = _out3727;
                RAST._IExpr _8458_recursiveGen;
                DCOMPUTF16._IOwnership _8459_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8460_recIdents;
                RAST._IExpr _out3728;
                DCOMPUTF16._IOwnership _out3729;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3730;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3728, out _out3729, out _out3730);
                _8458_recursiveGen = _out3728;
                _8459_recOwned = _out3729;
                _8460_recIdents = _out3730;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8458_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8456_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8457_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3731;
                DCOMPUTF16._IOwnership _out3732;
                DCOMPUTF16.COMP.FromOwnership(r, _8459_recOwned, expectedOwnership, out _out3731, out _out3732);
                r = _out3731;
                resultingOwnership = _out3732;
                readIdents = _8460_recIdents;
              }
            } else if (_source305.is_Primitive) {
              DAST._IPrimitive _8461___mcc_h68 = _source305.dtor_Primitive_a0;
              {
                RAST._IType _8462_fromTpeGen;
                RAST._IType _out3733;
                _out3733 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8462_fromTpeGen = _out3733;
                RAST._IType _8463_toTpeGen;
                RAST._IType _out3734;
                _out3734 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8463_toTpeGen = _out3734;
                RAST._IExpr _8464_recursiveGen;
                DCOMPUTF16._IOwnership _8465_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8466_recIdents;
                RAST._IExpr _out3735;
                DCOMPUTF16._IOwnership _out3736;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3737;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3735, out _out3736, out _out3737);
                _8464_recursiveGen = _out3735;
                _8465_recOwned = _out3736;
                _8466_recIdents = _out3737;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8464_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8462_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8463_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3738;
                DCOMPUTF16._IOwnership _out3739;
                DCOMPUTF16.COMP.FromOwnership(r, _8465_recOwned, expectedOwnership, out _out3738, out _out3739);
                r = _out3738;
                resultingOwnership = _out3739;
                readIdents = _8466_recIdents;
              }
            } else if (_source305.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _8467___mcc_h70 = _source305.dtor_Passthrough_a0;
              {
                RAST._IType _8468_fromTpeGen;
                RAST._IType _out3740;
                _out3740 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8468_fromTpeGen = _out3740;
                RAST._IType _8469_toTpeGen;
                RAST._IType _out3741;
                _out3741 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8469_toTpeGen = _out3741;
                RAST._IExpr _8470_recursiveGen;
                DCOMPUTF16._IOwnership _8471_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8472_recIdents;
                RAST._IExpr _out3742;
                DCOMPUTF16._IOwnership _out3743;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3744;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3742, out _out3743, out _out3744);
                _8470_recursiveGen = _out3742;
                _8471_recOwned = _out3743;
                _8472_recIdents = _out3744;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8470_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8468_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8469_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3745;
                DCOMPUTF16._IOwnership _out3746;
                DCOMPUTF16.COMP.FromOwnership(r, _8471_recOwned, expectedOwnership, out _out3745, out _out3746);
                r = _out3745;
                resultingOwnership = _out3746;
                readIdents = _8472_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8473___mcc_h72 = _source305.dtor_TypeArg_a0;
              {
                RAST._IType _8474_fromTpeGen;
                RAST._IType _out3747;
                _out3747 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8474_fromTpeGen = _out3747;
                RAST._IType _8475_toTpeGen;
                RAST._IType _out3748;
                _out3748 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8475_toTpeGen = _out3748;
                RAST._IExpr _8476_recursiveGen;
                DCOMPUTF16._IOwnership _8477_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8478_recIdents;
                RAST._IExpr _out3749;
                DCOMPUTF16._IOwnership _out3750;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3751;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3749, out _out3750, out _out3751);
                _8476_recursiveGen = _out3749;
                _8477_recOwned = _out3750;
                _8478_recIdents = _out3751;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8476_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8474_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8475_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3752;
                DCOMPUTF16._IOwnership _out3753;
                DCOMPUTF16.COMP.FromOwnership(r, _8477_recOwned, expectedOwnership, out _out3752, out _out3753);
                r = _out3752;
                resultingOwnership = _out3753;
                readIdents = _8478_recIdents;
              }
            }
          } else if (_source304.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8479___mcc_h74 = _source304.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _8480___mcc_h75 = _source304.dtor_attributes;
            DAST._IType _source310 = _8325___mcc_h1;
            if (_source310.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8481___mcc_h82 = _source310.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _8482___mcc_h83 = _source310.dtor_typeArgs;
              DAST._IResolvedType _8483___mcc_h84 = _source310.dtor_resolved;
              DAST._IResolvedType _source311 = _8483___mcc_h84;
              if (_source311.is_Datatype) {
                DAST._IDatatypeType _8484___mcc_h88 = _source311.dtor_datatypeType;
                {
                  RAST._IType _8485_fromTpeGen;
                  RAST._IType _out3754;
                  _out3754 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _8485_fromTpeGen = _out3754;
                  RAST._IType _8486_toTpeGen;
                  RAST._IType _out3755;
                  _out3755 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _8486_toTpeGen = _out3755;
                  RAST._IExpr _8487_recursiveGen;
                  DCOMPUTF16._IOwnership _8488_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8489_recIdents;
                  RAST._IExpr _out3756;
                  DCOMPUTF16._IOwnership _out3757;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3758;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3756, out _out3757, out _out3758);
                  _8487_recursiveGen = _out3756;
                  _8488_recOwned = _out3757;
                  _8489_recIdents = _out3758;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8487_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8485_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8486_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out3759;
                  DCOMPUTF16._IOwnership _out3760;
                  DCOMPUTF16.COMP.FromOwnership(r, _8488_recOwned, expectedOwnership, out _out3759, out _out3760);
                  r = _out3759;
                  resultingOwnership = _out3760;
                  readIdents = _8489_recIdents;
                }
              } else if (_source311.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8490___mcc_h90 = _source311.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _8491___mcc_h91 = _source311.dtor_attributes;
                {
                  RAST._IType _8492_fromTpeGen;
                  RAST._IType _out3761;
                  _out3761 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _8492_fromTpeGen = _out3761;
                  RAST._IType _8493_toTpeGen;
                  RAST._IType _out3762;
                  _out3762 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _8493_toTpeGen = _out3762;
                  RAST._IExpr _8494_recursiveGen;
                  DCOMPUTF16._IOwnership _8495_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8496_recIdents;
                  RAST._IExpr _out3763;
                  DCOMPUTF16._IOwnership _out3764;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3765;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3763, out _out3764, out _out3765);
                  _8494_recursiveGen = _out3763;
                  _8495_recOwned = _out3764;
                  _8496_recIdents = _out3765;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8494_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8492_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8493_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out3766;
                  DCOMPUTF16._IOwnership _out3767;
                  DCOMPUTF16.COMP.FromOwnership(r, _8495_recOwned, expectedOwnership, out _out3766, out _out3767);
                  r = _out3766;
                  resultingOwnership = _out3767;
                  readIdents = _8496_recIdents;
                }
              } else {
                DAST._IType _8497___mcc_h94 = _source311.dtor_baseType;
                DAST._INewtypeRange _8498___mcc_h95 = _source311.dtor_range;
                bool _8499___mcc_h96 = _source311.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _8500___mcc_h97 = _source311.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _8501_attributes = _8500___mcc_h97;
                bool _8502_erase = _8499___mcc_h96;
                DAST._INewtypeRange _8503_range = _8498___mcc_h95;
                DAST._IType _8504_b = _8497___mcc_h94;
                {
                  Std.Wrappers._IOption<RAST._IType> _8505_nativeToType;
                  _8505_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_8504_b, _8503_range);
                  if (object.Equals(_8319_fromTpe, _8504_b)) {
                    RAST._IExpr _8506_recursiveGen;
                    DCOMPUTF16._IOwnership _8507_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8508_recIdents;
                    RAST._IExpr _out3768;
                    DCOMPUTF16._IOwnership _out3769;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3770;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3768, out _out3769, out _out3770);
                    _8506_recursiveGen = _out3768;
                    _8507_recOwned = _out3769;
                    _8508_recIdents = _out3770;
                    readIdents = _8508_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source312 = _8505_nativeToType;
                    if (_source312.is_None) {
                      if (_8502_erase) {
                        r = _8506_recursiveGen;
                      } else {
                        RAST._IType _8509_rhsType;
                        RAST._IType _out3771;
                        _out3771 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                        _8509_rhsType = _out3771;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_8509_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_8506_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out3772;
                      DCOMPUTF16._IOwnership _out3773;
                      DCOMPUTF16.COMP.FromOwnership(r, _8507_recOwned, expectedOwnership, out _out3772, out _out3773);
                      r = _out3772;
                      resultingOwnership = _out3773;
                    } else {
                      RAST._IType _8510___mcc_h1301 = _source312.dtor_value;
                      RAST._IType _8511_v = _8510___mcc_h1301;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8506_recursiveGen, RAST.Expr.create_ExprFromType(_8511_v)));
                      RAST._IExpr _out3774;
                      DCOMPUTF16._IOwnership _out3775;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3774, out _out3775);
                      r = _out3774;
                      resultingOwnership = _out3775;
                    }
                  } else {
                    if ((_8505_nativeToType).is_Some) {
                      DAST._IType _source313 = _8319_fromTpe;
                      if (_source313.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8512___mcc_h1302 = _source313.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _8513___mcc_h1303 = _source313.dtor_typeArgs;
                        DAST._IResolvedType _8514___mcc_h1304 = _source313.dtor_resolved;
                        DAST._IResolvedType _source314 = _8514___mcc_h1304;
                        if (_source314.is_Datatype) {
                          DAST._IDatatypeType _8515___mcc_h1308 = _source314.dtor_datatypeType;
                        } else if (_source314.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8516___mcc_h1310 = _source314.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _8517___mcc_h1311 = _source314.dtor_attributes;
                        } else {
                          DAST._IType _8518___mcc_h1314 = _source314.dtor_baseType;
                          DAST._INewtypeRange _8519___mcc_h1315 = _source314.dtor_range;
                          bool _8520___mcc_h1316 = _source314.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _8521___mcc_h1317 = _source314.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _8522_attributes0 = _8521___mcc_h1317;
                          bool _8523_erase0 = _8520___mcc_h1316;
                          DAST._INewtypeRange _8524_range0 = _8519___mcc_h1315;
                          DAST._IType _8525_b0 = _8518___mcc_h1314;
                          {
                            Std.Wrappers._IOption<RAST._IType> _8526_nativeFromType;
                            _8526_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8525_b0, _8524_range0);
                            if ((_8526_nativeFromType).is_Some) {
                              RAST._IExpr _8527_recursiveGen;
                              DCOMPUTF16._IOwnership _8528_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8529_recIdents;
                              RAST._IExpr _out3776;
                              DCOMPUTF16._IOwnership _out3777;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3778;
                              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3776, out _out3777, out _out3778);
                              _8527_recursiveGen = _out3776;
                              _8528_recOwned = _out3777;
                              _8529_recIdents = _out3778;
                              RAST._IExpr _out3779;
                              DCOMPUTF16._IOwnership _out3780;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_8527_recursiveGen, (_8505_nativeToType).dtor_value), _8528_recOwned, expectedOwnership, out _out3779, out _out3780);
                              r = _out3779;
                              resultingOwnership = _out3780;
                              readIdents = _8529_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source313.is_Nullable) {
                        DAST._IType _8530___mcc_h1322 = _source313.dtor_Nullable_a0;
                      } else if (_source313.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _8531___mcc_h1324 = _source313.dtor_Tuple_a0;
                      } else if (_source313.is_Array) {
                        DAST._IType _8532___mcc_h1326 = _source313.dtor_element;
                        BigInteger _8533___mcc_h1327 = _source313.dtor_dims;
                      } else if (_source313.is_Seq) {
                        DAST._IType _8534___mcc_h1330 = _source313.dtor_element;
                      } else if (_source313.is_Set) {
                        DAST._IType _8535___mcc_h1332 = _source313.dtor_element;
                      } else if (_source313.is_Multiset) {
                        DAST._IType _8536___mcc_h1334 = _source313.dtor_element;
                      } else if (_source313.is_Map) {
                        DAST._IType _8537___mcc_h1336 = _source313.dtor_key;
                        DAST._IType _8538___mcc_h1337 = _source313.dtor_value;
                      } else if (_source313.is_SetBuilder) {
                        DAST._IType _8539___mcc_h1340 = _source313.dtor_element;
                      } else if (_source313.is_MapBuilder) {
                        DAST._IType _8540___mcc_h1342 = _source313.dtor_key;
                        DAST._IType _8541___mcc_h1343 = _source313.dtor_value;
                      } else if (_source313.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _8542___mcc_h1346 = _source313.dtor_args;
                        DAST._IType _8543___mcc_h1347 = _source313.dtor_result;
                      } else if (_source313.is_Primitive) {
                        DAST._IPrimitive _8544___mcc_h1350 = _source313.dtor_Primitive_a0;
                      } else if (_source313.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _8545___mcc_h1352 = _source313.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _8546___mcc_h1354 = _source313.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _8547_recursiveGen;
                        DCOMPUTF16._IOwnership _8548_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8549_recIdents;
                        RAST._IExpr _out3781;
                        DCOMPUTF16._IOwnership _out3782;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3783;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3781, out _out3782, out _out3783);
                        _8547_recursiveGen = _out3781;
                        _8548_recOwned = _out3782;
                        _8549_recIdents = _out3783;
                        RAST._IExpr _out3784;
                        DCOMPUTF16._IOwnership _out3785;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_8547_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_8505_nativeToType).dtor_value), _8548_recOwned, expectedOwnership, out _out3784, out _out3785);
                        r = _out3784;
                        resultingOwnership = _out3785;
                        readIdents = _8549_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out3786;
                    DCOMPUTF16._IOwnership _out3787;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3788;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8504_b), _8504_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out3786, out _out3787, out _out3788);
                    r = _out3786;
                    resultingOwnership = _out3787;
                    readIdents = _out3788;
                  }
                }
              }
            } else if (_source310.is_Nullable) {
              DAST._IType _8550___mcc_h102 = _source310.dtor_Nullable_a0;
              {
                RAST._IExpr _8551_recursiveGen;
                DCOMPUTF16._IOwnership _8552_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8553_recIdents;
                RAST._IExpr _out3789;
                DCOMPUTF16._IOwnership _out3790;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3791;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3789, out _out3790, out _out3791);
                _8551_recursiveGen = _out3789;
                _8552_recOwned = _out3790;
                _8553_recIdents = _out3791;
                r = _8551_recursiveGen;
                if (object.Equals(_8552_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out3792;
                DCOMPUTF16._IOwnership _out3793;
                DCOMPUTF16.COMP.FromOwnership(r, _8552_recOwned, expectedOwnership, out _out3792, out _out3793);
                r = _out3792;
                resultingOwnership = _out3793;
                readIdents = _8553_recIdents;
              }
            } else if (_source310.is_Tuple) {
              Dafny.ISequence<DAST._IType> _8554___mcc_h104 = _source310.dtor_Tuple_a0;
              {
                RAST._IType _8555_fromTpeGen;
                RAST._IType _out3794;
                _out3794 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8555_fromTpeGen = _out3794;
                RAST._IType _8556_toTpeGen;
                RAST._IType _out3795;
                _out3795 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8556_toTpeGen = _out3795;
                RAST._IExpr _8557_recursiveGen;
                DCOMPUTF16._IOwnership _8558_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8559_recIdents;
                RAST._IExpr _out3796;
                DCOMPUTF16._IOwnership _out3797;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3798;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3796, out _out3797, out _out3798);
                _8557_recursiveGen = _out3796;
                _8558_recOwned = _out3797;
                _8559_recIdents = _out3798;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8557_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8555_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8556_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3799;
                DCOMPUTF16._IOwnership _out3800;
                DCOMPUTF16.COMP.FromOwnership(r, _8558_recOwned, expectedOwnership, out _out3799, out _out3800);
                r = _out3799;
                resultingOwnership = _out3800;
                readIdents = _8559_recIdents;
              }
            } else if (_source310.is_Array) {
              DAST._IType _8560___mcc_h106 = _source310.dtor_element;
              BigInteger _8561___mcc_h107 = _source310.dtor_dims;
              {
                RAST._IType _8562_fromTpeGen;
                RAST._IType _out3801;
                _out3801 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8562_fromTpeGen = _out3801;
                RAST._IType _8563_toTpeGen;
                RAST._IType _out3802;
                _out3802 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8563_toTpeGen = _out3802;
                RAST._IExpr _8564_recursiveGen;
                DCOMPUTF16._IOwnership _8565_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8566_recIdents;
                RAST._IExpr _out3803;
                DCOMPUTF16._IOwnership _out3804;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3805;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3803, out _out3804, out _out3805);
                _8564_recursiveGen = _out3803;
                _8565_recOwned = _out3804;
                _8566_recIdents = _out3805;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8564_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8562_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8563_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3806;
                DCOMPUTF16._IOwnership _out3807;
                DCOMPUTF16.COMP.FromOwnership(r, _8565_recOwned, expectedOwnership, out _out3806, out _out3807);
                r = _out3806;
                resultingOwnership = _out3807;
                readIdents = _8566_recIdents;
              }
            } else if (_source310.is_Seq) {
              DAST._IType _8567___mcc_h110 = _source310.dtor_element;
              {
                RAST._IType _8568_fromTpeGen;
                RAST._IType _out3808;
                _out3808 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8568_fromTpeGen = _out3808;
                RAST._IType _8569_toTpeGen;
                RAST._IType _out3809;
                _out3809 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8569_toTpeGen = _out3809;
                RAST._IExpr _8570_recursiveGen;
                DCOMPUTF16._IOwnership _8571_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8572_recIdents;
                RAST._IExpr _out3810;
                DCOMPUTF16._IOwnership _out3811;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3812;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3810, out _out3811, out _out3812);
                _8570_recursiveGen = _out3810;
                _8571_recOwned = _out3811;
                _8572_recIdents = _out3812;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8570_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8568_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8569_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3813;
                DCOMPUTF16._IOwnership _out3814;
                DCOMPUTF16.COMP.FromOwnership(r, _8571_recOwned, expectedOwnership, out _out3813, out _out3814);
                r = _out3813;
                resultingOwnership = _out3814;
                readIdents = _8572_recIdents;
              }
            } else if (_source310.is_Set) {
              DAST._IType _8573___mcc_h112 = _source310.dtor_element;
              {
                RAST._IType _8574_fromTpeGen;
                RAST._IType _out3815;
                _out3815 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8574_fromTpeGen = _out3815;
                RAST._IType _8575_toTpeGen;
                RAST._IType _out3816;
                _out3816 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8575_toTpeGen = _out3816;
                RAST._IExpr _8576_recursiveGen;
                DCOMPUTF16._IOwnership _8577_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8578_recIdents;
                RAST._IExpr _out3817;
                DCOMPUTF16._IOwnership _out3818;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3819;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3817, out _out3818, out _out3819);
                _8576_recursiveGen = _out3817;
                _8577_recOwned = _out3818;
                _8578_recIdents = _out3819;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8576_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8574_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8575_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3820;
                DCOMPUTF16._IOwnership _out3821;
                DCOMPUTF16.COMP.FromOwnership(r, _8577_recOwned, expectedOwnership, out _out3820, out _out3821);
                r = _out3820;
                resultingOwnership = _out3821;
                readIdents = _8578_recIdents;
              }
            } else if (_source310.is_Multiset) {
              DAST._IType _8579___mcc_h114 = _source310.dtor_element;
              {
                RAST._IType _8580_fromTpeGen;
                RAST._IType _out3822;
                _out3822 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8580_fromTpeGen = _out3822;
                RAST._IType _8581_toTpeGen;
                RAST._IType _out3823;
                _out3823 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8581_toTpeGen = _out3823;
                RAST._IExpr _8582_recursiveGen;
                DCOMPUTF16._IOwnership _8583_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8584_recIdents;
                RAST._IExpr _out3824;
                DCOMPUTF16._IOwnership _out3825;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3826;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3824, out _out3825, out _out3826);
                _8582_recursiveGen = _out3824;
                _8583_recOwned = _out3825;
                _8584_recIdents = _out3826;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8582_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8580_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8581_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3827;
                DCOMPUTF16._IOwnership _out3828;
                DCOMPUTF16.COMP.FromOwnership(r, _8583_recOwned, expectedOwnership, out _out3827, out _out3828);
                r = _out3827;
                resultingOwnership = _out3828;
                readIdents = _8584_recIdents;
              }
            } else if (_source310.is_Map) {
              DAST._IType _8585___mcc_h116 = _source310.dtor_key;
              DAST._IType _8586___mcc_h117 = _source310.dtor_value;
              {
                RAST._IType _8587_fromTpeGen;
                RAST._IType _out3829;
                _out3829 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8587_fromTpeGen = _out3829;
                RAST._IType _8588_toTpeGen;
                RAST._IType _out3830;
                _out3830 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8588_toTpeGen = _out3830;
                RAST._IExpr _8589_recursiveGen;
                DCOMPUTF16._IOwnership _8590_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8591_recIdents;
                RAST._IExpr _out3831;
                DCOMPUTF16._IOwnership _out3832;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3833;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3831, out _out3832, out _out3833);
                _8589_recursiveGen = _out3831;
                _8590_recOwned = _out3832;
                _8591_recIdents = _out3833;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8589_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8587_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8588_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3834;
                DCOMPUTF16._IOwnership _out3835;
                DCOMPUTF16.COMP.FromOwnership(r, _8590_recOwned, expectedOwnership, out _out3834, out _out3835);
                r = _out3834;
                resultingOwnership = _out3835;
                readIdents = _8591_recIdents;
              }
            } else if (_source310.is_SetBuilder) {
              DAST._IType _8592___mcc_h120 = _source310.dtor_element;
              {
                RAST._IType _8593_fromTpeGen;
                RAST._IType _out3836;
                _out3836 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8593_fromTpeGen = _out3836;
                RAST._IType _8594_toTpeGen;
                RAST._IType _out3837;
                _out3837 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8594_toTpeGen = _out3837;
                RAST._IExpr _8595_recursiveGen;
                DCOMPUTF16._IOwnership _8596_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8597_recIdents;
                RAST._IExpr _out3838;
                DCOMPUTF16._IOwnership _out3839;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3840;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3838, out _out3839, out _out3840);
                _8595_recursiveGen = _out3838;
                _8596_recOwned = _out3839;
                _8597_recIdents = _out3840;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8595_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8593_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8594_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3841;
                DCOMPUTF16._IOwnership _out3842;
                DCOMPUTF16.COMP.FromOwnership(r, _8596_recOwned, expectedOwnership, out _out3841, out _out3842);
                r = _out3841;
                resultingOwnership = _out3842;
                readIdents = _8597_recIdents;
              }
            } else if (_source310.is_MapBuilder) {
              DAST._IType _8598___mcc_h122 = _source310.dtor_key;
              DAST._IType _8599___mcc_h123 = _source310.dtor_value;
              {
                RAST._IType _8600_fromTpeGen;
                RAST._IType _out3843;
                _out3843 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8600_fromTpeGen = _out3843;
                RAST._IType _8601_toTpeGen;
                RAST._IType _out3844;
                _out3844 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8601_toTpeGen = _out3844;
                RAST._IExpr _8602_recursiveGen;
                DCOMPUTF16._IOwnership _8603_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8604_recIdents;
                RAST._IExpr _out3845;
                DCOMPUTF16._IOwnership _out3846;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3847;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3845, out _out3846, out _out3847);
                _8602_recursiveGen = _out3845;
                _8603_recOwned = _out3846;
                _8604_recIdents = _out3847;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8602_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8600_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8601_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3848;
                DCOMPUTF16._IOwnership _out3849;
                DCOMPUTF16.COMP.FromOwnership(r, _8603_recOwned, expectedOwnership, out _out3848, out _out3849);
                r = _out3848;
                resultingOwnership = _out3849;
                readIdents = _8604_recIdents;
              }
            } else if (_source310.is_Arrow) {
              Dafny.ISequence<DAST._IType> _8605___mcc_h126 = _source310.dtor_args;
              DAST._IType _8606___mcc_h127 = _source310.dtor_result;
              {
                RAST._IType _8607_fromTpeGen;
                RAST._IType _out3850;
                _out3850 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8607_fromTpeGen = _out3850;
                RAST._IType _8608_toTpeGen;
                RAST._IType _out3851;
                _out3851 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8608_toTpeGen = _out3851;
                RAST._IExpr _8609_recursiveGen;
                DCOMPUTF16._IOwnership _8610_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8611_recIdents;
                RAST._IExpr _out3852;
                DCOMPUTF16._IOwnership _out3853;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3854;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3852, out _out3853, out _out3854);
                _8609_recursiveGen = _out3852;
                _8610_recOwned = _out3853;
                _8611_recIdents = _out3854;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8609_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8607_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8608_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3855;
                DCOMPUTF16._IOwnership _out3856;
                DCOMPUTF16.COMP.FromOwnership(r, _8610_recOwned, expectedOwnership, out _out3855, out _out3856);
                r = _out3855;
                resultingOwnership = _out3856;
                readIdents = _8611_recIdents;
              }
            } else if (_source310.is_Primitive) {
              DAST._IPrimitive _8612___mcc_h130 = _source310.dtor_Primitive_a0;
              {
                RAST._IType _8613_fromTpeGen;
                RAST._IType _out3857;
                _out3857 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8613_fromTpeGen = _out3857;
                RAST._IType _8614_toTpeGen;
                RAST._IType _out3858;
                _out3858 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8614_toTpeGen = _out3858;
                RAST._IExpr _8615_recursiveGen;
                DCOMPUTF16._IOwnership _8616_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8617_recIdents;
                RAST._IExpr _out3859;
                DCOMPUTF16._IOwnership _out3860;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3861;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3859, out _out3860, out _out3861);
                _8615_recursiveGen = _out3859;
                _8616_recOwned = _out3860;
                _8617_recIdents = _out3861;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8615_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8613_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8614_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3862;
                DCOMPUTF16._IOwnership _out3863;
                DCOMPUTF16.COMP.FromOwnership(r, _8616_recOwned, expectedOwnership, out _out3862, out _out3863);
                r = _out3862;
                resultingOwnership = _out3863;
                readIdents = _8617_recIdents;
              }
            } else if (_source310.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _8618___mcc_h132 = _source310.dtor_Passthrough_a0;
              {
                RAST._IType _8619_fromTpeGen;
                RAST._IType _out3864;
                _out3864 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8619_fromTpeGen = _out3864;
                RAST._IType _8620_toTpeGen;
                RAST._IType _out3865;
                _out3865 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8620_toTpeGen = _out3865;
                RAST._IExpr _8621_recursiveGen;
                DCOMPUTF16._IOwnership _8622_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8623_recIdents;
                RAST._IExpr _out3866;
                DCOMPUTF16._IOwnership _out3867;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3868;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3866, out _out3867, out _out3868);
                _8621_recursiveGen = _out3866;
                _8622_recOwned = _out3867;
                _8623_recIdents = _out3868;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8621_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8619_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8620_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3869;
                DCOMPUTF16._IOwnership _out3870;
                DCOMPUTF16.COMP.FromOwnership(r, _8622_recOwned, expectedOwnership, out _out3869, out _out3870);
                r = _out3869;
                resultingOwnership = _out3870;
                readIdents = _8623_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8624___mcc_h134 = _source310.dtor_TypeArg_a0;
              {
                RAST._IType _8625_fromTpeGen;
                RAST._IType _out3871;
                _out3871 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8625_fromTpeGen = _out3871;
                RAST._IType _8626_toTpeGen;
                RAST._IType _out3872;
                _out3872 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8626_toTpeGen = _out3872;
                RAST._IExpr _8627_recursiveGen;
                DCOMPUTF16._IOwnership _8628_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8629_recIdents;
                RAST._IExpr _out3873;
                DCOMPUTF16._IOwnership _out3874;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3875;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3873, out _out3874, out _out3875);
                _8627_recursiveGen = _out3873;
                _8628_recOwned = _out3874;
                _8629_recIdents = _out3875;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8627_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8625_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8626_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3876;
                DCOMPUTF16._IOwnership _out3877;
                DCOMPUTF16.COMP.FromOwnership(r, _8628_recOwned, expectedOwnership, out _out3876, out _out3877);
                r = _out3876;
                resultingOwnership = _out3877;
                readIdents = _8629_recIdents;
              }
            }
          } else {
            DAST._IType _8630___mcc_h136 = _source304.dtor_baseType;
            DAST._INewtypeRange _8631___mcc_h137 = _source304.dtor_range;
            bool _8632___mcc_h138 = _source304.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _8633___mcc_h139 = _source304.dtor_attributes;
            DAST._IType _source315 = _8325___mcc_h1;
            if (_source315.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8634___mcc_h152 = _source315.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _8635___mcc_h153 = _source315.dtor_typeArgs;
              DAST._IResolvedType _8636___mcc_h154 = _source315.dtor_resolved;
              DAST._IResolvedType _source316 = _8636___mcc_h154;
              if (_source316.is_Datatype) {
                DAST._IDatatypeType _8637___mcc_h161 = _source316.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _8638_attributes = _8633___mcc_h139;
                bool _8639_erase = _8632___mcc_h138;
                DAST._INewtypeRange _8640_range = _8631___mcc_h137;
                DAST._IType _8641_b = _8630___mcc_h136;
                {
                  Std.Wrappers._IOption<RAST._IType> _8642_nativeFromType;
                  _8642_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8641_b, _8640_range);
                  if (object.Equals(_8641_b, _8320_toTpe)) {
                    RAST._IExpr _8643_recursiveGen;
                    DCOMPUTF16._IOwnership _8644_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8645_recIdents;
                    RAST._IExpr _out3878;
                    DCOMPUTF16._IOwnership _out3879;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3880;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3878, out _out3879, out _out3880);
                    _8643_recursiveGen = _out3878;
                    _8644_recOwned = _out3879;
                    _8645_recIdents = _out3880;
                    readIdents = _8645_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source317 = _8642_nativeFromType;
                    if (_source317.is_None) {
                      if (_8639_erase) {
                        r = _8643_recursiveGen;
                      } else {
                        r = (_8643_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out3881;
                      DCOMPUTF16._IOwnership _out3882;
                      DCOMPUTF16.COMP.FromOwnership(r, _8644_recOwned, expectedOwnership, out _out3881, out _out3882);
                      r = _out3881;
                      resultingOwnership = _out3882;
                    } else {
                      RAST._IType _8646___mcc_h1356 = _source317.dtor_value;
                      RAST._IType _8647_v = _8646___mcc_h1356;
                      RAST._IType _8648_toTpeRust;
                      RAST._IType _out3883;
                      _out3883 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                      _8648_toTpeRust = _out3883;
                      r = (((_8643_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8648_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out3884;
                      DCOMPUTF16._IOwnership _out3885;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3884, out _out3885);
                      r = _out3884;
                      resultingOwnership = _out3885;
                    }
                  } else {
                    if ((_8642_nativeFromType).is_Some) {
                      if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _8649_recursiveGen;
                        DCOMPUTF16._IOwnership _8650_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8651_recIdents;
                        RAST._IExpr _out3886;
                        DCOMPUTF16._IOwnership _out3887;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3888;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3886, out _out3887, out _out3888);
                        _8649_recursiveGen = _out3886;
                        _8650_recOwned = _out3887;
                        _8651_recIdents = _out3888;
                        RAST._IExpr _out3889;
                        DCOMPUTF16._IOwnership _out3890;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8649_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8650_recOwned, expectedOwnership, out _out3889, out _out3890);
                        r = _out3889;
                        resultingOwnership = _out3890;
                        readIdents = _8651_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out3891;
                    DCOMPUTF16._IOwnership _out3892;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3893;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8641_b), _8641_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out3891, out _out3892, out _out3893);
                    r = _out3891;
                    resultingOwnership = _out3892;
                    readIdents = _out3893;
                  }
                }
              } else if (_source316.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8652___mcc_h164 = _source316.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _8653___mcc_h165 = _source316.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _8654_attributes = _8633___mcc_h139;
                bool _8655_erase = _8632___mcc_h138;
                DAST._INewtypeRange _8656_range = _8631___mcc_h137;
                DAST._IType _8657_b = _8630___mcc_h136;
                {
                  Std.Wrappers._IOption<RAST._IType> _8658_nativeFromType;
                  _8658_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8657_b, _8656_range);
                  if (object.Equals(_8657_b, _8320_toTpe)) {
                    RAST._IExpr _8659_recursiveGen;
                    DCOMPUTF16._IOwnership _8660_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8661_recIdents;
                    RAST._IExpr _out3894;
                    DCOMPUTF16._IOwnership _out3895;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3896;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3894, out _out3895, out _out3896);
                    _8659_recursiveGen = _out3894;
                    _8660_recOwned = _out3895;
                    _8661_recIdents = _out3896;
                    readIdents = _8661_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source318 = _8658_nativeFromType;
                    if (_source318.is_None) {
                      if (_8655_erase) {
                        r = _8659_recursiveGen;
                      } else {
                        r = (_8659_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out3897;
                      DCOMPUTF16._IOwnership _out3898;
                      DCOMPUTF16.COMP.FromOwnership(r, _8660_recOwned, expectedOwnership, out _out3897, out _out3898);
                      r = _out3897;
                      resultingOwnership = _out3898;
                    } else {
                      RAST._IType _8662___mcc_h1357 = _source318.dtor_value;
                      RAST._IType _8663_v = _8662___mcc_h1357;
                      RAST._IType _8664_toTpeRust;
                      RAST._IType _out3899;
                      _out3899 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                      _8664_toTpeRust = _out3899;
                      r = (((_8659_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8664_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out3900;
                      DCOMPUTF16._IOwnership _out3901;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3900, out _out3901);
                      r = _out3900;
                      resultingOwnership = _out3901;
                    }
                  } else {
                    if ((_8658_nativeFromType).is_Some) {
                      if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _8665_recursiveGen;
                        DCOMPUTF16._IOwnership _8666_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8667_recIdents;
                        RAST._IExpr _out3902;
                        DCOMPUTF16._IOwnership _out3903;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3904;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3902, out _out3903, out _out3904);
                        _8665_recursiveGen = _out3902;
                        _8666_recOwned = _out3903;
                        _8667_recIdents = _out3904;
                        RAST._IExpr _out3905;
                        DCOMPUTF16._IOwnership _out3906;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8665_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8666_recOwned, expectedOwnership, out _out3905, out _out3906);
                        r = _out3905;
                        resultingOwnership = _out3906;
                        readIdents = _8667_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out3907;
                    DCOMPUTF16._IOwnership _out3908;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3909;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8657_b), _8657_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out3907, out _out3908, out _out3909);
                    r = _out3907;
                    resultingOwnership = _out3908;
                    readIdents = _out3909;
                  }
                }
              } else {
                DAST._IType _8668___mcc_h170 = _source316.dtor_baseType;
                DAST._INewtypeRange _8669___mcc_h171 = _source316.dtor_range;
                bool _8670___mcc_h172 = _source316.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _8671___mcc_h173 = _source316.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _8672_attributes = _8671___mcc_h173;
                bool _8673_erase = _8670___mcc_h172;
                DAST._INewtypeRange _8674_range = _8669___mcc_h171;
                DAST._IType _8675_b = _8668___mcc_h170;
                {
                  Std.Wrappers._IOption<RAST._IType> _8676_nativeToType;
                  _8676_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_8675_b, _8674_range);
                  if (object.Equals(_8319_fromTpe, _8675_b)) {
                    RAST._IExpr _8677_recursiveGen;
                    DCOMPUTF16._IOwnership _8678_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8679_recIdents;
                    RAST._IExpr _out3910;
                    DCOMPUTF16._IOwnership _out3911;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3912;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3910, out _out3911, out _out3912);
                    _8677_recursiveGen = _out3910;
                    _8678_recOwned = _out3911;
                    _8679_recIdents = _out3912;
                    readIdents = _8679_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source319 = _8676_nativeToType;
                    if (_source319.is_None) {
                      if (_8673_erase) {
                        r = _8677_recursiveGen;
                      } else {
                        RAST._IType _8680_rhsType;
                        RAST._IType _out3913;
                        _out3913 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                        _8680_rhsType = _out3913;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_8680_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_8677_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out3914;
                      DCOMPUTF16._IOwnership _out3915;
                      DCOMPUTF16.COMP.FromOwnership(r, _8678_recOwned, expectedOwnership, out _out3914, out _out3915);
                      r = _out3914;
                      resultingOwnership = _out3915;
                    } else {
                      RAST._IType _8681___mcc_h1358 = _source319.dtor_value;
                      RAST._IType _8682_v = _8681___mcc_h1358;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8677_recursiveGen, RAST.Expr.create_ExprFromType(_8682_v)));
                      RAST._IExpr _out3916;
                      DCOMPUTF16._IOwnership _out3917;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3916, out _out3917);
                      r = _out3916;
                      resultingOwnership = _out3917;
                    }
                  } else {
                    if ((_8676_nativeToType).is_Some) {
                      DAST._IType _source320 = _8319_fromTpe;
                      if (_source320.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8683___mcc_h1359 = _source320.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _8684___mcc_h1360 = _source320.dtor_typeArgs;
                        DAST._IResolvedType _8685___mcc_h1361 = _source320.dtor_resolved;
                        DAST._IResolvedType _source321 = _8685___mcc_h1361;
                        if (_source321.is_Datatype) {
                          DAST._IDatatypeType _8686___mcc_h1365 = _source321.dtor_datatypeType;
                        } else if (_source321.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8687___mcc_h1367 = _source321.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _8688___mcc_h1368 = _source321.dtor_attributes;
                        } else {
                          DAST._IType _8689___mcc_h1371 = _source321.dtor_baseType;
                          DAST._INewtypeRange _8690___mcc_h1372 = _source321.dtor_range;
                          bool _8691___mcc_h1373 = _source321.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _8692___mcc_h1374 = _source321.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _8693_attributes0 = _8692___mcc_h1374;
                          bool _8694_erase0 = _8691___mcc_h1373;
                          DAST._INewtypeRange _8695_range0 = _8690___mcc_h1372;
                          DAST._IType _8696_b0 = _8689___mcc_h1371;
                          {
                            Std.Wrappers._IOption<RAST._IType> _8697_nativeFromType;
                            _8697_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8696_b0, _8695_range0);
                            if ((_8697_nativeFromType).is_Some) {
                              RAST._IExpr _8698_recursiveGen;
                              DCOMPUTF16._IOwnership _8699_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8700_recIdents;
                              RAST._IExpr _out3918;
                              DCOMPUTF16._IOwnership _out3919;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3920;
                              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3918, out _out3919, out _out3920);
                              _8698_recursiveGen = _out3918;
                              _8699_recOwned = _out3919;
                              _8700_recIdents = _out3920;
                              RAST._IExpr _out3921;
                              DCOMPUTF16._IOwnership _out3922;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_8698_recursiveGen, (_8676_nativeToType).dtor_value), _8699_recOwned, expectedOwnership, out _out3921, out _out3922);
                              r = _out3921;
                              resultingOwnership = _out3922;
                              readIdents = _8700_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source320.is_Nullable) {
                        DAST._IType _8701___mcc_h1379 = _source320.dtor_Nullable_a0;
                      } else if (_source320.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _8702___mcc_h1381 = _source320.dtor_Tuple_a0;
                      } else if (_source320.is_Array) {
                        DAST._IType _8703___mcc_h1383 = _source320.dtor_element;
                        BigInteger _8704___mcc_h1384 = _source320.dtor_dims;
                      } else if (_source320.is_Seq) {
                        DAST._IType _8705___mcc_h1387 = _source320.dtor_element;
                      } else if (_source320.is_Set) {
                        DAST._IType _8706___mcc_h1389 = _source320.dtor_element;
                      } else if (_source320.is_Multiset) {
                        DAST._IType _8707___mcc_h1391 = _source320.dtor_element;
                      } else if (_source320.is_Map) {
                        DAST._IType _8708___mcc_h1393 = _source320.dtor_key;
                        DAST._IType _8709___mcc_h1394 = _source320.dtor_value;
                      } else if (_source320.is_SetBuilder) {
                        DAST._IType _8710___mcc_h1397 = _source320.dtor_element;
                      } else if (_source320.is_MapBuilder) {
                        DAST._IType _8711___mcc_h1399 = _source320.dtor_key;
                        DAST._IType _8712___mcc_h1400 = _source320.dtor_value;
                      } else if (_source320.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _8713___mcc_h1403 = _source320.dtor_args;
                        DAST._IType _8714___mcc_h1404 = _source320.dtor_result;
                      } else if (_source320.is_Primitive) {
                        DAST._IPrimitive _8715___mcc_h1407 = _source320.dtor_Primitive_a0;
                      } else if (_source320.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _8716___mcc_h1409 = _source320.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _8717___mcc_h1411 = _source320.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _8718_recursiveGen;
                        DCOMPUTF16._IOwnership _8719_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8720_recIdents;
                        RAST._IExpr _out3923;
                        DCOMPUTF16._IOwnership _out3924;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3925;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3923, out _out3924, out _out3925);
                        _8718_recursiveGen = _out3923;
                        _8719_recOwned = _out3924;
                        _8720_recIdents = _out3925;
                        RAST._IExpr _out3926;
                        DCOMPUTF16._IOwnership _out3927;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_8718_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_8676_nativeToType).dtor_value), _8719_recOwned, expectedOwnership, out _out3926, out _out3927);
                        r = _out3926;
                        resultingOwnership = _out3927;
                        readIdents = _8720_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out3928;
                    DCOMPUTF16._IOwnership _out3929;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3930;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8675_b), _8675_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out3928, out _out3929, out _out3930);
                    r = _out3928;
                    resultingOwnership = _out3929;
                    readIdents = _out3930;
                  }
                }
              }
            } else if (_source315.is_Nullable) {
              DAST._IType _8721___mcc_h182 = _source315.dtor_Nullable_a0;
              {
                RAST._IExpr _8722_recursiveGen;
                DCOMPUTF16._IOwnership _8723_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8724_recIdents;
                RAST._IExpr _out3931;
                DCOMPUTF16._IOwnership _out3932;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3933;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3931, out _out3932, out _out3933);
                _8722_recursiveGen = _out3931;
                _8723_recOwned = _out3932;
                _8724_recIdents = _out3933;
                r = _8722_recursiveGen;
                if (object.Equals(_8723_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out3934;
                DCOMPUTF16._IOwnership _out3935;
                DCOMPUTF16.COMP.FromOwnership(r, _8723_recOwned, expectedOwnership, out _out3934, out _out3935);
                r = _out3934;
                resultingOwnership = _out3935;
                readIdents = _8724_recIdents;
              }
            } else if (_source315.is_Tuple) {
              Dafny.ISequence<DAST._IType> _8725___mcc_h185 = _source315.dtor_Tuple_a0;
              Dafny.ISequence<DAST._IAttribute> _8726_attributes = _8633___mcc_h139;
              bool _8727_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8728_range = _8631___mcc_h137;
              DAST._IType _8729_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8730_nativeFromType;
                _8730_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8729_b, _8728_range);
                if (object.Equals(_8729_b, _8320_toTpe)) {
                  RAST._IExpr _8731_recursiveGen;
                  DCOMPUTF16._IOwnership _8732_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8733_recIdents;
                  RAST._IExpr _out3936;
                  DCOMPUTF16._IOwnership _out3937;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3938;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3936, out _out3937, out _out3938);
                  _8731_recursiveGen = _out3936;
                  _8732_recOwned = _out3937;
                  _8733_recIdents = _out3938;
                  readIdents = _8733_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source322 = _8730_nativeFromType;
                  if (_source322.is_None) {
                    if (_8727_erase) {
                      r = _8731_recursiveGen;
                    } else {
                      r = (_8731_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out3939;
                    DCOMPUTF16._IOwnership _out3940;
                    DCOMPUTF16.COMP.FromOwnership(r, _8732_recOwned, expectedOwnership, out _out3939, out _out3940);
                    r = _out3939;
                    resultingOwnership = _out3940;
                  } else {
                    RAST._IType _8734___mcc_h1413 = _source322.dtor_value;
                    RAST._IType _8735_v = _8734___mcc_h1413;
                    RAST._IType _8736_toTpeRust;
                    RAST._IType _out3941;
                    _out3941 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8736_toTpeRust = _out3941;
                    r = (((_8731_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8736_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out3942;
                    DCOMPUTF16._IOwnership _out3943;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3942, out _out3943);
                    r = _out3942;
                    resultingOwnership = _out3943;
                  }
                } else {
                  if ((_8730_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8737_recursiveGen;
                      DCOMPUTF16._IOwnership _8738_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8739_recIdents;
                      RAST._IExpr _out3944;
                      DCOMPUTF16._IOwnership _out3945;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3946;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3944, out _out3945, out _out3946);
                      _8737_recursiveGen = _out3944;
                      _8738_recOwned = _out3945;
                      _8739_recIdents = _out3946;
                      RAST._IExpr _out3947;
                      DCOMPUTF16._IOwnership _out3948;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8737_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8738_recOwned, expectedOwnership, out _out3947, out _out3948);
                      r = _out3947;
                      resultingOwnership = _out3948;
                      readIdents = _8739_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out3949;
                  DCOMPUTF16._IOwnership _out3950;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3951;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8729_b), _8729_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out3949, out _out3950, out _out3951);
                  r = _out3949;
                  resultingOwnership = _out3950;
                  readIdents = _out3951;
                }
              }
            } else if (_source315.is_Array) {
              DAST._IType _8740___mcc_h188 = _source315.dtor_element;
              BigInteger _8741___mcc_h189 = _source315.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _8742_attributes = _8633___mcc_h139;
              bool _8743_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8744_range = _8631___mcc_h137;
              DAST._IType _8745_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8746_nativeFromType;
                _8746_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8745_b, _8744_range);
                if (object.Equals(_8745_b, _8320_toTpe)) {
                  RAST._IExpr _8747_recursiveGen;
                  DCOMPUTF16._IOwnership _8748_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8749_recIdents;
                  RAST._IExpr _out3952;
                  DCOMPUTF16._IOwnership _out3953;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3954;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3952, out _out3953, out _out3954);
                  _8747_recursiveGen = _out3952;
                  _8748_recOwned = _out3953;
                  _8749_recIdents = _out3954;
                  readIdents = _8749_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source323 = _8746_nativeFromType;
                  if (_source323.is_None) {
                    if (_8743_erase) {
                      r = _8747_recursiveGen;
                    } else {
                      r = (_8747_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out3955;
                    DCOMPUTF16._IOwnership _out3956;
                    DCOMPUTF16.COMP.FromOwnership(r, _8748_recOwned, expectedOwnership, out _out3955, out _out3956);
                    r = _out3955;
                    resultingOwnership = _out3956;
                  } else {
                    RAST._IType _8750___mcc_h1414 = _source323.dtor_value;
                    RAST._IType _8751_v = _8750___mcc_h1414;
                    RAST._IType _8752_toTpeRust;
                    RAST._IType _out3957;
                    _out3957 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8752_toTpeRust = _out3957;
                    r = (((_8747_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8752_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out3958;
                    DCOMPUTF16._IOwnership _out3959;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3958, out _out3959);
                    r = _out3958;
                    resultingOwnership = _out3959;
                  }
                } else {
                  if ((_8746_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8753_recursiveGen;
                      DCOMPUTF16._IOwnership _8754_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8755_recIdents;
                      RAST._IExpr _out3960;
                      DCOMPUTF16._IOwnership _out3961;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3962;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3960, out _out3961, out _out3962);
                      _8753_recursiveGen = _out3960;
                      _8754_recOwned = _out3961;
                      _8755_recIdents = _out3962;
                      RAST._IExpr _out3963;
                      DCOMPUTF16._IOwnership _out3964;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8753_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8754_recOwned, expectedOwnership, out _out3963, out _out3964);
                      r = _out3963;
                      resultingOwnership = _out3964;
                      readIdents = _8755_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out3965;
                  DCOMPUTF16._IOwnership _out3966;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3967;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8745_b), _8745_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out3965, out _out3966, out _out3967);
                  r = _out3965;
                  resultingOwnership = _out3966;
                  readIdents = _out3967;
                }
              }
            } else if (_source315.is_Seq) {
              DAST._IType _8756___mcc_h194 = _source315.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _8757_attributes = _8633___mcc_h139;
              bool _8758_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8759_range = _8631___mcc_h137;
              DAST._IType _8760_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8761_nativeFromType;
                _8761_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8760_b, _8759_range);
                if (object.Equals(_8760_b, _8320_toTpe)) {
                  RAST._IExpr _8762_recursiveGen;
                  DCOMPUTF16._IOwnership _8763_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8764_recIdents;
                  RAST._IExpr _out3968;
                  DCOMPUTF16._IOwnership _out3969;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3970;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3968, out _out3969, out _out3970);
                  _8762_recursiveGen = _out3968;
                  _8763_recOwned = _out3969;
                  _8764_recIdents = _out3970;
                  readIdents = _8764_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source324 = _8761_nativeFromType;
                  if (_source324.is_None) {
                    if (_8758_erase) {
                      r = _8762_recursiveGen;
                    } else {
                      r = (_8762_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out3971;
                    DCOMPUTF16._IOwnership _out3972;
                    DCOMPUTF16.COMP.FromOwnership(r, _8763_recOwned, expectedOwnership, out _out3971, out _out3972);
                    r = _out3971;
                    resultingOwnership = _out3972;
                  } else {
                    RAST._IType _8765___mcc_h1415 = _source324.dtor_value;
                    RAST._IType _8766_v = _8765___mcc_h1415;
                    RAST._IType _8767_toTpeRust;
                    RAST._IType _out3973;
                    _out3973 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8767_toTpeRust = _out3973;
                    r = (((_8762_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8767_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out3974;
                    DCOMPUTF16._IOwnership _out3975;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3974, out _out3975);
                    r = _out3974;
                    resultingOwnership = _out3975;
                  }
                } else {
                  if ((_8761_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8768_recursiveGen;
                      DCOMPUTF16._IOwnership _8769_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8770_recIdents;
                      RAST._IExpr _out3976;
                      DCOMPUTF16._IOwnership _out3977;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3978;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3976, out _out3977, out _out3978);
                      _8768_recursiveGen = _out3976;
                      _8769_recOwned = _out3977;
                      _8770_recIdents = _out3978;
                      RAST._IExpr _out3979;
                      DCOMPUTF16._IOwnership _out3980;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8768_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8769_recOwned, expectedOwnership, out _out3979, out _out3980);
                      r = _out3979;
                      resultingOwnership = _out3980;
                      readIdents = _8770_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out3981;
                  DCOMPUTF16._IOwnership _out3982;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3983;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8760_b), _8760_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out3981, out _out3982, out _out3983);
                  r = _out3981;
                  resultingOwnership = _out3982;
                  readIdents = _out3983;
                }
              }
            } else if (_source315.is_Set) {
              DAST._IType _8771___mcc_h197 = _source315.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _8772_attributes = _8633___mcc_h139;
              bool _8773_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8774_range = _8631___mcc_h137;
              DAST._IType _8775_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8776_nativeFromType;
                _8776_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8775_b, _8774_range);
                if (object.Equals(_8775_b, _8320_toTpe)) {
                  RAST._IExpr _8777_recursiveGen;
                  DCOMPUTF16._IOwnership _8778_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8779_recIdents;
                  RAST._IExpr _out3984;
                  DCOMPUTF16._IOwnership _out3985;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3986;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3984, out _out3985, out _out3986);
                  _8777_recursiveGen = _out3984;
                  _8778_recOwned = _out3985;
                  _8779_recIdents = _out3986;
                  readIdents = _8779_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source325 = _8776_nativeFromType;
                  if (_source325.is_None) {
                    if (_8773_erase) {
                      r = _8777_recursiveGen;
                    } else {
                      r = (_8777_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out3987;
                    DCOMPUTF16._IOwnership _out3988;
                    DCOMPUTF16.COMP.FromOwnership(r, _8778_recOwned, expectedOwnership, out _out3987, out _out3988);
                    r = _out3987;
                    resultingOwnership = _out3988;
                  } else {
                    RAST._IType _8780___mcc_h1416 = _source325.dtor_value;
                    RAST._IType _8781_v = _8780___mcc_h1416;
                    RAST._IType _8782_toTpeRust;
                    RAST._IType _out3989;
                    _out3989 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8782_toTpeRust = _out3989;
                    r = (((_8777_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8782_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out3990;
                    DCOMPUTF16._IOwnership _out3991;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3990, out _out3991);
                    r = _out3990;
                    resultingOwnership = _out3991;
                  }
                } else {
                  if ((_8776_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8783_recursiveGen;
                      DCOMPUTF16._IOwnership _8784_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8785_recIdents;
                      RAST._IExpr _out3992;
                      DCOMPUTF16._IOwnership _out3993;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3994;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out3992, out _out3993, out _out3994);
                      _8783_recursiveGen = _out3992;
                      _8784_recOwned = _out3993;
                      _8785_recIdents = _out3994;
                      RAST._IExpr _out3995;
                      DCOMPUTF16._IOwnership _out3996;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8783_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8784_recOwned, expectedOwnership, out _out3995, out _out3996);
                      r = _out3995;
                      resultingOwnership = _out3996;
                      readIdents = _8785_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out3997;
                  DCOMPUTF16._IOwnership _out3998;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3999;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8775_b), _8775_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out3997, out _out3998, out _out3999);
                  r = _out3997;
                  resultingOwnership = _out3998;
                  readIdents = _out3999;
                }
              }
            } else if (_source315.is_Multiset) {
              DAST._IType _8786___mcc_h200 = _source315.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _8787_attributes = _8633___mcc_h139;
              bool _8788_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8789_range = _8631___mcc_h137;
              DAST._IType _8790_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8791_nativeFromType;
                _8791_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8790_b, _8789_range);
                if (object.Equals(_8790_b, _8320_toTpe)) {
                  RAST._IExpr _8792_recursiveGen;
                  DCOMPUTF16._IOwnership _8793_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8794_recIdents;
                  RAST._IExpr _out4000;
                  DCOMPUTF16._IOwnership _out4001;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4002;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4000, out _out4001, out _out4002);
                  _8792_recursiveGen = _out4000;
                  _8793_recOwned = _out4001;
                  _8794_recIdents = _out4002;
                  readIdents = _8794_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source326 = _8791_nativeFromType;
                  if (_source326.is_None) {
                    if (_8788_erase) {
                      r = _8792_recursiveGen;
                    } else {
                      r = (_8792_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4003;
                    DCOMPUTF16._IOwnership _out4004;
                    DCOMPUTF16.COMP.FromOwnership(r, _8793_recOwned, expectedOwnership, out _out4003, out _out4004);
                    r = _out4003;
                    resultingOwnership = _out4004;
                  } else {
                    RAST._IType _8795___mcc_h1417 = _source326.dtor_value;
                    RAST._IType _8796_v = _8795___mcc_h1417;
                    RAST._IType _8797_toTpeRust;
                    RAST._IType _out4005;
                    _out4005 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8797_toTpeRust = _out4005;
                    r = (((_8792_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8797_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4006;
                    DCOMPUTF16._IOwnership _out4007;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4006, out _out4007);
                    r = _out4006;
                    resultingOwnership = _out4007;
                  }
                } else {
                  if ((_8791_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8798_recursiveGen;
                      DCOMPUTF16._IOwnership _8799_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8800_recIdents;
                      RAST._IExpr _out4008;
                      DCOMPUTF16._IOwnership _out4009;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4010;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4008, out _out4009, out _out4010);
                      _8798_recursiveGen = _out4008;
                      _8799_recOwned = _out4009;
                      _8800_recIdents = _out4010;
                      RAST._IExpr _out4011;
                      DCOMPUTF16._IOwnership _out4012;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8798_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8799_recOwned, expectedOwnership, out _out4011, out _out4012);
                      r = _out4011;
                      resultingOwnership = _out4012;
                      readIdents = _8800_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4013;
                  DCOMPUTF16._IOwnership _out4014;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4015;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8790_b), _8790_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4013, out _out4014, out _out4015);
                  r = _out4013;
                  resultingOwnership = _out4014;
                  readIdents = _out4015;
                }
              }
            } else if (_source315.is_Map) {
              DAST._IType _8801___mcc_h203 = _source315.dtor_key;
              DAST._IType _8802___mcc_h204 = _source315.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _8803_attributes = _8633___mcc_h139;
              bool _8804_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8805_range = _8631___mcc_h137;
              DAST._IType _8806_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8807_nativeFromType;
                _8807_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8806_b, _8805_range);
                if (object.Equals(_8806_b, _8320_toTpe)) {
                  RAST._IExpr _8808_recursiveGen;
                  DCOMPUTF16._IOwnership _8809_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8810_recIdents;
                  RAST._IExpr _out4016;
                  DCOMPUTF16._IOwnership _out4017;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4018;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4016, out _out4017, out _out4018);
                  _8808_recursiveGen = _out4016;
                  _8809_recOwned = _out4017;
                  _8810_recIdents = _out4018;
                  readIdents = _8810_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source327 = _8807_nativeFromType;
                  if (_source327.is_None) {
                    if (_8804_erase) {
                      r = _8808_recursiveGen;
                    } else {
                      r = (_8808_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4019;
                    DCOMPUTF16._IOwnership _out4020;
                    DCOMPUTF16.COMP.FromOwnership(r, _8809_recOwned, expectedOwnership, out _out4019, out _out4020);
                    r = _out4019;
                    resultingOwnership = _out4020;
                  } else {
                    RAST._IType _8811___mcc_h1418 = _source327.dtor_value;
                    RAST._IType _8812_v = _8811___mcc_h1418;
                    RAST._IType _8813_toTpeRust;
                    RAST._IType _out4021;
                    _out4021 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8813_toTpeRust = _out4021;
                    r = (((_8808_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8813_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4022;
                    DCOMPUTF16._IOwnership _out4023;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4022, out _out4023);
                    r = _out4022;
                    resultingOwnership = _out4023;
                  }
                } else {
                  if ((_8807_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8814_recursiveGen;
                      DCOMPUTF16._IOwnership _8815_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8816_recIdents;
                      RAST._IExpr _out4024;
                      DCOMPUTF16._IOwnership _out4025;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4026;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4024, out _out4025, out _out4026);
                      _8814_recursiveGen = _out4024;
                      _8815_recOwned = _out4025;
                      _8816_recIdents = _out4026;
                      RAST._IExpr _out4027;
                      DCOMPUTF16._IOwnership _out4028;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8814_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8815_recOwned, expectedOwnership, out _out4027, out _out4028);
                      r = _out4027;
                      resultingOwnership = _out4028;
                      readIdents = _8816_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4029;
                  DCOMPUTF16._IOwnership _out4030;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4031;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8806_b), _8806_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4029, out _out4030, out _out4031);
                  r = _out4029;
                  resultingOwnership = _out4030;
                  readIdents = _out4031;
                }
              }
            } else if (_source315.is_SetBuilder) {
              DAST._IType _8817___mcc_h209 = _source315.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _8818_attributes = _8633___mcc_h139;
              bool _8819_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8820_range = _8631___mcc_h137;
              DAST._IType _8821_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8822_nativeFromType;
                _8822_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8821_b, _8820_range);
                if (object.Equals(_8821_b, _8320_toTpe)) {
                  RAST._IExpr _8823_recursiveGen;
                  DCOMPUTF16._IOwnership _8824_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8825_recIdents;
                  RAST._IExpr _out4032;
                  DCOMPUTF16._IOwnership _out4033;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4034;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4032, out _out4033, out _out4034);
                  _8823_recursiveGen = _out4032;
                  _8824_recOwned = _out4033;
                  _8825_recIdents = _out4034;
                  readIdents = _8825_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source328 = _8822_nativeFromType;
                  if (_source328.is_None) {
                    if (_8819_erase) {
                      r = _8823_recursiveGen;
                    } else {
                      r = (_8823_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4035;
                    DCOMPUTF16._IOwnership _out4036;
                    DCOMPUTF16.COMP.FromOwnership(r, _8824_recOwned, expectedOwnership, out _out4035, out _out4036);
                    r = _out4035;
                    resultingOwnership = _out4036;
                  } else {
                    RAST._IType _8826___mcc_h1419 = _source328.dtor_value;
                    RAST._IType _8827_v = _8826___mcc_h1419;
                    RAST._IType _8828_toTpeRust;
                    RAST._IType _out4037;
                    _out4037 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8828_toTpeRust = _out4037;
                    r = (((_8823_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8828_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4038;
                    DCOMPUTF16._IOwnership _out4039;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4038, out _out4039);
                    r = _out4038;
                    resultingOwnership = _out4039;
                  }
                } else {
                  if ((_8822_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8829_recursiveGen;
                      DCOMPUTF16._IOwnership _8830_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8831_recIdents;
                      RAST._IExpr _out4040;
                      DCOMPUTF16._IOwnership _out4041;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4042;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4040, out _out4041, out _out4042);
                      _8829_recursiveGen = _out4040;
                      _8830_recOwned = _out4041;
                      _8831_recIdents = _out4042;
                      RAST._IExpr _out4043;
                      DCOMPUTF16._IOwnership _out4044;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8829_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8830_recOwned, expectedOwnership, out _out4043, out _out4044);
                      r = _out4043;
                      resultingOwnership = _out4044;
                      readIdents = _8831_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4045;
                  DCOMPUTF16._IOwnership _out4046;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4047;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8821_b), _8821_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4045, out _out4046, out _out4047);
                  r = _out4045;
                  resultingOwnership = _out4046;
                  readIdents = _out4047;
                }
              }
            } else if (_source315.is_MapBuilder) {
              DAST._IType _8832___mcc_h212 = _source315.dtor_key;
              DAST._IType _8833___mcc_h213 = _source315.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _8834_attributes = _8633___mcc_h139;
              bool _8835_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8836_range = _8631___mcc_h137;
              DAST._IType _8837_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8838_nativeFromType;
                _8838_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8837_b, _8836_range);
                if (object.Equals(_8837_b, _8320_toTpe)) {
                  RAST._IExpr _8839_recursiveGen;
                  DCOMPUTF16._IOwnership _8840_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8841_recIdents;
                  RAST._IExpr _out4048;
                  DCOMPUTF16._IOwnership _out4049;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4050;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4048, out _out4049, out _out4050);
                  _8839_recursiveGen = _out4048;
                  _8840_recOwned = _out4049;
                  _8841_recIdents = _out4050;
                  readIdents = _8841_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source329 = _8838_nativeFromType;
                  if (_source329.is_None) {
                    if (_8835_erase) {
                      r = _8839_recursiveGen;
                    } else {
                      r = (_8839_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4051;
                    DCOMPUTF16._IOwnership _out4052;
                    DCOMPUTF16.COMP.FromOwnership(r, _8840_recOwned, expectedOwnership, out _out4051, out _out4052);
                    r = _out4051;
                    resultingOwnership = _out4052;
                  } else {
                    RAST._IType _8842___mcc_h1420 = _source329.dtor_value;
                    RAST._IType _8843_v = _8842___mcc_h1420;
                    RAST._IType _8844_toTpeRust;
                    RAST._IType _out4053;
                    _out4053 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8844_toTpeRust = _out4053;
                    r = (((_8839_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8844_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4054;
                    DCOMPUTF16._IOwnership _out4055;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4054, out _out4055);
                    r = _out4054;
                    resultingOwnership = _out4055;
                  }
                } else {
                  if ((_8838_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8845_recursiveGen;
                      DCOMPUTF16._IOwnership _8846_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8847_recIdents;
                      RAST._IExpr _out4056;
                      DCOMPUTF16._IOwnership _out4057;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4058;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4056, out _out4057, out _out4058);
                      _8845_recursiveGen = _out4056;
                      _8846_recOwned = _out4057;
                      _8847_recIdents = _out4058;
                      RAST._IExpr _out4059;
                      DCOMPUTF16._IOwnership _out4060;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8845_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8846_recOwned, expectedOwnership, out _out4059, out _out4060);
                      r = _out4059;
                      resultingOwnership = _out4060;
                      readIdents = _8847_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4061;
                  DCOMPUTF16._IOwnership _out4062;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4063;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8837_b), _8837_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4061, out _out4062, out _out4063);
                  r = _out4061;
                  resultingOwnership = _out4062;
                  readIdents = _out4063;
                }
              }
            } else if (_source315.is_Arrow) {
              Dafny.ISequence<DAST._IType> _8848___mcc_h218 = _source315.dtor_args;
              DAST._IType _8849___mcc_h219 = _source315.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _8850_attributes = _8633___mcc_h139;
              bool _8851_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8852_range = _8631___mcc_h137;
              DAST._IType _8853_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8854_nativeFromType;
                _8854_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8853_b, _8852_range);
                if (object.Equals(_8853_b, _8320_toTpe)) {
                  RAST._IExpr _8855_recursiveGen;
                  DCOMPUTF16._IOwnership _8856_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8857_recIdents;
                  RAST._IExpr _out4064;
                  DCOMPUTF16._IOwnership _out4065;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4066;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4064, out _out4065, out _out4066);
                  _8855_recursiveGen = _out4064;
                  _8856_recOwned = _out4065;
                  _8857_recIdents = _out4066;
                  readIdents = _8857_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source330 = _8854_nativeFromType;
                  if (_source330.is_None) {
                    if (_8851_erase) {
                      r = _8855_recursiveGen;
                    } else {
                      r = (_8855_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4067;
                    DCOMPUTF16._IOwnership _out4068;
                    DCOMPUTF16.COMP.FromOwnership(r, _8856_recOwned, expectedOwnership, out _out4067, out _out4068);
                    r = _out4067;
                    resultingOwnership = _out4068;
                  } else {
                    RAST._IType _8858___mcc_h1421 = _source330.dtor_value;
                    RAST._IType _8859_v = _8858___mcc_h1421;
                    RAST._IType _8860_toTpeRust;
                    RAST._IType _out4069;
                    _out4069 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8860_toTpeRust = _out4069;
                    r = (((_8855_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8860_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4070;
                    DCOMPUTF16._IOwnership _out4071;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4070, out _out4071);
                    r = _out4070;
                    resultingOwnership = _out4071;
                  }
                } else {
                  if ((_8854_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8861_recursiveGen;
                      DCOMPUTF16._IOwnership _8862_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8863_recIdents;
                      RAST._IExpr _out4072;
                      DCOMPUTF16._IOwnership _out4073;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4074;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4072, out _out4073, out _out4074);
                      _8861_recursiveGen = _out4072;
                      _8862_recOwned = _out4073;
                      _8863_recIdents = _out4074;
                      RAST._IExpr _out4075;
                      DCOMPUTF16._IOwnership _out4076;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8861_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8862_recOwned, expectedOwnership, out _out4075, out _out4076);
                      r = _out4075;
                      resultingOwnership = _out4076;
                      readIdents = _8863_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4077;
                  DCOMPUTF16._IOwnership _out4078;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4079;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8853_b), _8853_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4077, out _out4078, out _out4079);
                  r = _out4077;
                  resultingOwnership = _out4078;
                  readIdents = _out4079;
                }
              }
            } else if (_source315.is_Primitive) {
              DAST._IPrimitive _8864___mcc_h224 = _source315.dtor_Primitive_a0;
              Dafny.ISequence<DAST._IAttribute> _8865_attributes = _8633___mcc_h139;
              bool _8866_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8867_range = _8631___mcc_h137;
              DAST._IType _8868_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8869_nativeFromType;
                _8869_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8868_b, _8867_range);
                if (object.Equals(_8868_b, _8320_toTpe)) {
                  RAST._IExpr _8870_recursiveGen;
                  DCOMPUTF16._IOwnership _8871_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8872_recIdents;
                  RAST._IExpr _out4080;
                  DCOMPUTF16._IOwnership _out4081;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4082;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4080, out _out4081, out _out4082);
                  _8870_recursiveGen = _out4080;
                  _8871_recOwned = _out4081;
                  _8872_recIdents = _out4082;
                  readIdents = _8872_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source331 = _8869_nativeFromType;
                  if (_source331.is_None) {
                    if (_8866_erase) {
                      r = _8870_recursiveGen;
                    } else {
                      r = (_8870_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4083;
                    DCOMPUTF16._IOwnership _out4084;
                    DCOMPUTF16.COMP.FromOwnership(r, _8871_recOwned, expectedOwnership, out _out4083, out _out4084);
                    r = _out4083;
                    resultingOwnership = _out4084;
                  } else {
                    RAST._IType _8873___mcc_h1422 = _source331.dtor_value;
                    RAST._IType _8874_v = _8873___mcc_h1422;
                    RAST._IType _8875_toTpeRust;
                    RAST._IType _out4085;
                    _out4085 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8875_toTpeRust = _out4085;
                    r = (((_8870_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8875_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4086;
                    DCOMPUTF16._IOwnership _out4087;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4086, out _out4087);
                    r = _out4086;
                    resultingOwnership = _out4087;
                  }
                } else {
                  if ((_8869_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8876_recursiveGen;
                      DCOMPUTF16._IOwnership _8877_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8878_recIdents;
                      RAST._IExpr _out4088;
                      DCOMPUTF16._IOwnership _out4089;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4090;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4088, out _out4089, out _out4090);
                      _8876_recursiveGen = _out4088;
                      _8877_recOwned = _out4089;
                      _8878_recIdents = _out4090;
                      RAST._IExpr _out4091;
                      DCOMPUTF16._IOwnership _out4092;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8876_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8877_recOwned, expectedOwnership, out _out4091, out _out4092);
                      r = _out4091;
                      resultingOwnership = _out4092;
                      readIdents = _8878_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4093;
                  DCOMPUTF16._IOwnership _out4094;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4095;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8868_b), _8868_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4093, out _out4094, out _out4095);
                  r = _out4093;
                  resultingOwnership = _out4094;
                  readIdents = _out4095;
                }
              }
            } else if (_source315.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _8879___mcc_h227 = _source315.dtor_Passthrough_a0;
              Dafny.ISequence<DAST._IAttribute> _8880_attributes = _8633___mcc_h139;
              bool _8881_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8882_range = _8631___mcc_h137;
              DAST._IType _8883_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8884_nativeFromType;
                _8884_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8883_b, _8882_range);
                if (object.Equals(_8883_b, _8320_toTpe)) {
                  RAST._IExpr _8885_recursiveGen;
                  DCOMPUTF16._IOwnership _8886_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8887_recIdents;
                  RAST._IExpr _out4096;
                  DCOMPUTF16._IOwnership _out4097;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4098;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4096, out _out4097, out _out4098);
                  _8885_recursiveGen = _out4096;
                  _8886_recOwned = _out4097;
                  _8887_recIdents = _out4098;
                  readIdents = _8887_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source332 = _8884_nativeFromType;
                  if (_source332.is_None) {
                    if (_8881_erase) {
                      r = _8885_recursiveGen;
                    } else {
                      r = (_8885_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4099;
                    DCOMPUTF16._IOwnership _out4100;
                    DCOMPUTF16.COMP.FromOwnership(r, _8886_recOwned, expectedOwnership, out _out4099, out _out4100);
                    r = _out4099;
                    resultingOwnership = _out4100;
                  } else {
                    RAST._IType _8888___mcc_h1423 = _source332.dtor_value;
                    RAST._IType _8889_v = _8888___mcc_h1423;
                    RAST._IType _8890_toTpeRust;
                    RAST._IType _out4101;
                    _out4101 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8890_toTpeRust = _out4101;
                    r = (((_8885_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8890_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4102;
                    DCOMPUTF16._IOwnership _out4103;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4102, out _out4103);
                    r = _out4102;
                    resultingOwnership = _out4103;
                  }
                } else {
                  if ((_8884_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8891_recursiveGen;
                      DCOMPUTF16._IOwnership _8892_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8893_recIdents;
                      RAST._IExpr _out4104;
                      DCOMPUTF16._IOwnership _out4105;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4106;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4104, out _out4105, out _out4106);
                      _8891_recursiveGen = _out4104;
                      _8892_recOwned = _out4105;
                      _8893_recIdents = _out4106;
                      RAST._IExpr _out4107;
                      DCOMPUTF16._IOwnership _out4108;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8891_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8892_recOwned, expectedOwnership, out _out4107, out _out4108);
                      r = _out4107;
                      resultingOwnership = _out4108;
                      readIdents = _8893_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4109;
                  DCOMPUTF16._IOwnership _out4110;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4111;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8883_b), _8883_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4109, out _out4110, out _out4111);
                  r = _out4109;
                  resultingOwnership = _out4110;
                  readIdents = _out4111;
                }
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8894___mcc_h230 = _source315.dtor_TypeArg_a0;
              Dafny.ISequence<DAST._IAttribute> _8895_attributes = _8633___mcc_h139;
              bool _8896_erase = _8632___mcc_h138;
              DAST._INewtypeRange _8897_range = _8631___mcc_h137;
              DAST._IType _8898_b = _8630___mcc_h136;
              {
                Std.Wrappers._IOption<RAST._IType> _8899_nativeFromType;
                _8899_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8898_b, _8897_range);
                if (object.Equals(_8898_b, _8320_toTpe)) {
                  RAST._IExpr _8900_recursiveGen;
                  DCOMPUTF16._IOwnership _8901_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8902_recIdents;
                  RAST._IExpr _out4112;
                  DCOMPUTF16._IOwnership _out4113;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4114;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4112, out _out4113, out _out4114);
                  _8900_recursiveGen = _out4112;
                  _8901_recOwned = _out4113;
                  _8902_recIdents = _out4114;
                  readIdents = _8902_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source333 = _8899_nativeFromType;
                  if (_source333.is_None) {
                    if (_8896_erase) {
                      r = _8900_recursiveGen;
                    } else {
                      r = (_8900_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4115;
                    DCOMPUTF16._IOwnership _out4116;
                    DCOMPUTF16.COMP.FromOwnership(r, _8901_recOwned, expectedOwnership, out _out4115, out _out4116);
                    r = _out4115;
                    resultingOwnership = _out4116;
                  } else {
                    RAST._IType _8903___mcc_h1424 = _source333.dtor_value;
                    RAST._IType _8904_v = _8903___mcc_h1424;
                    RAST._IType _8905_toTpeRust;
                    RAST._IType _out4117;
                    _out4117 = DCOMPUTF16.COMP.GenType(_8320_toTpe, false, false);
                    _8905_toTpeRust = _out4117;
                    r = (((_8900_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_8905_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4118;
                    DCOMPUTF16._IOwnership _out4119;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4118, out _out4119);
                    r = _out4118;
                    resultingOwnership = _out4119;
                  }
                } else {
                  if ((_8899_nativeFromType).is_Some) {
                    if (object.Equals(_8320_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _8906_recursiveGen;
                      DCOMPUTF16._IOwnership _8907_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8908_recIdents;
                      RAST._IExpr _out4120;
                      DCOMPUTF16._IOwnership _out4121;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4122;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4120, out _out4121, out _out4122);
                      _8906_recursiveGen = _out4120;
                      _8907_recOwned = _out4121;
                      _8908_recIdents = _out4122;
                      RAST._IExpr _out4123;
                      DCOMPUTF16._IOwnership _out4124;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_8906_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _8907_recOwned, expectedOwnership, out _out4123, out _out4124);
                      r = _out4123;
                      resultingOwnership = _out4124;
                      readIdents = _8908_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4125;
                  DCOMPUTF16._IOwnership _out4126;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4127;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _8898_b), _8898_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4125, out _out4126, out _out4127);
                  r = _out4125;
                  resultingOwnership = _out4126;
                  readIdents = _out4127;
                }
              }
            }
          }
        } else if (_source303.is_Nullable) {
          DAST._IType _8909___mcc_h233 = _source303.dtor_Nullable_a0;
          DAST._IType _source334 = _8325___mcc_h1;
          if (_source334.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8910___mcc_h237 = _source334.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _8911___mcc_h238 = _source334.dtor_typeArgs;
            DAST._IResolvedType _8912___mcc_h239 = _source334.dtor_resolved;
            DAST._IResolvedType _source335 = _8912___mcc_h239;
            if (_source335.is_Datatype) {
              DAST._IDatatypeType _8913___mcc_h246 = _source335.dtor_datatypeType;
              {
                RAST._IExpr _8914_recursiveGen;
                DCOMPUTF16._IOwnership _8915_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8916_recIdents;
                RAST._IExpr _out4128;
                DCOMPUTF16._IOwnership _out4129;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4130;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4128, out _out4129, out _out4130);
                _8914_recursiveGen = _out4128;
                _8915_recOwned = _out4129;
                _8916_recIdents = _out4130;
                r = _8914_recursiveGen;
                if (object.Equals(_8915_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4131;
                DCOMPUTF16._IOwnership _out4132;
                DCOMPUTF16.COMP.FromOwnership(r, _8915_recOwned, expectedOwnership, out _out4131, out _out4132);
                r = _out4131;
                resultingOwnership = _out4132;
                readIdents = _8916_recIdents;
              }
            } else if (_source335.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8917___mcc_h249 = _source335.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _8918___mcc_h250 = _source335.dtor_attributes;
              {
                RAST._IExpr _8919_recursiveGen;
                DCOMPUTF16._IOwnership _8920_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8921_recIdents;
                RAST._IExpr _out4133;
                DCOMPUTF16._IOwnership _out4134;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4135;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4133, out _out4134, out _out4135);
                _8919_recursiveGen = _out4133;
                _8920_recOwned = _out4134;
                _8921_recIdents = _out4135;
                r = _8919_recursiveGen;
                if (object.Equals(_8920_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4136;
                DCOMPUTF16._IOwnership _out4137;
                DCOMPUTF16.COMP.FromOwnership(r, _8920_recOwned, expectedOwnership, out _out4136, out _out4137);
                r = _out4136;
                resultingOwnership = _out4137;
                readIdents = _8921_recIdents;
              }
            } else {
              DAST._IType _8922___mcc_h255 = _source335.dtor_baseType;
              DAST._INewtypeRange _8923___mcc_h256 = _source335.dtor_range;
              bool _8924___mcc_h257 = _source335.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _8925___mcc_h258 = _source335.dtor_attributes;
              {
                RAST._IExpr _8926_recursiveGen;
                DCOMPUTF16._IOwnership _8927_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8928_recIdents;
                RAST._IExpr _out4138;
                DCOMPUTF16._IOwnership _out4139;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4140;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4138, out _out4139, out _out4140);
                _8926_recursiveGen = _out4138;
                _8927_recOwned = _out4139;
                _8928_recIdents = _out4140;
                r = _8926_recursiveGen;
                if (object.Equals(_8927_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4141;
                DCOMPUTF16._IOwnership _out4142;
                DCOMPUTF16.COMP.FromOwnership(r, _8927_recOwned, expectedOwnership, out _out4141, out _out4142);
                r = _out4141;
                resultingOwnership = _out4142;
                readIdents = _8928_recIdents;
              }
            }
          } else if (_source334.is_Nullable) {
            DAST._IType _8929___mcc_h267 = _source334.dtor_Nullable_a0;
            {
              RAST._IExpr _8930_recursiveGen;
              DCOMPUTF16._IOwnership _8931_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8932_recIdents;
              RAST._IExpr _out4143;
              DCOMPUTF16._IOwnership _out4144;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4145;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4143, out _out4144, out _out4145);
              _8930_recursiveGen = _out4143;
              _8931_recOwned = _out4144;
              _8932_recIdents = _out4145;
              r = _8930_recursiveGen;
              if (object.Equals(_8931_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4146;
              DCOMPUTF16._IOwnership _out4147;
              DCOMPUTF16.COMP.FromOwnership(r, _8931_recOwned, expectedOwnership, out _out4146, out _out4147);
              r = _out4146;
              resultingOwnership = _out4147;
              readIdents = _8932_recIdents;
            }
          } else if (_source334.is_Tuple) {
            Dafny.ISequence<DAST._IType> _8933___mcc_h270 = _source334.dtor_Tuple_a0;
            {
              RAST._IExpr _8934_recursiveGen;
              DCOMPUTF16._IOwnership _8935_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8936_recIdents;
              RAST._IExpr _out4148;
              DCOMPUTF16._IOwnership _out4149;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4150;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4148, out _out4149, out _out4150);
              _8934_recursiveGen = _out4148;
              _8935_recOwned = _out4149;
              _8936_recIdents = _out4150;
              r = _8934_recursiveGen;
              if (object.Equals(_8935_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4151;
              DCOMPUTF16._IOwnership _out4152;
              DCOMPUTF16.COMP.FromOwnership(r, _8935_recOwned, expectedOwnership, out _out4151, out _out4152);
              r = _out4151;
              resultingOwnership = _out4152;
              readIdents = _8936_recIdents;
            }
          } else if (_source334.is_Array) {
            DAST._IType _8937___mcc_h273 = _source334.dtor_element;
            BigInteger _8938___mcc_h274 = _source334.dtor_dims;
            {
              RAST._IExpr _8939_recursiveGen;
              DCOMPUTF16._IOwnership _8940_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8941_recIdents;
              RAST._IExpr _out4153;
              DCOMPUTF16._IOwnership _out4154;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4155;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4153, out _out4154, out _out4155);
              _8939_recursiveGen = _out4153;
              _8940_recOwned = _out4154;
              _8941_recIdents = _out4155;
              r = _8939_recursiveGen;
              if (object.Equals(_8940_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4156;
              DCOMPUTF16._IOwnership _out4157;
              DCOMPUTF16.COMP.FromOwnership(r, _8940_recOwned, expectedOwnership, out _out4156, out _out4157);
              r = _out4156;
              resultingOwnership = _out4157;
              readIdents = _8941_recIdents;
            }
          } else if (_source334.is_Seq) {
            DAST._IType _8942___mcc_h279 = _source334.dtor_element;
            {
              RAST._IExpr _8943_recursiveGen;
              DCOMPUTF16._IOwnership _8944_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8945_recIdents;
              RAST._IExpr _out4158;
              DCOMPUTF16._IOwnership _out4159;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4160;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4158, out _out4159, out _out4160);
              _8943_recursiveGen = _out4158;
              _8944_recOwned = _out4159;
              _8945_recIdents = _out4160;
              r = _8943_recursiveGen;
              if (object.Equals(_8944_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4161;
              DCOMPUTF16._IOwnership _out4162;
              DCOMPUTF16.COMP.FromOwnership(r, _8944_recOwned, expectedOwnership, out _out4161, out _out4162);
              r = _out4161;
              resultingOwnership = _out4162;
              readIdents = _8945_recIdents;
            }
          } else if (_source334.is_Set) {
            DAST._IType _8946___mcc_h282 = _source334.dtor_element;
            {
              RAST._IExpr _8947_recursiveGen;
              DCOMPUTF16._IOwnership _8948_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8949_recIdents;
              RAST._IExpr _out4163;
              DCOMPUTF16._IOwnership _out4164;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4165;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4163, out _out4164, out _out4165);
              _8947_recursiveGen = _out4163;
              _8948_recOwned = _out4164;
              _8949_recIdents = _out4165;
              r = _8947_recursiveGen;
              if (object.Equals(_8948_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4166;
              DCOMPUTF16._IOwnership _out4167;
              DCOMPUTF16.COMP.FromOwnership(r, _8948_recOwned, expectedOwnership, out _out4166, out _out4167);
              r = _out4166;
              resultingOwnership = _out4167;
              readIdents = _8949_recIdents;
            }
          } else if (_source334.is_Multiset) {
            DAST._IType _8950___mcc_h285 = _source334.dtor_element;
            {
              RAST._IExpr _8951_recursiveGen;
              DCOMPUTF16._IOwnership _8952_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8953_recIdents;
              RAST._IExpr _out4168;
              DCOMPUTF16._IOwnership _out4169;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4170;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4168, out _out4169, out _out4170);
              _8951_recursiveGen = _out4168;
              _8952_recOwned = _out4169;
              _8953_recIdents = _out4170;
              r = _8951_recursiveGen;
              if (object.Equals(_8952_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4171;
              DCOMPUTF16._IOwnership _out4172;
              DCOMPUTF16.COMP.FromOwnership(r, _8952_recOwned, expectedOwnership, out _out4171, out _out4172);
              r = _out4171;
              resultingOwnership = _out4172;
              readIdents = _8953_recIdents;
            }
          } else if (_source334.is_Map) {
            DAST._IType _8954___mcc_h288 = _source334.dtor_key;
            DAST._IType _8955___mcc_h289 = _source334.dtor_value;
            {
              RAST._IExpr _8956_recursiveGen;
              DCOMPUTF16._IOwnership _8957_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8958_recIdents;
              RAST._IExpr _out4173;
              DCOMPUTF16._IOwnership _out4174;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4175;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4173, out _out4174, out _out4175);
              _8956_recursiveGen = _out4173;
              _8957_recOwned = _out4174;
              _8958_recIdents = _out4175;
              r = _8956_recursiveGen;
              if (object.Equals(_8957_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4176;
              DCOMPUTF16._IOwnership _out4177;
              DCOMPUTF16.COMP.FromOwnership(r, _8957_recOwned, expectedOwnership, out _out4176, out _out4177);
              r = _out4176;
              resultingOwnership = _out4177;
              readIdents = _8958_recIdents;
            }
          } else if (_source334.is_SetBuilder) {
            DAST._IType _8959___mcc_h294 = _source334.dtor_element;
            {
              RAST._IExpr _8960_recursiveGen;
              DCOMPUTF16._IOwnership _8961_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8962_recIdents;
              RAST._IExpr _out4178;
              DCOMPUTF16._IOwnership _out4179;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4180;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4178, out _out4179, out _out4180);
              _8960_recursiveGen = _out4178;
              _8961_recOwned = _out4179;
              _8962_recIdents = _out4180;
              r = _8960_recursiveGen;
              if (object.Equals(_8961_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4181;
              DCOMPUTF16._IOwnership _out4182;
              DCOMPUTF16.COMP.FromOwnership(r, _8961_recOwned, expectedOwnership, out _out4181, out _out4182);
              r = _out4181;
              resultingOwnership = _out4182;
              readIdents = _8962_recIdents;
            }
          } else if (_source334.is_MapBuilder) {
            DAST._IType _8963___mcc_h297 = _source334.dtor_key;
            DAST._IType _8964___mcc_h298 = _source334.dtor_value;
            {
              RAST._IExpr _8965_recursiveGen;
              DCOMPUTF16._IOwnership _8966_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8967_recIdents;
              RAST._IExpr _out4183;
              DCOMPUTF16._IOwnership _out4184;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4185;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4183, out _out4184, out _out4185);
              _8965_recursiveGen = _out4183;
              _8966_recOwned = _out4184;
              _8967_recIdents = _out4185;
              r = _8965_recursiveGen;
              if (object.Equals(_8966_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4186;
              DCOMPUTF16._IOwnership _out4187;
              DCOMPUTF16.COMP.FromOwnership(r, _8966_recOwned, expectedOwnership, out _out4186, out _out4187);
              r = _out4186;
              resultingOwnership = _out4187;
              readIdents = _8967_recIdents;
            }
          } else if (_source334.is_Arrow) {
            Dafny.ISequence<DAST._IType> _8968___mcc_h303 = _source334.dtor_args;
            DAST._IType _8969___mcc_h304 = _source334.dtor_result;
            {
              RAST._IExpr _8970_recursiveGen;
              DCOMPUTF16._IOwnership _8971_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8972_recIdents;
              RAST._IExpr _out4188;
              DCOMPUTF16._IOwnership _out4189;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4190;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4188, out _out4189, out _out4190);
              _8970_recursiveGen = _out4188;
              _8971_recOwned = _out4189;
              _8972_recIdents = _out4190;
              r = _8970_recursiveGen;
              if (object.Equals(_8971_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4191;
              DCOMPUTF16._IOwnership _out4192;
              DCOMPUTF16.COMP.FromOwnership(r, _8971_recOwned, expectedOwnership, out _out4191, out _out4192);
              r = _out4191;
              resultingOwnership = _out4192;
              readIdents = _8972_recIdents;
            }
          } else if (_source334.is_Primitive) {
            DAST._IPrimitive _8973___mcc_h309 = _source334.dtor_Primitive_a0;
            {
              RAST._IExpr _8974_recursiveGen;
              DCOMPUTF16._IOwnership _8975_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8976_recIdents;
              RAST._IExpr _out4193;
              DCOMPUTF16._IOwnership _out4194;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4195;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4193, out _out4194, out _out4195);
              _8974_recursiveGen = _out4193;
              _8975_recOwned = _out4194;
              _8976_recIdents = _out4195;
              r = _8974_recursiveGen;
              if (object.Equals(_8975_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4196;
              DCOMPUTF16._IOwnership _out4197;
              DCOMPUTF16.COMP.FromOwnership(r, _8975_recOwned, expectedOwnership, out _out4196, out _out4197);
              r = _out4196;
              resultingOwnership = _out4197;
              readIdents = _8976_recIdents;
            }
          } else if (_source334.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _8977___mcc_h312 = _source334.dtor_Passthrough_a0;
            {
              RAST._IExpr _8978_recursiveGen;
              DCOMPUTF16._IOwnership _8979_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8980_recIdents;
              RAST._IExpr _out4198;
              DCOMPUTF16._IOwnership _out4199;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4200;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4198, out _out4199, out _out4200);
              _8978_recursiveGen = _out4198;
              _8979_recOwned = _out4199;
              _8980_recIdents = _out4200;
              r = _8978_recursiveGen;
              if (object.Equals(_8979_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4201;
              DCOMPUTF16._IOwnership _out4202;
              DCOMPUTF16.COMP.FromOwnership(r, _8979_recOwned, expectedOwnership, out _out4201, out _out4202);
              r = _out4201;
              resultingOwnership = _out4202;
              readIdents = _8980_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _8981___mcc_h315 = _source334.dtor_TypeArg_a0;
            {
              RAST._IExpr _8982_recursiveGen;
              DCOMPUTF16._IOwnership _8983_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8984_recIdents;
              RAST._IExpr _out4203;
              DCOMPUTF16._IOwnership _out4204;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4205;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4203, out _out4204, out _out4205);
              _8982_recursiveGen = _out4203;
              _8983_recOwned = _out4204;
              _8984_recIdents = _out4205;
              r = _8982_recursiveGen;
              if (object.Equals(_8983_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4206;
              DCOMPUTF16._IOwnership _out4207;
              DCOMPUTF16.COMP.FromOwnership(r, _8983_recOwned, expectedOwnership, out _out4206, out _out4207);
              r = _out4206;
              resultingOwnership = _out4207;
              readIdents = _8984_recIdents;
            }
          }
        } else if (_source303.is_Tuple) {
          Dafny.ISequence<DAST._IType> _8985___mcc_h318 = _source303.dtor_Tuple_a0;
          DAST._IType _source336 = _8325___mcc_h1;
          if (_source336.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8986___mcc_h322 = _source336.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _8987___mcc_h323 = _source336.dtor_typeArgs;
            DAST._IResolvedType _8988___mcc_h324 = _source336.dtor_resolved;
            DAST._IResolvedType _source337 = _8988___mcc_h324;
            if (_source337.is_Datatype) {
              DAST._IDatatypeType _8989___mcc_h328 = _source337.dtor_datatypeType;
              {
                RAST._IType _8990_fromTpeGen;
                RAST._IType _out4208;
                _out4208 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8990_fromTpeGen = _out4208;
                RAST._IType _8991_toTpeGen;
                RAST._IType _out4209;
                _out4209 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8991_toTpeGen = _out4209;
                RAST._IExpr _8992_recursiveGen;
                DCOMPUTF16._IOwnership _8993_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8994_recIdents;
                RAST._IExpr _out4210;
                DCOMPUTF16._IOwnership _out4211;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4212;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4210, out _out4211, out _out4212);
                _8992_recursiveGen = _out4210;
                _8993_recOwned = _out4211;
                _8994_recIdents = _out4212;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8992_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8990_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8991_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4213;
                DCOMPUTF16._IOwnership _out4214;
                DCOMPUTF16.COMP.FromOwnership(r, _8993_recOwned, expectedOwnership, out _out4213, out _out4214);
                r = _out4213;
                resultingOwnership = _out4214;
                readIdents = _8994_recIdents;
              }
            } else if (_source337.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8995___mcc_h330 = _source337.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _8996___mcc_h331 = _source337.dtor_attributes;
              {
                RAST._IType _8997_fromTpeGen;
                RAST._IType _out4215;
                _out4215 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _8997_fromTpeGen = _out4215;
                RAST._IType _8998_toTpeGen;
                RAST._IType _out4216;
                _out4216 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _8998_toTpeGen = _out4216;
                RAST._IExpr _8999_recursiveGen;
                DCOMPUTF16._IOwnership _9000_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9001_recIdents;
                RAST._IExpr _out4217;
                DCOMPUTF16._IOwnership _out4218;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4219;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4217, out _out4218, out _out4219);
                _8999_recursiveGen = _out4217;
                _9000_recOwned = _out4218;
                _9001_recIdents = _out4219;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8999_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8997_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8998_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4220;
                DCOMPUTF16._IOwnership _out4221;
                DCOMPUTF16.COMP.FromOwnership(r, _9000_recOwned, expectedOwnership, out _out4220, out _out4221);
                r = _out4220;
                resultingOwnership = _out4221;
                readIdents = _9001_recIdents;
              }
            } else {
              DAST._IType _9002___mcc_h334 = _source337.dtor_baseType;
              DAST._INewtypeRange _9003___mcc_h335 = _source337.dtor_range;
              bool _9004___mcc_h336 = _source337.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9005___mcc_h337 = _source337.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9006_attributes = _9005___mcc_h337;
              bool _9007_erase = _9004___mcc_h336;
              DAST._INewtypeRange _9008_range = _9003___mcc_h335;
              DAST._IType _9009_b = _9002___mcc_h334;
              {
                Std.Wrappers._IOption<RAST._IType> _9010_nativeToType;
                _9010_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9009_b, _9008_range);
                if (object.Equals(_8319_fromTpe, _9009_b)) {
                  RAST._IExpr _9011_recursiveGen;
                  DCOMPUTF16._IOwnership _9012_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9013_recIdents;
                  RAST._IExpr _out4222;
                  DCOMPUTF16._IOwnership _out4223;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4224;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4222, out _out4223, out _out4224);
                  _9011_recursiveGen = _out4222;
                  _9012_recOwned = _out4223;
                  _9013_recIdents = _out4224;
                  readIdents = _9013_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source338 = _9010_nativeToType;
                  if (_source338.is_None) {
                    if (_9007_erase) {
                      r = _9011_recursiveGen;
                    } else {
                      RAST._IType _9014_rhsType;
                      RAST._IType _out4225;
                      _out4225 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _9014_rhsType = _out4225;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9014_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9011_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4226;
                    DCOMPUTF16._IOwnership _out4227;
                    DCOMPUTF16.COMP.FromOwnership(r, _9012_recOwned, expectedOwnership, out _out4226, out _out4227);
                    r = _out4226;
                    resultingOwnership = _out4227;
                  } else {
                    RAST._IType _9015___mcc_h1425 = _source338.dtor_value;
                    RAST._IType _9016_v = _9015___mcc_h1425;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9011_recursiveGen, RAST.Expr.create_ExprFromType(_9016_v)));
                    RAST._IExpr _out4228;
                    DCOMPUTF16._IOwnership _out4229;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4228, out _out4229);
                    r = _out4228;
                    resultingOwnership = _out4229;
                  }
                } else {
                  if ((_9010_nativeToType).is_Some) {
                    DAST._IType _source339 = _8319_fromTpe;
                    if (_source339.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9017___mcc_h1426 = _source339.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9018___mcc_h1427 = _source339.dtor_typeArgs;
                      DAST._IResolvedType _9019___mcc_h1428 = _source339.dtor_resolved;
                      DAST._IResolvedType _source340 = _9019___mcc_h1428;
                      if (_source340.is_Datatype) {
                        DAST._IDatatypeType _9020___mcc_h1432 = _source340.dtor_datatypeType;
                      } else if (_source340.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9021___mcc_h1434 = _source340.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9022___mcc_h1435 = _source340.dtor_attributes;
                      } else {
                        DAST._IType _9023___mcc_h1438 = _source340.dtor_baseType;
                        DAST._INewtypeRange _9024___mcc_h1439 = _source340.dtor_range;
                        bool _9025___mcc_h1440 = _source340.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9026___mcc_h1441 = _source340.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9027_attributes0 = _9026___mcc_h1441;
                        bool _9028_erase0 = _9025___mcc_h1440;
                        DAST._INewtypeRange _9029_range0 = _9024___mcc_h1439;
                        DAST._IType _9030_b0 = _9023___mcc_h1438;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9031_nativeFromType;
                          _9031_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9030_b0, _9029_range0);
                          if ((_9031_nativeFromType).is_Some) {
                            RAST._IExpr _9032_recursiveGen;
                            DCOMPUTF16._IOwnership _9033_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9034_recIdents;
                            RAST._IExpr _out4230;
                            DCOMPUTF16._IOwnership _out4231;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4232;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4230, out _out4231, out _out4232);
                            _9032_recursiveGen = _out4230;
                            _9033_recOwned = _out4231;
                            _9034_recIdents = _out4232;
                            RAST._IExpr _out4233;
                            DCOMPUTF16._IOwnership _out4234;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9032_recursiveGen, (_9010_nativeToType).dtor_value), _9033_recOwned, expectedOwnership, out _out4233, out _out4234);
                            r = _out4233;
                            resultingOwnership = _out4234;
                            readIdents = _9034_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source339.is_Nullable) {
                      DAST._IType _9035___mcc_h1446 = _source339.dtor_Nullable_a0;
                    } else if (_source339.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9036___mcc_h1448 = _source339.dtor_Tuple_a0;
                    } else if (_source339.is_Array) {
                      DAST._IType _9037___mcc_h1450 = _source339.dtor_element;
                      BigInteger _9038___mcc_h1451 = _source339.dtor_dims;
                    } else if (_source339.is_Seq) {
                      DAST._IType _9039___mcc_h1454 = _source339.dtor_element;
                    } else if (_source339.is_Set) {
                      DAST._IType _9040___mcc_h1456 = _source339.dtor_element;
                    } else if (_source339.is_Multiset) {
                      DAST._IType _9041___mcc_h1458 = _source339.dtor_element;
                    } else if (_source339.is_Map) {
                      DAST._IType _9042___mcc_h1460 = _source339.dtor_key;
                      DAST._IType _9043___mcc_h1461 = _source339.dtor_value;
                    } else if (_source339.is_SetBuilder) {
                      DAST._IType _9044___mcc_h1464 = _source339.dtor_element;
                    } else if (_source339.is_MapBuilder) {
                      DAST._IType _9045___mcc_h1466 = _source339.dtor_key;
                      DAST._IType _9046___mcc_h1467 = _source339.dtor_value;
                    } else if (_source339.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9047___mcc_h1470 = _source339.dtor_args;
                      DAST._IType _9048___mcc_h1471 = _source339.dtor_result;
                    } else if (_source339.is_Primitive) {
                      DAST._IPrimitive _9049___mcc_h1474 = _source339.dtor_Primitive_a0;
                    } else if (_source339.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9050___mcc_h1476 = _source339.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9051___mcc_h1478 = _source339.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9052_recursiveGen;
                      DCOMPUTF16._IOwnership _9053_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9054_recIdents;
                      RAST._IExpr _out4235;
                      DCOMPUTF16._IOwnership _out4236;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4237;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4235, out _out4236, out _out4237);
                      _9052_recursiveGen = _out4235;
                      _9053_recOwned = _out4236;
                      _9054_recIdents = _out4237;
                      RAST._IExpr _out4238;
                      DCOMPUTF16._IOwnership _out4239;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9052_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9010_nativeToType).dtor_value), _9053_recOwned, expectedOwnership, out _out4238, out _out4239);
                      r = _out4238;
                      resultingOwnership = _out4239;
                      readIdents = _9054_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4240;
                  DCOMPUTF16._IOwnership _out4241;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4242;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _9009_b), _9009_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4240, out _out4241, out _out4242);
                  r = _out4240;
                  resultingOwnership = _out4241;
                  readIdents = _out4242;
                }
              }
            }
          } else if (_source336.is_Nullable) {
            DAST._IType _9055___mcc_h342 = _source336.dtor_Nullable_a0;
            {
              RAST._IExpr _9056_recursiveGen;
              DCOMPUTF16._IOwnership _9057_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9058_recIdents;
              RAST._IExpr _out4243;
              DCOMPUTF16._IOwnership _out4244;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4245;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4243, out _out4244, out _out4245);
              _9056_recursiveGen = _out4243;
              _9057_recOwned = _out4244;
              _9058_recIdents = _out4245;
              r = _9056_recursiveGen;
              if (object.Equals(_9057_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4246;
              DCOMPUTF16._IOwnership _out4247;
              DCOMPUTF16.COMP.FromOwnership(r, _9057_recOwned, expectedOwnership, out _out4246, out _out4247);
              r = _out4246;
              resultingOwnership = _out4247;
              readIdents = _9058_recIdents;
            }
          } else if (_source336.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9059___mcc_h344 = _source336.dtor_Tuple_a0;
            {
              RAST._IType _9060_fromTpeGen;
              RAST._IType _out4248;
              _out4248 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9060_fromTpeGen = _out4248;
              RAST._IType _9061_toTpeGen;
              RAST._IType _out4249;
              _out4249 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9061_toTpeGen = _out4249;
              RAST._IExpr _9062_recursiveGen;
              DCOMPUTF16._IOwnership _9063_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9064_recIdents;
              RAST._IExpr _out4250;
              DCOMPUTF16._IOwnership _out4251;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4252;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4250, out _out4251, out _out4252);
              _9062_recursiveGen = _out4250;
              _9063_recOwned = _out4251;
              _9064_recIdents = _out4252;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9062_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9060_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9061_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4253;
              DCOMPUTF16._IOwnership _out4254;
              DCOMPUTF16.COMP.FromOwnership(r, _9063_recOwned, expectedOwnership, out _out4253, out _out4254);
              r = _out4253;
              resultingOwnership = _out4254;
              readIdents = _9064_recIdents;
            }
          } else if (_source336.is_Array) {
            DAST._IType _9065___mcc_h346 = _source336.dtor_element;
            BigInteger _9066___mcc_h347 = _source336.dtor_dims;
            {
              RAST._IType _9067_fromTpeGen;
              RAST._IType _out4255;
              _out4255 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9067_fromTpeGen = _out4255;
              RAST._IType _9068_toTpeGen;
              RAST._IType _out4256;
              _out4256 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9068_toTpeGen = _out4256;
              RAST._IExpr _9069_recursiveGen;
              DCOMPUTF16._IOwnership _9070_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9071_recIdents;
              RAST._IExpr _out4257;
              DCOMPUTF16._IOwnership _out4258;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4259;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4257, out _out4258, out _out4259);
              _9069_recursiveGen = _out4257;
              _9070_recOwned = _out4258;
              _9071_recIdents = _out4259;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9069_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9067_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9068_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4260;
              DCOMPUTF16._IOwnership _out4261;
              DCOMPUTF16.COMP.FromOwnership(r, _9070_recOwned, expectedOwnership, out _out4260, out _out4261);
              r = _out4260;
              resultingOwnership = _out4261;
              readIdents = _9071_recIdents;
            }
          } else if (_source336.is_Seq) {
            DAST._IType _9072___mcc_h350 = _source336.dtor_element;
            {
              RAST._IType _9073_fromTpeGen;
              RAST._IType _out4262;
              _out4262 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9073_fromTpeGen = _out4262;
              RAST._IType _9074_toTpeGen;
              RAST._IType _out4263;
              _out4263 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9074_toTpeGen = _out4263;
              RAST._IExpr _9075_recursiveGen;
              DCOMPUTF16._IOwnership _9076_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9077_recIdents;
              RAST._IExpr _out4264;
              DCOMPUTF16._IOwnership _out4265;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4266;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4264, out _out4265, out _out4266);
              _9075_recursiveGen = _out4264;
              _9076_recOwned = _out4265;
              _9077_recIdents = _out4266;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9075_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9073_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9074_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4267;
              DCOMPUTF16._IOwnership _out4268;
              DCOMPUTF16.COMP.FromOwnership(r, _9076_recOwned, expectedOwnership, out _out4267, out _out4268);
              r = _out4267;
              resultingOwnership = _out4268;
              readIdents = _9077_recIdents;
            }
          } else if (_source336.is_Set) {
            DAST._IType _9078___mcc_h352 = _source336.dtor_element;
            {
              RAST._IType _9079_fromTpeGen;
              RAST._IType _out4269;
              _out4269 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9079_fromTpeGen = _out4269;
              RAST._IType _9080_toTpeGen;
              RAST._IType _out4270;
              _out4270 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9080_toTpeGen = _out4270;
              RAST._IExpr _9081_recursiveGen;
              DCOMPUTF16._IOwnership _9082_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9083_recIdents;
              RAST._IExpr _out4271;
              DCOMPUTF16._IOwnership _out4272;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4273;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4271, out _out4272, out _out4273);
              _9081_recursiveGen = _out4271;
              _9082_recOwned = _out4272;
              _9083_recIdents = _out4273;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9081_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9079_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9080_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4274;
              DCOMPUTF16._IOwnership _out4275;
              DCOMPUTF16.COMP.FromOwnership(r, _9082_recOwned, expectedOwnership, out _out4274, out _out4275);
              r = _out4274;
              resultingOwnership = _out4275;
              readIdents = _9083_recIdents;
            }
          } else if (_source336.is_Multiset) {
            DAST._IType _9084___mcc_h354 = _source336.dtor_element;
            {
              RAST._IType _9085_fromTpeGen;
              RAST._IType _out4276;
              _out4276 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9085_fromTpeGen = _out4276;
              RAST._IType _9086_toTpeGen;
              RAST._IType _out4277;
              _out4277 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9086_toTpeGen = _out4277;
              RAST._IExpr _9087_recursiveGen;
              DCOMPUTF16._IOwnership _9088_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9089_recIdents;
              RAST._IExpr _out4278;
              DCOMPUTF16._IOwnership _out4279;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4280;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4278, out _out4279, out _out4280);
              _9087_recursiveGen = _out4278;
              _9088_recOwned = _out4279;
              _9089_recIdents = _out4280;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9087_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9085_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9086_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4281;
              DCOMPUTF16._IOwnership _out4282;
              DCOMPUTF16.COMP.FromOwnership(r, _9088_recOwned, expectedOwnership, out _out4281, out _out4282);
              r = _out4281;
              resultingOwnership = _out4282;
              readIdents = _9089_recIdents;
            }
          } else if (_source336.is_Map) {
            DAST._IType _9090___mcc_h356 = _source336.dtor_key;
            DAST._IType _9091___mcc_h357 = _source336.dtor_value;
            {
              RAST._IType _9092_fromTpeGen;
              RAST._IType _out4283;
              _out4283 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9092_fromTpeGen = _out4283;
              RAST._IType _9093_toTpeGen;
              RAST._IType _out4284;
              _out4284 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9093_toTpeGen = _out4284;
              RAST._IExpr _9094_recursiveGen;
              DCOMPUTF16._IOwnership _9095_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9096_recIdents;
              RAST._IExpr _out4285;
              DCOMPUTF16._IOwnership _out4286;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4287;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4285, out _out4286, out _out4287);
              _9094_recursiveGen = _out4285;
              _9095_recOwned = _out4286;
              _9096_recIdents = _out4287;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9094_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9092_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9093_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4288;
              DCOMPUTF16._IOwnership _out4289;
              DCOMPUTF16.COMP.FromOwnership(r, _9095_recOwned, expectedOwnership, out _out4288, out _out4289);
              r = _out4288;
              resultingOwnership = _out4289;
              readIdents = _9096_recIdents;
            }
          } else if (_source336.is_SetBuilder) {
            DAST._IType _9097___mcc_h360 = _source336.dtor_element;
            {
              RAST._IType _9098_fromTpeGen;
              RAST._IType _out4290;
              _out4290 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9098_fromTpeGen = _out4290;
              RAST._IType _9099_toTpeGen;
              RAST._IType _out4291;
              _out4291 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9099_toTpeGen = _out4291;
              RAST._IExpr _9100_recursiveGen;
              DCOMPUTF16._IOwnership _9101_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9102_recIdents;
              RAST._IExpr _out4292;
              DCOMPUTF16._IOwnership _out4293;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4294;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4292, out _out4293, out _out4294);
              _9100_recursiveGen = _out4292;
              _9101_recOwned = _out4293;
              _9102_recIdents = _out4294;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9100_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9098_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9099_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4295;
              DCOMPUTF16._IOwnership _out4296;
              DCOMPUTF16.COMP.FromOwnership(r, _9101_recOwned, expectedOwnership, out _out4295, out _out4296);
              r = _out4295;
              resultingOwnership = _out4296;
              readIdents = _9102_recIdents;
            }
          } else if (_source336.is_MapBuilder) {
            DAST._IType _9103___mcc_h362 = _source336.dtor_key;
            DAST._IType _9104___mcc_h363 = _source336.dtor_value;
            {
              RAST._IType _9105_fromTpeGen;
              RAST._IType _out4297;
              _out4297 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9105_fromTpeGen = _out4297;
              RAST._IType _9106_toTpeGen;
              RAST._IType _out4298;
              _out4298 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9106_toTpeGen = _out4298;
              RAST._IExpr _9107_recursiveGen;
              DCOMPUTF16._IOwnership _9108_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9109_recIdents;
              RAST._IExpr _out4299;
              DCOMPUTF16._IOwnership _out4300;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4301;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4299, out _out4300, out _out4301);
              _9107_recursiveGen = _out4299;
              _9108_recOwned = _out4300;
              _9109_recIdents = _out4301;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9107_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9105_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9106_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4302;
              DCOMPUTF16._IOwnership _out4303;
              DCOMPUTF16.COMP.FromOwnership(r, _9108_recOwned, expectedOwnership, out _out4302, out _out4303);
              r = _out4302;
              resultingOwnership = _out4303;
              readIdents = _9109_recIdents;
            }
          } else if (_source336.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9110___mcc_h366 = _source336.dtor_args;
            DAST._IType _9111___mcc_h367 = _source336.dtor_result;
            {
              RAST._IType _9112_fromTpeGen;
              RAST._IType _out4304;
              _out4304 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9112_fromTpeGen = _out4304;
              RAST._IType _9113_toTpeGen;
              RAST._IType _out4305;
              _out4305 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9113_toTpeGen = _out4305;
              RAST._IExpr _9114_recursiveGen;
              DCOMPUTF16._IOwnership _9115_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9116_recIdents;
              RAST._IExpr _out4306;
              DCOMPUTF16._IOwnership _out4307;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4308;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4306, out _out4307, out _out4308);
              _9114_recursiveGen = _out4306;
              _9115_recOwned = _out4307;
              _9116_recIdents = _out4308;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9114_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9112_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9113_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4309;
              DCOMPUTF16._IOwnership _out4310;
              DCOMPUTF16.COMP.FromOwnership(r, _9115_recOwned, expectedOwnership, out _out4309, out _out4310);
              r = _out4309;
              resultingOwnership = _out4310;
              readIdents = _9116_recIdents;
            }
          } else if (_source336.is_Primitive) {
            DAST._IPrimitive _9117___mcc_h370 = _source336.dtor_Primitive_a0;
            {
              RAST._IType _9118_fromTpeGen;
              RAST._IType _out4311;
              _out4311 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9118_fromTpeGen = _out4311;
              RAST._IType _9119_toTpeGen;
              RAST._IType _out4312;
              _out4312 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9119_toTpeGen = _out4312;
              RAST._IExpr _9120_recursiveGen;
              DCOMPUTF16._IOwnership _9121_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9122_recIdents;
              RAST._IExpr _out4313;
              DCOMPUTF16._IOwnership _out4314;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4315;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4313, out _out4314, out _out4315);
              _9120_recursiveGen = _out4313;
              _9121_recOwned = _out4314;
              _9122_recIdents = _out4315;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9120_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9118_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9119_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4316;
              DCOMPUTF16._IOwnership _out4317;
              DCOMPUTF16.COMP.FromOwnership(r, _9121_recOwned, expectedOwnership, out _out4316, out _out4317);
              r = _out4316;
              resultingOwnership = _out4317;
              readIdents = _9122_recIdents;
            }
          } else if (_source336.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9123___mcc_h372 = _source336.dtor_Passthrough_a0;
            {
              RAST._IType _9124_fromTpeGen;
              RAST._IType _out4318;
              _out4318 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9124_fromTpeGen = _out4318;
              RAST._IType _9125_toTpeGen;
              RAST._IType _out4319;
              _out4319 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9125_toTpeGen = _out4319;
              RAST._IExpr _9126_recursiveGen;
              DCOMPUTF16._IOwnership _9127_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9128_recIdents;
              RAST._IExpr _out4320;
              DCOMPUTF16._IOwnership _out4321;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4322;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4320, out _out4321, out _out4322);
              _9126_recursiveGen = _out4320;
              _9127_recOwned = _out4321;
              _9128_recIdents = _out4322;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9126_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9124_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9125_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4323;
              DCOMPUTF16._IOwnership _out4324;
              DCOMPUTF16.COMP.FromOwnership(r, _9127_recOwned, expectedOwnership, out _out4323, out _out4324);
              r = _out4323;
              resultingOwnership = _out4324;
              readIdents = _9128_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9129___mcc_h374 = _source336.dtor_TypeArg_a0;
            {
              RAST._IType _9130_fromTpeGen;
              RAST._IType _out4325;
              _out4325 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9130_fromTpeGen = _out4325;
              RAST._IType _9131_toTpeGen;
              RAST._IType _out4326;
              _out4326 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9131_toTpeGen = _out4326;
              RAST._IExpr _9132_recursiveGen;
              DCOMPUTF16._IOwnership _9133_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9134_recIdents;
              RAST._IExpr _out4327;
              DCOMPUTF16._IOwnership _out4328;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4329;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4327, out _out4328, out _out4329);
              _9132_recursiveGen = _out4327;
              _9133_recOwned = _out4328;
              _9134_recIdents = _out4329;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9132_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9130_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9131_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4330;
              DCOMPUTF16._IOwnership _out4331;
              DCOMPUTF16.COMP.FromOwnership(r, _9133_recOwned, expectedOwnership, out _out4330, out _out4331);
              r = _out4330;
              resultingOwnership = _out4331;
              readIdents = _9134_recIdents;
            }
          }
        } else if (_source303.is_Array) {
          DAST._IType _9135___mcc_h376 = _source303.dtor_element;
          BigInteger _9136___mcc_h377 = _source303.dtor_dims;
          DAST._IType _source341 = _8325___mcc_h1;
          if (_source341.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9137___mcc_h384 = _source341.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9138___mcc_h385 = _source341.dtor_typeArgs;
            DAST._IResolvedType _9139___mcc_h386 = _source341.dtor_resolved;
            DAST._IResolvedType _source342 = _9139___mcc_h386;
            if (_source342.is_Datatype) {
              DAST._IDatatypeType _9140___mcc_h390 = _source342.dtor_datatypeType;
              {
                RAST._IType _9141_fromTpeGen;
                RAST._IType _out4332;
                _out4332 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9141_fromTpeGen = _out4332;
                RAST._IType _9142_toTpeGen;
                RAST._IType _out4333;
                _out4333 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9142_toTpeGen = _out4333;
                RAST._IExpr _9143_recursiveGen;
                DCOMPUTF16._IOwnership _9144_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9145_recIdents;
                RAST._IExpr _out4334;
                DCOMPUTF16._IOwnership _out4335;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4336;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4334, out _out4335, out _out4336);
                _9143_recursiveGen = _out4334;
                _9144_recOwned = _out4335;
                _9145_recIdents = _out4336;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9143_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9141_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9142_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4337;
                DCOMPUTF16._IOwnership _out4338;
                DCOMPUTF16.COMP.FromOwnership(r, _9144_recOwned, expectedOwnership, out _out4337, out _out4338);
                r = _out4337;
                resultingOwnership = _out4338;
                readIdents = _9145_recIdents;
              }
            } else if (_source342.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9146___mcc_h392 = _source342.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9147___mcc_h393 = _source342.dtor_attributes;
              {
                RAST._IType _9148_fromTpeGen;
                RAST._IType _out4339;
                _out4339 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9148_fromTpeGen = _out4339;
                RAST._IType _9149_toTpeGen;
                RAST._IType _out4340;
                _out4340 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9149_toTpeGen = _out4340;
                RAST._IExpr _9150_recursiveGen;
                DCOMPUTF16._IOwnership _9151_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9152_recIdents;
                RAST._IExpr _out4341;
                DCOMPUTF16._IOwnership _out4342;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4343;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4341, out _out4342, out _out4343);
                _9150_recursiveGen = _out4341;
                _9151_recOwned = _out4342;
                _9152_recIdents = _out4343;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9150_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9148_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9149_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4344;
                DCOMPUTF16._IOwnership _out4345;
                DCOMPUTF16.COMP.FromOwnership(r, _9151_recOwned, expectedOwnership, out _out4344, out _out4345);
                r = _out4344;
                resultingOwnership = _out4345;
                readIdents = _9152_recIdents;
              }
            } else {
              DAST._IType _9153___mcc_h396 = _source342.dtor_baseType;
              DAST._INewtypeRange _9154___mcc_h397 = _source342.dtor_range;
              bool _9155___mcc_h398 = _source342.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9156___mcc_h399 = _source342.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9157_attributes = _9156___mcc_h399;
              bool _9158_erase = _9155___mcc_h398;
              DAST._INewtypeRange _9159_range = _9154___mcc_h397;
              DAST._IType _9160_b = _9153___mcc_h396;
              {
                Std.Wrappers._IOption<RAST._IType> _9161_nativeToType;
                _9161_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9160_b, _9159_range);
                if (object.Equals(_8319_fromTpe, _9160_b)) {
                  RAST._IExpr _9162_recursiveGen;
                  DCOMPUTF16._IOwnership _9163_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9164_recIdents;
                  RAST._IExpr _out4346;
                  DCOMPUTF16._IOwnership _out4347;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4348;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4346, out _out4347, out _out4348);
                  _9162_recursiveGen = _out4346;
                  _9163_recOwned = _out4347;
                  _9164_recIdents = _out4348;
                  readIdents = _9164_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source343 = _9161_nativeToType;
                  if (_source343.is_None) {
                    if (_9158_erase) {
                      r = _9162_recursiveGen;
                    } else {
                      RAST._IType _9165_rhsType;
                      RAST._IType _out4349;
                      _out4349 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _9165_rhsType = _out4349;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9165_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9162_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4350;
                    DCOMPUTF16._IOwnership _out4351;
                    DCOMPUTF16.COMP.FromOwnership(r, _9163_recOwned, expectedOwnership, out _out4350, out _out4351);
                    r = _out4350;
                    resultingOwnership = _out4351;
                  } else {
                    RAST._IType _9166___mcc_h1480 = _source343.dtor_value;
                    RAST._IType _9167_v = _9166___mcc_h1480;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9162_recursiveGen, RAST.Expr.create_ExprFromType(_9167_v)));
                    RAST._IExpr _out4352;
                    DCOMPUTF16._IOwnership _out4353;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4352, out _out4353);
                    r = _out4352;
                    resultingOwnership = _out4353;
                  }
                } else {
                  if ((_9161_nativeToType).is_Some) {
                    DAST._IType _source344 = _8319_fromTpe;
                    if (_source344.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9168___mcc_h1481 = _source344.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9169___mcc_h1482 = _source344.dtor_typeArgs;
                      DAST._IResolvedType _9170___mcc_h1483 = _source344.dtor_resolved;
                      DAST._IResolvedType _source345 = _9170___mcc_h1483;
                      if (_source345.is_Datatype) {
                        DAST._IDatatypeType _9171___mcc_h1487 = _source345.dtor_datatypeType;
                      } else if (_source345.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9172___mcc_h1489 = _source345.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9173___mcc_h1490 = _source345.dtor_attributes;
                      } else {
                        DAST._IType _9174___mcc_h1493 = _source345.dtor_baseType;
                        DAST._INewtypeRange _9175___mcc_h1494 = _source345.dtor_range;
                        bool _9176___mcc_h1495 = _source345.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9177___mcc_h1496 = _source345.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9178_attributes0 = _9177___mcc_h1496;
                        bool _9179_erase0 = _9176___mcc_h1495;
                        DAST._INewtypeRange _9180_range0 = _9175___mcc_h1494;
                        DAST._IType _9181_b0 = _9174___mcc_h1493;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9182_nativeFromType;
                          _9182_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9181_b0, _9180_range0);
                          if ((_9182_nativeFromType).is_Some) {
                            RAST._IExpr _9183_recursiveGen;
                            DCOMPUTF16._IOwnership _9184_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9185_recIdents;
                            RAST._IExpr _out4354;
                            DCOMPUTF16._IOwnership _out4355;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4356;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4354, out _out4355, out _out4356);
                            _9183_recursiveGen = _out4354;
                            _9184_recOwned = _out4355;
                            _9185_recIdents = _out4356;
                            RAST._IExpr _out4357;
                            DCOMPUTF16._IOwnership _out4358;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9183_recursiveGen, (_9161_nativeToType).dtor_value), _9184_recOwned, expectedOwnership, out _out4357, out _out4358);
                            r = _out4357;
                            resultingOwnership = _out4358;
                            readIdents = _9185_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source344.is_Nullable) {
                      DAST._IType _9186___mcc_h1501 = _source344.dtor_Nullable_a0;
                    } else if (_source344.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9187___mcc_h1503 = _source344.dtor_Tuple_a0;
                    } else if (_source344.is_Array) {
                      DAST._IType _9188___mcc_h1505 = _source344.dtor_element;
                      BigInteger _9189___mcc_h1506 = _source344.dtor_dims;
                    } else if (_source344.is_Seq) {
                      DAST._IType _9190___mcc_h1509 = _source344.dtor_element;
                    } else if (_source344.is_Set) {
                      DAST._IType _9191___mcc_h1511 = _source344.dtor_element;
                    } else if (_source344.is_Multiset) {
                      DAST._IType _9192___mcc_h1513 = _source344.dtor_element;
                    } else if (_source344.is_Map) {
                      DAST._IType _9193___mcc_h1515 = _source344.dtor_key;
                      DAST._IType _9194___mcc_h1516 = _source344.dtor_value;
                    } else if (_source344.is_SetBuilder) {
                      DAST._IType _9195___mcc_h1519 = _source344.dtor_element;
                    } else if (_source344.is_MapBuilder) {
                      DAST._IType _9196___mcc_h1521 = _source344.dtor_key;
                      DAST._IType _9197___mcc_h1522 = _source344.dtor_value;
                    } else if (_source344.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9198___mcc_h1525 = _source344.dtor_args;
                      DAST._IType _9199___mcc_h1526 = _source344.dtor_result;
                    } else if (_source344.is_Primitive) {
                      DAST._IPrimitive _9200___mcc_h1529 = _source344.dtor_Primitive_a0;
                    } else if (_source344.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9201___mcc_h1531 = _source344.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9202___mcc_h1533 = _source344.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9203_recursiveGen;
                      DCOMPUTF16._IOwnership _9204_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9205_recIdents;
                      RAST._IExpr _out4359;
                      DCOMPUTF16._IOwnership _out4360;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4361;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4359, out _out4360, out _out4361);
                      _9203_recursiveGen = _out4359;
                      _9204_recOwned = _out4360;
                      _9205_recIdents = _out4361;
                      RAST._IExpr _out4362;
                      DCOMPUTF16._IOwnership _out4363;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9203_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9161_nativeToType).dtor_value), _9204_recOwned, expectedOwnership, out _out4362, out _out4363);
                      r = _out4362;
                      resultingOwnership = _out4363;
                      readIdents = _9205_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4364;
                  DCOMPUTF16._IOwnership _out4365;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4366;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _9160_b), _9160_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4364, out _out4365, out _out4366);
                  r = _out4364;
                  resultingOwnership = _out4365;
                  readIdents = _out4366;
                }
              }
            }
          } else if (_source341.is_Nullable) {
            DAST._IType _9206___mcc_h404 = _source341.dtor_Nullable_a0;
            {
              RAST._IExpr _9207_recursiveGen;
              DCOMPUTF16._IOwnership _9208_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9209_recIdents;
              RAST._IExpr _out4367;
              DCOMPUTF16._IOwnership _out4368;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4369;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4367, out _out4368, out _out4369);
              _9207_recursiveGen = _out4367;
              _9208_recOwned = _out4368;
              _9209_recIdents = _out4369;
              r = _9207_recursiveGen;
              if (object.Equals(_9208_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4370;
              DCOMPUTF16._IOwnership _out4371;
              DCOMPUTF16.COMP.FromOwnership(r, _9208_recOwned, expectedOwnership, out _out4370, out _out4371);
              r = _out4370;
              resultingOwnership = _out4371;
              readIdents = _9209_recIdents;
            }
          } else if (_source341.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9210___mcc_h406 = _source341.dtor_Tuple_a0;
            {
              RAST._IType _9211_fromTpeGen;
              RAST._IType _out4372;
              _out4372 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9211_fromTpeGen = _out4372;
              RAST._IType _9212_toTpeGen;
              RAST._IType _out4373;
              _out4373 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9212_toTpeGen = _out4373;
              RAST._IExpr _9213_recursiveGen;
              DCOMPUTF16._IOwnership _9214_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9215_recIdents;
              RAST._IExpr _out4374;
              DCOMPUTF16._IOwnership _out4375;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4376;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4374, out _out4375, out _out4376);
              _9213_recursiveGen = _out4374;
              _9214_recOwned = _out4375;
              _9215_recIdents = _out4376;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9213_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9211_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9212_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4377;
              DCOMPUTF16._IOwnership _out4378;
              DCOMPUTF16.COMP.FromOwnership(r, _9214_recOwned, expectedOwnership, out _out4377, out _out4378);
              r = _out4377;
              resultingOwnership = _out4378;
              readIdents = _9215_recIdents;
            }
          } else if (_source341.is_Array) {
            DAST._IType _9216___mcc_h408 = _source341.dtor_element;
            BigInteger _9217___mcc_h409 = _source341.dtor_dims;
            {
              RAST._IType _9218_fromTpeGen;
              RAST._IType _out4379;
              _out4379 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9218_fromTpeGen = _out4379;
              RAST._IType _9219_toTpeGen;
              RAST._IType _out4380;
              _out4380 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9219_toTpeGen = _out4380;
              RAST._IExpr _9220_recursiveGen;
              DCOMPUTF16._IOwnership _9221_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9222_recIdents;
              RAST._IExpr _out4381;
              DCOMPUTF16._IOwnership _out4382;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4383;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4381, out _out4382, out _out4383);
              _9220_recursiveGen = _out4381;
              _9221_recOwned = _out4382;
              _9222_recIdents = _out4383;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9220_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9218_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9219_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4384;
              DCOMPUTF16._IOwnership _out4385;
              DCOMPUTF16.COMP.FromOwnership(r, _9221_recOwned, expectedOwnership, out _out4384, out _out4385);
              r = _out4384;
              resultingOwnership = _out4385;
              readIdents = _9222_recIdents;
            }
          } else if (_source341.is_Seq) {
            DAST._IType _9223___mcc_h412 = _source341.dtor_element;
            {
              RAST._IType _9224_fromTpeGen;
              RAST._IType _out4386;
              _out4386 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9224_fromTpeGen = _out4386;
              RAST._IType _9225_toTpeGen;
              RAST._IType _out4387;
              _out4387 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9225_toTpeGen = _out4387;
              RAST._IExpr _9226_recursiveGen;
              DCOMPUTF16._IOwnership _9227_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9228_recIdents;
              RAST._IExpr _out4388;
              DCOMPUTF16._IOwnership _out4389;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4390;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4388, out _out4389, out _out4390);
              _9226_recursiveGen = _out4388;
              _9227_recOwned = _out4389;
              _9228_recIdents = _out4390;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9226_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9224_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9225_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4391;
              DCOMPUTF16._IOwnership _out4392;
              DCOMPUTF16.COMP.FromOwnership(r, _9227_recOwned, expectedOwnership, out _out4391, out _out4392);
              r = _out4391;
              resultingOwnership = _out4392;
              readIdents = _9228_recIdents;
            }
          } else if (_source341.is_Set) {
            DAST._IType _9229___mcc_h414 = _source341.dtor_element;
            {
              RAST._IType _9230_fromTpeGen;
              RAST._IType _out4393;
              _out4393 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9230_fromTpeGen = _out4393;
              RAST._IType _9231_toTpeGen;
              RAST._IType _out4394;
              _out4394 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9231_toTpeGen = _out4394;
              RAST._IExpr _9232_recursiveGen;
              DCOMPUTF16._IOwnership _9233_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9234_recIdents;
              RAST._IExpr _out4395;
              DCOMPUTF16._IOwnership _out4396;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4397;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4395, out _out4396, out _out4397);
              _9232_recursiveGen = _out4395;
              _9233_recOwned = _out4396;
              _9234_recIdents = _out4397;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9232_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9230_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9231_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4398;
              DCOMPUTF16._IOwnership _out4399;
              DCOMPUTF16.COMP.FromOwnership(r, _9233_recOwned, expectedOwnership, out _out4398, out _out4399);
              r = _out4398;
              resultingOwnership = _out4399;
              readIdents = _9234_recIdents;
            }
          } else if (_source341.is_Multiset) {
            DAST._IType _9235___mcc_h416 = _source341.dtor_element;
            {
              RAST._IType _9236_fromTpeGen;
              RAST._IType _out4400;
              _out4400 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9236_fromTpeGen = _out4400;
              RAST._IType _9237_toTpeGen;
              RAST._IType _out4401;
              _out4401 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9237_toTpeGen = _out4401;
              RAST._IExpr _9238_recursiveGen;
              DCOMPUTF16._IOwnership _9239_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9240_recIdents;
              RAST._IExpr _out4402;
              DCOMPUTF16._IOwnership _out4403;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4404;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4402, out _out4403, out _out4404);
              _9238_recursiveGen = _out4402;
              _9239_recOwned = _out4403;
              _9240_recIdents = _out4404;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9238_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9236_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9237_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4405;
              DCOMPUTF16._IOwnership _out4406;
              DCOMPUTF16.COMP.FromOwnership(r, _9239_recOwned, expectedOwnership, out _out4405, out _out4406);
              r = _out4405;
              resultingOwnership = _out4406;
              readIdents = _9240_recIdents;
            }
          } else if (_source341.is_Map) {
            DAST._IType _9241___mcc_h418 = _source341.dtor_key;
            DAST._IType _9242___mcc_h419 = _source341.dtor_value;
            {
              RAST._IType _9243_fromTpeGen;
              RAST._IType _out4407;
              _out4407 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9243_fromTpeGen = _out4407;
              RAST._IType _9244_toTpeGen;
              RAST._IType _out4408;
              _out4408 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9244_toTpeGen = _out4408;
              RAST._IExpr _9245_recursiveGen;
              DCOMPUTF16._IOwnership _9246_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9247_recIdents;
              RAST._IExpr _out4409;
              DCOMPUTF16._IOwnership _out4410;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4411;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4409, out _out4410, out _out4411);
              _9245_recursiveGen = _out4409;
              _9246_recOwned = _out4410;
              _9247_recIdents = _out4411;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9245_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9243_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9244_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4412;
              DCOMPUTF16._IOwnership _out4413;
              DCOMPUTF16.COMP.FromOwnership(r, _9246_recOwned, expectedOwnership, out _out4412, out _out4413);
              r = _out4412;
              resultingOwnership = _out4413;
              readIdents = _9247_recIdents;
            }
          } else if (_source341.is_SetBuilder) {
            DAST._IType _9248___mcc_h422 = _source341.dtor_element;
            {
              RAST._IType _9249_fromTpeGen;
              RAST._IType _out4414;
              _out4414 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9249_fromTpeGen = _out4414;
              RAST._IType _9250_toTpeGen;
              RAST._IType _out4415;
              _out4415 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9250_toTpeGen = _out4415;
              RAST._IExpr _9251_recursiveGen;
              DCOMPUTF16._IOwnership _9252_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9253_recIdents;
              RAST._IExpr _out4416;
              DCOMPUTF16._IOwnership _out4417;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4418;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4416, out _out4417, out _out4418);
              _9251_recursiveGen = _out4416;
              _9252_recOwned = _out4417;
              _9253_recIdents = _out4418;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9251_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9249_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9250_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4419;
              DCOMPUTF16._IOwnership _out4420;
              DCOMPUTF16.COMP.FromOwnership(r, _9252_recOwned, expectedOwnership, out _out4419, out _out4420);
              r = _out4419;
              resultingOwnership = _out4420;
              readIdents = _9253_recIdents;
            }
          } else if (_source341.is_MapBuilder) {
            DAST._IType _9254___mcc_h424 = _source341.dtor_key;
            DAST._IType _9255___mcc_h425 = _source341.dtor_value;
            {
              RAST._IType _9256_fromTpeGen;
              RAST._IType _out4421;
              _out4421 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9256_fromTpeGen = _out4421;
              RAST._IType _9257_toTpeGen;
              RAST._IType _out4422;
              _out4422 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9257_toTpeGen = _out4422;
              RAST._IExpr _9258_recursiveGen;
              DCOMPUTF16._IOwnership _9259_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9260_recIdents;
              RAST._IExpr _out4423;
              DCOMPUTF16._IOwnership _out4424;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4425;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4423, out _out4424, out _out4425);
              _9258_recursiveGen = _out4423;
              _9259_recOwned = _out4424;
              _9260_recIdents = _out4425;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9258_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9256_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9257_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4426;
              DCOMPUTF16._IOwnership _out4427;
              DCOMPUTF16.COMP.FromOwnership(r, _9259_recOwned, expectedOwnership, out _out4426, out _out4427);
              r = _out4426;
              resultingOwnership = _out4427;
              readIdents = _9260_recIdents;
            }
          } else if (_source341.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9261___mcc_h428 = _source341.dtor_args;
            DAST._IType _9262___mcc_h429 = _source341.dtor_result;
            {
              RAST._IType _9263_fromTpeGen;
              RAST._IType _out4428;
              _out4428 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9263_fromTpeGen = _out4428;
              RAST._IType _9264_toTpeGen;
              RAST._IType _out4429;
              _out4429 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9264_toTpeGen = _out4429;
              RAST._IExpr _9265_recursiveGen;
              DCOMPUTF16._IOwnership _9266_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9267_recIdents;
              RAST._IExpr _out4430;
              DCOMPUTF16._IOwnership _out4431;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4432;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4430, out _out4431, out _out4432);
              _9265_recursiveGen = _out4430;
              _9266_recOwned = _out4431;
              _9267_recIdents = _out4432;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9265_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9263_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9264_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4433;
              DCOMPUTF16._IOwnership _out4434;
              DCOMPUTF16.COMP.FromOwnership(r, _9266_recOwned, expectedOwnership, out _out4433, out _out4434);
              r = _out4433;
              resultingOwnership = _out4434;
              readIdents = _9267_recIdents;
            }
          } else if (_source341.is_Primitive) {
            DAST._IPrimitive _9268___mcc_h432 = _source341.dtor_Primitive_a0;
            {
              RAST._IType _9269_fromTpeGen;
              RAST._IType _out4435;
              _out4435 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9269_fromTpeGen = _out4435;
              RAST._IType _9270_toTpeGen;
              RAST._IType _out4436;
              _out4436 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9270_toTpeGen = _out4436;
              RAST._IExpr _9271_recursiveGen;
              DCOMPUTF16._IOwnership _9272_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9273_recIdents;
              RAST._IExpr _out4437;
              DCOMPUTF16._IOwnership _out4438;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4439;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4437, out _out4438, out _out4439);
              _9271_recursiveGen = _out4437;
              _9272_recOwned = _out4438;
              _9273_recIdents = _out4439;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9271_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9269_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9270_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4440;
              DCOMPUTF16._IOwnership _out4441;
              DCOMPUTF16.COMP.FromOwnership(r, _9272_recOwned, expectedOwnership, out _out4440, out _out4441);
              r = _out4440;
              resultingOwnership = _out4441;
              readIdents = _9273_recIdents;
            }
          } else if (_source341.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9274___mcc_h434 = _source341.dtor_Passthrough_a0;
            {
              RAST._IType _9275_fromTpeGen;
              RAST._IType _out4442;
              _out4442 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9275_fromTpeGen = _out4442;
              RAST._IType _9276_toTpeGen;
              RAST._IType _out4443;
              _out4443 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9276_toTpeGen = _out4443;
              RAST._IExpr _9277_recursiveGen;
              DCOMPUTF16._IOwnership _9278_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9279_recIdents;
              RAST._IExpr _out4444;
              DCOMPUTF16._IOwnership _out4445;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4446;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4444, out _out4445, out _out4446);
              _9277_recursiveGen = _out4444;
              _9278_recOwned = _out4445;
              _9279_recIdents = _out4446;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9277_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9275_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9276_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4447;
              DCOMPUTF16._IOwnership _out4448;
              DCOMPUTF16.COMP.FromOwnership(r, _9278_recOwned, expectedOwnership, out _out4447, out _out4448);
              r = _out4447;
              resultingOwnership = _out4448;
              readIdents = _9279_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9280___mcc_h436 = _source341.dtor_TypeArg_a0;
            {
              RAST._IType _9281_fromTpeGen;
              RAST._IType _out4449;
              _out4449 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9281_fromTpeGen = _out4449;
              RAST._IType _9282_toTpeGen;
              RAST._IType _out4450;
              _out4450 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9282_toTpeGen = _out4450;
              RAST._IExpr _9283_recursiveGen;
              DCOMPUTF16._IOwnership _9284_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9285_recIdents;
              RAST._IExpr _out4451;
              DCOMPUTF16._IOwnership _out4452;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4453;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4451, out _out4452, out _out4453);
              _9283_recursiveGen = _out4451;
              _9284_recOwned = _out4452;
              _9285_recIdents = _out4453;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9283_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9281_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9282_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4454;
              DCOMPUTF16._IOwnership _out4455;
              DCOMPUTF16.COMP.FromOwnership(r, _9284_recOwned, expectedOwnership, out _out4454, out _out4455);
              r = _out4454;
              resultingOwnership = _out4455;
              readIdents = _9285_recIdents;
            }
          }
        } else if (_source303.is_Seq) {
          DAST._IType _9286___mcc_h438 = _source303.dtor_element;
          DAST._IType _source346 = _8325___mcc_h1;
          if (_source346.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9287___mcc_h442 = _source346.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9288___mcc_h443 = _source346.dtor_typeArgs;
            DAST._IResolvedType _9289___mcc_h444 = _source346.dtor_resolved;
            DAST._IResolvedType _source347 = _9289___mcc_h444;
            if (_source347.is_Datatype) {
              DAST._IDatatypeType _9290___mcc_h448 = _source347.dtor_datatypeType;
              {
                RAST._IType _9291_fromTpeGen;
                RAST._IType _out4456;
                _out4456 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9291_fromTpeGen = _out4456;
                RAST._IType _9292_toTpeGen;
                RAST._IType _out4457;
                _out4457 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9292_toTpeGen = _out4457;
                RAST._IExpr _9293_recursiveGen;
                DCOMPUTF16._IOwnership _9294_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9295_recIdents;
                RAST._IExpr _out4458;
                DCOMPUTF16._IOwnership _out4459;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4460;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4458, out _out4459, out _out4460);
                _9293_recursiveGen = _out4458;
                _9294_recOwned = _out4459;
                _9295_recIdents = _out4460;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9293_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9291_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9292_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4461;
                DCOMPUTF16._IOwnership _out4462;
                DCOMPUTF16.COMP.FromOwnership(r, _9294_recOwned, expectedOwnership, out _out4461, out _out4462);
                r = _out4461;
                resultingOwnership = _out4462;
                readIdents = _9295_recIdents;
              }
            } else if (_source347.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9296___mcc_h450 = _source347.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9297___mcc_h451 = _source347.dtor_attributes;
              {
                RAST._IType _9298_fromTpeGen;
                RAST._IType _out4463;
                _out4463 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9298_fromTpeGen = _out4463;
                RAST._IType _9299_toTpeGen;
                RAST._IType _out4464;
                _out4464 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9299_toTpeGen = _out4464;
                RAST._IExpr _9300_recursiveGen;
                DCOMPUTF16._IOwnership _9301_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9302_recIdents;
                RAST._IExpr _out4465;
                DCOMPUTF16._IOwnership _out4466;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4467;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4465, out _out4466, out _out4467);
                _9300_recursiveGen = _out4465;
                _9301_recOwned = _out4466;
                _9302_recIdents = _out4467;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9300_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9298_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9299_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4468;
                DCOMPUTF16._IOwnership _out4469;
                DCOMPUTF16.COMP.FromOwnership(r, _9301_recOwned, expectedOwnership, out _out4468, out _out4469);
                r = _out4468;
                resultingOwnership = _out4469;
                readIdents = _9302_recIdents;
              }
            } else {
              DAST._IType _9303___mcc_h454 = _source347.dtor_baseType;
              DAST._INewtypeRange _9304___mcc_h455 = _source347.dtor_range;
              bool _9305___mcc_h456 = _source347.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9306___mcc_h457 = _source347.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9307_attributes = _9306___mcc_h457;
              bool _9308_erase = _9305___mcc_h456;
              DAST._INewtypeRange _9309_range = _9304___mcc_h455;
              DAST._IType _9310_b = _9303___mcc_h454;
              {
                Std.Wrappers._IOption<RAST._IType> _9311_nativeToType;
                _9311_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9310_b, _9309_range);
                if (object.Equals(_8319_fromTpe, _9310_b)) {
                  RAST._IExpr _9312_recursiveGen;
                  DCOMPUTF16._IOwnership _9313_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9314_recIdents;
                  RAST._IExpr _out4470;
                  DCOMPUTF16._IOwnership _out4471;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4472;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4470, out _out4471, out _out4472);
                  _9312_recursiveGen = _out4470;
                  _9313_recOwned = _out4471;
                  _9314_recIdents = _out4472;
                  readIdents = _9314_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source348 = _9311_nativeToType;
                  if (_source348.is_None) {
                    if (_9308_erase) {
                      r = _9312_recursiveGen;
                    } else {
                      RAST._IType _9315_rhsType;
                      RAST._IType _out4473;
                      _out4473 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _9315_rhsType = _out4473;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9315_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9312_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4474;
                    DCOMPUTF16._IOwnership _out4475;
                    DCOMPUTF16.COMP.FromOwnership(r, _9313_recOwned, expectedOwnership, out _out4474, out _out4475);
                    r = _out4474;
                    resultingOwnership = _out4475;
                  } else {
                    RAST._IType _9316___mcc_h1535 = _source348.dtor_value;
                    RAST._IType _9317_v = _9316___mcc_h1535;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9312_recursiveGen, RAST.Expr.create_ExprFromType(_9317_v)));
                    RAST._IExpr _out4476;
                    DCOMPUTF16._IOwnership _out4477;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4476, out _out4477);
                    r = _out4476;
                    resultingOwnership = _out4477;
                  }
                } else {
                  if ((_9311_nativeToType).is_Some) {
                    DAST._IType _source349 = _8319_fromTpe;
                    if (_source349.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9318___mcc_h1536 = _source349.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9319___mcc_h1537 = _source349.dtor_typeArgs;
                      DAST._IResolvedType _9320___mcc_h1538 = _source349.dtor_resolved;
                      DAST._IResolvedType _source350 = _9320___mcc_h1538;
                      if (_source350.is_Datatype) {
                        DAST._IDatatypeType _9321___mcc_h1542 = _source350.dtor_datatypeType;
                      } else if (_source350.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9322___mcc_h1544 = _source350.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9323___mcc_h1545 = _source350.dtor_attributes;
                      } else {
                        DAST._IType _9324___mcc_h1548 = _source350.dtor_baseType;
                        DAST._INewtypeRange _9325___mcc_h1549 = _source350.dtor_range;
                        bool _9326___mcc_h1550 = _source350.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9327___mcc_h1551 = _source350.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9328_attributes0 = _9327___mcc_h1551;
                        bool _9329_erase0 = _9326___mcc_h1550;
                        DAST._INewtypeRange _9330_range0 = _9325___mcc_h1549;
                        DAST._IType _9331_b0 = _9324___mcc_h1548;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9332_nativeFromType;
                          _9332_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9331_b0, _9330_range0);
                          if ((_9332_nativeFromType).is_Some) {
                            RAST._IExpr _9333_recursiveGen;
                            DCOMPUTF16._IOwnership _9334_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9335_recIdents;
                            RAST._IExpr _out4478;
                            DCOMPUTF16._IOwnership _out4479;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4480;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4478, out _out4479, out _out4480);
                            _9333_recursiveGen = _out4478;
                            _9334_recOwned = _out4479;
                            _9335_recIdents = _out4480;
                            RAST._IExpr _out4481;
                            DCOMPUTF16._IOwnership _out4482;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9333_recursiveGen, (_9311_nativeToType).dtor_value), _9334_recOwned, expectedOwnership, out _out4481, out _out4482);
                            r = _out4481;
                            resultingOwnership = _out4482;
                            readIdents = _9335_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source349.is_Nullable) {
                      DAST._IType _9336___mcc_h1556 = _source349.dtor_Nullable_a0;
                    } else if (_source349.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9337___mcc_h1558 = _source349.dtor_Tuple_a0;
                    } else if (_source349.is_Array) {
                      DAST._IType _9338___mcc_h1560 = _source349.dtor_element;
                      BigInteger _9339___mcc_h1561 = _source349.dtor_dims;
                    } else if (_source349.is_Seq) {
                      DAST._IType _9340___mcc_h1564 = _source349.dtor_element;
                    } else if (_source349.is_Set) {
                      DAST._IType _9341___mcc_h1566 = _source349.dtor_element;
                    } else if (_source349.is_Multiset) {
                      DAST._IType _9342___mcc_h1568 = _source349.dtor_element;
                    } else if (_source349.is_Map) {
                      DAST._IType _9343___mcc_h1570 = _source349.dtor_key;
                      DAST._IType _9344___mcc_h1571 = _source349.dtor_value;
                    } else if (_source349.is_SetBuilder) {
                      DAST._IType _9345___mcc_h1574 = _source349.dtor_element;
                    } else if (_source349.is_MapBuilder) {
                      DAST._IType _9346___mcc_h1576 = _source349.dtor_key;
                      DAST._IType _9347___mcc_h1577 = _source349.dtor_value;
                    } else if (_source349.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9348___mcc_h1580 = _source349.dtor_args;
                      DAST._IType _9349___mcc_h1581 = _source349.dtor_result;
                    } else if (_source349.is_Primitive) {
                      DAST._IPrimitive _9350___mcc_h1584 = _source349.dtor_Primitive_a0;
                    } else if (_source349.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9351___mcc_h1586 = _source349.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9352___mcc_h1588 = _source349.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9353_recursiveGen;
                      DCOMPUTF16._IOwnership _9354_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9355_recIdents;
                      RAST._IExpr _out4483;
                      DCOMPUTF16._IOwnership _out4484;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4485;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4483, out _out4484, out _out4485);
                      _9353_recursiveGen = _out4483;
                      _9354_recOwned = _out4484;
                      _9355_recIdents = _out4485;
                      RAST._IExpr _out4486;
                      DCOMPUTF16._IOwnership _out4487;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9353_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9311_nativeToType).dtor_value), _9354_recOwned, expectedOwnership, out _out4486, out _out4487);
                      r = _out4486;
                      resultingOwnership = _out4487;
                      readIdents = _9355_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4488;
                  DCOMPUTF16._IOwnership _out4489;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4490;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _9310_b), _9310_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4488, out _out4489, out _out4490);
                  r = _out4488;
                  resultingOwnership = _out4489;
                  readIdents = _out4490;
                }
              }
            }
          } else if (_source346.is_Nullable) {
            DAST._IType _9356___mcc_h462 = _source346.dtor_Nullable_a0;
            {
              RAST._IExpr _9357_recursiveGen;
              DCOMPUTF16._IOwnership _9358_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9359_recIdents;
              RAST._IExpr _out4491;
              DCOMPUTF16._IOwnership _out4492;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4493;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4491, out _out4492, out _out4493);
              _9357_recursiveGen = _out4491;
              _9358_recOwned = _out4492;
              _9359_recIdents = _out4493;
              r = _9357_recursiveGen;
              if (object.Equals(_9358_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4494;
              DCOMPUTF16._IOwnership _out4495;
              DCOMPUTF16.COMP.FromOwnership(r, _9358_recOwned, expectedOwnership, out _out4494, out _out4495);
              r = _out4494;
              resultingOwnership = _out4495;
              readIdents = _9359_recIdents;
            }
          } else if (_source346.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9360___mcc_h464 = _source346.dtor_Tuple_a0;
            {
              RAST._IType _9361_fromTpeGen;
              RAST._IType _out4496;
              _out4496 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9361_fromTpeGen = _out4496;
              RAST._IType _9362_toTpeGen;
              RAST._IType _out4497;
              _out4497 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9362_toTpeGen = _out4497;
              RAST._IExpr _9363_recursiveGen;
              DCOMPUTF16._IOwnership _9364_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9365_recIdents;
              RAST._IExpr _out4498;
              DCOMPUTF16._IOwnership _out4499;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4500;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4498, out _out4499, out _out4500);
              _9363_recursiveGen = _out4498;
              _9364_recOwned = _out4499;
              _9365_recIdents = _out4500;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9363_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9361_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9362_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4501;
              DCOMPUTF16._IOwnership _out4502;
              DCOMPUTF16.COMP.FromOwnership(r, _9364_recOwned, expectedOwnership, out _out4501, out _out4502);
              r = _out4501;
              resultingOwnership = _out4502;
              readIdents = _9365_recIdents;
            }
          } else if (_source346.is_Array) {
            DAST._IType _9366___mcc_h466 = _source346.dtor_element;
            BigInteger _9367___mcc_h467 = _source346.dtor_dims;
            {
              RAST._IType _9368_fromTpeGen;
              RAST._IType _out4503;
              _out4503 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9368_fromTpeGen = _out4503;
              RAST._IType _9369_toTpeGen;
              RAST._IType _out4504;
              _out4504 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9369_toTpeGen = _out4504;
              RAST._IExpr _9370_recursiveGen;
              DCOMPUTF16._IOwnership _9371_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9372_recIdents;
              RAST._IExpr _out4505;
              DCOMPUTF16._IOwnership _out4506;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4507;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4505, out _out4506, out _out4507);
              _9370_recursiveGen = _out4505;
              _9371_recOwned = _out4506;
              _9372_recIdents = _out4507;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9370_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9368_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9369_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4508;
              DCOMPUTF16._IOwnership _out4509;
              DCOMPUTF16.COMP.FromOwnership(r, _9371_recOwned, expectedOwnership, out _out4508, out _out4509);
              r = _out4508;
              resultingOwnership = _out4509;
              readIdents = _9372_recIdents;
            }
          } else if (_source346.is_Seq) {
            DAST._IType _9373___mcc_h470 = _source346.dtor_element;
            {
              RAST._IType _9374_fromTpeGen;
              RAST._IType _out4510;
              _out4510 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9374_fromTpeGen = _out4510;
              RAST._IType _9375_toTpeGen;
              RAST._IType _out4511;
              _out4511 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9375_toTpeGen = _out4511;
              RAST._IExpr _9376_recursiveGen;
              DCOMPUTF16._IOwnership _9377_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9378_recIdents;
              RAST._IExpr _out4512;
              DCOMPUTF16._IOwnership _out4513;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4514;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4512, out _out4513, out _out4514);
              _9376_recursiveGen = _out4512;
              _9377_recOwned = _out4513;
              _9378_recIdents = _out4514;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9376_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9374_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9375_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4515;
              DCOMPUTF16._IOwnership _out4516;
              DCOMPUTF16.COMP.FromOwnership(r, _9377_recOwned, expectedOwnership, out _out4515, out _out4516);
              r = _out4515;
              resultingOwnership = _out4516;
              readIdents = _9378_recIdents;
            }
          } else if (_source346.is_Set) {
            DAST._IType _9379___mcc_h472 = _source346.dtor_element;
            {
              RAST._IType _9380_fromTpeGen;
              RAST._IType _out4517;
              _out4517 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9380_fromTpeGen = _out4517;
              RAST._IType _9381_toTpeGen;
              RAST._IType _out4518;
              _out4518 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9381_toTpeGen = _out4518;
              RAST._IExpr _9382_recursiveGen;
              DCOMPUTF16._IOwnership _9383_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9384_recIdents;
              RAST._IExpr _out4519;
              DCOMPUTF16._IOwnership _out4520;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4521;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4519, out _out4520, out _out4521);
              _9382_recursiveGen = _out4519;
              _9383_recOwned = _out4520;
              _9384_recIdents = _out4521;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9382_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9380_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9381_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4522;
              DCOMPUTF16._IOwnership _out4523;
              DCOMPUTF16.COMP.FromOwnership(r, _9383_recOwned, expectedOwnership, out _out4522, out _out4523);
              r = _out4522;
              resultingOwnership = _out4523;
              readIdents = _9384_recIdents;
            }
          } else if (_source346.is_Multiset) {
            DAST._IType _9385___mcc_h474 = _source346.dtor_element;
            {
              RAST._IType _9386_fromTpeGen;
              RAST._IType _out4524;
              _out4524 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9386_fromTpeGen = _out4524;
              RAST._IType _9387_toTpeGen;
              RAST._IType _out4525;
              _out4525 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9387_toTpeGen = _out4525;
              RAST._IExpr _9388_recursiveGen;
              DCOMPUTF16._IOwnership _9389_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9390_recIdents;
              RAST._IExpr _out4526;
              DCOMPUTF16._IOwnership _out4527;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4528;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4526, out _out4527, out _out4528);
              _9388_recursiveGen = _out4526;
              _9389_recOwned = _out4527;
              _9390_recIdents = _out4528;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9388_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9386_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9387_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4529;
              DCOMPUTF16._IOwnership _out4530;
              DCOMPUTF16.COMP.FromOwnership(r, _9389_recOwned, expectedOwnership, out _out4529, out _out4530);
              r = _out4529;
              resultingOwnership = _out4530;
              readIdents = _9390_recIdents;
            }
          } else if (_source346.is_Map) {
            DAST._IType _9391___mcc_h476 = _source346.dtor_key;
            DAST._IType _9392___mcc_h477 = _source346.dtor_value;
            {
              RAST._IType _9393_fromTpeGen;
              RAST._IType _out4531;
              _out4531 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9393_fromTpeGen = _out4531;
              RAST._IType _9394_toTpeGen;
              RAST._IType _out4532;
              _out4532 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9394_toTpeGen = _out4532;
              RAST._IExpr _9395_recursiveGen;
              DCOMPUTF16._IOwnership _9396_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9397_recIdents;
              RAST._IExpr _out4533;
              DCOMPUTF16._IOwnership _out4534;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4535;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4533, out _out4534, out _out4535);
              _9395_recursiveGen = _out4533;
              _9396_recOwned = _out4534;
              _9397_recIdents = _out4535;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9395_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9393_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9394_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4536;
              DCOMPUTF16._IOwnership _out4537;
              DCOMPUTF16.COMP.FromOwnership(r, _9396_recOwned, expectedOwnership, out _out4536, out _out4537);
              r = _out4536;
              resultingOwnership = _out4537;
              readIdents = _9397_recIdents;
            }
          } else if (_source346.is_SetBuilder) {
            DAST._IType _9398___mcc_h480 = _source346.dtor_element;
            {
              RAST._IType _9399_fromTpeGen;
              RAST._IType _out4538;
              _out4538 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9399_fromTpeGen = _out4538;
              RAST._IType _9400_toTpeGen;
              RAST._IType _out4539;
              _out4539 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9400_toTpeGen = _out4539;
              RAST._IExpr _9401_recursiveGen;
              DCOMPUTF16._IOwnership _9402_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9403_recIdents;
              RAST._IExpr _out4540;
              DCOMPUTF16._IOwnership _out4541;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4542;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4540, out _out4541, out _out4542);
              _9401_recursiveGen = _out4540;
              _9402_recOwned = _out4541;
              _9403_recIdents = _out4542;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9401_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9399_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9400_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4543;
              DCOMPUTF16._IOwnership _out4544;
              DCOMPUTF16.COMP.FromOwnership(r, _9402_recOwned, expectedOwnership, out _out4543, out _out4544);
              r = _out4543;
              resultingOwnership = _out4544;
              readIdents = _9403_recIdents;
            }
          } else if (_source346.is_MapBuilder) {
            DAST._IType _9404___mcc_h482 = _source346.dtor_key;
            DAST._IType _9405___mcc_h483 = _source346.dtor_value;
            {
              RAST._IType _9406_fromTpeGen;
              RAST._IType _out4545;
              _out4545 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9406_fromTpeGen = _out4545;
              RAST._IType _9407_toTpeGen;
              RAST._IType _out4546;
              _out4546 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9407_toTpeGen = _out4546;
              RAST._IExpr _9408_recursiveGen;
              DCOMPUTF16._IOwnership _9409_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9410_recIdents;
              RAST._IExpr _out4547;
              DCOMPUTF16._IOwnership _out4548;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4549;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4547, out _out4548, out _out4549);
              _9408_recursiveGen = _out4547;
              _9409_recOwned = _out4548;
              _9410_recIdents = _out4549;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9408_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9406_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9407_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4550;
              DCOMPUTF16._IOwnership _out4551;
              DCOMPUTF16.COMP.FromOwnership(r, _9409_recOwned, expectedOwnership, out _out4550, out _out4551);
              r = _out4550;
              resultingOwnership = _out4551;
              readIdents = _9410_recIdents;
            }
          } else if (_source346.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9411___mcc_h486 = _source346.dtor_args;
            DAST._IType _9412___mcc_h487 = _source346.dtor_result;
            {
              RAST._IType _9413_fromTpeGen;
              RAST._IType _out4552;
              _out4552 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9413_fromTpeGen = _out4552;
              RAST._IType _9414_toTpeGen;
              RAST._IType _out4553;
              _out4553 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9414_toTpeGen = _out4553;
              RAST._IExpr _9415_recursiveGen;
              DCOMPUTF16._IOwnership _9416_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9417_recIdents;
              RAST._IExpr _out4554;
              DCOMPUTF16._IOwnership _out4555;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4556;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4554, out _out4555, out _out4556);
              _9415_recursiveGen = _out4554;
              _9416_recOwned = _out4555;
              _9417_recIdents = _out4556;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9415_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9413_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9414_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4557;
              DCOMPUTF16._IOwnership _out4558;
              DCOMPUTF16.COMP.FromOwnership(r, _9416_recOwned, expectedOwnership, out _out4557, out _out4558);
              r = _out4557;
              resultingOwnership = _out4558;
              readIdents = _9417_recIdents;
            }
          } else if (_source346.is_Primitive) {
            DAST._IPrimitive _9418___mcc_h490 = _source346.dtor_Primitive_a0;
            {
              RAST._IType _9419_fromTpeGen;
              RAST._IType _out4559;
              _out4559 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9419_fromTpeGen = _out4559;
              RAST._IType _9420_toTpeGen;
              RAST._IType _out4560;
              _out4560 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9420_toTpeGen = _out4560;
              RAST._IExpr _9421_recursiveGen;
              DCOMPUTF16._IOwnership _9422_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9423_recIdents;
              RAST._IExpr _out4561;
              DCOMPUTF16._IOwnership _out4562;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4563;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4561, out _out4562, out _out4563);
              _9421_recursiveGen = _out4561;
              _9422_recOwned = _out4562;
              _9423_recIdents = _out4563;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9421_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9419_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9420_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4564;
              DCOMPUTF16._IOwnership _out4565;
              DCOMPUTF16.COMP.FromOwnership(r, _9422_recOwned, expectedOwnership, out _out4564, out _out4565);
              r = _out4564;
              resultingOwnership = _out4565;
              readIdents = _9423_recIdents;
            }
          } else if (_source346.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9424___mcc_h492 = _source346.dtor_Passthrough_a0;
            {
              RAST._IType _9425_fromTpeGen;
              RAST._IType _out4566;
              _out4566 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9425_fromTpeGen = _out4566;
              RAST._IType _9426_toTpeGen;
              RAST._IType _out4567;
              _out4567 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9426_toTpeGen = _out4567;
              RAST._IExpr _9427_recursiveGen;
              DCOMPUTF16._IOwnership _9428_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9429_recIdents;
              RAST._IExpr _out4568;
              DCOMPUTF16._IOwnership _out4569;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4570;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4568, out _out4569, out _out4570);
              _9427_recursiveGen = _out4568;
              _9428_recOwned = _out4569;
              _9429_recIdents = _out4570;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9427_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9425_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9426_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4571;
              DCOMPUTF16._IOwnership _out4572;
              DCOMPUTF16.COMP.FromOwnership(r, _9428_recOwned, expectedOwnership, out _out4571, out _out4572);
              r = _out4571;
              resultingOwnership = _out4572;
              readIdents = _9429_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9430___mcc_h494 = _source346.dtor_TypeArg_a0;
            {
              RAST._IType _9431_fromTpeGen;
              RAST._IType _out4573;
              _out4573 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9431_fromTpeGen = _out4573;
              RAST._IType _9432_toTpeGen;
              RAST._IType _out4574;
              _out4574 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9432_toTpeGen = _out4574;
              RAST._IExpr _9433_recursiveGen;
              DCOMPUTF16._IOwnership _9434_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9435_recIdents;
              RAST._IExpr _out4575;
              DCOMPUTF16._IOwnership _out4576;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4577;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4575, out _out4576, out _out4577);
              _9433_recursiveGen = _out4575;
              _9434_recOwned = _out4576;
              _9435_recIdents = _out4577;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9433_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9431_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9432_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4578;
              DCOMPUTF16._IOwnership _out4579;
              DCOMPUTF16.COMP.FromOwnership(r, _9434_recOwned, expectedOwnership, out _out4578, out _out4579);
              r = _out4578;
              resultingOwnership = _out4579;
              readIdents = _9435_recIdents;
            }
          }
        } else if (_source303.is_Set) {
          DAST._IType _9436___mcc_h496 = _source303.dtor_element;
          DAST._IType _source351 = _8325___mcc_h1;
          if (_source351.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9437___mcc_h500 = _source351.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9438___mcc_h501 = _source351.dtor_typeArgs;
            DAST._IResolvedType _9439___mcc_h502 = _source351.dtor_resolved;
            DAST._IResolvedType _source352 = _9439___mcc_h502;
            if (_source352.is_Datatype) {
              DAST._IDatatypeType _9440___mcc_h506 = _source352.dtor_datatypeType;
              {
                RAST._IType _9441_fromTpeGen;
                RAST._IType _out4580;
                _out4580 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9441_fromTpeGen = _out4580;
                RAST._IType _9442_toTpeGen;
                RAST._IType _out4581;
                _out4581 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9442_toTpeGen = _out4581;
                RAST._IExpr _9443_recursiveGen;
                DCOMPUTF16._IOwnership _9444_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9445_recIdents;
                RAST._IExpr _out4582;
                DCOMPUTF16._IOwnership _out4583;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4584;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4582, out _out4583, out _out4584);
                _9443_recursiveGen = _out4582;
                _9444_recOwned = _out4583;
                _9445_recIdents = _out4584;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9443_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9441_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9442_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4585;
                DCOMPUTF16._IOwnership _out4586;
                DCOMPUTF16.COMP.FromOwnership(r, _9444_recOwned, expectedOwnership, out _out4585, out _out4586);
                r = _out4585;
                resultingOwnership = _out4586;
                readIdents = _9445_recIdents;
              }
            } else if (_source352.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9446___mcc_h508 = _source352.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9447___mcc_h509 = _source352.dtor_attributes;
              {
                RAST._IType _9448_fromTpeGen;
                RAST._IType _out4587;
                _out4587 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9448_fromTpeGen = _out4587;
                RAST._IType _9449_toTpeGen;
                RAST._IType _out4588;
                _out4588 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9449_toTpeGen = _out4588;
                RAST._IExpr _9450_recursiveGen;
                DCOMPUTF16._IOwnership _9451_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9452_recIdents;
                RAST._IExpr _out4589;
                DCOMPUTF16._IOwnership _out4590;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4591;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4589, out _out4590, out _out4591);
                _9450_recursiveGen = _out4589;
                _9451_recOwned = _out4590;
                _9452_recIdents = _out4591;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9450_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9448_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9449_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4592;
                DCOMPUTF16._IOwnership _out4593;
                DCOMPUTF16.COMP.FromOwnership(r, _9451_recOwned, expectedOwnership, out _out4592, out _out4593);
                r = _out4592;
                resultingOwnership = _out4593;
                readIdents = _9452_recIdents;
              }
            } else {
              DAST._IType _9453___mcc_h512 = _source352.dtor_baseType;
              DAST._INewtypeRange _9454___mcc_h513 = _source352.dtor_range;
              bool _9455___mcc_h514 = _source352.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9456___mcc_h515 = _source352.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9457_attributes = _9456___mcc_h515;
              bool _9458_erase = _9455___mcc_h514;
              DAST._INewtypeRange _9459_range = _9454___mcc_h513;
              DAST._IType _9460_b = _9453___mcc_h512;
              {
                Std.Wrappers._IOption<RAST._IType> _9461_nativeToType;
                _9461_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9460_b, _9459_range);
                if (object.Equals(_8319_fromTpe, _9460_b)) {
                  RAST._IExpr _9462_recursiveGen;
                  DCOMPUTF16._IOwnership _9463_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9464_recIdents;
                  RAST._IExpr _out4594;
                  DCOMPUTF16._IOwnership _out4595;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4596;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4594, out _out4595, out _out4596);
                  _9462_recursiveGen = _out4594;
                  _9463_recOwned = _out4595;
                  _9464_recIdents = _out4596;
                  readIdents = _9464_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source353 = _9461_nativeToType;
                  if (_source353.is_None) {
                    if (_9458_erase) {
                      r = _9462_recursiveGen;
                    } else {
                      RAST._IType _9465_rhsType;
                      RAST._IType _out4597;
                      _out4597 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _9465_rhsType = _out4597;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9465_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9462_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4598;
                    DCOMPUTF16._IOwnership _out4599;
                    DCOMPUTF16.COMP.FromOwnership(r, _9463_recOwned, expectedOwnership, out _out4598, out _out4599);
                    r = _out4598;
                    resultingOwnership = _out4599;
                  } else {
                    RAST._IType _9466___mcc_h1590 = _source353.dtor_value;
                    RAST._IType _9467_v = _9466___mcc_h1590;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9462_recursiveGen, RAST.Expr.create_ExprFromType(_9467_v)));
                    RAST._IExpr _out4600;
                    DCOMPUTF16._IOwnership _out4601;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4600, out _out4601);
                    r = _out4600;
                    resultingOwnership = _out4601;
                  }
                } else {
                  if ((_9461_nativeToType).is_Some) {
                    DAST._IType _source354 = _8319_fromTpe;
                    if (_source354.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9468___mcc_h1591 = _source354.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9469___mcc_h1592 = _source354.dtor_typeArgs;
                      DAST._IResolvedType _9470___mcc_h1593 = _source354.dtor_resolved;
                      DAST._IResolvedType _source355 = _9470___mcc_h1593;
                      if (_source355.is_Datatype) {
                        DAST._IDatatypeType _9471___mcc_h1597 = _source355.dtor_datatypeType;
                      } else if (_source355.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9472___mcc_h1599 = _source355.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9473___mcc_h1600 = _source355.dtor_attributes;
                      } else {
                        DAST._IType _9474___mcc_h1603 = _source355.dtor_baseType;
                        DAST._INewtypeRange _9475___mcc_h1604 = _source355.dtor_range;
                        bool _9476___mcc_h1605 = _source355.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9477___mcc_h1606 = _source355.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9478_attributes0 = _9477___mcc_h1606;
                        bool _9479_erase0 = _9476___mcc_h1605;
                        DAST._INewtypeRange _9480_range0 = _9475___mcc_h1604;
                        DAST._IType _9481_b0 = _9474___mcc_h1603;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9482_nativeFromType;
                          _9482_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9481_b0, _9480_range0);
                          if ((_9482_nativeFromType).is_Some) {
                            RAST._IExpr _9483_recursiveGen;
                            DCOMPUTF16._IOwnership _9484_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9485_recIdents;
                            RAST._IExpr _out4602;
                            DCOMPUTF16._IOwnership _out4603;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4604;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4602, out _out4603, out _out4604);
                            _9483_recursiveGen = _out4602;
                            _9484_recOwned = _out4603;
                            _9485_recIdents = _out4604;
                            RAST._IExpr _out4605;
                            DCOMPUTF16._IOwnership _out4606;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9483_recursiveGen, (_9461_nativeToType).dtor_value), _9484_recOwned, expectedOwnership, out _out4605, out _out4606);
                            r = _out4605;
                            resultingOwnership = _out4606;
                            readIdents = _9485_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source354.is_Nullable) {
                      DAST._IType _9486___mcc_h1611 = _source354.dtor_Nullable_a0;
                    } else if (_source354.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9487___mcc_h1613 = _source354.dtor_Tuple_a0;
                    } else if (_source354.is_Array) {
                      DAST._IType _9488___mcc_h1615 = _source354.dtor_element;
                      BigInteger _9489___mcc_h1616 = _source354.dtor_dims;
                    } else if (_source354.is_Seq) {
                      DAST._IType _9490___mcc_h1619 = _source354.dtor_element;
                    } else if (_source354.is_Set) {
                      DAST._IType _9491___mcc_h1621 = _source354.dtor_element;
                    } else if (_source354.is_Multiset) {
                      DAST._IType _9492___mcc_h1623 = _source354.dtor_element;
                    } else if (_source354.is_Map) {
                      DAST._IType _9493___mcc_h1625 = _source354.dtor_key;
                      DAST._IType _9494___mcc_h1626 = _source354.dtor_value;
                    } else if (_source354.is_SetBuilder) {
                      DAST._IType _9495___mcc_h1629 = _source354.dtor_element;
                    } else if (_source354.is_MapBuilder) {
                      DAST._IType _9496___mcc_h1631 = _source354.dtor_key;
                      DAST._IType _9497___mcc_h1632 = _source354.dtor_value;
                    } else if (_source354.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9498___mcc_h1635 = _source354.dtor_args;
                      DAST._IType _9499___mcc_h1636 = _source354.dtor_result;
                    } else if (_source354.is_Primitive) {
                      DAST._IPrimitive _9500___mcc_h1639 = _source354.dtor_Primitive_a0;
                    } else if (_source354.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9501___mcc_h1641 = _source354.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9502___mcc_h1643 = _source354.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9503_recursiveGen;
                      DCOMPUTF16._IOwnership _9504_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9505_recIdents;
                      RAST._IExpr _out4607;
                      DCOMPUTF16._IOwnership _out4608;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4609;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4607, out _out4608, out _out4609);
                      _9503_recursiveGen = _out4607;
                      _9504_recOwned = _out4608;
                      _9505_recIdents = _out4609;
                      RAST._IExpr _out4610;
                      DCOMPUTF16._IOwnership _out4611;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9503_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9461_nativeToType).dtor_value), _9504_recOwned, expectedOwnership, out _out4610, out _out4611);
                      r = _out4610;
                      resultingOwnership = _out4611;
                      readIdents = _9505_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4612;
                  DCOMPUTF16._IOwnership _out4613;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4614;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _9460_b), _9460_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4612, out _out4613, out _out4614);
                  r = _out4612;
                  resultingOwnership = _out4613;
                  readIdents = _out4614;
                }
              }
            }
          } else if (_source351.is_Nullable) {
            DAST._IType _9506___mcc_h520 = _source351.dtor_Nullable_a0;
            {
              RAST._IExpr _9507_recursiveGen;
              DCOMPUTF16._IOwnership _9508_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9509_recIdents;
              RAST._IExpr _out4615;
              DCOMPUTF16._IOwnership _out4616;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4617;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4615, out _out4616, out _out4617);
              _9507_recursiveGen = _out4615;
              _9508_recOwned = _out4616;
              _9509_recIdents = _out4617;
              r = _9507_recursiveGen;
              if (object.Equals(_9508_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4618;
              DCOMPUTF16._IOwnership _out4619;
              DCOMPUTF16.COMP.FromOwnership(r, _9508_recOwned, expectedOwnership, out _out4618, out _out4619);
              r = _out4618;
              resultingOwnership = _out4619;
              readIdents = _9509_recIdents;
            }
          } else if (_source351.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9510___mcc_h522 = _source351.dtor_Tuple_a0;
            {
              RAST._IType _9511_fromTpeGen;
              RAST._IType _out4620;
              _out4620 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9511_fromTpeGen = _out4620;
              RAST._IType _9512_toTpeGen;
              RAST._IType _out4621;
              _out4621 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9512_toTpeGen = _out4621;
              RAST._IExpr _9513_recursiveGen;
              DCOMPUTF16._IOwnership _9514_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9515_recIdents;
              RAST._IExpr _out4622;
              DCOMPUTF16._IOwnership _out4623;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4624;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4622, out _out4623, out _out4624);
              _9513_recursiveGen = _out4622;
              _9514_recOwned = _out4623;
              _9515_recIdents = _out4624;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9513_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9511_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9512_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4625;
              DCOMPUTF16._IOwnership _out4626;
              DCOMPUTF16.COMP.FromOwnership(r, _9514_recOwned, expectedOwnership, out _out4625, out _out4626);
              r = _out4625;
              resultingOwnership = _out4626;
              readIdents = _9515_recIdents;
            }
          } else if (_source351.is_Array) {
            DAST._IType _9516___mcc_h524 = _source351.dtor_element;
            BigInteger _9517___mcc_h525 = _source351.dtor_dims;
            {
              RAST._IType _9518_fromTpeGen;
              RAST._IType _out4627;
              _out4627 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9518_fromTpeGen = _out4627;
              RAST._IType _9519_toTpeGen;
              RAST._IType _out4628;
              _out4628 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9519_toTpeGen = _out4628;
              RAST._IExpr _9520_recursiveGen;
              DCOMPUTF16._IOwnership _9521_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9522_recIdents;
              RAST._IExpr _out4629;
              DCOMPUTF16._IOwnership _out4630;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4631;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4629, out _out4630, out _out4631);
              _9520_recursiveGen = _out4629;
              _9521_recOwned = _out4630;
              _9522_recIdents = _out4631;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9520_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9518_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9519_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4632;
              DCOMPUTF16._IOwnership _out4633;
              DCOMPUTF16.COMP.FromOwnership(r, _9521_recOwned, expectedOwnership, out _out4632, out _out4633);
              r = _out4632;
              resultingOwnership = _out4633;
              readIdents = _9522_recIdents;
            }
          } else if (_source351.is_Seq) {
            DAST._IType _9523___mcc_h528 = _source351.dtor_element;
            {
              RAST._IType _9524_fromTpeGen;
              RAST._IType _out4634;
              _out4634 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9524_fromTpeGen = _out4634;
              RAST._IType _9525_toTpeGen;
              RAST._IType _out4635;
              _out4635 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9525_toTpeGen = _out4635;
              RAST._IExpr _9526_recursiveGen;
              DCOMPUTF16._IOwnership _9527_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9528_recIdents;
              RAST._IExpr _out4636;
              DCOMPUTF16._IOwnership _out4637;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4638;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4636, out _out4637, out _out4638);
              _9526_recursiveGen = _out4636;
              _9527_recOwned = _out4637;
              _9528_recIdents = _out4638;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9526_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9524_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9525_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4639;
              DCOMPUTF16._IOwnership _out4640;
              DCOMPUTF16.COMP.FromOwnership(r, _9527_recOwned, expectedOwnership, out _out4639, out _out4640);
              r = _out4639;
              resultingOwnership = _out4640;
              readIdents = _9528_recIdents;
            }
          } else if (_source351.is_Set) {
            DAST._IType _9529___mcc_h530 = _source351.dtor_element;
            {
              RAST._IType _9530_fromTpeGen;
              RAST._IType _out4641;
              _out4641 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9530_fromTpeGen = _out4641;
              RAST._IType _9531_toTpeGen;
              RAST._IType _out4642;
              _out4642 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9531_toTpeGen = _out4642;
              RAST._IExpr _9532_recursiveGen;
              DCOMPUTF16._IOwnership _9533_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9534_recIdents;
              RAST._IExpr _out4643;
              DCOMPUTF16._IOwnership _out4644;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4645;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4643, out _out4644, out _out4645);
              _9532_recursiveGen = _out4643;
              _9533_recOwned = _out4644;
              _9534_recIdents = _out4645;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9532_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9530_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9531_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4646;
              DCOMPUTF16._IOwnership _out4647;
              DCOMPUTF16.COMP.FromOwnership(r, _9533_recOwned, expectedOwnership, out _out4646, out _out4647);
              r = _out4646;
              resultingOwnership = _out4647;
              readIdents = _9534_recIdents;
            }
          } else if (_source351.is_Multiset) {
            DAST._IType _9535___mcc_h532 = _source351.dtor_element;
            {
              RAST._IType _9536_fromTpeGen;
              RAST._IType _out4648;
              _out4648 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9536_fromTpeGen = _out4648;
              RAST._IType _9537_toTpeGen;
              RAST._IType _out4649;
              _out4649 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9537_toTpeGen = _out4649;
              RAST._IExpr _9538_recursiveGen;
              DCOMPUTF16._IOwnership _9539_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9540_recIdents;
              RAST._IExpr _out4650;
              DCOMPUTF16._IOwnership _out4651;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4652;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4650, out _out4651, out _out4652);
              _9538_recursiveGen = _out4650;
              _9539_recOwned = _out4651;
              _9540_recIdents = _out4652;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9538_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9536_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9537_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4653;
              DCOMPUTF16._IOwnership _out4654;
              DCOMPUTF16.COMP.FromOwnership(r, _9539_recOwned, expectedOwnership, out _out4653, out _out4654);
              r = _out4653;
              resultingOwnership = _out4654;
              readIdents = _9540_recIdents;
            }
          } else if (_source351.is_Map) {
            DAST._IType _9541___mcc_h534 = _source351.dtor_key;
            DAST._IType _9542___mcc_h535 = _source351.dtor_value;
            {
              RAST._IType _9543_fromTpeGen;
              RAST._IType _out4655;
              _out4655 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9543_fromTpeGen = _out4655;
              RAST._IType _9544_toTpeGen;
              RAST._IType _out4656;
              _out4656 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9544_toTpeGen = _out4656;
              RAST._IExpr _9545_recursiveGen;
              DCOMPUTF16._IOwnership _9546_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9547_recIdents;
              RAST._IExpr _out4657;
              DCOMPUTF16._IOwnership _out4658;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4659;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4657, out _out4658, out _out4659);
              _9545_recursiveGen = _out4657;
              _9546_recOwned = _out4658;
              _9547_recIdents = _out4659;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9545_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9543_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9544_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4660;
              DCOMPUTF16._IOwnership _out4661;
              DCOMPUTF16.COMP.FromOwnership(r, _9546_recOwned, expectedOwnership, out _out4660, out _out4661);
              r = _out4660;
              resultingOwnership = _out4661;
              readIdents = _9547_recIdents;
            }
          } else if (_source351.is_SetBuilder) {
            DAST._IType _9548___mcc_h538 = _source351.dtor_element;
            {
              RAST._IType _9549_fromTpeGen;
              RAST._IType _out4662;
              _out4662 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9549_fromTpeGen = _out4662;
              RAST._IType _9550_toTpeGen;
              RAST._IType _out4663;
              _out4663 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9550_toTpeGen = _out4663;
              RAST._IExpr _9551_recursiveGen;
              DCOMPUTF16._IOwnership _9552_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9553_recIdents;
              RAST._IExpr _out4664;
              DCOMPUTF16._IOwnership _out4665;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4666;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4664, out _out4665, out _out4666);
              _9551_recursiveGen = _out4664;
              _9552_recOwned = _out4665;
              _9553_recIdents = _out4666;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9551_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9549_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9550_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4667;
              DCOMPUTF16._IOwnership _out4668;
              DCOMPUTF16.COMP.FromOwnership(r, _9552_recOwned, expectedOwnership, out _out4667, out _out4668);
              r = _out4667;
              resultingOwnership = _out4668;
              readIdents = _9553_recIdents;
            }
          } else if (_source351.is_MapBuilder) {
            DAST._IType _9554___mcc_h540 = _source351.dtor_key;
            DAST._IType _9555___mcc_h541 = _source351.dtor_value;
            {
              RAST._IType _9556_fromTpeGen;
              RAST._IType _out4669;
              _out4669 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9556_fromTpeGen = _out4669;
              RAST._IType _9557_toTpeGen;
              RAST._IType _out4670;
              _out4670 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9557_toTpeGen = _out4670;
              RAST._IExpr _9558_recursiveGen;
              DCOMPUTF16._IOwnership _9559_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9560_recIdents;
              RAST._IExpr _out4671;
              DCOMPUTF16._IOwnership _out4672;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4673;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4671, out _out4672, out _out4673);
              _9558_recursiveGen = _out4671;
              _9559_recOwned = _out4672;
              _9560_recIdents = _out4673;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9558_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9556_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9557_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4674;
              DCOMPUTF16._IOwnership _out4675;
              DCOMPUTF16.COMP.FromOwnership(r, _9559_recOwned, expectedOwnership, out _out4674, out _out4675);
              r = _out4674;
              resultingOwnership = _out4675;
              readIdents = _9560_recIdents;
            }
          } else if (_source351.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9561___mcc_h544 = _source351.dtor_args;
            DAST._IType _9562___mcc_h545 = _source351.dtor_result;
            {
              RAST._IType _9563_fromTpeGen;
              RAST._IType _out4676;
              _out4676 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9563_fromTpeGen = _out4676;
              RAST._IType _9564_toTpeGen;
              RAST._IType _out4677;
              _out4677 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9564_toTpeGen = _out4677;
              RAST._IExpr _9565_recursiveGen;
              DCOMPUTF16._IOwnership _9566_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9567_recIdents;
              RAST._IExpr _out4678;
              DCOMPUTF16._IOwnership _out4679;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4680;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4678, out _out4679, out _out4680);
              _9565_recursiveGen = _out4678;
              _9566_recOwned = _out4679;
              _9567_recIdents = _out4680;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9565_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9563_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9564_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4681;
              DCOMPUTF16._IOwnership _out4682;
              DCOMPUTF16.COMP.FromOwnership(r, _9566_recOwned, expectedOwnership, out _out4681, out _out4682);
              r = _out4681;
              resultingOwnership = _out4682;
              readIdents = _9567_recIdents;
            }
          } else if (_source351.is_Primitive) {
            DAST._IPrimitive _9568___mcc_h548 = _source351.dtor_Primitive_a0;
            {
              RAST._IType _9569_fromTpeGen;
              RAST._IType _out4683;
              _out4683 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9569_fromTpeGen = _out4683;
              RAST._IType _9570_toTpeGen;
              RAST._IType _out4684;
              _out4684 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9570_toTpeGen = _out4684;
              RAST._IExpr _9571_recursiveGen;
              DCOMPUTF16._IOwnership _9572_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9573_recIdents;
              RAST._IExpr _out4685;
              DCOMPUTF16._IOwnership _out4686;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4687;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4685, out _out4686, out _out4687);
              _9571_recursiveGen = _out4685;
              _9572_recOwned = _out4686;
              _9573_recIdents = _out4687;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9571_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9569_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9570_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4688;
              DCOMPUTF16._IOwnership _out4689;
              DCOMPUTF16.COMP.FromOwnership(r, _9572_recOwned, expectedOwnership, out _out4688, out _out4689);
              r = _out4688;
              resultingOwnership = _out4689;
              readIdents = _9573_recIdents;
            }
          } else if (_source351.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9574___mcc_h550 = _source351.dtor_Passthrough_a0;
            {
              RAST._IType _9575_fromTpeGen;
              RAST._IType _out4690;
              _out4690 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9575_fromTpeGen = _out4690;
              RAST._IType _9576_toTpeGen;
              RAST._IType _out4691;
              _out4691 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9576_toTpeGen = _out4691;
              RAST._IExpr _9577_recursiveGen;
              DCOMPUTF16._IOwnership _9578_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9579_recIdents;
              RAST._IExpr _out4692;
              DCOMPUTF16._IOwnership _out4693;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4694;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4692, out _out4693, out _out4694);
              _9577_recursiveGen = _out4692;
              _9578_recOwned = _out4693;
              _9579_recIdents = _out4694;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9577_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9575_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9576_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4695;
              DCOMPUTF16._IOwnership _out4696;
              DCOMPUTF16.COMP.FromOwnership(r, _9578_recOwned, expectedOwnership, out _out4695, out _out4696);
              r = _out4695;
              resultingOwnership = _out4696;
              readIdents = _9579_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9580___mcc_h552 = _source351.dtor_TypeArg_a0;
            {
              RAST._IType _9581_fromTpeGen;
              RAST._IType _out4697;
              _out4697 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9581_fromTpeGen = _out4697;
              RAST._IType _9582_toTpeGen;
              RAST._IType _out4698;
              _out4698 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9582_toTpeGen = _out4698;
              RAST._IExpr _9583_recursiveGen;
              DCOMPUTF16._IOwnership _9584_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9585_recIdents;
              RAST._IExpr _out4699;
              DCOMPUTF16._IOwnership _out4700;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4701;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4699, out _out4700, out _out4701);
              _9583_recursiveGen = _out4699;
              _9584_recOwned = _out4700;
              _9585_recIdents = _out4701;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9583_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9581_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9582_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4702;
              DCOMPUTF16._IOwnership _out4703;
              DCOMPUTF16.COMP.FromOwnership(r, _9584_recOwned, expectedOwnership, out _out4702, out _out4703);
              r = _out4702;
              resultingOwnership = _out4703;
              readIdents = _9585_recIdents;
            }
          }
        } else if (_source303.is_Multiset) {
          DAST._IType _9586___mcc_h554 = _source303.dtor_element;
          DAST._IType _source356 = _8325___mcc_h1;
          if (_source356.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9587___mcc_h558 = _source356.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9588___mcc_h559 = _source356.dtor_typeArgs;
            DAST._IResolvedType _9589___mcc_h560 = _source356.dtor_resolved;
            DAST._IResolvedType _source357 = _9589___mcc_h560;
            if (_source357.is_Datatype) {
              DAST._IDatatypeType _9590___mcc_h564 = _source357.dtor_datatypeType;
              {
                RAST._IType _9591_fromTpeGen;
                RAST._IType _out4704;
                _out4704 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9591_fromTpeGen = _out4704;
                RAST._IType _9592_toTpeGen;
                RAST._IType _out4705;
                _out4705 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9592_toTpeGen = _out4705;
                RAST._IExpr _9593_recursiveGen;
                DCOMPUTF16._IOwnership _9594_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9595_recIdents;
                RAST._IExpr _out4706;
                DCOMPUTF16._IOwnership _out4707;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4708;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4706, out _out4707, out _out4708);
                _9593_recursiveGen = _out4706;
                _9594_recOwned = _out4707;
                _9595_recIdents = _out4708;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9593_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9591_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9592_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4709;
                DCOMPUTF16._IOwnership _out4710;
                DCOMPUTF16.COMP.FromOwnership(r, _9594_recOwned, expectedOwnership, out _out4709, out _out4710);
                r = _out4709;
                resultingOwnership = _out4710;
                readIdents = _9595_recIdents;
              }
            } else if (_source357.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9596___mcc_h566 = _source357.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9597___mcc_h567 = _source357.dtor_attributes;
              {
                RAST._IType _9598_fromTpeGen;
                RAST._IType _out4711;
                _out4711 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9598_fromTpeGen = _out4711;
                RAST._IType _9599_toTpeGen;
                RAST._IType _out4712;
                _out4712 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9599_toTpeGen = _out4712;
                RAST._IExpr _9600_recursiveGen;
                DCOMPUTF16._IOwnership _9601_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9602_recIdents;
                RAST._IExpr _out4713;
                DCOMPUTF16._IOwnership _out4714;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4715;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4713, out _out4714, out _out4715);
                _9600_recursiveGen = _out4713;
                _9601_recOwned = _out4714;
                _9602_recIdents = _out4715;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9600_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9598_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9599_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4716;
                DCOMPUTF16._IOwnership _out4717;
                DCOMPUTF16.COMP.FromOwnership(r, _9601_recOwned, expectedOwnership, out _out4716, out _out4717);
                r = _out4716;
                resultingOwnership = _out4717;
                readIdents = _9602_recIdents;
              }
            } else {
              DAST._IType _9603___mcc_h570 = _source357.dtor_baseType;
              DAST._INewtypeRange _9604___mcc_h571 = _source357.dtor_range;
              bool _9605___mcc_h572 = _source357.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9606___mcc_h573 = _source357.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9607_attributes = _9606___mcc_h573;
              bool _9608_erase = _9605___mcc_h572;
              DAST._INewtypeRange _9609_range = _9604___mcc_h571;
              DAST._IType _9610_b = _9603___mcc_h570;
              {
                Std.Wrappers._IOption<RAST._IType> _9611_nativeToType;
                _9611_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9610_b, _9609_range);
                if (object.Equals(_8319_fromTpe, _9610_b)) {
                  RAST._IExpr _9612_recursiveGen;
                  DCOMPUTF16._IOwnership _9613_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9614_recIdents;
                  RAST._IExpr _out4718;
                  DCOMPUTF16._IOwnership _out4719;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4720;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4718, out _out4719, out _out4720);
                  _9612_recursiveGen = _out4718;
                  _9613_recOwned = _out4719;
                  _9614_recIdents = _out4720;
                  readIdents = _9614_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source358 = _9611_nativeToType;
                  if (_source358.is_None) {
                    if (_9608_erase) {
                      r = _9612_recursiveGen;
                    } else {
                      RAST._IType _9615_rhsType;
                      RAST._IType _out4721;
                      _out4721 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _9615_rhsType = _out4721;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9615_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9612_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4722;
                    DCOMPUTF16._IOwnership _out4723;
                    DCOMPUTF16.COMP.FromOwnership(r, _9613_recOwned, expectedOwnership, out _out4722, out _out4723);
                    r = _out4722;
                    resultingOwnership = _out4723;
                  } else {
                    RAST._IType _9616___mcc_h1645 = _source358.dtor_value;
                    RAST._IType _9617_v = _9616___mcc_h1645;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9612_recursiveGen, RAST.Expr.create_ExprFromType(_9617_v)));
                    RAST._IExpr _out4724;
                    DCOMPUTF16._IOwnership _out4725;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4724, out _out4725);
                    r = _out4724;
                    resultingOwnership = _out4725;
                  }
                } else {
                  if ((_9611_nativeToType).is_Some) {
                    DAST._IType _source359 = _8319_fromTpe;
                    if (_source359.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9618___mcc_h1646 = _source359.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9619___mcc_h1647 = _source359.dtor_typeArgs;
                      DAST._IResolvedType _9620___mcc_h1648 = _source359.dtor_resolved;
                      DAST._IResolvedType _source360 = _9620___mcc_h1648;
                      if (_source360.is_Datatype) {
                        DAST._IDatatypeType _9621___mcc_h1652 = _source360.dtor_datatypeType;
                      } else if (_source360.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9622___mcc_h1654 = _source360.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9623___mcc_h1655 = _source360.dtor_attributes;
                      } else {
                        DAST._IType _9624___mcc_h1658 = _source360.dtor_baseType;
                        DAST._INewtypeRange _9625___mcc_h1659 = _source360.dtor_range;
                        bool _9626___mcc_h1660 = _source360.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9627___mcc_h1661 = _source360.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9628_attributes0 = _9627___mcc_h1661;
                        bool _9629_erase0 = _9626___mcc_h1660;
                        DAST._INewtypeRange _9630_range0 = _9625___mcc_h1659;
                        DAST._IType _9631_b0 = _9624___mcc_h1658;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9632_nativeFromType;
                          _9632_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9631_b0, _9630_range0);
                          if ((_9632_nativeFromType).is_Some) {
                            RAST._IExpr _9633_recursiveGen;
                            DCOMPUTF16._IOwnership _9634_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9635_recIdents;
                            RAST._IExpr _out4726;
                            DCOMPUTF16._IOwnership _out4727;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4728;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4726, out _out4727, out _out4728);
                            _9633_recursiveGen = _out4726;
                            _9634_recOwned = _out4727;
                            _9635_recIdents = _out4728;
                            RAST._IExpr _out4729;
                            DCOMPUTF16._IOwnership _out4730;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9633_recursiveGen, (_9611_nativeToType).dtor_value), _9634_recOwned, expectedOwnership, out _out4729, out _out4730);
                            r = _out4729;
                            resultingOwnership = _out4730;
                            readIdents = _9635_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source359.is_Nullable) {
                      DAST._IType _9636___mcc_h1666 = _source359.dtor_Nullable_a0;
                    } else if (_source359.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9637___mcc_h1668 = _source359.dtor_Tuple_a0;
                    } else if (_source359.is_Array) {
                      DAST._IType _9638___mcc_h1670 = _source359.dtor_element;
                      BigInteger _9639___mcc_h1671 = _source359.dtor_dims;
                    } else if (_source359.is_Seq) {
                      DAST._IType _9640___mcc_h1674 = _source359.dtor_element;
                    } else if (_source359.is_Set) {
                      DAST._IType _9641___mcc_h1676 = _source359.dtor_element;
                    } else if (_source359.is_Multiset) {
                      DAST._IType _9642___mcc_h1678 = _source359.dtor_element;
                    } else if (_source359.is_Map) {
                      DAST._IType _9643___mcc_h1680 = _source359.dtor_key;
                      DAST._IType _9644___mcc_h1681 = _source359.dtor_value;
                    } else if (_source359.is_SetBuilder) {
                      DAST._IType _9645___mcc_h1684 = _source359.dtor_element;
                    } else if (_source359.is_MapBuilder) {
                      DAST._IType _9646___mcc_h1686 = _source359.dtor_key;
                      DAST._IType _9647___mcc_h1687 = _source359.dtor_value;
                    } else if (_source359.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9648___mcc_h1690 = _source359.dtor_args;
                      DAST._IType _9649___mcc_h1691 = _source359.dtor_result;
                    } else if (_source359.is_Primitive) {
                      DAST._IPrimitive _9650___mcc_h1694 = _source359.dtor_Primitive_a0;
                    } else if (_source359.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9651___mcc_h1696 = _source359.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9652___mcc_h1698 = _source359.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9653_recursiveGen;
                      DCOMPUTF16._IOwnership _9654_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9655_recIdents;
                      RAST._IExpr _out4731;
                      DCOMPUTF16._IOwnership _out4732;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4733;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4731, out _out4732, out _out4733);
                      _9653_recursiveGen = _out4731;
                      _9654_recOwned = _out4732;
                      _9655_recIdents = _out4733;
                      RAST._IExpr _out4734;
                      DCOMPUTF16._IOwnership _out4735;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9653_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9611_nativeToType).dtor_value), _9654_recOwned, expectedOwnership, out _out4734, out _out4735);
                      r = _out4734;
                      resultingOwnership = _out4735;
                      readIdents = _9655_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4736;
                  DCOMPUTF16._IOwnership _out4737;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4738;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _9610_b), _9610_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4736, out _out4737, out _out4738);
                  r = _out4736;
                  resultingOwnership = _out4737;
                  readIdents = _out4738;
                }
              }
            }
          } else if (_source356.is_Nullable) {
            DAST._IType _9656___mcc_h578 = _source356.dtor_Nullable_a0;
            {
              RAST._IExpr _9657_recursiveGen;
              DCOMPUTF16._IOwnership _9658_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9659_recIdents;
              RAST._IExpr _out4739;
              DCOMPUTF16._IOwnership _out4740;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4741;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4739, out _out4740, out _out4741);
              _9657_recursiveGen = _out4739;
              _9658_recOwned = _out4740;
              _9659_recIdents = _out4741;
              r = _9657_recursiveGen;
              if (object.Equals(_9658_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4742;
              DCOMPUTF16._IOwnership _out4743;
              DCOMPUTF16.COMP.FromOwnership(r, _9658_recOwned, expectedOwnership, out _out4742, out _out4743);
              r = _out4742;
              resultingOwnership = _out4743;
              readIdents = _9659_recIdents;
            }
          } else if (_source356.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9660___mcc_h580 = _source356.dtor_Tuple_a0;
            {
              RAST._IType _9661_fromTpeGen;
              RAST._IType _out4744;
              _out4744 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9661_fromTpeGen = _out4744;
              RAST._IType _9662_toTpeGen;
              RAST._IType _out4745;
              _out4745 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9662_toTpeGen = _out4745;
              RAST._IExpr _9663_recursiveGen;
              DCOMPUTF16._IOwnership _9664_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9665_recIdents;
              RAST._IExpr _out4746;
              DCOMPUTF16._IOwnership _out4747;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4748;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4746, out _out4747, out _out4748);
              _9663_recursiveGen = _out4746;
              _9664_recOwned = _out4747;
              _9665_recIdents = _out4748;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9663_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9661_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9662_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4749;
              DCOMPUTF16._IOwnership _out4750;
              DCOMPUTF16.COMP.FromOwnership(r, _9664_recOwned, expectedOwnership, out _out4749, out _out4750);
              r = _out4749;
              resultingOwnership = _out4750;
              readIdents = _9665_recIdents;
            }
          } else if (_source356.is_Array) {
            DAST._IType _9666___mcc_h582 = _source356.dtor_element;
            BigInteger _9667___mcc_h583 = _source356.dtor_dims;
            {
              RAST._IType _9668_fromTpeGen;
              RAST._IType _out4751;
              _out4751 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9668_fromTpeGen = _out4751;
              RAST._IType _9669_toTpeGen;
              RAST._IType _out4752;
              _out4752 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9669_toTpeGen = _out4752;
              RAST._IExpr _9670_recursiveGen;
              DCOMPUTF16._IOwnership _9671_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9672_recIdents;
              RAST._IExpr _out4753;
              DCOMPUTF16._IOwnership _out4754;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4755;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4753, out _out4754, out _out4755);
              _9670_recursiveGen = _out4753;
              _9671_recOwned = _out4754;
              _9672_recIdents = _out4755;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9670_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9668_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9669_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4756;
              DCOMPUTF16._IOwnership _out4757;
              DCOMPUTF16.COMP.FromOwnership(r, _9671_recOwned, expectedOwnership, out _out4756, out _out4757);
              r = _out4756;
              resultingOwnership = _out4757;
              readIdents = _9672_recIdents;
            }
          } else if (_source356.is_Seq) {
            DAST._IType _9673___mcc_h586 = _source356.dtor_element;
            {
              RAST._IType _9674_fromTpeGen;
              RAST._IType _out4758;
              _out4758 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9674_fromTpeGen = _out4758;
              RAST._IType _9675_toTpeGen;
              RAST._IType _out4759;
              _out4759 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9675_toTpeGen = _out4759;
              RAST._IExpr _9676_recursiveGen;
              DCOMPUTF16._IOwnership _9677_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9678_recIdents;
              RAST._IExpr _out4760;
              DCOMPUTF16._IOwnership _out4761;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4762;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4760, out _out4761, out _out4762);
              _9676_recursiveGen = _out4760;
              _9677_recOwned = _out4761;
              _9678_recIdents = _out4762;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9676_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9674_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9675_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4763;
              DCOMPUTF16._IOwnership _out4764;
              DCOMPUTF16.COMP.FromOwnership(r, _9677_recOwned, expectedOwnership, out _out4763, out _out4764);
              r = _out4763;
              resultingOwnership = _out4764;
              readIdents = _9678_recIdents;
            }
          } else if (_source356.is_Set) {
            DAST._IType _9679___mcc_h588 = _source356.dtor_element;
            {
              RAST._IType _9680_fromTpeGen;
              RAST._IType _out4765;
              _out4765 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9680_fromTpeGen = _out4765;
              RAST._IType _9681_toTpeGen;
              RAST._IType _out4766;
              _out4766 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9681_toTpeGen = _out4766;
              RAST._IExpr _9682_recursiveGen;
              DCOMPUTF16._IOwnership _9683_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9684_recIdents;
              RAST._IExpr _out4767;
              DCOMPUTF16._IOwnership _out4768;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4769;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4767, out _out4768, out _out4769);
              _9682_recursiveGen = _out4767;
              _9683_recOwned = _out4768;
              _9684_recIdents = _out4769;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9682_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9680_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9681_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4770;
              DCOMPUTF16._IOwnership _out4771;
              DCOMPUTF16.COMP.FromOwnership(r, _9683_recOwned, expectedOwnership, out _out4770, out _out4771);
              r = _out4770;
              resultingOwnership = _out4771;
              readIdents = _9684_recIdents;
            }
          } else if (_source356.is_Multiset) {
            DAST._IType _9685___mcc_h590 = _source356.dtor_element;
            {
              RAST._IType _9686_fromTpeGen;
              RAST._IType _out4772;
              _out4772 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9686_fromTpeGen = _out4772;
              RAST._IType _9687_toTpeGen;
              RAST._IType _out4773;
              _out4773 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9687_toTpeGen = _out4773;
              RAST._IExpr _9688_recursiveGen;
              DCOMPUTF16._IOwnership _9689_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9690_recIdents;
              RAST._IExpr _out4774;
              DCOMPUTF16._IOwnership _out4775;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4776;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4774, out _out4775, out _out4776);
              _9688_recursiveGen = _out4774;
              _9689_recOwned = _out4775;
              _9690_recIdents = _out4776;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9688_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9686_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9687_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4777;
              DCOMPUTF16._IOwnership _out4778;
              DCOMPUTF16.COMP.FromOwnership(r, _9689_recOwned, expectedOwnership, out _out4777, out _out4778);
              r = _out4777;
              resultingOwnership = _out4778;
              readIdents = _9690_recIdents;
            }
          } else if (_source356.is_Map) {
            DAST._IType _9691___mcc_h592 = _source356.dtor_key;
            DAST._IType _9692___mcc_h593 = _source356.dtor_value;
            {
              RAST._IType _9693_fromTpeGen;
              RAST._IType _out4779;
              _out4779 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9693_fromTpeGen = _out4779;
              RAST._IType _9694_toTpeGen;
              RAST._IType _out4780;
              _out4780 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9694_toTpeGen = _out4780;
              RAST._IExpr _9695_recursiveGen;
              DCOMPUTF16._IOwnership _9696_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9697_recIdents;
              RAST._IExpr _out4781;
              DCOMPUTF16._IOwnership _out4782;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4783;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4781, out _out4782, out _out4783);
              _9695_recursiveGen = _out4781;
              _9696_recOwned = _out4782;
              _9697_recIdents = _out4783;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9695_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9693_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9694_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4784;
              DCOMPUTF16._IOwnership _out4785;
              DCOMPUTF16.COMP.FromOwnership(r, _9696_recOwned, expectedOwnership, out _out4784, out _out4785);
              r = _out4784;
              resultingOwnership = _out4785;
              readIdents = _9697_recIdents;
            }
          } else if (_source356.is_SetBuilder) {
            DAST._IType _9698___mcc_h596 = _source356.dtor_element;
            {
              RAST._IType _9699_fromTpeGen;
              RAST._IType _out4786;
              _out4786 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9699_fromTpeGen = _out4786;
              RAST._IType _9700_toTpeGen;
              RAST._IType _out4787;
              _out4787 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9700_toTpeGen = _out4787;
              RAST._IExpr _9701_recursiveGen;
              DCOMPUTF16._IOwnership _9702_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9703_recIdents;
              RAST._IExpr _out4788;
              DCOMPUTF16._IOwnership _out4789;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4790;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4788, out _out4789, out _out4790);
              _9701_recursiveGen = _out4788;
              _9702_recOwned = _out4789;
              _9703_recIdents = _out4790;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9701_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9699_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9700_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4791;
              DCOMPUTF16._IOwnership _out4792;
              DCOMPUTF16.COMP.FromOwnership(r, _9702_recOwned, expectedOwnership, out _out4791, out _out4792);
              r = _out4791;
              resultingOwnership = _out4792;
              readIdents = _9703_recIdents;
            }
          } else if (_source356.is_MapBuilder) {
            DAST._IType _9704___mcc_h598 = _source356.dtor_key;
            DAST._IType _9705___mcc_h599 = _source356.dtor_value;
            {
              RAST._IType _9706_fromTpeGen;
              RAST._IType _out4793;
              _out4793 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9706_fromTpeGen = _out4793;
              RAST._IType _9707_toTpeGen;
              RAST._IType _out4794;
              _out4794 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9707_toTpeGen = _out4794;
              RAST._IExpr _9708_recursiveGen;
              DCOMPUTF16._IOwnership _9709_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9710_recIdents;
              RAST._IExpr _out4795;
              DCOMPUTF16._IOwnership _out4796;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4797;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4795, out _out4796, out _out4797);
              _9708_recursiveGen = _out4795;
              _9709_recOwned = _out4796;
              _9710_recIdents = _out4797;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9708_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9706_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9707_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4798;
              DCOMPUTF16._IOwnership _out4799;
              DCOMPUTF16.COMP.FromOwnership(r, _9709_recOwned, expectedOwnership, out _out4798, out _out4799);
              r = _out4798;
              resultingOwnership = _out4799;
              readIdents = _9710_recIdents;
            }
          } else if (_source356.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9711___mcc_h602 = _source356.dtor_args;
            DAST._IType _9712___mcc_h603 = _source356.dtor_result;
            {
              RAST._IType _9713_fromTpeGen;
              RAST._IType _out4800;
              _out4800 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9713_fromTpeGen = _out4800;
              RAST._IType _9714_toTpeGen;
              RAST._IType _out4801;
              _out4801 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9714_toTpeGen = _out4801;
              RAST._IExpr _9715_recursiveGen;
              DCOMPUTF16._IOwnership _9716_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9717_recIdents;
              RAST._IExpr _out4802;
              DCOMPUTF16._IOwnership _out4803;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4804;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4802, out _out4803, out _out4804);
              _9715_recursiveGen = _out4802;
              _9716_recOwned = _out4803;
              _9717_recIdents = _out4804;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9715_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9713_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9714_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4805;
              DCOMPUTF16._IOwnership _out4806;
              DCOMPUTF16.COMP.FromOwnership(r, _9716_recOwned, expectedOwnership, out _out4805, out _out4806);
              r = _out4805;
              resultingOwnership = _out4806;
              readIdents = _9717_recIdents;
            }
          } else if (_source356.is_Primitive) {
            DAST._IPrimitive _9718___mcc_h606 = _source356.dtor_Primitive_a0;
            {
              RAST._IType _9719_fromTpeGen;
              RAST._IType _out4807;
              _out4807 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9719_fromTpeGen = _out4807;
              RAST._IType _9720_toTpeGen;
              RAST._IType _out4808;
              _out4808 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9720_toTpeGen = _out4808;
              RAST._IExpr _9721_recursiveGen;
              DCOMPUTF16._IOwnership _9722_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9723_recIdents;
              RAST._IExpr _out4809;
              DCOMPUTF16._IOwnership _out4810;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4811;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4809, out _out4810, out _out4811);
              _9721_recursiveGen = _out4809;
              _9722_recOwned = _out4810;
              _9723_recIdents = _out4811;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9721_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9719_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9720_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4812;
              DCOMPUTF16._IOwnership _out4813;
              DCOMPUTF16.COMP.FromOwnership(r, _9722_recOwned, expectedOwnership, out _out4812, out _out4813);
              r = _out4812;
              resultingOwnership = _out4813;
              readIdents = _9723_recIdents;
            }
          } else if (_source356.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9724___mcc_h608 = _source356.dtor_Passthrough_a0;
            {
              RAST._IType _9725_fromTpeGen;
              RAST._IType _out4814;
              _out4814 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9725_fromTpeGen = _out4814;
              RAST._IType _9726_toTpeGen;
              RAST._IType _out4815;
              _out4815 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9726_toTpeGen = _out4815;
              RAST._IExpr _9727_recursiveGen;
              DCOMPUTF16._IOwnership _9728_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9729_recIdents;
              RAST._IExpr _out4816;
              DCOMPUTF16._IOwnership _out4817;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4818;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4816, out _out4817, out _out4818);
              _9727_recursiveGen = _out4816;
              _9728_recOwned = _out4817;
              _9729_recIdents = _out4818;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9727_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9725_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9726_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4819;
              DCOMPUTF16._IOwnership _out4820;
              DCOMPUTF16.COMP.FromOwnership(r, _9728_recOwned, expectedOwnership, out _out4819, out _out4820);
              r = _out4819;
              resultingOwnership = _out4820;
              readIdents = _9729_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9730___mcc_h610 = _source356.dtor_TypeArg_a0;
            {
              RAST._IType _9731_fromTpeGen;
              RAST._IType _out4821;
              _out4821 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9731_fromTpeGen = _out4821;
              RAST._IType _9732_toTpeGen;
              RAST._IType _out4822;
              _out4822 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9732_toTpeGen = _out4822;
              RAST._IExpr _9733_recursiveGen;
              DCOMPUTF16._IOwnership _9734_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9735_recIdents;
              RAST._IExpr _out4823;
              DCOMPUTF16._IOwnership _out4824;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4825;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4823, out _out4824, out _out4825);
              _9733_recursiveGen = _out4823;
              _9734_recOwned = _out4824;
              _9735_recIdents = _out4825;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9733_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9731_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9732_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4826;
              DCOMPUTF16._IOwnership _out4827;
              DCOMPUTF16.COMP.FromOwnership(r, _9734_recOwned, expectedOwnership, out _out4826, out _out4827);
              r = _out4826;
              resultingOwnership = _out4827;
              readIdents = _9735_recIdents;
            }
          }
        } else if (_source303.is_Map) {
          DAST._IType _9736___mcc_h612 = _source303.dtor_key;
          DAST._IType _9737___mcc_h613 = _source303.dtor_value;
          DAST._IType _source361 = _8325___mcc_h1;
          if (_source361.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9738___mcc_h620 = _source361.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9739___mcc_h621 = _source361.dtor_typeArgs;
            DAST._IResolvedType _9740___mcc_h622 = _source361.dtor_resolved;
            DAST._IResolvedType _source362 = _9740___mcc_h622;
            if (_source362.is_Datatype) {
              DAST._IDatatypeType _9741___mcc_h626 = _source362.dtor_datatypeType;
              {
                RAST._IType _9742_fromTpeGen;
                RAST._IType _out4828;
                _out4828 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9742_fromTpeGen = _out4828;
                RAST._IType _9743_toTpeGen;
                RAST._IType _out4829;
                _out4829 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9743_toTpeGen = _out4829;
                RAST._IExpr _9744_recursiveGen;
                DCOMPUTF16._IOwnership _9745_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9746_recIdents;
                RAST._IExpr _out4830;
                DCOMPUTF16._IOwnership _out4831;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4832;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4830, out _out4831, out _out4832);
                _9744_recursiveGen = _out4830;
                _9745_recOwned = _out4831;
                _9746_recIdents = _out4832;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9744_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9742_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9743_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4833;
                DCOMPUTF16._IOwnership _out4834;
                DCOMPUTF16.COMP.FromOwnership(r, _9745_recOwned, expectedOwnership, out _out4833, out _out4834);
                r = _out4833;
                resultingOwnership = _out4834;
                readIdents = _9746_recIdents;
              }
            } else if (_source362.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9747___mcc_h628 = _source362.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9748___mcc_h629 = _source362.dtor_attributes;
              {
                RAST._IType _9749_fromTpeGen;
                RAST._IType _out4835;
                _out4835 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9749_fromTpeGen = _out4835;
                RAST._IType _9750_toTpeGen;
                RAST._IType _out4836;
                _out4836 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9750_toTpeGen = _out4836;
                RAST._IExpr _9751_recursiveGen;
                DCOMPUTF16._IOwnership _9752_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9753_recIdents;
                RAST._IExpr _out4837;
                DCOMPUTF16._IOwnership _out4838;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4839;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4837, out _out4838, out _out4839);
                _9751_recursiveGen = _out4837;
                _9752_recOwned = _out4838;
                _9753_recIdents = _out4839;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9751_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9749_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9750_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4840;
                DCOMPUTF16._IOwnership _out4841;
                DCOMPUTF16.COMP.FromOwnership(r, _9752_recOwned, expectedOwnership, out _out4840, out _out4841);
                r = _out4840;
                resultingOwnership = _out4841;
                readIdents = _9753_recIdents;
              }
            } else {
              DAST._IType _9754___mcc_h632 = _source362.dtor_baseType;
              DAST._INewtypeRange _9755___mcc_h633 = _source362.dtor_range;
              bool _9756___mcc_h634 = _source362.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9757___mcc_h635 = _source362.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9758_attributes = _9757___mcc_h635;
              bool _9759_erase = _9756___mcc_h634;
              DAST._INewtypeRange _9760_range = _9755___mcc_h633;
              DAST._IType _9761_b = _9754___mcc_h632;
              {
                Std.Wrappers._IOption<RAST._IType> _9762_nativeToType;
                _9762_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9761_b, _9760_range);
                if (object.Equals(_8319_fromTpe, _9761_b)) {
                  RAST._IExpr _9763_recursiveGen;
                  DCOMPUTF16._IOwnership _9764_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9765_recIdents;
                  RAST._IExpr _out4842;
                  DCOMPUTF16._IOwnership _out4843;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4844;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4842, out _out4843, out _out4844);
                  _9763_recursiveGen = _out4842;
                  _9764_recOwned = _out4843;
                  _9765_recIdents = _out4844;
                  readIdents = _9765_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source363 = _9762_nativeToType;
                  if (_source363.is_None) {
                    if (_9759_erase) {
                      r = _9763_recursiveGen;
                    } else {
                      RAST._IType _9766_rhsType;
                      RAST._IType _out4845;
                      _out4845 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _9766_rhsType = _out4845;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9766_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9763_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4846;
                    DCOMPUTF16._IOwnership _out4847;
                    DCOMPUTF16.COMP.FromOwnership(r, _9764_recOwned, expectedOwnership, out _out4846, out _out4847);
                    r = _out4846;
                    resultingOwnership = _out4847;
                  } else {
                    RAST._IType _9767___mcc_h1700 = _source363.dtor_value;
                    RAST._IType _9768_v = _9767___mcc_h1700;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9763_recursiveGen, RAST.Expr.create_ExprFromType(_9768_v)));
                    RAST._IExpr _out4848;
                    DCOMPUTF16._IOwnership _out4849;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4848, out _out4849);
                    r = _out4848;
                    resultingOwnership = _out4849;
                  }
                } else {
                  if ((_9762_nativeToType).is_Some) {
                    DAST._IType _source364 = _8319_fromTpe;
                    if (_source364.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9769___mcc_h1701 = _source364.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9770___mcc_h1702 = _source364.dtor_typeArgs;
                      DAST._IResolvedType _9771___mcc_h1703 = _source364.dtor_resolved;
                      DAST._IResolvedType _source365 = _9771___mcc_h1703;
                      if (_source365.is_Datatype) {
                        DAST._IDatatypeType _9772___mcc_h1707 = _source365.dtor_datatypeType;
                      } else if (_source365.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9773___mcc_h1709 = _source365.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9774___mcc_h1710 = _source365.dtor_attributes;
                      } else {
                        DAST._IType _9775___mcc_h1713 = _source365.dtor_baseType;
                        DAST._INewtypeRange _9776___mcc_h1714 = _source365.dtor_range;
                        bool _9777___mcc_h1715 = _source365.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9778___mcc_h1716 = _source365.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9779_attributes0 = _9778___mcc_h1716;
                        bool _9780_erase0 = _9777___mcc_h1715;
                        DAST._INewtypeRange _9781_range0 = _9776___mcc_h1714;
                        DAST._IType _9782_b0 = _9775___mcc_h1713;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9783_nativeFromType;
                          _9783_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9782_b0, _9781_range0);
                          if ((_9783_nativeFromType).is_Some) {
                            RAST._IExpr _9784_recursiveGen;
                            DCOMPUTF16._IOwnership _9785_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9786_recIdents;
                            RAST._IExpr _out4850;
                            DCOMPUTF16._IOwnership _out4851;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4852;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4850, out _out4851, out _out4852);
                            _9784_recursiveGen = _out4850;
                            _9785_recOwned = _out4851;
                            _9786_recIdents = _out4852;
                            RAST._IExpr _out4853;
                            DCOMPUTF16._IOwnership _out4854;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9784_recursiveGen, (_9762_nativeToType).dtor_value), _9785_recOwned, expectedOwnership, out _out4853, out _out4854);
                            r = _out4853;
                            resultingOwnership = _out4854;
                            readIdents = _9786_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source364.is_Nullable) {
                      DAST._IType _9787___mcc_h1721 = _source364.dtor_Nullable_a0;
                    } else if (_source364.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9788___mcc_h1723 = _source364.dtor_Tuple_a0;
                    } else if (_source364.is_Array) {
                      DAST._IType _9789___mcc_h1725 = _source364.dtor_element;
                      BigInteger _9790___mcc_h1726 = _source364.dtor_dims;
                    } else if (_source364.is_Seq) {
                      DAST._IType _9791___mcc_h1729 = _source364.dtor_element;
                    } else if (_source364.is_Set) {
                      DAST._IType _9792___mcc_h1731 = _source364.dtor_element;
                    } else if (_source364.is_Multiset) {
                      DAST._IType _9793___mcc_h1733 = _source364.dtor_element;
                    } else if (_source364.is_Map) {
                      DAST._IType _9794___mcc_h1735 = _source364.dtor_key;
                      DAST._IType _9795___mcc_h1736 = _source364.dtor_value;
                    } else if (_source364.is_SetBuilder) {
                      DAST._IType _9796___mcc_h1739 = _source364.dtor_element;
                    } else if (_source364.is_MapBuilder) {
                      DAST._IType _9797___mcc_h1741 = _source364.dtor_key;
                      DAST._IType _9798___mcc_h1742 = _source364.dtor_value;
                    } else if (_source364.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9799___mcc_h1745 = _source364.dtor_args;
                      DAST._IType _9800___mcc_h1746 = _source364.dtor_result;
                    } else if (_source364.is_Primitive) {
                      DAST._IPrimitive _9801___mcc_h1749 = _source364.dtor_Primitive_a0;
                    } else if (_source364.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9802___mcc_h1751 = _source364.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9803___mcc_h1753 = _source364.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9804_recursiveGen;
                      DCOMPUTF16._IOwnership _9805_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9806_recIdents;
                      RAST._IExpr _out4855;
                      DCOMPUTF16._IOwnership _out4856;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4857;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4855, out _out4856, out _out4857);
                      _9804_recursiveGen = _out4855;
                      _9805_recOwned = _out4856;
                      _9806_recIdents = _out4857;
                      RAST._IExpr _out4858;
                      DCOMPUTF16._IOwnership _out4859;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9804_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9762_nativeToType).dtor_value), _9805_recOwned, expectedOwnership, out _out4858, out _out4859);
                      r = _out4858;
                      resultingOwnership = _out4859;
                      readIdents = _9806_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4860;
                  DCOMPUTF16._IOwnership _out4861;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4862;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _9761_b), _9761_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4860, out _out4861, out _out4862);
                  r = _out4860;
                  resultingOwnership = _out4861;
                  readIdents = _out4862;
                }
              }
            }
          } else if (_source361.is_Nullable) {
            DAST._IType _9807___mcc_h640 = _source361.dtor_Nullable_a0;
            {
              RAST._IExpr _9808_recursiveGen;
              DCOMPUTF16._IOwnership _9809_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9810_recIdents;
              RAST._IExpr _out4863;
              DCOMPUTF16._IOwnership _out4864;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4865;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4863, out _out4864, out _out4865);
              _9808_recursiveGen = _out4863;
              _9809_recOwned = _out4864;
              _9810_recIdents = _out4865;
              r = _9808_recursiveGen;
              if (object.Equals(_9809_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4866;
              DCOMPUTF16._IOwnership _out4867;
              DCOMPUTF16.COMP.FromOwnership(r, _9809_recOwned, expectedOwnership, out _out4866, out _out4867);
              r = _out4866;
              resultingOwnership = _out4867;
              readIdents = _9810_recIdents;
            }
          } else if (_source361.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9811___mcc_h642 = _source361.dtor_Tuple_a0;
            {
              RAST._IType _9812_fromTpeGen;
              RAST._IType _out4868;
              _out4868 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9812_fromTpeGen = _out4868;
              RAST._IType _9813_toTpeGen;
              RAST._IType _out4869;
              _out4869 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9813_toTpeGen = _out4869;
              RAST._IExpr _9814_recursiveGen;
              DCOMPUTF16._IOwnership _9815_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9816_recIdents;
              RAST._IExpr _out4870;
              DCOMPUTF16._IOwnership _out4871;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4872;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4870, out _out4871, out _out4872);
              _9814_recursiveGen = _out4870;
              _9815_recOwned = _out4871;
              _9816_recIdents = _out4872;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9814_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9812_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9813_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4873;
              DCOMPUTF16._IOwnership _out4874;
              DCOMPUTF16.COMP.FromOwnership(r, _9815_recOwned, expectedOwnership, out _out4873, out _out4874);
              r = _out4873;
              resultingOwnership = _out4874;
              readIdents = _9816_recIdents;
            }
          } else if (_source361.is_Array) {
            DAST._IType _9817___mcc_h644 = _source361.dtor_element;
            BigInteger _9818___mcc_h645 = _source361.dtor_dims;
            {
              RAST._IType _9819_fromTpeGen;
              RAST._IType _out4875;
              _out4875 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9819_fromTpeGen = _out4875;
              RAST._IType _9820_toTpeGen;
              RAST._IType _out4876;
              _out4876 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9820_toTpeGen = _out4876;
              RAST._IExpr _9821_recursiveGen;
              DCOMPUTF16._IOwnership _9822_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9823_recIdents;
              RAST._IExpr _out4877;
              DCOMPUTF16._IOwnership _out4878;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4879;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4877, out _out4878, out _out4879);
              _9821_recursiveGen = _out4877;
              _9822_recOwned = _out4878;
              _9823_recIdents = _out4879;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9821_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9819_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9820_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4880;
              DCOMPUTF16._IOwnership _out4881;
              DCOMPUTF16.COMP.FromOwnership(r, _9822_recOwned, expectedOwnership, out _out4880, out _out4881);
              r = _out4880;
              resultingOwnership = _out4881;
              readIdents = _9823_recIdents;
            }
          } else if (_source361.is_Seq) {
            DAST._IType _9824___mcc_h648 = _source361.dtor_element;
            {
              RAST._IType _9825_fromTpeGen;
              RAST._IType _out4882;
              _out4882 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9825_fromTpeGen = _out4882;
              RAST._IType _9826_toTpeGen;
              RAST._IType _out4883;
              _out4883 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9826_toTpeGen = _out4883;
              RAST._IExpr _9827_recursiveGen;
              DCOMPUTF16._IOwnership _9828_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9829_recIdents;
              RAST._IExpr _out4884;
              DCOMPUTF16._IOwnership _out4885;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4886;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4884, out _out4885, out _out4886);
              _9827_recursiveGen = _out4884;
              _9828_recOwned = _out4885;
              _9829_recIdents = _out4886;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9827_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9825_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9826_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4887;
              DCOMPUTF16._IOwnership _out4888;
              DCOMPUTF16.COMP.FromOwnership(r, _9828_recOwned, expectedOwnership, out _out4887, out _out4888);
              r = _out4887;
              resultingOwnership = _out4888;
              readIdents = _9829_recIdents;
            }
          } else if (_source361.is_Set) {
            DAST._IType _9830___mcc_h650 = _source361.dtor_element;
            {
              RAST._IType _9831_fromTpeGen;
              RAST._IType _out4889;
              _out4889 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9831_fromTpeGen = _out4889;
              RAST._IType _9832_toTpeGen;
              RAST._IType _out4890;
              _out4890 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9832_toTpeGen = _out4890;
              RAST._IExpr _9833_recursiveGen;
              DCOMPUTF16._IOwnership _9834_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9835_recIdents;
              RAST._IExpr _out4891;
              DCOMPUTF16._IOwnership _out4892;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4893;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4891, out _out4892, out _out4893);
              _9833_recursiveGen = _out4891;
              _9834_recOwned = _out4892;
              _9835_recIdents = _out4893;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9833_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9831_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9832_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4894;
              DCOMPUTF16._IOwnership _out4895;
              DCOMPUTF16.COMP.FromOwnership(r, _9834_recOwned, expectedOwnership, out _out4894, out _out4895);
              r = _out4894;
              resultingOwnership = _out4895;
              readIdents = _9835_recIdents;
            }
          } else if (_source361.is_Multiset) {
            DAST._IType _9836___mcc_h652 = _source361.dtor_element;
            {
              RAST._IType _9837_fromTpeGen;
              RAST._IType _out4896;
              _out4896 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9837_fromTpeGen = _out4896;
              RAST._IType _9838_toTpeGen;
              RAST._IType _out4897;
              _out4897 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9838_toTpeGen = _out4897;
              RAST._IExpr _9839_recursiveGen;
              DCOMPUTF16._IOwnership _9840_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9841_recIdents;
              RAST._IExpr _out4898;
              DCOMPUTF16._IOwnership _out4899;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4900;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4898, out _out4899, out _out4900);
              _9839_recursiveGen = _out4898;
              _9840_recOwned = _out4899;
              _9841_recIdents = _out4900;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9839_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9837_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9838_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4901;
              DCOMPUTF16._IOwnership _out4902;
              DCOMPUTF16.COMP.FromOwnership(r, _9840_recOwned, expectedOwnership, out _out4901, out _out4902);
              r = _out4901;
              resultingOwnership = _out4902;
              readIdents = _9841_recIdents;
            }
          } else if (_source361.is_Map) {
            DAST._IType _9842___mcc_h654 = _source361.dtor_key;
            DAST._IType _9843___mcc_h655 = _source361.dtor_value;
            {
              RAST._IType _9844_fromTpeGen;
              RAST._IType _out4903;
              _out4903 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9844_fromTpeGen = _out4903;
              RAST._IType _9845_toTpeGen;
              RAST._IType _out4904;
              _out4904 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9845_toTpeGen = _out4904;
              RAST._IExpr _9846_recursiveGen;
              DCOMPUTF16._IOwnership _9847_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9848_recIdents;
              RAST._IExpr _out4905;
              DCOMPUTF16._IOwnership _out4906;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4907;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4905, out _out4906, out _out4907);
              _9846_recursiveGen = _out4905;
              _9847_recOwned = _out4906;
              _9848_recIdents = _out4907;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9846_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9844_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9845_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4908;
              DCOMPUTF16._IOwnership _out4909;
              DCOMPUTF16.COMP.FromOwnership(r, _9847_recOwned, expectedOwnership, out _out4908, out _out4909);
              r = _out4908;
              resultingOwnership = _out4909;
              readIdents = _9848_recIdents;
            }
          } else if (_source361.is_SetBuilder) {
            DAST._IType _9849___mcc_h658 = _source361.dtor_element;
            {
              RAST._IType _9850_fromTpeGen;
              RAST._IType _out4910;
              _out4910 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9850_fromTpeGen = _out4910;
              RAST._IType _9851_toTpeGen;
              RAST._IType _out4911;
              _out4911 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9851_toTpeGen = _out4911;
              RAST._IExpr _9852_recursiveGen;
              DCOMPUTF16._IOwnership _9853_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9854_recIdents;
              RAST._IExpr _out4912;
              DCOMPUTF16._IOwnership _out4913;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4914;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4912, out _out4913, out _out4914);
              _9852_recursiveGen = _out4912;
              _9853_recOwned = _out4913;
              _9854_recIdents = _out4914;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9852_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9850_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9851_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4915;
              DCOMPUTF16._IOwnership _out4916;
              DCOMPUTF16.COMP.FromOwnership(r, _9853_recOwned, expectedOwnership, out _out4915, out _out4916);
              r = _out4915;
              resultingOwnership = _out4916;
              readIdents = _9854_recIdents;
            }
          } else if (_source361.is_MapBuilder) {
            DAST._IType _9855___mcc_h660 = _source361.dtor_key;
            DAST._IType _9856___mcc_h661 = _source361.dtor_value;
            {
              RAST._IType _9857_fromTpeGen;
              RAST._IType _out4917;
              _out4917 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9857_fromTpeGen = _out4917;
              RAST._IType _9858_toTpeGen;
              RAST._IType _out4918;
              _out4918 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9858_toTpeGen = _out4918;
              RAST._IExpr _9859_recursiveGen;
              DCOMPUTF16._IOwnership _9860_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9861_recIdents;
              RAST._IExpr _out4919;
              DCOMPUTF16._IOwnership _out4920;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4921;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4919, out _out4920, out _out4921);
              _9859_recursiveGen = _out4919;
              _9860_recOwned = _out4920;
              _9861_recIdents = _out4921;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9859_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9857_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9858_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4922;
              DCOMPUTF16._IOwnership _out4923;
              DCOMPUTF16.COMP.FromOwnership(r, _9860_recOwned, expectedOwnership, out _out4922, out _out4923);
              r = _out4922;
              resultingOwnership = _out4923;
              readIdents = _9861_recIdents;
            }
          } else if (_source361.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9862___mcc_h664 = _source361.dtor_args;
            DAST._IType _9863___mcc_h665 = _source361.dtor_result;
            {
              RAST._IType _9864_fromTpeGen;
              RAST._IType _out4924;
              _out4924 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9864_fromTpeGen = _out4924;
              RAST._IType _9865_toTpeGen;
              RAST._IType _out4925;
              _out4925 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9865_toTpeGen = _out4925;
              RAST._IExpr _9866_recursiveGen;
              DCOMPUTF16._IOwnership _9867_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9868_recIdents;
              RAST._IExpr _out4926;
              DCOMPUTF16._IOwnership _out4927;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4928;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4926, out _out4927, out _out4928);
              _9866_recursiveGen = _out4926;
              _9867_recOwned = _out4927;
              _9868_recIdents = _out4928;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9866_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9864_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9865_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4929;
              DCOMPUTF16._IOwnership _out4930;
              DCOMPUTF16.COMP.FromOwnership(r, _9867_recOwned, expectedOwnership, out _out4929, out _out4930);
              r = _out4929;
              resultingOwnership = _out4930;
              readIdents = _9868_recIdents;
            }
          } else if (_source361.is_Primitive) {
            DAST._IPrimitive _9869___mcc_h668 = _source361.dtor_Primitive_a0;
            {
              RAST._IType _9870_fromTpeGen;
              RAST._IType _out4931;
              _out4931 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9870_fromTpeGen = _out4931;
              RAST._IType _9871_toTpeGen;
              RAST._IType _out4932;
              _out4932 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9871_toTpeGen = _out4932;
              RAST._IExpr _9872_recursiveGen;
              DCOMPUTF16._IOwnership _9873_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9874_recIdents;
              RAST._IExpr _out4933;
              DCOMPUTF16._IOwnership _out4934;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4935;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4933, out _out4934, out _out4935);
              _9872_recursiveGen = _out4933;
              _9873_recOwned = _out4934;
              _9874_recIdents = _out4935;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9872_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9870_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9871_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4936;
              DCOMPUTF16._IOwnership _out4937;
              DCOMPUTF16.COMP.FromOwnership(r, _9873_recOwned, expectedOwnership, out _out4936, out _out4937);
              r = _out4936;
              resultingOwnership = _out4937;
              readIdents = _9874_recIdents;
            }
          } else if (_source361.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9875___mcc_h670 = _source361.dtor_Passthrough_a0;
            {
              RAST._IType _9876_fromTpeGen;
              RAST._IType _out4938;
              _out4938 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9876_fromTpeGen = _out4938;
              RAST._IType _9877_toTpeGen;
              RAST._IType _out4939;
              _out4939 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9877_toTpeGen = _out4939;
              RAST._IExpr _9878_recursiveGen;
              DCOMPUTF16._IOwnership _9879_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9880_recIdents;
              RAST._IExpr _out4940;
              DCOMPUTF16._IOwnership _out4941;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4942;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4940, out _out4941, out _out4942);
              _9878_recursiveGen = _out4940;
              _9879_recOwned = _out4941;
              _9880_recIdents = _out4942;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9878_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9876_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9877_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4943;
              DCOMPUTF16._IOwnership _out4944;
              DCOMPUTF16.COMP.FromOwnership(r, _9879_recOwned, expectedOwnership, out _out4943, out _out4944);
              r = _out4943;
              resultingOwnership = _out4944;
              readIdents = _9880_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9881___mcc_h672 = _source361.dtor_TypeArg_a0;
            {
              RAST._IType _9882_fromTpeGen;
              RAST._IType _out4945;
              _out4945 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9882_fromTpeGen = _out4945;
              RAST._IType _9883_toTpeGen;
              RAST._IType _out4946;
              _out4946 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9883_toTpeGen = _out4946;
              RAST._IExpr _9884_recursiveGen;
              DCOMPUTF16._IOwnership _9885_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9886_recIdents;
              RAST._IExpr _out4947;
              DCOMPUTF16._IOwnership _out4948;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4949;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4947, out _out4948, out _out4949);
              _9884_recursiveGen = _out4947;
              _9885_recOwned = _out4948;
              _9886_recIdents = _out4949;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9884_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9882_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9883_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4950;
              DCOMPUTF16._IOwnership _out4951;
              DCOMPUTF16.COMP.FromOwnership(r, _9885_recOwned, expectedOwnership, out _out4950, out _out4951);
              r = _out4950;
              resultingOwnership = _out4951;
              readIdents = _9886_recIdents;
            }
          }
        } else if (_source303.is_SetBuilder) {
          DAST._IType _9887___mcc_h674 = _source303.dtor_element;
          DAST._IType _source366 = _8325___mcc_h1;
          if (_source366.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9888___mcc_h678 = _source366.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9889___mcc_h679 = _source366.dtor_typeArgs;
            DAST._IResolvedType _9890___mcc_h680 = _source366.dtor_resolved;
            DAST._IResolvedType _source367 = _9890___mcc_h680;
            if (_source367.is_Datatype) {
              DAST._IDatatypeType _9891___mcc_h684 = _source367.dtor_datatypeType;
              {
                RAST._IType _9892_fromTpeGen;
                RAST._IType _out4952;
                _out4952 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9892_fromTpeGen = _out4952;
                RAST._IType _9893_toTpeGen;
                RAST._IType _out4953;
                _out4953 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9893_toTpeGen = _out4953;
                RAST._IExpr _9894_recursiveGen;
                DCOMPUTF16._IOwnership _9895_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9896_recIdents;
                RAST._IExpr _out4954;
                DCOMPUTF16._IOwnership _out4955;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4956;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4954, out _out4955, out _out4956);
                _9894_recursiveGen = _out4954;
                _9895_recOwned = _out4955;
                _9896_recIdents = _out4956;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9894_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9892_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9893_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4957;
                DCOMPUTF16._IOwnership _out4958;
                DCOMPUTF16.COMP.FromOwnership(r, _9895_recOwned, expectedOwnership, out _out4957, out _out4958);
                r = _out4957;
                resultingOwnership = _out4958;
                readIdents = _9896_recIdents;
              }
            } else if (_source367.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9897___mcc_h686 = _source367.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9898___mcc_h687 = _source367.dtor_attributes;
              {
                RAST._IType _9899_fromTpeGen;
                RAST._IType _out4959;
                _out4959 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _9899_fromTpeGen = _out4959;
                RAST._IType _9900_toTpeGen;
                RAST._IType _out4960;
                _out4960 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _9900_toTpeGen = _out4960;
                RAST._IExpr _9901_recursiveGen;
                DCOMPUTF16._IOwnership _9902_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9903_recIdents;
                RAST._IExpr _out4961;
                DCOMPUTF16._IOwnership _out4962;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4963;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4961, out _out4962, out _out4963);
                _9901_recursiveGen = _out4961;
                _9902_recOwned = _out4962;
                _9903_recIdents = _out4963;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9901_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9899_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9900_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4964;
                DCOMPUTF16._IOwnership _out4965;
                DCOMPUTF16.COMP.FromOwnership(r, _9902_recOwned, expectedOwnership, out _out4964, out _out4965);
                r = _out4964;
                resultingOwnership = _out4965;
                readIdents = _9903_recIdents;
              }
            } else {
              DAST._IType _9904___mcc_h690 = _source367.dtor_baseType;
              DAST._INewtypeRange _9905___mcc_h691 = _source367.dtor_range;
              bool _9906___mcc_h692 = _source367.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9907___mcc_h693 = _source367.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9908_attributes = _9907___mcc_h693;
              bool _9909_erase = _9906___mcc_h692;
              DAST._INewtypeRange _9910_range = _9905___mcc_h691;
              DAST._IType _9911_b = _9904___mcc_h690;
              {
                Std.Wrappers._IOption<RAST._IType> _9912_nativeToType;
                _9912_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9911_b, _9910_range);
                if (object.Equals(_8319_fromTpe, _9911_b)) {
                  RAST._IExpr _9913_recursiveGen;
                  DCOMPUTF16._IOwnership _9914_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9915_recIdents;
                  RAST._IExpr _out4966;
                  DCOMPUTF16._IOwnership _out4967;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4968;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4966, out _out4967, out _out4968);
                  _9913_recursiveGen = _out4966;
                  _9914_recOwned = _out4967;
                  _9915_recIdents = _out4968;
                  readIdents = _9915_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source368 = _9912_nativeToType;
                  if (_source368.is_None) {
                    if (_9909_erase) {
                      r = _9913_recursiveGen;
                    } else {
                      RAST._IType _9916_rhsType;
                      RAST._IType _out4969;
                      _out4969 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _9916_rhsType = _out4969;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9916_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9913_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4970;
                    DCOMPUTF16._IOwnership _out4971;
                    DCOMPUTF16.COMP.FromOwnership(r, _9914_recOwned, expectedOwnership, out _out4970, out _out4971);
                    r = _out4970;
                    resultingOwnership = _out4971;
                  } else {
                    RAST._IType _9917___mcc_h1755 = _source368.dtor_value;
                    RAST._IType _9918_v = _9917___mcc_h1755;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9913_recursiveGen, RAST.Expr.create_ExprFromType(_9918_v)));
                    RAST._IExpr _out4972;
                    DCOMPUTF16._IOwnership _out4973;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4972, out _out4973);
                    r = _out4972;
                    resultingOwnership = _out4973;
                  }
                } else {
                  if ((_9912_nativeToType).is_Some) {
                    DAST._IType _source369 = _8319_fromTpe;
                    if (_source369.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9919___mcc_h1756 = _source369.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9920___mcc_h1757 = _source369.dtor_typeArgs;
                      DAST._IResolvedType _9921___mcc_h1758 = _source369.dtor_resolved;
                      DAST._IResolvedType _source370 = _9921___mcc_h1758;
                      if (_source370.is_Datatype) {
                        DAST._IDatatypeType _9922___mcc_h1762 = _source370.dtor_datatypeType;
                      } else if (_source370.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9923___mcc_h1764 = _source370.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9924___mcc_h1765 = _source370.dtor_attributes;
                      } else {
                        DAST._IType _9925___mcc_h1768 = _source370.dtor_baseType;
                        DAST._INewtypeRange _9926___mcc_h1769 = _source370.dtor_range;
                        bool _9927___mcc_h1770 = _source370.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9928___mcc_h1771 = _source370.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9929_attributes0 = _9928___mcc_h1771;
                        bool _9930_erase0 = _9927___mcc_h1770;
                        DAST._INewtypeRange _9931_range0 = _9926___mcc_h1769;
                        DAST._IType _9932_b0 = _9925___mcc_h1768;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9933_nativeFromType;
                          _9933_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9932_b0, _9931_range0);
                          if ((_9933_nativeFromType).is_Some) {
                            RAST._IExpr _9934_recursiveGen;
                            DCOMPUTF16._IOwnership _9935_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9936_recIdents;
                            RAST._IExpr _out4974;
                            DCOMPUTF16._IOwnership _out4975;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4976;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4974, out _out4975, out _out4976);
                            _9934_recursiveGen = _out4974;
                            _9935_recOwned = _out4975;
                            _9936_recIdents = _out4976;
                            RAST._IExpr _out4977;
                            DCOMPUTF16._IOwnership _out4978;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9934_recursiveGen, (_9912_nativeToType).dtor_value), _9935_recOwned, expectedOwnership, out _out4977, out _out4978);
                            r = _out4977;
                            resultingOwnership = _out4978;
                            readIdents = _9936_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source369.is_Nullable) {
                      DAST._IType _9937___mcc_h1776 = _source369.dtor_Nullable_a0;
                    } else if (_source369.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9938___mcc_h1778 = _source369.dtor_Tuple_a0;
                    } else if (_source369.is_Array) {
                      DAST._IType _9939___mcc_h1780 = _source369.dtor_element;
                      BigInteger _9940___mcc_h1781 = _source369.dtor_dims;
                    } else if (_source369.is_Seq) {
                      DAST._IType _9941___mcc_h1784 = _source369.dtor_element;
                    } else if (_source369.is_Set) {
                      DAST._IType _9942___mcc_h1786 = _source369.dtor_element;
                    } else if (_source369.is_Multiset) {
                      DAST._IType _9943___mcc_h1788 = _source369.dtor_element;
                    } else if (_source369.is_Map) {
                      DAST._IType _9944___mcc_h1790 = _source369.dtor_key;
                      DAST._IType _9945___mcc_h1791 = _source369.dtor_value;
                    } else if (_source369.is_SetBuilder) {
                      DAST._IType _9946___mcc_h1794 = _source369.dtor_element;
                    } else if (_source369.is_MapBuilder) {
                      DAST._IType _9947___mcc_h1796 = _source369.dtor_key;
                      DAST._IType _9948___mcc_h1797 = _source369.dtor_value;
                    } else if (_source369.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9949___mcc_h1800 = _source369.dtor_args;
                      DAST._IType _9950___mcc_h1801 = _source369.dtor_result;
                    } else if (_source369.is_Primitive) {
                      DAST._IPrimitive _9951___mcc_h1804 = _source369.dtor_Primitive_a0;
                    } else if (_source369.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9952___mcc_h1806 = _source369.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9953___mcc_h1808 = _source369.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9954_recursiveGen;
                      DCOMPUTF16._IOwnership _9955_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9956_recIdents;
                      RAST._IExpr _out4979;
                      DCOMPUTF16._IOwnership _out4980;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4981;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4979, out _out4980, out _out4981);
                      _9954_recursiveGen = _out4979;
                      _9955_recOwned = _out4980;
                      _9956_recIdents = _out4981;
                      RAST._IExpr _out4982;
                      DCOMPUTF16._IOwnership _out4983;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9954_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9912_nativeToType).dtor_value), _9955_recOwned, expectedOwnership, out _out4982, out _out4983);
                      r = _out4982;
                      resultingOwnership = _out4983;
                      readIdents = _9956_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4984;
                  DCOMPUTF16._IOwnership _out4985;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4986;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _9911_b), _9911_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out4984, out _out4985, out _out4986);
                  r = _out4984;
                  resultingOwnership = _out4985;
                  readIdents = _out4986;
                }
              }
            }
          } else if (_source366.is_Nullable) {
            DAST._IType _9957___mcc_h698 = _source366.dtor_Nullable_a0;
            {
              RAST._IExpr _9958_recursiveGen;
              DCOMPUTF16._IOwnership _9959_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9960_recIdents;
              RAST._IExpr _out4987;
              DCOMPUTF16._IOwnership _out4988;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4989;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4987, out _out4988, out _out4989);
              _9958_recursiveGen = _out4987;
              _9959_recOwned = _out4988;
              _9960_recIdents = _out4989;
              r = _9958_recursiveGen;
              if (object.Equals(_9959_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4990;
              DCOMPUTF16._IOwnership _out4991;
              DCOMPUTF16.COMP.FromOwnership(r, _9959_recOwned, expectedOwnership, out _out4990, out _out4991);
              r = _out4990;
              resultingOwnership = _out4991;
              readIdents = _9960_recIdents;
            }
          } else if (_source366.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9961___mcc_h700 = _source366.dtor_Tuple_a0;
            {
              RAST._IType _9962_fromTpeGen;
              RAST._IType _out4992;
              _out4992 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9962_fromTpeGen = _out4992;
              RAST._IType _9963_toTpeGen;
              RAST._IType _out4993;
              _out4993 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9963_toTpeGen = _out4993;
              RAST._IExpr _9964_recursiveGen;
              DCOMPUTF16._IOwnership _9965_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9966_recIdents;
              RAST._IExpr _out4994;
              DCOMPUTF16._IOwnership _out4995;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4996;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out4994, out _out4995, out _out4996);
              _9964_recursiveGen = _out4994;
              _9965_recOwned = _out4995;
              _9966_recIdents = _out4996;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9964_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9962_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9963_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4997;
              DCOMPUTF16._IOwnership _out4998;
              DCOMPUTF16.COMP.FromOwnership(r, _9965_recOwned, expectedOwnership, out _out4997, out _out4998);
              r = _out4997;
              resultingOwnership = _out4998;
              readIdents = _9966_recIdents;
            }
          } else if (_source366.is_Array) {
            DAST._IType _9967___mcc_h702 = _source366.dtor_element;
            BigInteger _9968___mcc_h703 = _source366.dtor_dims;
            {
              RAST._IType _9969_fromTpeGen;
              RAST._IType _out4999;
              _out4999 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9969_fromTpeGen = _out4999;
              RAST._IType _9970_toTpeGen;
              RAST._IType _out5000;
              _out5000 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9970_toTpeGen = _out5000;
              RAST._IExpr _9971_recursiveGen;
              DCOMPUTF16._IOwnership _9972_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9973_recIdents;
              RAST._IExpr _out5001;
              DCOMPUTF16._IOwnership _out5002;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5003;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5001, out _out5002, out _out5003);
              _9971_recursiveGen = _out5001;
              _9972_recOwned = _out5002;
              _9973_recIdents = _out5003;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9971_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9969_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9970_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5004;
              DCOMPUTF16._IOwnership _out5005;
              DCOMPUTF16.COMP.FromOwnership(r, _9972_recOwned, expectedOwnership, out _out5004, out _out5005);
              r = _out5004;
              resultingOwnership = _out5005;
              readIdents = _9973_recIdents;
            }
          } else if (_source366.is_Seq) {
            DAST._IType _9974___mcc_h706 = _source366.dtor_element;
            {
              RAST._IType _9975_fromTpeGen;
              RAST._IType _out5006;
              _out5006 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9975_fromTpeGen = _out5006;
              RAST._IType _9976_toTpeGen;
              RAST._IType _out5007;
              _out5007 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9976_toTpeGen = _out5007;
              RAST._IExpr _9977_recursiveGen;
              DCOMPUTF16._IOwnership _9978_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9979_recIdents;
              RAST._IExpr _out5008;
              DCOMPUTF16._IOwnership _out5009;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5010;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5008, out _out5009, out _out5010);
              _9977_recursiveGen = _out5008;
              _9978_recOwned = _out5009;
              _9979_recIdents = _out5010;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9977_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9975_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9976_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5011;
              DCOMPUTF16._IOwnership _out5012;
              DCOMPUTF16.COMP.FromOwnership(r, _9978_recOwned, expectedOwnership, out _out5011, out _out5012);
              r = _out5011;
              resultingOwnership = _out5012;
              readIdents = _9979_recIdents;
            }
          } else if (_source366.is_Set) {
            DAST._IType _9980___mcc_h708 = _source366.dtor_element;
            {
              RAST._IType _9981_fromTpeGen;
              RAST._IType _out5013;
              _out5013 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9981_fromTpeGen = _out5013;
              RAST._IType _9982_toTpeGen;
              RAST._IType _out5014;
              _out5014 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9982_toTpeGen = _out5014;
              RAST._IExpr _9983_recursiveGen;
              DCOMPUTF16._IOwnership _9984_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9985_recIdents;
              RAST._IExpr _out5015;
              DCOMPUTF16._IOwnership _out5016;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5017;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5015, out _out5016, out _out5017);
              _9983_recursiveGen = _out5015;
              _9984_recOwned = _out5016;
              _9985_recIdents = _out5017;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9983_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9981_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9982_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5018;
              DCOMPUTF16._IOwnership _out5019;
              DCOMPUTF16.COMP.FromOwnership(r, _9984_recOwned, expectedOwnership, out _out5018, out _out5019);
              r = _out5018;
              resultingOwnership = _out5019;
              readIdents = _9985_recIdents;
            }
          } else if (_source366.is_Multiset) {
            DAST._IType _9986___mcc_h710 = _source366.dtor_element;
            {
              RAST._IType _9987_fromTpeGen;
              RAST._IType _out5020;
              _out5020 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9987_fromTpeGen = _out5020;
              RAST._IType _9988_toTpeGen;
              RAST._IType _out5021;
              _out5021 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9988_toTpeGen = _out5021;
              RAST._IExpr _9989_recursiveGen;
              DCOMPUTF16._IOwnership _9990_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9991_recIdents;
              RAST._IExpr _out5022;
              DCOMPUTF16._IOwnership _out5023;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5024;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5022, out _out5023, out _out5024);
              _9989_recursiveGen = _out5022;
              _9990_recOwned = _out5023;
              _9991_recIdents = _out5024;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9989_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9987_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9988_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5025;
              DCOMPUTF16._IOwnership _out5026;
              DCOMPUTF16.COMP.FromOwnership(r, _9990_recOwned, expectedOwnership, out _out5025, out _out5026);
              r = _out5025;
              resultingOwnership = _out5026;
              readIdents = _9991_recIdents;
            }
          } else if (_source366.is_Map) {
            DAST._IType _9992___mcc_h712 = _source366.dtor_key;
            DAST._IType _9993___mcc_h713 = _source366.dtor_value;
            {
              RAST._IType _9994_fromTpeGen;
              RAST._IType _out5027;
              _out5027 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _9994_fromTpeGen = _out5027;
              RAST._IType _9995_toTpeGen;
              RAST._IType _out5028;
              _out5028 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _9995_toTpeGen = _out5028;
              RAST._IExpr _9996_recursiveGen;
              DCOMPUTF16._IOwnership _9997_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9998_recIdents;
              RAST._IExpr _out5029;
              DCOMPUTF16._IOwnership _out5030;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5031;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5029, out _out5030, out _out5031);
              _9996_recursiveGen = _out5029;
              _9997_recOwned = _out5030;
              _9998_recIdents = _out5031;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9996_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9994_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9995_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5032;
              DCOMPUTF16._IOwnership _out5033;
              DCOMPUTF16.COMP.FromOwnership(r, _9997_recOwned, expectedOwnership, out _out5032, out _out5033);
              r = _out5032;
              resultingOwnership = _out5033;
              readIdents = _9998_recIdents;
            }
          } else if (_source366.is_SetBuilder) {
            DAST._IType _9999___mcc_h716 = _source366.dtor_element;
            {
              RAST._IType _10000_fromTpeGen;
              RAST._IType _out5034;
              _out5034 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10000_fromTpeGen = _out5034;
              RAST._IType _10001_toTpeGen;
              RAST._IType _out5035;
              _out5035 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10001_toTpeGen = _out5035;
              RAST._IExpr _10002_recursiveGen;
              DCOMPUTF16._IOwnership _10003_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10004_recIdents;
              RAST._IExpr _out5036;
              DCOMPUTF16._IOwnership _out5037;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5038;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5036, out _out5037, out _out5038);
              _10002_recursiveGen = _out5036;
              _10003_recOwned = _out5037;
              _10004_recIdents = _out5038;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10002_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10000_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10001_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5039;
              DCOMPUTF16._IOwnership _out5040;
              DCOMPUTF16.COMP.FromOwnership(r, _10003_recOwned, expectedOwnership, out _out5039, out _out5040);
              r = _out5039;
              resultingOwnership = _out5040;
              readIdents = _10004_recIdents;
            }
          } else if (_source366.is_MapBuilder) {
            DAST._IType _10005___mcc_h718 = _source366.dtor_key;
            DAST._IType _10006___mcc_h719 = _source366.dtor_value;
            {
              RAST._IType _10007_fromTpeGen;
              RAST._IType _out5041;
              _out5041 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10007_fromTpeGen = _out5041;
              RAST._IType _10008_toTpeGen;
              RAST._IType _out5042;
              _out5042 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10008_toTpeGen = _out5042;
              RAST._IExpr _10009_recursiveGen;
              DCOMPUTF16._IOwnership _10010_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10011_recIdents;
              RAST._IExpr _out5043;
              DCOMPUTF16._IOwnership _out5044;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5045;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5043, out _out5044, out _out5045);
              _10009_recursiveGen = _out5043;
              _10010_recOwned = _out5044;
              _10011_recIdents = _out5045;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10009_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10007_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10008_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5046;
              DCOMPUTF16._IOwnership _out5047;
              DCOMPUTF16.COMP.FromOwnership(r, _10010_recOwned, expectedOwnership, out _out5046, out _out5047);
              r = _out5046;
              resultingOwnership = _out5047;
              readIdents = _10011_recIdents;
            }
          } else if (_source366.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10012___mcc_h722 = _source366.dtor_args;
            DAST._IType _10013___mcc_h723 = _source366.dtor_result;
            {
              RAST._IType _10014_fromTpeGen;
              RAST._IType _out5048;
              _out5048 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10014_fromTpeGen = _out5048;
              RAST._IType _10015_toTpeGen;
              RAST._IType _out5049;
              _out5049 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10015_toTpeGen = _out5049;
              RAST._IExpr _10016_recursiveGen;
              DCOMPUTF16._IOwnership _10017_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10018_recIdents;
              RAST._IExpr _out5050;
              DCOMPUTF16._IOwnership _out5051;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5052;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5050, out _out5051, out _out5052);
              _10016_recursiveGen = _out5050;
              _10017_recOwned = _out5051;
              _10018_recIdents = _out5052;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10016_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10014_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10015_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5053;
              DCOMPUTF16._IOwnership _out5054;
              DCOMPUTF16.COMP.FromOwnership(r, _10017_recOwned, expectedOwnership, out _out5053, out _out5054);
              r = _out5053;
              resultingOwnership = _out5054;
              readIdents = _10018_recIdents;
            }
          } else if (_source366.is_Primitive) {
            DAST._IPrimitive _10019___mcc_h726 = _source366.dtor_Primitive_a0;
            {
              RAST._IType _10020_fromTpeGen;
              RAST._IType _out5055;
              _out5055 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10020_fromTpeGen = _out5055;
              RAST._IType _10021_toTpeGen;
              RAST._IType _out5056;
              _out5056 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10021_toTpeGen = _out5056;
              RAST._IExpr _10022_recursiveGen;
              DCOMPUTF16._IOwnership _10023_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10024_recIdents;
              RAST._IExpr _out5057;
              DCOMPUTF16._IOwnership _out5058;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5059;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5057, out _out5058, out _out5059);
              _10022_recursiveGen = _out5057;
              _10023_recOwned = _out5058;
              _10024_recIdents = _out5059;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10022_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10020_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10021_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5060;
              DCOMPUTF16._IOwnership _out5061;
              DCOMPUTF16.COMP.FromOwnership(r, _10023_recOwned, expectedOwnership, out _out5060, out _out5061);
              r = _out5060;
              resultingOwnership = _out5061;
              readIdents = _10024_recIdents;
            }
          } else if (_source366.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10025___mcc_h728 = _source366.dtor_Passthrough_a0;
            {
              RAST._IType _10026_fromTpeGen;
              RAST._IType _out5062;
              _out5062 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10026_fromTpeGen = _out5062;
              RAST._IType _10027_toTpeGen;
              RAST._IType _out5063;
              _out5063 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10027_toTpeGen = _out5063;
              RAST._IExpr _10028_recursiveGen;
              DCOMPUTF16._IOwnership _10029_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10030_recIdents;
              RAST._IExpr _out5064;
              DCOMPUTF16._IOwnership _out5065;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5066;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5064, out _out5065, out _out5066);
              _10028_recursiveGen = _out5064;
              _10029_recOwned = _out5065;
              _10030_recIdents = _out5066;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10028_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10026_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10027_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5067;
              DCOMPUTF16._IOwnership _out5068;
              DCOMPUTF16.COMP.FromOwnership(r, _10029_recOwned, expectedOwnership, out _out5067, out _out5068);
              r = _out5067;
              resultingOwnership = _out5068;
              readIdents = _10030_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10031___mcc_h730 = _source366.dtor_TypeArg_a0;
            {
              RAST._IType _10032_fromTpeGen;
              RAST._IType _out5069;
              _out5069 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10032_fromTpeGen = _out5069;
              RAST._IType _10033_toTpeGen;
              RAST._IType _out5070;
              _out5070 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10033_toTpeGen = _out5070;
              RAST._IExpr _10034_recursiveGen;
              DCOMPUTF16._IOwnership _10035_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10036_recIdents;
              RAST._IExpr _out5071;
              DCOMPUTF16._IOwnership _out5072;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5073;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5071, out _out5072, out _out5073);
              _10034_recursiveGen = _out5071;
              _10035_recOwned = _out5072;
              _10036_recIdents = _out5073;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10034_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10032_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10033_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5074;
              DCOMPUTF16._IOwnership _out5075;
              DCOMPUTF16.COMP.FromOwnership(r, _10035_recOwned, expectedOwnership, out _out5074, out _out5075);
              r = _out5074;
              resultingOwnership = _out5075;
              readIdents = _10036_recIdents;
            }
          }
        } else if (_source303.is_MapBuilder) {
          DAST._IType _10037___mcc_h732 = _source303.dtor_key;
          DAST._IType _10038___mcc_h733 = _source303.dtor_value;
          DAST._IType _source371 = _8325___mcc_h1;
          if (_source371.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10039___mcc_h740 = _source371.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10040___mcc_h741 = _source371.dtor_typeArgs;
            DAST._IResolvedType _10041___mcc_h742 = _source371.dtor_resolved;
            DAST._IResolvedType _source372 = _10041___mcc_h742;
            if (_source372.is_Datatype) {
              DAST._IDatatypeType _10042___mcc_h746 = _source372.dtor_datatypeType;
              {
                RAST._IType _10043_fromTpeGen;
                RAST._IType _out5076;
                _out5076 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10043_fromTpeGen = _out5076;
                RAST._IType _10044_toTpeGen;
                RAST._IType _out5077;
                _out5077 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10044_toTpeGen = _out5077;
                RAST._IExpr _10045_recursiveGen;
                DCOMPUTF16._IOwnership _10046_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10047_recIdents;
                RAST._IExpr _out5078;
                DCOMPUTF16._IOwnership _out5079;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5080;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5078, out _out5079, out _out5080);
                _10045_recursiveGen = _out5078;
                _10046_recOwned = _out5079;
                _10047_recIdents = _out5080;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10045_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10043_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10044_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5081;
                DCOMPUTF16._IOwnership _out5082;
                DCOMPUTF16.COMP.FromOwnership(r, _10046_recOwned, expectedOwnership, out _out5081, out _out5082);
                r = _out5081;
                resultingOwnership = _out5082;
                readIdents = _10047_recIdents;
              }
            } else if (_source372.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10048___mcc_h748 = _source372.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10049___mcc_h749 = _source372.dtor_attributes;
              {
                RAST._IType _10050_fromTpeGen;
                RAST._IType _out5083;
                _out5083 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10050_fromTpeGen = _out5083;
                RAST._IType _10051_toTpeGen;
                RAST._IType _out5084;
                _out5084 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10051_toTpeGen = _out5084;
                RAST._IExpr _10052_recursiveGen;
                DCOMPUTF16._IOwnership _10053_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10054_recIdents;
                RAST._IExpr _out5085;
                DCOMPUTF16._IOwnership _out5086;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5087;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5085, out _out5086, out _out5087);
                _10052_recursiveGen = _out5085;
                _10053_recOwned = _out5086;
                _10054_recIdents = _out5087;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10052_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10050_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10051_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5088;
                DCOMPUTF16._IOwnership _out5089;
                DCOMPUTF16.COMP.FromOwnership(r, _10053_recOwned, expectedOwnership, out _out5088, out _out5089);
                r = _out5088;
                resultingOwnership = _out5089;
                readIdents = _10054_recIdents;
              }
            } else {
              DAST._IType _10055___mcc_h752 = _source372.dtor_baseType;
              DAST._INewtypeRange _10056___mcc_h753 = _source372.dtor_range;
              bool _10057___mcc_h754 = _source372.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10058___mcc_h755 = _source372.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10059_attributes = _10058___mcc_h755;
              bool _10060_erase = _10057___mcc_h754;
              DAST._INewtypeRange _10061_range = _10056___mcc_h753;
              DAST._IType _10062_b = _10055___mcc_h752;
              {
                Std.Wrappers._IOption<RAST._IType> _10063_nativeToType;
                _10063_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10062_b, _10061_range);
                if (object.Equals(_8319_fromTpe, _10062_b)) {
                  RAST._IExpr _10064_recursiveGen;
                  DCOMPUTF16._IOwnership _10065_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10066_recIdents;
                  RAST._IExpr _out5090;
                  DCOMPUTF16._IOwnership _out5091;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5092;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5090, out _out5091, out _out5092);
                  _10064_recursiveGen = _out5090;
                  _10065_recOwned = _out5091;
                  _10066_recIdents = _out5092;
                  readIdents = _10066_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source373 = _10063_nativeToType;
                  if (_source373.is_None) {
                    if (_10060_erase) {
                      r = _10064_recursiveGen;
                    } else {
                      RAST._IType _10067_rhsType;
                      RAST._IType _out5093;
                      _out5093 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _10067_rhsType = _out5093;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10067_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10064_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5094;
                    DCOMPUTF16._IOwnership _out5095;
                    DCOMPUTF16.COMP.FromOwnership(r, _10065_recOwned, expectedOwnership, out _out5094, out _out5095);
                    r = _out5094;
                    resultingOwnership = _out5095;
                  } else {
                    RAST._IType _10068___mcc_h1810 = _source373.dtor_value;
                    RAST._IType _10069_v = _10068___mcc_h1810;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10064_recursiveGen, RAST.Expr.create_ExprFromType(_10069_v)));
                    RAST._IExpr _out5096;
                    DCOMPUTF16._IOwnership _out5097;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5096, out _out5097);
                    r = _out5096;
                    resultingOwnership = _out5097;
                  }
                } else {
                  if ((_10063_nativeToType).is_Some) {
                    DAST._IType _source374 = _8319_fromTpe;
                    if (_source374.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10070___mcc_h1811 = _source374.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10071___mcc_h1812 = _source374.dtor_typeArgs;
                      DAST._IResolvedType _10072___mcc_h1813 = _source374.dtor_resolved;
                      DAST._IResolvedType _source375 = _10072___mcc_h1813;
                      if (_source375.is_Datatype) {
                        DAST._IDatatypeType _10073___mcc_h1817 = _source375.dtor_datatypeType;
                      } else if (_source375.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10074___mcc_h1819 = _source375.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10075___mcc_h1820 = _source375.dtor_attributes;
                      } else {
                        DAST._IType _10076___mcc_h1823 = _source375.dtor_baseType;
                        DAST._INewtypeRange _10077___mcc_h1824 = _source375.dtor_range;
                        bool _10078___mcc_h1825 = _source375.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10079___mcc_h1826 = _source375.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10080_attributes0 = _10079___mcc_h1826;
                        bool _10081_erase0 = _10078___mcc_h1825;
                        DAST._INewtypeRange _10082_range0 = _10077___mcc_h1824;
                        DAST._IType _10083_b0 = _10076___mcc_h1823;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10084_nativeFromType;
                          _10084_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10083_b0, _10082_range0);
                          if ((_10084_nativeFromType).is_Some) {
                            RAST._IExpr _10085_recursiveGen;
                            DCOMPUTF16._IOwnership _10086_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10087_recIdents;
                            RAST._IExpr _out5098;
                            DCOMPUTF16._IOwnership _out5099;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5100;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5098, out _out5099, out _out5100);
                            _10085_recursiveGen = _out5098;
                            _10086_recOwned = _out5099;
                            _10087_recIdents = _out5100;
                            RAST._IExpr _out5101;
                            DCOMPUTF16._IOwnership _out5102;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10085_recursiveGen, (_10063_nativeToType).dtor_value), _10086_recOwned, expectedOwnership, out _out5101, out _out5102);
                            r = _out5101;
                            resultingOwnership = _out5102;
                            readIdents = _10087_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source374.is_Nullable) {
                      DAST._IType _10088___mcc_h1831 = _source374.dtor_Nullable_a0;
                    } else if (_source374.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10089___mcc_h1833 = _source374.dtor_Tuple_a0;
                    } else if (_source374.is_Array) {
                      DAST._IType _10090___mcc_h1835 = _source374.dtor_element;
                      BigInteger _10091___mcc_h1836 = _source374.dtor_dims;
                    } else if (_source374.is_Seq) {
                      DAST._IType _10092___mcc_h1839 = _source374.dtor_element;
                    } else if (_source374.is_Set) {
                      DAST._IType _10093___mcc_h1841 = _source374.dtor_element;
                    } else if (_source374.is_Multiset) {
                      DAST._IType _10094___mcc_h1843 = _source374.dtor_element;
                    } else if (_source374.is_Map) {
                      DAST._IType _10095___mcc_h1845 = _source374.dtor_key;
                      DAST._IType _10096___mcc_h1846 = _source374.dtor_value;
                    } else if (_source374.is_SetBuilder) {
                      DAST._IType _10097___mcc_h1849 = _source374.dtor_element;
                    } else if (_source374.is_MapBuilder) {
                      DAST._IType _10098___mcc_h1851 = _source374.dtor_key;
                      DAST._IType _10099___mcc_h1852 = _source374.dtor_value;
                    } else if (_source374.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10100___mcc_h1855 = _source374.dtor_args;
                      DAST._IType _10101___mcc_h1856 = _source374.dtor_result;
                    } else if (_source374.is_Primitive) {
                      DAST._IPrimitive _10102___mcc_h1859 = _source374.dtor_Primitive_a0;
                    } else if (_source374.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10103___mcc_h1861 = _source374.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10104___mcc_h1863 = _source374.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10105_recursiveGen;
                      DCOMPUTF16._IOwnership _10106_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10107_recIdents;
                      RAST._IExpr _out5103;
                      DCOMPUTF16._IOwnership _out5104;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5105;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5103, out _out5104, out _out5105);
                      _10105_recursiveGen = _out5103;
                      _10106_recOwned = _out5104;
                      _10107_recIdents = _out5105;
                      RAST._IExpr _out5106;
                      DCOMPUTF16._IOwnership _out5107;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10105_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10063_nativeToType).dtor_value), _10106_recOwned, expectedOwnership, out _out5106, out _out5107);
                      r = _out5106;
                      resultingOwnership = _out5107;
                      readIdents = _10107_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5108;
                  DCOMPUTF16._IOwnership _out5109;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5110;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _10062_b), _10062_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out5108, out _out5109, out _out5110);
                  r = _out5108;
                  resultingOwnership = _out5109;
                  readIdents = _out5110;
                }
              }
            }
          } else if (_source371.is_Nullable) {
            DAST._IType _10108___mcc_h760 = _source371.dtor_Nullable_a0;
            {
              RAST._IExpr _10109_recursiveGen;
              DCOMPUTF16._IOwnership _10110_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10111_recIdents;
              RAST._IExpr _out5111;
              DCOMPUTF16._IOwnership _out5112;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5113;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5111, out _out5112, out _out5113);
              _10109_recursiveGen = _out5111;
              _10110_recOwned = _out5112;
              _10111_recIdents = _out5113;
              r = _10109_recursiveGen;
              if (object.Equals(_10110_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5114;
              DCOMPUTF16._IOwnership _out5115;
              DCOMPUTF16.COMP.FromOwnership(r, _10110_recOwned, expectedOwnership, out _out5114, out _out5115);
              r = _out5114;
              resultingOwnership = _out5115;
              readIdents = _10111_recIdents;
            }
          } else if (_source371.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10112___mcc_h762 = _source371.dtor_Tuple_a0;
            {
              RAST._IType _10113_fromTpeGen;
              RAST._IType _out5116;
              _out5116 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10113_fromTpeGen = _out5116;
              RAST._IType _10114_toTpeGen;
              RAST._IType _out5117;
              _out5117 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10114_toTpeGen = _out5117;
              RAST._IExpr _10115_recursiveGen;
              DCOMPUTF16._IOwnership _10116_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10117_recIdents;
              RAST._IExpr _out5118;
              DCOMPUTF16._IOwnership _out5119;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5120;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5118, out _out5119, out _out5120);
              _10115_recursiveGen = _out5118;
              _10116_recOwned = _out5119;
              _10117_recIdents = _out5120;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10115_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10113_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10114_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5121;
              DCOMPUTF16._IOwnership _out5122;
              DCOMPUTF16.COMP.FromOwnership(r, _10116_recOwned, expectedOwnership, out _out5121, out _out5122);
              r = _out5121;
              resultingOwnership = _out5122;
              readIdents = _10117_recIdents;
            }
          } else if (_source371.is_Array) {
            DAST._IType _10118___mcc_h764 = _source371.dtor_element;
            BigInteger _10119___mcc_h765 = _source371.dtor_dims;
            {
              RAST._IType _10120_fromTpeGen;
              RAST._IType _out5123;
              _out5123 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10120_fromTpeGen = _out5123;
              RAST._IType _10121_toTpeGen;
              RAST._IType _out5124;
              _out5124 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10121_toTpeGen = _out5124;
              RAST._IExpr _10122_recursiveGen;
              DCOMPUTF16._IOwnership _10123_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10124_recIdents;
              RAST._IExpr _out5125;
              DCOMPUTF16._IOwnership _out5126;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5127;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5125, out _out5126, out _out5127);
              _10122_recursiveGen = _out5125;
              _10123_recOwned = _out5126;
              _10124_recIdents = _out5127;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10122_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10120_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10121_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5128;
              DCOMPUTF16._IOwnership _out5129;
              DCOMPUTF16.COMP.FromOwnership(r, _10123_recOwned, expectedOwnership, out _out5128, out _out5129);
              r = _out5128;
              resultingOwnership = _out5129;
              readIdents = _10124_recIdents;
            }
          } else if (_source371.is_Seq) {
            DAST._IType _10125___mcc_h768 = _source371.dtor_element;
            {
              RAST._IType _10126_fromTpeGen;
              RAST._IType _out5130;
              _out5130 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10126_fromTpeGen = _out5130;
              RAST._IType _10127_toTpeGen;
              RAST._IType _out5131;
              _out5131 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10127_toTpeGen = _out5131;
              RAST._IExpr _10128_recursiveGen;
              DCOMPUTF16._IOwnership _10129_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10130_recIdents;
              RAST._IExpr _out5132;
              DCOMPUTF16._IOwnership _out5133;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5134;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5132, out _out5133, out _out5134);
              _10128_recursiveGen = _out5132;
              _10129_recOwned = _out5133;
              _10130_recIdents = _out5134;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10128_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10126_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10127_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5135;
              DCOMPUTF16._IOwnership _out5136;
              DCOMPUTF16.COMP.FromOwnership(r, _10129_recOwned, expectedOwnership, out _out5135, out _out5136);
              r = _out5135;
              resultingOwnership = _out5136;
              readIdents = _10130_recIdents;
            }
          } else if (_source371.is_Set) {
            DAST._IType _10131___mcc_h770 = _source371.dtor_element;
            {
              RAST._IType _10132_fromTpeGen;
              RAST._IType _out5137;
              _out5137 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10132_fromTpeGen = _out5137;
              RAST._IType _10133_toTpeGen;
              RAST._IType _out5138;
              _out5138 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10133_toTpeGen = _out5138;
              RAST._IExpr _10134_recursiveGen;
              DCOMPUTF16._IOwnership _10135_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10136_recIdents;
              RAST._IExpr _out5139;
              DCOMPUTF16._IOwnership _out5140;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5141;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5139, out _out5140, out _out5141);
              _10134_recursiveGen = _out5139;
              _10135_recOwned = _out5140;
              _10136_recIdents = _out5141;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10134_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10132_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10133_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5142;
              DCOMPUTF16._IOwnership _out5143;
              DCOMPUTF16.COMP.FromOwnership(r, _10135_recOwned, expectedOwnership, out _out5142, out _out5143);
              r = _out5142;
              resultingOwnership = _out5143;
              readIdents = _10136_recIdents;
            }
          } else if (_source371.is_Multiset) {
            DAST._IType _10137___mcc_h772 = _source371.dtor_element;
            {
              RAST._IType _10138_fromTpeGen;
              RAST._IType _out5144;
              _out5144 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10138_fromTpeGen = _out5144;
              RAST._IType _10139_toTpeGen;
              RAST._IType _out5145;
              _out5145 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10139_toTpeGen = _out5145;
              RAST._IExpr _10140_recursiveGen;
              DCOMPUTF16._IOwnership _10141_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10142_recIdents;
              RAST._IExpr _out5146;
              DCOMPUTF16._IOwnership _out5147;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5148;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5146, out _out5147, out _out5148);
              _10140_recursiveGen = _out5146;
              _10141_recOwned = _out5147;
              _10142_recIdents = _out5148;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10140_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10138_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10139_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5149;
              DCOMPUTF16._IOwnership _out5150;
              DCOMPUTF16.COMP.FromOwnership(r, _10141_recOwned, expectedOwnership, out _out5149, out _out5150);
              r = _out5149;
              resultingOwnership = _out5150;
              readIdents = _10142_recIdents;
            }
          } else if (_source371.is_Map) {
            DAST._IType _10143___mcc_h774 = _source371.dtor_key;
            DAST._IType _10144___mcc_h775 = _source371.dtor_value;
            {
              RAST._IType _10145_fromTpeGen;
              RAST._IType _out5151;
              _out5151 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10145_fromTpeGen = _out5151;
              RAST._IType _10146_toTpeGen;
              RAST._IType _out5152;
              _out5152 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10146_toTpeGen = _out5152;
              RAST._IExpr _10147_recursiveGen;
              DCOMPUTF16._IOwnership _10148_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10149_recIdents;
              RAST._IExpr _out5153;
              DCOMPUTF16._IOwnership _out5154;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5155;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5153, out _out5154, out _out5155);
              _10147_recursiveGen = _out5153;
              _10148_recOwned = _out5154;
              _10149_recIdents = _out5155;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10147_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10145_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10146_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5156;
              DCOMPUTF16._IOwnership _out5157;
              DCOMPUTF16.COMP.FromOwnership(r, _10148_recOwned, expectedOwnership, out _out5156, out _out5157);
              r = _out5156;
              resultingOwnership = _out5157;
              readIdents = _10149_recIdents;
            }
          } else if (_source371.is_SetBuilder) {
            DAST._IType _10150___mcc_h778 = _source371.dtor_element;
            {
              RAST._IType _10151_fromTpeGen;
              RAST._IType _out5158;
              _out5158 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10151_fromTpeGen = _out5158;
              RAST._IType _10152_toTpeGen;
              RAST._IType _out5159;
              _out5159 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10152_toTpeGen = _out5159;
              RAST._IExpr _10153_recursiveGen;
              DCOMPUTF16._IOwnership _10154_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10155_recIdents;
              RAST._IExpr _out5160;
              DCOMPUTF16._IOwnership _out5161;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5162;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5160, out _out5161, out _out5162);
              _10153_recursiveGen = _out5160;
              _10154_recOwned = _out5161;
              _10155_recIdents = _out5162;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10153_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10151_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10152_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5163;
              DCOMPUTF16._IOwnership _out5164;
              DCOMPUTF16.COMP.FromOwnership(r, _10154_recOwned, expectedOwnership, out _out5163, out _out5164);
              r = _out5163;
              resultingOwnership = _out5164;
              readIdents = _10155_recIdents;
            }
          } else if (_source371.is_MapBuilder) {
            DAST._IType _10156___mcc_h780 = _source371.dtor_key;
            DAST._IType _10157___mcc_h781 = _source371.dtor_value;
            {
              RAST._IType _10158_fromTpeGen;
              RAST._IType _out5165;
              _out5165 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10158_fromTpeGen = _out5165;
              RAST._IType _10159_toTpeGen;
              RAST._IType _out5166;
              _out5166 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10159_toTpeGen = _out5166;
              RAST._IExpr _10160_recursiveGen;
              DCOMPUTF16._IOwnership _10161_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10162_recIdents;
              RAST._IExpr _out5167;
              DCOMPUTF16._IOwnership _out5168;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5169;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5167, out _out5168, out _out5169);
              _10160_recursiveGen = _out5167;
              _10161_recOwned = _out5168;
              _10162_recIdents = _out5169;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10160_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10158_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10159_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5170;
              DCOMPUTF16._IOwnership _out5171;
              DCOMPUTF16.COMP.FromOwnership(r, _10161_recOwned, expectedOwnership, out _out5170, out _out5171);
              r = _out5170;
              resultingOwnership = _out5171;
              readIdents = _10162_recIdents;
            }
          } else if (_source371.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10163___mcc_h784 = _source371.dtor_args;
            DAST._IType _10164___mcc_h785 = _source371.dtor_result;
            {
              RAST._IType _10165_fromTpeGen;
              RAST._IType _out5172;
              _out5172 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10165_fromTpeGen = _out5172;
              RAST._IType _10166_toTpeGen;
              RAST._IType _out5173;
              _out5173 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10166_toTpeGen = _out5173;
              RAST._IExpr _10167_recursiveGen;
              DCOMPUTF16._IOwnership _10168_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10169_recIdents;
              RAST._IExpr _out5174;
              DCOMPUTF16._IOwnership _out5175;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5176;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5174, out _out5175, out _out5176);
              _10167_recursiveGen = _out5174;
              _10168_recOwned = _out5175;
              _10169_recIdents = _out5176;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10167_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10165_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10166_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5177;
              DCOMPUTF16._IOwnership _out5178;
              DCOMPUTF16.COMP.FromOwnership(r, _10168_recOwned, expectedOwnership, out _out5177, out _out5178);
              r = _out5177;
              resultingOwnership = _out5178;
              readIdents = _10169_recIdents;
            }
          } else if (_source371.is_Primitive) {
            DAST._IPrimitive _10170___mcc_h788 = _source371.dtor_Primitive_a0;
            {
              RAST._IType _10171_fromTpeGen;
              RAST._IType _out5179;
              _out5179 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10171_fromTpeGen = _out5179;
              RAST._IType _10172_toTpeGen;
              RAST._IType _out5180;
              _out5180 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10172_toTpeGen = _out5180;
              RAST._IExpr _10173_recursiveGen;
              DCOMPUTF16._IOwnership _10174_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10175_recIdents;
              RAST._IExpr _out5181;
              DCOMPUTF16._IOwnership _out5182;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5183;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5181, out _out5182, out _out5183);
              _10173_recursiveGen = _out5181;
              _10174_recOwned = _out5182;
              _10175_recIdents = _out5183;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10173_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10171_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10172_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5184;
              DCOMPUTF16._IOwnership _out5185;
              DCOMPUTF16.COMP.FromOwnership(r, _10174_recOwned, expectedOwnership, out _out5184, out _out5185);
              r = _out5184;
              resultingOwnership = _out5185;
              readIdents = _10175_recIdents;
            }
          } else if (_source371.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10176___mcc_h790 = _source371.dtor_Passthrough_a0;
            {
              RAST._IType _10177_fromTpeGen;
              RAST._IType _out5186;
              _out5186 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10177_fromTpeGen = _out5186;
              RAST._IType _10178_toTpeGen;
              RAST._IType _out5187;
              _out5187 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10178_toTpeGen = _out5187;
              RAST._IExpr _10179_recursiveGen;
              DCOMPUTF16._IOwnership _10180_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10181_recIdents;
              RAST._IExpr _out5188;
              DCOMPUTF16._IOwnership _out5189;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5190;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5188, out _out5189, out _out5190);
              _10179_recursiveGen = _out5188;
              _10180_recOwned = _out5189;
              _10181_recIdents = _out5190;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10179_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10177_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10178_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5191;
              DCOMPUTF16._IOwnership _out5192;
              DCOMPUTF16.COMP.FromOwnership(r, _10180_recOwned, expectedOwnership, out _out5191, out _out5192);
              r = _out5191;
              resultingOwnership = _out5192;
              readIdents = _10181_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10182___mcc_h792 = _source371.dtor_TypeArg_a0;
            {
              RAST._IType _10183_fromTpeGen;
              RAST._IType _out5193;
              _out5193 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10183_fromTpeGen = _out5193;
              RAST._IType _10184_toTpeGen;
              RAST._IType _out5194;
              _out5194 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10184_toTpeGen = _out5194;
              RAST._IExpr _10185_recursiveGen;
              DCOMPUTF16._IOwnership _10186_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10187_recIdents;
              RAST._IExpr _out5195;
              DCOMPUTF16._IOwnership _out5196;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5197;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5195, out _out5196, out _out5197);
              _10185_recursiveGen = _out5195;
              _10186_recOwned = _out5196;
              _10187_recIdents = _out5197;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10185_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10183_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10184_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5198;
              DCOMPUTF16._IOwnership _out5199;
              DCOMPUTF16.COMP.FromOwnership(r, _10186_recOwned, expectedOwnership, out _out5198, out _out5199);
              r = _out5198;
              resultingOwnership = _out5199;
              readIdents = _10187_recIdents;
            }
          }
        } else if (_source303.is_Arrow) {
          Dafny.ISequence<DAST._IType> _10188___mcc_h794 = _source303.dtor_args;
          DAST._IType _10189___mcc_h795 = _source303.dtor_result;
          DAST._IType _source376 = _8325___mcc_h1;
          if (_source376.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10190___mcc_h802 = _source376.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10191___mcc_h803 = _source376.dtor_typeArgs;
            DAST._IResolvedType _10192___mcc_h804 = _source376.dtor_resolved;
            DAST._IResolvedType _source377 = _10192___mcc_h804;
            if (_source377.is_Datatype) {
              DAST._IDatatypeType _10193___mcc_h808 = _source377.dtor_datatypeType;
              {
                RAST._IType _10194_fromTpeGen;
                RAST._IType _out5200;
                _out5200 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10194_fromTpeGen = _out5200;
                RAST._IType _10195_toTpeGen;
                RAST._IType _out5201;
                _out5201 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10195_toTpeGen = _out5201;
                RAST._IExpr _10196_recursiveGen;
                DCOMPUTF16._IOwnership _10197_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10198_recIdents;
                RAST._IExpr _out5202;
                DCOMPUTF16._IOwnership _out5203;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5204;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5202, out _out5203, out _out5204);
                _10196_recursiveGen = _out5202;
                _10197_recOwned = _out5203;
                _10198_recIdents = _out5204;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10196_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10194_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10195_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5205;
                DCOMPUTF16._IOwnership _out5206;
                DCOMPUTF16.COMP.FromOwnership(r, _10197_recOwned, expectedOwnership, out _out5205, out _out5206);
                r = _out5205;
                resultingOwnership = _out5206;
                readIdents = _10198_recIdents;
              }
            } else if (_source377.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10199___mcc_h810 = _source377.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10200___mcc_h811 = _source377.dtor_attributes;
              {
                RAST._IType _10201_fromTpeGen;
                RAST._IType _out5207;
                _out5207 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10201_fromTpeGen = _out5207;
                RAST._IType _10202_toTpeGen;
                RAST._IType _out5208;
                _out5208 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10202_toTpeGen = _out5208;
                RAST._IExpr _10203_recursiveGen;
                DCOMPUTF16._IOwnership _10204_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10205_recIdents;
                RAST._IExpr _out5209;
                DCOMPUTF16._IOwnership _out5210;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5211;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5209, out _out5210, out _out5211);
                _10203_recursiveGen = _out5209;
                _10204_recOwned = _out5210;
                _10205_recIdents = _out5211;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10203_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10201_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10202_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5212;
                DCOMPUTF16._IOwnership _out5213;
                DCOMPUTF16.COMP.FromOwnership(r, _10204_recOwned, expectedOwnership, out _out5212, out _out5213);
                r = _out5212;
                resultingOwnership = _out5213;
                readIdents = _10205_recIdents;
              }
            } else {
              DAST._IType _10206___mcc_h814 = _source377.dtor_baseType;
              DAST._INewtypeRange _10207___mcc_h815 = _source377.dtor_range;
              bool _10208___mcc_h816 = _source377.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10209___mcc_h817 = _source377.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10210_attributes = _10209___mcc_h817;
              bool _10211_erase = _10208___mcc_h816;
              DAST._INewtypeRange _10212_range = _10207___mcc_h815;
              DAST._IType _10213_b = _10206___mcc_h814;
              {
                Std.Wrappers._IOption<RAST._IType> _10214_nativeToType;
                _10214_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10213_b, _10212_range);
                if (object.Equals(_8319_fromTpe, _10213_b)) {
                  RAST._IExpr _10215_recursiveGen;
                  DCOMPUTF16._IOwnership _10216_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10217_recIdents;
                  RAST._IExpr _out5214;
                  DCOMPUTF16._IOwnership _out5215;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5216;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5214, out _out5215, out _out5216);
                  _10215_recursiveGen = _out5214;
                  _10216_recOwned = _out5215;
                  _10217_recIdents = _out5216;
                  readIdents = _10217_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source378 = _10214_nativeToType;
                  if (_source378.is_None) {
                    if (_10211_erase) {
                      r = _10215_recursiveGen;
                    } else {
                      RAST._IType _10218_rhsType;
                      RAST._IType _out5217;
                      _out5217 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _10218_rhsType = _out5217;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10218_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10215_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5218;
                    DCOMPUTF16._IOwnership _out5219;
                    DCOMPUTF16.COMP.FromOwnership(r, _10216_recOwned, expectedOwnership, out _out5218, out _out5219);
                    r = _out5218;
                    resultingOwnership = _out5219;
                  } else {
                    RAST._IType _10219___mcc_h1865 = _source378.dtor_value;
                    RAST._IType _10220_v = _10219___mcc_h1865;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10215_recursiveGen, RAST.Expr.create_ExprFromType(_10220_v)));
                    RAST._IExpr _out5220;
                    DCOMPUTF16._IOwnership _out5221;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5220, out _out5221);
                    r = _out5220;
                    resultingOwnership = _out5221;
                  }
                } else {
                  if ((_10214_nativeToType).is_Some) {
                    DAST._IType _source379 = _8319_fromTpe;
                    if (_source379.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10221___mcc_h1866 = _source379.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10222___mcc_h1867 = _source379.dtor_typeArgs;
                      DAST._IResolvedType _10223___mcc_h1868 = _source379.dtor_resolved;
                      DAST._IResolvedType _source380 = _10223___mcc_h1868;
                      if (_source380.is_Datatype) {
                        DAST._IDatatypeType _10224___mcc_h1872 = _source380.dtor_datatypeType;
                      } else if (_source380.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10225___mcc_h1874 = _source380.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10226___mcc_h1875 = _source380.dtor_attributes;
                      } else {
                        DAST._IType _10227___mcc_h1878 = _source380.dtor_baseType;
                        DAST._INewtypeRange _10228___mcc_h1879 = _source380.dtor_range;
                        bool _10229___mcc_h1880 = _source380.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10230___mcc_h1881 = _source380.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10231_attributes0 = _10230___mcc_h1881;
                        bool _10232_erase0 = _10229___mcc_h1880;
                        DAST._INewtypeRange _10233_range0 = _10228___mcc_h1879;
                        DAST._IType _10234_b0 = _10227___mcc_h1878;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10235_nativeFromType;
                          _10235_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10234_b0, _10233_range0);
                          if ((_10235_nativeFromType).is_Some) {
                            RAST._IExpr _10236_recursiveGen;
                            DCOMPUTF16._IOwnership _10237_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10238_recIdents;
                            RAST._IExpr _out5222;
                            DCOMPUTF16._IOwnership _out5223;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5224;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5222, out _out5223, out _out5224);
                            _10236_recursiveGen = _out5222;
                            _10237_recOwned = _out5223;
                            _10238_recIdents = _out5224;
                            RAST._IExpr _out5225;
                            DCOMPUTF16._IOwnership _out5226;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10236_recursiveGen, (_10214_nativeToType).dtor_value), _10237_recOwned, expectedOwnership, out _out5225, out _out5226);
                            r = _out5225;
                            resultingOwnership = _out5226;
                            readIdents = _10238_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source379.is_Nullable) {
                      DAST._IType _10239___mcc_h1886 = _source379.dtor_Nullable_a0;
                    } else if (_source379.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10240___mcc_h1888 = _source379.dtor_Tuple_a0;
                    } else if (_source379.is_Array) {
                      DAST._IType _10241___mcc_h1890 = _source379.dtor_element;
                      BigInteger _10242___mcc_h1891 = _source379.dtor_dims;
                    } else if (_source379.is_Seq) {
                      DAST._IType _10243___mcc_h1894 = _source379.dtor_element;
                    } else if (_source379.is_Set) {
                      DAST._IType _10244___mcc_h1896 = _source379.dtor_element;
                    } else if (_source379.is_Multiset) {
                      DAST._IType _10245___mcc_h1898 = _source379.dtor_element;
                    } else if (_source379.is_Map) {
                      DAST._IType _10246___mcc_h1900 = _source379.dtor_key;
                      DAST._IType _10247___mcc_h1901 = _source379.dtor_value;
                    } else if (_source379.is_SetBuilder) {
                      DAST._IType _10248___mcc_h1904 = _source379.dtor_element;
                    } else if (_source379.is_MapBuilder) {
                      DAST._IType _10249___mcc_h1906 = _source379.dtor_key;
                      DAST._IType _10250___mcc_h1907 = _source379.dtor_value;
                    } else if (_source379.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10251___mcc_h1910 = _source379.dtor_args;
                      DAST._IType _10252___mcc_h1911 = _source379.dtor_result;
                    } else if (_source379.is_Primitive) {
                      DAST._IPrimitive _10253___mcc_h1914 = _source379.dtor_Primitive_a0;
                    } else if (_source379.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10254___mcc_h1916 = _source379.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10255___mcc_h1918 = _source379.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10256_recursiveGen;
                      DCOMPUTF16._IOwnership _10257_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10258_recIdents;
                      RAST._IExpr _out5227;
                      DCOMPUTF16._IOwnership _out5228;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5229;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5227, out _out5228, out _out5229);
                      _10256_recursiveGen = _out5227;
                      _10257_recOwned = _out5228;
                      _10258_recIdents = _out5229;
                      RAST._IExpr _out5230;
                      DCOMPUTF16._IOwnership _out5231;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10256_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10214_nativeToType).dtor_value), _10257_recOwned, expectedOwnership, out _out5230, out _out5231);
                      r = _out5230;
                      resultingOwnership = _out5231;
                      readIdents = _10258_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5232;
                  DCOMPUTF16._IOwnership _out5233;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5234;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _10213_b), _10213_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out5232, out _out5233, out _out5234);
                  r = _out5232;
                  resultingOwnership = _out5233;
                  readIdents = _out5234;
                }
              }
            }
          } else if (_source376.is_Nullable) {
            DAST._IType _10259___mcc_h822 = _source376.dtor_Nullable_a0;
            {
              RAST._IExpr _10260_recursiveGen;
              DCOMPUTF16._IOwnership _10261_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10262_recIdents;
              RAST._IExpr _out5235;
              DCOMPUTF16._IOwnership _out5236;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5237;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5235, out _out5236, out _out5237);
              _10260_recursiveGen = _out5235;
              _10261_recOwned = _out5236;
              _10262_recIdents = _out5237;
              r = _10260_recursiveGen;
              if (object.Equals(_10261_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5238;
              DCOMPUTF16._IOwnership _out5239;
              DCOMPUTF16.COMP.FromOwnership(r, _10261_recOwned, expectedOwnership, out _out5238, out _out5239);
              r = _out5238;
              resultingOwnership = _out5239;
              readIdents = _10262_recIdents;
            }
          } else if (_source376.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10263___mcc_h824 = _source376.dtor_Tuple_a0;
            {
              RAST._IType _10264_fromTpeGen;
              RAST._IType _out5240;
              _out5240 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10264_fromTpeGen = _out5240;
              RAST._IType _10265_toTpeGen;
              RAST._IType _out5241;
              _out5241 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10265_toTpeGen = _out5241;
              RAST._IExpr _10266_recursiveGen;
              DCOMPUTF16._IOwnership _10267_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10268_recIdents;
              RAST._IExpr _out5242;
              DCOMPUTF16._IOwnership _out5243;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5244;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5242, out _out5243, out _out5244);
              _10266_recursiveGen = _out5242;
              _10267_recOwned = _out5243;
              _10268_recIdents = _out5244;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10266_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10264_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10265_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5245;
              DCOMPUTF16._IOwnership _out5246;
              DCOMPUTF16.COMP.FromOwnership(r, _10267_recOwned, expectedOwnership, out _out5245, out _out5246);
              r = _out5245;
              resultingOwnership = _out5246;
              readIdents = _10268_recIdents;
            }
          } else if (_source376.is_Array) {
            DAST._IType _10269___mcc_h826 = _source376.dtor_element;
            BigInteger _10270___mcc_h827 = _source376.dtor_dims;
            {
              RAST._IType _10271_fromTpeGen;
              RAST._IType _out5247;
              _out5247 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10271_fromTpeGen = _out5247;
              RAST._IType _10272_toTpeGen;
              RAST._IType _out5248;
              _out5248 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10272_toTpeGen = _out5248;
              RAST._IExpr _10273_recursiveGen;
              DCOMPUTF16._IOwnership _10274_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10275_recIdents;
              RAST._IExpr _out5249;
              DCOMPUTF16._IOwnership _out5250;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5251;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5249, out _out5250, out _out5251);
              _10273_recursiveGen = _out5249;
              _10274_recOwned = _out5250;
              _10275_recIdents = _out5251;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10273_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10271_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10272_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5252;
              DCOMPUTF16._IOwnership _out5253;
              DCOMPUTF16.COMP.FromOwnership(r, _10274_recOwned, expectedOwnership, out _out5252, out _out5253);
              r = _out5252;
              resultingOwnership = _out5253;
              readIdents = _10275_recIdents;
            }
          } else if (_source376.is_Seq) {
            DAST._IType _10276___mcc_h830 = _source376.dtor_element;
            {
              RAST._IType _10277_fromTpeGen;
              RAST._IType _out5254;
              _out5254 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10277_fromTpeGen = _out5254;
              RAST._IType _10278_toTpeGen;
              RAST._IType _out5255;
              _out5255 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10278_toTpeGen = _out5255;
              RAST._IExpr _10279_recursiveGen;
              DCOMPUTF16._IOwnership _10280_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10281_recIdents;
              RAST._IExpr _out5256;
              DCOMPUTF16._IOwnership _out5257;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5258;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5256, out _out5257, out _out5258);
              _10279_recursiveGen = _out5256;
              _10280_recOwned = _out5257;
              _10281_recIdents = _out5258;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10279_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10277_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10278_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5259;
              DCOMPUTF16._IOwnership _out5260;
              DCOMPUTF16.COMP.FromOwnership(r, _10280_recOwned, expectedOwnership, out _out5259, out _out5260);
              r = _out5259;
              resultingOwnership = _out5260;
              readIdents = _10281_recIdents;
            }
          } else if (_source376.is_Set) {
            DAST._IType _10282___mcc_h832 = _source376.dtor_element;
            {
              RAST._IType _10283_fromTpeGen;
              RAST._IType _out5261;
              _out5261 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10283_fromTpeGen = _out5261;
              RAST._IType _10284_toTpeGen;
              RAST._IType _out5262;
              _out5262 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10284_toTpeGen = _out5262;
              RAST._IExpr _10285_recursiveGen;
              DCOMPUTF16._IOwnership _10286_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10287_recIdents;
              RAST._IExpr _out5263;
              DCOMPUTF16._IOwnership _out5264;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5265;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5263, out _out5264, out _out5265);
              _10285_recursiveGen = _out5263;
              _10286_recOwned = _out5264;
              _10287_recIdents = _out5265;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10285_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10283_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10284_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5266;
              DCOMPUTF16._IOwnership _out5267;
              DCOMPUTF16.COMP.FromOwnership(r, _10286_recOwned, expectedOwnership, out _out5266, out _out5267);
              r = _out5266;
              resultingOwnership = _out5267;
              readIdents = _10287_recIdents;
            }
          } else if (_source376.is_Multiset) {
            DAST._IType _10288___mcc_h834 = _source376.dtor_element;
            {
              RAST._IType _10289_fromTpeGen;
              RAST._IType _out5268;
              _out5268 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10289_fromTpeGen = _out5268;
              RAST._IType _10290_toTpeGen;
              RAST._IType _out5269;
              _out5269 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10290_toTpeGen = _out5269;
              RAST._IExpr _10291_recursiveGen;
              DCOMPUTF16._IOwnership _10292_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10293_recIdents;
              RAST._IExpr _out5270;
              DCOMPUTF16._IOwnership _out5271;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5272;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5270, out _out5271, out _out5272);
              _10291_recursiveGen = _out5270;
              _10292_recOwned = _out5271;
              _10293_recIdents = _out5272;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10291_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10289_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10290_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5273;
              DCOMPUTF16._IOwnership _out5274;
              DCOMPUTF16.COMP.FromOwnership(r, _10292_recOwned, expectedOwnership, out _out5273, out _out5274);
              r = _out5273;
              resultingOwnership = _out5274;
              readIdents = _10293_recIdents;
            }
          } else if (_source376.is_Map) {
            DAST._IType _10294___mcc_h836 = _source376.dtor_key;
            DAST._IType _10295___mcc_h837 = _source376.dtor_value;
            {
              RAST._IType _10296_fromTpeGen;
              RAST._IType _out5275;
              _out5275 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10296_fromTpeGen = _out5275;
              RAST._IType _10297_toTpeGen;
              RAST._IType _out5276;
              _out5276 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10297_toTpeGen = _out5276;
              RAST._IExpr _10298_recursiveGen;
              DCOMPUTF16._IOwnership _10299_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10300_recIdents;
              RAST._IExpr _out5277;
              DCOMPUTF16._IOwnership _out5278;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5279;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5277, out _out5278, out _out5279);
              _10298_recursiveGen = _out5277;
              _10299_recOwned = _out5278;
              _10300_recIdents = _out5279;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10298_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10296_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10297_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5280;
              DCOMPUTF16._IOwnership _out5281;
              DCOMPUTF16.COMP.FromOwnership(r, _10299_recOwned, expectedOwnership, out _out5280, out _out5281);
              r = _out5280;
              resultingOwnership = _out5281;
              readIdents = _10300_recIdents;
            }
          } else if (_source376.is_SetBuilder) {
            DAST._IType _10301___mcc_h840 = _source376.dtor_element;
            {
              RAST._IType _10302_fromTpeGen;
              RAST._IType _out5282;
              _out5282 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10302_fromTpeGen = _out5282;
              RAST._IType _10303_toTpeGen;
              RAST._IType _out5283;
              _out5283 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10303_toTpeGen = _out5283;
              RAST._IExpr _10304_recursiveGen;
              DCOMPUTF16._IOwnership _10305_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10306_recIdents;
              RAST._IExpr _out5284;
              DCOMPUTF16._IOwnership _out5285;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5286;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5284, out _out5285, out _out5286);
              _10304_recursiveGen = _out5284;
              _10305_recOwned = _out5285;
              _10306_recIdents = _out5286;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10304_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10302_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10303_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5287;
              DCOMPUTF16._IOwnership _out5288;
              DCOMPUTF16.COMP.FromOwnership(r, _10305_recOwned, expectedOwnership, out _out5287, out _out5288);
              r = _out5287;
              resultingOwnership = _out5288;
              readIdents = _10306_recIdents;
            }
          } else if (_source376.is_MapBuilder) {
            DAST._IType _10307___mcc_h842 = _source376.dtor_key;
            DAST._IType _10308___mcc_h843 = _source376.dtor_value;
            {
              RAST._IType _10309_fromTpeGen;
              RAST._IType _out5289;
              _out5289 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10309_fromTpeGen = _out5289;
              RAST._IType _10310_toTpeGen;
              RAST._IType _out5290;
              _out5290 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10310_toTpeGen = _out5290;
              RAST._IExpr _10311_recursiveGen;
              DCOMPUTF16._IOwnership _10312_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10313_recIdents;
              RAST._IExpr _out5291;
              DCOMPUTF16._IOwnership _out5292;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5293;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5291, out _out5292, out _out5293);
              _10311_recursiveGen = _out5291;
              _10312_recOwned = _out5292;
              _10313_recIdents = _out5293;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10311_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10309_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10310_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5294;
              DCOMPUTF16._IOwnership _out5295;
              DCOMPUTF16.COMP.FromOwnership(r, _10312_recOwned, expectedOwnership, out _out5294, out _out5295);
              r = _out5294;
              resultingOwnership = _out5295;
              readIdents = _10313_recIdents;
            }
          } else if (_source376.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10314___mcc_h846 = _source376.dtor_args;
            DAST._IType _10315___mcc_h847 = _source376.dtor_result;
            {
              RAST._IType _10316_fromTpeGen;
              RAST._IType _out5296;
              _out5296 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10316_fromTpeGen = _out5296;
              RAST._IType _10317_toTpeGen;
              RAST._IType _out5297;
              _out5297 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10317_toTpeGen = _out5297;
              RAST._IExpr _10318_recursiveGen;
              DCOMPUTF16._IOwnership _10319_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10320_recIdents;
              RAST._IExpr _out5298;
              DCOMPUTF16._IOwnership _out5299;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5300;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5298, out _out5299, out _out5300);
              _10318_recursiveGen = _out5298;
              _10319_recOwned = _out5299;
              _10320_recIdents = _out5300;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10318_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10316_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10317_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5301;
              DCOMPUTF16._IOwnership _out5302;
              DCOMPUTF16.COMP.FromOwnership(r, _10319_recOwned, expectedOwnership, out _out5301, out _out5302);
              r = _out5301;
              resultingOwnership = _out5302;
              readIdents = _10320_recIdents;
            }
          } else if (_source376.is_Primitive) {
            DAST._IPrimitive _10321___mcc_h850 = _source376.dtor_Primitive_a0;
            {
              RAST._IType _10322_fromTpeGen;
              RAST._IType _out5303;
              _out5303 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10322_fromTpeGen = _out5303;
              RAST._IType _10323_toTpeGen;
              RAST._IType _out5304;
              _out5304 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10323_toTpeGen = _out5304;
              RAST._IExpr _10324_recursiveGen;
              DCOMPUTF16._IOwnership _10325_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10326_recIdents;
              RAST._IExpr _out5305;
              DCOMPUTF16._IOwnership _out5306;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5307;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5305, out _out5306, out _out5307);
              _10324_recursiveGen = _out5305;
              _10325_recOwned = _out5306;
              _10326_recIdents = _out5307;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10324_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10322_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10323_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5308;
              DCOMPUTF16._IOwnership _out5309;
              DCOMPUTF16.COMP.FromOwnership(r, _10325_recOwned, expectedOwnership, out _out5308, out _out5309);
              r = _out5308;
              resultingOwnership = _out5309;
              readIdents = _10326_recIdents;
            }
          } else if (_source376.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10327___mcc_h852 = _source376.dtor_Passthrough_a0;
            {
              RAST._IType _10328_fromTpeGen;
              RAST._IType _out5310;
              _out5310 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10328_fromTpeGen = _out5310;
              RAST._IType _10329_toTpeGen;
              RAST._IType _out5311;
              _out5311 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10329_toTpeGen = _out5311;
              RAST._IExpr _10330_recursiveGen;
              DCOMPUTF16._IOwnership _10331_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10332_recIdents;
              RAST._IExpr _out5312;
              DCOMPUTF16._IOwnership _out5313;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5314;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5312, out _out5313, out _out5314);
              _10330_recursiveGen = _out5312;
              _10331_recOwned = _out5313;
              _10332_recIdents = _out5314;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10330_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10328_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10329_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5315;
              DCOMPUTF16._IOwnership _out5316;
              DCOMPUTF16.COMP.FromOwnership(r, _10331_recOwned, expectedOwnership, out _out5315, out _out5316);
              r = _out5315;
              resultingOwnership = _out5316;
              readIdents = _10332_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10333___mcc_h854 = _source376.dtor_TypeArg_a0;
            {
              RAST._IType _10334_fromTpeGen;
              RAST._IType _out5317;
              _out5317 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _10334_fromTpeGen = _out5317;
              RAST._IType _10335_toTpeGen;
              RAST._IType _out5318;
              _out5318 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _10335_toTpeGen = _out5318;
              RAST._IExpr _10336_recursiveGen;
              DCOMPUTF16._IOwnership _10337_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10338_recIdents;
              RAST._IExpr _out5319;
              DCOMPUTF16._IOwnership _out5320;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5321;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5319, out _out5320, out _out5321);
              _10336_recursiveGen = _out5319;
              _10337_recOwned = _out5320;
              _10338_recIdents = _out5321;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10336_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10334_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10335_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5322;
              DCOMPUTF16._IOwnership _out5323;
              DCOMPUTF16.COMP.FromOwnership(r, _10337_recOwned, expectedOwnership, out _out5322, out _out5323);
              r = _out5322;
              resultingOwnership = _out5323;
              readIdents = _10338_recIdents;
            }
          }
        } else if (_source303.is_Primitive) {
          DAST._IPrimitive _10339___mcc_h856 = _source303.dtor_Primitive_a0;
          DAST._IPrimitive _source381 = _10339___mcc_h856;
          if (_source381.is_Int) {
            DAST._IType _source382 = _8325___mcc_h1;
            if (_source382.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10340___mcc_h860 = _source382.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _10341___mcc_h861 = _source382.dtor_typeArgs;
              DAST._IResolvedType _10342___mcc_h862 = _source382.dtor_resolved;
              DAST._IResolvedType _source383 = _10342___mcc_h862;
              if (_source383.is_Datatype) {
                DAST._IDatatypeType _10343___mcc_h866 = _source383.dtor_datatypeType;
                {
                  RAST._IType _10344_fromTpeGen;
                  RAST._IType _out5324;
                  _out5324 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10344_fromTpeGen = _out5324;
                  RAST._IType _10345_toTpeGen;
                  RAST._IType _out5325;
                  _out5325 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10345_toTpeGen = _out5325;
                  RAST._IExpr _10346_recursiveGen;
                  DCOMPUTF16._IOwnership _10347_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10348_recIdents;
                  RAST._IExpr _out5326;
                  DCOMPUTF16._IOwnership _out5327;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5328;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5326, out _out5327, out _out5328);
                  _10346_recursiveGen = _out5326;
                  _10347_recOwned = _out5327;
                  _10348_recIdents = _out5328;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10346_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10344_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10345_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5329;
                  DCOMPUTF16._IOwnership _out5330;
                  DCOMPUTF16.COMP.FromOwnership(r, _10347_recOwned, expectedOwnership, out _out5329, out _out5330);
                  r = _out5329;
                  resultingOwnership = _out5330;
                  readIdents = _10348_recIdents;
                }
              } else if (_source383.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10349___mcc_h868 = _source383.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _10350___mcc_h869 = _source383.dtor_attributes;
                {
                  RAST._IType _10351_fromTpeGen;
                  RAST._IType _out5331;
                  _out5331 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10351_fromTpeGen = _out5331;
                  RAST._IType _10352_toTpeGen;
                  RAST._IType _out5332;
                  _out5332 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10352_toTpeGen = _out5332;
                  RAST._IExpr _10353_recursiveGen;
                  DCOMPUTF16._IOwnership _10354_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10355_recIdents;
                  RAST._IExpr _out5333;
                  DCOMPUTF16._IOwnership _out5334;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5335;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5333, out _out5334, out _out5335);
                  _10353_recursiveGen = _out5333;
                  _10354_recOwned = _out5334;
                  _10355_recIdents = _out5335;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10353_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10351_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10352_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5336;
                  DCOMPUTF16._IOwnership _out5337;
                  DCOMPUTF16.COMP.FromOwnership(r, _10354_recOwned, expectedOwnership, out _out5336, out _out5337);
                  r = _out5336;
                  resultingOwnership = _out5337;
                  readIdents = _10355_recIdents;
                }
              } else {
                DAST._IType _10356___mcc_h872 = _source383.dtor_baseType;
                DAST._INewtypeRange _10357___mcc_h873 = _source383.dtor_range;
                bool _10358___mcc_h874 = _source383.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _10359___mcc_h875 = _source383.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _10360_attributes = _10359___mcc_h875;
                bool _10361_erase = _10358___mcc_h874;
                DAST._INewtypeRange _10362_range = _10357___mcc_h873;
                DAST._IType _10363_b = _10356___mcc_h872;
                {
                  Std.Wrappers._IOption<RAST._IType> _10364_nativeToType;
                  _10364_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10363_b, _10362_range);
                  if (object.Equals(_8319_fromTpe, _10363_b)) {
                    RAST._IExpr _10365_recursiveGen;
                    DCOMPUTF16._IOwnership _10366_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10367_recIdents;
                    RAST._IExpr _out5338;
                    DCOMPUTF16._IOwnership _out5339;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5340;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5338, out _out5339, out _out5340);
                    _10365_recursiveGen = _out5338;
                    _10366_recOwned = _out5339;
                    _10367_recIdents = _out5340;
                    readIdents = _10367_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source384 = _10364_nativeToType;
                    if (_source384.is_None) {
                      if (_10361_erase) {
                        r = _10365_recursiveGen;
                      } else {
                        RAST._IType _10368_rhsType;
                        RAST._IType _out5341;
                        _out5341 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                        _10368_rhsType = _out5341;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10368_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10365_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out5342;
                      DCOMPUTF16._IOwnership _out5343;
                      DCOMPUTF16.COMP.FromOwnership(r, _10366_recOwned, expectedOwnership, out _out5342, out _out5343);
                      r = _out5342;
                      resultingOwnership = _out5343;
                    } else {
                      RAST._IType _10369___mcc_h1920 = _source384.dtor_value;
                      RAST._IType _10370_v = _10369___mcc_h1920;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10365_recursiveGen, RAST.Expr.create_ExprFromType(_10370_v)));
                      RAST._IExpr _out5344;
                      DCOMPUTF16._IOwnership _out5345;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5344, out _out5345);
                      r = _out5344;
                      resultingOwnership = _out5345;
                    }
                  } else {
                    if ((_10364_nativeToType).is_Some) {
                      DAST._IType _source385 = _8319_fromTpe;
                      if (_source385.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10371___mcc_h1921 = _source385.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _10372___mcc_h1922 = _source385.dtor_typeArgs;
                        DAST._IResolvedType _10373___mcc_h1923 = _source385.dtor_resolved;
                        DAST._IResolvedType _source386 = _10373___mcc_h1923;
                        if (_source386.is_Datatype) {
                          DAST._IDatatypeType _10374___mcc_h1927 = _source386.dtor_datatypeType;
                        } else if (_source386.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10375___mcc_h1929 = _source386.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _10376___mcc_h1930 = _source386.dtor_attributes;
                        } else {
                          DAST._IType _10377___mcc_h1933 = _source386.dtor_baseType;
                          DAST._INewtypeRange _10378___mcc_h1934 = _source386.dtor_range;
                          bool _10379___mcc_h1935 = _source386.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _10380___mcc_h1936 = _source386.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _10381_attributes0 = _10380___mcc_h1936;
                          bool _10382_erase0 = _10379___mcc_h1935;
                          DAST._INewtypeRange _10383_range0 = _10378___mcc_h1934;
                          DAST._IType _10384_b0 = _10377___mcc_h1933;
                          {
                            Std.Wrappers._IOption<RAST._IType> _10385_nativeFromType;
                            _10385_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10384_b0, _10383_range0);
                            if ((_10385_nativeFromType).is_Some) {
                              RAST._IExpr _10386_recursiveGen;
                              DCOMPUTF16._IOwnership _10387_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10388_recIdents;
                              RAST._IExpr _out5346;
                              DCOMPUTF16._IOwnership _out5347;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5348;
                              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5346, out _out5347, out _out5348);
                              _10386_recursiveGen = _out5346;
                              _10387_recOwned = _out5347;
                              _10388_recIdents = _out5348;
                              RAST._IExpr _out5349;
                              DCOMPUTF16._IOwnership _out5350;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10386_recursiveGen, (_10364_nativeToType).dtor_value), _10387_recOwned, expectedOwnership, out _out5349, out _out5350);
                              r = _out5349;
                              resultingOwnership = _out5350;
                              readIdents = _10388_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source385.is_Nullable) {
                        DAST._IType _10389___mcc_h1941 = _source385.dtor_Nullable_a0;
                      } else if (_source385.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _10390___mcc_h1943 = _source385.dtor_Tuple_a0;
                      } else if (_source385.is_Array) {
                        DAST._IType _10391___mcc_h1945 = _source385.dtor_element;
                        BigInteger _10392___mcc_h1946 = _source385.dtor_dims;
                      } else if (_source385.is_Seq) {
                        DAST._IType _10393___mcc_h1949 = _source385.dtor_element;
                      } else if (_source385.is_Set) {
                        DAST._IType _10394___mcc_h1951 = _source385.dtor_element;
                      } else if (_source385.is_Multiset) {
                        DAST._IType _10395___mcc_h1953 = _source385.dtor_element;
                      } else if (_source385.is_Map) {
                        DAST._IType _10396___mcc_h1955 = _source385.dtor_key;
                        DAST._IType _10397___mcc_h1956 = _source385.dtor_value;
                      } else if (_source385.is_SetBuilder) {
                        DAST._IType _10398___mcc_h1959 = _source385.dtor_element;
                      } else if (_source385.is_MapBuilder) {
                        DAST._IType _10399___mcc_h1961 = _source385.dtor_key;
                        DAST._IType _10400___mcc_h1962 = _source385.dtor_value;
                      } else if (_source385.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _10401___mcc_h1965 = _source385.dtor_args;
                        DAST._IType _10402___mcc_h1966 = _source385.dtor_result;
                      } else if (_source385.is_Primitive) {
                        DAST._IPrimitive _10403___mcc_h1969 = _source385.dtor_Primitive_a0;
                      } else if (_source385.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _10404___mcc_h1971 = _source385.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _10405___mcc_h1973 = _source385.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10406_recursiveGen;
                        DCOMPUTF16._IOwnership _10407_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10408_recIdents;
                        RAST._IExpr _out5351;
                        DCOMPUTF16._IOwnership _out5352;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5353;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5351, out _out5352, out _out5353);
                        _10406_recursiveGen = _out5351;
                        _10407_recOwned = _out5352;
                        _10408_recIdents = _out5353;
                        RAST._IExpr _out5354;
                        DCOMPUTF16._IOwnership _out5355;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10406_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10364_nativeToType).dtor_value), _10407_recOwned, expectedOwnership, out _out5354, out _out5355);
                        r = _out5354;
                        resultingOwnership = _out5355;
                        readIdents = _10408_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out5356;
                    DCOMPUTF16._IOwnership _out5357;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5358;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _10363_b), _10363_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out5356, out _out5357, out _out5358);
                    r = _out5356;
                    resultingOwnership = _out5357;
                    readIdents = _out5358;
                  }
                }
              }
            } else if (_source382.is_Nullable) {
              DAST._IType _10409___mcc_h880 = _source382.dtor_Nullable_a0;
              {
                RAST._IExpr _10410_recursiveGen;
                DCOMPUTF16._IOwnership _10411_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10412_recIdents;
                RAST._IExpr _out5359;
                DCOMPUTF16._IOwnership _out5360;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5361;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5359, out _out5360, out _out5361);
                _10410_recursiveGen = _out5359;
                _10411_recOwned = _out5360;
                _10412_recIdents = _out5361;
                r = _10410_recursiveGen;
                if (object.Equals(_10411_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out5362;
                DCOMPUTF16._IOwnership _out5363;
                DCOMPUTF16.COMP.FromOwnership(r, _10411_recOwned, expectedOwnership, out _out5362, out _out5363);
                r = _out5362;
                resultingOwnership = _out5363;
                readIdents = _10412_recIdents;
              }
            } else if (_source382.is_Tuple) {
              Dafny.ISequence<DAST._IType> _10413___mcc_h882 = _source382.dtor_Tuple_a0;
              {
                RAST._IType _10414_fromTpeGen;
                RAST._IType _out5364;
                _out5364 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10414_fromTpeGen = _out5364;
                RAST._IType _10415_toTpeGen;
                RAST._IType _out5365;
                _out5365 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10415_toTpeGen = _out5365;
                RAST._IExpr _10416_recursiveGen;
                DCOMPUTF16._IOwnership _10417_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10418_recIdents;
                RAST._IExpr _out5366;
                DCOMPUTF16._IOwnership _out5367;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5368;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5366, out _out5367, out _out5368);
                _10416_recursiveGen = _out5366;
                _10417_recOwned = _out5367;
                _10418_recIdents = _out5368;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10416_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10414_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10415_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5369;
                DCOMPUTF16._IOwnership _out5370;
                DCOMPUTF16.COMP.FromOwnership(r, _10417_recOwned, expectedOwnership, out _out5369, out _out5370);
                r = _out5369;
                resultingOwnership = _out5370;
                readIdents = _10418_recIdents;
              }
            } else if (_source382.is_Array) {
              DAST._IType _10419___mcc_h884 = _source382.dtor_element;
              BigInteger _10420___mcc_h885 = _source382.dtor_dims;
              {
                RAST._IType _10421_fromTpeGen;
                RAST._IType _out5371;
                _out5371 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10421_fromTpeGen = _out5371;
                RAST._IType _10422_toTpeGen;
                RAST._IType _out5372;
                _out5372 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10422_toTpeGen = _out5372;
                RAST._IExpr _10423_recursiveGen;
                DCOMPUTF16._IOwnership _10424_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10425_recIdents;
                RAST._IExpr _out5373;
                DCOMPUTF16._IOwnership _out5374;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5375;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5373, out _out5374, out _out5375);
                _10423_recursiveGen = _out5373;
                _10424_recOwned = _out5374;
                _10425_recIdents = _out5375;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10423_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10421_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10422_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5376;
                DCOMPUTF16._IOwnership _out5377;
                DCOMPUTF16.COMP.FromOwnership(r, _10424_recOwned, expectedOwnership, out _out5376, out _out5377);
                r = _out5376;
                resultingOwnership = _out5377;
                readIdents = _10425_recIdents;
              }
            } else if (_source382.is_Seq) {
              DAST._IType _10426___mcc_h888 = _source382.dtor_element;
              {
                RAST._IType _10427_fromTpeGen;
                RAST._IType _out5378;
                _out5378 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10427_fromTpeGen = _out5378;
                RAST._IType _10428_toTpeGen;
                RAST._IType _out5379;
                _out5379 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10428_toTpeGen = _out5379;
                RAST._IExpr _10429_recursiveGen;
                DCOMPUTF16._IOwnership _10430_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10431_recIdents;
                RAST._IExpr _out5380;
                DCOMPUTF16._IOwnership _out5381;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5382;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5380, out _out5381, out _out5382);
                _10429_recursiveGen = _out5380;
                _10430_recOwned = _out5381;
                _10431_recIdents = _out5382;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10429_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10427_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10428_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5383;
                DCOMPUTF16._IOwnership _out5384;
                DCOMPUTF16.COMP.FromOwnership(r, _10430_recOwned, expectedOwnership, out _out5383, out _out5384);
                r = _out5383;
                resultingOwnership = _out5384;
                readIdents = _10431_recIdents;
              }
            } else if (_source382.is_Set) {
              DAST._IType _10432___mcc_h890 = _source382.dtor_element;
              {
                RAST._IType _10433_fromTpeGen;
                RAST._IType _out5385;
                _out5385 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10433_fromTpeGen = _out5385;
                RAST._IType _10434_toTpeGen;
                RAST._IType _out5386;
                _out5386 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10434_toTpeGen = _out5386;
                RAST._IExpr _10435_recursiveGen;
                DCOMPUTF16._IOwnership _10436_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10437_recIdents;
                RAST._IExpr _out5387;
                DCOMPUTF16._IOwnership _out5388;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5389;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5387, out _out5388, out _out5389);
                _10435_recursiveGen = _out5387;
                _10436_recOwned = _out5388;
                _10437_recIdents = _out5389;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10435_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10433_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10434_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5390;
                DCOMPUTF16._IOwnership _out5391;
                DCOMPUTF16.COMP.FromOwnership(r, _10436_recOwned, expectedOwnership, out _out5390, out _out5391);
                r = _out5390;
                resultingOwnership = _out5391;
                readIdents = _10437_recIdents;
              }
            } else if (_source382.is_Multiset) {
              DAST._IType _10438___mcc_h892 = _source382.dtor_element;
              {
                RAST._IType _10439_fromTpeGen;
                RAST._IType _out5392;
                _out5392 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10439_fromTpeGen = _out5392;
                RAST._IType _10440_toTpeGen;
                RAST._IType _out5393;
                _out5393 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10440_toTpeGen = _out5393;
                RAST._IExpr _10441_recursiveGen;
                DCOMPUTF16._IOwnership _10442_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10443_recIdents;
                RAST._IExpr _out5394;
                DCOMPUTF16._IOwnership _out5395;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5396;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5394, out _out5395, out _out5396);
                _10441_recursiveGen = _out5394;
                _10442_recOwned = _out5395;
                _10443_recIdents = _out5396;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10441_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10439_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10440_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5397;
                DCOMPUTF16._IOwnership _out5398;
                DCOMPUTF16.COMP.FromOwnership(r, _10442_recOwned, expectedOwnership, out _out5397, out _out5398);
                r = _out5397;
                resultingOwnership = _out5398;
                readIdents = _10443_recIdents;
              }
            } else if (_source382.is_Map) {
              DAST._IType _10444___mcc_h894 = _source382.dtor_key;
              DAST._IType _10445___mcc_h895 = _source382.dtor_value;
              {
                RAST._IType _10446_fromTpeGen;
                RAST._IType _out5399;
                _out5399 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10446_fromTpeGen = _out5399;
                RAST._IType _10447_toTpeGen;
                RAST._IType _out5400;
                _out5400 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10447_toTpeGen = _out5400;
                RAST._IExpr _10448_recursiveGen;
                DCOMPUTF16._IOwnership _10449_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10450_recIdents;
                RAST._IExpr _out5401;
                DCOMPUTF16._IOwnership _out5402;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5403;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5401, out _out5402, out _out5403);
                _10448_recursiveGen = _out5401;
                _10449_recOwned = _out5402;
                _10450_recIdents = _out5403;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10448_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10446_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10447_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5404;
                DCOMPUTF16._IOwnership _out5405;
                DCOMPUTF16.COMP.FromOwnership(r, _10449_recOwned, expectedOwnership, out _out5404, out _out5405);
                r = _out5404;
                resultingOwnership = _out5405;
                readIdents = _10450_recIdents;
              }
            } else if (_source382.is_SetBuilder) {
              DAST._IType _10451___mcc_h898 = _source382.dtor_element;
              {
                RAST._IType _10452_fromTpeGen;
                RAST._IType _out5406;
                _out5406 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10452_fromTpeGen = _out5406;
                RAST._IType _10453_toTpeGen;
                RAST._IType _out5407;
                _out5407 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10453_toTpeGen = _out5407;
                RAST._IExpr _10454_recursiveGen;
                DCOMPUTF16._IOwnership _10455_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10456_recIdents;
                RAST._IExpr _out5408;
                DCOMPUTF16._IOwnership _out5409;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5410;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5408, out _out5409, out _out5410);
                _10454_recursiveGen = _out5408;
                _10455_recOwned = _out5409;
                _10456_recIdents = _out5410;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10454_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10452_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10453_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5411;
                DCOMPUTF16._IOwnership _out5412;
                DCOMPUTF16.COMP.FromOwnership(r, _10455_recOwned, expectedOwnership, out _out5411, out _out5412);
                r = _out5411;
                resultingOwnership = _out5412;
                readIdents = _10456_recIdents;
              }
            } else if (_source382.is_MapBuilder) {
              DAST._IType _10457___mcc_h900 = _source382.dtor_key;
              DAST._IType _10458___mcc_h901 = _source382.dtor_value;
              {
                RAST._IType _10459_fromTpeGen;
                RAST._IType _out5413;
                _out5413 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10459_fromTpeGen = _out5413;
                RAST._IType _10460_toTpeGen;
                RAST._IType _out5414;
                _out5414 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10460_toTpeGen = _out5414;
                RAST._IExpr _10461_recursiveGen;
                DCOMPUTF16._IOwnership _10462_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10463_recIdents;
                RAST._IExpr _out5415;
                DCOMPUTF16._IOwnership _out5416;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5417;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5415, out _out5416, out _out5417);
                _10461_recursiveGen = _out5415;
                _10462_recOwned = _out5416;
                _10463_recIdents = _out5417;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10461_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10459_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10460_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5418;
                DCOMPUTF16._IOwnership _out5419;
                DCOMPUTF16.COMP.FromOwnership(r, _10462_recOwned, expectedOwnership, out _out5418, out _out5419);
                r = _out5418;
                resultingOwnership = _out5419;
                readIdents = _10463_recIdents;
              }
            } else if (_source382.is_Arrow) {
              Dafny.ISequence<DAST._IType> _10464___mcc_h904 = _source382.dtor_args;
              DAST._IType _10465___mcc_h905 = _source382.dtor_result;
              {
                RAST._IType _10466_fromTpeGen;
                RAST._IType _out5420;
                _out5420 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10466_fromTpeGen = _out5420;
                RAST._IType _10467_toTpeGen;
                RAST._IType _out5421;
                _out5421 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10467_toTpeGen = _out5421;
                RAST._IExpr _10468_recursiveGen;
                DCOMPUTF16._IOwnership _10469_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10470_recIdents;
                RAST._IExpr _out5422;
                DCOMPUTF16._IOwnership _out5423;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5424;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5422, out _out5423, out _out5424);
                _10468_recursiveGen = _out5422;
                _10469_recOwned = _out5423;
                _10470_recIdents = _out5424;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10468_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10466_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10467_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5425;
                DCOMPUTF16._IOwnership _out5426;
                DCOMPUTF16.COMP.FromOwnership(r, _10469_recOwned, expectedOwnership, out _out5425, out _out5426);
                r = _out5425;
                resultingOwnership = _out5426;
                readIdents = _10470_recIdents;
              }
            } else if (_source382.is_Primitive) {
              DAST._IPrimitive _10471___mcc_h908 = _source382.dtor_Primitive_a0;
              DAST._IPrimitive _source387 = _10471___mcc_h908;
              if (_source387.is_Int) {
                {
                  RAST._IType _10472_fromTpeGen;
                  RAST._IType _out5427;
                  _out5427 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10472_fromTpeGen = _out5427;
                  RAST._IType _10473_toTpeGen;
                  RAST._IType _out5428;
                  _out5428 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10473_toTpeGen = _out5428;
                  RAST._IExpr _10474_recursiveGen;
                  DCOMPUTF16._IOwnership _10475_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10476_recIdents;
                  RAST._IExpr _out5429;
                  DCOMPUTF16._IOwnership _out5430;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5431;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5429, out _out5430, out _out5431);
                  _10474_recursiveGen = _out5429;
                  _10475_recOwned = _out5430;
                  _10476_recIdents = _out5431;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10474_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10472_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10473_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5432;
                  DCOMPUTF16._IOwnership _out5433;
                  DCOMPUTF16.COMP.FromOwnership(r, _10475_recOwned, expectedOwnership, out _out5432, out _out5433);
                  r = _out5432;
                  resultingOwnership = _out5433;
                  readIdents = _10476_recIdents;
                }
              } else if (_source387.is_Real) {
                {
                  RAST._IExpr _10477_recursiveGen;
                  DCOMPUTF16._IOwnership _10478___v91;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10479_recIdents;
                  RAST._IExpr _out5434;
                  DCOMPUTF16._IOwnership _out5435;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5436;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5434, out _out5435, out _out5436);
                  _10477_recursiveGen = _out5434;
                  _10478___v91 = _out5435;
                  _10479_recIdents = _out5436;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_10477_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out5437;
                  DCOMPUTF16._IOwnership _out5438;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5437, out _out5438);
                  r = _out5437;
                  resultingOwnership = _out5438;
                  readIdents = _10479_recIdents;
                }
              } else if (_source387.is_String) {
                {
                  RAST._IType _10480_fromTpeGen;
                  RAST._IType _out5439;
                  _out5439 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10480_fromTpeGen = _out5439;
                  RAST._IType _10481_toTpeGen;
                  RAST._IType _out5440;
                  _out5440 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10481_toTpeGen = _out5440;
                  RAST._IExpr _10482_recursiveGen;
                  DCOMPUTF16._IOwnership _10483_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10484_recIdents;
                  RAST._IExpr _out5441;
                  DCOMPUTF16._IOwnership _out5442;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5443;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5441, out _out5442, out _out5443);
                  _10482_recursiveGen = _out5441;
                  _10483_recOwned = _out5442;
                  _10484_recIdents = _out5443;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10482_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10480_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10481_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5444;
                  DCOMPUTF16._IOwnership _out5445;
                  DCOMPUTF16.COMP.FromOwnership(r, _10483_recOwned, expectedOwnership, out _out5444, out _out5445);
                  r = _out5444;
                  resultingOwnership = _out5445;
                  readIdents = _10484_recIdents;
                }
              } else if (_source387.is_Bool) {
                {
                  RAST._IType _10485_fromTpeGen;
                  RAST._IType _out5446;
                  _out5446 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10485_fromTpeGen = _out5446;
                  RAST._IType _10486_toTpeGen;
                  RAST._IType _out5447;
                  _out5447 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10486_toTpeGen = _out5447;
                  RAST._IExpr _10487_recursiveGen;
                  DCOMPUTF16._IOwnership _10488_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10489_recIdents;
                  RAST._IExpr _out5448;
                  DCOMPUTF16._IOwnership _out5449;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5450;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5448, out _out5449, out _out5450);
                  _10487_recursiveGen = _out5448;
                  _10488_recOwned = _out5449;
                  _10489_recIdents = _out5450;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10487_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10485_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10486_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5451;
                  DCOMPUTF16._IOwnership _out5452;
                  DCOMPUTF16.COMP.FromOwnership(r, _10488_recOwned, expectedOwnership, out _out5451, out _out5452);
                  r = _out5451;
                  resultingOwnership = _out5452;
                  readIdents = _10489_recIdents;
                }
              } else {
                {
                  RAST._IType _10490_rhsType;
                  RAST._IType _out5453;
                  _out5453 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10490_rhsType = _out5453;
                  RAST._IExpr _10491_recursiveGen;
                  DCOMPUTF16._IOwnership _10492___v97;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10493_recIdents;
                  RAST._IExpr _out5454;
                  DCOMPUTF16._IOwnership _out5455;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5456;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5454, out _out5455, out _out5456);
                  _10491_recursiveGen = _out5454;
                  _10492___v97 = _out5455;
                  _10493_recIdents = _out5456;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_10491_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out5457;
                  DCOMPUTF16._IOwnership _out5458;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5457, out _out5458);
                  r = _out5457;
                  resultingOwnership = _out5458;
                  readIdents = _10493_recIdents;
                }
              }
            } else if (_source382.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _10494___mcc_h910 = _source382.dtor_Passthrough_a0;
              {
                RAST._IType _10495_rhsType;
                RAST._IType _out5459;
                _out5459 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10495_rhsType = _out5459;
                RAST._IExpr _10496_recursiveGen;
                DCOMPUTF16._IOwnership _10497___v94;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10498_recIdents;
                RAST._IExpr _out5460;
                DCOMPUTF16._IOwnership _out5461;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5462;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5460, out _out5461, out _out5462);
                _10496_recursiveGen = _out5460;
                _10497___v94 = _out5461;
                _10498_recIdents = _out5462;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_10495_rhsType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_10496_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out5463;
                DCOMPUTF16._IOwnership _out5464;
                DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5463, out _out5464);
                r = _out5463;
                resultingOwnership = _out5464;
                readIdents = _10498_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _10499___mcc_h912 = _source382.dtor_TypeArg_a0;
              {
                RAST._IType _10500_fromTpeGen;
                RAST._IType _out5465;
                _out5465 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10500_fromTpeGen = _out5465;
                RAST._IType _10501_toTpeGen;
                RAST._IType _out5466;
                _out5466 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10501_toTpeGen = _out5466;
                RAST._IExpr _10502_recursiveGen;
                DCOMPUTF16._IOwnership _10503_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10504_recIdents;
                RAST._IExpr _out5467;
                DCOMPUTF16._IOwnership _out5468;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5469;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5467, out _out5468, out _out5469);
                _10502_recursiveGen = _out5467;
                _10503_recOwned = _out5468;
                _10504_recIdents = _out5469;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10502_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10500_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10501_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5470;
                DCOMPUTF16._IOwnership _out5471;
                DCOMPUTF16.COMP.FromOwnership(r, _10503_recOwned, expectedOwnership, out _out5470, out _out5471);
                r = _out5470;
                resultingOwnership = _out5471;
                readIdents = _10504_recIdents;
              }
            }
          } else if (_source381.is_Real) {
            DAST._IType _source388 = _8325___mcc_h1;
            if (_source388.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10505___mcc_h914 = _source388.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _10506___mcc_h915 = _source388.dtor_typeArgs;
              DAST._IResolvedType _10507___mcc_h916 = _source388.dtor_resolved;
              DAST._IResolvedType _source389 = _10507___mcc_h916;
              if (_source389.is_Datatype) {
                DAST._IDatatypeType _10508___mcc_h920 = _source389.dtor_datatypeType;
                {
                  RAST._IType _10509_fromTpeGen;
                  RAST._IType _out5472;
                  _out5472 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10509_fromTpeGen = _out5472;
                  RAST._IType _10510_toTpeGen;
                  RAST._IType _out5473;
                  _out5473 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10510_toTpeGen = _out5473;
                  RAST._IExpr _10511_recursiveGen;
                  DCOMPUTF16._IOwnership _10512_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10513_recIdents;
                  RAST._IExpr _out5474;
                  DCOMPUTF16._IOwnership _out5475;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5476;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5474, out _out5475, out _out5476);
                  _10511_recursiveGen = _out5474;
                  _10512_recOwned = _out5475;
                  _10513_recIdents = _out5476;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10511_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10509_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10510_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5477;
                  DCOMPUTF16._IOwnership _out5478;
                  DCOMPUTF16.COMP.FromOwnership(r, _10512_recOwned, expectedOwnership, out _out5477, out _out5478);
                  r = _out5477;
                  resultingOwnership = _out5478;
                  readIdents = _10513_recIdents;
                }
              } else if (_source389.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10514___mcc_h922 = _source389.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _10515___mcc_h923 = _source389.dtor_attributes;
                {
                  RAST._IType _10516_fromTpeGen;
                  RAST._IType _out5479;
                  _out5479 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10516_fromTpeGen = _out5479;
                  RAST._IType _10517_toTpeGen;
                  RAST._IType _out5480;
                  _out5480 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10517_toTpeGen = _out5480;
                  RAST._IExpr _10518_recursiveGen;
                  DCOMPUTF16._IOwnership _10519_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10520_recIdents;
                  RAST._IExpr _out5481;
                  DCOMPUTF16._IOwnership _out5482;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5483;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5481, out _out5482, out _out5483);
                  _10518_recursiveGen = _out5481;
                  _10519_recOwned = _out5482;
                  _10520_recIdents = _out5483;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10518_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10516_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10517_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5484;
                  DCOMPUTF16._IOwnership _out5485;
                  DCOMPUTF16.COMP.FromOwnership(r, _10519_recOwned, expectedOwnership, out _out5484, out _out5485);
                  r = _out5484;
                  resultingOwnership = _out5485;
                  readIdents = _10520_recIdents;
                }
              } else {
                DAST._IType _10521___mcc_h926 = _source389.dtor_baseType;
                DAST._INewtypeRange _10522___mcc_h927 = _source389.dtor_range;
                bool _10523___mcc_h928 = _source389.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _10524___mcc_h929 = _source389.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _10525_attributes = _10524___mcc_h929;
                bool _10526_erase = _10523___mcc_h928;
                DAST._INewtypeRange _10527_range = _10522___mcc_h927;
                DAST._IType _10528_b = _10521___mcc_h926;
                {
                  Std.Wrappers._IOption<RAST._IType> _10529_nativeToType;
                  _10529_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10528_b, _10527_range);
                  if (object.Equals(_8319_fromTpe, _10528_b)) {
                    RAST._IExpr _10530_recursiveGen;
                    DCOMPUTF16._IOwnership _10531_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10532_recIdents;
                    RAST._IExpr _out5486;
                    DCOMPUTF16._IOwnership _out5487;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5488;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5486, out _out5487, out _out5488);
                    _10530_recursiveGen = _out5486;
                    _10531_recOwned = _out5487;
                    _10532_recIdents = _out5488;
                    readIdents = _10532_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source390 = _10529_nativeToType;
                    if (_source390.is_None) {
                      if (_10526_erase) {
                        r = _10530_recursiveGen;
                      } else {
                        RAST._IType _10533_rhsType;
                        RAST._IType _out5489;
                        _out5489 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                        _10533_rhsType = _out5489;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10533_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10530_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out5490;
                      DCOMPUTF16._IOwnership _out5491;
                      DCOMPUTF16.COMP.FromOwnership(r, _10531_recOwned, expectedOwnership, out _out5490, out _out5491);
                      r = _out5490;
                      resultingOwnership = _out5491;
                    } else {
                      RAST._IType _10534___mcc_h1975 = _source390.dtor_value;
                      RAST._IType _10535_v = _10534___mcc_h1975;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10530_recursiveGen, RAST.Expr.create_ExprFromType(_10535_v)));
                      RAST._IExpr _out5492;
                      DCOMPUTF16._IOwnership _out5493;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5492, out _out5493);
                      r = _out5492;
                      resultingOwnership = _out5493;
                    }
                  } else {
                    if ((_10529_nativeToType).is_Some) {
                      DAST._IType _source391 = _8319_fromTpe;
                      if (_source391.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10536___mcc_h1976 = _source391.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _10537___mcc_h1977 = _source391.dtor_typeArgs;
                        DAST._IResolvedType _10538___mcc_h1978 = _source391.dtor_resolved;
                        DAST._IResolvedType _source392 = _10538___mcc_h1978;
                        if (_source392.is_Datatype) {
                          DAST._IDatatypeType _10539___mcc_h1982 = _source392.dtor_datatypeType;
                        } else if (_source392.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10540___mcc_h1984 = _source392.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _10541___mcc_h1985 = _source392.dtor_attributes;
                        } else {
                          DAST._IType _10542___mcc_h1988 = _source392.dtor_baseType;
                          DAST._INewtypeRange _10543___mcc_h1989 = _source392.dtor_range;
                          bool _10544___mcc_h1990 = _source392.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _10545___mcc_h1991 = _source392.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _10546_attributes0 = _10545___mcc_h1991;
                          bool _10547_erase0 = _10544___mcc_h1990;
                          DAST._INewtypeRange _10548_range0 = _10543___mcc_h1989;
                          DAST._IType _10549_b0 = _10542___mcc_h1988;
                          {
                            Std.Wrappers._IOption<RAST._IType> _10550_nativeFromType;
                            _10550_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10549_b0, _10548_range0);
                            if ((_10550_nativeFromType).is_Some) {
                              RAST._IExpr _10551_recursiveGen;
                              DCOMPUTF16._IOwnership _10552_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10553_recIdents;
                              RAST._IExpr _out5494;
                              DCOMPUTF16._IOwnership _out5495;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5496;
                              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5494, out _out5495, out _out5496);
                              _10551_recursiveGen = _out5494;
                              _10552_recOwned = _out5495;
                              _10553_recIdents = _out5496;
                              RAST._IExpr _out5497;
                              DCOMPUTF16._IOwnership _out5498;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10551_recursiveGen, (_10529_nativeToType).dtor_value), _10552_recOwned, expectedOwnership, out _out5497, out _out5498);
                              r = _out5497;
                              resultingOwnership = _out5498;
                              readIdents = _10553_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source391.is_Nullable) {
                        DAST._IType _10554___mcc_h1996 = _source391.dtor_Nullable_a0;
                      } else if (_source391.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _10555___mcc_h1998 = _source391.dtor_Tuple_a0;
                      } else if (_source391.is_Array) {
                        DAST._IType _10556___mcc_h2000 = _source391.dtor_element;
                        BigInteger _10557___mcc_h2001 = _source391.dtor_dims;
                      } else if (_source391.is_Seq) {
                        DAST._IType _10558___mcc_h2004 = _source391.dtor_element;
                      } else if (_source391.is_Set) {
                        DAST._IType _10559___mcc_h2006 = _source391.dtor_element;
                      } else if (_source391.is_Multiset) {
                        DAST._IType _10560___mcc_h2008 = _source391.dtor_element;
                      } else if (_source391.is_Map) {
                        DAST._IType _10561___mcc_h2010 = _source391.dtor_key;
                        DAST._IType _10562___mcc_h2011 = _source391.dtor_value;
                      } else if (_source391.is_SetBuilder) {
                        DAST._IType _10563___mcc_h2014 = _source391.dtor_element;
                      } else if (_source391.is_MapBuilder) {
                        DAST._IType _10564___mcc_h2016 = _source391.dtor_key;
                        DAST._IType _10565___mcc_h2017 = _source391.dtor_value;
                      } else if (_source391.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _10566___mcc_h2020 = _source391.dtor_args;
                        DAST._IType _10567___mcc_h2021 = _source391.dtor_result;
                      } else if (_source391.is_Primitive) {
                        DAST._IPrimitive _10568___mcc_h2024 = _source391.dtor_Primitive_a0;
                      } else if (_source391.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _10569___mcc_h2026 = _source391.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _10570___mcc_h2028 = _source391.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10571_recursiveGen;
                        DCOMPUTF16._IOwnership _10572_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10573_recIdents;
                        RAST._IExpr _out5499;
                        DCOMPUTF16._IOwnership _out5500;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5501;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5499, out _out5500, out _out5501);
                        _10571_recursiveGen = _out5499;
                        _10572_recOwned = _out5500;
                        _10573_recIdents = _out5501;
                        RAST._IExpr _out5502;
                        DCOMPUTF16._IOwnership _out5503;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10571_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10529_nativeToType).dtor_value), _10572_recOwned, expectedOwnership, out _out5502, out _out5503);
                        r = _out5502;
                        resultingOwnership = _out5503;
                        readIdents = _10573_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out5504;
                    DCOMPUTF16._IOwnership _out5505;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5506;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _10528_b), _10528_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out5504, out _out5505, out _out5506);
                    r = _out5504;
                    resultingOwnership = _out5505;
                    readIdents = _out5506;
                  }
                }
              }
            } else if (_source388.is_Nullable) {
              DAST._IType _10574___mcc_h934 = _source388.dtor_Nullable_a0;
              {
                RAST._IExpr _10575_recursiveGen;
                DCOMPUTF16._IOwnership _10576_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10577_recIdents;
                RAST._IExpr _out5507;
                DCOMPUTF16._IOwnership _out5508;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5509;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5507, out _out5508, out _out5509);
                _10575_recursiveGen = _out5507;
                _10576_recOwned = _out5508;
                _10577_recIdents = _out5509;
                r = _10575_recursiveGen;
                if (object.Equals(_10576_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out5510;
                DCOMPUTF16._IOwnership _out5511;
                DCOMPUTF16.COMP.FromOwnership(r, _10576_recOwned, expectedOwnership, out _out5510, out _out5511);
                r = _out5510;
                resultingOwnership = _out5511;
                readIdents = _10577_recIdents;
              }
            } else if (_source388.is_Tuple) {
              Dafny.ISequence<DAST._IType> _10578___mcc_h936 = _source388.dtor_Tuple_a0;
              {
                RAST._IType _10579_fromTpeGen;
                RAST._IType _out5512;
                _out5512 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10579_fromTpeGen = _out5512;
                RAST._IType _10580_toTpeGen;
                RAST._IType _out5513;
                _out5513 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10580_toTpeGen = _out5513;
                RAST._IExpr _10581_recursiveGen;
                DCOMPUTF16._IOwnership _10582_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10583_recIdents;
                RAST._IExpr _out5514;
                DCOMPUTF16._IOwnership _out5515;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5516;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5514, out _out5515, out _out5516);
                _10581_recursiveGen = _out5514;
                _10582_recOwned = _out5515;
                _10583_recIdents = _out5516;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10581_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10579_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10580_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5517;
                DCOMPUTF16._IOwnership _out5518;
                DCOMPUTF16.COMP.FromOwnership(r, _10582_recOwned, expectedOwnership, out _out5517, out _out5518);
                r = _out5517;
                resultingOwnership = _out5518;
                readIdents = _10583_recIdents;
              }
            } else if (_source388.is_Array) {
              DAST._IType _10584___mcc_h938 = _source388.dtor_element;
              BigInteger _10585___mcc_h939 = _source388.dtor_dims;
              {
                RAST._IType _10586_fromTpeGen;
                RAST._IType _out5519;
                _out5519 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10586_fromTpeGen = _out5519;
                RAST._IType _10587_toTpeGen;
                RAST._IType _out5520;
                _out5520 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10587_toTpeGen = _out5520;
                RAST._IExpr _10588_recursiveGen;
                DCOMPUTF16._IOwnership _10589_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10590_recIdents;
                RAST._IExpr _out5521;
                DCOMPUTF16._IOwnership _out5522;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5523;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5521, out _out5522, out _out5523);
                _10588_recursiveGen = _out5521;
                _10589_recOwned = _out5522;
                _10590_recIdents = _out5523;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10588_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10586_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10587_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5524;
                DCOMPUTF16._IOwnership _out5525;
                DCOMPUTF16.COMP.FromOwnership(r, _10589_recOwned, expectedOwnership, out _out5524, out _out5525);
                r = _out5524;
                resultingOwnership = _out5525;
                readIdents = _10590_recIdents;
              }
            } else if (_source388.is_Seq) {
              DAST._IType _10591___mcc_h942 = _source388.dtor_element;
              {
                RAST._IType _10592_fromTpeGen;
                RAST._IType _out5526;
                _out5526 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10592_fromTpeGen = _out5526;
                RAST._IType _10593_toTpeGen;
                RAST._IType _out5527;
                _out5527 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10593_toTpeGen = _out5527;
                RAST._IExpr _10594_recursiveGen;
                DCOMPUTF16._IOwnership _10595_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10596_recIdents;
                RAST._IExpr _out5528;
                DCOMPUTF16._IOwnership _out5529;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5530;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5528, out _out5529, out _out5530);
                _10594_recursiveGen = _out5528;
                _10595_recOwned = _out5529;
                _10596_recIdents = _out5530;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10594_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10592_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10593_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5531;
                DCOMPUTF16._IOwnership _out5532;
                DCOMPUTF16.COMP.FromOwnership(r, _10595_recOwned, expectedOwnership, out _out5531, out _out5532);
                r = _out5531;
                resultingOwnership = _out5532;
                readIdents = _10596_recIdents;
              }
            } else if (_source388.is_Set) {
              DAST._IType _10597___mcc_h944 = _source388.dtor_element;
              {
                RAST._IType _10598_fromTpeGen;
                RAST._IType _out5533;
                _out5533 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10598_fromTpeGen = _out5533;
                RAST._IType _10599_toTpeGen;
                RAST._IType _out5534;
                _out5534 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10599_toTpeGen = _out5534;
                RAST._IExpr _10600_recursiveGen;
                DCOMPUTF16._IOwnership _10601_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10602_recIdents;
                RAST._IExpr _out5535;
                DCOMPUTF16._IOwnership _out5536;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5537;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5535, out _out5536, out _out5537);
                _10600_recursiveGen = _out5535;
                _10601_recOwned = _out5536;
                _10602_recIdents = _out5537;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10600_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10598_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10599_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5538;
                DCOMPUTF16._IOwnership _out5539;
                DCOMPUTF16.COMP.FromOwnership(r, _10601_recOwned, expectedOwnership, out _out5538, out _out5539);
                r = _out5538;
                resultingOwnership = _out5539;
                readIdents = _10602_recIdents;
              }
            } else if (_source388.is_Multiset) {
              DAST._IType _10603___mcc_h946 = _source388.dtor_element;
              {
                RAST._IType _10604_fromTpeGen;
                RAST._IType _out5540;
                _out5540 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10604_fromTpeGen = _out5540;
                RAST._IType _10605_toTpeGen;
                RAST._IType _out5541;
                _out5541 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10605_toTpeGen = _out5541;
                RAST._IExpr _10606_recursiveGen;
                DCOMPUTF16._IOwnership _10607_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10608_recIdents;
                RAST._IExpr _out5542;
                DCOMPUTF16._IOwnership _out5543;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5544;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5542, out _out5543, out _out5544);
                _10606_recursiveGen = _out5542;
                _10607_recOwned = _out5543;
                _10608_recIdents = _out5544;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10606_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10604_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10605_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5545;
                DCOMPUTF16._IOwnership _out5546;
                DCOMPUTF16.COMP.FromOwnership(r, _10607_recOwned, expectedOwnership, out _out5545, out _out5546);
                r = _out5545;
                resultingOwnership = _out5546;
                readIdents = _10608_recIdents;
              }
            } else if (_source388.is_Map) {
              DAST._IType _10609___mcc_h948 = _source388.dtor_key;
              DAST._IType _10610___mcc_h949 = _source388.dtor_value;
              {
                RAST._IType _10611_fromTpeGen;
                RAST._IType _out5547;
                _out5547 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10611_fromTpeGen = _out5547;
                RAST._IType _10612_toTpeGen;
                RAST._IType _out5548;
                _out5548 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10612_toTpeGen = _out5548;
                RAST._IExpr _10613_recursiveGen;
                DCOMPUTF16._IOwnership _10614_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10615_recIdents;
                RAST._IExpr _out5549;
                DCOMPUTF16._IOwnership _out5550;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5551;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5549, out _out5550, out _out5551);
                _10613_recursiveGen = _out5549;
                _10614_recOwned = _out5550;
                _10615_recIdents = _out5551;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10613_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10611_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10612_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5552;
                DCOMPUTF16._IOwnership _out5553;
                DCOMPUTF16.COMP.FromOwnership(r, _10614_recOwned, expectedOwnership, out _out5552, out _out5553);
                r = _out5552;
                resultingOwnership = _out5553;
                readIdents = _10615_recIdents;
              }
            } else if (_source388.is_SetBuilder) {
              DAST._IType _10616___mcc_h952 = _source388.dtor_element;
              {
                RAST._IType _10617_fromTpeGen;
                RAST._IType _out5554;
                _out5554 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10617_fromTpeGen = _out5554;
                RAST._IType _10618_toTpeGen;
                RAST._IType _out5555;
                _out5555 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10618_toTpeGen = _out5555;
                RAST._IExpr _10619_recursiveGen;
                DCOMPUTF16._IOwnership _10620_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10621_recIdents;
                RAST._IExpr _out5556;
                DCOMPUTF16._IOwnership _out5557;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5558;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5556, out _out5557, out _out5558);
                _10619_recursiveGen = _out5556;
                _10620_recOwned = _out5557;
                _10621_recIdents = _out5558;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10619_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10617_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10618_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5559;
                DCOMPUTF16._IOwnership _out5560;
                DCOMPUTF16.COMP.FromOwnership(r, _10620_recOwned, expectedOwnership, out _out5559, out _out5560);
                r = _out5559;
                resultingOwnership = _out5560;
                readIdents = _10621_recIdents;
              }
            } else if (_source388.is_MapBuilder) {
              DAST._IType _10622___mcc_h954 = _source388.dtor_key;
              DAST._IType _10623___mcc_h955 = _source388.dtor_value;
              {
                RAST._IType _10624_fromTpeGen;
                RAST._IType _out5561;
                _out5561 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10624_fromTpeGen = _out5561;
                RAST._IType _10625_toTpeGen;
                RAST._IType _out5562;
                _out5562 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10625_toTpeGen = _out5562;
                RAST._IExpr _10626_recursiveGen;
                DCOMPUTF16._IOwnership _10627_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10628_recIdents;
                RAST._IExpr _out5563;
                DCOMPUTF16._IOwnership _out5564;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5565;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5563, out _out5564, out _out5565);
                _10626_recursiveGen = _out5563;
                _10627_recOwned = _out5564;
                _10628_recIdents = _out5565;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10626_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10624_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10625_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5566;
                DCOMPUTF16._IOwnership _out5567;
                DCOMPUTF16.COMP.FromOwnership(r, _10627_recOwned, expectedOwnership, out _out5566, out _out5567);
                r = _out5566;
                resultingOwnership = _out5567;
                readIdents = _10628_recIdents;
              }
            } else if (_source388.is_Arrow) {
              Dafny.ISequence<DAST._IType> _10629___mcc_h958 = _source388.dtor_args;
              DAST._IType _10630___mcc_h959 = _source388.dtor_result;
              {
                RAST._IType _10631_fromTpeGen;
                RAST._IType _out5568;
                _out5568 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10631_fromTpeGen = _out5568;
                RAST._IType _10632_toTpeGen;
                RAST._IType _out5569;
                _out5569 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10632_toTpeGen = _out5569;
                RAST._IExpr _10633_recursiveGen;
                DCOMPUTF16._IOwnership _10634_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10635_recIdents;
                RAST._IExpr _out5570;
                DCOMPUTF16._IOwnership _out5571;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5572;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5570, out _out5571, out _out5572);
                _10633_recursiveGen = _out5570;
                _10634_recOwned = _out5571;
                _10635_recIdents = _out5572;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10633_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10631_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10632_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5573;
                DCOMPUTF16._IOwnership _out5574;
                DCOMPUTF16.COMP.FromOwnership(r, _10634_recOwned, expectedOwnership, out _out5573, out _out5574);
                r = _out5573;
                resultingOwnership = _out5574;
                readIdents = _10635_recIdents;
              }
            } else if (_source388.is_Primitive) {
              DAST._IPrimitive _10636___mcc_h962 = _source388.dtor_Primitive_a0;
              DAST._IPrimitive _source393 = _10636___mcc_h962;
              if (_source393.is_Int) {
                {
                  RAST._IExpr _10637_recursiveGen;
                  DCOMPUTF16._IOwnership _10638___v92;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10639_recIdents;
                  RAST._IExpr _out5575;
                  DCOMPUTF16._IOwnership _out5576;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5577;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out5575, out _out5576, out _out5577);
                  _10637_recursiveGen = _out5575;
                  _10638___v92 = _out5576;
                  _10639_recIdents = _out5577;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_10637_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out5578;
                  DCOMPUTF16._IOwnership _out5579;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5578, out _out5579);
                  r = _out5578;
                  resultingOwnership = _out5579;
                  readIdents = _10639_recIdents;
                }
              } else if (_source393.is_Real) {
                {
                  RAST._IType _10640_fromTpeGen;
                  RAST._IType _out5580;
                  _out5580 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10640_fromTpeGen = _out5580;
                  RAST._IType _10641_toTpeGen;
                  RAST._IType _out5581;
                  _out5581 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10641_toTpeGen = _out5581;
                  RAST._IExpr _10642_recursiveGen;
                  DCOMPUTF16._IOwnership _10643_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10644_recIdents;
                  RAST._IExpr _out5582;
                  DCOMPUTF16._IOwnership _out5583;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5584;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5582, out _out5583, out _out5584);
                  _10642_recursiveGen = _out5582;
                  _10643_recOwned = _out5583;
                  _10644_recIdents = _out5584;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10642_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10640_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10641_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5585;
                  DCOMPUTF16._IOwnership _out5586;
                  DCOMPUTF16.COMP.FromOwnership(r, _10643_recOwned, expectedOwnership, out _out5585, out _out5586);
                  r = _out5585;
                  resultingOwnership = _out5586;
                  readIdents = _10644_recIdents;
                }
              } else if (_source393.is_String) {
                {
                  RAST._IType _10645_fromTpeGen;
                  RAST._IType _out5587;
                  _out5587 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10645_fromTpeGen = _out5587;
                  RAST._IType _10646_toTpeGen;
                  RAST._IType _out5588;
                  _out5588 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10646_toTpeGen = _out5588;
                  RAST._IExpr _10647_recursiveGen;
                  DCOMPUTF16._IOwnership _10648_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10649_recIdents;
                  RAST._IExpr _out5589;
                  DCOMPUTF16._IOwnership _out5590;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5591;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5589, out _out5590, out _out5591);
                  _10647_recursiveGen = _out5589;
                  _10648_recOwned = _out5590;
                  _10649_recIdents = _out5591;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10647_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10645_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10646_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5592;
                  DCOMPUTF16._IOwnership _out5593;
                  DCOMPUTF16.COMP.FromOwnership(r, _10648_recOwned, expectedOwnership, out _out5592, out _out5593);
                  r = _out5592;
                  resultingOwnership = _out5593;
                  readIdents = _10649_recIdents;
                }
              } else if (_source393.is_Bool) {
                {
                  RAST._IType _10650_fromTpeGen;
                  RAST._IType _out5594;
                  _out5594 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10650_fromTpeGen = _out5594;
                  RAST._IType _10651_toTpeGen;
                  RAST._IType _out5595;
                  _out5595 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10651_toTpeGen = _out5595;
                  RAST._IExpr _10652_recursiveGen;
                  DCOMPUTF16._IOwnership _10653_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10654_recIdents;
                  RAST._IExpr _out5596;
                  DCOMPUTF16._IOwnership _out5597;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5598;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5596, out _out5597, out _out5598);
                  _10652_recursiveGen = _out5596;
                  _10653_recOwned = _out5597;
                  _10654_recIdents = _out5598;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10652_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10650_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10651_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5599;
                  DCOMPUTF16._IOwnership _out5600;
                  DCOMPUTF16.COMP.FromOwnership(r, _10653_recOwned, expectedOwnership, out _out5599, out _out5600);
                  r = _out5599;
                  resultingOwnership = _out5600;
                  readIdents = _10654_recIdents;
                }
              } else {
                {
                  RAST._IType _10655_fromTpeGen;
                  RAST._IType _out5601;
                  _out5601 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10655_fromTpeGen = _out5601;
                  RAST._IType _10656_toTpeGen;
                  RAST._IType _out5602;
                  _out5602 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10656_toTpeGen = _out5602;
                  RAST._IExpr _10657_recursiveGen;
                  DCOMPUTF16._IOwnership _10658_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10659_recIdents;
                  RAST._IExpr _out5603;
                  DCOMPUTF16._IOwnership _out5604;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5605;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5603, out _out5604, out _out5605);
                  _10657_recursiveGen = _out5603;
                  _10658_recOwned = _out5604;
                  _10659_recIdents = _out5605;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10657_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10655_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10656_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5606;
                  DCOMPUTF16._IOwnership _out5607;
                  DCOMPUTF16.COMP.FromOwnership(r, _10658_recOwned, expectedOwnership, out _out5606, out _out5607);
                  r = _out5606;
                  resultingOwnership = _out5607;
                  readIdents = _10659_recIdents;
                }
              }
            } else if (_source388.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _10660___mcc_h964 = _source388.dtor_Passthrough_a0;
              {
                RAST._IType _10661_fromTpeGen;
                RAST._IType _out5608;
                _out5608 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10661_fromTpeGen = _out5608;
                RAST._IType _10662_toTpeGen;
                RAST._IType _out5609;
                _out5609 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10662_toTpeGen = _out5609;
                RAST._IExpr _10663_recursiveGen;
                DCOMPUTF16._IOwnership _10664_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10665_recIdents;
                RAST._IExpr _out5610;
                DCOMPUTF16._IOwnership _out5611;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5612;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5610, out _out5611, out _out5612);
                _10663_recursiveGen = _out5610;
                _10664_recOwned = _out5611;
                _10665_recIdents = _out5612;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10663_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10661_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10662_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5613;
                DCOMPUTF16._IOwnership _out5614;
                DCOMPUTF16.COMP.FromOwnership(r, _10664_recOwned, expectedOwnership, out _out5613, out _out5614);
                r = _out5613;
                resultingOwnership = _out5614;
                readIdents = _10665_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _10666___mcc_h966 = _source388.dtor_TypeArg_a0;
              {
                RAST._IType _10667_fromTpeGen;
                RAST._IType _out5615;
                _out5615 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10667_fromTpeGen = _out5615;
                RAST._IType _10668_toTpeGen;
                RAST._IType _out5616;
                _out5616 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10668_toTpeGen = _out5616;
                RAST._IExpr _10669_recursiveGen;
                DCOMPUTF16._IOwnership _10670_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10671_recIdents;
                RAST._IExpr _out5617;
                DCOMPUTF16._IOwnership _out5618;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5619;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5617, out _out5618, out _out5619);
                _10669_recursiveGen = _out5617;
                _10670_recOwned = _out5618;
                _10671_recIdents = _out5619;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10669_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10667_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10668_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5620;
                DCOMPUTF16._IOwnership _out5621;
                DCOMPUTF16.COMP.FromOwnership(r, _10670_recOwned, expectedOwnership, out _out5620, out _out5621);
                r = _out5620;
                resultingOwnership = _out5621;
                readIdents = _10671_recIdents;
              }
            }
          } else if (_source381.is_String) {
            DAST._IType _source394 = _8325___mcc_h1;
            if (_source394.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10672___mcc_h968 = _source394.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _10673___mcc_h969 = _source394.dtor_typeArgs;
              DAST._IResolvedType _10674___mcc_h970 = _source394.dtor_resolved;
              DAST._IResolvedType _source395 = _10674___mcc_h970;
              if (_source395.is_Datatype) {
                DAST._IDatatypeType _10675___mcc_h974 = _source395.dtor_datatypeType;
                {
                  RAST._IType _10676_fromTpeGen;
                  RAST._IType _out5622;
                  _out5622 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10676_fromTpeGen = _out5622;
                  RAST._IType _10677_toTpeGen;
                  RAST._IType _out5623;
                  _out5623 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10677_toTpeGen = _out5623;
                  RAST._IExpr _10678_recursiveGen;
                  DCOMPUTF16._IOwnership _10679_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10680_recIdents;
                  RAST._IExpr _out5624;
                  DCOMPUTF16._IOwnership _out5625;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5626;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5624, out _out5625, out _out5626);
                  _10678_recursiveGen = _out5624;
                  _10679_recOwned = _out5625;
                  _10680_recIdents = _out5626;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10678_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10676_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10677_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5627;
                  DCOMPUTF16._IOwnership _out5628;
                  DCOMPUTF16.COMP.FromOwnership(r, _10679_recOwned, expectedOwnership, out _out5627, out _out5628);
                  r = _out5627;
                  resultingOwnership = _out5628;
                  readIdents = _10680_recIdents;
                }
              } else if (_source395.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10681___mcc_h976 = _source395.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _10682___mcc_h977 = _source395.dtor_attributes;
                {
                  RAST._IType _10683_fromTpeGen;
                  RAST._IType _out5629;
                  _out5629 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10683_fromTpeGen = _out5629;
                  RAST._IType _10684_toTpeGen;
                  RAST._IType _out5630;
                  _out5630 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10684_toTpeGen = _out5630;
                  RAST._IExpr _10685_recursiveGen;
                  DCOMPUTF16._IOwnership _10686_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10687_recIdents;
                  RAST._IExpr _out5631;
                  DCOMPUTF16._IOwnership _out5632;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5633;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5631, out _out5632, out _out5633);
                  _10685_recursiveGen = _out5631;
                  _10686_recOwned = _out5632;
                  _10687_recIdents = _out5633;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10685_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10683_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10684_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5634;
                  DCOMPUTF16._IOwnership _out5635;
                  DCOMPUTF16.COMP.FromOwnership(r, _10686_recOwned, expectedOwnership, out _out5634, out _out5635);
                  r = _out5634;
                  resultingOwnership = _out5635;
                  readIdents = _10687_recIdents;
                }
              } else {
                DAST._IType _10688___mcc_h980 = _source395.dtor_baseType;
                DAST._INewtypeRange _10689___mcc_h981 = _source395.dtor_range;
                bool _10690___mcc_h982 = _source395.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _10691___mcc_h983 = _source395.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _10692_attributes = _10691___mcc_h983;
                bool _10693_erase = _10690___mcc_h982;
                DAST._INewtypeRange _10694_range = _10689___mcc_h981;
                DAST._IType _10695_b = _10688___mcc_h980;
                {
                  Std.Wrappers._IOption<RAST._IType> _10696_nativeToType;
                  _10696_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10695_b, _10694_range);
                  if (object.Equals(_8319_fromTpe, _10695_b)) {
                    RAST._IExpr _10697_recursiveGen;
                    DCOMPUTF16._IOwnership _10698_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10699_recIdents;
                    RAST._IExpr _out5636;
                    DCOMPUTF16._IOwnership _out5637;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5638;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5636, out _out5637, out _out5638);
                    _10697_recursiveGen = _out5636;
                    _10698_recOwned = _out5637;
                    _10699_recIdents = _out5638;
                    readIdents = _10699_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source396 = _10696_nativeToType;
                    if (_source396.is_None) {
                      if (_10693_erase) {
                        r = _10697_recursiveGen;
                      } else {
                        RAST._IType _10700_rhsType;
                        RAST._IType _out5639;
                        _out5639 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                        _10700_rhsType = _out5639;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10700_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10697_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out5640;
                      DCOMPUTF16._IOwnership _out5641;
                      DCOMPUTF16.COMP.FromOwnership(r, _10698_recOwned, expectedOwnership, out _out5640, out _out5641);
                      r = _out5640;
                      resultingOwnership = _out5641;
                    } else {
                      RAST._IType _10701___mcc_h2030 = _source396.dtor_value;
                      RAST._IType _10702_v = _10701___mcc_h2030;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10697_recursiveGen, RAST.Expr.create_ExprFromType(_10702_v)));
                      RAST._IExpr _out5642;
                      DCOMPUTF16._IOwnership _out5643;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5642, out _out5643);
                      r = _out5642;
                      resultingOwnership = _out5643;
                    }
                  } else {
                    if ((_10696_nativeToType).is_Some) {
                      DAST._IType _source397 = _8319_fromTpe;
                      if (_source397.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10703___mcc_h2031 = _source397.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _10704___mcc_h2032 = _source397.dtor_typeArgs;
                        DAST._IResolvedType _10705___mcc_h2033 = _source397.dtor_resolved;
                        DAST._IResolvedType _source398 = _10705___mcc_h2033;
                        if (_source398.is_Datatype) {
                          DAST._IDatatypeType _10706___mcc_h2037 = _source398.dtor_datatypeType;
                        } else if (_source398.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10707___mcc_h2039 = _source398.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _10708___mcc_h2040 = _source398.dtor_attributes;
                        } else {
                          DAST._IType _10709___mcc_h2043 = _source398.dtor_baseType;
                          DAST._INewtypeRange _10710___mcc_h2044 = _source398.dtor_range;
                          bool _10711___mcc_h2045 = _source398.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _10712___mcc_h2046 = _source398.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _10713_attributes0 = _10712___mcc_h2046;
                          bool _10714_erase0 = _10711___mcc_h2045;
                          DAST._INewtypeRange _10715_range0 = _10710___mcc_h2044;
                          DAST._IType _10716_b0 = _10709___mcc_h2043;
                          {
                            Std.Wrappers._IOption<RAST._IType> _10717_nativeFromType;
                            _10717_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10716_b0, _10715_range0);
                            if ((_10717_nativeFromType).is_Some) {
                              RAST._IExpr _10718_recursiveGen;
                              DCOMPUTF16._IOwnership _10719_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10720_recIdents;
                              RAST._IExpr _out5644;
                              DCOMPUTF16._IOwnership _out5645;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5646;
                              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5644, out _out5645, out _out5646);
                              _10718_recursiveGen = _out5644;
                              _10719_recOwned = _out5645;
                              _10720_recIdents = _out5646;
                              RAST._IExpr _out5647;
                              DCOMPUTF16._IOwnership _out5648;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10718_recursiveGen, (_10696_nativeToType).dtor_value), _10719_recOwned, expectedOwnership, out _out5647, out _out5648);
                              r = _out5647;
                              resultingOwnership = _out5648;
                              readIdents = _10720_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source397.is_Nullable) {
                        DAST._IType _10721___mcc_h2051 = _source397.dtor_Nullable_a0;
                      } else if (_source397.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _10722___mcc_h2053 = _source397.dtor_Tuple_a0;
                      } else if (_source397.is_Array) {
                        DAST._IType _10723___mcc_h2055 = _source397.dtor_element;
                        BigInteger _10724___mcc_h2056 = _source397.dtor_dims;
                      } else if (_source397.is_Seq) {
                        DAST._IType _10725___mcc_h2059 = _source397.dtor_element;
                      } else if (_source397.is_Set) {
                        DAST._IType _10726___mcc_h2061 = _source397.dtor_element;
                      } else if (_source397.is_Multiset) {
                        DAST._IType _10727___mcc_h2063 = _source397.dtor_element;
                      } else if (_source397.is_Map) {
                        DAST._IType _10728___mcc_h2065 = _source397.dtor_key;
                        DAST._IType _10729___mcc_h2066 = _source397.dtor_value;
                      } else if (_source397.is_SetBuilder) {
                        DAST._IType _10730___mcc_h2069 = _source397.dtor_element;
                      } else if (_source397.is_MapBuilder) {
                        DAST._IType _10731___mcc_h2071 = _source397.dtor_key;
                        DAST._IType _10732___mcc_h2072 = _source397.dtor_value;
                      } else if (_source397.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _10733___mcc_h2075 = _source397.dtor_args;
                        DAST._IType _10734___mcc_h2076 = _source397.dtor_result;
                      } else if (_source397.is_Primitive) {
                        DAST._IPrimitive _10735___mcc_h2079 = _source397.dtor_Primitive_a0;
                      } else if (_source397.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _10736___mcc_h2081 = _source397.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _10737___mcc_h2083 = _source397.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10738_recursiveGen;
                        DCOMPUTF16._IOwnership _10739_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10740_recIdents;
                        RAST._IExpr _out5649;
                        DCOMPUTF16._IOwnership _out5650;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5651;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5649, out _out5650, out _out5651);
                        _10738_recursiveGen = _out5649;
                        _10739_recOwned = _out5650;
                        _10740_recIdents = _out5651;
                        RAST._IExpr _out5652;
                        DCOMPUTF16._IOwnership _out5653;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10738_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10696_nativeToType).dtor_value), _10739_recOwned, expectedOwnership, out _out5652, out _out5653);
                        r = _out5652;
                        resultingOwnership = _out5653;
                        readIdents = _10740_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out5654;
                    DCOMPUTF16._IOwnership _out5655;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5656;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _10695_b), _10695_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out5654, out _out5655, out _out5656);
                    r = _out5654;
                    resultingOwnership = _out5655;
                    readIdents = _out5656;
                  }
                }
              }
            } else if (_source394.is_Nullable) {
              DAST._IType _10741___mcc_h988 = _source394.dtor_Nullable_a0;
              {
                RAST._IExpr _10742_recursiveGen;
                DCOMPUTF16._IOwnership _10743_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10744_recIdents;
                RAST._IExpr _out5657;
                DCOMPUTF16._IOwnership _out5658;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5659;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5657, out _out5658, out _out5659);
                _10742_recursiveGen = _out5657;
                _10743_recOwned = _out5658;
                _10744_recIdents = _out5659;
                r = _10742_recursiveGen;
                if (object.Equals(_10743_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out5660;
                DCOMPUTF16._IOwnership _out5661;
                DCOMPUTF16.COMP.FromOwnership(r, _10743_recOwned, expectedOwnership, out _out5660, out _out5661);
                r = _out5660;
                resultingOwnership = _out5661;
                readIdents = _10744_recIdents;
              }
            } else if (_source394.is_Tuple) {
              Dafny.ISequence<DAST._IType> _10745___mcc_h990 = _source394.dtor_Tuple_a0;
              {
                RAST._IType _10746_fromTpeGen;
                RAST._IType _out5662;
                _out5662 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10746_fromTpeGen = _out5662;
                RAST._IType _10747_toTpeGen;
                RAST._IType _out5663;
                _out5663 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10747_toTpeGen = _out5663;
                RAST._IExpr _10748_recursiveGen;
                DCOMPUTF16._IOwnership _10749_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10750_recIdents;
                RAST._IExpr _out5664;
                DCOMPUTF16._IOwnership _out5665;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5666;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5664, out _out5665, out _out5666);
                _10748_recursiveGen = _out5664;
                _10749_recOwned = _out5665;
                _10750_recIdents = _out5666;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10748_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10746_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10747_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5667;
                DCOMPUTF16._IOwnership _out5668;
                DCOMPUTF16.COMP.FromOwnership(r, _10749_recOwned, expectedOwnership, out _out5667, out _out5668);
                r = _out5667;
                resultingOwnership = _out5668;
                readIdents = _10750_recIdents;
              }
            } else if (_source394.is_Array) {
              DAST._IType _10751___mcc_h992 = _source394.dtor_element;
              BigInteger _10752___mcc_h993 = _source394.dtor_dims;
              {
                RAST._IType _10753_fromTpeGen;
                RAST._IType _out5669;
                _out5669 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10753_fromTpeGen = _out5669;
                RAST._IType _10754_toTpeGen;
                RAST._IType _out5670;
                _out5670 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10754_toTpeGen = _out5670;
                RAST._IExpr _10755_recursiveGen;
                DCOMPUTF16._IOwnership _10756_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10757_recIdents;
                RAST._IExpr _out5671;
                DCOMPUTF16._IOwnership _out5672;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5673;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5671, out _out5672, out _out5673);
                _10755_recursiveGen = _out5671;
                _10756_recOwned = _out5672;
                _10757_recIdents = _out5673;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10755_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10753_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10754_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5674;
                DCOMPUTF16._IOwnership _out5675;
                DCOMPUTF16.COMP.FromOwnership(r, _10756_recOwned, expectedOwnership, out _out5674, out _out5675);
                r = _out5674;
                resultingOwnership = _out5675;
                readIdents = _10757_recIdents;
              }
            } else if (_source394.is_Seq) {
              DAST._IType _10758___mcc_h996 = _source394.dtor_element;
              {
                RAST._IType _10759_fromTpeGen;
                RAST._IType _out5676;
                _out5676 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10759_fromTpeGen = _out5676;
                RAST._IType _10760_toTpeGen;
                RAST._IType _out5677;
                _out5677 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10760_toTpeGen = _out5677;
                RAST._IExpr _10761_recursiveGen;
                DCOMPUTF16._IOwnership _10762_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10763_recIdents;
                RAST._IExpr _out5678;
                DCOMPUTF16._IOwnership _out5679;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5680;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5678, out _out5679, out _out5680);
                _10761_recursiveGen = _out5678;
                _10762_recOwned = _out5679;
                _10763_recIdents = _out5680;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10761_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10759_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10760_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5681;
                DCOMPUTF16._IOwnership _out5682;
                DCOMPUTF16.COMP.FromOwnership(r, _10762_recOwned, expectedOwnership, out _out5681, out _out5682);
                r = _out5681;
                resultingOwnership = _out5682;
                readIdents = _10763_recIdents;
              }
            } else if (_source394.is_Set) {
              DAST._IType _10764___mcc_h998 = _source394.dtor_element;
              {
                RAST._IType _10765_fromTpeGen;
                RAST._IType _out5683;
                _out5683 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10765_fromTpeGen = _out5683;
                RAST._IType _10766_toTpeGen;
                RAST._IType _out5684;
                _out5684 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10766_toTpeGen = _out5684;
                RAST._IExpr _10767_recursiveGen;
                DCOMPUTF16._IOwnership _10768_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10769_recIdents;
                RAST._IExpr _out5685;
                DCOMPUTF16._IOwnership _out5686;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5687;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5685, out _out5686, out _out5687);
                _10767_recursiveGen = _out5685;
                _10768_recOwned = _out5686;
                _10769_recIdents = _out5687;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10767_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10765_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10766_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5688;
                DCOMPUTF16._IOwnership _out5689;
                DCOMPUTF16.COMP.FromOwnership(r, _10768_recOwned, expectedOwnership, out _out5688, out _out5689);
                r = _out5688;
                resultingOwnership = _out5689;
                readIdents = _10769_recIdents;
              }
            } else if (_source394.is_Multiset) {
              DAST._IType _10770___mcc_h1000 = _source394.dtor_element;
              {
                RAST._IType _10771_fromTpeGen;
                RAST._IType _out5690;
                _out5690 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10771_fromTpeGen = _out5690;
                RAST._IType _10772_toTpeGen;
                RAST._IType _out5691;
                _out5691 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10772_toTpeGen = _out5691;
                RAST._IExpr _10773_recursiveGen;
                DCOMPUTF16._IOwnership _10774_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10775_recIdents;
                RAST._IExpr _out5692;
                DCOMPUTF16._IOwnership _out5693;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5694;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5692, out _out5693, out _out5694);
                _10773_recursiveGen = _out5692;
                _10774_recOwned = _out5693;
                _10775_recIdents = _out5694;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10773_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10771_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10772_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5695;
                DCOMPUTF16._IOwnership _out5696;
                DCOMPUTF16.COMP.FromOwnership(r, _10774_recOwned, expectedOwnership, out _out5695, out _out5696);
                r = _out5695;
                resultingOwnership = _out5696;
                readIdents = _10775_recIdents;
              }
            } else if (_source394.is_Map) {
              DAST._IType _10776___mcc_h1002 = _source394.dtor_key;
              DAST._IType _10777___mcc_h1003 = _source394.dtor_value;
              {
                RAST._IType _10778_fromTpeGen;
                RAST._IType _out5697;
                _out5697 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10778_fromTpeGen = _out5697;
                RAST._IType _10779_toTpeGen;
                RAST._IType _out5698;
                _out5698 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10779_toTpeGen = _out5698;
                RAST._IExpr _10780_recursiveGen;
                DCOMPUTF16._IOwnership _10781_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10782_recIdents;
                RAST._IExpr _out5699;
                DCOMPUTF16._IOwnership _out5700;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5701;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5699, out _out5700, out _out5701);
                _10780_recursiveGen = _out5699;
                _10781_recOwned = _out5700;
                _10782_recIdents = _out5701;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10780_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10778_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10779_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5702;
                DCOMPUTF16._IOwnership _out5703;
                DCOMPUTF16.COMP.FromOwnership(r, _10781_recOwned, expectedOwnership, out _out5702, out _out5703);
                r = _out5702;
                resultingOwnership = _out5703;
                readIdents = _10782_recIdents;
              }
            } else if (_source394.is_SetBuilder) {
              DAST._IType _10783___mcc_h1006 = _source394.dtor_element;
              {
                RAST._IType _10784_fromTpeGen;
                RAST._IType _out5704;
                _out5704 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10784_fromTpeGen = _out5704;
                RAST._IType _10785_toTpeGen;
                RAST._IType _out5705;
                _out5705 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10785_toTpeGen = _out5705;
                RAST._IExpr _10786_recursiveGen;
                DCOMPUTF16._IOwnership _10787_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10788_recIdents;
                RAST._IExpr _out5706;
                DCOMPUTF16._IOwnership _out5707;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5708;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5706, out _out5707, out _out5708);
                _10786_recursiveGen = _out5706;
                _10787_recOwned = _out5707;
                _10788_recIdents = _out5708;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10786_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10784_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10785_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5709;
                DCOMPUTF16._IOwnership _out5710;
                DCOMPUTF16.COMP.FromOwnership(r, _10787_recOwned, expectedOwnership, out _out5709, out _out5710);
                r = _out5709;
                resultingOwnership = _out5710;
                readIdents = _10788_recIdents;
              }
            } else if (_source394.is_MapBuilder) {
              DAST._IType _10789___mcc_h1008 = _source394.dtor_key;
              DAST._IType _10790___mcc_h1009 = _source394.dtor_value;
              {
                RAST._IType _10791_fromTpeGen;
                RAST._IType _out5711;
                _out5711 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10791_fromTpeGen = _out5711;
                RAST._IType _10792_toTpeGen;
                RAST._IType _out5712;
                _out5712 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10792_toTpeGen = _out5712;
                RAST._IExpr _10793_recursiveGen;
                DCOMPUTF16._IOwnership _10794_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10795_recIdents;
                RAST._IExpr _out5713;
                DCOMPUTF16._IOwnership _out5714;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5715;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5713, out _out5714, out _out5715);
                _10793_recursiveGen = _out5713;
                _10794_recOwned = _out5714;
                _10795_recIdents = _out5715;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10793_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10791_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10792_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5716;
                DCOMPUTF16._IOwnership _out5717;
                DCOMPUTF16.COMP.FromOwnership(r, _10794_recOwned, expectedOwnership, out _out5716, out _out5717);
                r = _out5716;
                resultingOwnership = _out5717;
                readIdents = _10795_recIdents;
              }
            } else if (_source394.is_Arrow) {
              Dafny.ISequence<DAST._IType> _10796___mcc_h1012 = _source394.dtor_args;
              DAST._IType _10797___mcc_h1013 = _source394.dtor_result;
              {
                RAST._IType _10798_fromTpeGen;
                RAST._IType _out5718;
                _out5718 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10798_fromTpeGen = _out5718;
                RAST._IType _10799_toTpeGen;
                RAST._IType _out5719;
                _out5719 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10799_toTpeGen = _out5719;
                RAST._IExpr _10800_recursiveGen;
                DCOMPUTF16._IOwnership _10801_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10802_recIdents;
                RAST._IExpr _out5720;
                DCOMPUTF16._IOwnership _out5721;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5722;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5720, out _out5721, out _out5722);
                _10800_recursiveGen = _out5720;
                _10801_recOwned = _out5721;
                _10802_recIdents = _out5722;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10800_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10798_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10799_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5723;
                DCOMPUTF16._IOwnership _out5724;
                DCOMPUTF16.COMP.FromOwnership(r, _10801_recOwned, expectedOwnership, out _out5723, out _out5724);
                r = _out5723;
                resultingOwnership = _out5724;
                readIdents = _10802_recIdents;
              }
            } else if (_source394.is_Primitive) {
              DAST._IPrimitive _10803___mcc_h1016 = _source394.dtor_Primitive_a0;
              {
                RAST._IType _10804_fromTpeGen;
                RAST._IType _out5725;
                _out5725 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10804_fromTpeGen = _out5725;
                RAST._IType _10805_toTpeGen;
                RAST._IType _out5726;
                _out5726 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10805_toTpeGen = _out5726;
                RAST._IExpr _10806_recursiveGen;
                DCOMPUTF16._IOwnership _10807_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10808_recIdents;
                RAST._IExpr _out5727;
                DCOMPUTF16._IOwnership _out5728;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5729;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5727, out _out5728, out _out5729);
                _10806_recursiveGen = _out5727;
                _10807_recOwned = _out5728;
                _10808_recIdents = _out5729;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10806_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10804_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10805_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5730;
                DCOMPUTF16._IOwnership _out5731;
                DCOMPUTF16.COMP.FromOwnership(r, _10807_recOwned, expectedOwnership, out _out5730, out _out5731);
                r = _out5730;
                resultingOwnership = _out5731;
                readIdents = _10808_recIdents;
              }
            } else if (_source394.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _10809___mcc_h1018 = _source394.dtor_Passthrough_a0;
              {
                RAST._IType _10810_fromTpeGen;
                RAST._IType _out5732;
                _out5732 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10810_fromTpeGen = _out5732;
                RAST._IType _10811_toTpeGen;
                RAST._IType _out5733;
                _out5733 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10811_toTpeGen = _out5733;
                RAST._IExpr _10812_recursiveGen;
                DCOMPUTF16._IOwnership _10813_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10814_recIdents;
                RAST._IExpr _out5734;
                DCOMPUTF16._IOwnership _out5735;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5736;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5734, out _out5735, out _out5736);
                _10812_recursiveGen = _out5734;
                _10813_recOwned = _out5735;
                _10814_recIdents = _out5736;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10812_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10810_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10811_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5737;
                DCOMPUTF16._IOwnership _out5738;
                DCOMPUTF16.COMP.FromOwnership(r, _10813_recOwned, expectedOwnership, out _out5737, out _out5738);
                r = _out5737;
                resultingOwnership = _out5738;
                readIdents = _10814_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _10815___mcc_h1020 = _source394.dtor_TypeArg_a0;
              {
                RAST._IType _10816_fromTpeGen;
                RAST._IType _out5739;
                _out5739 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10816_fromTpeGen = _out5739;
                RAST._IType _10817_toTpeGen;
                RAST._IType _out5740;
                _out5740 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10817_toTpeGen = _out5740;
                RAST._IExpr _10818_recursiveGen;
                DCOMPUTF16._IOwnership _10819_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10820_recIdents;
                RAST._IExpr _out5741;
                DCOMPUTF16._IOwnership _out5742;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5743;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5741, out _out5742, out _out5743);
                _10818_recursiveGen = _out5741;
                _10819_recOwned = _out5742;
                _10820_recIdents = _out5743;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10818_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10816_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10817_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5744;
                DCOMPUTF16._IOwnership _out5745;
                DCOMPUTF16.COMP.FromOwnership(r, _10819_recOwned, expectedOwnership, out _out5744, out _out5745);
                r = _out5744;
                resultingOwnership = _out5745;
                readIdents = _10820_recIdents;
              }
            }
          } else if (_source381.is_Bool) {
            DAST._IType _source399 = _8325___mcc_h1;
            if (_source399.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10821___mcc_h1022 = _source399.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _10822___mcc_h1023 = _source399.dtor_typeArgs;
              DAST._IResolvedType _10823___mcc_h1024 = _source399.dtor_resolved;
              DAST._IResolvedType _source400 = _10823___mcc_h1024;
              if (_source400.is_Datatype) {
                DAST._IDatatypeType _10824___mcc_h1028 = _source400.dtor_datatypeType;
                {
                  RAST._IType _10825_fromTpeGen;
                  RAST._IType _out5746;
                  _out5746 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10825_fromTpeGen = _out5746;
                  RAST._IType _10826_toTpeGen;
                  RAST._IType _out5747;
                  _out5747 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10826_toTpeGen = _out5747;
                  RAST._IExpr _10827_recursiveGen;
                  DCOMPUTF16._IOwnership _10828_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10829_recIdents;
                  RAST._IExpr _out5748;
                  DCOMPUTF16._IOwnership _out5749;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5750;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5748, out _out5749, out _out5750);
                  _10827_recursiveGen = _out5748;
                  _10828_recOwned = _out5749;
                  _10829_recIdents = _out5750;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10827_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10825_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10826_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5751;
                  DCOMPUTF16._IOwnership _out5752;
                  DCOMPUTF16.COMP.FromOwnership(r, _10828_recOwned, expectedOwnership, out _out5751, out _out5752);
                  r = _out5751;
                  resultingOwnership = _out5752;
                  readIdents = _10829_recIdents;
                }
              } else if (_source400.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10830___mcc_h1030 = _source400.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _10831___mcc_h1031 = _source400.dtor_attributes;
                {
                  RAST._IType _10832_fromTpeGen;
                  RAST._IType _out5753;
                  _out5753 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10832_fromTpeGen = _out5753;
                  RAST._IType _10833_toTpeGen;
                  RAST._IType _out5754;
                  _out5754 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10833_toTpeGen = _out5754;
                  RAST._IExpr _10834_recursiveGen;
                  DCOMPUTF16._IOwnership _10835_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10836_recIdents;
                  RAST._IExpr _out5755;
                  DCOMPUTF16._IOwnership _out5756;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5757;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5755, out _out5756, out _out5757);
                  _10834_recursiveGen = _out5755;
                  _10835_recOwned = _out5756;
                  _10836_recIdents = _out5757;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10834_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10832_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10833_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5758;
                  DCOMPUTF16._IOwnership _out5759;
                  DCOMPUTF16.COMP.FromOwnership(r, _10835_recOwned, expectedOwnership, out _out5758, out _out5759);
                  r = _out5758;
                  resultingOwnership = _out5759;
                  readIdents = _10836_recIdents;
                }
              } else {
                DAST._IType _10837___mcc_h1034 = _source400.dtor_baseType;
                DAST._INewtypeRange _10838___mcc_h1035 = _source400.dtor_range;
                bool _10839___mcc_h1036 = _source400.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _10840___mcc_h1037 = _source400.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _10841_attributes = _10840___mcc_h1037;
                bool _10842_erase = _10839___mcc_h1036;
                DAST._INewtypeRange _10843_range = _10838___mcc_h1035;
                DAST._IType _10844_b = _10837___mcc_h1034;
                {
                  Std.Wrappers._IOption<RAST._IType> _10845_nativeToType;
                  _10845_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10844_b, _10843_range);
                  if (object.Equals(_8319_fromTpe, _10844_b)) {
                    RAST._IExpr _10846_recursiveGen;
                    DCOMPUTF16._IOwnership _10847_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10848_recIdents;
                    RAST._IExpr _out5760;
                    DCOMPUTF16._IOwnership _out5761;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5762;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5760, out _out5761, out _out5762);
                    _10846_recursiveGen = _out5760;
                    _10847_recOwned = _out5761;
                    _10848_recIdents = _out5762;
                    readIdents = _10848_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source401 = _10845_nativeToType;
                    if (_source401.is_None) {
                      if (_10842_erase) {
                        r = _10846_recursiveGen;
                      } else {
                        RAST._IType _10849_rhsType;
                        RAST._IType _out5763;
                        _out5763 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                        _10849_rhsType = _out5763;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10849_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10846_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out5764;
                      DCOMPUTF16._IOwnership _out5765;
                      DCOMPUTF16.COMP.FromOwnership(r, _10847_recOwned, expectedOwnership, out _out5764, out _out5765);
                      r = _out5764;
                      resultingOwnership = _out5765;
                    } else {
                      RAST._IType _10850___mcc_h2085 = _source401.dtor_value;
                      RAST._IType _10851_v = _10850___mcc_h2085;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10846_recursiveGen, RAST.Expr.create_ExprFromType(_10851_v)));
                      RAST._IExpr _out5766;
                      DCOMPUTF16._IOwnership _out5767;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5766, out _out5767);
                      r = _out5766;
                      resultingOwnership = _out5767;
                    }
                  } else {
                    if ((_10845_nativeToType).is_Some) {
                      DAST._IType _source402 = _8319_fromTpe;
                      if (_source402.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10852___mcc_h2086 = _source402.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _10853___mcc_h2087 = _source402.dtor_typeArgs;
                        DAST._IResolvedType _10854___mcc_h2088 = _source402.dtor_resolved;
                        DAST._IResolvedType _source403 = _10854___mcc_h2088;
                        if (_source403.is_Datatype) {
                          DAST._IDatatypeType _10855___mcc_h2092 = _source403.dtor_datatypeType;
                        } else if (_source403.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10856___mcc_h2094 = _source403.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _10857___mcc_h2095 = _source403.dtor_attributes;
                        } else {
                          DAST._IType _10858___mcc_h2098 = _source403.dtor_baseType;
                          DAST._INewtypeRange _10859___mcc_h2099 = _source403.dtor_range;
                          bool _10860___mcc_h2100 = _source403.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _10861___mcc_h2101 = _source403.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _10862_attributes0 = _10861___mcc_h2101;
                          bool _10863_erase0 = _10860___mcc_h2100;
                          DAST._INewtypeRange _10864_range0 = _10859___mcc_h2099;
                          DAST._IType _10865_b0 = _10858___mcc_h2098;
                          {
                            Std.Wrappers._IOption<RAST._IType> _10866_nativeFromType;
                            _10866_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10865_b0, _10864_range0);
                            if ((_10866_nativeFromType).is_Some) {
                              RAST._IExpr _10867_recursiveGen;
                              DCOMPUTF16._IOwnership _10868_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10869_recIdents;
                              RAST._IExpr _out5768;
                              DCOMPUTF16._IOwnership _out5769;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5770;
                              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5768, out _out5769, out _out5770);
                              _10867_recursiveGen = _out5768;
                              _10868_recOwned = _out5769;
                              _10869_recIdents = _out5770;
                              RAST._IExpr _out5771;
                              DCOMPUTF16._IOwnership _out5772;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10867_recursiveGen, (_10845_nativeToType).dtor_value), _10868_recOwned, expectedOwnership, out _out5771, out _out5772);
                              r = _out5771;
                              resultingOwnership = _out5772;
                              readIdents = _10869_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source402.is_Nullable) {
                        DAST._IType _10870___mcc_h2106 = _source402.dtor_Nullable_a0;
                      } else if (_source402.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _10871___mcc_h2108 = _source402.dtor_Tuple_a0;
                      } else if (_source402.is_Array) {
                        DAST._IType _10872___mcc_h2110 = _source402.dtor_element;
                        BigInteger _10873___mcc_h2111 = _source402.dtor_dims;
                      } else if (_source402.is_Seq) {
                        DAST._IType _10874___mcc_h2114 = _source402.dtor_element;
                      } else if (_source402.is_Set) {
                        DAST._IType _10875___mcc_h2116 = _source402.dtor_element;
                      } else if (_source402.is_Multiset) {
                        DAST._IType _10876___mcc_h2118 = _source402.dtor_element;
                      } else if (_source402.is_Map) {
                        DAST._IType _10877___mcc_h2120 = _source402.dtor_key;
                        DAST._IType _10878___mcc_h2121 = _source402.dtor_value;
                      } else if (_source402.is_SetBuilder) {
                        DAST._IType _10879___mcc_h2124 = _source402.dtor_element;
                      } else if (_source402.is_MapBuilder) {
                        DAST._IType _10880___mcc_h2126 = _source402.dtor_key;
                        DAST._IType _10881___mcc_h2127 = _source402.dtor_value;
                      } else if (_source402.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _10882___mcc_h2130 = _source402.dtor_args;
                        DAST._IType _10883___mcc_h2131 = _source402.dtor_result;
                      } else if (_source402.is_Primitive) {
                        DAST._IPrimitive _10884___mcc_h2134 = _source402.dtor_Primitive_a0;
                      } else if (_source402.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _10885___mcc_h2136 = _source402.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _10886___mcc_h2138 = _source402.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10887_recursiveGen;
                        DCOMPUTF16._IOwnership _10888_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10889_recIdents;
                        RAST._IExpr _out5773;
                        DCOMPUTF16._IOwnership _out5774;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5775;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5773, out _out5774, out _out5775);
                        _10887_recursiveGen = _out5773;
                        _10888_recOwned = _out5774;
                        _10889_recIdents = _out5775;
                        RAST._IExpr _out5776;
                        DCOMPUTF16._IOwnership _out5777;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10887_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10845_nativeToType).dtor_value), _10888_recOwned, expectedOwnership, out _out5776, out _out5777);
                        r = _out5776;
                        resultingOwnership = _out5777;
                        readIdents = _10889_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out5778;
                    DCOMPUTF16._IOwnership _out5779;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5780;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _10844_b), _10844_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out5778, out _out5779, out _out5780);
                    r = _out5778;
                    resultingOwnership = _out5779;
                    readIdents = _out5780;
                  }
                }
              }
            } else if (_source399.is_Nullable) {
              DAST._IType _10890___mcc_h1042 = _source399.dtor_Nullable_a0;
              {
                RAST._IExpr _10891_recursiveGen;
                DCOMPUTF16._IOwnership _10892_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10893_recIdents;
                RAST._IExpr _out5781;
                DCOMPUTF16._IOwnership _out5782;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5783;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5781, out _out5782, out _out5783);
                _10891_recursiveGen = _out5781;
                _10892_recOwned = _out5782;
                _10893_recIdents = _out5783;
                r = _10891_recursiveGen;
                if (object.Equals(_10892_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out5784;
                DCOMPUTF16._IOwnership _out5785;
                DCOMPUTF16.COMP.FromOwnership(r, _10892_recOwned, expectedOwnership, out _out5784, out _out5785);
                r = _out5784;
                resultingOwnership = _out5785;
                readIdents = _10893_recIdents;
              }
            } else if (_source399.is_Tuple) {
              Dafny.ISequence<DAST._IType> _10894___mcc_h1044 = _source399.dtor_Tuple_a0;
              {
                RAST._IType _10895_fromTpeGen;
                RAST._IType _out5786;
                _out5786 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10895_fromTpeGen = _out5786;
                RAST._IType _10896_toTpeGen;
                RAST._IType _out5787;
                _out5787 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10896_toTpeGen = _out5787;
                RAST._IExpr _10897_recursiveGen;
                DCOMPUTF16._IOwnership _10898_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10899_recIdents;
                RAST._IExpr _out5788;
                DCOMPUTF16._IOwnership _out5789;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5790;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5788, out _out5789, out _out5790);
                _10897_recursiveGen = _out5788;
                _10898_recOwned = _out5789;
                _10899_recIdents = _out5790;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10897_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10895_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10896_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5791;
                DCOMPUTF16._IOwnership _out5792;
                DCOMPUTF16.COMP.FromOwnership(r, _10898_recOwned, expectedOwnership, out _out5791, out _out5792);
                r = _out5791;
                resultingOwnership = _out5792;
                readIdents = _10899_recIdents;
              }
            } else if (_source399.is_Array) {
              DAST._IType _10900___mcc_h1046 = _source399.dtor_element;
              BigInteger _10901___mcc_h1047 = _source399.dtor_dims;
              {
                RAST._IType _10902_fromTpeGen;
                RAST._IType _out5793;
                _out5793 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10902_fromTpeGen = _out5793;
                RAST._IType _10903_toTpeGen;
                RAST._IType _out5794;
                _out5794 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10903_toTpeGen = _out5794;
                RAST._IExpr _10904_recursiveGen;
                DCOMPUTF16._IOwnership _10905_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10906_recIdents;
                RAST._IExpr _out5795;
                DCOMPUTF16._IOwnership _out5796;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5797;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5795, out _out5796, out _out5797);
                _10904_recursiveGen = _out5795;
                _10905_recOwned = _out5796;
                _10906_recIdents = _out5797;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10904_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10902_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10903_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5798;
                DCOMPUTF16._IOwnership _out5799;
                DCOMPUTF16.COMP.FromOwnership(r, _10905_recOwned, expectedOwnership, out _out5798, out _out5799);
                r = _out5798;
                resultingOwnership = _out5799;
                readIdents = _10906_recIdents;
              }
            } else if (_source399.is_Seq) {
              DAST._IType _10907___mcc_h1050 = _source399.dtor_element;
              {
                RAST._IType _10908_fromTpeGen;
                RAST._IType _out5800;
                _out5800 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10908_fromTpeGen = _out5800;
                RAST._IType _10909_toTpeGen;
                RAST._IType _out5801;
                _out5801 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10909_toTpeGen = _out5801;
                RAST._IExpr _10910_recursiveGen;
                DCOMPUTF16._IOwnership _10911_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10912_recIdents;
                RAST._IExpr _out5802;
                DCOMPUTF16._IOwnership _out5803;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5804;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5802, out _out5803, out _out5804);
                _10910_recursiveGen = _out5802;
                _10911_recOwned = _out5803;
                _10912_recIdents = _out5804;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10910_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10908_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10909_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5805;
                DCOMPUTF16._IOwnership _out5806;
                DCOMPUTF16.COMP.FromOwnership(r, _10911_recOwned, expectedOwnership, out _out5805, out _out5806);
                r = _out5805;
                resultingOwnership = _out5806;
                readIdents = _10912_recIdents;
              }
            } else if (_source399.is_Set) {
              DAST._IType _10913___mcc_h1052 = _source399.dtor_element;
              {
                RAST._IType _10914_fromTpeGen;
                RAST._IType _out5807;
                _out5807 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10914_fromTpeGen = _out5807;
                RAST._IType _10915_toTpeGen;
                RAST._IType _out5808;
                _out5808 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10915_toTpeGen = _out5808;
                RAST._IExpr _10916_recursiveGen;
                DCOMPUTF16._IOwnership _10917_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10918_recIdents;
                RAST._IExpr _out5809;
                DCOMPUTF16._IOwnership _out5810;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5811;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5809, out _out5810, out _out5811);
                _10916_recursiveGen = _out5809;
                _10917_recOwned = _out5810;
                _10918_recIdents = _out5811;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10916_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10914_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10915_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5812;
                DCOMPUTF16._IOwnership _out5813;
                DCOMPUTF16.COMP.FromOwnership(r, _10917_recOwned, expectedOwnership, out _out5812, out _out5813);
                r = _out5812;
                resultingOwnership = _out5813;
                readIdents = _10918_recIdents;
              }
            } else if (_source399.is_Multiset) {
              DAST._IType _10919___mcc_h1054 = _source399.dtor_element;
              {
                RAST._IType _10920_fromTpeGen;
                RAST._IType _out5814;
                _out5814 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10920_fromTpeGen = _out5814;
                RAST._IType _10921_toTpeGen;
                RAST._IType _out5815;
                _out5815 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10921_toTpeGen = _out5815;
                RAST._IExpr _10922_recursiveGen;
                DCOMPUTF16._IOwnership _10923_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10924_recIdents;
                RAST._IExpr _out5816;
                DCOMPUTF16._IOwnership _out5817;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5818;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5816, out _out5817, out _out5818);
                _10922_recursiveGen = _out5816;
                _10923_recOwned = _out5817;
                _10924_recIdents = _out5818;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10922_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10920_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10921_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5819;
                DCOMPUTF16._IOwnership _out5820;
                DCOMPUTF16.COMP.FromOwnership(r, _10923_recOwned, expectedOwnership, out _out5819, out _out5820);
                r = _out5819;
                resultingOwnership = _out5820;
                readIdents = _10924_recIdents;
              }
            } else if (_source399.is_Map) {
              DAST._IType _10925___mcc_h1056 = _source399.dtor_key;
              DAST._IType _10926___mcc_h1057 = _source399.dtor_value;
              {
                RAST._IType _10927_fromTpeGen;
                RAST._IType _out5821;
                _out5821 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10927_fromTpeGen = _out5821;
                RAST._IType _10928_toTpeGen;
                RAST._IType _out5822;
                _out5822 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10928_toTpeGen = _out5822;
                RAST._IExpr _10929_recursiveGen;
                DCOMPUTF16._IOwnership _10930_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10931_recIdents;
                RAST._IExpr _out5823;
                DCOMPUTF16._IOwnership _out5824;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5825;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5823, out _out5824, out _out5825);
                _10929_recursiveGen = _out5823;
                _10930_recOwned = _out5824;
                _10931_recIdents = _out5825;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10929_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10927_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10928_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5826;
                DCOMPUTF16._IOwnership _out5827;
                DCOMPUTF16.COMP.FromOwnership(r, _10930_recOwned, expectedOwnership, out _out5826, out _out5827);
                r = _out5826;
                resultingOwnership = _out5827;
                readIdents = _10931_recIdents;
              }
            } else if (_source399.is_SetBuilder) {
              DAST._IType _10932___mcc_h1060 = _source399.dtor_element;
              {
                RAST._IType _10933_fromTpeGen;
                RAST._IType _out5828;
                _out5828 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10933_fromTpeGen = _out5828;
                RAST._IType _10934_toTpeGen;
                RAST._IType _out5829;
                _out5829 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10934_toTpeGen = _out5829;
                RAST._IExpr _10935_recursiveGen;
                DCOMPUTF16._IOwnership _10936_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10937_recIdents;
                RAST._IExpr _out5830;
                DCOMPUTF16._IOwnership _out5831;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5832;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5830, out _out5831, out _out5832);
                _10935_recursiveGen = _out5830;
                _10936_recOwned = _out5831;
                _10937_recIdents = _out5832;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10935_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10933_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10934_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5833;
                DCOMPUTF16._IOwnership _out5834;
                DCOMPUTF16.COMP.FromOwnership(r, _10936_recOwned, expectedOwnership, out _out5833, out _out5834);
                r = _out5833;
                resultingOwnership = _out5834;
                readIdents = _10937_recIdents;
              }
            } else if (_source399.is_MapBuilder) {
              DAST._IType _10938___mcc_h1062 = _source399.dtor_key;
              DAST._IType _10939___mcc_h1063 = _source399.dtor_value;
              {
                RAST._IType _10940_fromTpeGen;
                RAST._IType _out5835;
                _out5835 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10940_fromTpeGen = _out5835;
                RAST._IType _10941_toTpeGen;
                RAST._IType _out5836;
                _out5836 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10941_toTpeGen = _out5836;
                RAST._IExpr _10942_recursiveGen;
                DCOMPUTF16._IOwnership _10943_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10944_recIdents;
                RAST._IExpr _out5837;
                DCOMPUTF16._IOwnership _out5838;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5839;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5837, out _out5838, out _out5839);
                _10942_recursiveGen = _out5837;
                _10943_recOwned = _out5838;
                _10944_recIdents = _out5839;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10942_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10940_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10941_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5840;
                DCOMPUTF16._IOwnership _out5841;
                DCOMPUTF16.COMP.FromOwnership(r, _10943_recOwned, expectedOwnership, out _out5840, out _out5841);
                r = _out5840;
                resultingOwnership = _out5841;
                readIdents = _10944_recIdents;
              }
            } else if (_source399.is_Arrow) {
              Dafny.ISequence<DAST._IType> _10945___mcc_h1066 = _source399.dtor_args;
              DAST._IType _10946___mcc_h1067 = _source399.dtor_result;
              {
                RAST._IType _10947_fromTpeGen;
                RAST._IType _out5842;
                _out5842 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10947_fromTpeGen = _out5842;
                RAST._IType _10948_toTpeGen;
                RAST._IType _out5843;
                _out5843 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10948_toTpeGen = _out5843;
                RAST._IExpr _10949_recursiveGen;
                DCOMPUTF16._IOwnership _10950_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10951_recIdents;
                RAST._IExpr _out5844;
                DCOMPUTF16._IOwnership _out5845;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5846;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5844, out _out5845, out _out5846);
                _10949_recursiveGen = _out5844;
                _10950_recOwned = _out5845;
                _10951_recIdents = _out5846;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10949_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10947_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10948_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5847;
                DCOMPUTF16._IOwnership _out5848;
                DCOMPUTF16.COMP.FromOwnership(r, _10950_recOwned, expectedOwnership, out _out5847, out _out5848);
                r = _out5847;
                resultingOwnership = _out5848;
                readIdents = _10951_recIdents;
              }
            } else if (_source399.is_Primitive) {
              DAST._IPrimitive _10952___mcc_h1070 = _source399.dtor_Primitive_a0;
              {
                RAST._IType _10953_fromTpeGen;
                RAST._IType _out5849;
                _out5849 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10953_fromTpeGen = _out5849;
                RAST._IType _10954_toTpeGen;
                RAST._IType _out5850;
                _out5850 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10954_toTpeGen = _out5850;
                RAST._IExpr _10955_recursiveGen;
                DCOMPUTF16._IOwnership _10956_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10957_recIdents;
                RAST._IExpr _out5851;
                DCOMPUTF16._IOwnership _out5852;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5853;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5851, out _out5852, out _out5853);
                _10955_recursiveGen = _out5851;
                _10956_recOwned = _out5852;
                _10957_recIdents = _out5853;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10955_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10953_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10954_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5854;
                DCOMPUTF16._IOwnership _out5855;
                DCOMPUTF16.COMP.FromOwnership(r, _10956_recOwned, expectedOwnership, out _out5854, out _out5855);
                r = _out5854;
                resultingOwnership = _out5855;
                readIdents = _10957_recIdents;
              }
            } else if (_source399.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _10958___mcc_h1072 = _source399.dtor_Passthrough_a0;
              {
                RAST._IType _10959_fromTpeGen;
                RAST._IType _out5856;
                _out5856 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10959_fromTpeGen = _out5856;
                RAST._IType _10960_toTpeGen;
                RAST._IType _out5857;
                _out5857 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10960_toTpeGen = _out5857;
                RAST._IExpr _10961_recursiveGen;
                DCOMPUTF16._IOwnership _10962_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10963_recIdents;
                RAST._IExpr _out5858;
                DCOMPUTF16._IOwnership _out5859;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5860;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5858, out _out5859, out _out5860);
                _10961_recursiveGen = _out5858;
                _10962_recOwned = _out5859;
                _10963_recIdents = _out5860;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10961_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10959_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10960_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5861;
                DCOMPUTF16._IOwnership _out5862;
                DCOMPUTF16.COMP.FromOwnership(r, _10962_recOwned, expectedOwnership, out _out5861, out _out5862);
                r = _out5861;
                resultingOwnership = _out5862;
                readIdents = _10963_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _10964___mcc_h1074 = _source399.dtor_TypeArg_a0;
              {
                RAST._IType _10965_fromTpeGen;
                RAST._IType _out5863;
                _out5863 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _10965_fromTpeGen = _out5863;
                RAST._IType _10966_toTpeGen;
                RAST._IType _out5864;
                _out5864 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _10966_toTpeGen = _out5864;
                RAST._IExpr _10967_recursiveGen;
                DCOMPUTF16._IOwnership _10968_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10969_recIdents;
                RAST._IExpr _out5865;
                DCOMPUTF16._IOwnership _out5866;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5867;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5865, out _out5866, out _out5867);
                _10967_recursiveGen = _out5865;
                _10968_recOwned = _out5866;
                _10969_recIdents = _out5867;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10967_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10965_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10966_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5868;
                DCOMPUTF16._IOwnership _out5869;
                DCOMPUTF16.COMP.FromOwnership(r, _10968_recOwned, expectedOwnership, out _out5868, out _out5869);
                r = _out5868;
                resultingOwnership = _out5869;
                readIdents = _10969_recIdents;
              }
            }
          } else {
            DAST._IType _source404 = _8325___mcc_h1;
            if (_source404.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10970___mcc_h1076 = _source404.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _10971___mcc_h1077 = _source404.dtor_typeArgs;
              DAST._IResolvedType _10972___mcc_h1078 = _source404.dtor_resolved;
              DAST._IResolvedType _source405 = _10972___mcc_h1078;
              if (_source405.is_Datatype) {
                DAST._IDatatypeType _10973___mcc_h1082 = _source405.dtor_datatypeType;
                {
                  RAST._IType _10974_fromTpeGen;
                  RAST._IType _out5870;
                  _out5870 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10974_fromTpeGen = _out5870;
                  RAST._IType _10975_toTpeGen;
                  RAST._IType _out5871;
                  _out5871 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10975_toTpeGen = _out5871;
                  RAST._IExpr _10976_recursiveGen;
                  DCOMPUTF16._IOwnership _10977_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10978_recIdents;
                  RAST._IExpr _out5872;
                  DCOMPUTF16._IOwnership _out5873;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5874;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5872, out _out5873, out _out5874);
                  _10976_recursiveGen = _out5872;
                  _10977_recOwned = _out5873;
                  _10978_recIdents = _out5874;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10976_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10974_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10975_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5875;
                  DCOMPUTF16._IOwnership _out5876;
                  DCOMPUTF16.COMP.FromOwnership(r, _10977_recOwned, expectedOwnership, out _out5875, out _out5876);
                  r = _out5875;
                  resultingOwnership = _out5876;
                  readIdents = _10978_recIdents;
                }
              } else if (_source405.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10979___mcc_h1084 = _source405.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _10980___mcc_h1085 = _source405.dtor_attributes;
                {
                  RAST._IType _10981_fromTpeGen;
                  RAST._IType _out5877;
                  _out5877 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _10981_fromTpeGen = _out5877;
                  RAST._IType _10982_toTpeGen;
                  RAST._IType _out5878;
                  _out5878 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _10982_toTpeGen = _out5878;
                  RAST._IExpr _10983_recursiveGen;
                  DCOMPUTF16._IOwnership _10984_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10985_recIdents;
                  RAST._IExpr _out5879;
                  DCOMPUTF16._IOwnership _out5880;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5881;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5879, out _out5880, out _out5881);
                  _10983_recursiveGen = _out5879;
                  _10984_recOwned = _out5880;
                  _10985_recIdents = _out5881;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10983_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10981_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10982_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5882;
                  DCOMPUTF16._IOwnership _out5883;
                  DCOMPUTF16.COMP.FromOwnership(r, _10984_recOwned, expectedOwnership, out _out5882, out _out5883);
                  r = _out5882;
                  resultingOwnership = _out5883;
                  readIdents = _10985_recIdents;
                }
              } else {
                DAST._IType _10986___mcc_h1088 = _source405.dtor_baseType;
                DAST._INewtypeRange _10987___mcc_h1089 = _source405.dtor_range;
                bool _10988___mcc_h1090 = _source405.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _10989___mcc_h1091 = _source405.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _10990_attributes = _10989___mcc_h1091;
                bool _10991_erase = _10988___mcc_h1090;
                DAST._INewtypeRange _10992_range = _10987___mcc_h1089;
                DAST._IType _10993_b = _10986___mcc_h1088;
                {
                  Std.Wrappers._IOption<RAST._IType> _10994_nativeToType;
                  _10994_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10993_b, _10992_range);
                  if (object.Equals(_8319_fromTpe, _10993_b)) {
                    RAST._IExpr _10995_recursiveGen;
                    DCOMPUTF16._IOwnership _10996_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10997_recIdents;
                    RAST._IExpr _out5884;
                    DCOMPUTF16._IOwnership _out5885;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5886;
                    DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5884, out _out5885, out _out5886);
                    _10995_recursiveGen = _out5884;
                    _10996_recOwned = _out5885;
                    _10997_recIdents = _out5886;
                    readIdents = _10997_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source406 = _10994_nativeToType;
                    if (_source406.is_None) {
                      if (_10991_erase) {
                        r = _10995_recursiveGen;
                      } else {
                        RAST._IType _10998_rhsType;
                        RAST._IType _out5887;
                        _out5887 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                        _10998_rhsType = _out5887;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10998_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10995_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out5888;
                      DCOMPUTF16._IOwnership _out5889;
                      DCOMPUTF16.COMP.FromOwnership(r, _10996_recOwned, expectedOwnership, out _out5888, out _out5889);
                      r = _out5888;
                      resultingOwnership = _out5889;
                    } else {
                      RAST._IType _10999___mcc_h2140 = _source406.dtor_value;
                      RAST._IType _11000_v = _10999___mcc_h2140;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10995_recursiveGen, RAST.Expr.create_ExprFromType(_11000_v)));
                      RAST._IExpr _out5890;
                      DCOMPUTF16._IOwnership _out5891;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5890, out _out5891);
                      r = _out5890;
                      resultingOwnership = _out5891;
                    }
                  } else {
                    if ((_10994_nativeToType).is_Some) {
                      DAST._IType _source407 = _8319_fromTpe;
                      if (_source407.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11001___mcc_h2141 = _source407.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _11002___mcc_h2142 = _source407.dtor_typeArgs;
                        DAST._IResolvedType _11003___mcc_h2143 = _source407.dtor_resolved;
                        DAST._IResolvedType _source408 = _11003___mcc_h2143;
                        if (_source408.is_Datatype) {
                          DAST._IDatatypeType _11004___mcc_h2147 = _source408.dtor_datatypeType;
                        } else if (_source408.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11005___mcc_h2149 = _source408.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _11006___mcc_h2150 = _source408.dtor_attributes;
                        } else {
                          DAST._IType _11007___mcc_h2153 = _source408.dtor_baseType;
                          DAST._INewtypeRange _11008___mcc_h2154 = _source408.dtor_range;
                          bool _11009___mcc_h2155 = _source408.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _11010___mcc_h2156 = _source408.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _11011_attributes0 = _11010___mcc_h2156;
                          bool _11012_erase0 = _11009___mcc_h2155;
                          DAST._INewtypeRange _11013_range0 = _11008___mcc_h2154;
                          DAST._IType _11014_b0 = _11007___mcc_h2153;
                          {
                            Std.Wrappers._IOption<RAST._IType> _11015_nativeFromType;
                            _11015_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11014_b0, _11013_range0);
                            if ((_11015_nativeFromType).is_Some) {
                              RAST._IExpr _11016_recursiveGen;
                              DCOMPUTF16._IOwnership _11017_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11018_recIdents;
                              RAST._IExpr _out5892;
                              DCOMPUTF16._IOwnership _out5893;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5894;
                              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5892, out _out5893, out _out5894);
                              _11016_recursiveGen = _out5892;
                              _11017_recOwned = _out5893;
                              _11018_recIdents = _out5894;
                              RAST._IExpr _out5895;
                              DCOMPUTF16._IOwnership _out5896;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11016_recursiveGen, (_10994_nativeToType).dtor_value), _11017_recOwned, expectedOwnership, out _out5895, out _out5896);
                              r = _out5895;
                              resultingOwnership = _out5896;
                              readIdents = _11018_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source407.is_Nullable) {
                        DAST._IType _11019___mcc_h2161 = _source407.dtor_Nullable_a0;
                      } else if (_source407.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _11020___mcc_h2163 = _source407.dtor_Tuple_a0;
                      } else if (_source407.is_Array) {
                        DAST._IType _11021___mcc_h2165 = _source407.dtor_element;
                        BigInteger _11022___mcc_h2166 = _source407.dtor_dims;
                      } else if (_source407.is_Seq) {
                        DAST._IType _11023___mcc_h2169 = _source407.dtor_element;
                      } else if (_source407.is_Set) {
                        DAST._IType _11024___mcc_h2171 = _source407.dtor_element;
                      } else if (_source407.is_Multiset) {
                        DAST._IType _11025___mcc_h2173 = _source407.dtor_element;
                      } else if (_source407.is_Map) {
                        DAST._IType _11026___mcc_h2175 = _source407.dtor_key;
                        DAST._IType _11027___mcc_h2176 = _source407.dtor_value;
                      } else if (_source407.is_SetBuilder) {
                        DAST._IType _11028___mcc_h2179 = _source407.dtor_element;
                      } else if (_source407.is_MapBuilder) {
                        DAST._IType _11029___mcc_h2181 = _source407.dtor_key;
                        DAST._IType _11030___mcc_h2182 = _source407.dtor_value;
                      } else if (_source407.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _11031___mcc_h2185 = _source407.dtor_args;
                        DAST._IType _11032___mcc_h2186 = _source407.dtor_result;
                      } else if (_source407.is_Primitive) {
                        DAST._IPrimitive _11033___mcc_h2189 = _source407.dtor_Primitive_a0;
                      } else if (_source407.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _11034___mcc_h2191 = _source407.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _11035___mcc_h2193 = _source407.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _11036_recursiveGen;
                        DCOMPUTF16._IOwnership _11037_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11038_recIdents;
                        RAST._IExpr _out5897;
                        DCOMPUTF16._IOwnership _out5898;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5899;
                        DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5897, out _out5898, out _out5899);
                        _11036_recursiveGen = _out5897;
                        _11037_recOwned = _out5898;
                        _11038_recIdents = _out5899;
                        RAST._IExpr _out5900;
                        DCOMPUTF16._IOwnership _out5901;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11036_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10994_nativeToType).dtor_value), _11037_recOwned, expectedOwnership, out _out5900, out _out5901);
                        r = _out5900;
                        resultingOwnership = _out5901;
                        readIdents = _11038_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out5902;
                    DCOMPUTF16._IOwnership _out5903;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5904;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _10993_b), _10993_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out5902, out _out5903, out _out5904);
                    r = _out5902;
                    resultingOwnership = _out5903;
                    readIdents = _out5904;
                  }
                }
              }
            } else if (_source404.is_Nullable) {
              DAST._IType _11039___mcc_h1096 = _source404.dtor_Nullable_a0;
              {
                RAST._IExpr _11040_recursiveGen;
                DCOMPUTF16._IOwnership _11041_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11042_recIdents;
                RAST._IExpr _out5905;
                DCOMPUTF16._IOwnership _out5906;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5907;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5905, out _out5906, out _out5907);
                _11040_recursiveGen = _out5905;
                _11041_recOwned = _out5906;
                _11042_recIdents = _out5907;
                r = _11040_recursiveGen;
                if (object.Equals(_11041_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out5908;
                DCOMPUTF16._IOwnership _out5909;
                DCOMPUTF16.COMP.FromOwnership(r, _11041_recOwned, expectedOwnership, out _out5908, out _out5909);
                r = _out5908;
                resultingOwnership = _out5909;
                readIdents = _11042_recIdents;
              }
            } else if (_source404.is_Tuple) {
              Dafny.ISequence<DAST._IType> _11043___mcc_h1098 = _source404.dtor_Tuple_a0;
              {
                RAST._IType _11044_fromTpeGen;
                RAST._IType _out5910;
                _out5910 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11044_fromTpeGen = _out5910;
                RAST._IType _11045_toTpeGen;
                RAST._IType _out5911;
                _out5911 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11045_toTpeGen = _out5911;
                RAST._IExpr _11046_recursiveGen;
                DCOMPUTF16._IOwnership _11047_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11048_recIdents;
                RAST._IExpr _out5912;
                DCOMPUTF16._IOwnership _out5913;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5914;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5912, out _out5913, out _out5914);
                _11046_recursiveGen = _out5912;
                _11047_recOwned = _out5913;
                _11048_recIdents = _out5914;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11046_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11044_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11045_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5915;
                DCOMPUTF16._IOwnership _out5916;
                DCOMPUTF16.COMP.FromOwnership(r, _11047_recOwned, expectedOwnership, out _out5915, out _out5916);
                r = _out5915;
                resultingOwnership = _out5916;
                readIdents = _11048_recIdents;
              }
            } else if (_source404.is_Array) {
              DAST._IType _11049___mcc_h1100 = _source404.dtor_element;
              BigInteger _11050___mcc_h1101 = _source404.dtor_dims;
              {
                RAST._IType _11051_fromTpeGen;
                RAST._IType _out5917;
                _out5917 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11051_fromTpeGen = _out5917;
                RAST._IType _11052_toTpeGen;
                RAST._IType _out5918;
                _out5918 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11052_toTpeGen = _out5918;
                RAST._IExpr _11053_recursiveGen;
                DCOMPUTF16._IOwnership _11054_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11055_recIdents;
                RAST._IExpr _out5919;
                DCOMPUTF16._IOwnership _out5920;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5921;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5919, out _out5920, out _out5921);
                _11053_recursiveGen = _out5919;
                _11054_recOwned = _out5920;
                _11055_recIdents = _out5921;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11053_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11051_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11052_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5922;
                DCOMPUTF16._IOwnership _out5923;
                DCOMPUTF16.COMP.FromOwnership(r, _11054_recOwned, expectedOwnership, out _out5922, out _out5923);
                r = _out5922;
                resultingOwnership = _out5923;
                readIdents = _11055_recIdents;
              }
            } else if (_source404.is_Seq) {
              DAST._IType _11056___mcc_h1104 = _source404.dtor_element;
              {
                RAST._IType _11057_fromTpeGen;
                RAST._IType _out5924;
                _out5924 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11057_fromTpeGen = _out5924;
                RAST._IType _11058_toTpeGen;
                RAST._IType _out5925;
                _out5925 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11058_toTpeGen = _out5925;
                RAST._IExpr _11059_recursiveGen;
                DCOMPUTF16._IOwnership _11060_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11061_recIdents;
                RAST._IExpr _out5926;
                DCOMPUTF16._IOwnership _out5927;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5928;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5926, out _out5927, out _out5928);
                _11059_recursiveGen = _out5926;
                _11060_recOwned = _out5927;
                _11061_recIdents = _out5928;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11059_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11057_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11058_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5929;
                DCOMPUTF16._IOwnership _out5930;
                DCOMPUTF16.COMP.FromOwnership(r, _11060_recOwned, expectedOwnership, out _out5929, out _out5930);
                r = _out5929;
                resultingOwnership = _out5930;
                readIdents = _11061_recIdents;
              }
            } else if (_source404.is_Set) {
              DAST._IType _11062___mcc_h1106 = _source404.dtor_element;
              {
                RAST._IType _11063_fromTpeGen;
                RAST._IType _out5931;
                _out5931 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11063_fromTpeGen = _out5931;
                RAST._IType _11064_toTpeGen;
                RAST._IType _out5932;
                _out5932 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11064_toTpeGen = _out5932;
                RAST._IExpr _11065_recursiveGen;
                DCOMPUTF16._IOwnership _11066_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11067_recIdents;
                RAST._IExpr _out5933;
                DCOMPUTF16._IOwnership _out5934;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5935;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5933, out _out5934, out _out5935);
                _11065_recursiveGen = _out5933;
                _11066_recOwned = _out5934;
                _11067_recIdents = _out5935;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11065_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11063_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11064_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5936;
                DCOMPUTF16._IOwnership _out5937;
                DCOMPUTF16.COMP.FromOwnership(r, _11066_recOwned, expectedOwnership, out _out5936, out _out5937);
                r = _out5936;
                resultingOwnership = _out5937;
                readIdents = _11067_recIdents;
              }
            } else if (_source404.is_Multiset) {
              DAST._IType _11068___mcc_h1108 = _source404.dtor_element;
              {
                RAST._IType _11069_fromTpeGen;
                RAST._IType _out5938;
                _out5938 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11069_fromTpeGen = _out5938;
                RAST._IType _11070_toTpeGen;
                RAST._IType _out5939;
                _out5939 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11070_toTpeGen = _out5939;
                RAST._IExpr _11071_recursiveGen;
                DCOMPUTF16._IOwnership _11072_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11073_recIdents;
                RAST._IExpr _out5940;
                DCOMPUTF16._IOwnership _out5941;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5942;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5940, out _out5941, out _out5942);
                _11071_recursiveGen = _out5940;
                _11072_recOwned = _out5941;
                _11073_recIdents = _out5942;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11071_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11069_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11070_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5943;
                DCOMPUTF16._IOwnership _out5944;
                DCOMPUTF16.COMP.FromOwnership(r, _11072_recOwned, expectedOwnership, out _out5943, out _out5944);
                r = _out5943;
                resultingOwnership = _out5944;
                readIdents = _11073_recIdents;
              }
            } else if (_source404.is_Map) {
              DAST._IType _11074___mcc_h1110 = _source404.dtor_key;
              DAST._IType _11075___mcc_h1111 = _source404.dtor_value;
              {
                RAST._IType _11076_fromTpeGen;
                RAST._IType _out5945;
                _out5945 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11076_fromTpeGen = _out5945;
                RAST._IType _11077_toTpeGen;
                RAST._IType _out5946;
                _out5946 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11077_toTpeGen = _out5946;
                RAST._IExpr _11078_recursiveGen;
                DCOMPUTF16._IOwnership _11079_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11080_recIdents;
                RAST._IExpr _out5947;
                DCOMPUTF16._IOwnership _out5948;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5949;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5947, out _out5948, out _out5949);
                _11078_recursiveGen = _out5947;
                _11079_recOwned = _out5948;
                _11080_recIdents = _out5949;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11078_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11076_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11077_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5950;
                DCOMPUTF16._IOwnership _out5951;
                DCOMPUTF16.COMP.FromOwnership(r, _11079_recOwned, expectedOwnership, out _out5950, out _out5951);
                r = _out5950;
                resultingOwnership = _out5951;
                readIdents = _11080_recIdents;
              }
            } else if (_source404.is_SetBuilder) {
              DAST._IType _11081___mcc_h1114 = _source404.dtor_element;
              {
                RAST._IType _11082_fromTpeGen;
                RAST._IType _out5952;
                _out5952 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11082_fromTpeGen = _out5952;
                RAST._IType _11083_toTpeGen;
                RAST._IType _out5953;
                _out5953 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11083_toTpeGen = _out5953;
                RAST._IExpr _11084_recursiveGen;
                DCOMPUTF16._IOwnership _11085_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11086_recIdents;
                RAST._IExpr _out5954;
                DCOMPUTF16._IOwnership _out5955;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5956;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5954, out _out5955, out _out5956);
                _11084_recursiveGen = _out5954;
                _11085_recOwned = _out5955;
                _11086_recIdents = _out5956;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11084_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11082_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11083_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5957;
                DCOMPUTF16._IOwnership _out5958;
                DCOMPUTF16.COMP.FromOwnership(r, _11085_recOwned, expectedOwnership, out _out5957, out _out5958);
                r = _out5957;
                resultingOwnership = _out5958;
                readIdents = _11086_recIdents;
              }
            } else if (_source404.is_MapBuilder) {
              DAST._IType _11087___mcc_h1116 = _source404.dtor_key;
              DAST._IType _11088___mcc_h1117 = _source404.dtor_value;
              {
                RAST._IType _11089_fromTpeGen;
                RAST._IType _out5959;
                _out5959 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11089_fromTpeGen = _out5959;
                RAST._IType _11090_toTpeGen;
                RAST._IType _out5960;
                _out5960 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11090_toTpeGen = _out5960;
                RAST._IExpr _11091_recursiveGen;
                DCOMPUTF16._IOwnership _11092_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11093_recIdents;
                RAST._IExpr _out5961;
                DCOMPUTF16._IOwnership _out5962;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5963;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5961, out _out5962, out _out5963);
                _11091_recursiveGen = _out5961;
                _11092_recOwned = _out5962;
                _11093_recIdents = _out5963;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11091_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11089_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11090_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5964;
                DCOMPUTF16._IOwnership _out5965;
                DCOMPUTF16.COMP.FromOwnership(r, _11092_recOwned, expectedOwnership, out _out5964, out _out5965);
                r = _out5964;
                resultingOwnership = _out5965;
                readIdents = _11093_recIdents;
              }
            } else if (_source404.is_Arrow) {
              Dafny.ISequence<DAST._IType> _11094___mcc_h1120 = _source404.dtor_args;
              DAST._IType _11095___mcc_h1121 = _source404.dtor_result;
              {
                RAST._IType _11096_fromTpeGen;
                RAST._IType _out5966;
                _out5966 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11096_fromTpeGen = _out5966;
                RAST._IType _11097_toTpeGen;
                RAST._IType _out5967;
                _out5967 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11097_toTpeGen = _out5967;
                RAST._IExpr _11098_recursiveGen;
                DCOMPUTF16._IOwnership _11099_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11100_recIdents;
                RAST._IExpr _out5968;
                DCOMPUTF16._IOwnership _out5969;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5970;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5968, out _out5969, out _out5970);
                _11098_recursiveGen = _out5968;
                _11099_recOwned = _out5969;
                _11100_recIdents = _out5970;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11098_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11096_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11097_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5971;
                DCOMPUTF16._IOwnership _out5972;
                DCOMPUTF16.COMP.FromOwnership(r, _11099_recOwned, expectedOwnership, out _out5971, out _out5972);
                r = _out5971;
                resultingOwnership = _out5972;
                readIdents = _11100_recIdents;
              }
            } else if (_source404.is_Primitive) {
              DAST._IPrimitive _11101___mcc_h1124 = _source404.dtor_Primitive_a0;
              DAST._IPrimitive _source409 = _11101___mcc_h1124;
              if (_source409.is_Int) {
                {
                  RAST._IType _11102_rhsType;
                  RAST._IType _out5973;
                  _out5973 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _11102_rhsType = _out5973;
                  RAST._IExpr _11103_recursiveGen;
                  DCOMPUTF16._IOwnership _11104___v98;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11105_recIdents;
                  RAST._IExpr _out5974;
                  DCOMPUTF16._IOwnership _out5975;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5976;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5974, out _out5975, out _out5976);
                  _11103_recursiveGen = _out5974;
                  _11104___v98 = _out5975;
                  _11105_recIdents = _out5976;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_11103_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as u32)}")));
                  RAST._IExpr _out5977;
                  DCOMPUTF16._IOwnership _out5978;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5977, out _out5978);
                  r = _out5977;
                  resultingOwnership = _out5978;
                  readIdents = _11105_recIdents;
                }
              } else if (_source409.is_Real) {
                {
                  RAST._IType _11106_fromTpeGen;
                  RAST._IType _out5979;
                  _out5979 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _11106_fromTpeGen = _out5979;
                  RAST._IType _11107_toTpeGen;
                  RAST._IType _out5980;
                  _out5980 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _11107_toTpeGen = _out5980;
                  RAST._IExpr _11108_recursiveGen;
                  DCOMPUTF16._IOwnership _11109_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11110_recIdents;
                  RAST._IExpr _out5981;
                  DCOMPUTF16._IOwnership _out5982;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5983;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5981, out _out5982, out _out5983);
                  _11108_recursiveGen = _out5981;
                  _11109_recOwned = _out5982;
                  _11110_recIdents = _out5983;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11108_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11106_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11107_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5984;
                  DCOMPUTF16._IOwnership _out5985;
                  DCOMPUTF16.COMP.FromOwnership(r, _11109_recOwned, expectedOwnership, out _out5984, out _out5985);
                  r = _out5984;
                  resultingOwnership = _out5985;
                  readIdents = _11110_recIdents;
                }
              } else if (_source409.is_String) {
                {
                  RAST._IType _11111_fromTpeGen;
                  RAST._IType _out5986;
                  _out5986 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _11111_fromTpeGen = _out5986;
                  RAST._IType _11112_toTpeGen;
                  RAST._IType _out5987;
                  _out5987 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _11112_toTpeGen = _out5987;
                  RAST._IExpr _11113_recursiveGen;
                  DCOMPUTF16._IOwnership _11114_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11115_recIdents;
                  RAST._IExpr _out5988;
                  DCOMPUTF16._IOwnership _out5989;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5990;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5988, out _out5989, out _out5990);
                  _11113_recursiveGen = _out5988;
                  _11114_recOwned = _out5989;
                  _11115_recIdents = _out5990;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11113_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11111_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11112_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5991;
                  DCOMPUTF16._IOwnership _out5992;
                  DCOMPUTF16.COMP.FromOwnership(r, _11114_recOwned, expectedOwnership, out _out5991, out _out5992);
                  r = _out5991;
                  resultingOwnership = _out5992;
                  readIdents = _11115_recIdents;
                }
              } else if (_source409.is_Bool) {
                {
                  RAST._IType _11116_fromTpeGen;
                  RAST._IType _out5993;
                  _out5993 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _11116_fromTpeGen = _out5993;
                  RAST._IType _11117_toTpeGen;
                  RAST._IType _out5994;
                  _out5994 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _11117_toTpeGen = _out5994;
                  RAST._IExpr _11118_recursiveGen;
                  DCOMPUTF16._IOwnership _11119_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11120_recIdents;
                  RAST._IExpr _out5995;
                  DCOMPUTF16._IOwnership _out5996;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5997;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out5995, out _out5996, out _out5997);
                  _11118_recursiveGen = _out5995;
                  _11119_recOwned = _out5996;
                  _11120_recIdents = _out5997;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11118_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11116_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11117_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5998;
                  DCOMPUTF16._IOwnership _out5999;
                  DCOMPUTF16.COMP.FromOwnership(r, _11119_recOwned, expectedOwnership, out _out5998, out _out5999);
                  r = _out5998;
                  resultingOwnership = _out5999;
                  readIdents = _11120_recIdents;
                }
              } else {
                {
                  RAST._IType _11121_fromTpeGen;
                  RAST._IType _out6000;
                  _out6000 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                  _11121_fromTpeGen = _out6000;
                  RAST._IType _11122_toTpeGen;
                  RAST._IType _out6001;
                  _out6001 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                  _11122_toTpeGen = _out6001;
                  RAST._IExpr _11123_recursiveGen;
                  DCOMPUTF16._IOwnership _11124_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11125_recIdents;
                  RAST._IExpr _out6002;
                  DCOMPUTF16._IOwnership _out6003;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6004;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6002, out _out6003, out _out6004);
                  _11123_recursiveGen = _out6002;
                  _11124_recOwned = _out6003;
                  _11125_recIdents = _out6004;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11123_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11121_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11122_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6005;
                  DCOMPUTF16._IOwnership _out6006;
                  DCOMPUTF16.COMP.FromOwnership(r, _11124_recOwned, expectedOwnership, out _out6005, out _out6006);
                  r = _out6005;
                  resultingOwnership = _out6006;
                  readIdents = _11125_recIdents;
                }
              }
            } else if (_source404.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _11126___mcc_h1126 = _source404.dtor_Passthrough_a0;
              {
                RAST._IType _11127_fromTpeGen;
                RAST._IType _out6007;
                _out6007 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11127_fromTpeGen = _out6007;
                RAST._IType _11128_toTpeGen;
                RAST._IType _out6008;
                _out6008 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11128_toTpeGen = _out6008;
                RAST._IExpr _11129_recursiveGen;
                DCOMPUTF16._IOwnership _11130_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11131_recIdents;
                RAST._IExpr _out6009;
                DCOMPUTF16._IOwnership _out6010;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6011;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6009, out _out6010, out _out6011);
                _11129_recursiveGen = _out6009;
                _11130_recOwned = _out6010;
                _11131_recIdents = _out6011;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11129_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11127_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11128_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6012;
                DCOMPUTF16._IOwnership _out6013;
                DCOMPUTF16.COMP.FromOwnership(r, _11130_recOwned, expectedOwnership, out _out6012, out _out6013);
                r = _out6012;
                resultingOwnership = _out6013;
                readIdents = _11131_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _11132___mcc_h1128 = _source404.dtor_TypeArg_a0;
              {
                RAST._IType _11133_fromTpeGen;
                RAST._IType _out6014;
                _out6014 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11133_fromTpeGen = _out6014;
                RAST._IType _11134_toTpeGen;
                RAST._IType _out6015;
                _out6015 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11134_toTpeGen = _out6015;
                RAST._IExpr _11135_recursiveGen;
                DCOMPUTF16._IOwnership _11136_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11137_recIdents;
                RAST._IExpr _out6016;
                DCOMPUTF16._IOwnership _out6017;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6018;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6016, out _out6017, out _out6018);
                _11135_recursiveGen = _out6016;
                _11136_recOwned = _out6017;
                _11137_recIdents = _out6018;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11135_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11133_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11134_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6019;
                DCOMPUTF16._IOwnership _out6020;
                DCOMPUTF16.COMP.FromOwnership(r, _11136_recOwned, expectedOwnership, out _out6019, out _out6020);
                r = _out6019;
                resultingOwnership = _out6020;
                readIdents = _11137_recIdents;
              }
            }
          }
        } else if (_source303.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _11138___mcc_h1130 = _source303.dtor_Passthrough_a0;
          DAST._IType _source410 = _8325___mcc_h1;
          if (_source410.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11139___mcc_h1134 = _source410.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11140___mcc_h1135 = _source410.dtor_typeArgs;
            DAST._IResolvedType _11141___mcc_h1136 = _source410.dtor_resolved;
            DAST._IResolvedType _source411 = _11141___mcc_h1136;
            if (_source411.is_Datatype) {
              DAST._IDatatypeType _11142___mcc_h1140 = _source411.dtor_datatypeType;
              {
                RAST._IType _11143_fromTpeGen;
                RAST._IType _out6021;
                _out6021 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11143_fromTpeGen = _out6021;
                RAST._IType _11144_toTpeGen;
                RAST._IType _out6022;
                _out6022 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11144_toTpeGen = _out6022;
                RAST._IExpr _11145_recursiveGen;
                DCOMPUTF16._IOwnership _11146_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11147_recIdents;
                RAST._IExpr _out6023;
                DCOMPUTF16._IOwnership _out6024;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6025;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6023, out _out6024, out _out6025);
                _11145_recursiveGen = _out6023;
                _11146_recOwned = _out6024;
                _11147_recIdents = _out6025;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11145_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11143_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11144_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6026;
                DCOMPUTF16._IOwnership _out6027;
                DCOMPUTF16.COMP.FromOwnership(r, _11146_recOwned, expectedOwnership, out _out6026, out _out6027);
                r = _out6026;
                resultingOwnership = _out6027;
                readIdents = _11147_recIdents;
              }
            } else if (_source411.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11148___mcc_h1142 = _source411.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11149___mcc_h1143 = _source411.dtor_attributes;
              {
                RAST._IType _11150_fromTpeGen;
                RAST._IType _out6028;
                _out6028 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11150_fromTpeGen = _out6028;
                RAST._IType _11151_toTpeGen;
                RAST._IType _out6029;
                _out6029 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11151_toTpeGen = _out6029;
                RAST._IExpr _11152_recursiveGen;
                DCOMPUTF16._IOwnership _11153_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11154_recIdents;
                RAST._IExpr _out6030;
                DCOMPUTF16._IOwnership _out6031;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6032;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6030, out _out6031, out _out6032);
                _11152_recursiveGen = _out6030;
                _11153_recOwned = _out6031;
                _11154_recIdents = _out6032;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11152_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11150_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11151_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6033;
                DCOMPUTF16._IOwnership _out6034;
                DCOMPUTF16.COMP.FromOwnership(r, _11153_recOwned, expectedOwnership, out _out6033, out _out6034);
                r = _out6033;
                resultingOwnership = _out6034;
                readIdents = _11154_recIdents;
              }
            } else {
              DAST._IType _11155___mcc_h1146 = _source411.dtor_baseType;
              DAST._INewtypeRange _11156___mcc_h1147 = _source411.dtor_range;
              bool _11157___mcc_h1148 = _source411.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11158___mcc_h1149 = _source411.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11159_attributes = _11158___mcc_h1149;
              bool _11160_erase = _11157___mcc_h1148;
              DAST._INewtypeRange _11161_range = _11156___mcc_h1147;
              DAST._IType _11162_b = _11155___mcc_h1146;
              {
                Std.Wrappers._IOption<RAST._IType> _11163_nativeToType;
                _11163_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11162_b, _11161_range);
                if (object.Equals(_8319_fromTpe, _11162_b)) {
                  RAST._IExpr _11164_recursiveGen;
                  DCOMPUTF16._IOwnership _11165_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11166_recIdents;
                  RAST._IExpr _out6035;
                  DCOMPUTF16._IOwnership _out6036;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6037;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6035, out _out6036, out _out6037);
                  _11164_recursiveGen = _out6035;
                  _11165_recOwned = _out6036;
                  _11166_recIdents = _out6037;
                  readIdents = _11166_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source412 = _11163_nativeToType;
                  if (_source412.is_None) {
                    if (_11160_erase) {
                      r = _11164_recursiveGen;
                    } else {
                      RAST._IType _11167_rhsType;
                      RAST._IType _out6038;
                      _out6038 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _11167_rhsType = _out6038;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11167_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11164_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out6039;
                    DCOMPUTF16._IOwnership _out6040;
                    DCOMPUTF16.COMP.FromOwnership(r, _11165_recOwned, expectedOwnership, out _out6039, out _out6040);
                    r = _out6039;
                    resultingOwnership = _out6040;
                  } else {
                    RAST._IType _11168___mcc_h2195 = _source412.dtor_value;
                    RAST._IType _11169_v = _11168___mcc_h2195;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11164_recursiveGen, RAST.Expr.create_ExprFromType(_11169_v)));
                    RAST._IExpr _out6041;
                    DCOMPUTF16._IOwnership _out6042;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6041, out _out6042);
                    r = _out6041;
                    resultingOwnership = _out6042;
                  }
                } else {
                  if ((_11163_nativeToType).is_Some) {
                    DAST._IType _source413 = _8319_fromTpe;
                    if (_source413.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11170___mcc_h2196 = _source413.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11171___mcc_h2197 = _source413.dtor_typeArgs;
                      DAST._IResolvedType _11172___mcc_h2198 = _source413.dtor_resolved;
                      DAST._IResolvedType _source414 = _11172___mcc_h2198;
                      if (_source414.is_Datatype) {
                        DAST._IDatatypeType _11173___mcc_h2202 = _source414.dtor_datatypeType;
                      } else if (_source414.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11174___mcc_h2204 = _source414.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11175___mcc_h2205 = _source414.dtor_attributes;
                      } else {
                        DAST._IType _11176___mcc_h2208 = _source414.dtor_baseType;
                        DAST._INewtypeRange _11177___mcc_h2209 = _source414.dtor_range;
                        bool _11178___mcc_h2210 = _source414.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11179___mcc_h2211 = _source414.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11180_attributes0 = _11179___mcc_h2211;
                        bool _11181_erase0 = _11178___mcc_h2210;
                        DAST._INewtypeRange _11182_range0 = _11177___mcc_h2209;
                        DAST._IType _11183_b0 = _11176___mcc_h2208;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11184_nativeFromType;
                          _11184_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11183_b0, _11182_range0);
                          if ((_11184_nativeFromType).is_Some) {
                            RAST._IExpr _11185_recursiveGen;
                            DCOMPUTF16._IOwnership _11186_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11187_recIdents;
                            RAST._IExpr _out6043;
                            DCOMPUTF16._IOwnership _out6044;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6045;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6043, out _out6044, out _out6045);
                            _11185_recursiveGen = _out6043;
                            _11186_recOwned = _out6044;
                            _11187_recIdents = _out6045;
                            RAST._IExpr _out6046;
                            DCOMPUTF16._IOwnership _out6047;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11185_recursiveGen, (_11163_nativeToType).dtor_value), _11186_recOwned, expectedOwnership, out _out6046, out _out6047);
                            r = _out6046;
                            resultingOwnership = _out6047;
                            readIdents = _11187_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source413.is_Nullable) {
                      DAST._IType _11188___mcc_h2216 = _source413.dtor_Nullable_a0;
                    } else if (_source413.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11189___mcc_h2218 = _source413.dtor_Tuple_a0;
                    } else if (_source413.is_Array) {
                      DAST._IType _11190___mcc_h2220 = _source413.dtor_element;
                      BigInteger _11191___mcc_h2221 = _source413.dtor_dims;
                    } else if (_source413.is_Seq) {
                      DAST._IType _11192___mcc_h2224 = _source413.dtor_element;
                    } else if (_source413.is_Set) {
                      DAST._IType _11193___mcc_h2226 = _source413.dtor_element;
                    } else if (_source413.is_Multiset) {
                      DAST._IType _11194___mcc_h2228 = _source413.dtor_element;
                    } else if (_source413.is_Map) {
                      DAST._IType _11195___mcc_h2230 = _source413.dtor_key;
                      DAST._IType _11196___mcc_h2231 = _source413.dtor_value;
                    } else if (_source413.is_SetBuilder) {
                      DAST._IType _11197___mcc_h2234 = _source413.dtor_element;
                    } else if (_source413.is_MapBuilder) {
                      DAST._IType _11198___mcc_h2236 = _source413.dtor_key;
                      DAST._IType _11199___mcc_h2237 = _source413.dtor_value;
                    } else if (_source413.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11200___mcc_h2240 = _source413.dtor_args;
                      DAST._IType _11201___mcc_h2241 = _source413.dtor_result;
                    } else if (_source413.is_Primitive) {
                      DAST._IPrimitive _11202___mcc_h2244 = _source413.dtor_Primitive_a0;
                    } else if (_source413.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11203___mcc_h2246 = _source413.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11204___mcc_h2248 = _source413.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11205_recursiveGen;
                      DCOMPUTF16._IOwnership _11206_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11207_recIdents;
                      RAST._IExpr _out6048;
                      DCOMPUTF16._IOwnership _out6049;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6050;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6048, out _out6049, out _out6050);
                      _11205_recursiveGen = _out6048;
                      _11206_recOwned = _out6049;
                      _11207_recIdents = _out6050;
                      RAST._IExpr _out6051;
                      DCOMPUTF16._IOwnership _out6052;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11205_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11163_nativeToType).dtor_value), _11206_recOwned, expectedOwnership, out _out6051, out _out6052);
                      r = _out6051;
                      resultingOwnership = _out6052;
                      readIdents = _11207_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out6053;
                  DCOMPUTF16._IOwnership _out6054;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6055;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _11162_b), _11162_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out6053, out _out6054, out _out6055);
                  r = _out6053;
                  resultingOwnership = _out6054;
                  readIdents = _out6055;
                }
              }
            }
          } else if (_source410.is_Nullable) {
            DAST._IType _11208___mcc_h1154 = _source410.dtor_Nullable_a0;
            {
              RAST._IExpr _11209_recursiveGen;
              DCOMPUTF16._IOwnership _11210_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11211_recIdents;
              RAST._IExpr _out6056;
              DCOMPUTF16._IOwnership _out6057;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6058;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6056, out _out6057, out _out6058);
              _11209_recursiveGen = _out6056;
              _11210_recOwned = _out6057;
              _11211_recIdents = _out6058;
              r = _11209_recursiveGen;
              if (object.Equals(_11210_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out6059;
              DCOMPUTF16._IOwnership _out6060;
              DCOMPUTF16.COMP.FromOwnership(r, _11210_recOwned, expectedOwnership, out _out6059, out _out6060);
              r = _out6059;
              resultingOwnership = _out6060;
              readIdents = _11211_recIdents;
            }
          } else if (_source410.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11212___mcc_h1156 = _source410.dtor_Tuple_a0;
            {
              RAST._IType _11213_fromTpeGen;
              RAST._IType _out6061;
              _out6061 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11213_fromTpeGen = _out6061;
              RAST._IType _11214_toTpeGen;
              RAST._IType _out6062;
              _out6062 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11214_toTpeGen = _out6062;
              RAST._IExpr _11215_recursiveGen;
              DCOMPUTF16._IOwnership _11216_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11217_recIdents;
              RAST._IExpr _out6063;
              DCOMPUTF16._IOwnership _out6064;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6065;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6063, out _out6064, out _out6065);
              _11215_recursiveGen = _out6063;
              _11216_recOwned = _out6064;
              _11217_recIdents = _out6065;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11215_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11213_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11214_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6066;
              DCOMPUTF16._IOwnership _out6067;
              DCOMPUTF16.COMP.FromOwnership(r, _11216_recOwned, expectedOwnership, out _out6066, out _out6067);
              r = _out6066;
              resultingOwnership = _out6067;
              readIdents = _11217_recIdents;
            }
          } else if (_source410.is_Array) {
            DAST._IType _11218___mcc_h1158 = _source410.dtor_element;
            BigInteger _11219___mcc_h1159 = _source410.dtor_dims;
            {
              RAST._IType _11220_fromTpeGen;
              RAST._IType _out6068;
              _out6068 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11220_fromTpeGen = _out6068;
              RAST._IType _11221_toTpeGen;
              RAST._IType _out6069;
              _out6069 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11221_toTpeGen = _out6069;
              RAST._IExpr _11222_recursiveGen;
              DCOMPUTF16._IOwnership _11223_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11224_recIdents;
              RAST._IExpr _out6070;
              DCOMPUTF16._IOwnership _out6071;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6072;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6070, out _out6071, out _out6072);
              _11222_recursiveGen = _out6070;
              _11223_recOwned = _out6071;
              _11224_recIdents = _out6072;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11222_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11220_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11221_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6073;
              DCOMPUTF16._IOwnership _out6074;
              DCOMPUTF16.COMP.FromOwnership(r, _11223_recOwned, expectedOwnership, out _out6073, out _out6074);
              r = _out6073;
              resultingOwnership = _out6074;
              readIdents = _11224_recIdents;
            }
          } else if (_source410.is_Seq) {
            DAST._IType _11225___mcc_h1162 = _source410.dtor_element;
            {
              RAST._IType _11226_fromTpeGen;
              RAST._IType _out6075;
              _out6075 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11226_fromTpeGen = _out6075;
              RAST._IType _11227_toTpeGen;
              RAST._IType _out6076;
              _out6076 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11227_toTpeGen = _out6076;
              RAST._IExpr _11228_recursiveGen;
              DCOMPUTF16._IOwnership _11229_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11230_recIdents;
              RAST._IExpr _out6077;
              DCOMPUTF16._IOwnership _out6078;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6079;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6077, out _out6078, out _out6079);
              _11228_recursiveGen = _out6077;
              _11229_recOwned = _out6078;
              _11230_recIdents = _out6079;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11228_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11226_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11227_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6080;
              DCOMPUTF16._IOwnership _out6081;
              DCOMPUTF16.COMP.FromOwnership(r, _11229_recOwned, expectedOwnership, out _out6080, out _out6081);
              r = _out6080;
              resultingOwnership = _out6081;
              readIdents = _11230_recIdents;
            }
          } else if (_source410.is_Set) {
            DAST._IType _11231___mcc_h1164 = _source410.dtor_element;
            {
              RAST._IType _11232_fromTpeGen;
              RAST._IType _out6082;
              _out6082 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11232_fromTpeGen = _out6082;
              RAST._IType _11233_toTpeGen;
              RAST._IType _out6083;
              _out6083 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11233_toTpeGen = _out6083;
              RAST._IExpr _11234_recursiveGen;
              DCOMPUTF16._IOwnership _11235_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11236_recIdents;
              RAST._IExpr _out6084;
              DCOMPUTF16._IOwnership _out6085;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6086;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6084, out _out6085, out _out6086);
              _11234_recursiveGen = _out6084;
              _11235_recOwned = _out6085;
              _11236_recIdents = _out6086;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11234_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11232_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11233_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6087;
              DCOMPUTF16._IOwnership _out6088;
              DCOMPUTF16.COMP.FromOwnership(r, _11235_recOwned, expectedOwnership, out _out6087, out _out6088);
              r = _out6087;
              resultingOwnership = _out6088;
              readIdents = _11236_recIdents;
            }
          } else if (_source410.is_Multiset) {
            DAST._IType _11237___mcc_h1166 = _source410.dtor_element;
            {
              RAST._IType _11238_fromTpeGen;
              RAST._IType _out6089;
              _out6089 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11238_fromTpeGen = _out6089;
              RAST._IType _11239_toTpeGen;
              RAST._IType _out6090;
              _out6090 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11239_toTpeGen = _out6090;
              RAST._IExpr _11240_recursiveGen;
              DCOMPUTF16._IOwnership _11241_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11242_recIdents;
              RAST._IExpr _out6091;
              DCOMPUTF16._IOwnership _out6092;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6093;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6091, out _out6092, out _out6093);
              _11240_recursiveGen = _out6091;
              _11241_recOwned = _out6092;
              _11242_recIdents = _out6093;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11240_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11238_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11239_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6094;
              DCOMPUTF16._IOwnership _out6095;
              DCOMPUTF16.COMP.FromOwnership(r, _11241_recOwned, expectedOwnership, out _out6094, out _out6095);
              r = _out6094;
              resultingOwnership = _out6095;
              readIdents = _11242_recIdents;
            }
          } else if (_source410.is_Map) {
            DAST._IType _11243___mcc_h1168 = _source410.dtor_key;
            DAST._IType _11244___mcc_h1169 = _source410.dtor_value;
            {
              RAST._IType _11245_fromTpeGen;
              RAST._IType _out6096;
              _out6096 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11245_fromTpeGen = _out6096;
              RAST._IType _11246_toTpeGen;
              RAST._IType _out6097;
              _out6097 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11246_toTpeGen = _out6097;
              RAST._IExpr _11247_recursiveGen;
              DCOMPUTF16._IOwnership _11248_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11249_recIdents;
              RAST._IExpr _out6098;
              DCOMPUTF16._IOwnership _out6099;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6100;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6098, out _out6099, out _out6100);
              _11247_recursiveGen = _out6098;
              _11248_recOwned = _out6099;
              _11249_recIdents = _out6100;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11247_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11245_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11246_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6101;
              DCOMPUTF16._IOwnership _out6102;
              DCOMPUTF16.COMP.FromOwnership(r, _11248_recOwned, expectedOwnership, out _out6101, out _out6102);
              r = _out6101;
              resultingOwnership = _out6102;
              readIdents = _11249_recIdents;
            }
          } else if (_source410.is_SetBuilder) {
            DAST._IType _11250___mcc_h1172 = _source410.dtor_element;
            {
              RAST._IType _11251_fromTpeGen;
              RAST._IType _out6103;
              _out6103 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11251_fromTpeGen = _out6103;
              RAST._IType _11252_toTpeGen;
              RAST._IType _out6104;
              _out6104 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11252_toTpeGen = _out6104;
              RAST._IExpr _11253_recursiveGen;
              DCOMPUTF16._IOwnership _11254_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11255_recIdents;
              RAST._IExpr _out6105;
              DCOMPUTF16._IOwnership _out6106;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6107;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6105, out _out6106, out _out6107);
              _11253_recursiveGen = _out6105;
              _11254_recOwned = _out6106;
              _11255_recIdents = _out6107;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11253_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11251_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11252_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6108;
              DCOMPUTF16._IOwnership _out6109;
              DCOMPUTF16.COMP.FromOwnership(r, _11254_recOwned, expectedOwnership, out _out6108, out _out6109);
              r = _out6108;
              resultingOwnership = _out6109;
              readIdents = _11255_recIdents;
            }
          } else if (_source410.is_MapBuilder) {
            DAST._IType _11256___mcc_h1174 = _source410.dtor_key;
            DAST._IType _11257___mcc_h1175 = _source410.dtor_value;
            {
              RAST._IType _11258_fromTpeGen;
              RAST._IType _out6110;
              _out6110 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11258_fromTpeGen = _out6110;
              RAST._IType _11259_toTpeGen;
              RAST._IType _out6111;
              _out6111 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11259_toTpeGen = _out6111;
              RAST._IExpr _11260_recursiveGen;
              DCOMPUTF16._IOwnership _11261_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11262_recIdents;
              RAST._IExpr _out6112;
              DCOMPUTF16._IOwnership _out6113;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6114;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6112, out _out6113, out _out6114);
              _11260_recursiveGen = _out6112;
              _11261_recOwned = _out6113;
              _11262_recIdents = _out6114;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11260_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11258_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11259_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6115;
              DCOMPUTF16._IOwnership _out6116;
              DCOMPUTF16.COMP.FromOwnership(r, _11261_recOwned, expectedOwnership, out _out6115, out _out6116);
              r = _out6115;
              resultingOwnership = _out6116;
              readIdents = _11262_recIdents;
            }
          } else if (_source410.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11263___mcc_h1178 = _source410.dtor_args;
            DAST._IType _11264___mcc_h1179 = _source410.dtor_result;
            {
              RAST._IType _11265_fromTpeGen;
              RAST._IType _out6117;
              _out6117 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11265_fromTpeGen = _out6117;
              RAST._IType _11266_toTpeGen;
              RAST._IType _out6118;
              _out6118 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11266_toTpeGen = _out6118;
              RAST._IExpr _11267_recursiveGen;
              DCOMPUTF16._IOwnership _11268_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11269_recIdents;
              RAST._IExpr _out6119;
              DCOMPUTF16._IOwnership _out6120;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6121;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6119, out _out6120, out _out6121);
              _11267_recursiveGen = _out6119;
              _11268_recOwned = _out6120;
              _11269_recIdents = _out6121;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11267_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11265_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11266_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6122;
              DCOMPUTF16._IOwnership _out6123;
              DCOMPUTF16.COMP.FromOwnership(r, _11268_recOwned, expectedOwnership, out _out6122, out _out6123);
              r = _out6122;
              resultingOwnership = _out6123;
              readIdents = _11269_recIdents;
            }
          } else if (_source410.is_Primitive) {
            DAST._IPrimitive _11270___mcc_h1182 = _source410.dtor_Primitive_a0;
            DAST._IPrimitive _source415 = _11270___mcc_h1182;
            if (_source415.is_Int) {
              {
                RAST._IType _11271_rhsType;
                RAST._IType _out6124;
                _out6124 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11271_rhsType = _out6124;
                RAST._IExpr _11272_recursiveGen;
                DCOMPUTF16._IOwnership _11273___v96;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11274_recIdents;
                RAST._IExpr _out6125;
                DCOMPUTF16._IOwnership _out6126;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6127;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6125, out _out6126, out _out6127);
                _11272_recursiveGen = _out6125;
                _11273___v96 = _out6126;
                _11274_recIdents = _out6127;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_11272_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")}")));
                RAST._IExpr _out6128;
                DCOMPUTF16._IOwnership _out6129;
                DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6128, out _out6129);
                r = _out6128;
                resultingOwnership = _out6129;
                readIdents = _11274_recIdents;
              }
            } else if (_source415.is_Real) {
              {
                RAST._IType _11275_fromTpeGen;
                RAST._IType _out6130;
                _out6130 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11275_fromTpeGen = _out6130;
                RAST._IType _11276_toTpeGen;
                RAST._IType _out6131;
                _out6131 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11276_toTpeGen = _out6131;
                RAST._IExpr _11277_recursiveGen;
                DCOMPUTF16._IOwnership _11278_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11279_recIdents;
                RAST._IExpr _out6132;
                DCOMPUTF16._IOwnership _out6133;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6134;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6132, out _out6133, out _out6134);
                _11277_recursiveGen = _out6132;
                _11278_recOwned = _out6133;
                _11279_recIdents = _out6134;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11277_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11275_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11276_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6135;
                DCOMPUTF16._IOwnership _out6136;
                DCOMPUTF16.COMP.FromOwnership(r, _11278_recOwned, expectedOwnership, out _out6135, out _out6136);
                r = _out6135;
                resultingOwnership = _out6136;
                readIdents = _11279_recIdents;
              }
            } else if (_source415.is_String) {
              {
                RAST._IType _11280_fromTpeGen;
                RAST._IType _out6137;
                _out6137 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11280_fromTpeGen = _out6137;
                RAST._IType _11281_toTpeGen;
                RAST._IType _out6138;
                _out6138 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11281_toTpeGen = _out6138;
                RAST._IExpr _11282_recursiveGen;
                DCOMPUTF16._IOwnership _11283_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11284_recIdents;
                RAST._IExpr _out6139;
                DCOMPUTF16._IOwnership _out6140;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6141;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6139, out _out6140, out _out6141);
                _11282_recursiveGen = _out6139;
                _11283_recOwned = _out6140;
                _11284_recIdents = _out6141;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11282_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11280_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11281_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6142;
                DCOMPUTF16._IOwnership _out6143;
                DCOMPUTF16.COMP.FromOwnership(r, _11283_recOwned, expectedOwnership, out _out6142, out _out6143);
                r = _out6142;
                resultingOwnership = _out6143;
                readIdents = _11284_recIdents;
              }
            } else if (_source415.is_Bool) {
              {
                RAST._IType _11285_fromTpeGen;
                RAST._IType _out6144;
                _out6144 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11285_fromTpeGen = _out6144;
                RAST._IType _11286_toTpeGen;
                RAST._IType _out6145;
                _out6145 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11286_toTpeGen = _out6145;
                RAST._IExpr _11287_recursiveGen;
                DCOMPUTF16._IOwnership _11288_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11289_recIdents;
                RAST._IExpr _out6146;
                DCOMPUTF16._IOwnership _out6147;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6148;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6146, out _out6147, out _out6148);
                _11287_recursiveGen = _out6146;
                _11288_recOwned = _out6147;
                _11289_recIdents = _out6148;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11287_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11285_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11286_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6149;
                DCOMPUTF16._IOwnership _out6150;
                DCOMPUTF16.COMP.FromOwnership(r, _11288_recOwned, expectedOwnership, out _out6149, out _out6150);
                r = _out6149;
                resultingOwnership = _out6150;
                readIdents = _11289_recIdents;
              }
            } else {
              {
                RAST._IType _11290_fromTpeGen;
                RAST._IType _out6151;
                _out6151 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11290_fromTpeGen = _out6151;
                RAST._IType _11291_toTpeGen;
                RAST._IType _out6152;
                _out6152 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11291_toTpeGen = _out6152;
                RAST._IExpr _11292_recursiveGen;
                DCOMPUTF16._IOwnership _11293_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11294_recIdents;
                RAST._IExpr _out6153;
                DCOMPUTF16._IOwnership _out6154;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6155;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6153, out _out6154, out _out6155);
                _11292_recursiveGen = _out6153;
                _11293_recOwned = _out6154;
                _11294_recIdents = _out6155;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11292_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11290_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11291_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6156;
                DCOMPUTF16._IOwnership _out6157;
                DCOMPUTF16.COMP.FromOwnership(r, _11293_recOwned, expectedOwnership, out _out6156, out _out6157);
                r = _out6156;
                resultingOwnership = _out6157;
                readIdents = _11294_recIdents;
              }
            }
          } else if (_source410.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11295___mcc_h1184 = _source410.dtor_Passthrough_a0;
            {
              RAST._IExpr _11296_recursiveGen;
              DCOMPUTF16._IOwnership _11297___v101;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11298_recIdents;
              RAST._IExpr _out6158;
              DCOMPUTF16._IOwnership _out6159;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6160;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6158, out _out6159, out _out6160);
              _11296_recursiveGen = _out6158;
              _11297___v101 = _out6159;
              _11298_recIdents = _out6160;
              RAST._IType _11299_toTpeGen;
              RAST._IType _out6161;
              _out6161 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11299_toTpeGen = _out6161;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_11296_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_11299_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out6162;
              DCOMPUTF16._IOwnership _out6163;
              DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6162, out _out6163);
              r = _out6162;
              resultingOwnership = _out6163;
              readIdents = _11298_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11300___mcc_h1186 = _source410.dtor_TypeArg_a0;
            {
              RAST._IType _11301_fromTpeGen;
              RAST._IType _out6164;
              _out6164 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11301_fromTpeGen = _out6164;
              RAST._IType _11302_toTpeGen;
              RAST._IType _out6165;
              _out6165 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11302_toTpeGen = _out6165;
              RAST._IExpr _11303_recursiveGen;
              DCOMPUTF16._IOwnership _11304_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11305_recIdents;
              RAST._IExpr _out6166;
              DCOMPUTF16._IOwnership _out6167;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6168;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6166, out _out6167, out _out6168);
              _11303_recursiveGen = _out6166;
              _11304_recOwned = _out6167;
              _11305_recIdents = _out6168;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11303_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11301_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11302_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6169;
              DCOMPUTF16._IOwnership _out6170;
              DCOMPUTF16.COMP.FromOwnership(r, _11304_recOwned, expectedOwnership, out _out6169, out _out6170);
              r = _out6169;
              resultingOwnership = _out6170;
              readIdents = _11305_recIdents;
            }
          }
        } else {
          Dafny.ISequence<Dafny.Rune> _11306___mcc_h1188 = _source303.dtor_TypeArg_a0;
          DAST._IType _source416 = _8325___mcc_h1;
          if (_source416.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11307___mcc_h1192 = _source416.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11308___mcc_h1193 = _source416.dtor_typeArgs;
            DAST._IResolvedType _11309___mcc_h1194 = _source416.dtor_resolved;
            DAST._IResolvedType _source417 = _11309___mcc_h1194;
            if (_source417.is_Datatype) {
              DAST._IDatatypeType _11310___mcc_h1198 = _source417.dtor_datatypeType;
              {
                RAST._IType _11311_fromTpeGen;
                RAST._IType _out6171;
                _out6171 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11311_fromTpeGen = _out6171;
                RAST._IType _11312_toTpeGen;
                RAST._IType _out6172;
                _out6172 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11312_toTpeGen = _out6172;
                RAST._IExpr _11313_recursiveGen;
                DCOMPUTF16._IOwnership _11314_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11315_recIdents;
                RAST._IExpr _out6173;
                DCOMPUTF16._IOwnership _out6174;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6175;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6173, out _out6174, out _out6175);
                _11313_recursiveGen = _out6173;
                _11314_recOwned = _out6174;
                _11315_recIdents = _out6175;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11313_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11311_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11312_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6176;
                DCOMPUTF16._IOwnership _out6177;
                DCOMPUTF16.COMP.FromOwnership(r, _11314_recOwned, expectedOwnership, out _out6176, out _out6177);
                r = _out6176;
                resultingOwnership = _out6177;
                readIdents = _11315_recIdents;
              }
            } else if (_source417.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11316___mcc_h1200 = _source417.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11317___mcc_h1201 = _source417.dtor_attributes;
              {
                RAST._IType _11318_fromTpeGen;
                RAST._IType _out6178;
                _out6178 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
                _11318_fromTpeGen = _out6178;
                RAST._IType _11319_toTpeGen;
                RAST._IType _out6179;
                _out6179 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                _11319_toTpeGen = _out6179;
                RAST._IExpr _11320_recursiveGen;
                DCOMPUTF16._IOwnership _11321_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11322_recIdents;
                RAST._IExpr _out6180;
                DCOMPUTF16._IOwnership _out6181;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6182;
                DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6180, out _out6181, out _out6182);
                _11320_recursiveGen = _out6180;
                _11321_recOwned = _out6181;
                _11322_recIdents = _out6182;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11320_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11318_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11319_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6183;
                DCOMPUTF16._IOwnership _out6184;
                DCOMPUTF16.COMP.FromOwnership(r, _11321_recOwned, expectedOwnership, out _out6183, out _out6184);
                r = _out6183;
                resultingOwnership = _out6184;
                readIdents = _11322_recIdents;
              }
            } else {
              DAST._IType _11323___mcc_h1204 = _source417.dtor_baseType;
              DAST._INewtypeRange _11324___mcc_h1205 = _source417.dtor_range;
              bool _11325___mcc_h1206 = _source417.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11326___mcc_h1207 = _source417.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11327_attributes = _11326___mcc_h1207;
              bool _11328_erase = _11325___mcc_h1206;
              DAST._INewtypeRange _11329_range = _11324___mcc_h1205;
              DAST._IType _11330_b = _11323___mcc_h1204;
              {
                Std.Wrappers._IOption<RAST._IType> _11331_nativeToType;
                _11331_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11330_b, _11329_range);
                if (object.Equals(_8319_fromTpe, _11330_b)) {
                  RAST._IExpr _11332_recursiveGen;
                  DCOMPUTF16._IOwnership _11333_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11334_recIdents;
                  RAST._IExpr _out6185;
                  DCOMPUTF16._IOwnership _out6186;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6187;
                  DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6185, out _out6186, out _out6187);
                  _11332_recursiveGen = _out6185;
                  _11333_recOwned = _out6186;
                  _11334_recIdents = _out6187;
                  readIdents = _11334_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source418 = _11331_nativeToType;
                  if (_source418.is_None) {
                    if (_11328_erase) {
                      r = _11332_recursiveGen;
                    } else {
                      RAST._IType _11335_rhsType;
                      RAST._IType _out6188;
                      _out6188 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
                      _11335_rhsType = _out6188;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11335_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11332_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out6189;
                    DCOMPUTF16._IOwnership _out6190;
                    DCOMPUTF16.COMP.FromOwnership(r, _11333_recOwned, expectedOwnership, out _out6189, out _out6190);
                    r = _out6189;
                    resultingOwnership = _out6190;
                  } else {
                    RAST._IType _11336___mcc_h2250 = _source418.dtor_value;
                    RAST._IType _11337_v = _11336___mcc_h2250;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11332_recursiveGen, RAST.Expr.create_ExprFromType(_11337_v)));
                    RAST._IExpr _out6191;
                    DCOMPUTF16._IOwnership _out6192;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6191, out _out6192);
                    r = _out6191;
                    resultingOwnership = _out6192;
                  }
                } else {
                  if ((_11331_nativeToType).is_Some) {
                    DAST._IType _source419 = _8319_fromTpe;
                    if (_source419.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11338___mcc_h2251 = _source419.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11339___mcc_h2252 = _source419.dtor_typeArgs;
                      DAST._IResolvedType _11340___mcc_h2253 = _source419.dtor_resolved;
                      DAST._IResolvedType _source420 = _11340___mcc_h2253;
                      if (_source420.is_Datatype) {
                        DAST._IDatatypeType _11341___mcc_h2257 = _source420.dtor_datatypeType;
                      } else if (_source420.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11342___mcc_h2259 = _source420.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11343___mcc_h2260 = _source420.dtor_attributes;
                      } else {
                        DAST._IType _11344___mcc_h2263 = _source420.dtor_baseType;
                        DAST._INewtypeRange _11345___mcc_h2264 = _source420.dtor_range;
                        bool _11346___mcc_h2265 = _source420.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11347___mcc_h2266 = _source420.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11348_attributes0 = _11347___mcc_h2266;
                        bool _11349_erase0 = _11346___mcc_h2265;
                        DAST._INewtypeRange _11350_range0 = _11345___mcc_h2264;
                        DAST._IType _11351_b0 = _11344___mcc_h2263;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11352_nativeFromType;
                          _11352_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11351_b0, _11350_range0);
                          if ((_11352_nativeFromType).is_Some) {
                            RAST._IExpr _11353_recursiveGen;
                            DCOMPUTF16._IOwnership _11354_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11355_recIdents;
                            RAST._IExpr _out6193;
                            DCOMPUTF16._IOwnership _out6194;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6195;
                            DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6193, out _out6194, out _out6195);
                            _11353_recursiveGen = _out6193;
                            _11354_recOwned = _out6194;
                            _11355_recIdents = _out6195;
                            RAST._IExpr _out6196;
                            DCOMPUTF16._IOwnership _out6197;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11353_recursiveGen, (_11331_nativeToType).dtor_value), _11354_recOwned, expectedOwnership, out _out6196, out _out6197);
                            r = _out6196;
                            resultingOwnership = _out6197;
                            readIdents = _11355_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source419.is_Nullable) {
                      DAST._IType _11356___mcc_h2271 = _source419.dtor_Nullable_a0;
                    } else if (_source419.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11357___mcc_h2273 = _source419.dtor_Tuple_a0;
                    } else if (_source419.is_Array) {
                      DAST._IType _11358___mcc_h2275 = _source419.dtor_element;
                      BigInteger _11359___mcc_h2276 = _source419.dtor_dims;
                    } else if (_source419.is_Seq) {
                      DAST._IType _11360___mcc_h2279 = _source419.dtor_element;
                    } else if (_source419.is_Set) {
                      DAST._IType _11361___mcc_h2281 = _source419.dtor_element;
                    } else if (_source419.is_Multiset) {
                      DAST._IType _11362___mcc_h2283 = _source419.dtor_element;
                    } else if (_source419.is_Map) {
                      DAST._IType _11363___mcc_h2285 = _source419.dtor_key;
                      DAST._IType _11364___mcc_h2286 = _source419.dtor_value;
                    } else if (_source419.is_SetBuilder) {
                      DAST._IType _11365___mcc_h2289 = _source419.dtor_element;
                    } else if (_source419.is_MapBuilder) {
                      DAST._IType _11366___mcc_h2291 = _source419.dtor_key;
                      DAST._IType _11367___mcc_h2292 = _source419.dtor_value;
                    } else if (_source419.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11368___mcc_h2295 = _source419.dtor_args;
                      DAST._IType _11369___mcc_h2296 = _source419.dtor_result;
                    } else if (_source419.is_Primitive) {
                      DAST._IPrimitive _11370___mcc_h2299 = _source419.dtor_Primitive_a0;
                    } else if (_source419.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11371___mcc_h2301 = _source419.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11372___mcc_h2303 = _source419.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8319_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11373_recursiveGen;
                      DCOMPUTF16._IOwnership _11374_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11375_recIdents;
                      RAST._IExpr _out6198;
                      DCOMPUTF16._IOwnership _out6199;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6200;
                      DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6198, out _out6199, out _out6200);
                      _11373_recursiveGen = _out6198;
                      _11374_recOwned = _out6199;
                      _11375_recIdents = _out6200;
                      RAST._IExpr _out6201;
                      DCOMPUTF16._IOwnership _out6202;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11373_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11331_nativeToType).dtor_value), _11374_recOwned, expectedOwnership, out _out6201, out _out6202);
                      r = _out6201;
                      resultingOwnership = _out6202;
                      readIdents = _11375_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out6203;
                  DCOMPUTF16._IOwnership _out6204;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6205;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8318_expr, _8319_fromTpe, _11330_b), _11330_b, _8320_toTpe), selfIdent, env, expectedOwnership, out _out6203, out _out6204, out _out6205);
                  r = _out6203;
                  resultingOwnership = _out6204;
                  readIdents = _out6205;
                }
              }
            }
          } else if (_source416.is_Nullable) {
            DAST._IType _11376___mcc_h1212 = _source416.dtor_Nullable_a0;
            {
              RAST._IExpr _11377_recursiveGen;
              DCOMPUTF16._IOwnership _11378_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11379_recIdents;
              RAST._IExpr _out6206;
              DCOMPUTF16._IOwnership _out6207;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6208;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6206, out _out6207, out _out6208);
              _11377_recursiveGen = _out6206;
              _11378_recOwned = _out6207;
              _11379_recIdents = _out6208;
              r = _11377_recursiveGen;
              if (object.Equals(_11378_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out6209;
              DCOMPUTF16._IOwnership _out6210;
              DCOMPUTF16.COMP.FromOwnership(r, _11378_recOwned, expectedOwnership, out _out6209, out _out6210);
              r = _out6209;
              resultingOwnership = _out6210;
              readIdents = _11379_recIdents;
            }
          } else if (_source416.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11380___mcc_h1214 = _source416.dtor_Tuple_a0;
            {
              RAST._IType _11381_fromTpeGen;
              RAST._IType _out6211;
              _out6211 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11381_fromTpeGen = _out6211;
              RAST._IType _11382_toTpeGen;
              RAST._IType _out6212;
              _out6212 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11382_toTpeGen = _out6212;
              RAST._IExpr _11383_recursiveGen;
              DCOMPUTF16._IOwnership _11384_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11385_recIdents;
              RAST._IExpr _out6213;
              DCOMPUTF16._IOwnership _out6214;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6215;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6213, out _out6214, out _out6215);
              _11383_recursiveGen = _out6213;
              _11384_recOwned = _out6214;
              _11385_recIdents = _out6215;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11383_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11381_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11382_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6216;
              DCOMPUTF16._IOwnership _out6217;
              DCOMPUTF16.COMP.FromOwnership(r, _11384_recOwned, expectedOwnership, out _out6216, out _out6217);
              r = _out6216;
              resultingOwnership = _out6217;
              readIdents = _11385_recIdents;
            }
          } else if (_source416.is_Array) {
            DAST._IType _11386___mcc_h1216 = _source416.dtor_element;
            BigInteger _11387___mcc_h1217 = _source416.dtor_dims;
            {
              RAST._IType _11388_fromTpeGen;
              RAST._IType _out6218;
              _out6218 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11388_fromTpeGen = _out6218;
              RAST._IType _11389_toTpeGen;
              RAST._IType _out6219;
              _out6219 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11389_toTpeGen = _out6219;
              RAST._IExpr _11390_recursiveGen;
              DCOMPUTF16._IOwnership _11391_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11392_recIdents;
              RAST._IExpr _out6220;
              DCOMPUTF16._IOwnership _out6221;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6222;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6220, out _out6221, out _out6222);
              _11390_recursiveGen = _out6220;
              _11391_recOwned = _out6221;
              _11392_recIdents = _out6222;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11390_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11388_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11389_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6223;
              DCOMPUTF16._IOwnership _out6224;
              DCOMPUTF16.COMP.FromOwnership(r, _11391_recOwned, expectedOwnership, out _out6223, out _out6224);
              r = _out6223;
              resultingOwnership = _out6224;
              readIdents = _11392_recIdents;
            }
          } else if (_source416.is_Seq) {
            DAST._IType _11393___mcc_h1220 = _source416.dtor_element;
            {
              RAST._IType _11394_fromTpeGen;
              RAST._IType _out6225;
              _out6225 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11394_fromTpeGen = _out6225;
              RAST._IType _11395_toTpeGen;
              RAST._IType _out6226;
              _out6226 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11395_toTpeGen = _out6226;
              RAST._IExpr _11396_recursiveGen;
              DCOMPUTF16._IOwnership _11397_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11398_recIdents;
              RAST._IExpr _out6227;
              DCOMPUTF16._IOwnership _out6228;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6229;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6227, out _out6228, out _out6229);
              _11396_recursiveGen = _out6227;
              _11397_recOwned = _out6228;
              _11398_recIdents = _out6229;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11396_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11394_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11395_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6230;
              DCOMPUTF16._IOwnership _out6231;
              DCOMPUTF16.COMP.FromOwnership(r, _11397_recOwned, expectedOwnership, out _out6230, out _out6231);
              r = _out6230;
              resultingOwnership = _out6231;
              readIdents = _11398_recIdents;
            }
          } else if (_source416.is_Set) {
            DAST._IType _11399___mcc_h1222 = _source416.dtor_element;
            {
              RAST._IType _11400_fromTpeGen;
              RAST._IType _out6232;
              _out6232 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11400_fromTpeGen = _out6232;
              RAST._IType _11401_toTpeGen;
              RAST._IType _out6233;
              _out6233 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11401_toTpeGen = _out6233;
              RAST._IExpr _11402_recursiveGen;
              DCOMPUTF16._IOwnership _11403_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11404_recIdents;
              RAST._IExpr _out6234;
              DCOMPUTF16._IOwnership _out6235;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6236;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6234, out _out6235, out _out6236);
              _11402_recursiveGen = _out6234;
              _11403_recOwned = _out6235;
              _11404_recIdents = _out6236;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11402_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11400_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11401_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6237;
              DCOMPUTF16._IOwnership _out6238;
              DCOMPUTF16.COMP.FromOwnership(r, _11403_recOwned, expectedOwnership, out _out6237, out _out6238);
              r = _out6237;
              resultingOwnership = _out6238;
              readIdents = _11404_recIdents;
            }
          } else if (_source416.is_Multiset) {
            DAST._IType _11405___mcc_h1224 = _source416.dtor_element;
            {
              RAST._IType _11406_fromTpeGen;
              RAST._IType _out6239;
              _out6239 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11406_fromTpeGen = _out6239;
              RAST._IType _11407_toTpeGen;
              RAST._IType _out6240;
              _out6240 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11407_toTpeGen = _out6240;
              RAST._IExpr _11408_recursiveGen;
              DCOMPUTF16._IOwnership _11409_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11410_recIdents;
              RAST._IExpr _out6241;
              DCOMPUTF16._IOwnership _out6242;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6243;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6241, out _out6242, out _out6243);
              _11408_recursiveGen = _out6241;
              _11409_recOwned = _out6242;
              _11410_recIdents = _out6243;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11408_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11406_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11407_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6244;
              DCOMPUTF16._IOwnership _out6245;
              DCOMPUTF16.COMP.FromOwnership(r, _11409_recOwned, expectedOwnership, out _out6244, out _out6245);
              r = _out6244;
              resultingOwnership = _out6245;
              readIdents = _11410_recIdents;
            }
          } else if (_source416.is_Map) {
            DAST._IType _11411___mcc_h1226 = _source416.dtor_key;
            DAST._IType _11412___mcc_h1227 = _source416.dtor_value;
            {
              RAST._IType _11413_fromTpeGen;
              RAST._IType _out6246;
              _out6246 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11413_fromTpeGen = _out6246;
              RAST._IType _11414_toTpeGen;
              RAST._IType _out6247;
              _out6247 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11414_toTpeGen = _out6247;
              RAST._IExpr _11415_recursiveGen;
              DCOMPUTF16._IOwnership _11416_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11417_recIdents;
              RAST._IExpr _out6248;
              DCOMPUTF16._IOwnership _out6249;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6250;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6248, out _out6249, out _out6250);
              _11415_recursiveGen = _out6248;
              _11416_recOwned = _out6249;
              _11417_recIdents = _out6250;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11415_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11413_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11414_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6251;
              DCOMPUTF16._IOwnership _out6252;
              DCOMPUTF16.COMP.FromOwnership(r, _11416_recOwned, expectedOwnership, out _out6251, out _out6252);
              r = _out6251;
              resultingOwnership = _out6252;
              readIdents = _11417_recIdents;
            }
          } else if (_source416.is_SetBuilder) {
            DAST._IType _11418___mcc_h1230 = _source416.dtor_element;
            {
              RAST._IType _11419_fromTpeGen;
              RAST._IType _out6253;
              _out6253 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11419_fromTpeGen = _out6253;
              RAST._IType _11420_toTpeGen;
              RAST._IType _out6254;
              _out6254 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11420_toTpeGen = _out6254;
              RAST._IExpr _11421_recursiveGen;
              DCOMPUTF16._IOwnership _11422_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11423_recIdents;
              RAST._IExpr _out6255;
              DCOMPUTF16._IOwnership _out6256;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6257;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6255, out _out6256, out _out6257);
              _11421_recursiveGen = _out6255;
              _11422_recOwned = _out6256;
              _11423_recIdents = _out6257;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11421_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11419_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11420_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6258;
              DCOMPUTF16._IOwnership _out6259;
              DCOMPUTF16.COMP.FromOwnership(r, _11422_recOwned, expectedOwnership, out _out6258, out _out6259);
              r = _out6258;
              resultingOwnership = _out6259;
              readIdents = _11423_recIdents;
            }
          } else if (_source416.is_MapBuilder) {
            DAST._IType _11424___mcc_h1232 = _source416.dtor_key;
            DAST._IType _11425___mcc_h1233 = _source416.dtor_value;
            {
              RAST._IType _11426_fromTpeGen;
              RAST._IType _out6260;
              _out6260 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11426_fromTpeGen = _out6260;
              RAST._IType _11427_toTpeGen;
              RAST._IType _out6261;
              _out6261 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11427_toTpeGen = _out6261;
              RAST._IExpr _11428_recursiveGen;
              DCOMPUTF16._IOwnership _11429_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11430_recIdents;
              RAST._IExpr _out6262;
              DCOMPUTF16._IOwnership _out6263;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6264;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6262, out _out6263, out _out6264);
              _11428_recursiveGen = _out6262;
              _11429_recOwned = _out6263;
              _11430_recIdents = _out6264;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11428_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11426_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11427_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6265;
              DCOMPUTF16._IOwnership _out6266;
              DCOMPUTF16.COMP.FromOwnership(r, _11429_recOwned, expectedOwnership, out _out6265, out _out6266);
              r = _out6265;
              resultingOwnership = _out6266;
              readIdents = _11430_recIdents;
            }
          } else if (_source416.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11431___mcc_h1236 = _source416.dtor_args;
            DAST._IType _11432___mcc_h1237 = _source416.dtor_result;
            {
              RAST._IType _11433_fromTpeGen;
              RAST._IType _out6267;
              _out6267 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11433_fromTpeGen = _out6267;
              RAST._IType _11434_toTpeGen;
              RAST._IType _out6268;
              _out6268 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11434_toTpeGen = _out6268;
              RAST._IExpr _11435_recursiveGen;
              DCOMPUTF16._IOwnership _11436_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11437_recIdents;
              RAST._IExpr _out6269;
              DCOMPUTF16._IOwnership _out6270;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6271;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6269, out _out6270, out _out6271);
              _11435_recursiveGen = _out6269;
              _11436_recOwned = _out6270;
              _11437_recIdents = _out6271;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11435_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11433_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11434_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6272;
              DCOMPUTF16._IOwnership _out6273;
              DCOMPUTF16.COMP.FromOwnership(r, _11436_recOwned, expectedOwnership, out _out6272, out _out6273);
              r = _out6272;
              resultingOwnership = _out6273;
              readIdents = _11437_recIdents;
            }
          } else if (_source416.is_Primitive) {
            DAST._IPrimitive _11438___mcc_h1240 = _source416.dtor_Primitive_a0;
            {
              RAST._IType _11439_fromTpeGen;
              RAST._IType _out6274;
              _out6274 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11439_fromTpeGen = _out6274;
              RAST._IType _11440_toTpeGen;
              RAST._IType _out6275;
              _out6275 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11440_toTpeGen = _out6275;
              RAST._IExpr _11441_recursiveGen;
              DCOMPUTF16._IOwnership _11442_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11443_recIdents;
              RAST._IExpr _out6276;
              DCOMPUTF16._IOwnership _out6277;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6278;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6276, out _out6277, out _out6278);
              _11441_recursiveGen = _out6276;
              _11442_recOwned = _out6277;
              _11443_recIdents = _out6278;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11441_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11439_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11440_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6279;
              DCOMPUTF16._IOwnership _out6280;
              DCOMPUTF16.COMP.FromOwnership(r, _11442_recOwned, expectedOwnership, out _out6279, out _out6280);
              r = _out6279;
              resultingOwnership = _out6280;
              readIdents = _11443_recIdents;
            }
          } else if (_source416.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11444___mcc_h1242 = _source416.dtor_Passthrough_a0;
            {
              RAST._IType _11445_fromTpeGen;
              RAST._IType _out6281;
              _out6281 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11445_fromTpeGen = _out6281;
              RAST._IType _11446_toTpeGen;
              RAST._IType _out6282;
              _out6282 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11446_toTpeGen = _out6282;
              RAST._IExpr _11447_recursiveGen;
              DCOMPUTF16._IOwnership _11448_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11449_recIdents;
              RAST._IExpr _out6283;
              DCOMPUTF16._IOwnership _out6284;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6285;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6283, out _out6284, out _out6285);
              _11447_recursiveGen = _out6283;
              _11448_recOwned = _out6284;
              _11449_recIdents = _out6285;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11447_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11445_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11446_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6286;
              DCOMPUTF16._IOwnership _out6287;
              DCOMPUTF16.COMP.FromOwnership(r, _11448_recOwned, expectedOwnership, out _out6286, out _out6287);
              r = _out6286;
              resultingOwnership = _out6287;
              readIdents = _11449_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11450___mcc_h1244 = _source416.dtor_TypeArg_a0;
            {
              RAST._IType _11451_fromTpeGen;
              RAST._IType _out6288;
              _out6288 = DCOMPUTF16.COMP.GenType(_8319_fromTpe, true, false);
              _11451_fromTpeGen = _out6288;
              RAST._IType _11452_toTpeGen;
              RAST._IType _out6289;
              _out6289 = DCOMPUTF16.COMP.GenType(_8320_toTpe, true, false);
              _11452_toTpeGen = _out6289;
              RAST._IExpr _11453_recursiveGen;
              DCOMPUTF16._IOwnership _11454_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11455_recIdents;
              RAST._IExpr _out6290;
              DCOMPUTF16._IOwnership _out6291;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6292;
              DCOMPUTF16.COMP.GenExpr(_8318_expr, selfIdent, env, expectedOwnership, out _out6290, out _out6291, out _out6292);
              _11453_recursiveGen = _out6290;
              _11454_recOwned = _out6291;
              _11455_recIdents = _out6292;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11453_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11451_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11452_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6293;
              DCOMPUTF16._IOwnership _out6294;
              DCOMPUTF16.COMP.FromOwnership(r, _11454_recOwned, expectedOwnership, out _out6293, out _out6294);
              r = _out6293;
              resultingOwnership = _out6294;
              readIdents = _11455_recIdents;
            }
          }
        }
      }
      return ;
    }
    public static void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source421 = e;
      if (_source421.is_Literal) {
        DAST._ILiteral _11456___mcc_h0 = _source421.dtor_Literal_a0;
        RAST._IExpr _out6295;
        DCOMPUTF16._IOwnership _out6296;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6297;
        DCOMPUTF16.COMP.GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out6295, out _out6296, out _out6297);
        r = _out6295;
        resultingOwnership = _out6296;
        readIdents = _out6297;
      } else if (_source421.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _11457___mcc_h1 = _source421.dtor_Ident_a0;
        Dafny.ISequence<Dafny.Rune> _11458_name = _11457___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _11459_rName;
          _11459_rName = DCOMPUTF16.__default.escapeIdent(_11458_name);
          r = RAST.Expr.create_Identifier(_11459_rName);
          Std.Wrappers._IOption<RAST._IType> _11460_tpe;
          _11460_tpe = (env).GetType(_11459_rName);
          Std.Wrappers._IOption<RAST._IType> _11461_placeboOpt;
          _11461_placeboOpt = (((_11460_tpe).is_Some) ? (((_11460_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
          bool _11462_currentlyBorrowed;
          _11462_currentlyBorrowed = (env).IsBorrowed(_11458_name);
          bool _11463_noNeedOfClone;
          _11463_noNeedOfClone = (env).HasCopySemantics(_11458_name);
          if ((_11461_placeboOpt).is_Some) {
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            _11462_currentlyBorrowed = false;
            _11463_noNeedOfClone = true;
          }
          if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed())) {
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut())) {
            r = RAST.__default.BorrowMut(r);
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
          } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
            if (!(_11463_noNeedOfClone)) {
              r = RAST.__default.Clone(r);
            }
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          } else if (_11462_currentlyBorrowed) {
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          } else {
            r = RAST.__default.Borrow(r);
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_11458_name);
          return ;
        }
      } else if (_source421.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11464___mcc_h2 = _source421.dtor_Companion_a0;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11465_path = _11464___mcc_h2;
        {
          RAST._IExpr _out6298;
          _out6298 = DCOMPUTF16.COMP.GenPathExpr(_11465_path);
          r = _out6298;
          RAST._IExpr _out6299;
          DCOMPUTF16._IOwnership _out6300;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6299, out _out6300);
          r = _out6299;
          resultingOwnership = _out6300;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source421.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _11466___mcc_h3 = _source421.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IExpression> _11467_values = _11466___mcc_h3;
        {
          Dafny.ISequence<Dafny.Rune> _11468_s;
          _11468_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(");
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _11469_i;
          _11469_i = BigInteger.Zero;
          while ((_11469_i) < (new BigInteger((_11467_values).Count))) {
            if ((_11469_i).Sign == 1) {
              _11468_s = Dafny.Sequence<Dafny.Rune>.Concat(_11468_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
            }
            RAST._IExpr _11470_recursiveGen;
            DCOMPUTF16._IOwnership _11471___v104;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11472_recIdents;
            RAST._IExpr _out6301;
            DCOMPUTF16._IOwnership _out6302;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6303;
            DCOMPUTF16.COMP.GenExpr((_11467_values).Select(_11469_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6301, out _out6302, out _out6303);
            _11470_recursiveGen = _out6301;
            _11471___v104 = _out6302;
            _11472_recIdents = _out6303;
            _11468_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_11468_s, (_11470_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11472_recIdents);
            _11469_i = (_11469_i) + (BigInteger.One);
          }
          _11468_s = Dafny.Sequence<Dafny.Rune>.Concat(_11468_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          r = RAST.Expr.create_RawExpr(_11468_s);
          RAST._IExpr _out6304;
          DCOMPUTF16._IOwnership _out6305;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6304, out _out6305);
          r = _out6304;
          resultingOwnership = _out6305;
          return ;
        }
      } else if (_source421.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11473___mcc_h4 = _source421.dtor_path;
        Dafny.ISequence<DAST._IType> _11474___mcc_h5 = _source421.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _11475___mcc_h6 = _source421.dtor_args;
        Dafny.ISequence<DAST._IExpression> _11476_args = _11475___mcc_h6;
        Dafny.ISequence<DAST._IType> _11477_typeArgs = _11474___mcc_h5;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11478_path = _11473___mcc_h4;
        {
          RAST._IExpr _out6306;
          _out6306 = DCOMPUTF16.COMP.GenPathExpr(_11478_path);
          r = _out6306;
          if ((new BigInteger((_11477_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _11479_typeExprs;
            _11479_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi28 = new BigInteger((_11477_typeArgs).Count);
            for (BigInteger _11480_i = BigInteger.Zero; _11480_i < _hi28; _11480_i++) {
              RAST._IType _11481_typeExpr;
              RAST._IType _out6307;
              _out6307 = DCOMPUTF16.COMP.GenType((_11477_typeArgs).Select(_11480_i), false, false);
              _11481_typeExpr = _out6307;
              _11479_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_11479_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_11481_typeExpr));
            }
            r = (r).ApplyType(_11479_typeExprs);
          }
          r = (r).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _11482_arguments;
          _11482_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi29 = new BigInteger((_11476_args).Count);
          for (BigInteger _11483_i = BigInteger.Zero; _11483_i < _hi29; _11483_i++) {
            RAST._IExpr _11484_recursiveGen;
            DCOMPUTF16._IOwnership _11485___v105;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11486_recIdents;
            RAST._IExpr _out6308;
            DCOMPUTF16._IOwnership _out6309;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6310;
            DCOMPUTF16.COMP.GenExpr((_11476_args).Select(_11483_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6308, out _out6309, out _out6310);
            _11484_recursiveGen = _out6308;
            _11485___v105 = _out6309;
            _11486_recIdents = _out6310;
            _11482_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_11482_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_11484_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11486_recIdents);
          }
          r = (r).Apply(_11482_arguments);
          r = RAST.__default.RcNew(r);
          RAST._IExpr _out6311;
          DCOMPUTF16._IOwnership _out6312;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6311, out _out6312);
          r = _out6311;
          resultingOwnership = _out6312;
          return ;
        }
      } else if (_source421.is_NewArray) {
        Dafny.ISequence<DAST._IExpression> _11487___mcc_h7 = _source421.dtor_dims;
        DAST._IType _11488___mcc_h8 = _source421.dtor_typ;
        DAST._IType _11489_typ = _11488___mcc_h8;
        Dafny.ISequence<DAST._IExpression> _11490_dims = _11487___mcc_h7;
        {
          BigInteger _11491_i;
          _11491_i = (new BigInteger((_11490_dims).Count)) - (BigInteger.One);
          RAST._IType _11492_genTyp;
          RAST._IType _out6313;
          _out6313 = DCOMPUTF16.COMP.GenType(_11489_typ, false, false);
          _11492_genTyp = _out6313;
          Dafny.ISequence<Dafny.Rune> _11493_s;
          _11493_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_11492_genTyp)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::std::default::Default>::default()"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          while ((_11491_i).Sign != -1) {
            RAST._IExpr _11494_recursiveGen;
            DCOMPUTF16._IOwnership _11495___v106;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11496_recIdents;
            RAST._IExpr _out6314;
            DCOMPUTF16._IOwnership _out6315;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6316;
            DCOMPUTF16.COMP.GenExpr((_11490_dims).Select(_11491_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6314, out _out6315, out _out6316);
            _11494_recursiveGen = _out6314;
            _11495___v106 = _out6315;
            _11496_recIdents = _out6316;
            _11493_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(::std::cell::RefCell::new(vec!["), _11493_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("; <usize as ::dafny_runtime::NumCast>::from(")), (_11494_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()]))"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11496_recIdents);
            _11491_i = (_11491_i) - (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(_11493_s);
          RAST._IExpr _out6317;
          DCOMPUTF16._IOwnership _out6318;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6317, out _out6318);
          r = _out6317;
          resultingOwnership = _out6318;
          return ;
        }
      } else if (_source421.is_DatatypeValue) {
        DAST._IDatatypeType _11497___mcc_h9 = _source421.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _11498___mcc_h10 = _source421.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _11499___mcc_h11 = _source421.dtor_variant;
        bool _11500___mcc_h12 = _source421.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _11501___mcc_h13 = _source421.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _11502_values = _11501___mcc_h13;
        bool _11503_isCo = _11500___mcc_h12;
        Dafny.ISequence<Dafny.Rune> _11504_variant = _11499___mcc_h11;
        Dafny.ISequence<DAST._IType> _11505_typeArgs = _11498___mcc_h10;
        DAST._IDatatypeType _11506_datatypeType = _11497___mcc_h9;
        {
          RAST._IExpr _out6319;
          _out6319 = DCOMPUTF16.COMP.GenPathExpr((_11506_datatypeType).dtor_path);
          r = _out6319;
          Dafny.ISequence<RAST._IType> _11507_genTypeArgs;
          _11507_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi30 = new BigInteger((_11505_typeArgs).Count);
          for (BigInteger _11508_i = BigInteger.Zero; _11508_i < _hi30; _11508_i++) {
            RAST._IType _11509_typeExpr;
            RAST._IType _out6320;
            _out6320 = DCOMPUTF16.COMP.GenType((_11505_typeArgs).Select(_11508_i), false, false);
            _11509_typeExpr = _out6320;
            _11507_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_11507_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_11509_typeExpr));
          }
          if ((new BigInteger((_11505_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_11507_genTypeArgs);
          }
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(_11504_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _11510_assignments;
          _11510_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi31 = new BigInteger((_11502_values).Count);
          for (BigInteger _11511_i = BigInteger.Zero; _11511_i < _hi31; _11511_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs55 = (_11502_values).Select(_11511_i);
            Dafny.ISequence<Dafny.Rune> _11512_name = _let_tmp_rhs55.dtor__0;
            DAST._IExpression _11513_value = _let_tmp_rhs55.dtor__1;
            if (_11503_isCo) {
              RAST._IExpr _11514_recursiveGen;
              DCOMPUTF16._IOwnership _11515___v107;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11516_recIdents;
              RAST._IExpr _out6321;
              DCOMPUTF16._IOwnership _out6322;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6323;
              DCOMPUTF16.COMP.GenExpr(_11513_value, selfIdent, DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6321, out _out6322, out _out6323);
              _11514_recursiveGen = _out6321;
              _11515___v107 = _out6322;
              _11516_recIdents = _out6323;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11516_recIdents);
              Dafny.ISequence<Dafny.Rune> _11517_allReadCloned;
              _11517_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_11516_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _11518_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_4 in (_11516_recIdents).Elements) {
                  _11518_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_4;
                  if ((_11516_recIdents).Contains(_11518_next)) {
                    goto after__ASSIGN_SUCH_THAT_4;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 2972)");
              after__ASSIGN_SUCH_THAT_4: ;
                _11517_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_11517_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent(_11518_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMPUTF16.__default.escapeIdent(_11518_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _11516_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_11516_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_11518_next));
              }
              Dafny.ISequence<Dafny.Rune> _11519_assigned;
              _11519_assigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _11517_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_11514_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _11510_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_11510_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(_11512_name), RAST.Expr.create_RawExpr(_11519_assigned))));
            } else {
              RAST._IExpr _11520_recursiveGen;
              DCOMPUTF16._IOwnership _11521___v108;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11522_recIdents;
              RAST._IExpr _out6324;
              DCOMPUTF16._IOwnership _out6325;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6326;
              DCOMPUTF16.COMP.GenExpr(_11513_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6324, out _out6325, out _out6326);
              _11520_recursiveGen = _out6324;
              _11521___v108 = _out6325;
              _11522_recIdents = _out6326;
              _11510_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_11510_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(_11512_name), _11520_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11522_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _11510_assignments);
          if (DCOMPUTF16.COMP.IsRcWrapped((_11506_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out6327;
          DCOMPUTF16._IOwnership _out6328;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6327, out _out6328);
          r = _out6327;
          resultingOwnership = _out6328;
          return ;
        }
      } else if (_source421.is_Convert) {
        DAST._IExpression _11523___mcc_h14 = _source421.dtor_value;
        DAST._IType _11524___mcc_h15 = _source421.dtor_from;
        DAST._IType _11525___mcc_h16 = _source421.dtor_typ;
        {
          RAST._IExpr _out6329;
          DCOMPUTF16._IOwnership _out6330;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6331;
          DCOMPUTF16.COMP.GenExprConvert(e, selfIdent, env, expectedOwnership, out _out6329, out _out6330, out _out6331);
          r = _out6329;
          resultingOwnership = _out6330;
          readIdents = _out6331;
        }
      } else if (_source421.is_SeqConstruct) {
        DAST._IExpression _11526___mcc_h17 = _source421.dtor_length;
        DAST._IExpression _11527___mcc_h18 = _source421.dtor_elem;
        DAST._IExpression _11528_expr = _11527___mcc_h18;
        DAST._IExpression _11529_length = _11526___mcc_h17;
        {
          RAST._IExpr _11530_recursiveGen;
          DCOMPUTF16._IOwnership _11531___v112;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11532_recIdents;
          RAST._IExpr _out6332;
          DCOMPUTF16._IOwnership _out6333;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6334;
          DCOMPUTF16.COMP.GenExpr(_11528_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6332, out _out6333, out _out6334);
          _11530_recursiveGen = _out6332;
          _11531___v112 = _out6333;
          _11532_recIdents = _out6334;
          RAST._IExpr _11533_lengthGen;
          DCOMPUTF16._IOwnership _11534___v113;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11535_lengthIdents;
          RAST._IExpr _out6335;
          DCOMPUTF16._IOwnership _out6336;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6337;
          DCOMPUTF16.COMP.GenExpr(_11529_length, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6335, out _out6336, out _out6337);
          _11533_lengthGen = _out6335;
          _11534___v113 = _out6336;
          _11535_lengthIdents = _out6337;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_11530_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_11533_lengthGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer.0(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_11532_recIdents, _11535_lengthIdents);
          RAST._IExpr _out6338;
          DCOMPUTF16._IOwnership _out6339;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6338, out _out6339);
          r = _out6338;
          resultingOwnership = _out6339;
          return ;
        }
      } else if (_source421.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _11536___mcc_h19 = _source421.dtor_elements;
        DAST._IType _11537___mcc_h20 = _source421.dtor_typ;
        DAST._IType _11538_typ = _11537___mcc_h20;
        Dafny.ISequence<DAST._IExpression> _11539_exprs = _11536___mcc_h19;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _11540_genTpe;
          RAST._IType _out6340;
          _out6340 = DCOMPUTF16.COMP.GenType(_11538_typ, false, false);
          _11540_genTpe = _out6340;
          BigInteger _11541_i;
          _11541_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _11542_args;
          _11542_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_11541_i) < (new BigInteger((_11539_exprs).Count))) {
            RAST._IExpr _11543_recursiveGen;
            DCOMPUTF16._IOwnership _11544___v114;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11545_recIdents;
            RAST._IExpr _out6341;
            DCOMPUTF16._IOwnership _out6342;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6343;
            DCOMPUTF16.COMP.GenExpr((_11539_exprs).Select(_11541_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6341, out _out6342, out _out6343);
            _11543_recursiveGen = _out6341;
            _11544___v114 = _out6342;
            _11545_recIdents = _out6343;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11545_recIdents);
            _11542_args = Dafny.Sequence<RAST._IExpr>.Concat(_11542_args, Dafny.Sequence<RAST._IExpr>.FromElements(_11543_recursiveGen));
            _11541_i = (_11541_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_11542_args);
          if ((new BigInteger((_11542_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_11540_genTpe));
          }
          RAST._IExpr _out6344;
          DCOMPUTF16._IOwnership _out6345;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6344, out _out6345);
          r = _out6344;
          resultingOwnership = _out6345;
          return ;
        }
      } else if (_source421.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _11546___mcc_h21 = _source421.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _11547_exprs = _11546___mcc_h21;
        {
          Dafny.ISequence<RAST._IExpr> _11548_generatedValues;
          _11548_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _11549_i;
          _11549_i = BigInteger.Zero;
          while ((_11549_i) < (new BigInteger((_11547_exprs).Count))) {
            RAST._IExpr _11550_recursiveGen;
            DCOMPUTF16._IOwnership _11551___v115;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11552_recIdents;
            RAST._IExpr _out6346;
            DCOMPUTF16._IOwnership _out6347;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6348;
            DCOMPUTF16.COMP.GenExpr((_11547_exprs).Select(_11549_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6346, out _out6347, out _out6348);
            _11550_recursiveGen = _out6346;
            _11551___v115 = _out6347;
            _11552_recIdents = _out6348;
            _11548_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_11548_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_11550_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11552_recIdents);
            _11549_i = (_11549_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_11548_generatedValues);
          RAST._IExpr _out6349;
          DCOMPUTF16._IOwnership _out6350;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6349, out _out6350);
          r = _out6349;
          resultingOwnership = _out6350;
          return ;
        }
      } else if (_source421.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _11553___mcc_h22 = _source421.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _11554_exprs = _11553___mcc_h22;
        {
          Dafny.ISequence<RAST._IExpr> _11555_generatedValues;
          _11555_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _11556_i;
          _11556_i = BigInteger.Zero;
          while ((_11556_i) < (new BigInteger((_11554_exprs).Count))) {
            RAST._IExpr _11557_recursiveGen;
            DCOMPUTF16._IOwnership _11558___v116;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11559_recIdents;
            RAST._IExpr _out6351;
            DCOMPUTF16._IOwnership _out6352;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6353;
            DCOMPUTF16.COMP.GenExpr((_11554_exprs).Select(_11556_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6351, out _out6352, out _out6353);
            _11557_recursiveGen = _out6351;
            _11558___v116 = _out6352;
            _11559_recIdents = _out6353;
            _11555_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_11555_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_11557_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11559_recIdents);
            _11556_i = (_11556_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_11555_generatedValues);
          RAST._IExpr _out6354;
          DCOMPUTF16._IOwnership _out6355;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6354, out _out6355);
          r = _out6354;
          resultingOwnership = _out6355;
          return ;
        }
      } else if (_source421.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _11560___mcc_h23 = _source421.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _11561_mapElems = _11560___mcc_h23;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _11562_generatedValues;
          _11562_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _11563_i;
          _11563_i = BigInteger.Zero;
          while ((_11563_i) < (new BigInteger((_11561_mapElems).Count))) {
            RAST._IExpr _11564_recursiveGenKey;
            DCOMPUTF16._IOwnership _11565___v118;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11566_recIdentsKey;
            RAST._IExpr _out6356;
            DCOMPUTF16._IOwnership _out6357;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6358;
            DCOMPUTF16.COMP.GenExpr(((_11561_mapElems).Select(_11563_i)).dtor__0, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6356, out _out6357, out _out6358);
            _11564_recursiveGenKey = _out6356;
            _11565___v118 = _out6357;
            _11566_recIdentsKey = _out6358;
            RAST._IExpr _11567_recursiveGenValue;
            DCOMPUTF16._IOwnership _11568___v119;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11569_recIdentsValue;
            RAST._IExpr _out6359;
            DCOMPUTF16._IOwnership _out6360;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6361;
            DCOMPUTF16.COMP.GenExpr(((_11561_mapElems).Select(_11563_i)).dtor__1, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6359, out _out6360, out _out6361);
            _11567_recursiveGenValue = _out6359;
            _11568___v119 = _out6360;
            _11569_recIdentsValue = _out6361;
            _11562_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_11562_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_11564_recursiveGenKey, _11567_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11566_recIdentsKey), _11569_recIdentsValue);
            _11563_i = (_11563_i) + (BigInteger.One);
          }
          _11563_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _11570_arguments;
          _11570_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_11563_i) < (new BigInteger((_11562_generatedValues).Count))) {
            RAST._IExpr _11571_genKey;
            _11571_genKey = ((_11562_generatedValues).Select(_11563_i)).dtor__0;
            RAST._IExpr _11572_genValue;
            _11572_genValue = ((_11562_generatedValues).Select(_11563_i)).dtor__1;
            _11570_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_11570_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _11571_genKey, _11572_genValue, DAST.Format.BinOpFormat.create_NoFormat())));
            _11563_i = (_11563_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_11570_arguments);
          RAST._IExpr _out6362;
          DCOMPUTF16._IOwnership _out6363;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6362, out _out6363);
          r = _out6362;
          resultingOwnership = _out6363;
          return ;
        }
      } else if (_source421.is_MapBuilder) {
        DAST._IType _11573___mcc_h24 = _source421.dtor_keyType;
        DAST._IType _11574___mcc_h25 = _source421.dtor_valueType;
        DAST._IType _11575_valueType = _11574___mcc_h25;
        DAST._IType _11576_keyType = _11573___mcc_h24;
        {
          RAST._IType _11577_kType;
          RAST._IType _out6364;
          _out6364 = DCOMPUTF16.COMP.GenType(_11576_keyType, false, false);
          _11577_kType = _out6364;
          RAST._IType _11578_vType;
          RAST._IType _out6365;
          _out6365 = DCOMPUTF16.COMP.GenType(_11575_valueType, false, false);
          _11578_vType = _out6365;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::MapBuilder::<"), (_11577_kType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_11578_vType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out6366;
          DCOMPUTF16._IOwnership _out6367;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6366, out _out6367);
          r = _out6366;
          resultingOwnership = _out6367;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source421.is_SeqUpdate) {
        DAST._IExpression _11579___mcc_h26 = _source421.dtor_expr;
        DAST._IExpression _11580___mcc_h27 = _source421.dtor_indexExpr;
        DAST._IExpression _11581___mcc_h28 = _source421.dtor_value;
        DAST._IExpression _11582_value = _11581___mcc_h28;
        DAST._IExpression _11583_index = _11580___mcc_h27;
        DAST._IExpression _11584_expr = _11579___mcc_h26;
        {
          RAST._IExpr _11585_exprR;
          DCOMPUTF16._IOwnership _11586___v120;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11587_exprIdents;
          RAST._IExpr _out6368;
          DCOMPUTF16._IOwnership _out6369;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6370;
          DCOMPUTF16.COMP.GenExpr(_11584_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6368, out _out6369, out _out6370);
          _11585_exprR = _out6368;
          _11586___v120 = _out6369;
          _11587_exprIdents = _out6370;
          RAST._IExpr _11588_indexR;
          DCOMPUTF16._IOwnership _11589_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11590_indexIdents;
          RAST._IExpr _out6371;
          DCOMPUTF16._IOwnership _out6372;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6373;
          DCOMPUTF16.COMP.GenExpr(_11583_index, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6371, out _out6372, out _out6373);
          _11588_indexR = _out6371;
          _11589_indexOwnership = _out6372;
          _11590_indexIdents = _out6373;
          RAST._IExpr _11591_valueR;
          DCOMPUTF16._IOwnership _11592_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11593_valueIdents;
          RAST._IExpr _out6374;
          DCOMPUTF16._IOwnership _out6375;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6376;
          DCOMPUTF16.COMP.GenExpr(_11582_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6374, out _out6375, out _out6376);
          _11591_valueR = _out6374;
          _11592_valueOwnership = _out6375;
          _11593_valueIdents = _out6376;
          r = ((_11585_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11588_indexR, _11591_valueR));
          RAST._IExpr _out6377;
          DCOMPUTF16._IOwnership _out6378;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6377, out _out6378);
          r = _out6377;
          resultingOwnership = _out6378;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_11587_exprIdents, _11590_indexIdents), _11593_valueIdents);
          return ;
        }
      } else if (_source421.is_MapUpdate) {
        DAST._IExpression _11594___mcc_h29 = _source421.dtor_expr;
        DAST._IExpression _11595___mcc_h30 = _source421.dtor_indexExpr;
        DAST._IExpression _11596___mcc_h31 = _source421.dtor_value;
        DAST._IExpression _11597_value = _11596___mcc_h31;
        DAST._IExpression _11598_index = _11595___mcc_h30;
        DAST._IExpression _11599_expr = _11594___mcc_h29;
        {
          RAST._IExpr _11600_exprR;
          DCOMPUTF16._IOwnership _11601___v121;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11602_exprIdents;
          RAST._IExpr _out6379;
          DCOMPUTF16._IOwnership _out6380;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6381;
          DCOMPUTF16.COMP.GenExpr(_11599_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6379, out _out6380, out _out6381);
          _11600_exprR = _out6379;
          _11601___v121 = _out6380;
          _11602_exprIdents = _out6381;
          RAST._IExpr _11603_indexR;
          DCOMPUTF16._IOwnership _11604_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11605_indexIdents;
          RAST._IExpr _out6382;
          DCOMPUTF16._IOwnership _out6383;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6384;
          DCOMPUTF16.COMP.GenExpr(_11598_index, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6382, out _out6383, out _out6384);
          _11603_indexR = _out6382;
          _11604_indexOwnership = _out6383;
          _11605_indexIdents = _out6384;
          RAST._IExpr _11606_valueR;
          DCOMPUTF16._IOwnership _11607_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11608_valueIdents;
          RAST._IExpr _out6385;
          DCOMPUTF16._IOwnership _out6386;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6387;
          DCOMPUTF16.COMP.GenExpr(_11597_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6385, out _out6386, out _out6387);
          _11606_valueR = _out6385;
          _11607_valueOwnership = _out6386;
          _11608_valueIdents = _out6387;
          r = ((_11600_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11603_indexR, _11606_valueR));
          RAST._IExpr _out6388;
          DCOMPUTF16._IOwnership _out6389;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6388, out _out6389);
          r = _out6388;
          resultingOwnership = _out6389;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_11602_exprIdents, _11605_indexIdents), _11608_valueIdents);
          return ;
        }
      } else if (_source421.is_SetBuilder) {
        DAST._IType _11609___mcc_h32 = _source421.dtor_elemType;
        DAST._IType _11610_elemType = _11609___mcc_h32;
        {
          RAST._IType _11611_eType;
          RAST._IType _out6390;
          _out6390 = DCOMPUTF16.COMP.GenType(_11610_elemType, false, false);
          _11611_eType = _out6390;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::SetBuilder::<"), (_11611_eType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out6391;
          DCOMPUTF16._IOwnership _out6392;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6391, out _out6392);
          r = _out6391;
          resultingOwnership = _out6392;
          return ;
        }
      } else if (_source421.is_ToMultiset) {
        DAST._IExpression _11612___mcc_h33 = _source421.dtor_ToMultiset_a0;
        DAST._IExpression _11613_expr = _11612___mcc_h33;
        {
          RAST._IExpr _11614_recursiveGen;
          DCOMPUTF16._IOwnership _11615___v117;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11616_recIdents;
          RAST._IExpr _out6393;
          DCOMPUTF16._IOwnership _out6394;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6395;
          DCOMPUTF16.COMP.GenExpr(_11613_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6393, out _out6394, out _out6395);
          _11614_recursiveGen = _out6393;
          _11615___v117 = _out6394;
          _11616_recIdents = _out6395;
          r = ((_11614_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _11616_recIdents;
          RAST._IExpr _out6396;
          DCOMPUTF16._IOwnership _out6397;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6396, out _out6397);
          r = _out6396;
          resultingOwnership = _out6397;
          return ;
        }
      } else if (_source421.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source422 = selfIdent;
          if (_source422.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out6398;
              DCOMPUTF16._IOwnership _out6399;
              DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6398, out _out6399);
              r = _out6398;
              resultingOwnership = _out6399;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11617___mcc_h273 = _source422.dtor_value;
            Dafny.ISequence<Dafny.Rune> _11618_id = _11617___mcc_h273;
            {
              r = RAST.Expr.create_RawExpr(_11618_id);
              if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = RAST.__default.Clone(r);
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              } else if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_11618_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_11618_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_11618_id);
            }
          }
          return ;
        }
      } else if (_source421.is_Ite) {
        DAST._IExpression _11619___mcc_h34 = _source421.dtor_cond;
        DAST._IExpression _11620___mcc_h35 = _source421.dtor_thn;
        DAST._IExpression _11621___mcc_h36 = _source421.dtor_els;
        DAST._IExpression _11622_f = _11621___mcc_h36;
        DAST._IExpression _11623_t = _11620___mcc_h35;
        DAST._IExpression _11624_cond = _11619___mcc_h34;
        {
          RAST._IExpr _11625_cond;
          DCOMPUTF16._IOwnership _11626___v122;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11627_recIdentsCond;
          RAST._IExpr _out6400;
          DCOMPUTF16._IOwnership _out6401;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6402;
          DCOMPUTF16.COMP.GenExpr(_11624_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6400, out _out6401, out _out6402);
          _11625_cond = _out6400;
          _11626___v122 = _out6401;
          _11627_recIdentsCond = _out6402;
          Dafny.ISequence<Dafny.Rune> _11628_condString;
          _11628_condString = (_11625_cond)._ToString(DCOMPUTF16.__default.IND);
          RAST._IExpr _11629___v123;
          DCOMPUTF16._IOwnership _11630_tHasToBeOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11631___v124;
          RAST._IExpr _out6403;
          DCOMPUTF16._IOwnership _out6404;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6405;
          DCOMPUTF16.COMP.GenExpr(_11623_t, selfIdent, env, expectedOwnership, out _out6403, out _out6404, out _out6405);
          _11629___v123 = _out6403;
          _11630_tHasToBeOwned = _out6404;
          _11631___v124 = _out6405;
          RAST._IExpr _11632_fExpr;
          DCOMPUTF16._IOwnership _11633_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11634_recIdentsF;
          RAST._IExpr _out6406;
          DCOMPUTF16._IOwnership _out6407;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6408;
          DCOMPUTF16.COMP.GenExpr(_11622_f, selfIdent, env, _11630_tHasToBeOwned, out _out6406, out _out6407, out _out6408);
          _11632_fExpr = _out6406;
          _11633_fOwned = _out6407;
          _11634_recIdentsF = _out6408;
          Dafny.ISequence<Dafny.Rune> _11635_fString;
          _11635_fString = (_11632_fExpr)._ToString(DCOMPUTF16.__default.IND);
          RAST._IExpr _11636_tExpr;
          DCOMPUTF16._IOwnership _11637___v125;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11638_recIdentsT;
          RAST._IExpr _out6409;
          DCOMPUTF16._IOwnership _out6410;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6411;
          DCOMPUTF16.COMP.GenExpr(_11623_t, selfIdent, env, _11633_fOwned, out _out6409, out _out6410, out _out6411);
          _11636_tExpr = _out6409;
          _11637___v125 = _out6410;
          _11638_recIdentsT = _out6411;
          Dafny.ISequence<Dafny.Rune> _11639_tString;
          _11639_tString = (_11636_tExpr)._ToString(DCOMPUTF16.__default.IND);
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(if "), _11628_condString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), _11639_tString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n} else {\n")), _11635_fString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})")));
          RAST._IExpr _out6412;
          DCOMPUTF16._IOwnership _out6413;
          DCOMPUTF16.COMP.FromOwnership(r, _11633_fOwned, expectedOwnership, out _out6412, out _out6413);
          r = _out6412;
          resultingOwnership = _out6413;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_11627_recIdentsCond, _11638_recIdentsT), _11634_recIdentsF);
          return ;
        }
      } else if (_source421.is_UnOp) {
        DAST._IUnaryOp _11640___mcc_h37 = _source421.dtor_unOp;
        DAST._IExpression _11641___mcc_h38 = _source421.dtor_expr;
        DAST.Format._IUnOpFormat _11642___mcc_h39 = _source421.dtor_format1;
        DAST._IUnaryOp _source423 = _11640___mcc_h37;
        if (_source423.is_Not) {
          DAST.Format._IUnOpFormat _11643_format = _11642___mcc_h39;
          DAST._IExpression _11644_e = _11641___mcc_h38;
          {
            RAST._IExpr _11645_recursiveGen;
            DCOMPUTF16._IOwnership _11646___v126;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11647_recIdents;
            RAST._IExpr _out6414;
            DCOMPUTF16._IOwnership _out6415;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6416;
            DCOMPUTF16.COMP.GenExpr(_11644_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6414, out _out6415, out _out6416);
            _11645_recursiveGen = _out6414;
            _11646___v126 = _out6415;
            _11647_recIdents = _out6416;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _11645_recursiveGen, _11643_format);
            RAST._IExpr _out6417;
            DCOMPUTF16._IOwnership _out6418;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6417, out _out6418);
            r = _out6417;
            resultingOwnership = _out6418;
            readIdents = _11647_recIdents;
            return ;
          }
        } else if (_source423.is_BitwiseNot) {
          DAST.Format._IUnOpFormat _11648_format = _11642___mcc_h39;
          DAST._IExpression _11649_e = _11641___mcc_h38;
          {
            RAST._IExpr _11650_recursiveGen;
            DCOMPUTF16._IOwnership _11651___v127;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11652_recIdents;
            RAST._IExpr _out6419;
            DCOMPUTF16._IOwnership _out6420;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6421;
            DCOMPUTF16.COMP.GenExpr(_11649_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6419, out _out6420, out _out6421);
            _11650_recursiveGen = _out6419;
            _11651___v127 = _out6420;
            _11652_recIdents = _out6421;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _11650_recursiveGen, _11648_format);
            RAST._IExpr _out6422;
            DCOMPUTF16._IOwnership _out6423;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6422, out _out6423);
            r = _out6422;
            resultingOwnership = _out6423;
            readIdents = _11652_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnOpFormat _11653_format = _11642___mcc_h39;
          DAST._IExpression _11654_e = _11641___mcc_h38;
          {
            RAST._IExpr _11655_recursiveGen;
            DCOMPUTF16._IOwnership _11656_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11657_recIdents;
            RAST._IExpr _out6424;
            DCOMPUTF16._IOwnership _out6425;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6426;
            DCOMPUTF16.COMP.GenExpr(_11654_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6424, out _out6425, out _out6426);
            _11655_recursiveGen = _out6424;
            _11656_recOwned = _out6425;
            _11657_recIdents = _out6426;
            r = ((_11655_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out6427;
            DCOMPUTF16._IOwnership _out6428;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6427, out _out6428);
            r = _out6427;
            resultingOwnership = _out6428;
            readIdents = _11657_recIdents;
            return ;
          }
        }
      } else if (_source421.is_BinOp) {
        DAST._IBinOp _11658___mcc_h40 = _source421.dtor_op;
        DAST._IExpression _11659___mcc_h41 = _source421.dtor_left;
        DAST._IExpression _11660___mcc_h42 = _source421.dtor_right;
        DAST.Format._IBinOpFormat _11661___mcc_h43 = _source421.dtor_format2;
        RAST._IExpr _out6429;
        DCOMPUTF16._IOwnership _out6430;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6431;
        DCOMPUTF16.COMP.GenExprBinary(e, selfIdent, env, expectedOwnership, out _out6429, out _out6430, out _out6431);
        r = _out6429;
        resultingOwnership = _out6430;
        readIdents = _out6431;
      } else if (_source421.is_ArrayLen) {
        DAST._IExpression _11662___mcc_h44 = _source421.dtor_expr;
        BigInteger _11663___mcc_h45 = _source421.dtor_dim;
        BigInteger _11664_dim = _11663___mcc_h45;
        DAST._IExpression _11665_expr = _11662___mcc_h44;
        {
          RAST._IExpr _11666_recursiveGen;
          DCOMPUTF16._IOwnership _11667___v132;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11668_recIdents;
          RAST._IExpr _out6432;
          DCOMPUTF16._IOwnership _out6433;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6434;
          DCOMPUTF16.COMP.GenExpr(_11665_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6432, out _out6433, out _out6434);
          _11666_recursiveGen = _out6432;
          _11667___v132 = _out6433;
          _11668_recIdents = _out6434;
          if ((_11664_dim).Sign == 0) {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(("), (_11666_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").borrow().len())")));
          } else {
            Dafny.ISequence<Dafny.Rune> _11669_s;
            _11669_s = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(m.borrow().len())")))._ToString(DCOMPUTF16.__default.IND);
            BigInteger _11670_i;
            _11670_i = BigInteger.One;
            while ((_11670_i) < (_11664_dim)) {
              _11669_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("m.borrow().get(0).map(|m| "), _11669_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"));
              _11670_i = (_11670_i) + (BigInteger.One);
            }
            r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11666_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow().get(0).map(|m| ")), _11669_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"))));
          }
          RAST._IExpr _out6435;
          DCOMPUTF16._IOwnership _out6436;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6435, out _out6436);
          r = _out6435;
          resultingOwnership = _out6436;
          readIdents = _11668_recIdents;
          return ;
        }
      } else if (_source421.is_MapKeys) {
        DAST._IExpression _11671___mcc_h46 = _source421.dtor_expr;
        DAST._IExpression _11672_expr = _11671___mcc_h46;
        {
          RAST._IExpr _11673_recursiveGen;
          DCOMPUTF16._IOwnership _11674___v133;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11675_recIdents;
          RAST._IExpr _out6437;
          DCOMPUTF16._IOwnership _out6438;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6439;
          DCOMPUTF16.COMP.GenExpr(_11672_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6437, out _out6438, out _out6439);
          _11673_recursiveGen = _out6437;
          _11674___v133 = _out6438;
          _11675_recIdents = _out6439;
          readIdents = _11675_recIdents;
          r = ((_11673_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out6440;
          DCOMPUTF16._IOwnership _out6441;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6440, out _out6441);
          r = _out6440;
          resultingOwnership = _out6441;
          return ;
        }
      } else if (_source421.is_MapValues) {
        DAST._IExpression _11676___mcc_h47 = _source421.dtor_expr;
        DAST._IExpression _11677_expr = _11676___mcc_h47;
        {
          RAST._IExpr _11678_recursiveGen;
          DCOMPUTF16._IOwnership _11679___v134;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11680_recIdents;
          RAST._IExpr _out6442;
          DCOMPUTF16._IOwnership _out6443;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6444;
          DCOMPUTF16.COMP.GenExpr(_11677_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6442, out _out6443, out _out6444);
          _11678_recursiveGen = _out6442;
          _11679___v134 = _out6443;
          _11680_recIdents = _out6444;
          readIdents = _11680_recIdents;
          r = ((_11678_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out6445;
          DCOMPUTF16._IOwnership _out6446;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6445, out _out6446);
          r = _out6445;
          resultingOwnership = _out6446;
          return ;
        }
      } else if (_source421.is_Select) {
        DAST._IExpression _11681___mcc_h48 = _source421.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _11682___mcc_h49 = _source421.dtor_field;
        bool _11683___mcc_h50 = _source421.dtor_isConstant;
        bool _11684___mcc_h51 = _source421.dtor_onDatatype;
        DAST._IExpression _source424 = _11681___mcc_h48;
        if (_source424.is_Literal) {
          DAST._ILiteral _11685___mcc_h52 = _source424.dtor_Literal_a0;
          bool _11686_isDatatype = _11684___mcc_h51;
          bool _11687_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11688_field = _11682___mcc_h49;
          DAST._IExpression _11689_on = _11681___mcc_h48;
          {
            RAST._IExpr _11690_onExpr;
            DCOMPUTF16._IOwnership _11691_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11692_recIdents;
            RAST._IExpr _out6447;
            DCOMPUTF16._IOwnership _out6448;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6449;
            DCOMPUTF16.COMP.GenExpr(_11689_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6447, out _out6448, out _out6449);
            _11690_onExpr = _out6447;
            _11691_onOwned = _out6448;
            _11692_recIdents = _out6449;
            if ((_11686_isDatatype) || (_11687_isConstant)) {
              r = ((_11690_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11688_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6450;
              DCOMPUTF16._IOwnership _out6451;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6450, out _out6451);
              r = _out6450;
              resultingOwnership = _out6451;
            } else {
              Dafny.ISequence<Dafny.Rune> _11693_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11693_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11690_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11688_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6452;
              DCOMPUTF16._IOwnership _out6453;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11693_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6452, out _out6453);
              r = _out6452;
              resultingOwnership = _out6453;
            }
            readIdents = _11692_recIdents;
            return ;
          }
        } else if (_source424.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _11694___mcc_h54 = _source424.dtor_Ident_a0;
          bool _11695_isDatatype = _11684___mcc_h51;
          bool _11696_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11697_field = _11682___mcc_h49;
          DAST._IExpression _11698_on = _11681___mcc_h48;
          {
            RAST._IExpr _11699_onExpr;
            DCOMPUTF16._IOwnership _11700_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11701_recIdents;
            RAST._IExpr _out6454;
            DCOMPUTF16._IOwnership _out6455;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6456;
            DCOMPUTF16.COMP.GenExpr(_11698_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6454, out _out6455, out _out6456);
            _11699_onExpr = _out6454;
            _11700_onOwned = _out6455;
            _11701_recIdents = _out6456;
            if ((_11695_isDatatype) || (_11696_isConstant)) {
              r = ((_11699_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11697_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6457;
              DCOMPUTF16._IOwnership _out6458;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6457, out _out6458);
              r = _out6457;
              resultingOwnership = _out6458;
            } else {
              Dafny.ISequence<Dafny.Rune> _11702_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11702_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11699_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11697_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6459;
              DCOMPUTF16._IOwnership _out6460;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11702_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6459, out _out6460);
              r = _out6459;
              resultingOwnership = _out6460;
            }
            readIdents = _11701_recIdents;
            return ;
          }
        } else if (_source424.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11703___mcc_h56 = _source424.dtor_Companion_a0;
          bool _11704_isDatatype = _11684___mcc_h51;
          bool _11705_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11706_field = _11682___mcc_h49;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11707_c = _11703___mcc_h56;
          {
            RAST._IExpr _11708_onExpr;
            DCOMPUTF16._IOwnership _11709_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11710_recIdents;
            RAST._IExpr _out6461;
            DCOMPUTF16._IOwnership _out6462;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6463;
            DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Companion(_11707_c), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6461, out _out6462, out _out6463);
            _11708_onExpr = _out6461;
            _11709_onOwned = _out6462;
            _11710_recIdents = _out6463;
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11708_onExpr)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent(_11706_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("()")));
            RAST._IExpr _out6464;
            DCOMPUTF16._IOwnership _out6465;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6464, out _out6465);
            r = _out6464;
            resultingOwnership = _out6465;
            readIdents = _11710_recIdents;
            return ;
          }
        } else if (_source424.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _11711___mcc_h58 = _source424.dtor_Tuple_a0;
          bool _11712_isDatatype = _11684___mcc_h51;
          bool _11713_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11714_field = _11682___mcc_h49;
          DAST._IExpression _11715_on = _11681___mcc_h48;
          {
            RAST._IExpr _11716_onExpr;
            DCOMPUTF16._IOwnership _11717_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11718_recIdents;
            RAST._IExpr _out6466;
            DCOMPUTF16._IOwnership _out6467;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6468;
            DCOMPUTF16.COMP.GenExpr(_11715_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6466, out _out6467, out _out6468);
            _11716_onExpr = _out6466;
            _11717_onOwned = _out6467;
            _11718_recIdents = _out6468;
            if ((_11712_isDatatype) || (_11713_isConstant)) {
              r = ((_11716_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11714_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6469;
              DCOMPUTF16._IOwnership _out6470;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6469, out _out6470);
              r = _out6469;
              resultingOwnership = _out6470;
            } else {
              Dafny.ISequence<Dafny.Rune> _11719_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11719_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11716_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11714_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6471;
              DCOMPUTF16._IOwnership _out6472;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11719_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6471, out _out6472);
              r = _out6471;
              resultingOwnership = _out6472;
            }
            readIdents = _11718_recIdents;
            return ;
          }
        } else if (_source424.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11720___mcc_h60 = _source424.dtor_path;
          Dafny.ISequence<DAST._IType> _11721___mcc_h61 = _source424.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _11722___mcc_h62 = _source424.dtor_args;
          bool _11723_isDatatype = _11684___mcc_h51;
          bool _11724_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11725_field = _11682___mcc_h49;
          DAST._IExpression _11726_on = _11681___mcc_h48;
          {
            RAST._IExpr _11727_onExpr;
            DCOMPUTF16._IOwnership _11728_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11729_recIdents;
            RAST._IExpr _out6473;
            DCOMPUTF16._IOwnership _out6474;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6475;
            DCOMPUTF16.COMP.GenExpr(_11726_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6473, out _out6474, out _out6475);
            _11727_onExpr = _out6473;
            _11728_onOwned = _out6474;
            _11729_recIdents = _out6475;
            if ((_11723_isDatatype) || (_11724_isConstant)) {
              r = ((_11727_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11725_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6476;
              DCOMPUTF16._IOwnership _out6477;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6476, out _out6477);
              r = _out6476;
              resultingOwnership = _out6477;
            } else {
              Dafny.ISequence<Dafny.Rune> _11730_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11730_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11727_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11725_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6478;
              DCOMPUTF16._IOwnership _out6479;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11730_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6478, out _out6479);
              r = _out6478;
              resultingOwnership = _out6479;
            }
            readIdents = _11729_recIdents;
            return ;
          }
        } else if (_source424.is_NewArray) {
          Dafny.ISequence<DAST._IExpression> _11731___mcc_h66 = _source424.dtor_dims;
          DAST._IType _11732___mcc_h67 = _source424.dtor_typ;
          bool _11733_isDatatype = _11684___mcc_h51;
          bool _11734_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11735_field = _11682___mcc_h49;
          DAST._IExpression _11736_on = _11681___mcc_h48;
          {
            RAST._IExpr _11737_onExpr;
            DCOMPUTF16._IOwnership _11738_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11739_recIdents;
            RAST._IExpr _out6480;
            DCOMPUTF16._IOwnership _out6481;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6482;
            DCOMPUTF16.COMP.GenExpr(_11736_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6480, out _out6481, out _out6482);
            _11737_onExpr = _out6480;
            _11738_onOwned = _out6481;
            _11739_recIdents = _out6482;
            if ((_11733_isDatatype) || (_11734_isConstant)) {
              r = ((_11737_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11735_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6483;
              DCOMPUTF16._IOwnership _out6484;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6483, out _out6484);
              r = _out6483;
              resultingOwnership = _out6484;
            } else {
              Dafny.ISequence<Dafny.Rune> _11740_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11740_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11737_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11735_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6485;
              DCOMPUTF16._IOwnership _out6486;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11740_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6485, out _out6486);
              r = _out6485;
              resultingOwnership = _out6486;
            }
            readIdents = _11739_recIdents;
            return ;
          }
        } else if (_source424.is_DatatypeValue) {
          DAST._IDatatypeType _11741___mcc_h70 = _source424.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _11742___mcc_h71 = _source424.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _11743___mcc_h72 = _source424.dtor_variant;
          bool _11744___mcc_h73 = _source424.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _11745___mcc_h74 = _source424.dtor_contents;
          bool _11746_isDatatype = _11684___mcc_h51;
          bool _11747_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11748_field = _11682___mcc_h49;
          DAST._IExpression _11749_on = _11681___mcc_h48;
          {
            RAST._IExpr _11750_onExpr;
            DCOMPUTF16._IOwnership _11751_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11752_recIdents;
            RAST._IExpr _out6487;
            DCOMPUTF16._IOwnership _out6488;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6489;
            DCOMPUTF16.COMP.GenExpr(_11749_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6487, out _out6488, out _out6489);
            _11750_onExpr = _out6487;
            _11751_onOwned = _out6488;
            _11752_recIdents = _out6489;
            if ((_11746_isDatatype) || (_11747_isConstant)) {
              r = ((_11750_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11748_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6490;
              DCOMPUTF16._IOwnership _out6491;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6490, out _out6491);
              r = _out6490;
              resultingOwnership = _out6491;
            } else {
              Dafny.ISequence<Dafny.Rune> _11753_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11753_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11750_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11748_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6492;
              DCOMPUTF16._IOwnership _out6493;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11753_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6492, out _out6493);
              r = _out6492;
              resultingOwnership = _out6493;
            }
            readIdents = _11752_recIdents;
            return ;
          }
        } else if (_source424.is_Convert) {
          DAST._IExpression _11754___mcc_h80 = _source424.dtor_value;
          DAST._IType _11755___mcc_h81 = _source424.dtor_from;
          DAST._IType _11756___mcc_h82 = _source424.dtor_typ;
          bool _11757_isDatatype = _11684___mcc_h51;
          bool _11758_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11759_field = _11682___mcc_h49;
          DAST._IExpression _11760_on = _11681___mcc_h48;
          {
            RAST._IExpr _11761_onExpr;
            DCOMPUTF16._IOwnership _11762_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11763_recIdents;
            RAST._IExpr _out6494;
            DCOMPUTF16._IOwnership _out6495;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6496;
            DCOMPUTF16.COMP.GenExpr(_11760_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6494, out _out6495, out _out6496);
            _11761_onExpr = _out6494;
            _11762_onOwned = _out6495;
            _11763_recIdents = _out6496;
            if ((_11757_isDatatype) || (_11758_isConstant)) {
              r = ((_11761_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11759_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6497;
              DCOMPUTF16._IOwnership _out6498;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6497, out _out6498);
              r = _out6497;
              resultingOwnership = _out6498;
            } else {
              Dafny.ISequence<Dafny.Rune> _11764_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11764_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11761_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11759_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6499;
              DCOMPUTF16._IOwnership _out6500;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11764_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6499, out _out6500);
              r = _out6499;
              resultingOwnership = _out6500;
            }
            readIdents = _11763_recIdents;
            return ;
          }
        } else if (_source424.is_SeqConstruct) {
          DAST._IExpression _11765___mcc_h86 = _source424.dtor_length;
          DAST._IExpression _11766___mcc_h87 = _source424.dtor_elem;
          bool _11767_isDatatype = _11684___mcc_h51;
          bool _11768_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11769_field = _11682___mcc_h49;
          DAST._IExpression _11770_on = _11681___mcc_h48;
          {
            RAST._IExpr _11771_onExpr;
            DCOMPUTF16._IOwnership _11772_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11773_recIdents;
            RAST._IExpr _out6501;
            DCOMPUTF16._IOwnership _out6502;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6503;
            DCOMPUTF16.COMP.GenExpr(_11770_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6501, out _out6502, out _out6503);
            _11771_onExpr = _out6501;
            _11772_onOwned = _out6502;
            _11773_recIdents = _out6503;
            if ((_11767_isDatatype) || (_11768_isConstant)) {
              r = ((_11771_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11769_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6504;
              DCOMPUTF16._IOwnership _out6505;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6504, out _out6505);
              r = _out6504;
              resultingOwnership = _out6505;
            } else {
              Dafny.ISequence<Dafny.Rune> _11774_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11774_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11771_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11769_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6506;
              DCOMPUTF16._IOwnership _out6507;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11774_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6506, out _out6507);
              r = _out6506;
              resultingOwnership = _out6507;
            }
            readIdents = _11773_recIdents;
            return ;
          }
        } else if (_source424.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _11775___mcc_h90 = _source424.dtor_elements;
          DAST._IType _11776___mcc_h91 = _source424.dtor_typ;
          bool _11777_isDatatype = _11684___mcc_h51;
          bool _11778_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11779_field = _11682___mcc_h49;
          DAST._IExpression _11780_on = _11681___mcc_h48;
          {
            RAST._IExpr _11781_onExpr;
            DCOMPUTF16._IOwnership _11782_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11783_recIdents;
            RAST._IExpr _out6508;
            DCOMPUTF16._IOwnership _out6509;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6510;
            DCOMPUTF16.COMP.GenExpr(_11780_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6508, out _out6509, out _out6510);
            _11781_onExpr = _out6508;
            _11782_onOwned = _out6509;
            _11783_recIdents = _out6510;
            if ((_11777_isDatatype) || (_11778_isConstant)) {
              r = ((_11781_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11779_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6511;
              DCOMPUTF16._IOwnership _out6512;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6511, out _out6512);
              r = _out6511;
              resultingOwnership = _out6512;
            } else {
              Dafny.ISequence<Dafny.Rune> _11784_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11784_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11781_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11779_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6513;
              DCOMPUTF16._IOwnership _out6514;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11784_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6513, out _out6514);
              r = _out6513;
              resultingOwnership = _out6514;
            }
            readIdents = _11783_recIdents;
            return ;
          }
        } else if (_source424.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _11785___mcc_h94 = _source424.dtor_elements;
          bool _11786_isDatatype = _11684___mcc_h51;
          bool _11787_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11788_field = _11682___mcc_h49;
          DAST._IExpression _11789_on = _11681___mcc_h48;
          {
            RAST._IExpr _11790_onExpr;
            DCOMPUTF16._IOwnership _11791_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11792_recIdents;
            RAST._IExpr _out6515;
            DCOMPUTF16._IOwnership _out6516;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6517;
            DCOMPUTF16.COMP.GenExpr(_11789_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6515, out _out6516, out _out6517);
            _11790_onExpr = _out6515;
            _11791_onOwned = _out6516;
            _11792_recIdents = _out6517;
            if ((_11786_isDatatype) || (_11787_isConstant)) {
              r = ((_11790_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11788_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6518;
              DCOMPUTF16._IOwnership _out6519;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6518, out _out6519);
              r = _out6518;
              resultingOwnership = _out6519;
            } else {
              Dafny.ISequence<Dafny.Rune> _11793_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11793_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11790_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11788_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6520;
              DCOMPUTF16._IOwnership _out6521;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11793_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6520, out _out6521);
              r = _out6520;
              resultingOwnership = _out6521;
            }
            readIdents = _11792_recIdents;
            return ;
          }
        } else if (_source424.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _11794___mcc_h96 = _source424.dtor_elements;
          bool _11795_isDatatype = _11684___mcc_h51;
          bool _11796_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11797_field = _11682___mcc_h49;
          DAST._IExpression _11798_on = _11681___mcc_h48;
          {
            RAST._IExpr _11799_onExpr;
            DCOMPUTF16._IOwnership _11800_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11801_recIdents;
            RAST._IExpr _out6522;
            DCOMPUTF16._IOwnership _out6523;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6524;
            DCOMPUTF16.COMP.GenExpr(_11798_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6522, out _out6523, out _out6524);
            _11799_onExpr = _out6522;
            _11800_onOwned = _out6523;
            _11801_recIdents = _out6524;
            if ((_11795_isDatatype) || (_11796_isConstant)) {
              r = ((_11799_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11797_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6525;
              DCOMPUTF16._IOwnership _out6526;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6525, out _out6526);
              r = _out6525;
              resultingOwnership = _out6526;
            } else {
              Dafny.ISequence<Dafny.Rune> _11802_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11802_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11799_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11797_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6527;
              DCOMPUTF16._IOwnership _out6528;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11802_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6527, out _out6528);
              r = _out6527;
              resultingOwnership = _out6528;
            }
            readIdents = _11801_recIdents;
            return ;
          }
        } else if (_source424.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _11803___mcc_h98 = _source424.dtor_mapElems;
          bool _11804_isDatatype = _11684___mcc_h51;
          bool _11805_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11806_field = _11682___mcc_h49;
          DAST._IExpression _11807_on = _11681___mcc_h48;
          {
            RAST._IExpr _11808_onExpr;
            DCOMPUTF16._IOwnership _11809_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11810_recIdents;
            RAST._IExpr _out6529;
            DCOMPUTF16._IOwnership _out6530;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6531;
            DCOMPUTF16.COMP.GenExpr(_11807_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6529, out _out6530, out _out6531);
            _11808_onExpr = _out6529;
            _11809_onOwned = _out6530;
            _11810_recIdents = _out6531;
            if ((_11804_isDatatype) || (_11805_isConstant)) {
              r = ((_11808_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11806_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6532;
              DCOMPUTF16._IOwnership _out6533;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6532, out _out6533);
              r = _out6532;
              resultingOwnership = _out6533;
            } else {
              Dafny.ISequence<Dafny.Rune> _11811_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11811_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11808_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11806_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6534;
              DCOMPUTF16._IOwnership _out6535;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11811_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6534, out _out6535);
              r = _out6534;
              resultingOwnership = _out6535;
            }
            readIdents = _11810_recIdents;
            return ;
          }
        } else if (_source424.is_MapBuilder) {
          DAST._IType _11812___mcc_h100 = _source424.dtor_keyType;
          DAST._IType _11813___mcc_h101 = _source424.dtor_valueType;
          bool _11814_isDatatype = _11684___mcc_h51;
          bool _11815_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11816_field = _11682___mcc_h49;
          DAST._IExpression _11817_on = _11681___mcc_h48;
          {
            RAST._IExpr _11818_onExpr;
            DCOMPUTF16._IOwnership _11819_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11820_recIdents;
            RAST._IExpr _out6536;
            DCOMPUTF16._IOwnership _out6537;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6538;
            DCOMPUTF16.COMP.GenExpr(_11817_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6536, out _out6537, out _out6538);
            _11818_onExpr = _out6536;
            _11819_onOwned = _out6537;
            _11820_recIdents = _out6538;
            if ((_11814_isDatatype) || (_11815_isConstant)) {
              r = ((_11818_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11816_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6539;
              DCOMPUTF16._IOwnership _out6540;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6539, out _out6540);
              r = _out6539;
              resultingOwnership = _out6540;
            } else {
              Dafny.ISequence<Dafny.Rune> _11821_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11821_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11818_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11816_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6541;
              DCOMPUTF16._IOwnership _out6542;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11821_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6541, out _out6542);
              r = _out6541;
              resultingOwnership = _out6542;
            }
            readIdents = _11820_recIdents;
            return ;
          }
        } else if (_source424.is_SeqUpdate) {
          DAST._IExpression _11822___mcc_h104 = _source424.dtor_expr;
          DAST._IExpression _11823___mcc_h105 = _source424.dtor_indexExpr;
          DAST._IExpression _11824___mcc_h106 = _source424.dtor_value;
          bool _11825_isDatatype = _11684___mcc_h51;
          bool _11826_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11827_field = _11682___mcc_h49;
          DAST._IExpression _11828_on = _11681___mcc_h48;
          {
            RAST._IExpr _11829_onExpr;
            DCOMPUTF16._IOwnership _11830_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11831_recIdents;
            RAST._IExpr _out6543;
            DCOMPUTF16._IOwnership _out6544;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6545;
            DCOMPUTF16.COMP.GenExpr(_11828_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6543, out _out6544, out _out6545);
            _11829_onExpr = _out6543;
            _11830_onOwned = _out6544;
            _11831_recIdents = _out6545;
            if ((_11825_isDatatype) || (_11826_isConstant)) {
              r = ((_11829_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11827_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6546;
              DCOMPUTF16._IOwnership _out6547;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6546, out _out6547);
              r = _out6546;
              resultingOwnership = _out6547;
            } else {
              Dafny.ISequence<Dafny.Rune> _11832_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11832_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11829_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11827_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6548;
              DCOMPUTF16._IOwnership _out6549;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11832_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6548, out _out6549);
              r = _out6548;
              resultingOwnership = _out6549;
            }
            readIdents = _11831_recIdents;
            return ;
          }
        } else if (_source424.is_MapUpdate) {
          DAST._IExpression _11833___mcc_h110 = _source424.dtor_expr;
          DAST._IExpression _11834___mcc_h111 = _source424.dtor_indexExpr;
          DAST._IExpression _11835___mcc_h112 = _source424.dtor_value;
          bool _11836_isDatatype = _11684___mcc_h51;
          bool _11837_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11838_field = _11682___mcc_h49;
          DAST._IExpression _11839_on = _11681___mcc_h48;
          {
            RAST._IExpr _11840_onExpr;
            DCOMPUTF16._IOwnership _11841_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11842_recIdents;
            RAST._IExpr _out6550;
            DCOMPUTF16._IOwnership _out6551;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6552;
            DCOMPUTF16.COMP.GenExpr(_11839_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6550, out _out6551, out _out6552);
            _11840_onExpr = _out6550;
            _11841_onOwned = _out6551;
            _11842_recIdents = _out6552;
            if ((_11836_isDatatype) || (_11837_isConstant)) {
              r = ((_11840_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11838_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6553;
              DCOMPUTF16._IOwnership _out6554;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6553, out _out6554);
              r = _out6553;
              resultingOwnership = _out6554;
            } else {
              Dafny.ISequence<Dafny.Rune> _11843_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11843_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11840_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11838_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6555;
              DCOMPUTF16._IOwnership _out6556;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11843_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6555, out _out6556);
              r = _out6555;
              resultingOwnership = _out6556;
            }
            readIdents = _11842_recIdents;
            return ;
          }
        } else if (_source424.is_SetBuilder) {
          DAST._IType _11844___mcc_h116 = _source424.dtor_elemType;
          bool _11845_isDatatype = _11684___mcc_h51;
          bool _11846_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11847_field = _11682___mcc_h49;
          DAST._IExpression _11848_on = _11681___mcc_h48;
          {
            RAST._IExpr _11849_onExpr;
            DCOMPUTF16._IOwnership _11850_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11851_recIdents;
            RAST._IExpr _out6557;
            DCOMPUTF16._IOwnership _out6558;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6559;
            DCOMPUTF16.COMP.GenExpr(_11848_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6557, out _out6558, out _out6559);
            _11849_onExpr = _out6557;
            _11850_onOwned = _out6558;
            _11851_recIdents = _out6559;
            if ((_11845_isDatatype) || (_11846_isConstant)) {
              r = ((_11849_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11847_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6560;
              DCOMPUTF16._IOwnership _out6561;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6560, out _out6561);
              r = _out6560;
              resultingOwnership = _out6561;
            } else {
              Dafny.ISequence<Dafny.Rune> _11852_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11852_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11849_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11847_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6562;
              DCOMPUTF16._IOwnership _out6563;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11852_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6562, out _out6563);
              r = _out6562;
              resultingOwnership = _out6563;
            }
            readIdents = _11851_recIdents;
            return ;
          }
        } else if (_source424.is_ToMultiset) {
          DAST._IExpression _11853___mcc_h118 = _source424.dtor_ToMultiset_a0;
          bool _11854_isDatatype = _11684___mcc_h51;
          bool _11855_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11856_field = _11682___mcc_h49;
          DAST._IExpression _11857_on = _11681___mcc_h48;
          {
            RAST._IExpr _11858_onExpr;
            DCOMPUTF16._IOwnership _11859_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11860_recIdents;
            RAST._IExpr _out6564;
            DCOMPUTF16._IOwnership _out6565;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6566;
            DCOMPUTF16.COMP.GenExpr(_11857_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6564, out _out6565, out _out6566);
            _11858_onExpr = _out6564;
            _11859_onOwned = _out6565;
            _11860_recIdents = _out6566;
            if ((_11854_isDatatype) || (_11855_isConstant)) {
              r = ((_11858_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11856_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6567;
              DCOMPUTF16._IOwnership _out6568;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6567, out _out6568);
              r = _out6567;
              resultingOwnership = _out6568;
            } else {
              Dafny.ISequence<Dafny.Rune> _11861_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11861_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11858_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11856_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6569;
              DCOMPUTF16._IOwnership _out6570;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11861_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6569, out _out6570);
              r = _out6569;
              resultingOwnership = _out6570;
            }
            readIdents = _11860_recIdents;
            return ;
          }
        } else if (_source424.is_This) {
          bool _11862_isDatatype = _11684___mcc_h51;
          bool _11863_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11864_field = _11682___mcc_h49;
          DAST._IExpression _11865_on = _11681___mcc_h48;
          {
            RAST._IExpr _11866_onExpr;
            DCOMPUTF16._IOwnership _11867_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11868_recIdents;
            RAST._IExpr _out6571;
            DCOMPUTF16._IOwnership _out6572;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6573;
            DCOMPUTF16.COMP.GenExpr(_11865_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6571, out _out6572, out _out6573);
            _11866_onExpr = _out6571;
            _11867_onOwned = _out6572;
            _11868_recIdents = _out6573;
            if ((_11862_isDatatype) || (_11863_isConstant)) {
              r = ((_11866_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11864_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6574;
              DCOMPUTF16._IOwnership _out6575;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6574, out _out6575);
              r = _out6574;
              resultingOwnership = _out6575;
            } else {
              Dafny.ISequence<Dafny.Rune> _11869_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11869_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11866_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11864_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6576;
              DCOMPUTF16._IOwnership _out6577;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11869_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6576, out _out6577);
              r = _out6576;
              resultingOwnership = _out6577;
            }
            readIdents = _11868_recIdents;
            return ;
          }
        } else if (_source424.is_Ite) {
          DAST._IExpression _11870___mcc_h120 = _source424.dtor_cond;
          DAST._IExpression _11871___mcc_h121 = _source424.dtor_thn;
          DAST._IExpression _11872___mcc_h122 = _source424.dtor_els;
          bool _11873_isDatatype = _11684___mcc_h51;
          bool _11874_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11875_field = _11682___mcc_h49;
          DAST._IExpression _11876_on = _11681___mcc_h48;
          {
            RAST._IExpr _11877_onExpr;
            DCOMPUTF16._IOwnership _11878_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11879_recIdents;
            RAST._IExpr _out6578;
            DCOMPUTF16._IOwnership _out6579;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6580;
            DCOMPUTF16.COMP.GenExpr(_11876_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6578, out _out6579, out _out6580);
            _11877_onExpr = _out6578;
            _11878_onOwned = _out6579;
            _11879_recIdents = _out6580;
            if ((_11873_isDatatype) || (_11874_isConstant)) {
              r = ((_11877_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11875_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6581;
              DCOMPUTF16._IOwnership _out6582;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6581, out _out6582);
              r = _out6581;
              resultingOwnership = _out6582;
            } else {
              Dafny.ISequence<Dafny.Rune> _11880_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11880_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11877_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11875_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6583;
              DCOMPUTF16._IOwnership _out6584;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11880_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6583, out _out6584);
              r = _out6583;
              resultingOwnership = _out6584;
            }
            readIdents = _11879_recIdents;
            return ;
          }
        } else if (_source424.is_UnOp) {
          DAST._IUnaryOp _11881___mcc_h126 = _source424.dtor_unOp;
          DAST._IExpression _11882___mcc_h127 = _source424.dtor_expr;
          DAST.Format._IUnOpFormat _11883___mcc_h128 = _source424.dtor_format1;
          bool _11884_isDatatype = _11684___mcc_h51;
          bool _11885_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11886_field = _11682___mcc_h49;
          DAST._IExpression _11887_on = _11681___mcc_h48;
          {
            RAST._IExpr _11888_onExpr;
            DCOMPUTF16._IOwnership _11889_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11890_recIdents;
            RAST._IExpr _out6585;
            DCOMPUTF16._IOwnership _out6586;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6587;
            DCOMPUTF16.COMP.GenExpr(_11887_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6585, out _out6586, out _out6587);
            _11888_onExpr = _out6585;
            _11889_onOwned = _out6586;
            _11890_recIdents = _out6587;
            if ((_11884_isDatatype) || (_11885_isConstant)) {
              r = ((_11888_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11886_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6588;
              DCOMPUTF16._IOwnership _out6589;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6588, out _out6589);
              r = _out6588;
              resultingOwnership = _out6589;
            } else {
              Dafny.ISequence<Dafny.Rune> _11891_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11891_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11888_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11886_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6590;
              DCOMPUTF16._IOwnership _out6591;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11891_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6590, out _out6591);
              r = _out6590;
              resultingOwnership = _out6591;
            }
            readIdents = _11890_recIdents;
            return ;
          }
        } else if (_source424.is_BinOp) {
          DAST._IBinOp _11892___mcc_h132 = _source424.dtor_op;
          DAST._IExpression _11893___mcc_h133 = _source424.dtor_left;
          DAST._IExpression _11894___mcc_h134 = _source424.dtor_right;
          DAST.Format._IBinOpFormat _11895___mcc_h135 = _source424.dtor_format2;
          bool _11896_isDatatype = _11684___mcc_h51;
          bool _11897_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11898_field = _11682___mcc_h49;
          DAST._IExpression _11899_on = _11681___mcc_h48;
          {
            RAST._IExpr _11900_onExpr;
            DCOMPUTF16._IOwnership _11901_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11902_recIdents;
            RAST._IExpr _out6592;
            DCOMPUTF16._IOwnership _out6593;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6594;
            DCOMPUTF16.COMP.GenExpr(_11899_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6592, out _out6593, out _out6594);
            _11900_onExpr = _out6592;
            _11901_onOwned = _out6593;
            _11902_recIdents = _out6594;
            if ((_11896_isDatatype) || (_11897_isConstant)) {
              r = ((_11900_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11898_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6595;
              DCOMPUTF16._IOwnership _out6596;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6595, out _out6596);
              r = _out6595;
              resultingOwnership = _out6596;
            } else {
              Dafny.ISequence<Dafny.Rune> _11903_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11903_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11900_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11898_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6597;
              DCOMPUTF16._IOwnership _out6598;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11903_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6597, out _out6598);
              r = _out6597;
              resultingOwnership = _out6598;
            }
            readIdents = _11902_recIdents;
            return ;
          }
        } else if (_source424.is_ArrayLen) {
          DAST._IExpression _11904___mcc_h140 = _source424.dtor_expr;
          BigInteger _11905___mcc_h141 = _source424.dtor_dim;
          bool _11906_isDatatype = _11684___mcc_h51;
          bool _11907_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11908_field = _11682___mcc_h49;
          DAST._IExpression _11909_on = _11681___mcc_h48;
          {
            RAST._IExpr _11910_onExpr;
            DCOMPUTF16._IOwnership _11911_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11912_recIdents;
            RAST._IExpr _out6599;
            DCOMPUTF16._IOwnership _out6600;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6601;
            DCOMPUTF16.COMP.GenExpr(_11909_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6599, out _out6600, out _out6601);
            _11910_onExpr = _out6599;
            _11911_onOwned = _out6600;
            _11912_recIdents = _out6601;
            if ((_11906_isDatatype) || (_11907_isConstant)) {
              r = ((_11910_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11908_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6602;
              DCOMPUTF16._IOwnership _out6603;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6602, out _out6603);
              r = _out6602;
              resultingOwnership = _out6603;
            } else {
              Dafny.ISequence<Dafny.Rune> _11913_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11913_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11910_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11908_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6604;
              DCOMPUTF16._IOwnership _out6605;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11913_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6604, out _out6605);
              r = _out6604;
              resultingOwnership = _out6605;
            }
            readIdents = _11912_recIdents;
            return ;
          }
        } else if (_source424.is_MapKeys) {
          DAST._IExpression _11914___mcc_h144 = _source424.dtor_expr;
          bool _11915_isDatatype = _11684___mcc_h51;
          bool _11916_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11917_field = _11682___mcc_h49;
          DAST._IExpression _11918_on = _11681___mcc_h48;
          {
            RAST._IExpr _11919_onExpr;
            DCOMPUTF16._IOwnership _11920_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11921_recIdents;
            RAST._IExpr _out6606;
            DCOMPUTF16._IOwnership _out6607;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6608;
            DCOMPUTF16.COMP.GenExpr(_11918_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6606, out _out6607, out _out6608);
            _11919_onExpr = _out6606;
            _11920_onOwned = _out6607;
            _11921_recIdents = _out6608;
            if ((_11915_isDatatype) || (_11916_isConstant)) {
              r = ((_11919_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11917_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6609;
              DCOMPUTF16._IOwnership _out6610;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6609, out _out6610);
              r = _out6609;
              resultingOwnership = _out6610;
            } else {
              Dafny.ISequence<Dafny.Rune> _11922_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11922_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11919_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11917_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6611;
              DCOMPUTF16._IOwnership _out6612;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11922_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6611, out _out6612);
              r = _out6611;
              resultingOwnership = _out6612;
            }
            readIdents = _11921_recIdents;
            return ;
          }
        } else if (_source424.is_MapValues) {
          DAST._IExpression _11923___mcc_h146 = _source424.dtor_expr;
          bool _11924_isDatatype = _11684___mcc_h51;
          bool _11925_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11926_field = _11682___mcc_h49;
          DAST._IExpression _11927_on = _11681___mcc_h48;
          {
            RAST._IExpr _11928_onExpr;
            DCOMPUTF16._IOwnership _11929_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11930_recIdents;
            RAST._IExpr _out6613;
            DCOMPUTF16._IOwnership _out6614;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6615;
            DCOMPUTF16.COMP.GenExpr(_11927_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6613, out _out6614, out _out6615);
            _11928_onExpr = _out6613;
            _11929_onOwned = _out6614;
            _11930_recIdents = _out6615;
            if ((_11924_isDatatype) || (_11925_isConstant)) {
              r = ((_11928_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11926_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6616;
              DCOMPUTF16._IOwnership _out6617;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6616, out _out6617);
              r = _out6616;
              resultingOwnership = _out6617;
            } else {
              Dafny.ISequence<Dafny.Rune> _11931_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11931_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11928_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11926_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6618;
              DCOMPUTF16._IOwnership _out6619;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11931_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6618, out _out6619);
              r = _out6618;
              resultingOwnership = _out6619;
            }
            readIdents = _11930_recIdents;
            return ;
          }
        } else if (_source424.is_Select) {
          DAST._IExpression _11932___mcc_h148 = _source424.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _11933___mcc_h149 = _source424.dtor_field;
          bool _11934___mcc_h150 = _source424.dtor_isConstant;
          bool _11935___mcc_h151 = _source424.dtor_onDatatype;
          bool _11936_isDatatype = _11684___mcc_h51;
          bool _11937_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11938_field = _11682___mcc_h49;
          DAST._IExpression _11939_on = _11681___mcc_h48;
          {
            RAST._IExpr _11940_onExpr;
            DCOMPUTF16._IOwnership _11941_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11942_recIdents;
            RAST._IExpr _out6620;
            DCOMPUTF16._IOwnership _out6621;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6622;
            DCOMPUTF16.COMP.GenExpr(_11939_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6620, out _out6621, out _out6622);
            _11940_onExpr = _out6620;
            _11941_onOwned = _out6621;
            _11942_recIdents = _out6622;
            if ((_11936_isDatatype) || (_11937_isConstant)) {
              r = ((_11940_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11938_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6623;
              DCOMPUTF16._IOwnership _out6624;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6623, out _out6624);
              r = _out6623;
              resultingOwnership = _out6624;
            } else {
              Dafny.ISequence<Dafny.Rune> _11943_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11943_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11940_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11938_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6625;
              DCOMPUTF16._IOwnership _out6626;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11943_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6625, out _out6626);
              r = _out6625;
              resultingOwnership = _out6626;
            }
            readIdents = _11942_recIdents;
            return ;
          }
        } else if (_source424.is_SelectFn) {
          DAST._IExpression _11944___mcc_h156 = _source424.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _11945___mcc_h157 = _source424.dtor_field;
          bool _11946___mcc_h158 = _source424.dtor_onDatatype;
          bool _11947___mcc_h159 = _source424.dtor_isStatic;
          BigInteger _11948___mcc_h160 = _source424.dtor_arity;
          bool _11949_isDatatype = _11684___mcc_h51;
          bool _11950_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11951_field = _11682___mcc_h49;
          DAST._IExpression _11952_on = _11681___mcc_h48;
          {
            RAST._IExpr _11953_onExpr;
            DCOMPUTF16._IOwnership _11954_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11955_recIdents;
            RAST._IExpr _out6627;
            DCOMPUTF16._IOwnership _out6628;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6629;
            DCOMPUTF16.COMP.GenExpr(_11952_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6627, out _out6628, out _out6629);
            _11953_onExpr = _out6627;
            _11954_onOwned = _out6628;
            _11955_recIdents = _out6629;
            if ((_11949_isDatatype) || (_11950_isConstant)) {
              r = ((_11953_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11951_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6630;
              DCOMPUTF16._IOwnership _out6631;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6630, out _out6631);
              r = _out6630;
              resultingOwnership = _out6631;
            } else {
              Dafny.ISequence<Dafny.Rune> _11956_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11956_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11953_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11951_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6632;
              DCOMPUTF16._IOwnership _out6633;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11956_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6632, out _out6633);
              r = _out6632;
              resultingOwnership = _out6633;
            }
            readIdents = _11955_recIdents;
            return ;
          }
        } else if (_source424.is_Index) {
          DAST._IExpression _11957___mcc_h166 = _source424.dtor_expr;
          DAST._ICollKind _11958___mcc_h167 = _source424.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _11959___mcc_h168 = _source424.dtor_indices;
          bool _11960_isDatatype = _11684___mcc_h51;
          bool _11961_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11962_field = _11682___mcc_h49;
          DAST._IExpression _11963_on = _11681___mcc_h48;
          {
            RAST._IExpr _11964_onExpr;
            DCOMPUTF16._IOwnership _11965_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11966_recIdents;
            RAST._IExpr _out6634;
            DCOMPUTF16._IOwnership _out6635;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6636;
            DCOMPUTF16.COMP.GenExpr(_11963_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6634, out _out6635, out _out6636);
            _11964_onExpr = _out6634;
            _11965_onOwned = _out6635;
            _11966_recIdents = _out6636;
            if ((_11960_isDatatype) || (_11961_isConstant)) {
              r = ((_11964_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11962_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6637;
              DCOMPUTF16._IOwnership _out6638;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6637, out _out6638);
              r = _out6637;
              resultingOwnership = _out6638;
            } else {
              Dafny.ISequence<Dafny.Rune> _11967_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11967_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11964_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11962_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6639;
              DCOMPUTF16._IOwnership _out6640;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11967_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6639, out _out6640);
              r = _out6639;
              resultingOwnership = _out6640;
            }
            readIdents = _11966_recIdents;
            return ;
          }
        } else if (_source424.is_IndexRange) {
          DAST._IExpression _11968___mcc_h172 = _source424.dtor_expr;
          bool _11969___mcc_h173 = _source424.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _11970___mcc_h174 = _source424.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _11971___mcc_h175 = _source424.dtor_high;
          bool _11972_isDatatype = _11684___mcc_h51;
          bool _11973_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11974_field = _11682___mcc_h49;
          DAST._IExpression _11975_on = _11681___mcc_h48;
          {
            RAST._IExpr _11976_onExpr;
            DCOMPUTF16._IOwnership _11977_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11978_recIdents;
            RAST._IExpr _out6641;
            DCOMPUTF16._IOwnership _out6642;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6643;
            DCOMPUTF16.COMP.GenExpr(_11975_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6641, out _out6642, out _out6643);
            _11976_onExpr = _out6641;
            _11977_onOwned = _out6642;
            _11978_recIdents = _out6643;
            if ((_11972_isDatatype) || (_11973_isConstant)) {
              r = ((_11976_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11974_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6644;
              DCOMPUTF16._IOwnership _out6645;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6644, out _out6645);
              r = _out6644;
              resultingOwnership = _out6645;
            } else {
              Dafny.ISequence<Dafny.Rune> _11979_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11979_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11976_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11974_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6646;
              DCOMPUTF16._IOwnership _out6647;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11979_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6646, out _out6647);
              r = _out6646;
              resultingOwnership = _out6647;
            }
            readIdents = _11978_recIdents;
            return ;
          }
        } else if (_source424.is_TupleSelect) {
          DAST._IExpression _11980___mcc_h180 = _source424.dtor_expr;
          BigInteger _11981___mcc_h181 = _source424.dtor_index;
          bool _11982_isDatatype = _11684___mcc_h51;
          bool _11983_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11984_field = _11682___mcc_h49;
          DAST._IExpression _11985_on = _11681___mcc_h48;
          {
            RAST._IExpr _11986_onExpr;
            DCOMPUTF16._IOwnership _11987_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11988_recIdents;
            RAST._IExpr _out6648;
            DCOMPUTF16._IOwnership _out6649;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6650;
            DCOMPUTF16.COMP.GenExpr(_11985_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6648, out _out6649, out _out6650);
            _11986_onExpr = _out6648;
            _11987_onOwned = _out6649;
            _11988_recIdents = _out6650;
            if ((_11982_isDatatype) || (_11983_isConstant)) {
              r = ((_11986_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11984_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6651;
              DCOMPUTF16._IOwnership _out6652;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6651, out _out6652);
              r = _out6651;
              resultingOwnership = _out6652;
            } else {
              Dafny.ISequence<Dafny.Rune> _11989_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _11989_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11986_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11984_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6653;
              DCOMPUTF16._IOwnership _out6654;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_11989_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6653, out _out6654);
              r = _out6653;
              resultingOwnership = _out6654;
            }
            readIdents = _11988_recIdents;
            return ;
          }
        } else if (_source424.is_Call) {
          DAST._IExpression _11990___mcc_h184 = _source424.dtor_on;
          DAST._ICallName _11991___mcc_h185 = _source424.dtor_callName;
          Dafny.ISequence<DAST._IType> _11992___mcc_h186 = _source424.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _11993___mcc_h187 = _source424.dtor_args;
          bool _11994_isDatatype = _11684___mcc_h51;
          bool _11995_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _11996_field = _11682___mcc_h49;
          DAST._IExpression _11997_on = _11681___mcc_h48;
          {
            RAST._IExpr _11998_onExpr;
            DCOMPUTF16._IOwnership _11999_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12000_recIdents;
            RAST._IExpr _out6655;
            DCOMPUTF16._IOwnership _out6656;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6657;
            DCOMPUTF16.COMP.GenExpr(_11997_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6655, out _out6656, out _out6657);
            _11998_onExpr = _out6655;
            _11999_onOwned = _out6656;
            _12000_recIdents = _out6657;
            if ((_11994_isDatatype) || (_11995_isConstant)) {
              r = ((_11998_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_11996_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6658;
              DCOMPUTF16._IOwnership _out6659;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6658, out _out6659);
              r = _out6658;
              resultingOwnership = _out6659;
            } else {
              Dafny.ISequence<Dafny.Rune> _12001_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12001_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_11998_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_11996_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6660;
              DCOMPUTF16._IOwnership _out6661;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12001_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6660, out _out6661);
              r = _out6660;
              resultingOwnership = _out6661;
            }
            readIdents = _12000_recIdents;
            return ;
          }
        } else if (_source424.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _12002___mcc_h192 = _source424.dtor_params;
          DAST._IType _12003___mcc_h193 = _source424.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _12004___mcc_h194 = _source424.dtor_body;
          bool _12005_isDatatype = _11684___mcc_h51;
          bool _12006_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12007_field = _11682___mcc_h49;
          DAST._IExpression _12008_on = _11681___mcc_h48;
          {
            RAST._IExpr _12009_onExpr;
            DCOMPUTF16._IOwnership _12010_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12011_recIdents;
            RAST._IExpr _out6662;
            DCOMPUTF16._IOwnership _out6663;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6664;
            DCOMPUTF16.COMP.GenExpr(_12008_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6662, out _out6663, out _out6664);
            _12009_onExpr = _out6662;
            _12010_onOwned = _out6663;
            _12011_recIdents = _out6664;
            if ((_12005_isDatatype) || (_12006_isConstant)) {
              r = ((_12009_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12007_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6665;
              DCOMPUTF16._IOwnership _out6666;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6665, out _out6666);
              r = _out6665;
              resultingOwnership = _out6666;
            } else {
              Dafny.ISequence<Dafny.Rune> _12012_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12012_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12009_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12007_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6667;
              DCOMPUTF16._IOwnership _out6668;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12012_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6667, out _out6668);
              r = _out6667;
              resultingOwnership = _out6668;
            }
            readIdents = _12011_recIdents;
            return ;
          }
        } else if (_source424.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _12013___mcc_h198 = _source424.dtor_values;
          DAST._IType _12014___mcc_h199 = _source424.dtor_retType;
          DAST._IExpression _12015___mcc_h200 = _source424.dtor_expr;
          bool _12016_isDatatype = _11684___mcc_h51;
          bool _12017_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12018_field = _11682___mcc_h49;
          DAST._IExpression _12019_on = _11681___mcc_h48;
          {
            RAST._IExpr _12020_onExpr;
            DCOMPUTF16._IOwnership _12021_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12022_recIdents;
            RAST._IExpr _out6669;
            DCOMPUTF16._IOwnership _out6670;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6671;
            DCOMPUTF16.COMP.GenExpr(_12019_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6669, out _out6670, out _out6671);
            _12020_onExpr = _out6669;
            _12021_onOwned = _out6670;
            _12022_recIdents = _out6671;
            if ((_12016_isDatatype) || (_12017_isConstant)) {
              r = ((_12020_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12018_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6672;
              DCOMPUTF16._IOwnership _out6673;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6672, out _out6673);
              r = _out6672;
              resultingOwnership = _out6673;
            } else {
              Dafny.ISequence<Dafny.Rune> _12023_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12023_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12020_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12018_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6674;
              DCOMPUTF16._IOwnership _out6675;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12023_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6674, out _out6675);
              r = _out6674;
              resultingOwnership = _out6675;
            }
            readIdents = _12022_recIdents;
            return ;
          }
        } else if (_source424.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _12024___mcc_h204 = _source424.dtor_name;
          DAST._IType _12025___mcc_h205 = _source424.dtor_typ;
          DAST._IExpression _12026___mcc_h206 = _source424.dtor_value;
          DAST._IExpression _12027___mcc_h207 = _source424.dtor_iifeBody;
          bool _12028_isDatatype = _11684___mcc_h51;
          bool _12029_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12030_field = _11682___mcc_h49;
          DAST._IExpression _12031_on = _11681___mcc_h48;
          {
            RAST._IExpr _12032_onExpr;
            DCOMPUTF16._IOwnership _12033_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12034_recIdents;
            RAST._IExpr _out6676;
            DCOMPUTF16._IOwnership _out6677;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6678;
            DCOMPUTF16.COMP.GenExpr(_12031_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6676, out _out6677, out _out6678);
            _12032_onExpr = _out6676;
            _12033_onOwned = _out6677;
            _12034_recIdents = _out6678;
            if ((_12028_isDatatype) || (_12029_isConstant)) {
              r = ((_12032_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12030_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6679;
              DCOMPUTF16._IOwnership _out6680;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6679, out _out6680);
              r = _out6679;
              resultingOwnership = _out6680;
            } else {
              Dafny.ISequence<Dafny.Rune> _12035_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12035_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12032_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12030_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6681;
              DCOMPUTF16._IOwnership _out6682;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12035_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6681, out _out6682);
              r = _out6681;
              resultingOwnership = _out6682;
            }
            readIdents = _12034_recIdents;
            return ;
          }
        } else if (_source424.is_Apply) {
          DAST._IExpression _12036___mcc_h212 = _source424.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _12037___mcc_h213 = _source424.dtor_args;
          bool _12038_isDatatype = _11684___mcc_h51;
          bool _12039_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12040_field = _11682___mcc_h49;
          DAST._IExpression _12041_on = _11681___mcc_h48;
          {
            RAST._IExpr _12042_onExpr;
            DCOMPUTF16._IOwnership _12043_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12044_recIdents;
            RAST._IExpr _out6683;
            DCOMPUTF16._IOwnership _out6684;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6685;
            DCOMPUTF16.COMP.GenExpr(_12041_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6683, out _out6684, out _out6685);
            _12042_onExpr = _out6683;
            _12043_onOwned = _out6684;
            _12044_recIdents = _out6685;
            if ((_12038_isDatatype) || (_12039_isConstant)) {
              r = ((_12042_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12040_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6686;
              DCOMPUTF16._IOwnership _out6687;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6686, out _out6687);
              r = _out6686;
              resultingOwnership = _out6687;
            } else {
              Dafny.ISequence<Dafny.Rune> _12045_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12045_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12042_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12040_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6688;
              DCOMPUTF16._IOwnership _out6689;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12045_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6688, out _out6689);
              r = _out6688;
              resultingOwnership = _out6689;
            }
            readIdents = _12044_recIdents;
            return ;
          }
        } else if (_source424.is_TypeTest) {
          DAST._IExpression _12046___mcc_h216 = _source424.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12047___mcc_h217 = _source424.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _12048___mcc_h218 = _source424.dtor_variant;
          bool _12049_isDatatype = _11684___mcc_h51;
          bool _12050_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12051_field = _11682___mcc_h49;
          DAST._IExpression _12052_on = _11681___mcc_h48;
          {
            RAST._IExpr _12053_onExpr;
            DCOMPUTF16._IOwnership _12054_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12055_recIdents;
            RAST._IExpr _out6690;
            DCOMPUTF16._IOwnership _out6691;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6692;
            DCOMPUTF16.COMP.GenExpr(_12052_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6690, out _out6691, out _out6692);
            _12053_onExpr = _out6690;
            _12054_onOwned = _out6691;
            _12055_recIdents = _out6692;
            if ((_12049_isDatatype) || (_12050_isConstant)) {
              r = ((_12053_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12051_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6693;
              DCOMPUTF16._IOwnership _out6694;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6693, out _out6694);
              r = _out6693;
              resultingOwnership = _out6694;
            } else {
              Dafny.ISequence<Dafny.Rune> _12056_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12056_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12053_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12051_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6695;
              DCOMPUTF16._IOwnership _out6696;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12056_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6695, out _out6696);
              r = _out6695;
              resultingOwnership = _out6696;
            }
            readIdents = _12055_recIdents;
            return ;
          }
        } else if (_source424.is_InitializationValue) {
          DAST._IType _12057___mcc_h222 = _source424.dtor_typ;
          bool _12058_isDatatype = _11684___mcc_h51;
          bool _12059_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12060_field = _11682___mcc_h49;
          DAST._IExpression _12061_on = _11681___mcc_h48;
          {
            RAST._IExpr _12062_onExpr;
            DCOMPUTF16._IOwnership _12063_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12064_recIdents;
            RAST._IExpr _out6697;
            DCOMPUTF16._IOwnership _out6698;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6699;
            DCOMPUTF16.COMP.GenExpr(_12061_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6697, out _out6698, out _out6699);
            _12062_onExpr = _out6697;
            _12063_onOwned = _out6698;
            _12064_recIdents = _out6699;
            if ((_12058_isDatatype) || (_12059_isConstant)) {
              r = ((_12062_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12060_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6700;
              DCOMPUTF16._IOwnership _out6701;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6700, out _out6701);
              r = _out6700;
              resultingOwnership = _out6701;
            } else {
              Dafny.ISequence<Dafny.Rune> _12065_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12065_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12062_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12060_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6702;
              DCOMPUTF16._IOwnership _out6703;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12065_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6702, out _out6703);
              r = _out6702;
              resultingOwnership = _out6703;
            }
            readIdents = _12064_recIdents;
            return ;
          }
        } else if (_source424.is_BoolBoundedPool) {
          bool _12066_isDatatype = _11684___mcc_h51;
          bool _12067_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12068_field = _11682___mcc_h49;
          DAST._IExpression _12069_on = _11681___mcc_h48;
          {
            RAST._IExpr _12070_onExpr;
            DCOMPUTF16._IOwnership _12071_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12072_recIdents;
            RAST._IExpr _out6704;
            DCOMPUTF16._IOwnership _out6705;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6706;
            DCOMPUTF16.COMP.GenExpr(_12069_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6704, out _out6705, out _out6706);
            _12070_onExpr = _out6704;
            _12071_onOwned = _out6705;
            _12072_recIdents = _out6706;
            if ((_12066_isDatatype) || (_12067_isConstant)) {
              r = ((_12070_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12068_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6707;
              DCOMPUTF16._IOwnership _out6708;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6707, out _out6708);
              r = _out6707;
              resultingOwnership = _out6708;
            } else {
              Dafny.ISequence<Dafny.Rune> _12073_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12073_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12070_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12068_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6709;
              DCOMPUTF16._IOwnership _out6710;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12073_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6709, out _out6710);
              r = _out6709;
              resultingOwnership = _out6710;
            }
            readIdents = _12072_recIdents;
            return ;
          }
        } else if (_source424.is_SetBoundedPool) {
          DAST._IExpression _12074___mcc_h224 = _source424.dtor_of;
          bool _12075_isDatatype = _11684___mcc_h51;
          bool _12076_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12077_field = _11682___mcc_h49;
          DAST._IExpression _12078_on = _11681___mcc_h48;
          {
            RAST._IExpr _12079_onExpr;
            DCOMPUTF16._IOwnership _12080_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12081_recIdents;
            RAST._IExpr _out6711;
            DCOMPUTF16._IOwnership _out6712;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6713;
            DCOMPUTF16.COMP.GenExpr(_12078_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6711, out _out6712, out _out6713);
            _12079_onExpr = _out6711;
            _12080_onOwned = _out6712;
            _12081_recIdents = _out6713;
            if ((_12075_isDatatype) || (_12076_isConstant)) {
              r = ((_12079_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12077_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6714;
              DCOMPUTF16._IOwnership _out6715;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6714, out _out6715);
              r = _out6714;
              resultingOwnership = _out6715;
            } else {
              Dafny.ISequence<Dafny.Rune> _12082_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12082_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12079_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12077_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6716;
              DCOMPUTF16._IOwnership _out6717;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12082_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6716, out _out6717);
              r = _out6716;
              resultingOwnership = _out6717;
            }
            readIdents = _12081_recIdents;
            return ;
          }
        } else if (_source424.is_SeqBoundedPool) {
          DAST._IExpression _12083___mcc_h226 = _source424.dtor_of;
          bool _12084___mcc_h227 = _source424.dtor_includeDuplicates;
          bool _12085_isDatatype = _11684___mcc_h51;
          bool _12086_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12087_field = _11682___mcc_h49;
          DAST._IExpression _12088_on = _11681___mcc_h48;
          {
            RAST._IExpr _12089_onExpr;
            DCOMPUTF16._IOwnership _12090_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12091_recIdents;
            RAST._IExpr _out6718;
            DCOMPUTF16._IOwnership _out6719;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6720;
            DCOMPUTF16.COMP.GenExpr(_12088_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6718, out _out6719, out _out6720);
            _12089_onExpr = _out6718;
            _12090_onOwned = _out6719;
            _12091_recIdents = _out6720;
            if ((_12085_isDatatype) || (_12086_isConstant)) {
              r = ((_12089_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12087_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6721;
              DCOMPUTF16._IOwnership _out6722;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6721, out _out6722);
              r = _out6721;
              resultingOwnership = _out6722;
            } else {
              Dafny.ISequence<Dafny.Rune> _12092_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12092_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12089_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12087_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6723;
              DCOMPUTF16._IOwnership _out6724;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12092_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6723, out _out6724);
              r = _out6723;
              resultingOwnership = _out6724;
            }
            readIdents = _12091_recIdents;
            return ;
          }
        } else {
          DAST._IExpression _12093___mcc_h230 = _source424.dtor_lo;
          DAST._IExpression _12094___mcc_h231 = _source424.dtor_hi;
          bool _12095_isDatatype = _11684___mcc_h51;
          bool _12096_isConstant = _11683___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12097_field = _11682___mcc_h49;
          DAST._IExpression _12098_on = _11681___mcc_h48;
          {
            RAST._IExpr _12099_onExpr;
            DCOMPUTF16._IOwnership _12100_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12101_recIdents;
            RAST._IExpr _out6725;
            DCOMPUTF16._IOwnership _out6726;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6727;
            DCOMPUTF16.COMP.GenExpr(_12098_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6725, out _out6726, out _out6727);
            _12099_onExpr = _out6725;
            _12100_onOwned = _out6726;
            _12101_recIdents = _out6727;
            if ((_12095_isDatatype) || (_12096_isConstant)) {
              r = ((_12099_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12097_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out6728;
              DCOMPUTF16._IOwnership _out6729;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6728, out _out6729);
              r = _out6728;
              resultingOwnership = _out6729;
            } else {
              Dafny.ISequence<Dafny.Rune> _12102_s = Dafny.Sequence<Dafny.Rune>.Empty;
              _12102_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&(("), (_12099_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent(_12097_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow()))"));
              RAST._IExpr _out6730;
              DCOMPUTF16._IOwnership _out6731;
              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_RawExpr(_12102_s), DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out6730, out _out6731);
              r = _out6730;
              resultingOwnership = _out6731;
            }
            readIdents = _12101_recIdents;
            return ;
          }
        }
      } else if (_source421.is_SelectFn) {
        DAST._IExpression _12103___mcc_h234 = _source421.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _12104___mcc_h235 = _source421.dtor_field;
        bool _12105___mcc_h236 = _source421.dtor_onDatatype;
        bool _12106___mcc_h237 = _source421.dtor_isStatic;
        BigInteger _12107___mcc_h238 = _source421.dtor_arity;
        BigInteger _12108_arity = _12107___mcc_h238;
        bool _12109_isStatic = _12106___mcc_h237;
        bool _12110_isDatatype = _12105___mcc_h236;
        Dafny.ISequence<Dafny.Rune> _12111_field = _12104___mcc_h235;
        DAST._IExpression _12112_on = _12103___mcc_h234;
        {
          RAST._IExpr _12113_onExpr;
          DCOMPUTF16._IOwnership _12114_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12115_recIdents;
          RAST._IExpr _out6732;
          DCOMPUTF16._IOwnership _out6733;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6734;
          DCOMPUTF16.COMP.GenExpr(_12112_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6732, out _out6733, out _out6734);
          _12113_onExpr = _out6732;
          _12114_onOwned = _out6733;
          _12115_recIdents = _out6734;
          Dafny.ISequence<Dafny.Rune> _12116_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _12117_onString;
          _12117_onString = (_12113_onExpr)._ToString(DCOMPUTF16.__default.IND);
          if (_12109_isStatic) {
            _12116_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12117_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent(_12111_field));
          } else {
            _12116_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _12116_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12116_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _12117_onString), ((object.Equals(_12114_onOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _12118_args;
            _12118_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _12119_i;
            _12119_i = BigInteger.Zero;
            while ((_12119_i) < (_12108_arity)) {
              if ((_12119_i).Sign == 1) {
                _12118_args = Dafny.Sequence<Dafny.Rune>.Concat(_12118_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _12118_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12118_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_12119_i));
              _12119_i = (_12119_i) + (BigInteger.One);
            }
            _12116_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12116_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _12118_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _12116_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12116_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), _12111_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _12118_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _12116_s = Dafny.Sequence<Dafny.Rune>.Concat(_12116_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _12116_s = Dafny.Sequence<Dafny.Rune>.Concat(_12116_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _12120_typeShape;
          _12120_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _12121_i;
          _12121_i = BigInteger.Zero;
          while ((_12121_i) < (_12108_arity)) {
            if ((_12121_i).Sign == 1) {
              _12120_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_12120_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _12120_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_12120_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _12121_i = (_12121_i) + (BigInteger.One);
          }
          _12120_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_12120_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _12116_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper(::std::rc::Rc::new("), _12116_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _12120_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">)"));
          r = RAST.Expr.create_RawExpr(_12116_s);
          RAST._IExpr _out6735;
          DCOMPUTF16._IOwnership _out6736;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6735, out _out6736);
          r = _out6735;
          resultingOwnership = _out6736;
          readIdents = _12115_recIdents;
          return ;
        }
      } else if (_source421.is_Index) {
        DAST._IExpression _12122___mcc_h239 = _source421.dtor_expr;
        DAST._ICollKind _12123___mcc_h240 = _source421.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _12124___mcc_h241 = _source421.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _12125_indices = _12124___mcc_h241;
        DAST._ICollKind _12126_collKind = _12123___mcc_h240;
        DAST._IExpression _12127_on = _12122___mcc_h239;
        {
          RAST._IExpr _12128_onExpr;
          DCOMPUTF16._IOwnership _12129_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12130_recIdents;
          RAST._IExpr _out6737;
          DCOMPUTF16._IOwnership _out6738;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6739;
          DCOMPUTF16.COMP.GenExpr(_12127_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6737, out _out6738, out _out6739);
          _12128_onExpr = _out6737;
          _12129_onOwned = _out6738;
          _12130_recIdents = _out6739;
          readIdents = _12130_recIdents;
          r = _12128_onExpr;
          BigInteger _12131_i;
          _12131_i = BigInteger.Zero;
          while ((_12131_i) < (new BigInteger((_12125_indices).Count))) {
            if (object.Equals(_12126_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _12132_idx;
            DCOMPUTF16._IOwnership _12133_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12134_recIdentsIdx;
            RAST._IExpr _out6740;
            DCOMPUTF16._IOwnership _out6741;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6742;
            DCOMPUTF16.COMP.GenExpr((_12125_indices).Select(_12131_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6740, out _out6741, out _out6742);
            _12132_idx = _out6740;
            _12133_idxOwned = _out6741;
            _12134_recIdentsIdx = _out6742;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_12132_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12134_recIdentsIdx);
            _12131_i = (_12131_i) + (BigInteger.One);
          }
          RAST._IExpr _out6743;
          DCOMPUTF16._IOwnership _out6744;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6743, out _out6744);
          r = _out6743;
          resultingOwnership = _out6744;
          return ;
        }
      } else if (_source421.is_IndexRange) {
        DAST._IExpression _12135___mcc_h242 = _source421.dtor_expr;
        bool _12136___mcc_h243 = _source421.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _12137___mcc_h244 = _source421.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _12138___mcc_h245 = _source421.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _12139_high = _12138___mcc_h245;
        Std.Wrappers._IOption<DAST._IExpression> _12140_low = _12137___mcc_h244;
        bool _12141_isArray = _12136___mcc_h243;
        DAST._IExpression _12142_on = _12135___mcc_h242;
        {
          RAST._IExpr _12143_onExpr;
          DCOMPUTF16._IOwnership _12144_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12145_recIdents;
          RAST._IExpr _out6745;
          DCOMPUTF16._IOwnership _out6746;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6747;
          DCOMPUTF16.COMP.GenExpr(_12142_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6745, out _out6746, out _out6747);
          _12143_onExpr = _out6745;
          _12144_onOwned = _out6746;
          _12145_recIdents = _out6747;
          readIdents = _12145_recIdents;
          Dafny.ISequence<Dafny.Rune> _12146_methodName;
          _12146_methodName = (((_12140_low).is_Some) ? ((((_12139_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_12139_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _12147_arguments;
          _12147_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source425 = _12140_low;
          if (_source425.is_None) {
          } else {
            DAST._IExpression _12148___mcc_h274 = _source425.dtor_value;
            DAST._IExpression _12149_l = _12148___mcc_h274;
            {
              RAST._IExpr _12150_lExpr;
              DCOMPUTF16._IOwnership _12151___v135;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12152_recIdentsL;
              RAST._IExpr _out6748;
              DCOMPUTF16._IOwnership _out6749;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6750;
              DCOMPUTF16.COMP.GenExpr(_12149_l, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6748, out _out6749, out _out6750);
              _12150_lExpr = _out6748;
              _12151___v135 = _out6749;
              _12152_recIdentsL = _out6750;
              _12147_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_12147_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_12150_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12152_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source426 = _12139_high;
          if (_source426.is_None) {
          } else {
            DAST._IExpression _12153___mcc_h275 = _source426.dtor_value;
            DAST._IExpression _12154_h = _12153___mcc_h275;
            {
              RAST._IExpr _12155_hExpr;
              DCOMPUTF16._IOwnership _12156___v136;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12157_recIdentsH;
              RAST._IExpr _out6751;
              DCOMPUTF16._IOwnership _out6752;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6753;
              DCOMPUTF16.COMP.GenExpr(_12154_h, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6751, out _out6752, out _out6753);
              _12155_hExpr = _out6751;
              _12156___v136 = _out6752;
              _12157_recIdentsH = _out6753;
              _12147_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_12147_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_12155_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12157_recIdentsH);
            }
          }
          r = _12143_onExpr;
          if (_12141_isArray) {
            if (!(_12146_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _12146_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _12146_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _12146_methodName))).Apply(_12147_arguments);
          } else {
            if (!(_12146_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_12146_methodName)).Apply(_12147_arguments);
            }
          }
          RAST._IExpr _out6754;
          DCOMPUTF16._IOwnership _out6755;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6754, out _out6755);
          r = _out6754;
          resultingOwnership = _out6755;
          return ;
        }
      } else if (_source421.is_TupleSelect) {
        DAST._IExpression _12158___mcc_h246 = _source421.dtor_expr;
        BigInteger _12159___mcc_h247 = _source421.dtor_index;
        BigInteger _12160_idx = _12159___mcc_h247;
        DAST._IExpression _12161_on = _12158___mcc_h246;
        {
          RAST._IExpr _12162_onExpr;
          DCOMPUTF16._IOwnership _12163_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12164_recIdents;
          RAST._IExpr _out6756;
          DCOMPUTF16._IOwnership _out6757;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6758;
          DCOMPUTF16.COMP.GenExpr(_12161_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6756, out _out6757, out _out6758);
          _12162_onExpr = _out6756;
          _12163_onOwnership = _out6757;
          _12164_recIdents = _out6758;
          r = (_12162_onExpr).Sel(Std.Strings.__default.OfNat(_12160_idx));
          RAST._IExpr _out6759;
          DCOMPUTF16._IOwnership _out6760;
          DCOMPUTF16.COMP.FromOwnership(r, _12163_onOwnership, expectedOwnership, out _out6759, out _out6760);
          r = _out6759;
          resultingOwnership = _out6760;
          readIdents = _12164_recIdents;
          return ;
        }
      } else if (_source421.is_Call) {
        DAST._IExpression _12165___mcc_h248 = _source421.dtor_on;
        DAST._ICallName _12166___mcc_h249 = _source421.dtor_callName;
        Dafny.ISequence<DAST._IType> _12167___mcc_h250 = _source421.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _12168___mcc_h251 = _source421.dtor_args;
        Dafny.ISequence<DAST._IExpression> _12169_args = _12168___mcc_h251;
        Dafny.ISequence<DAST._IType> _12170_typeArgs = _12167___mcc_h250;
        DAST._ICallName _12171_name = _12166___mcc_h249;
        DAST._IExpression _12172_on = _12165___mcc_h248;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _12173_onExpr;
          DCOMPUTF16._IOwnership _12174___v137;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12175_recIdents;
          RAST._IExpr _out6761;
          DCOMPUTF16._IOwnership _out6762;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6763;
          DCOMPUTF16.COMP.GenExpr(_12172_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6761, out _out6762, out _out6763);
          _12173_onExpr = _out6761;
          _12174___v137 = _out6762;
          _12175_recIdents = _out6763;
          Dafny.ISequence<RAST._IType> _12176_typeExprs;
          _12176_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_12170_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi32 = new BigInteger((_12170_typeArgs).Count);
            for (BigInteger _12177_typeI = BigInteger.Zero; _12177_typeI < _hi32; _12177_typeI++) {
              RAST._IType _12178_typeExpr;
              RAST._IType _out6764;
              _out6764 = DCOMPUTF16.COMP.GenType((_12170_typeArgs).Select(_12177_typeI), false, false);
              _12178_typeExpr = _out6764;
              _12176_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_12176_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_12178_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _12179_argExprs;
          _12179_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi33 = new BigInteger((_12169_args).Count);
          for (BigInteger _12180_i = BigInteger.Zero; _12180_i < _hi33; _12180_i++) {
            DCOMPUTF16._IOwnership _12181_argOwnership;
            _12181_argOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
            if (((_12171_name).is_Name) && ((_12180_i) < (new BigInteger((((_12171_name).dtor_signature)).Count)))) {
              RAST._IType _12182_tpe;
              RAST._IType _out6765;
              _out6765 = DCOMPUTF16.COMP.GenType(((((_12171_name).dtor_signature)).Select(_12180_i)).dtor_typ, false, false);
              _12182_tpe = _out6765;
              if ((_12182_tpe).HasCopySemantics()) {
                _12181_argOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _12183_argExpr;
            DCOMPUTF16._IOwnership _12184___v138;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12185_argIdents;
            RAST._IExpr _out6766;
            DCOMPUTF16._IOwnership _out6767;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6768;
            DCOMPUTF16.COMP.GenExpr((_12169_args).Select(_12180_i), selfIdent, env, _12181_argOwnership, out _out6766, out _out6767, out _out6768);
            _12183_argExpr = _out6766;
            _12184___v138 = _out6767;
            _12185_argIdents = _out6768;
            _12179_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_12179_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_12183_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12185_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12175_recIdents);
          Dafny.ISequence<Dafny.Rune> _12186_renderedName;
          _12186_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source427) => {
            if (_source427.is_Name) {
              Dafny.ISequence<Dafny.Rune> _12187___mcc_h276 = _source427.dtor_name;
              Dafny.ISequence<DAST._IFormal> _12188___mcc_h277 = _source427.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _12189_ident = _12187___mcc_h276;
              return DCOMPUTF16.__default.escapeIdent(_12189_ident);
            } else if (_source427.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source427.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source427.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_12171_name);
          DAST._IExpression _source428 = _12172_on;
          if (_source428.is_Literal) {
            DAST._ILiteral _12190___mcc_h278 = _source428.dtor_Literal_a0;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _12191___mcc_h280 = _source428.dtor_Ident_a0;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12192___mcc_h282 = _source428.dtor_Companion_a0;
            {
              _12173_onExpr = (_12173_onExpr).MSel(_12186_renderedName);
            }
          } else if (_source428.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _12193___mcc_h284 = _source428.dtor_Tuple_a0;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12194___mcc_h286 = _source428.dtor_path;
            Dafny.ISequence<DAST._IType> _12195___mcc_h287 = _source428.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _12196___mcc_h288 = _source428.dtor_args;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _12197___mcc_h292 = _source428.dtor_dims;
            DAST._IType _12198___mcc_h293 = _source428.dtor_typ;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_DatatypeValue) {
            DAST._IDatatypeType _12199___mcc_h296 = _source428.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _12200___mcc_h297 = _source428.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _12201___mcc_h298 = _source428.dtor_variant;
            bool _12202___mcc_h299 = _source428.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _12203___mcc_h300 = _source428.dtor_contents;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_Convert) {
            DAST._IExpression _12204___mcc_h306 = _source428.dtor_value;
            DAST._IType _12205___mcc_h307 = _source428.dtor_from;
            DAST._IType _12206___mcc_h308 = _source428.dtor_typ;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_SeqConstruct) {
            DAST._IExpression _12207___mcc_h312 = _source428.dtor_length;
            DAST._IExpression _12208___mcc_h313 = _source428.dtor_elem;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _12209___mcc_h316 = _source428.dtor_elements;
            DAST._IType _12210___mcc_h317 = _source428.dtor_typ;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _12211___mcc_h320 = _source428.dtor_elements;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _12212___mcc_h322 = _source428.dtor_elements;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _12213___mcc_h324 = _source428.dtor_mapElems;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_MapBuilder) {
            DAST._IType _12214___mcc_h326 = _source428.dtor_keyType;
            DAST._IType _12215___mcc_h327 = _source428.dtor_valueType;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_SeqUpdate) {
            DAST._IExpression _12216___mcc_h330 = _source428.dtor_expr;
            DAST._IExpression _12217___mcc_h331 = _source428.dtor_indexExpr;
            DAST._IExpression _12218___mcc_h332 = _source428.dtor_value;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_MapUpdate) {
            DAST._IExpression _12219___mcc_h336 = _source428.dtor_expr;
            DAST._IExpression _12220___mcc_h337 = _source428.dtor_indexExpr;
            DAST._IExpression _12221___mcc_h338 = _source428.dtor_value;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_SetBuilder) {
            DAST._IType _12222___mcc_h342 = _source428.dtor_elemType;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_ToMultiset) {
            DAST._IExpression _12223___mcc_h344 = _source428.dtor_ToMultiset_a0;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_This) {
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_Ite) {
            DAST._IExpression _12224___mcc_h346 = _source428.dtor_cond;
            DAST._IExpression _12225___mcc_h347 = _source428.dtor_thn;
            DAST._IExpression _12226___mcc_h348 = _source428.dtor_els;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_UnOp) {
            DAST._IUnaryOp _12227___mcc_h352 = _source428.dtor_unOp;
            DAST._IExpression _12228___mcc_h353 = _source428.dtor_expr;
            DAST.Format._IUnOpFormat _12229___mcc_h354 = _source428.dtor_format1;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_BinOp) {
            DAST._IBinOp _12230___mcc_h358 = _source428.dtor_op;
            DAST._IExpression _12231___mcc_h359 = _source428.dtor_left;
            DAST._IExpression _12232___mcc_h360 = _source428.dtor_right;
            DAST.Format._IBinOpFormat _12233___mcc_h361 = _source428.dtor_format2;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_ArrayLen) {
            DAST._IExpression _12234___mcc_h366 = _source428.dtor_expr;
            BigInteger _12235___mcc_h367 = _source428.dtor_dim;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_MapKeys) {
            DAST._IExpression _12236___mcc_h370 = _source428.dtor_expr;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_MapValues) {
            DAST._IExpression _12237___mcc_h372 = _source428.dtor_expr;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_Select) {
            DAST._IExpression _12238___mcc_h374 = _source428.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _12239___mcc_h375 = _source428.dtor_field;
            bool _12240___mcc_h376 = _source428.dtor_isConstant;
            bool _12241___mcc_h377 = _source428.dtor_onDatatype;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_SelectFn) {
            DAST._IExpression _12242___mcc_h382 = _source428.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _12243___mcc_h383 = _source428.dtor_field;
            bool _12244___mcc_h384 = _source428.dtor_onDatatype;
            bool _12245___mcc_h385 = _source428.dtor_isStatic;
            BigInteger _12246___mcc_h386 = _source428.dtor_arity;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_Index) {
            DAST._IExpression _12247___mcc_h392 = _source428.dtor_expr;
            DAST._ICollKind _12248___mcc_h393 = _source428.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _12249___mcc_h394 = _source428.dtor_indices;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_IndexRange) {
            DAST._IExpression _12250___mcc_h398 = _source428.dtor_expr;
            bool _12251___mcc_h399 = _source428.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _12252___mcc_h400 = _source428.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _12253___mcc_h401 = _source428.dtor_high;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_TupleSelect) {
            DAST._IExpression _12254___mcc_h406 = _source428.dtor_expr;
            BigInteger _12255___mcc_h407 = _source428.dtor_index;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_Call) {
            DAST._IExpression _12256___mcc_h410 = _source428.dtor_on;
            DAST._ICallName _12257___mcc_h411 = _source428.dtor_callName;
            Dafny.ISequence<DAST._IType> _12258___mcc_h412 = _source428.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _12259___mcc_h413 = _source428.dtor_args;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _12260___mcc_h418 = _source428.dtor_params;
            DAST._IType _12261___mcc_h419 = _source428.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _12262___mcc_h420 = _source428.dtor_body;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _12263___mcc_h424 = _source428.dtor_values;
            DAST._IType _12264___mcc_h425 = _source428.dtor_retType;
            DAST._IExpression _12265___mcc_h426 = _source428.dtor_expr;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _12266___mcc_h430 = _source428.dtor_name;
            DAST._IType _12267___mcc_h431 = _source428.dtor_typ;
            DAST._IExpression _12268___mcc_h432 = _source428.dtor_value;
            DAST._IExpression _12269___mcc_h433 = _source428.dtor_iifeBody;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_Apply) {
            DAST._IExpression _12270___mcc_h438 = _source428.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _12271___mcc_h439 = _source428.dtor_args;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_TypeTest) {
            DAST._IExpression _12272___mcc_h442 = _source428.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12273___mcc_h443 = _source428.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _12274___mcc_h444 = _source428.dtor_variant;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_InitializationValue) {
            DAST._IType _12275___mcc_h448 = _source428.dtor_typ;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_BoolBoundedPool) {
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_SetBoundedPool) {
            DAST._IExpression _12276___mcc_h450 = _source428.dtor_of;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else if (_source428.is_SeqBoundedPool) {
            DAST._IExpression _12277___mcc_h452 = _source428.dtor_of;
            bool _12278___mcc_h453 = _source428.dtor_includeDuplicates;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          } else {
            DAST._IExpression _12279___mcc_h456 = _source428.dtor_lo;
            DAST._IExpression _12280___mcc_h457 = _source428.dtor_hi;
            {
              _12173_onExpr = (_12173_onExpr).Sel(_12186_renderedName);
            }
          }
          r = _12173_onExpr;
          if ((new BigInteger((_12176_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_12176_typeExprs);
          }
          r = (r).Apply(_12179_argExprs);
          RAST._IExpr _out6769;
          DCOMPUTF16._IOwnership _out6770;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6769, out _out6770);
          r = _out6769;
          resultingOwnership = _out6770;
          return ;
        }
      } else if (_source421.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _12281___mcc_h252 = _source421.dtor_params;
        DAST._IType _12282___mcc_h253 = _source421.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _12283___mcc_h254 = _source421.dtor_body;
        Dafny.ISequence<DAST._IStatement> _12284_body = _12283___mcc_h254;
        DAST._IType _12285_retType = _12282___mcc_h253;
        Dafny.ISequence<DAST._IFormal> _12286_paramsDafny = _12281___mcc_h252;
        {
          Dafny.ISequence<RAST._IFormal> _12287_params;
          Dafny.ISequence<RAST._IFormal> _out6771;
          _out6771 = DCOMPUTF16.COMP.GenParams(_12286_paramsDafny);
          _12287_params = _out6771;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12288_paramNames;
          _12288_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _12289_paramTypesMap;
          _12289_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi34 = new BigInteger((_12287_params).Count);
          for (BigInteger _12290_i = BigInteger.Zero; _12290_i < _hi34; _12290_i++) {
            Dafny.ISequence<Dafny.Rune> _12291_name;
            _12291_name = ((_12287_params).Select(_12290_i)).dtor_name;
            _12288_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_12288_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_12291_name));
            _12289_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_12289_paramTypesMap, _12291_name, ((_12287_params).Select(_12290_i)).dtor_tpe);
          }
          DCOMPUTF16._IEnvironment _12292_env;
          _12292_env = DCOMPUTF16.Environment.create(_12288_paramNames, _12289_paramTypesMap);
          RAST._IExpr _12293_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12294_recIdents;
          DCOMPUTF16._IEnvironment _12295___v142;
          RAST._IExpr _out6772;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6773;
          DCOMPUTF16._IEnvironment _out6774;
          DCOMPUTF16.COMP.GenStmts(_12284_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _12292_env, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out6772, out _out6773, out _out6774);
          _12293_recursiveGen = _out6772;
          _12294_recIdents = _out6773;
          _12295___v142 = _out6774;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _12296_allReadCloned;
          _12296_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          while (!(_12294_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _12297_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_5 in (_12294_recIdents).Elements) {
              _12297_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_5;
              if ((_12294_recIdents).Contains(_12297_next)) {
                goto after__ASSIGN_SUCH_THAT_5;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 3413)");
          after__ASSIGN_SUCH_THAT_5: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_12297_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
                _12296_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(_12296_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let _this = self.clone();\n"));
              }
            } else if (!((_12288_paramNames).Contains(_12297_next))) {
              _12296_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12296_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent(_12297_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMPUTF16.__default.escapeIdent(_12297_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_12297_next));
            }
            _12294_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_12294_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_12297_next));
          }
          Dafny.ISequence<Dafny.Rune> _12298_paramsString;
          _12298_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          Dafny.ISequence<Dafny.Rune> _12299_paramTypes;
          _12299_paramTypes = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi35 = new BigInteger((_12287_params).Count);
          for (BigInteger _12300_i = BigInteger.Zero; _12300_i < _hi35; _12300_i++) {
            if ((_12300_i).Sign == 1) {
              _12298_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_12298_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              _12299_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_12299_paramTypes, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _12298_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12298_paramsString, DCOMPUTF16.__default.escapeIdent(((_12287_params).Select(_12300_i)).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (RAST.Type.create_Borrowed(((_12287_params).Select(_12300_i)).dtor_tpe))._ToString(DCOMPUTF16.__default.IND));
            _12299_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_12299_paramTypes, (RAST.Type.create_Borrowed(((_12287_params).Select(_12300_i)).dtor_tpe))._ToString(DCOMPUTF16.__default.IND));
          }
          RAST._IType _12301_retTypeGen;
          RAST._IType _out6775;
          _out6775 = DCOMPUTF16.COMP.GenType(_12285_retType, false, true);
          _12301_retTypeGen = _out6775;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper::<::std::rc::Rc<dyn ::std::ops::Fn("), _12299_paramTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_12301_retTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>({\n")), _12296_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(move |")), _12298_paramsString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| -> ")), (_12301_retTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), (_12293_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})})")));
          RAST._IExpr _out6776;
          DCOMPUTF16._IOwnership _out6777;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6776, out _out6777);
          r = _out6776;
          resultingOwnership = _out6777;
          return ;
        }
      } else if (_source421.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _12302___mcc_h255 = _source421.dtor_values;
        DAST._IType _12303___mcc_h256 = _source421.dtor_retType;
        DAST._IExpression _12304___mcc_h257 = _source421.dtor_expr;
        DAST._IExpression _12305_expr = _12304___mcc_h257;
        DAST._IType _12306_retType = _12303___mcc_h256;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _12307_values = _12302___mcc_h255;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12308_paramNames;
          _12308_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _12309_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out6778;
          _out6778 = DCOMPUTF16.COMP.GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_12310_value) => {
            return (_12310_value).dtor__0;
          })), _12307_values));
          _12309_paramFormals = _out6778;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _12311_paramTypes;
          _12311_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12312_paramNamesSet;
          _12312_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi36 = new BigInteger((_12307_values).Count);
          for (BigInteger _12313_i = BigInteger.Zero; _12313_i < _hi36; _12313_i++) {
            Dafny.ISequence<Dafny.Rune> _12314_name;
            _12314_name = (((_12307_values).Select(_12313_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _12315_rName;
            _12315_rName = DCOMPUTF16.__default.escapeIdent(_12314_name);
            _12308_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_12308_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_12315_rName));
            _12311_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_12311_paramTypes, _12315_rName, ((_12309_paramFormals).Select(_12313_i)).dtor_tpe);
            _12312_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_12312_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_12314_name));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _12316_s;
          _12316_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          Dafny.ISequence<Dafny.Rune> _12317_paramsString;
          _12317_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi37 = new BigInteger((_12307_values).Count);
          for (BigInteger _12318_i = BigInteger.Zero; _12318_i < _hi37; _12318_i++) {
            if ((_12318_i).Sign == 1) {
              _12317_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_12317_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IType _12319_typStr;
            RAST._IType _out6779;
            _out6779 = DCOMPUTF16.COMP.GenType((((_12307_values).Select(_12318_i)).dtor__0).dtor_typ, false, true);
            _12319_typStr = _out6779;
            RAST._IExpr _12320_valueGen;
            DCOMPUTF16._IOwnership _12321___v143;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12322_recIdents;
            RAST._IExpr _out6780;
            DCOMPUTF16._IOwnership _out6781;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6782;
            DCOMPUTF16.COMP.GenExpr(((_12307_values).Select(_12318_i)).dtor__1, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6780, out _out6781, out _out6782);
            _12320_valueGen = _out6780;
            _12321___v143 = _out6781;
            _12322_recIdents = _out6782;
            _12316_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12316_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent((((_12307_values).Select(_12318_i)).dtor__0).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_12319_typStr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12322_recIdents);
            _12316_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12316_s, (_12320_valueGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
          }
          DCOMPUTF16._IEnvironment _12323_newEnv;
          _12323_newEnv = DCOMPUTF16.Environment.create(_12308_paramNames, _12311_paramTypes);
          RAST._IExpr _12324_recGen;
          DCOMPUTF16._IOwnership _12325_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12326_recIdents;
          RAST._IExpr _out6783;
          DCOMPUTF16._IOwnership _out6784;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6785;
          DCOMPUTF16.COMP.GenExpr(_12305_expr, selfIdent, _12323_newEnv, expectedOwnership, out _out6783, out _out6784, out _out6785);
          _12324_recGen = _out6783;
          _12325_recOwned = _out6784;
          _12326_recIdents = _out6785;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_12326_recIdents, _12312_paramNamesSet);
          _12316_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12316_s, (_12324_recGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}"));
          r = RAST.Expr.create_RawExpr(_12316_s);
          RAST._IExpr _out6786;
          DCOMPUTF16._IOwnership _out6787;
          DCOMPUTF16.COMP.FromOwnership(r, _12325_recOwned, expectedOwnership, out _out6786, out _out6787);
          r = _out6786;
          resultingOwnership = _out6787;
          return ;
        }
      } else if (_source421.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _12327___mcc_h258 = _source421.dtor_name;
        DAST._IType _12328___mcc_h259 = _source421.dtor_typ;
        DAST._IExpression _12329___mcc_h260 = _source421.dtor_value;
        DAST._IExpression _12330___mcc_h261 = _source421.dtor_iifeBody;
        DAST._IExpression _12331_iifeBody = _12330___mcc_h261;
        DAST._IExpression _12332_value = _12329___mcc_h260;
        DAST._IType _12333_tpe = _12328___mcc_h259;
        Dafny.ISequence<Dafny.Rune> _12334_name = _12327___mcc_h258;
        {
          RAST._IExpr _12335_valueGen;
          DCOMPUTF16._IOwnership _12336___v144;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12337_recIdents;
          RAST._IExpr _out6788;
          DCOMPUTF16._IOwnership _out6789;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6790;
          DCOMPUTF16.COMP.GenExpr(_12332_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6788, out _out6789, out _out6790);
          _12335_valueGen = _out6788;
          _12336___v144 = _out6789;
          _12337_recIdents = _out6790;
          readIdents = _12337_recIdents;
          RAST._IType _12338_valueTypeGen;
          RAST._IType _out6791;
          _out6791 = DCOMPUTF16.COMP.GenType(_12333_tpe, false, true);
          _12338_valueTypeGen = _out6791;
          RAST._IExpr _12339_bodyGen;
          DCOMPUTF16._IOwnership _12340___v145;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12341_bodyIdents;
          RAST._IExpr _out6792;
          DCOMPUTF16._IOwnership _out6793;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6794;
          DCOMPUTF16.COMP.GenExpr(_12331_iifeBody, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6792, out _out6793, out _out6794);
          _12339_bodyGen = _out6792;
          _12340___v145 = _out6793;
          _12341_bodyIdents = _out6794;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_12341_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_12334_name))));
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet "), DCOMPUTF16.__default.escapeIdent((_12334_name))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_12338_valueTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (_12335_valueGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n")), (_12339_bodyGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}")));
          RAST._IExpr _out6795;
          DCOMPUTF16._IOwnership _out6796;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6795, out _out6796);
          r = _out6795;
          resultingOwnership = _out6796;
          return ;
        }
      } else if (_source421.is_Apply) {
        DAST._IExpression _12342___mcc_h262 = _source421.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _12343___mcc_h263 = _source421.dtor_args;
        Dafny.ISequence<DAST._IExpression> _12344_args = _12343___mcc_h263;
        DAST._IExpression _12345_func = _12342___mcc_h262;
        {
          RAST._IExpr _12346_funcExpr;
          DCOMPUTF16._IOwnership _12347___v146;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12348_recIdents;
          RAST._IExpr _out6797;
          DCOMPUTF16._IOwnership _out6798;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6799;
          DCOMPUTF16.COMP.GenExpr(_12345_func, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6797, out _out6798, out _out6799);
          _12346_funcExpr = _out6797;
          _12347___v146 = _out6798;
          _12348_recIdents = _out6799;
          readIdents = _12348_recIdents;
          Dafny.ISequence<Dafny.Rune> _12349_argString;
          _12349_argString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _12350_i;
          _12350_i = BigInteger.Zero;
          while ((_12350_i) < (new BigInteger((_12344_args).Count))) {
            if ((_12350_i).Sign == 1) {
              _12349_argString = Dafny.Sequence<Dafny.Rune>.Concat(_12349_argString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IExpr _12351_argExpr;
            DCOMPUTF16._IOwnership _12352_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12353_argIdents;
            RAST._IExpr _out6800;
            DCOMPUTF16._IOwnership _out6801;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6802;
            DCOMPUTF16.COMP.GenExpr((_12344_args).Select(_12350_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6800, out _out6801, out _out6802);
            _12351_argExpr = _out6800;
            _12352_argOwned = _out6801;
            _12353_argIdents = _out6802;
            Dafny.ISequence<Dafny.Rune> _12354_argExprString;
            _12354_argExprString = (_12351_argExpr)._ToString(DCOMPUTF16.__default.IND);
            if (object.Equals(_12352_argOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
              _12354_argExprString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _12354_argExprString);
            }
            _12349_argString = Dafny.Sequence<Dafny.Rune>.Concat(_12349_argString, _12354_argExprString);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12353_argIdents);
            _12350_i = (_12350_i) + (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_12346_funcExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _12349_argString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("))")));
          RAST._IExpr _out6803;
          DCOMPUTF16._IOwnership _out6804;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6803, out _out6804);
          r = _out6803;
          resultingOwnership = _out6804;
          return ;
        }
      } else if (_source421.is_TypeTest) {
        DAST._IExpression _12355___mcc_h264 = _source421.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12356___mcc_h265 = _source421.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _12357___mcc_h266 = _source421.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _12358_variant = _12357___mcc_h266;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12359_dType = _12356___mcc_h265;
        DAST._IExpression _12360_on = _12355___mcc_h264;
        {
          RAST._IExpr _12361_exprGen;
          DCOMPUTF16._IOwnership _12362___v147;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12363_recIdents;
          RAST._IExpr _out6805;
          DCOMPUTF16._IOwnership _out6806;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6807;
          DCOMPUTF16.COMP.GenExpr(_12360_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6805, out _out6806, out _out6807);
          _12361_exprGen = _out6805;
          _12362___v147 = _out6806;
          _12363_recIdents = _out6807;
          RAST._IType _12364_dTypePath;
          RAST._IType _out6808;
          _out6808 = DCOMPUTF16.COMP.GenPath(_12359_dType);
          _12364_dTypePath = _out6808;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_12361_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_12364_dTypePath).MSel(DCOMPUTF16.__default.escapeIdent(_12358_variant)))._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out6809;
          DCOMPUTF16._IOwnership _out6810;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6809, out _out6810);
          r = _out6809;
          resultingOwnership = _out6810;
          readIdents = _12363_recIdents;
          return ;
        }
      } else if (_source421.is_InitializationValue) {
        DAST._IType _12365___mcc_h267 = _source421.dtor_typ;
        DAST._IType _12366_typ = _12365___mcc_h267;
        {
          RAST._IType _12367_typExpr;
          RAST._IType _out6811;
          _out6811 = DCOMPUTF16.COMP.GenType(_12366_typ, false, false);
          _12367_typExpr = _out6811;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_12367_typExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          RAST._IExpr _out6812;
          DCOMPUTF16._IOwnership _out6813;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6812, out _out6813);
          r = _out6812;
          resultingOwnership = _out6813;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source421.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out6814;
          DCOMPUTF16._IOwnership _out6815;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6814, out _out6815);
          r = _out6814;
          resultingOwnership = _out6815;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source421.is_SetBoundedPool) {
        DAST._IExpression _12368___mcc_h268 = _source421.dtor_of;
        DAST._IExpression _12369_of = _12368___mcc_h268;
        {
          RAST._IExpr _12370_exprGen;
          DCOMPUTF16._IOwnership _12371___v148;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12372_recIdents;
          RAST._IExpr _out6816;
          DCOMPUTF16._IOwnership _out6817;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6818;
          DCOMPUTF16.COMP.GenExpr(_12369_of, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6816, out _out6817, out _out6818);
          _12370_exprGen = _out6816;
          _12371___v148 = _out6817;
          _12372_recIdents = _out6818;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12370_exprGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()")));
          RAST._IExpr _out6819;
          DCOMPUTF16._IOwnership _out6820;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6819, out _out6820);
          r = _out6819;
          resultingOwnership = _out6820;
          readIdents = _12372_recIdents;
          return ;
        }
      } else if (_source421.is_SeqBoundedPool) {
        DAST._IExpression _12373___mcc_h269 = _source421.dtor_of;
        bool _12374___mcc_h270 = _source421.dtor_includeDuplicates;
        bool _12375_includeDuplicates = _12374___mcc_h270;
        DAST._IExpression _12376_of = _12373___mcc_h269;
        {
          RAST._IExpr _12377_exprGen;
          DCOMPUTF16._IOwnership _12378___v149;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12379_recIdents;
          RAST._IExpr _out6821;
          DCOMPUTF16._IOwnership _out6822;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6823;
          DCOMPUTF16.COMP.GenExpr(_12376_of, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6821, out _out6822, out _out6823);
          _12377_exprGen = _out6821;
          _12378___v149 = _out6822;
          _12379_recIdents = _out6823;
          Dafny.ISequence<Dafny.Rune> _12380_s;
          _12380_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12377_exprGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()"));
          if (!(_12375_includeDuplicates)) {
            _12380_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::itertools::Itertools::unique("), _12380_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          }
          r = RAST.Expr.create_RawExpr(_12380_s);
          RAST._IExpr _out6824;
          DCOMPUTF16._IOwnership _out6825;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6824, out _out6825);
          r = _out6824;
          resultingOwnership = _out6825;
          readIdents = _12379_recIdents;
          return ;
        }
      } else {
        DAST._IExpression _12381___mcc_h271 = _source421.dtor_lo;
        DAST._IExpression _12382___mcc_h272 = _source421.dtor_hi;
        DAST._IExpression _12383_hi = _12382___mcc_h272;
        DAST._IExpression _12384_lo = _12381___mcc_h271;
        {
          RAST._IExpr _12385_lo;
          DCOMPUTF16._IOwnership _12386___v150;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12387_recIdentsLo;
          RAST._IExpr _out6826;
          DCOMPUTF16._IOwnership _out6827;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6828;
          DCOMPUTF16.COMP.GenExpr(_12384_lo, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6826, out _out6827, out _out6828);
          _12385_lo = _out6826;
          _12386___v150 = _out6827;
          _12387_recIdentsLo = _out6828;
          RAST._IExpr _12388_hi;
          DCOMPUTF16._IOwnership _12389___v151;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12390_recIdentsHi;
          RAST._IExpr _out6829;
          DCOMPUTF16._IOwnership _out6830;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6831;
          DCOMPUTF16.COMP.GenExpr(_12383_hi, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6829, out _out6830, out _out6831);
          _12388_hi = _out6829;
          _12389___v151 = _out6830;
          _12390_recIdentsHi = _out6831;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::integer_range("), (_12385_lo)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_12388_hi)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          RAST._IExpr _out6832;
          DCOMPUTF16._IOwnership _out6833;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6832, out _out6833);
          r = _out6832;
          resultingOwnership = _out6833;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_12387_recIdentsLo, _12390_recIdentsHi);
          return ;
        }
      }
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern crate dafny_runtime;\n"));
      BigInteger _12391_i;
      _12391_i = BigInteger.Zero;
      while ((_12391_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _12392_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _12393_m;
        RAST._IMod _out6834;
        _out6834 = DCOMPUTF16.COMP.GenModule((p).Select(_12391_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _12393_m = _out6834;
        _12392_generated = (_12393_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_12391_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _12392_generated);
        _12391_i = (_12391_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _12394_i;
      _12394_i = BigInteger.Zero;
      while ((_12394_i) < (new BigInteger((fullName).Count))) {
        if ((_12394_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMPUTF16.__default.escapeIdent((fullName).Select(_12394_i)));
        _12394_i = (_12394_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMPUTF16

